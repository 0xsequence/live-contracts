{
	"id": "d4b516f529d89c2ee02df9410280cb19",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"settings": {
			"remappings": [
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/",
				"@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/",
				"@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/",
				"@openzeppelin/=lib/openzeppelin/",
				"@uniswap/lib/=lib/uniswap-lib/",
				"0xsequence/=lib/0xsequence/",
				"openzeppelin/=lib/openzeppelin/",
				"uniswap-lib/=lib/uniswap-lib/contracts/"
			],
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"metadata": {
				"bytecodeHash": "ipfs",
				"appendCBOR": true
			},
			"outputSelection": {
				"*": {
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"devdoc",
						"userdoc",
						"metadata",
						"abi"
					]
				}
			},
			"evmVersion": "paris",
			"viaIR": true,
			"libraries": {}
		},
		"sources": {
			"contracts/SequenceMarket.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity 0.8.19;\r\n\r\nimport {ISequenceMarket} from \"./interfaces/ISequenceMarket.sol\";\r\nimport {IERC721} from \"./interfaces/IERC721.sol\";\r\nimport {IERC2981} from \"./interfaces/IERC2981.sol\";\r\nimport {IERC20} from \"@0xsequence/erc-1155/contracts/interfaces/IERC20.sol\";\r\nimport {IERC165} from \"@0xsequence/erc-1155/contracts/interfaces/IERC165.sol\";\r\nimport {IERC1155} from \"@0xsequence/erc-1155/contracts/interfaces/IERC1155.sol\";\r\nimport {TransferHelper} from \"@uniswap/lib/contracts/libraries/TransferHelper.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract SequenceMarket is ISequenceMarket, Ownable, ReentrancyGuard {\r\n  mapping(uint256 => Request) internal _requests;\r\n  mapping(address => CustomRoyalty) public customRoyalties;\r\n\r\n  uint256 private _nextRequestId;\r\n\r\n  constructor(address _owner) {\r\n    _transferOwnership(_owner);\r\n  }\r\n\r\n  /**\r\n   * Creates a request.\r\n   * @param request The request's details.\r\n   * @return requestId The ID of the request.\r\n   */\r\n  function createRequest(RequestParams calldata request) external nonReentrant returns (uint256 requestId) {\r\n    return _createRequest(request);\r\n  }\r\n\r\n  /**\r\n   * Creates requests.\r\n   * @param requests The requests' details.\r\n   * @return requestIds The IDs of the requests.\r\n   */\r\n  function createRequestBatch(RequestParams[] calldata requests) external nonReentrant returns (uint256[] memory requestIds) {\r\n    uint256 len = requests.length;\r\n    requestIds = new uint256[](len);\r\n    for (uint256 i; i < len; i++) {\r\n      requestIds[i] = _createRequest(requests[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Performs creation of a request.\r\n   * @param params The request's params.\r\n   * @return requestId The ID of the request.\r\n   */\r\n  function _createRequest(RequestParams calldata params) internal returns (uint256 requestId) {\r\n    uint256 quantity = params.quantity;\r\n    address tokenContract = params.tokenContract;\r\n\r\n    if (params.pricePerToken == 0) {\r\n      revert InvalidPrice();\r\n    }\r\n    // solhint-disable-next-line not-rely-on-time\r\n    if (params.expiry <= block.timestamp) {\r\n      revert InvalidExpiry();\r\n    }\r\n\r\n    // Check interfaces\r\n    _requireInterface(tokenContract, params.isERC1155 ? type(IERC1155).interfaceId : type(IERC721).interfaceId);\r\n    if (params.currency == address(0)) {\r\n      revert InvalidCurrency();\r\n    }\r\n\r\n    if (params.isListing) {\r\n      // Check valid token for listing\r\n      if (!_hasApprovedTokens(params.isERC1155, tokenContract, params.tokenId, quantity, msg.sender)) {\r\n        revert InvalidTokenApproval(tokenContract, params.tokenId, quantity, msg.sender);\r\n      }\r\n    } else {\r\n      // Check approved currency for offer inc royalty\r\n      uint256 total = quantity * params.pricePerToken;\r\n      (, uint256 royaltyAmount) = getRoyaltyInfo(tokenContract, params.tokenId, total);\r\n      total += royaltyAmount;\r\n      if (!_hasApprovedCurrency(params.currency, total, msg.sender)) {\r\n        revert InvalidCurrencyApproval(params.currency, total, msg.sender);\r\n      }\r\n      // Check quantity. Covered by _hasApprovedTokens for listings\r\n      if ((params.isERC1155 && quantity == 0) || (!params.isERC1155 && quantity != 1)) {\r\n        revert InvalidQuantity();\r\n      }\r\n    }\r\n\r\n    Request memory request = Request({\r\n      isListing: params.isListing,\r\n      isERC1155: params.isERC1155,\r\n      creator: msg.sender,\r\n      tokenContract: tokenContract,\r\n      tokenId: params.tokenId,\r\n      quantity: quantity,\r\n      currency: params.currency,\r\n      pricePerToken: params.pricePerToken,\r\n      expiry: params.expiry\r\n    });\r\n\r\n    requestId = uint256(_nextRequestId);\r\n    _nextRequestId++;\r\n    _requests[requestId] = request;\r\n\r\n    emit RequestCreated(\r\n      requestId,\r\n      msg.sender,\r\n      tokenContract,\r\n      request.tokenId,\r\n      request.isListing,\r\n      quantity,\r\n      request.currency,\r\n      request.pricePerToken,\r\n      request.expiry\r\n      );\r\n\r\n    return requestId;\r\n  }\r\n\r\n  /**\r\n   * Accepts a request.\r\n   * @param requestId The ID of the request.\r\n   * @param quantity The quantity of tokens to accept.\r\n   * @param recipient The recipient of the accepted tokens.\r\n   * @param additionalFees The additional fees to pay.\r\n   * @param additionalFeeRecipients The addresses to send the additional fees to.\r\n   */\r\n  function acceptRequest(\r\n    uint256 requestId,\r\n    uint256 quantity,\r\n    address recipient,\r\n    uint256[] calldata additionalFees,\r\n    address[] calldata additionalFeeRecipients\r\n  )\r\n    external\r\n    nonReentrant\r\n  {\r\n    _acceptRequest(requestId, quantity, recipient, additionalFees, additionalFeeRecipients);\r\n  }\r\n\r\n  /**\r\n   * Accepts requests.\r\n   * @param requestIds The IDs of the requests.\r\n   * @param quantities The quantities of tokens to accept.\r\n   * @param recipients The recipients of the accepted tokens.\r\n   * @param additionalFees The additional fees to pay.\r\n   * @param additionalFeeRecipients The addresses to send the additional fees to.\r\n   * @dev Additional fees are applied to each request.\r\n   */\r\n  function acceptRequestBatch(\r\n    uint256[] calldata requestIds,\r\n    uint256[] calldata quantities,\r\n    address[] calldata recipients,\r\n    uint256[] calldata additionalFees,\r\n    address[] calldata additionalFeeRecipients\r\n  )\r\n    external\r\n    nonReentrant\r\n  {\r\n    uint256 len = requestIds.length;\r\n    if (len != quantities.length || len != recipients.length) {\r\n      revert InvalidBatchRequest();\r\n    }\r\n\r\n    for (uint256 i; i < len; i++) {\r\n      _acceptRequest(requestIds[i], quantities[i], recipients[i], additionalFees, additionalFeeRecipients);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Performs acceptance of a request.\r\n   * @param requestId The ID of the request.\r\n   * @param quantity The quantity of tokens to accept.\r\n   * @param recipient The recipient of the accepted tokens.\r\n   * @param additionalFees The additional fees to pay.\r\n   * @param additionalFeeRecipients The addresses to send the additional fees to.\r\n   */\r\n  function _acceptRequest(\r\n    uint256 requestId,\r\n    uint256 quantity,\r\n    address recipient,\r\n    uint256[] calldata additionalFees,\r\n    address[] calldata additionalFeeRecipients\r\n  )\r\n    internal\r\n  {\r\n    Request memory request = _requests[requestId];\r\n    if (request.creator == address(0)) {\r\n      // Request cancelled, completed or never existed\r\n      revert InvalidRequestId(requestId);\r\n    }\r\n    if (quantity == 0 || quantity > request.quantity) {\r\n      revert InvalidQuantity();\r\n    }\r\n    if (_isExpired(request)) {\r\n      revert InvalidExpiry();\r\n    }\r\n    if (additionalFees.length != additionalFeeRecipients.length) {\r\n      revert InvalidAdditionalFees();\r\n    }\r\n\r\n    // Update request state\r\n    if (request.quantity == quantity) {\r\n      // Refund some gas\r\n      delete _requests[requestId];\r\n    } else {\r\n      _requests[requestId].quantity -= quantity;\r\n    }\r\n    address tokenContract = request.tokenContract;\r\n\r\n    // Calculate payables\r\n    uint256 remainingCost = request.pricePerToken * quantity;\r\n    (address royaltyRecipient, uint256 royaltyAmount) = getRoyaltyInfo(tokenContract, request.tokenId, remainingCost);\r\n\r\n    address currencySender;\r\n    address currencyRecipient;\r\n    address tokenSender;\r\n    address tokenRecipient;\r\n    if (request.isListing) {\r\n      currencySender = msg.sender;\r\n      currencyRecipient = request.creator;\r\n      tokenSender = request.creator;\r\n      tokenRecipient = recipient;\r\n    } else {\r\n      currencySender = request.creator;\r\n      currencyRecipient = recipient;\r\n      tokenSender = msg.sender;\r\n      tokenRecipient = request.creator;\r\n    }\r\n\r\n    if (royaltyAmount > 0) {\r\n      if (request.isListing) {\r\n        // Royalties are paid by the maker. This reduces the cost for listings.\r\n        // Underflow prevents fees > cost\r\n        remainingCost -= royaltyAmount;\r\n      } else if (royaltyAmount > remainingCost) {\r\n        // Royalty cannot exceed cost\r\n        revert InvalidRoyalty();\r\n      }\r\n      // Transfer royalties\r\n      TransferHelper.safeTransferFrom(request.currency, currencySender, royaltyRecipient, royaltyAmount);\r\n    }\r\n\r\n    // Transfer additional fees\r\n    uint256 totalFees;\r\n    for (uint256 i; i < additionalFees.length; i++) {\r\n      uint256 fee = additionalFees[i];\r\n      address feeRecipient = additionalFeeRecipients[i];\r\n      if (feeRecipient == address(0) || fee == 0) {\r\n        revert InvalidAdditionalFees();\r\n      }\r\n      totalFees += fee;\r\n      TransferHelper.safeTransferFrom(request.currency, currencySender, feeRecipient, fee);\r\n    }\r\n    if (!request.isListing) {\r\n      // Fees are paid by the taker. This reduces the cost for offers.\r\n      // Underflow prevents fees > cost\r\n      remainingCost -= totalFees;\r\n    } else if (totalFees > remainingCost) {\r\n      // Fees cannot exceed cost - royalties\r\n      revert InvalidAdditionalFees();\r\n    }\r\n\r\n    // Transfer currency\r\n    TransferHelper.safeTransferFrom(request.currency, currencySender, currencyRecipient, remainingCost);\r\n\r\n    // Transfer token\r\n    if (request.isERC1155) {\r\n      IERC1155(tokenContract).safeTransferFrom(tokenSender, tokenRecipient, request.tokenId, quantity, \"\");\r\n    } else {\r\n      IERC721(tokenContract).safeTransferFrom(tokenSender, tokenRecipient, request.tokenId);\r\n    }\r\n\r\n    emit RequestAccepted(requestId, msg.sender, tokenContract, recipient, quantity, _requests[requestId].quantity);\r\n  }\r\n\r\n  /**\r\n   * Cancels a request.\r\n   * @param requestId The ID of the request.\r\n   */\r\n  function cancelRequest(uint256 requestId) external nonReentrant {\r\n    _cancelRequest(requestId);\r\n  }\r\n\r\n  /**\r\n   * Cancels requests.\r\n   * @param requestIds The IDs of the requests.\r\n   */\r\n  function cancelRequestBatch(uint256[] calldata requestIds) external nonReentrant {\r\n    for (uint256 i; i < requestIds.length; i++) {\r\n      _cancelRequest(requestIds[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Performs cancellation of a request.\r\n   * @param requestId The ID of the request.\r\n   */\r\n  function _cancelRequest(uint256 requestId) internal {\r\n    Request storage request = _requests[requestId];\r\n    if (request.creator != msg.sender) {\r\n      revert InvalidRequestId(requestId);\r\n    }\r\n    address tokenContract = request.tokenContract;\r\n\r\n    // Refund some gas\r\n    delete _requests[requestId];\r\n\r\n    emit RequestCancelled(requestId, tokenContract);\r\n  }\r\n\r\n  /**\r\n   * Gets a request.\r\n   * @param requestId The ID of the request.\r\n   * @return request The request.\r\n   */\r\n  function getRequest(uint256 requestId) external view returns (Request memory request) {\r\n    return _requests[requestId];\r\n  }\r\n\r\n  /**\r\n   * Gets requests.\r\n   * @param requestIds The IDs of the requests.\r\n   * @return requests The requests.\r\n   */\r\n  function getRequestBatch(uint256[] calldata requestIds) external view returns (Request[] memory requests) {\r\n    uint256 len = requestIds.length;\r\n    requests = new Request[](len);\r\n    for (uint256 i; i < len; i++) {\r\n      requests[i] = _requests[requestIds[i]];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if a request is valid.\r\n   * @param requestId The ID of the request.\r\n   * @param quantity The amount of tokens to exchange. 0 is assumed to be the request's available quantity.\r\n   * @return valid The validity of the request.\r\n   * @return request The request.\r\n   * @notice A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable.\r\n   */\r\n  function isRequestValid(uint256 requestId, uint256 quantity) public view returns (bool valid, Request memory request) {\r\n    request = _requests[requestId];\r\n    if (quantity == 0) {\r\n      // 0 is assumed to be max quantity\r\n      quantity = request.quantity;\r\n    }\r\n    valid = request.creator != address(0) && !_isExpired(request) && quantity <= request.quantity;\r\n    if (valid) {\r\n      if (request.isListing) {\r\n        valid = _hasApprovedTokens(request.isERC1155, request.tokenContract, request.tokenId, quantity, request.creator);\r\n      } else {\r\n        // Add royalty\r\n        uint256 cost = request.pricePerToken * quantity;\r\n        (, uint256 royaltyAmount) = getRoyaltyInfo(request.tokenContract, request.tokenId, cost);\r\n        valid = _hasApprovedCurrency(request.currency, cost + royaltyAmount, request.creator);\r\n      }\r\n    }\r\n    return (valid, request);\r\n  }\r\n\r\n  /**\r\n   * Checks if requests are valid.\r\n   * @param requestIds The IDs of the requests.\r\n   * @param quantities The amount of tokens to exchange per request. 0 is assumed to be the request's available quantity.\r\n   * @return valid The validities of the requests.\r\n   * @return requests The requests.\r\n   * @notice A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable.\r\n   */\r\n  function isRequestValidBatch(uint256[] calldata requestIds, uint256[] calldata quantities)\r\n    external\r\n    view\r\n    returns (bool[] memory valid, Request[] memory requests)\r\n  {\r\n    uint256 len = requestIds.length;\r\n    if (len != quantities.length) {\r\n      revert InvalidBatchRequest();\r\n    }\r\n    valid = new bool[](len);\r\n    requests = new Request[](len);\r\n    for (uint256 i; i < len; i++) {\r\n      (valid[i], requests[i]) = isRequestValid(requestIds[i], quantities[i]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Checks if a request has expired.\r\n   * @param request The request to check.\r\n   * @return isExpired True if the request has expired.\r\n   */\r\n  function _isExpired(Request memory request) internal view returns (bool isExpired) {\r\n    // solhint-disable-next-line not-rely-on-time\r\n    return request.expiry <= block.timestamp;\r\n  }\r\n\r\n  /**\r\n   * Will set the royalties fees and recipient for contracts that don't support ERC-2981.\r\n   * @param tokenContract The contract the custom royalties apply to.\r\n   * @param recipient Address to send the royalties to.\r\n   * @param fee Fee percentage with a 10000 basis (e.g. 0.3% is 30 and 1% is 100 and 100% is 10000).\r\n   * @dev Can only be called by the owner.\r\n   * @notice This can be called even when the contract supports ERC-2891, but will be ignored if it does.\r\n   */\r\n  function setRoyaltyInfo(address tokenContract, address recipient, uint96 fee) public onlyOwner {\r\n    if (fee > 10000) {\r\n      revert InvalidRoyalty();\r\n    }\r\n    customRoyalties[tokenContract] = CustomRoyalty(recipient, fee);\r\n    emit CustomRoyaltyChanged(tokenContract, recipient, fee);\r\n  }\r\n\r\n  /**\r\n   * Returns the royalty details for the given token and cost.\r\n   * @param tokenContract Address of the token being traded.\r\n   * @param tokenId The ID of the token.\r\n   * @param cost Amount of currency sent/received for the trade.\r\n   * @return recipient Address to send royalties to.\r\n   * @return royalty Amount of currency to be paid as royalties.\r\n   */\r\n  function getRoyaltyInfo(address tokenContract, uint256 tokenId, uint256 cost)\r\n    public\r\n    view\r\n    returns (address recipient, uint256 royalty)\r\n  {\r\n    try IERC2981(address(tokenContract)).royaltyInfo(tokenId, cost) returns (address _r, uint256 _c) {\r\n      return (_r, _c);\r\n    } catch {} // solhint-disable-line no-empty-blocks\r\n\r\n    // Fail over to custom royalty\r\n    CustomRoyalty memory customRoyalty = customRoyalties[tokenContract];\r\n    return (customRoyalty.recipient, customRoyalty.fee * cost / 10000);\r\n  }\r\n\r\n  /**\r\n   * Checks if the amount of currency is approved for transfer exceeds the given amount.\r\n   * @param currency The address of the currency.\r\n   * @param amount The amount of currency.\r\n   * @param who The address of the owner of the currency.\r\n   * @return isValid True if the amount of currency is sufficient and approved for transfer.\r\n   */\r\n  function _hasApprovedCurrency(address currency, uint256 amount, address who) internal view returns (bool isValid) {\r\n    return IERC20(currency).balanceOf(who) >= amount && IERC20(currency).allowance(who, address(this)) >= amount;\r\n  }\r\n\r\n  /**\r\n   * Checks if a token contract is ERC1155 or ERC721 and if the token is owned and approved for transfer.\r\n   * @param isERC1155 True if the token is an ERC1155 token, false if it is an ERC721 token.\r\n   * @param tokenContract The address of the token contract.\r\n   * @param tokenId The ID of the token.\r\n   * @param quantity The quantity of tokens to list.\r\n   * @param who The address of the owner of the token.\r\n   * @return isValid True if the token is owned and approved for transfer.\r\n   * @dev Returns false if the token contract is not ERC1155 or ERC721.\r\n   */\r\n  function _hasApprovedTokens(bool isERC1155, address tokenContract, uint256 tokenId, uint256 quantity, address who)\r\n    internal\r\n    view\r\n    returns (bool isValid)\r\n  {\r\n    address market = address(this);\r\n\r\n    if (isERC1155) {\r\n      // ERC1155\r\n      return quantity > 0 && IERC1155(tokenContract).balanceOf(who, tokenId) >= quantity\r\n        && IERC1155(tokenContract).isApprovedForAll(who, market);\r\n    }\r\n\r\n    // ERC721\r\n    address tokenOwner;\r\n    address operator;\r\n\r\n    try IERC721(tokenContract).ownerOf(tokenId) returns (address _tokenOwner) {\r\n      tokenOwner = _tokenOwner;\r\n\r\n      try IERC721(tokenContract).getApproved(tokenId) returns (address _operator) {\r\n        operator = _operator;\r\n      } catch {} // solhint-disable-line no-empty-blocks\r\n    } catch {} // solhint-disable-line no-empty-blocks\r\n\r\n    return quantity == 1 && who == tokenOwner\r\n      && (operator == market || IERC721(tokenContract).isApprovedForAll(who, market));\r\n  }\r\n\r\n  /**\r\n   * Checks if a contract implements an interface.\r\n   * @param contractAddress The address of the contract.\r\n   * @param interfaceId The interface ID.\r\n   * @dev Reverts if the contract does not implement the interface.\r\n   */\r\n  function _requireInterface(address contractAddress, bytes4 interfaceId) internal view {\r\n    if (contractAddress.code.length != 0) {\r\n      try IERC165(contractAddress).supportsInterface(interfaceId) returns (bool supported) {\r\n        if (supported) {\r\n          // Success\r\n          return;\r\n        }\r\n      } catch {}\r\n    }\r\n    // Fail over\r\n    revert UnsupportedContractInterface(contractAddress, interfaceId);\r\n  }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        _nonReentrantBefore();\r\n        _;\r\n        _nonReentrantAfter();\r\n    }\r\n\r\n    function _nonReentrantBefore() private {\r\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n    }\r\n\r\n    function _nonReentrantAfter() private {\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\r\n     * `nonReentrant` function in the call stack.\r\n     */\r\n    function _reentrancyGuardEntered() internal view returns (bool) {\r\n        return _status == _ENTERED;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"lib/uniswap-lib/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\r\n\r\npragma solidity >=0.6.0;\r\n\r\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\r\nlibrary TransferHelper {\r\n    function safeApprove(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            'TransferHelper::safeApprove: approve failed'\r\n        );\r\n    }\r\n\r\n    function safeTransfer(\r\n        address token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            'TransferHelper::safeTransfer: transfer failed'\r\n        );\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        address token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\r\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\r\n        require(\r\n            success && (data.length == 0 || abi.decode(data, (bool))),\r\n            'TransferHelper::transferFrom: transferFrom failed'\r\n        );\r\n    }\r\n\r\n    function safeTransferETH(address to, uint256 value) internal {\r\n        (bool success, ) = to.call{value: value}(new bytes(0));\r\n        require(success, 'TransferHelper::safeTransferETH: ETH transfer failed');\r\n    }\r\n}\r\n"
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\nimport './IERC165.sol';\r\n\r\n\r\ninterface IERC1155 is IERC165 {\r\n\r\n  /****************************************|\r\n  |                 Events                 |\r\n  |_______________________________________*/\r\n\r\n  /**\r\n   * @dev Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning\r\n   *   Operator MUST be msg.sender\r\n   *   When minting/creating tokens, the `_from` field MUST be set to `0x0`\r\n   *   When burning/destroying tokens, the `_to` field MUST be set to `0x0`\r\n   *   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID\r\n   *   To broadcast the existence of a token ID with no initial balance, the contract SHOULD emit the TransferSingle event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\r\n   */\r\n  event TransferSingle(address indexed _operator, address indexed _from, address indexed _to, uint256 _id, uint256 _amount);\r\n\r\n  /**\r\n   * @dev Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning\r\n   *   Operator MUST be msg.sender\r\n   *   When minting/creating tokens, the `_from` field MUST be set to `0x0`\r\n   *   When burning/destroying tokens, the `_to` field MUST be set to `0x0`\r\n   *   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID\r\n   *   To broadcast the existence of multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\r\n   */\r\n  event TransferBatch(address indexed _operator, address indexed _from, address indexed _to, uint256[] _ids, uint256[] _amounts);\r\n\r\n  /**\r\n   * @dev MUST emit when an approval is updated\r\n   */\r\n  event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\r\n\r\n\r\n  /****************************************|\r\n  |                Functions               |\r\n  |_______________________________________*/\r\n\r\n  /**\r\n    * @notice Transfers amount of an _id from the _from address to the _to address specified\r\n    * @dev MUST emit TransferSingle event on success\r\n    * Caller must be approved to manage the _from account's tokens (see isApprovedForAll)\r\n    * MUST throw if `_to` is the zero address\r\n    * MUST throw if balance of sender for token `_id` is lower than the `_amount` sent\r\n    * MUST throw on any other error\r\n    * When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155Received` on `_to` and revert if the return amount is not `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n    * @param _from    Source address\r\n    * @param _to      Target address\r\n    * @param _id      ID of the token type\r\n    * @param _amount  Transfered amount\r\n    * @param _data    Additional data with no specified format, sent in call to `_to`\r\n    */\r\n  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _amount, bytes calldata _data) external;\r\n\r\n  /**\r\n    * @notice Send multiple types of Tokens from the _from address to the _to address (with safety call)\r\n    * @dev MUST emit TransferBatch event on success\r\n    * Caller must be approved to manage the _from account's tokens (see isApprovedForAll)\r\n    * MUST throw if `_to` is the zero address\r\n    * MUST throw if length of `_ids` is not the same as length of `_amounts`\r\n    * MUST throw if any of the balance of sender for token `_ids` is lower than the respective `_amounts` sent\r\n    * MUST throw on any other error\r\n    * When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155BatchReceived` on `_to` and revert if the return amount is not `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n    * Transfers and events MUST occur in the array order they were submitted (_ids[0] before _ids[1], etc)\r\n    * @param _from     Source addresses\r\n    * @param _to       Target addresses\r\n    * @param _ids      IDs of each token type\r\n    * @param _amounts  Transfer amounts per token type\r\n    * @param _data     Additional data with no specified format, sent in call to `_to`\r\n  */\r\n  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _amounts, bytes calldata _data) external;\r\n\r\n  /**\r\n   * @notice Get the balance of an account's Tokens\r\n   * @param _owner  The address of the token holder\r\n   * @param _id     ID of the Token\r\n   * @return        The _owner's balance of the Token type requested\r\n   */\r\n  function balanceOf(address _owner, uint256 _id) external view returns (uint256);\r\n\r\n  /**\r\n   * @notice Get the balance of multiple account/token pairs\r\n   * @param _owners The addresses of the token holders\r\n   * @param _ids    ID of the Tokens\r\n   * @return        The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\r\n   */\r\n  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory);\r\n\r\n  /**\r\n   * @notice Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens\r\n   * @dev MUST emit the ApprovalForAll event on success\r\n   * @param _operator  Address to add to the set of authorized operators\r\n   * @param _approved  True if the operator is approved, false to revoke approval\r\n   */\r\n  function setApprovalForAll(address _operator, bool _approved) external;\r\n\r\n  /**\r\n   * @notice Queries the approval status of an operator for a given owner\r\n   * @param _owner     The owner of the Tokens\r\n   * @param _operator  Address of authorized operator\r\n   * @return isOperator True if the operator is approved, false if not\r\n   */\r\n  function isApprovedForAll(address _owner, address _operator) external view returns (bool isOperator);\r\n}\r\n"
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @title ERC165\r\n * @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\r\n */\r\ninterface IERC165 {\r\n\r\n    /**\r\n     * @notice Query if a contract implements an interface\r\n     * @dev Interface identification is specified in ERC-165. This function\r\n     * uses less than 30,000 gas\r\n     * @param _interfaceId The interface identifier, as specified in ERC-165\r\n     */\r\n    function supportsInterface(bytes4 _interfaceId)\r\n    external\r\n    view\r\n    returns (bool);\r\n}\r\n"
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @title ERC20 interface\r\n * @dev see https://eips.ethereum.org/EIPS/eip-20\r\n */\r\ninterface IERC20 {\r\n  function transfer(address to, uint256 value) external returns (bool);\r\n  function approve(address spender, uint256 value) external returns (bool);\r\n  function transferFrom(address from, address to, uint256 value) external returns (bool);\r\n  function totalSupply() external view returns (uint256);\r\n  function balanceOf(address who) external view returns (uint256);\r\n  function allowance(address owner, address spender) external view returns (uint256);\r\n  event Transfer(address indexed from, address indexed to, uint256 value);\r\n  event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			},
			"contracts/interfaces/IERC2981.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity 0.8.19;\r\n\r\nimport {IERC165} from \"@0xsequence/erc-1155/contracts/interfaces/IERC165.sol\";\r\n\r\n/**\r\n * @dev Interface for the NFT Royalty Standard\r\n */\r\ninterface IERC2981 is IERC165 {\r\n  /**\r\n   * @notice Called with the sale price to determine how much royalty\r\n   * is owed and to whom.\r\n   * @param _tokenId - the NFT asset queried for royalty information\r\n   * @param _salePrice - the sale price of the NFT asset specified by _tokenId\r\n   * @return receipient - address of who should be sent the royalty payment\r\n   * @return royaltyAmount - the royalty payment amount for _salePrice\r\n   */\r\n  function royaltyInfo(uint256 _tokenId, uint256 _salePrice)\r\n    external\r\n    view\r\n    returns (address receipient, uint256 royaltyAmount);\r\n}\r\n"
			},
			"contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity 0.8.19;\r\n\r\ninterface IERC721 {\r\n  event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\r\n  event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\r\n  event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\r\n\r\n  function balanceOf(address _owner) external view returns (uint256 balance);\r\n  function ownerOf(uint256 _tokenId) external view returns (address owner);\r\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId) external;\r\n  function transferFrom(address _from, address _to, uint256 _tokenId) external;\r\n  function approve(address _to, uint256 _tokenId) external;\r\n  function getApproved(uint256 _tokenId) external view returns (address operator);\r\n  function setApprovalForAll(address _operator, bool _approved) external;\r\n  function isApprovedForAll(address _owner, address _operator) external view returns (bool);\r\n  function safeTransferFrom(address _from, address _to, uint256 _tokenId, bytes calldata _data) external;\r\n}\r\n"
			},
			"contracts/interfaces/ISequenceMarket.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity 0.8.19;\r\n\r\ninterface ISequenceMarketStorage {\r\n  /**\r\n   * Request parameters.\r\n   * @param isListing True if the request is a listing, false if it is an offer.\r\n   * @param isERC1155 True if the token is an ERC1155 token, false if it is an ERC721 token.\r\n   * @param tokenContract The address of the token contract.\r\n   * @param tokenId The ID of the token.\r\n   * @param quantity The quantity of tokens.\r\n   * @param expiry The expiry of the request.\r\n   * @param currency The address of the currency.\r\n   * @param pricePerToken The price per token, including royalty fees.\r\n   */\r\n  struct RequestParams {\r\n    bool isListing; // True if the request is a listing, false if it is an offer.\r\n    bool isERC1155; // True if the token is an ERC1155 token, false if it is an ERC721 token.\r\n    address tokenContract;\r\n    uint256 tokenId;\r\n    uint256 quantity;\r\n    uint96 expiry;\r\n    address currency;\r\n    uint256 pricePerToken;\r\n  }\r\n\r\n  /**\r\n   * Request storage.\r\n   * @param creator The address of the request creator.\r\n   * @param isListing True if the request is a listing, false if it is an offer.\r\n   * @param isERC1155 True if the token is an ERC1155 token, false if it is an ERC721 token.\r\n   * @param tokenContract The address of the token contract.\r\n   * @param tokenId The ID of the token.\r\n   * @param quantity The quantity of tokens.\r\n   * @param expiry The expiry of the request.\r\n   * @param currency The address of the currency.\r\n   * @param pricePerToken The price per token, including royalty fees.\r\n   */\r\n  struct Request {\r\n    address creator;\r\n    bool isListing;\r\n    bool isERC1155;\r\n    address tokenContract;\r\n    uint256 tokenId;\r\n    uint256 quantity;\r\n    uint96 expiry;\r\n    address currency;\r\n    uint256 pricePerToken;\r\n  }\r\n\r\n  /**\r\n   * Custom royalty parameters.\r\n   * @param recipient Address to send the fees to.\r\n   * @param fee Fee percentage with a 10000 basis (e.g. 0.3% is 30 and 1% is 100 and 100% is 10000).\r\n   * @dev Used to store custom royalty settings for contracts do not support ERC2981.\r\n   */\r\n  struct CustomRoyalty {\r\n    address recipient;\r\n    uint96 fee;\r\n  }\r\n}\r\n\r\ninterface ISequenceMarketFunctions is ISequenceMarketStorage {\r\n  /**\r\n   * Creates a request.\r\n   * @param request The request's details.\r\n   * @return requestId The ID of the request.\r\n   * @notice A listing is when the maker is selling tokens for currency.\r\n   * @notice An offer is when the maker is buying tokens with currency.\r\n   */\r\n  function createRequest(RequestParams calldata request) external returns (uint256 requestId);\r\n\r\n  /**\r\n   * Creates requests.\r\n   * @param requests The requests' details.\r\n   * @return requestIds The IDs of the requests.\r\n   */\r\n  function createRequestBatch(RequestParams[] calldata requests) external returns (uint256[] memory requestIds);\r\n\r\n  /**\r\n   * Accepts a request.\r\n   * @param requestId The ID of the request.\r\n   * @param quantity The quantity of tokens to accept.\r\n   * @param recipient The recipient of the accepted tokens.\r\n   * @param additionalFees The additional fees to pay.\r\n   * @param additionalFeeRecipients The addresses to send the additional fees to.\r\n   */\r\n  function acceptRequest(\r\n    uint256 requestId,\r\n    uint256 quantity,\r\n    address recipient,\r\n    uint256[] calldata additionalFees,\r\n    address[] calldata additionalFeeRecipients\r\n  )\r\n    external;\r\n\r\n  /**\r\n   * Accepts requests.\r\n   * @param requestIds The IDs of the requests.\r\n   * @param quantities The quantities of tokens to accept.\r\n   * @param recipients The recipients of the accepted tokens.\r\n   * @param additionalFees The additional fees to pay.\r\n   * @param additionalFeeRecipients The addresses to send the additional fees to.\r\n   * @dev Additional fees are applied to each request.\r\n   */\r\n  function acceptRequestBatch(\r\n    uint256[] calldata requestIds,\r\n    uint256[] calldata quantities,\r\n    address[] calldata recipients,\r\n    uint256[] calldata additionalFees,\r\n    address[] calldata additionalFeeRecipients\r\n  )\r\n    external;\r\n\r\n  /**\r\n   * Cancels a request.\r\n   * @param requestId The ID of the request.\r\n   */\r\n  function cancelRequest(uint256 requestId) external;\r\n\r\n  /**\r\n   * Cancels requests.\r\n   * @param requestIds The IDs of the requests.\r\n   */\r\n  function cancelRequestBatch(uint256[] calldata requestIds) external;\r\n\r\n  /**\r\n   * Gets a request.\r\n   * @param requestId The ID of the request.\r\n   * @return request The request.\r\n   */\r\n  function getRequest(uint256 requestId) external view returns (Request memory request);\r\n\r\n  /**\r\n   * Gets requests.\r\n   * @param requestIds The IDs of the requests.\r\n   * @return requests The requests.\r\n   */\r\n  function getRequestBatch(uint256[] calldata requestIds) external view returns (Request[] memory requests);\r\n\r\n  /**\r\n   * Checks if a request is valid.\r\n   * @param requestId The ID of the request.\r\n   * @param quantity The amount of tokens to exchange. 0 is assumed to be the request's available quantity.\r\n   * @return valid The validity of the request.\r\n   * @return request The request.\r\n   * @notice A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable.\r\n   */\r\n  function isRequestValid(uint256 requestId, uint256 quantity) external view returns (bool valid, Request memory request);\r\n\r\n  /**\r\n   * Checks if requests are valid.\r\n   * @param requestIds The IDs of the requests.\r\n   * @param quantities The amount of tokens to exchange per request. 0 is assumed to be the request's available quantity.\r\n   * @return valid The validities of the requests.\r\n   * @return requests The requests.\r\n   * @notice A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable.\r\n   */\r\n  function isRequestValidBatch(uint256[] calldata requestIds, uint256[] calldata quantities)\r\n    external\r\n    view\r\n    returns (bool[] memory valid, Request[] memory requests);\r\n\r\n  /**\r\n   * Returns the royalty details for the given token and cost.\r\n   * @param tokenContract Address of the token being traded.\r\n   * @param tokenId The ID of the token.\r\n   * @param cost Amount of currency sent/received for the trade.\r\n   * @return recipient Address to send royalties to.\r\n   * @return royalty Amount of currency to be paid as royalties.\r\n   */\r\n  function getRoyaltyInfo(address tokenContract, uint256 tokenId, uint256 cost)\r\n    external\r\n    view\r\n    returns (address recipient, uint256 royalty);\r\n}\r\n\r\ninterface ISequenceMarketSignals {\r\n  //\r\n  // Events\r\n  //\r\n\r\n  /// Emitted when a request is created.\r\n  event RequestCreated(\r\n    uint256 indexed requestId,\r\n    address indexed creator,\r\n    address indexed tokenContract,\r\n    uint256 tokenId,\r\n    bool isListing,\r\n    uint256 quantity,\r\n    address currency,\r\n    uint256 pricePerToken,\r\n    uint256 expiry\r\n  );\r\n\r\n  /// Emitted when a request is accepted.\r\n  event RequestAccepted(\r\n    uint256 indexed requestId,\r\n    address indexed buyer,\r\n    address indexed tokenContract,\r\n    address recipient,\r\n    uint256 quantity,\r\n    uint256 quantityRemaining\r\n  );\r\n\r\n  /// Emitted when a request is cancelled.\r\n  event RequestCancelled(uint256 indexed requestId, address indexed tokenContract);\r\n\r\n  /// Emitted when custom royalty settings are changed.\r\n  event CustomRoyaltyChanged(address indexed tokenContract, address recipient, uint96 fee);\r\n\r\n  //\r\n  // Errors\r\n  //\r\n\r\n  /// Thrown when the contract address does not support the required interface.\r\n  error UnsupportedContractInterface(address contractAddress, bytes4 interfaceId);\r\n\r\n  /// Thrown when the token approval is invalid.\r\n  error InvalidTokenApproval(address tokenContract, uint256 tokenId, uint256 quantity, address owner);\r\n\r\n  /// Thrown when the currency address is invalid.\r\n  error InvalidCurrency();\r\n\r\n  /// Thrown when the currency approval is invalid.\r\n  error InvalidCurrencyApproval(address currency, uint256 quantity, address owner);\r\n\r\n  /// Thrown when request id is invalid.\r\n  error InvalidRequestId(uint256 requestId);\r\n\r\n  /// Thrown when the parameters of a batch accept request are invalid.\r\n  error InvalidBatchRequest();\r\n\r\n  /// Thrown when quantity is invalid.\r\n  error InvalidQuantity();\r\n\r\n  /// Thrown when price is invalid.\r\n  error InvalidPrice();\r\n\r\n  /// Thrown when royalty is invalid.\r\n  error InvalidRoyalty();\r\n\r\n  /// Thrown when expiry is invalid.\r\n  error InvalidExpiry();\r\n\r\n  /// Thrown when the additional fees are invalid.\r\n  error InvalidAdditionalFees();\r\n}\r\n\r\n// solhint-disable-next-line no-empty-blocks\r\ninterface ISequenceMarket is ISequenceMarketFunctions, ISequenceMarketSignals {}\r\n"
			},
			"lib/openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n\r\n    function _contextSuffixLength() internal view virtual returns (uint256) {\r\n        return 0;\r\n    }\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/SequenceMarket.sol": {
				"SequenceMarket": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "InvalidAdditionalFees",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidBatchRequest",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCurrency",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "InvalidCurrencyApproval",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidExpiry",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPrice",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQuantity",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "InvalidRequestId",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "InvalidTokenApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "UnsupportedContractInterface",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "fee",
									"type": "uint96"
								}
							],
							"name": "CustomRoyaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantityRemaining",
									"type": "uint256"
								}
							],
							"name": "RequestAccepted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								}
							],
							"name": "RequestCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isListing",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pricePerToken",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								}
							],
							"name": "RequestCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "additionalFees",
									"type": "uint256[]"
								},
								{
									"internalType": "address[]",
									"name": "additionalFeeRecipients",
									"type": "address[]"
								}
							],
							"name": "acceptRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "quantities",
									"type": "uint256[]"
								},
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "additionalFees",
									"type": "uint256[]"
								},
								{
									"internalType": "address[]",
									"name": "additionalFeeRecipients",
									"type": "address[]"
								}
							],
							"name": "acceptRequestBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "cancelRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								}
							],
							"name": "cancelRequestBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.RequestParams",
									"name": "request",
									"type": "tuple"
								}
							],
							"name": "createRequest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.RequestParams[]",
									"name": "requests",
									"type": "tuple[]"
								}
							],
							"name": "createRequestBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "customRoyalties",
							"outputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "fee",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "getRequest",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.Request",
									"name": "request",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								}
							],
							"name": "getRequestBatch",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.Request[]",
									"name": "requests",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								}
							],
							"name": "getRoyaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royalty",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "isRequestValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.Request",
									"name": "request",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "quantities",
									"type": "uint256[]"
								}
							],
							"name": "isRequestValidBatch",
							"outputs": [
								{
									"internalType": "bool[]",
									"name": "valid",
									"type": "bool[]"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.Request[]",
									"name": "requests",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "fee",
									"type": "uint96"
								}
							],
							"name": "setRoyaltyInfo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"acceptRequest(uint256,uint256,address,uint256[],address[])": {
								"params": {
									"additionalFeeRecipients": "The addresses to send the additional fees to.",
									"additionalFees": "The additional fees to pay.",
									"quantity": "The quantity of tokens to accept.",
									"recipient": "The recipient of the accepted tokens.",
									"requestId": "The ID of the request."
								}
							},
							"acceptRequestBatch(uint256[],uint256[],address[],uint256[],address[])": {
								"details": "Additional fees are applied to each request.",
								"params": {
									"additionalFeeRecipients": "The addresses to send the additional fees to.",
									"additionalFees": "The additional fees to pay.",
									"quantities": "The quantities of tokens to accept.",
									"recipients": "The recipients of the accepted tokens.",
									"requestIds": "The IDs of the requests."
								}
							},
							"cancelRequest(uint256)": {
								"params": {
									"requestId": "The ID of the request."
								}
							},
							"cancelRequestBatch(uint256[])": {
								"params": {
									"requestIds": "The IDs of the requests."
								}
							},
							"createRequest((bool,bool,address,uint256,uint256,uint96,address,uint256))": {
								"params": {
									"request": "The request's details."
								},
								"returns": {
									"requestId": "The ID of the request."
								}
							},
							"createRequestBatch((bool,bool,address,uint256,uint256,uint96,address,uint256)[])": {
								"params": {
									"requests": "The requests' details."
								},
								"returns": {
									"requestIds": "The IDs of the requests."
								}
							},
							"getRequest(uint256)": {
								"params": {
									"requestId": "The ID of the request."
								},
								"returns": {
									"request": "The request."
								}
							},
							"getRequestBatch(uint256[])": {
								"params": {
									"requestIds": "The IDs of the requests."
								},
								"returns": {
									"requests": "The requests."
								}
							},
							"getRoyaltyInfo(address,uint256,uint256)": {
								"params": {
									"cost": "Amount of currency sent/received for the trade.",
									"tokenContract": "Address of the token being traded.",
									"tokenId": "The ID of the token."
								},
								"returns": {
									"recipient": "Address to send royalties to.",
									"royalty": "Amount of currency to be paid as royalties."
								}
							},
							"isRequestValid(uint256,uint256)": {
								"params": {
									"quantity": "The amount of tokens to exchange. 0 is assumed to be the request's available quantity.",
									"requestId": "The ID of the request."
								},
								"returns": {
									"request": "The request.",
									"valid": "The validity of the request."
								}
							},
							"isRequestValidBatch(uint256[],uint256[])": {
								"params": {
									"quantities": "The amount of tokens to exchange per request. 0 is assumed to be the request's available quantity.",
									"requestIds": "The IDs of the requests."
								},
								"returns": {
									"requests": "The requests.",
									"valid": "The validities of the requests."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setRoyaltyInfo(address,address,uint96)": {
								"details": "Can only be called by the owner.",
								"params": {
									"fee": "Fee percentage with a 10000 basis (e.g. 0.3% is 30 and 1% is 100 and 100% is 10000).",
									"recipient": "Address to send the royalties to.",
									"tokenContract": "The contract the custom royalties apply to."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"fun_transferOwnership": {
									"entryPoint": 153,
									"id": 2070,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080346200007e57601f6200237f38819003918201601f19168301916001600160401b0383118484101762000083578084926020946040528339810103126200007e57516001600160a01b03811681036200007e576200006e90620000643362000099565b6001805562000099565b60405161229e9081620000e18239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6080604052600436101561001257600080fd5b60003560e01c80630bc9b045146110fd57806324dc6bd0146110c35780633015394c1461109f57806336de974214611059578063386c96e014611009578063449768ad14610ed8578063715018a614610e7f5780638da5cb5b14610e56578063956463e514610d3d578063a93c531714610c12578063b056d4ae146106e4578063c58343ef1461062d578063dd0de6ec1461027f578063e6bd720e14610200578063f1f5176c146101955763f2fde38b146100cc57600080fd5b34610190576020366003190112610190576100e56111f8565b6100ed612075565b6001600160a01b0390811690811561013c57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b34610190576020366003190112610190576004356001600160401b038111610190576101c590369060040161127d565b906101ce6120cd565b60005b8281106101de5760018055005b806101f66101f06101fb93868661142b565b3561186b565b611387565b6101d1565b346101905760a0366003190112610190576044356001600160a01b0381168103610190576001600160401b03906064358281116101905761024590369060040161127d565b6084929192359384116101905761026361027994369060040161127d565b93909261026e6120cd565b602435600435611448565b60018055005b3461019057610100366003190112610190576102996120cd565b6044356001600160a01b03811681036101905760e4351561061c5760a435906001600160601b038216820361019057426001600160601b038316111561060b5760243580151514158061019057602435156105fb57610300636cdb3d1360e11b5b83611fca565b60c4356001600160a01b03811681141580610190576001600160a01b038216156105e95760043592831515840361019057831561052e5780610190576084356064356103513383838a602435611d12565b156104f75750505b61019057610190576001600160601b036020946040519361037985611320565b338552151586850152602435151560408501526001600160a01b038581166060860152606435608086015260843560a0860152911660c08401521660e082015260e435610100820152600454916103cf83611387565b60045582600052600284526040600020600560018060a01b03845116938254948782015115159560ff60a81b6040840151151560a81b169160ff60a01b8860a01b169169ffffffffffffffffffff60b01b1617171783556001830160018060a01b036060830151166001600160601b0360a01b82541617905560808101519485600285015560a082015160038501556001600160601b0360c0830151169361010060e0840151936001600160601b03198560601b16871760048401550151938491015560405195865287860152608435604086015260018060a01b03166060850152608084015260a083015260018060a01b031690827fb67ee55b059861d68b3b5640ee51bde6a5d9d849c6ecdb610663cbd4290bdfd560c03393a460018055604051908152f35b604051633e2c0d9b60e11b81526001600160a01b038816600482015260248101919091526044810191909152336064820152608490fd5b505061055661054160e43560843561140b565b61054e8160643587611b2a565b91905061141e565b600090610564338285611bf4565b156105ba57506000602435806105b0575b8015610594575b15610359575b60405163524f409b60e01b8152600490fd5b505060006024351560243561057c57506001608435141561057c565b5060843515610575565b604051631184019360e31b81526001600160a01b03841660048201526024810191909152336044820152606490fd5b604051631eb3268560e31b8152600490fd5b6103006380ac58cd60e01b6102fa565b60405162d36c8560e81b8152600490fd5b60405162bfc92160e01b8152600490fd5b3461019057602036600319011261019057610646611909565b506004356000526002602052610120604060002060056040519161066983611320565b805460ff60018060a01b03918281168652818160a01c161515602087015260a81c1615156040850152600182015416606084015260028101546080840152600381015460a084015260048101546001600160601b03811660c085015260601c60e084015201546101008201526106e2604051809261120e565bf35b34610190576020366003190112610190576001600160401b03806004351161019057366023600435011215610190576004356004013511610190573660246004356004013560081b6004350101116101905761073e6120cd565b61074d60043560040135611370565b61075a604051918261134f565b600480350135808252601f199061077090611370565b0136602083013760005b6004356004013581106107cc57506001808055604051906020820160208352835180915260206040840194019060005b8181106107b75784860385f35b825186526020958601959092019183016107aa565b906107e060648360081b60043501016113d6565b916101048160081b6004350101351561061c57426001600160601b0361080f60c48460081b60043501016113ea565b16111561060b5760449261082b848360081b60043501016113fe565b15610c0257610842636cdb3d1360e11b5b82611fca565b6001600160a01b0361085e600435600885901b0160e4016113d6565b16156105e95761087760248360081b60043501016113fe565b15610afb5761088e848360081b60043501016113fe565b93608494858460081b6004350101356108b760a48660081b600435010135928383873393611d12565b15610acb575050610ac69394505b6108ea6108db60248560081b60043501016113fe565b918460081b60043501016113fe565b6001600160601b0361090560e48660081b60043501016113d6565b9161091960c48760081b60043501016113ea565b906040519461092786611320565b33865215156020860152151560408501526001600160a01b03858116606086015260048035600889901b016084810135608088015260a481013560a08801529390921660c08601529290921660e08401526101040135610100830152549161098e83611387565b6004558260005260026020526040600020600560018060a01b0384511693825494602082015115159560ff60a81b6040840151151560a81b169160ff60a01b8860a01b169169ffffffffffffffffffff60b01b1617171783556001830160018060a01b036060830151166001600160601b0360a01b82541617905560808101519485600285015560a082015160038501556001600160601b0360c0830151169361010060e0840151936001600160601b03198560601b168717600484015501519384910155604051958652602086015260a48760081b600435010135604086015260018060a01b03166060850152608084015260a083015260018060a01b031690827fb67ee55b059861d68b3b5640ee51bde6a5d9d849c6ecdb610663cbd4290bdfd560c03393a4610ac082856113ac565b52611387565b61077a565b604051633e2c0d9b60e11b81526001600160a01b0390941660048501526024840152908201523360648201528390fd5b919291600435600883901b0160a481013590610b3690610b209061010401358361140b565b61054e8160848760081b60043501013586611b2a565b610b533382610b4e60e48860081b60043501016113d6565b611bf4565b15610bbf5750610b6b848460081b60043501016113fe565b9081610bb6575b8115610b87575b5061058257610ac6926108c5565b9050610b9b848460081b60043501016113fe565b159081610baa575b5085610b79565b60019150141585610ba3565b80159150610b72565b60649085610bd660e48760081b60043501016113d6565b604051631184019360e31b81526001600160a01b03909116600482015260248101929092523390820152fd5b6108426380ac58cd60e01b61083c565b346101905760a0366003190112610190576001600160401b0360043581811161019057610c4390369060040161127d565b60243583811161019057610c5b90369060040161127d565b93909160443582811161019057610c7690369060040161127d565b93909260643581811161019057610c9190369060040161127d565b92909160843590811161019057610cac90369060040161127d565b959094610cb76120cd565b898114801590610d33575b610d215760005b818110610cd65760018055005b806101f68989898f8f8f610d16610d11898f95938f958f959d8f9e610d1c9f82610d0391610d0a9561142b565b359861142b565b359461142b565b6113d6565b91611448565b610cc9565b6040516355ca07b760e11b8152600490fd5b5087811415610cc2565b3461019057602080600319360112610190576004356001600160401b03811161019057610d6e90369060040161127d565b9190610d798361194e565b9260005b818110610d9f57505050610d9b6040519282849384528301906112ad565b0390f35b80610dae610e5192848661142b565b3560005260028086526005604060002060405192610dcb84611320565b815460018060a01b03808216865260ff60a0928181851c1615158d89015260a81c1615156040870152600184015416916060928387015283015460808601526003830154908501526004820154906001600160601b03821660c08601521c60e08401520154610100820152610e4082886113ac565b52610e4b81876113ac565b50611387565b610d7d565b34610190576000366003190112610190576000546040516001600160a01b039091168152602090f35b3461019057600036600319011261019057610e98612075565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610190576040366003190112610190576001600160401b0360043581811161019057610f0990369060040161127d565b9160243590811161019057610f2290369060040161127d565b8084929403610d2157610f3482611370565b92610f42604051948561134f565b828452610f4e83611370565b9460209283860196601f1901368837610f668561194e565b9460005b818110610fc0575050505050604051926040840190604085525180915260608401949060005b818110610faa57858703848701528580610d9b89886112ad565b8251151587529583019591830191600101610f90565b80610fe5610fd261100493858961142b565b35610fde83878961142b565b359061199e565b610fef838b6113ac565b52610ffa828b6113ac565b9015159052611387565b610f6a565b34610190576020366003190112610190576001600160a01b038061102b6111f8565b166000908152600360209081526040918290205482519381166001600160a01b0316845260a01c9083015290f35b34610190576060366003190112610190576110826110756111f8565b6044359060243590611b2a565b604080516001600160a01b03939093168352602083019190915290f35b34610190576020366003190112610190576110b86120cd565b61027960043561186b565b34610190576040366003190112610190576101406106e26110e860243560043561199e565b6040929192519215158352602083019061120e565b34610190576060366003190112610190576111166111f8565b6001600160a01b03906024358281169081810361019057604435916001600160601b0383168084036101905761114a612075565b61271081116111e657857f60567f9d30ab22ef3cd7557f56b897c677c80a85c8673a4a5c26eb9349ef8c609560405193611183856112ef565b84526020840192835216958660005260036020526040600020925116906001600160601b0360a01b905160a01b161790556111e1604051928392839092916001600160601b03602091604084019560018060a01b0316845216910152565b0390a2005b60405163e0e54ced60e01b8152600490fd5b600435906001600160a01b038216820361019057565b60018060a01b038082511683526020820151151560208401526040820151151560408401528060608301511660608401526080820151608084015260a082015160a08401526001600160601b0360c08301511660c084015260e08201511660e083015261010080910151910152565b9181601f84011215610190578235916001600160401b038311610190576020808501948460051b01011161019057565b90815180825260208080930193019160005b8281106112cd575050505090565b9091929382610120826112e3600194895161120e565b019501939291016112bf565b604081019081106001600160401b0382111761130a57604052565b634e487b7160e01b600052604160045260246000fd5b61012081019081106001600160401b0382111761130a57604052565b6001600160401b03811161130a57604052565b90601f801991011681019081106001600160401b0382111761130a57604052565b6001600160401b03811161130a5760051b60200190565b60001981146113965760010190565b634e487b7160e01b600052601160045260246000fd5b80518210156113c05760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036101905790565b356001600160601b03811681036101905790565b3580151581036101905790565b8181029291811591840414171561139657565b9190820180921161139657565b91908110156113c05760051b0190565b9190820391821161139657565b939594909291946000928584526002602052604084206040519061146b82611320565b600581549160ff60018060a01b03841693848652818160a01c161515602087015260a81c161515604085015260018060a01b03600182015416606085015260028101546080850152600381015460a085015260048101546001600160601b03811660c086015260601c60e08501520154610100830152156118525785158015611845575b6105825760c08101516001600160601b031642101561060b578289036117495787938660a0830151146000146118245787865260026020526115526040872060056000918281558260018201558260028201558260038201558260048201550155565b60018060a01b036060830151169961156f8861010085015161140b565b61157f818d608087015190611b2a565b95909360208601511515978860001461180b5786516001600160a01b031699988a983397915b816117c3575b5050508a948b5b81811061175b57505050505060208401511560001461173657936115dc6115f1939260809661143b565b915b60e08501516001600160a01b0316612123565b6040810151156116d057015190873b156116cc57604051637921219560e11b81526001600160a01b0393841660048201529216602483015260448201526064810183905260a0608482015260a48101829052818160c481838a5af180156116c1576116aa575b5060406003915b8481526002602052200154906040519360018060a01b03168452602084015260408301527f146c7c3a67244cf406ca437a82b2bf587bc02b628b63659c73b4295b8b00e76f60603393a4565b6116b4829161133c565b6116be5738611657565b80fd5b6040513d84823e3d90fd5b8380fd5b015191873b156116cc57604051632142170760e11b81526001600160a01b0391821660048201529116602482015260448101919091528181606481838a5af180156116c15791604091600393611727575b5061165e565b6117309061133c565b38611721565b809111611749576080936115f1926115de565b6040516330fd3c3160e01b8152600490fd5b61176681838761142b565b3590611776610d1182868861142b565b976001600160a01b0389161580156117bb575b611749578261179e6117b6946101f69361141e565b60e08d0151909a908c906001600160a01b0316612123565b6115b2565b508215611789565b91959091156117f957906117da816117f19361143b565b955b60e08a015189906001600160a01b0316612123565b3880806115ab565b94908581116111e6576117f1916117dc565b8651339a506001600160a01b0316988e988a97916115a5565b87865260026020526003604087200161183e88825461143b565b9055611552565b5060a081015186116114ef565b6040516364b4f07960e11b815260048101889052602490fd5b600081815260026020526040812080549192916001600160a01b039190821633036118f0579060017fe0d7665e06e7db1fc500d66d4e3898d1d4a5533d7efe54b352fcdaa177c22783920154169282815260026020526118ec6040822060056000918281558260018201558260028201558260038201558260048201550155565b80a3565b6040516364b4f07960e11b815260048101849052602490fd5b6040519061191682611320565b816101006000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201520152565b9061195882611370565b611965604051918261134f565b8281528092611976601f1991611370565b019060005b82811061198757505050565b602090611992611909565b8282850101520161197b565b9190916119a9611909565b506000526002602052604060002091604051926119c584611320565b80549060018060a01b03928383169384875260ff8460a01c1615159485602089015260ff604089019560a81c161515855281600185015416936060890194855260028101549160808a019283526003820154978860a08c015260056004840154938c60c06001600160601b03871691015260e08d019460601c8552015491826101008d01528615611b0e575b15159889611af7575b89611aec575b5088611a73575b50505050505050509190565b909192939495969750600014611aa957505081611a9c9551151594511690519187511693611d12565b3880808080808080611a67565b611ae796508395849593611ac5611add969495611ad29461140b565b9788925116905190611b2a565b92905051169361141e565b9085511691611bf4565b611a9c565b861115985038611a60565b60c08c01516001600160601b031642109950611a5a565b899650611a51565b51906001600160a01b038216820361019057565b6040805163152a902d60e11b81526004810193909352602483018490526001600160a01b0394939290918516908281604481855afa90816000918293611bb6575b50611bad575050916020611ba992612710946000526003825280600020905190611b94826112ef565b549687169687825260a01c918291015261140b565b0490565b95509392505050565b919092508482813d8311611bed575b611bcf818361134f565b810103126116be57506020611be382611b16565b9101519138611b6b565b503d611bc5565b6040516370a0823160e01b81526001600160a01b03848116600483015291909116926020918281602481885afa8015611cbe578491600091611cca575b5010159384611c42575b5050505090565b604051636eb1769f60e11b81526001600160a01b03929092166004830152306024830152929350918190839060449082905afa908115611cbe57600091611c92575b509050101538808080611c3b565b82813d8311611cb7575b611ca6818361134f565b810103126116be5750518038611c84565b503d611c9c565b6040513d6000823e3d90fd5b91508382813d8311611cf3575b611ce1818361134f565b810103126116be575083905138611c31565b503d611cd7565b90816020910312610190575180151581036101905790565b93919093611eca576040516331a9108f60e11b8152600481018290526000946001600160a01b0390811694602093879385816024818b5afa899181611e8f575b50611e1b575b50506001149586611e0c575b5085611d73575b505050505090565b939450909216301491908215611d92575b505090503880808080611d6b565b60405163e985e9c560e01b81526001600160a01b0391909116600482015230602482015290929091508290829060449082905afa918215611cbe57600092611ddf575b5050803880611d84565b611dfe9250803d10611e05575b611df6818361134f565b810190611cfa565b3880611dd5565b503d611dec565b81965016858416149438611d64565b60405163020604bf60e21b81526004810192909252975084816024818a5afa60009181611e58575b50611e4f575b80611d58565b92506001611e49565b90918682813d8311611e88575b611e6f818361134f565b810103126116be5750611e8190611b16565b9038611e43565b503d611e65565b9091508681813d8311611ec3575b611ea7818361134f565b81010312611ebf57611eb890611b16565b9038611d52565b8980fd5b503d611e9d565b9290918015159384611f42575b505082611ee357505090565b60405163e985e9c560e01b81526001600160a01b039283166004820152306024820152925060209183916044918391165afa908115611cbe57600091611f27575090565b611f3f915060203d8111611e0557611df6818361134f565b90565b604051627eeac760e11b81526001600160a01b0385166004820152602481019190915291935090602081806044810103816001600160a01b0388165afa908115611cbe57600091611f99575b501015913880611ed7565b906020823d8211611fc2575b81611fb26020938361134f565b810103126116be57505138611f8e565b3d9150611fa5565b90813b612003575b604051625d185960e41b81526001600160a01b0390921660048301526001600160e01b031916602482015260449150fd5b6040516301ffc9a760e01b81526001600160e01b0319821660048201526020816024816001600160a01b0387165afa60009181612055575b50612047575b50611fd2565b6120515782612041565b5050565b61206e91925060203d8111611e0557611df6818361134f565b903861203b565b6000546001600160a01b0316330361208957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6002600154146120de576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6040516323b872dd60e01b60208083019182526001600160a01b0394851660248401529490931660448201526064808201959095529384529192601f1992919061216e60848261134f565b600092839283809351925af1913d1561225f573d6001600160401b03811161224b576121a48560405193601f840116018361134f565b81528091843d92013e5b8161221b575b50156121bd5750565b6084906040519062461bcd60e51b82526004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472604482015270185b9cd9995c919c9bdb4819985a5b1959607a1b6064820152fd5b80518015925083908315612233575b505050386121b4565b6122439350820181019101611cfa565b38828161222a565b634e487b7160e01b83526041600452602483fd5b505060606121ae56fea2646970667358221220f36e4ed36279081a8e9bb1f632ab119d960f40bf5477f8846359b2e6e32bd23164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH3 0x7E JUMPI PUSH1 0x1F PUSH3 0x237F CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0x83 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0x7E JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH3 0x7E JUMPI PUSH3 0x6E SWAP1 PUSH3 0x64 CALLER PUSH3 0x99 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE PUSH3 0x99 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x229E SWAP1 DUP2 PUSH3 0xE1 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC9B045 EQ PUSH2 0x10FD JUMPI DUP1 PUSH4 0x24DC6BD0 EQ PUSH2 0x10C3 JUMPI DUP1 PUSH4 0x3015394C EQ PUSH2 0x109F JUMPI DUP1 PUSH4 0x36DE9742 EQ PUSH2 0x1059 JUMPI DUP1 PUSH4 0x386C96E0 EQ PUSH2 0x1009 JUMPI DUP1 PUSH4 0x449768AD EQ PUSH2 0xED8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE7F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE56 JUMPI DUP1 PUSH4 0x956463E5 EQ PUSH2 0xD3D JUMPI DUP1 PUSH4 0xA93C5317 EQ PUSH2 0xC12 JUMPI DUP1 PUSH4 0xB056D4AE EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xC58343EF EQ PUSH2 0x62D JUMPI DUP1 PUSH4 0xDD0DE6EC EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xE6BD720E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xF1F5176C EQ PUSH2 0x195 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0xE5 PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0xED PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x190 JUMPI PUSH2 0x1C5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP1 PUSH2 0x1CE PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1DE JUMPI PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP1 PUSH2 0x1F6 PUSH2 0x1F0 PUSH2 0x1FB SWAP4 DUP7 DUP7 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD PUSH2 0x186B JUMP JUMPDEST PUSH2 0x1387 JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x64 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0x245 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST PUSH1 0x84 SWAP3 SWAP2 SWAP3 CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x190 JUMPI PUSH2 0x263 PUSH2 0x279 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x26E PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0x299 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x190 JUMPI PUSH1 0xE4 CALLDATALOAD ISZERO PUSH2 0x61C JUMPI PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x190 JUMPI TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND GT ISZERO PUSH2 0x60B JUMPI PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO EQ ISZERO DUP1 PUSH2 0x190 JUMPI PUSH1 0x24 CALLDATALOAD ISZERO PUSH2 0x5FB JUMPI PUSH2 0x300 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL JUMPDEST DUP4 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ ISZERO DUP1 PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x4 CALLDATALOAD SWAP3 DUP4 ISZERO ISZERO DUP5 SUB PUSH2 0x190 JUMPI DUP4 ISZERO PUSH2 0x52E JUMPI DUP1 PUSH2 0x190 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH2 0x351 CALLER DUP4 DUP4 DUP11 PUSH1 0x24 CALLDATALOAD PUSH2 0x1D12 JUMP JUMPDEST ISZERO PUSH2 0x4F7 JUMPI POP POP JUMPDEST PUSH2 0x190 JUMPI PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x379 DUP6 PUSH2 0x1320 JUMP JUMPDEST CALLER DUP6 MSTORE ISZERO ISZERO DUP7 DUP6 ADD MSTORE PUSH1 0x24 CALLDATALOAD ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA0 DUP7 ADD MSTORE SWAP2 AND PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x4 SLOAD SWAP2 PUSH2 0x3CF DUP4 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x4 SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 MLOAD AND SWAP4 DUP3 SLOAD SWAP5 DUP8 DUP3 ADD MLOAD ISZERO ISZERO SWAP6 PUSH1 0xFF PUSH1 0xA8 SHL PUSH1 0x40 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xA8 SHL AND SWAP2 PUSH1 0xFF PUSH1 0xA0 SHL DUP9 PUSH1 0xA0 SHL AND SWAP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0xB0 SHL AND OR OR OR DUP4 SSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD SWAP5 DUP6 PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xC0 DUP4 ADD MLOAD AND SWAP4 PUSH2 0x100 PUSH1 0xE0 DUP5 ADD MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP6 PUSH1 0x60 SHL AND DUP8 OR PUSH1 0x4 DUP5 ADD SSTORE ADD MLOAD SWAP4 DUP5 SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE DUP8 DUP7 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 PUSH32 0xB67EE55B059861D68B3B5640EE51BDE6A5D9D849C6ECDB610663CBD4290BDFD5 PUSH1 0xC0 CALLER SWAP4 LOG4 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3E2C0D9B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP POP PUSH2 0x556 PUSH2 0x541 PUSH1 0xE4 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH2 0x140B JUMP JUMPDEST PUSH2 0x54E DUP2 PUSH1 0x64 CALLDATALOAD DUP8 PUSH2 0x1B2A JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x141E JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x564 CALLER DUP3 DUP6 PUSH2 0x1BF4 JUMP JUMPDEST ISZERO PUSH2 0x5BA JUMPI POP PUSH1 0x0 PUSH1 0x24 CALLDATALOAD DUP1 PUSH2 0x5B0 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x594 JUMPI JUMPDEST ISZERO PUSH2 0x359 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x524F409B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x24 CALLDATALOAD ISZERO PUSH1 0x24 CALLDATALOAD PUSH2 0x57C JUMPI POP PUSH1 0x1 PUSH1 0x84 CALLDATALOAD EQ ISZERO PUSH2 0x57C JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD ISZERO PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x11840193 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1EB32685 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x300 PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xD36C85 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xBFC921 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0x646 PUSH2 0x1909 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x120 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x5 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x669 DUP4 PUSH2 0x1320 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP2 AND DUP7 MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x60 SHR PUSH1 0xE0 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x6E2 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x120E JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 PUSH1 0x4 CALLDATALOAD GT PUSH2 0x190 JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0x4 CALLDATALOAD ADD SLT ISZERO PUSH2 0x190 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT PUSH2 0x190 JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD GT PUSH2 0x190 JUMPI PUSH2 0x73E PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x74D PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x75A PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x4 DUP1 CALLDATALOAD ADD CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0x1F NOT SWAP1 PUSH2 0x770 SWAP1 PUSH2 0x1370 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP2 LT PUSH2 0x7CC JUMPI POP PUSH1 0x1 DUP1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP5 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x7B7 JUMPI DUP5 DUP7 SUB DUP6 RETURN JUMPDEST DUP3 MLOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP3 ADD SWAP2 DUP4 ADD PUSH2 0x7AA JUMP JUMPDEST SWAP1 PUSH2 0x7E0 PUSH1 0x64 DUP4 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13D6 JUMP JUMPDEST SWAP2 PUSH2 0x104 DUP2 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD CALLDATALOAD ISZERO PUSH2 0x61C JUMPI TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x80F PUSH1 0xC4 DUP5 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13EA JUMP JUMPDEST AND GT ISZERO PUSH2 0x60B JUMPI PUSH1 0x44 SWAP3 PUSH2 0x82B DUP5 DUP4 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST ISZERO PUSH2 0xC02 JUMPI PUSH2 0x842 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL JUMPDEST DUP3 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x85E PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP6 SWAP1 SHL ADD PUSH1 0xE4 ADD PUSH2 0x13D6 JUMP JUMPDEST AND ISZERO PUSH2 0x5E9 JUMPI PUSH2 0x877 PUSH1 0x24 DUP4 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST ISZERO PUSH2 0xAFB JUMPI PUSH2 0x88E DUP5 DUP4 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST SWAP4 PUSH1 0x84 SWAP5 DUP6 DUP5 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD CALLDATALOAD PUSH2 0x8B7 PUSH1 0xA4 DUP7 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD CALLDATALOAD SWAP3 DUP4 DUP4 DUP8 CALLER SWAP4 PUSH2 0x1D12 JUMP JUMPDEST ISZERO PUSH2 0xACB JUMPI POP POP PUSH2 0xAC6 SWAP4 SWAP5 POP JUMPDEST PUSH2 0x8EA PUSH2 0x8DB PUSH1 0x24 DUP6 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x905 PUSH1 0xE4 DUP7 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13D6 JUMP JUMPDEST SWAP2 PUSH2 0x919 PUSH1 0xC4 DUP8 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13EA JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x927 DUP7 PUSH2 0x1320 JUMP JUMPDEST CALLER DUP7 MSTORE ISZERO ISZERO PUSH1 0x20 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x8 DUP10 SWAP1 SHL ADD PUSH1 0x84 DUP2 ADD CALLDATALOAD PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA4 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP9 ADD MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0xC0 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP3 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x104 ADD CALLDATALOAD PUSH2 0x100 DUP4 ADD MSTORE SLOAD SWAP2 PUSH2 0x98E DUP4 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x4 SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 MLOAD AND SWAP4 DUP3 SLOAD SWAP5 PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO SWAP6 PUSH1 0xFF PUSH1 0xA8 SHL PUSH1 0x40 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xA8 SHL AND SWAP2 PUSH1 0xFF PUSH1 0xA0 SHL DUP9 PUSH1 0xA0 SHL AND SWAP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0xB0 SHL AND OR OR OR DUP4 SSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD SWAP5 DUP6 PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xC0 DUP4 ADD MLOAD AND SWAP4 PUSH2 0x100 PUSH1 0xE0 DUP5 ADD MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP6 PUSH1 0x60 SHL AND DUP8 OR PUSH1 0x4 DUP5 ADD SSTORE ADD MLOAD SWAP4 DUP5 SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA4 DUP8 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD CALLDATALOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 PUSH32 0xB67EE55B059861D68B3B5640EE51BDE6A5D9D849C6ECDB610663CBD4290BDFD5 PUSH1 0xC0 CALLER SWAP4 LOG4 PUSH2 0xAC0 DUP3 DUP6 PUSH2 0x13AC JUMP JUMPDEST MSTORE PUSH2 0x1387 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3E2C0D9B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE CALLER PUSH1 0x64 DUP3 ADD MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP2 PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP4 SWAP1 SHL ADD PUSH1 0xA4 DUP2 ADD CALLDATALOAD SWAP1 PUSH2 0xB36 SWAP1 PUSH2 0xB20 SWAP1 PUSH2 0x104 ADD CALLDATALOAD DUP4 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x54E DUP2 PUSH1 0x84 DUP8 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD CALLDATALOAD DUP7 PUSH2 0x1B2A JUMP JUMPDEST PUSH2 0xB53 CALLER DUP3 PUSH2 0xB4E PUSH1 0xE4 DUP9 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13D6 JUMP JUMPDEST PUSH2 0x1BF4 JUMP JUMPDEST ISZERO PUSH2 0xBBF JUMPI POP PUSH2 0xB6B DUP5 DUP5 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xBB6 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0xB87 JUMPI JUMPDEST POP PUSH2 0x582 JUMPI PUSH2 0xAC6 SWAP3 PUSH2 0x8C5 JUMP JUMPDEST SWAP1 POP PUSH2 0xB9B DUP5 DUP5 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0xBAA JUMPI JUMPDEST POP DUP6 PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP EQ ISZERO DUP6 PUSH2 0xBA3 JUMP JUMPDEST DUP1 ISZERO SWAP2 POP PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x64 SWAP1 DUP6 PUSH2 0xBD6 PUSH1 0xE4 DUP8 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x11840193 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x842 PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH2 0x83C JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xC43 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xC5B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xC76 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xC91 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xCAC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP6 SWAP1 SWAP5 PUSH2 0xCB7 PUSH2 0x20CD JUMP JUMPDEST DUP10 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xD33 JUMPI JUMPDEST PUSH2 0xD21 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xCD6 JUMPI PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP1 PUSH2 0x1F6 DUP10 DUP10 DUP10 DUP16 DUP16 DUP16 PUSH2 0xD16 PUSH2 0xD11 DUP10 DUP16 SWAP6 SWAP4 DUP16 SWAP6 DUP16 SWAP6 SWAP14 DUP16 SWAP15 PUSH2 0xD1C SWAP16 DUP3 PUSH2 0xD03 SWAP2 PUSH2 0xD0A SWAP6 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD SWAP9 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD SWAP5 PUSH2 0x142B JUMP JUMPDEST PUSH2 0x13D6 JUMP JUMPDEST SWAP2 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x55CA07B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP DUP8 DUP2 EQ ISZERO PUSH2 0xCC2 JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x190 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xD6E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xD79 DUP4 PUSH2 0x194E JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD9F JUMPI POP POP POP PUSH2 0xD9B PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x12AD JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH2 0xDAE PUSH2 0xE51 SWAP3 DUP5 DUP7 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xDCB DUP5 PUSH2 0x1320 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP7 MSTORE PUSH1 0xFF PUSH1 0xA0 SWAP3 DUP2 DUP2 DUP6 SHR AND ISZERO ISZERO DUP14 DUP10 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x1 DUP5 ADD SLOAD AND SWAP2 PUSH1 0x60 SWAP3 DUP4 DUP8 ADD MSTORE DUP4 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND PUSH1 0xC0 DUP7 ADD MSTORE SHR PUSH1 0xE0 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0xE40 DUP3 DUP9 PUSH2 0x13AC JUMP JUMPDEST MSTORE PUSH2 0xE4B DUP2 DUP8 PUSH2 0x13AC JUMP JUMPDEST POP PUSH2 0x1387 JUMP JUMPDEST PUSH2 0xD7D JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0xE98 PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xF09 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xF22 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST DUP1 DUP5 SWAP3 SWAP5 SUB PUSH2 0xD21 JUMPI PUSH2 0xF34 DUP3 PUSH2 0x1370 JUMP JUMPDEST SWAP3 PUSH2 0xF42 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x134F JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH2 0xF4E DUP4 PUSH2 0x1370 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP3 DUP4 DUP7 ADD SWAP7 PUSH1 0x1F NOT ADD CALLDATASIZE DUP9 CALLDATACOPY PUSH2 0xF66 DUP6 PUSH2 0x194E JUMP JUMPDEST SWAP5 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xFC0 JUMPI POP POP POP POP POP PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 DUP5 ADD SWAP1 PUSH1 0x40 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP5 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xFAA JUMPI DUP6 DUP8 SUB DUP5 DUP8 ADD MSTORE DUP6 DUP1 PUSH2 0xD9B DUP10 DUP9 PUSH2 0x12AD JUMP JUMPDEST DUP3 MLOAD ISZERO ISZERO DUP8 MSTORE SWAP6 DUP4 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF90 JUMP JUMPDEST DUP1 PUSH2 0xFE5 PUSH2 0xFD2 PUSH2 0x1004 SWAP4 DUP6 DUP10 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD PUSH2 0xFDE DUP4 DUP8 DUP10 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH2 0xFEF DUP4 DUP12 PUSH2 0x13AC JUMP JUMPDEST MSTORE PUSH2 0xFFA DUP3 DUP12 PUSH2 0x13AC JUMP JUMPDEST SWAP1 ISZERO ISZERO SWAP1 MSTORE PUSH2 0x1387 JUMP JUMPDEST PUSH2 0xF6A JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x102B PUSH2 0x11F8 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD SWAP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xA0 SHR SWAP1 DUP4 ADD MSTORE SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0x1082 PUSH2 0x1075 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0x10B8 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x279 PUSH1 0x4 CALLDATALOAD PUSH2 0x186B JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0x140 PUSH2 0x6E2 PUSH2 0x10E8 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x199E JUMP JUMPDEST PUSH1 0x40 SWAP3 SWAP2 SWAP3 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x120E JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0x1116 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x190 JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND DUP1 DUP5 SUB PUSH2 0x190 JUMPI PUSH2 0x114A PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT PUSH2 0x11E6 JUMPI DUP6 PUSH32 0x60567F9D30AB22EF3CD7557F56B897C677C80A85C8673A4A5C26EB9349EF8C60 SWAP6 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1183 DUP6 PUSH2 0x12EF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 DUP4 MSTORE AND SWAP6 DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 MLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 MLOAD PUSH1 0xA0 SHL AND OR SWAP1 SSTORE PUSH2 0x11E1 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x20 SWAP2 PUSH1 0x40 DUP5 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE0E54CED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x190 JUMPI JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xC0 DUP4 ADD MLOAD AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 SWAP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x190 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x190 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x190 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x12CD JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH2 0x120 DUP3 PUSH2 0x12E3 PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH2 0x120E JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x130A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x130A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x130A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x130A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x130A JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1396 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x13C0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x190 JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x190 JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x190 JUMPI SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1396 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1396 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x13C0 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1396 JUMPI JUMP JUMPDEST SWAP4 SWAP6 SWAP5 SWAP1 SWAP3 SWAP2 SWAP5 PUSH1 0x0 SWAP3 DUP6 DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x146B DUP3 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x5 DUP2 SLOAD SWAP2 PUSH1 0xFF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP4 DUP5 DUP7 MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x60 SHR PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE ISZERO PUSH2 0x1852 JUMPI DUP6 ISZERO DUP1 ISZERO PUSH2 0x1845 JUMPI JUMPDEST PUSH2 0x582 JUMPI PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0x60B JUMPI DUP3 DUP10 SUB PUSH2 0x1749 JUMPI DUP8 SWAP4 DUP7 PUSH1 0xA0 DUP4 ADD MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1824 JUMPI DUP8 DUP7 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1552 PUSH1 0x40 DUP8 KECCAK256 PUSH1 0x5 PUSH1 0x0 SWAP2 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND SWAP10 PUSH2 0x156F DUP9 PUSH2 0x100 DUP6 ADD MLOAD PUSH2 0x140B JUMP JUMPDEST PUSH2 0x157F DUP2 DUP14 PUSH1 0x80 DUP8 ADD MLOAD SWAP1 PUSH2 0x1B2A JUMP JUMPDEST SWAP6 SWAP1 SWAP4 PUSH1 0x20 DUP7 ADD MLOAD ISZERO ISZERO SWAP8 DUP9 PUSH1 0x0 EQ PUSH2 0x180B JUMPI DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP10 SWAP9 DUP11 SWAP9 CALLER SWAP8 SWAP2 JUMPDEST DUP2 PUSH2 0x17C3 JUMPI JUMPDEST POP POP POP DUP11 SWAP5 DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0x175B JUMPI POP POP POP POP POP PUSH1 0x20 DUP5 ADD MLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x1736 JUMPI SWAP4 PUSH2 0x15DC PUSH2 0x15F1 SWAP4 SWAP3 PUSH1 0x80 SWAP7 PUSH2 0x143B JUMP JUMPDEST SWAP2 JUMPDEST PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2123 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD ISZERO PUSH2 0x16D0 JUMPI ADD MLOAD SWAP1 DUP8 EXTCODESIZE ISZERO PUSH2 0x16CC JUMPI PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP2 PUSH1 0xC4 DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x16C1 JUMPI PUSH2 0x16AA JUMPI JUMPDEST POP PUSH1 0x40 PUSH1 0x3 SWAP2 JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE KECCAK256 ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH32 0x146C7C3A67244CF406CA437A82B2BF587BC02B628B63659C73B4295B8B00E76F PUSH1 0x60 CALLER SWAP4 LOG4 JUMP JUMPDEST PUSH2 0x16B4 DUP3 SWAP2 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x16BE JUMPI CODESIZE PUSH2 0x1657 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST ADD MLOAD SWAP2 DUP8 EXTCODESIZE ISZERO PUSH2 0x16CC JUMPI PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP2 PUSH1 0x64 DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x16C1 JUMPI SWAP2 PUSH1 0x40 SWAP2 PUSH1 0x3 SWAP4 PUSH2 0x1727 JUMPI JUMPDEST POP PUSH2 0x165E JUMP JUMPDEST PUSH2 0x1730 SWAP1 PUSH2 0x133C JUMP JUMPDEST CODESIZE PUSH2 0x1721 JUMP JUMPDEST DUP1 SWAP2 GT PUSH2 0x1749 JUMPI PUSH1 0x80 SWAP4 PUSH2 0x15F1 SWAP3 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x30FD3C31 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1766 DUP2 DUP4 DUP8 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x1776 PUSH2 0xD11 DUP3 DUP7 DUP9 PUSH2 0x142B JUMP JUMPDEST SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO DUP1 ISZERO PUSH2 0x17BB JUMPI JUMPDEST PUSH2 0x1749 JUMPI DUP3 PUSH2 0x179E PUSH2 0x17B6 SWAP5 PUSH2 0x1F6 SWAP4 PUSH2 0x141E JUMP JUMPDEST PUSH1 0xE0 DUP14 ADD MLOAD SWAP1 SWAP11 SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2123 JUMP JUMPDEST PUSH2 0x15B2 JUMP JUMPDEST POP DUP3 ISZERO PUSH2 0x1789 JUMP JUMPDEST SWAP2 SWAP6 SWAP1 SWAP2 ISZERO PUSH2 0x17F9 JUMPI SWAP1 PUSH2 0x17DA DUP2 PUSH2 0x17F1 SWAP4 PUSH2 0x143B JUMP JUMPDEST SWAP6 JUMPDEST PUSH1 0xE0 DUP11 ADD MLOAD DUP10 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2123 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x15AB JUMP JUMPDEST SWAP5 SWAP1 DUP6 DUP2 GT PUSH2 0x11E6 JUMPI PUSH2 0x17F1 SWAP2 PUSH2 0x17DC JUMP JUMPDEST DUP7 MLOAD CALLER SWAP11 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP9 DUP15 SWAP9 DUP11 SWAP8 SWAP2 PUSH2 0x15A5 JUMP JUMPDEST DUP8 DUP7 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 DUP8 KECCAK256 ADD PUSH2 0x183E DUP9 DUP3 SLOAD PUSH2 0x143B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1552 JUMP JUMPDEST POP PUSH1 0xA0 DUP2 ADD MLOAD DUP7 GT PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x64B4F079 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER SUB PUSH2 0x18F0 JUMPI SWAP1 PUSH1 0x1 PUSH32 0xE0D7665E06E7DB1FC500D66D4E3898D1D4A5533D7EFE54B352FCDAA177C22783 SWAP3 ADD SLOAD AND SWAP3 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x18EC PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x5 PUSH1 0x0 SWAP2 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x64B4F079 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1916 DUP3 PUSH2 0x1320 JUMP JUMPDEST DUP2 PUSH2 0x100 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1958 DUP3 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x1965 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x134F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1976 PUSH1 0x1F NOT SWAP2 PUSH2 0x1370 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1987 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1992 PUSH2 0x1909 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x197B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x19A9 PUSH2 0x1909 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x19C5 DUP5 PUSH2 0x1320 JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP4 AND SWAP4 DUP5 DUP8 MSTORE PUSH1 0xFF DUP5 PUSH1 0xA0 SHR AND ISZERO ISZERO SWAP5 DUP6 PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xFF PUSH1 0x40 DUP10 ADD SWAP6 PUSH1 0xA8 SHR AND ISZERO ISZERO DUP6 MSTORE DUP2 PUSH1 0x1 DUP6 ADD SLOAD AND SWAP4 PUSH1 0x60 DUP10 ADD SWAP5 DUP6 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 PUSH1 0x80 DUP11 ADD SWAP3 DUP4 MSTORE PUSH1 0x3 DUP3 ADD SLOAD SWAP8 DUP9 PUSH1 0xA0 DUP13 ADD MSTORE PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 DUP13 PUSH1 0xC0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP2 ADD MSTORE PUSH1 0xE0 DUP14 ADD SWAP5 PUSH1 0x60 SHR DUP6 MSTORE ADD SLOAD SWAP2 DUP3 PUSH2 0x100 DUP14 ADD MSTORE DUP7 ISZERO PUSH2 0x1B0E JUMPI JUMPDEST ISZERO ISZERO SWAP9 DUP10 PUSH2 0x1AF7 JUMPI JUMPDEST DUP10 PUSH2 0x1AEC JUMPI JUMPDEST POP DUP9 PUSH2 0x1A73 JUMPI JUMPDEST POP POP POP POP POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 POP PUSH1 0x0 EQ PUSH2 0x1AA9 JUMPI POP POP DUP2 PUSH2 0x1A9C SWAP6 MLOAD ISZERO ISZERO SWAP5 MLOAD AND SWAP1 MLOAD SWAP2 DUP8 MLOAD AND SWAP4 PUSH2 0x1D12 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH2 0x1AE7 SWAP7 POP DUP4 SWAP6 DUP5 SWAP6 SWAP4 PUSH2 0x1AC5 PUSH2 0x1ADD SWAP7 SWAP5 SWAP6 PUSH2 0x1AD2 SWAP5 PUSH2 0x140B JUMP JUMPDEST SWAP8 DUP9 SWAP3 MLOAD AND SWAP1 MLOAD SWAP1 PUSH2 0x1B2A JUMP JUMPDEST SWAP3 SWAP1 POP MLOAD AND SWAP4 PUSH2 0x141E JUMP JUMPDEST SWAP1 DUP6 MLOAD AND SWAP2 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0x1A9C JUMP JUMPDEST DUP7 GT ISZERO SWAP9 POP CODESIZE PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0xC0 DUP13 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP LT SWAP10 POP PUSH2 0x1A5A JUMP JUMPDEST DUP10 SWAP7 POP PUSH2 0x1A51 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x190 JUMPI JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x152A902D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP4 SWAP3 SWAP1 SWAP2 DUP6 AND SWAP1 DUP3 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 PUSH1 0x0 SWAP2 DUP3 SWAP4 PUSH2 0x1BB6 JUMPI JUMPDEST POP PUSH2 0x1BAD JUMPI POP POP SWAP2 PUSH1 0x20 PUSH2 0x1BA9 SWAP3 PUSH2 0x2710 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x3 DUP3 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP1 MLOAD SWAP1 PUSH2 0x1B94 DUP3 PUSH2 0x12EF JUMP JUMPDEST SLOAD SWAP7 DUP8 AND SWAP7 DUP8 DUP3 MSTORE PUSH1 0xA0 SHR SWAP2 DUP3 SWAP2 ADD MSTORE PUSH2 0x140B JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST SWAP6 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP3 POP DUP5 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1BED JUMPI JUMPDEST PUSH2 0x1BCF DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x16BE JUMPI POP PUSH1 0x20 PUSH2 0x1BE3 DUP3 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 ADD MLOAD SWAP2 CODESIZE PUSH2 0x1B6B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP3 PUSH1 0x20 SWAP2 DUP3 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x1CBE JUMPI DUP5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1CCA JUMPI JUMPDEST POP LT ISZERO SWAP4 DUP5 PUSH2 0x1C42 JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CBE JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1C92 JUMPI JUMPDEST POP SWAP1 POP LT ISZERO CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1C3B JUMP JUMPDEST DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1CB7 JUMPI JUMPDEST PUSH2 0x1CA6 DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x16BE JUMPI POP MLOAD DUP1 CODESIZE PUSH2 0x1C84 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C9C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 POP DUP4 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1CF3 JUMPI JUMPDEST PUSH2 0x1CE1 DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x16BE JUMPI POP DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x1C31 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CD7 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x190 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x190 JUMPI SWAP1 JUMP JUMPDEST SWAP4 SWAP2 SWAP1 SWAP4 PUSH2 0x1ECA JUMPI PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 PUSH1 0x20 SWAP4 DUP8 SWAP4 DUP6 DUP2 PUSH1 0x24 DUP2 DUP12 GAS STATICCALL DUP10 SWAP2 DUP2 PUSH2 0x1E8F JUMPI JUMPDEST POP PUSH2 0x1E1B JUMPI JUMPDEST POP POP PUSH1 0x1 EQ SWAP6 DUP7 PUSH2 0x1E0C JUMPI JUMPDEST POP DUP6 PUSH2 0x1D73 JUMPI JUMPDEST POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP4 SWAP5 POP SWAP1 SWAP3 AND ADDRESS EQ SWAP2 SWAP1 DUP3 ISZERO PUSH2 0x1D92 JUMPI JUMPDEST POP POP SWAP1 POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE985E9C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP3 SWAP1 SWAP2 POP DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CBE JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1DDF JUMPI JUMPDEST POP POP DUP1 CODESIZE DUP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH2 0x1DFE SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x1E05 JUMPI JUMPDEST PUSH2 0x1DF6 DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1CFA JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x1DD5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1DEC JUMP JUMPDEST DUP2 SWAP7 POP AND DUP6 DUP5 AND EQ SWAP5 CODESIZE PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20604BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP8 POP DUP5 DUP2 PUSH1 0x24 DUP2 DUP11 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1E58 JUMPI JUMPDEST POP PUSH2 0x1E4F JUMPI JUMPDEST DUP1 PUSH2 0x1D58 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 SWAP2 DUP7 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1E88 JUMPI JUMPDEST PUSH2 0x1E6F DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x16BE JUMPI POP PUSH2 0x1E81 SWAP1 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1E43 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E65 JUMP JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1EC3 JUMPI JUMPDEST PUSH2 0x1EA7 DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1EBF JUMPI PUSH2 0x1EB8 SWAP1 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1D52 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1E9D JUMP JUMPDEST SWAP3 SWAP1 SWAP2 DUP1 ISZERO ISZERO SWAP4 DUP5 PUSH2 0x1F42 JUMPI JUMPDEST POP POP DUP3 PUSH2 0x1EE3 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE985E9C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP3 POP PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CBE JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1F27 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x1F3F SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E05 JUMPI PUSH2 0x1DF6 DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP4 POP SWAP1 PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CBE JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1F99 JUMPI JUMPDEST POP LT ISZERO SWAP2 CODESIZE DUP1 PUSH2 0x1ED7 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x1FC2 JUMPI JUMPDEST DUP2 PUSH2 0x1FB2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x16BE JUMPI POP MLOAD CODESIZE PUSH2 0x1F8E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1FA5 JUMP JUMPDEST SWAP1 DUP2 EXTCODESIZE PUSH2 0x2003 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x5D1859 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2055 JUMPI JUMPDEST POP PUSH2 0x2047 JUMPI JUMPDEST POP PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x2051 JUMPI DUP3 PUSH2 0x2041 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x206E SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E05 JUMPI PUSH2 0x1DF6 DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x203B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2089 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x20DE JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP5 MSTORE SWAP2 SWAP3 PUSH1 0x1F NOT SWAP3 SWAP2 SWAP1 PUSH2 0x216E PUSH1 0x84 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 DUP1 SWAP4 MLOAD SWAP3 GAS CALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x225F JUMPI RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x224B JUMPI PUSH2 0x21A4 DUP6 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1F DUP5 ADD AND ADD DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP2 DUP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP2 PUSH2 0x221B JUMPI JUMPDEST POP ISZERO PUSH2 0x21BD JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x185B9CD9995C919C9BDB4819985A5B1959 PUSH1 0x7A SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD DUP1 ISZERO SWAP3 POP DUP4 SWAP1 DUP4 ISZERO PUSH2 0x2233 JUMPI JUMPDEST POP POP POP CODESIZE PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0x2243 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x1CFA JUMP JUMPDEST CODESIZE DUP3 DUP2 PUSH2 0x222A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP POP PUSH1 0x60 PUSH2 0x21AE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN PUSH15 0x4ED36279081A8E9BB1F632AB119D96 0xF BLOCKHASH 0xBF SLOAD PUSH24 0xF8846359B2E6E32BD23164736F6C63430008130033000000 ",
							"sourceMap": "721:17595:0:-:0;;;;;;;;;;;;;-1:-1:-1;;721:17595:0;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;1000:6;751:10:9;983:12:7;751:10:9;983:12:7;:::i;:::-;721:17595:0;1749:1:8;;1000:6:0;:::i;:::-;721:17595;;;;;;;;;;-1:-1:-1;721:17595:0;;;;;;-1:-1:-1;721:17595:0;;;;;-1:-1:-1;721:17595:0;2503:191:7;2596:6;721:17595:0;;-1:-1:-1;;;;;721:17595:0;;;-1:-1:-1;;;;;;721:17595:0;;;;;;;;;2646:40:7;;2596:6;2646:40;2503:191::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 4600,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 6934,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn_calldata": {
									"entryPoint": 4733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bool_fromMemory": {
									"entryPoint": 7418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_address_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_address_uint96": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_array_struct_Request_dyn": {
									"entryPoint": 4781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_Request": {
									"entryPoint": 4622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"allocate_and_zero_memory_array_array_struct_Request_dyn": {
									"entryPoint": 6478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_and_zero_memory_struct_struct_Request": {
									"entryPoint": 6409,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 4976,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"calldata_array_index_access_uint256_dyn_calldata": {
									"entryPoint": 5163,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 5150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 5131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 5179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_14837": {
									"entryPoint": 4847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_14841": {
									"entryPoint": 4896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_14862": {
									"entryPoint": 4924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_acceptRequest": {
									"entryPoint": 5192,
									"id": 733,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"fun_cancelRequest": {
									"entryPoint": 6251,
									"id": 814,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 8309,
									"id": 2013,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_getRoyaltyInfo": {
									"entryPoint": 6954,
									"id": 1165,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"fun_hasApprovedCurrency": {
									"entryPoint": 7156,
									"id": 1200,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_hasApprovedTokens": {
									"entryPoint": 7442,
									"id": 1312,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"fun_isExpired": {
									"entryPoint": null,
									"id": 1073,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_isRequestValid": {
									"entryPoint": 6558,
									"id": 980,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"fun_nonReentrantBefore": {
									"entryPoint": 8397,
									"id": 2116,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_requireInterface": {
									"entryPoint": 8138,
									"id": 1351,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_safeTransferFrom": {
									"entryPoint": 8483,
									"id": 2300,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"increment_uint256": {
									"entryPoint": 4999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_uint256_dyn": {
									"entryPoint": 5036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"read_from_calldatat_address": {
									"entryPoint": 5078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_calldatat_bool": {
									"entryPoint": 5118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_calldatat_uint96": {
									"entryPoint": 5098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"storage_set_to_zero_struct_Request": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436101561001257600080fd5b60003560e01c80630bc9b045146110fd57806324dc6bd0146110c35780633015394c1461109f57806336de974214611059578063386c96e014611009578063449768ad14610ed8578063715018a614610e7f5780638da5cb5b14610e56578063956463e514610d3d578063a93c531714610c12578063b056d4ae146106e4578063c58343ef1461062d578063dd0de6ec1461027f578063e6bd720e14610200578063f1f5176c146101955763f2fde38b146100cc57600080fd5b34610190576020366003190112610190576100e56111f8565b6100ed612075565b6001600160a01b0390811690811561013c57600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b600080fd5b34610190576020366003190112610190576004356001600160401b038111610190576101c590369060040161127d565b906101ce6120cd565b60005b8281106101de5760018055005b806101f66101f06101fb93868661142b565b3561186b565b611387565b6101d1565b346101905760a0366003190112610190576044356001600160a01b0381168103610190576001600160401b03906064358281116101905761024590369060040161127d565b6084929192359384116101905761026361027994369060040161127d565b93909261026e6120cd565b602435600435611448565b60018055005b3461019057610100366003190112610190576102996120cd565b6044356001600160a01b03811681036101905760e4351561061c5760a435906001600160601b038216820361019057426001600160601b038316111561060b5760243580151514158061019057602435156105fb57610300636cdb3d1360e11b5b83611fca565b60c4356001600160a01b03811681141580610190576001600160a01b038216156105e95760043592831515840361019057831561052e5780610190576084356064356103513383838a602435611d12565b156104f75750505b61019057610190576001600160601b036020946040519361037985611320565b338552151586850152602435151560408501526001600160a01b038581166060860152606435608086015260843560a0860152911660c08401521660e082015260e435610100820152600454916103cf83611387565b60045582600052600284526040600020600560018060a01b03845116938254948782015115159560ff60a81b6040840151151560a81b169160ff60a01b8860a01b169169ffffffffffffffffffff60b01b1617171783556001830160018060a01b036060830151166001600160601b0360a01b82541617905560808101519485600285015560a082015160038501556001600160601b0360c0830151169361010060e0840151936001600160601b03198560601b16871760048401550151938491015560405195865287860152608435604086015260018060a01b03166060850152608084015260a083015260018060a01b031690827fb67ee55b059861d68b3b5640ee51bde6a5d9d849c6ecdb610663cbd4290bdfd560c03393a460018055604051908152f35b604051633e2c0d9b60e11b81526001600160a01b038816600482015260248101919091526044810191909152336064820152608490fd5b505061055661054160e43560843561140b565b61054e8160643587611b2a565b91905061141e565b600090610564338285611bf4565b156105ba57506000602435806105b0575b8015610594575b15610359575b60405163524f409b60e01b8152600490fd5b505060006024351560243561057c57506001608435141561057c565b5060843515610575565b604051631184019360e31b81526001600160a01b03841660048201526024810191909152336044820152606490fd5b604051631eb3268560e31b8152600490fd5b6103006380ac58cd60e01b6102fa565b60405162d36c8560e81b8152600490fd5b60405162bfc92160e01b8152600490fd5b3461019057602036600319011261019057610646611909565b506004356000526002602052610120604060002060056040519161066983611320565b805460ff60018060a01b03918281168652818160a01c161515602087015260a81c1615156040850152600182015416606084015260028101546080840152600381015460a084015260048101546001600160601b03811660c085015260601c60e084015201546101008201526106e2604051809261120e565bf35b34610190576020366003190112610190576001600160401b03806004351161019057366023600435011215610190576004356004013511610190573660246004356004013560081b6004350101116101905761073e6120cd565b61074d60043560040135611370565b61075a604051918261134f565b600480350135808252601f199061077090611370565b0136602083013760005b6004356004013581106107cc57506001808055604051906020820160208352835180915260206040840194019060005b8181106107b75784860385f35b825186526020958601959092019183016107aa565b906107e060648360081b60043501016113d6565b916101048160081b6004350101351561061c57426001600160601b0361080f60c48460081b60043501016113ea565b16111561060b5760449261082b848360081b60043501016113fe565b15610c0257610842636cdb3d1360e11b5b82611fca565b6001600160a01b0361085e600435600885901b0160e4016113d6565b16156105e95761087760248360081b60043501016113fe565b15610afb5761088e848360081b60043501016113fe565b93608494858460081b6004350101356108b760a48660081b600435010135928383873393611d12565b15610acb575050610ac69394505b6108ea6108db60248560081b60043501016113fe565b918460081b60043501016113fe565b6001600160601b0361090560e48660081b60043501016113d6565b9161091960c48760081b60043501016113ea565b906040519461092786611320565b33865215156020860152151560408501526001600160a01b03858116606086015260048035600889901b016084810135608088015260a481013560a08801529390921660c08601529290921660e08401526101040135610100830152549161098e83611387565b6004558260005260026020526040600020600560018060a01b0384511693825494602082015115159560ff60a81b6040840151151560a81b169160ff60a01b8860a01b169169ffffffffffffffffffff60b01b1617171783556001830160018060a01b036060830151166001600160601b0360a01b82541617905560808101519485600285015560a082015160038501556001600160601b0360c0830151169361010060e0840151936001600160601b03198560601b168717600484015501519384910155604051958652602086015260a48760081b600435010135604086015260018060a01b03166060850152608084015260a083015260018060a01b031690827fb67ee55b059861d68b3b5640ee51bde6a5d9d849c6ecdb610663cbd4290bdfd560c03393a4610ac082856113ac565b52611387565b61077a565b604051633e2c0d9b60e11b81526001600160a01b0390941660048501526024840152908201523360648201528390fd5b919291600435600883901b0160a481013590610b3690610b209061010401358361140b565b61054e8160848760081b60043501013586611b2a565b610b533382610b4e60e48860081b60043501016113d6565b611bf4565b15610bbf5750610b6b848460081b60043501016113fe565b9081610bb6575b8115610b87575b5061058257610ac6926108c5565b9050610b9b848460081b60043501016113fe565b159081610baa575b5085610b79565b60019150141585610ba3565b80159150610b72565b60649085610bd660e48760081b60043501016113d6565b604051631184019360e31b81526001600160a01b03909116600482015260248101929092523390820152fd5b6108426380ac58cd60e01b61083c565b346101905760a0366003190112610190576001600160401b0360043581811161019057610c4390369060040161127d565b60243583811161019057610c5b90369060040161127d565b93909160443582811161019057610c7690369060040161127d565b93909260643581811161019057610c9190369060040161127d565b92909160843590811161019057610cac90369060040161127d565b959094610cb76120cd565b898114801590610d33575b610d215760005b818110610cd65760018055005b806101f68989898f8f8f610d16610d11898f95938f958f959d8f9e610d1c9f82610d0391610d0a9561142b565b359861142b565b359461142b565b6113d6565b91611448565b610cc9565b6040516355ca07b760e11b8152600490fd5b5087811415610cc2565b3461019057602080600319360112610190576004356001600160401b03811161019057610d6e90369060040161127d565b9190610d798361194e565b9260005b818110610d9f57505050610d9b6040519282849384528301906112ad565b0390f35b80610dae610e5192848661142b565b3560005260028086526005604060002060405192610dcb84611320565b815460018060a01b03808216865260ff60a0928181851c1615158d89015260a81c1615156040870152600184015416916060928387015283015460808601526003830154908501526004820154906001600160601b03821660c08601521c60e08401520154610100820152610e4082886113ac565b52610e4b81876113ac565b50611387565b610d7d565b34610190576000366003190112610190576000546040516001600160a01b039091168152602090f35b3461019057600036600319011261019057610e98612075565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b34610190576040366003190112610190576001600160401b0360043581811161019057610f0990369060040161127d565b9160243590811161019057610f2290369060040161127d565b8084929403610d2157610f3482611370565b92610f42604051948561134f565b828452610f4e83611370565b9460209283860196601f1901368837610f668561194e565b9460005b818110610fc0575050505050604051926040840190604085525180915260608401949060005b818110610faa57858703848701528580610d9b89886112ad565b8251151587529583019591830191600101610f90565b80610fe5610fd261100493858961142b565b35610fde83878961142b565b359061199e565b610fef838b6113ac565b52610ffa828b6113ac565b9015159052611387565b610f6a565b34610190576020366003190112610190576001600160a01b038061102b6111f8565b166000908152600360209081526040918290205482519381166001600160a01b0316845260a01c9083015290f35b34610190576060366003190112610190576110826110756111f8565b6044359060243590611b2a565b604080516001600160a01b03939093168352602083019190915290f35b34610190576020366003190112610190576110b86120cd565b61027960043561186b565b34610190576040366003190112610190576101406106e26110e860243560043561199e565b6040929192519215158352602083019061120e565b34610190576060366003190112610190576111166111f8565b6001600160a01b03906024358281169081810361019057604435916001600160601b0383168084036101905761114a612075565b61271081116111e657857f60567f9d30ab22ef3cd7557f56b897c677c80a85c8673a4a5c26eb9349ef8c609560405193611183856112ef565b84526020840192835216958660005260036020526040600020925116906001600160601b0360a01b905160a01b161790556111e1604051928392839092916001600160601b03602091604084019560018060a01b0316845216910152565b0390a2005b60405163e0e54ced60e01b8152600490fd5b600435906001600160a01b038216820361019057565b60018060a01b038082511683526020820151151560208401526040820151151560408401528060608301511660608401526080820151608084015260a082015160a08401526001600160601b0360c08301511660c084015260e08201511660e083015261010080910151910152565b9181601f84011215610190578235916001600160401b038311610190576020808501948460051b01011161019057565b90815180825260208080930193019160005b8281106112cd575050505090565b9091929382610120826112e3600194895161120e565b019501939291016112bf565b604081019081106001600160401b0382111761130a57604052565b634e487b7160e01b600052604160045260246000fd5b61012081019081106001600160401b0382111761130a57604052565b6001600160401b03811161130a57604052565b90601f801991011681019081106001600160401b0382111761130a57604052565b6001600160401b03811161130a5760051b60200190565b60001981146113965760010190565b634e487b7160e01b600052601160045260246000fd5b80518210156113c05760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b356001600160a01b03811681036101905790565b356001600160601b03811681036101905790565b3580151581036101905790565b8181029291811591840414171561139657565b9190820180921161139657565b91908110156113c05760051b0190565b9190820391821161139657565b939594909291946000928584526002602052604084206040519061146b82611320565b600581549160ff60018060a01b03841693848652818160a01c161515602087015260a81c161515604085015260018060a01b03600182015416606085015260028101546080850152600381015460a085015260048101546001600160601b03811660c086015260601c60e08501520154610100830152156118525785158015611845575b6105825760c08101516001600160601b031642101561060b578289036117495787938660a0830151146000146118245787865260026020526115526040872060056000918281558260018201558260028201558260038201558260048201550155565b60018060a01b036060830151169961156f8861010085015161140b565b61157f818d608087015190611b2a565b95909360208601511515978860001461180b5786516001600160a01b031699988a983397915b816117c3575b5050508a948b5b81811061175b57505050505060208401511560001461173657936115dc6115f1939260809661143b565b915b60e08501516001600160a01b0316612123565b6040810151156116d057015190873b156116cc57604051637921219560e11b81526001600160a01b0393841660048201529216602483015260448201526064810183905260a0608482015260a48101829052818160c481838a5af180156116c1576116aa575b5060406003915b8481526002602052200154906040519360018060a01b03168452602084015260408301527f146c7c3a67244cf406ca437a82b2bf587bc02b628b63659c73b4295b8b00e76f60603393a4565b6116b4829161133c565b6116be5738611657565b80fd5b6040513d84823e3d90fd5b8380fd5b015191873b156116cc57604051632142170760e11b81526001600160a01b0391821660048201529116602482015260448101919091528181606481838a5af180156116c15791604091600393611727575b5061165e565b6117309061133c565b38611721565b809111611749576080936115f1926115de565b6040516330fd3c3160e01b8152600490fd5b61176681838761142b565b3590611776610d1182868861142b565b976001600160a01b0389161580156117bb575b611749578261179e6117b6946101f69361141e565b60e08d0151909a908c906001600160a01b0316612123565b6115b2565b508215611789565b91959091156117f957906117da816117f19361143b565b955b60e08a015189906001600160a01b0316612123565b3880806115ab565b94908581116111e6576117f1916117dc565b8651339a506001600160a01b0316988e988a97916115a5565b87865260026020526003604087200161183e88825461143b565b9055611552565b5060a081015186116114ef565b6040516364b4f07960e11b815260048101889052602490fd5b600081815260026020526040812080549192916001600160a01b039190821633036118f0579060017fe0d7665e06e7db1fc500d66d4e3898d1d4a5533d7efe54b352fcdaa177c22783920154169282815260026020526118ec6040822060056000918281558260018201558260028201558260038201558260048201550155565b80a3565b6040516364b4f07960e11b815260048101849052602490fd5b6040519061191682611320565b816101006000918281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e08201520152565b9061195882611370565b611965604051918261134f565b8281528092611976601f1991611370565b019060005b82811061198757505050565b602090611992611909565b8282850101520161197b565b9190916119a9611909565b506000526002602052604060002091604051926119c584611320565b80549060018060a01b03928383169384875260ff8460a01c1615159485602089015260ff604089019560a81c161515855281600185015416936060890194855260028101549160808a019283526003820154978860a08c015260056004840154938c60c06001600160601b03871691015260e08d019460601c8552015491826101008d01528615611b0e575b15159889611af7575b89611aec575b5088611a73575b50505050505050509190565b909192939495969750600014611aa957505081611a9c9551151594511690519187511693611d12565b3880808080808080611a67565b611ae796508395849593611ac5611add969495611ad29461140b565b9788925116905190611b2a565b92905051169361141e565b9085511691611bf4565b611a9c565b861115985038611a60565b60c08c01516001600160601b031642109950611a5a565b899650611a51565b51906001600160a01b038216820361019057565b6040805163152a902d60e11b81526004810193909352602483018490526001600160a01b0394939290918516908281604481855afa90816000918293611bb6575b50611bad575050916020611ba992612710946000526003825280600020905190611b94826112ef565b549687169687825260a01c918291015261140b565b0490565b95509392505050565b919092508482813d8311611bed575b611bcf818361134f565b810103126116be57506020611be382611b16565b9101519138611b6b565b503d611bc5565b6040516370a0823160e01b81526001600160a01b03848116600483015291909116926020918281602481885afa8015611cbe578491600091611cca575b5010159384611c42575b5050505090565b604051636eb1769f60e11b81526001600160a01b03929092166004830152306024830152929350918190839060449082905afa908115611cbe57600091611c92575b509050101538808080611c3b565b82813d8311611cb7575b611ca6818361134f565b810103126116be5750518038611c84565b503d611c9c565b6040513d6000823e3d90fd5b91508382813d8311611cf3575b611ce1818361134f565b810103126116be575083905138611c31565b503d611cd7565b90816020910312610190575180151581036101905790565b93919093611eca576040516331a9108f60e11b8152600481018290526000946001600160a01b0390811694602093879385816024818b5afa899181611e8f575b50611e1b575b50506001149586611e0c575b5085611d73575b505050505090565b939450909216301491908215611d92575b505090503880808080611d6b565b60405163e985e9c560e01b81526001600160a01b0391909116600482015230602482015290929091508290829060449082905afa918215611cbe57600092611ddf575b5050803880611d84565b611dfe9250803d10611e05575b611df6818361134f565b810190611cfa565b3880611dd5565b503d611dec565b81965016858416149438611d64565b60405163020604bf60e21b81526004810192909252975084816024818a5afa60009181611e58575b50611e4f575b80611d58565b92506001611e49565b90918682813d8311611e88575b611e6f818361134f565b810103126116be5750611e8190611b16565b9038611e43565b503d611e65565b9091508681813d8311611ec3575b611ea7818361134f565b81010312611ebf57611eb890611b16565b9038611d52565b8980fd5b503d611e9d565b9290918015159384611f42575b505082611ee357505090565b60405163e985e9c560e01b81526001600160a01b039283166004820152306024820152925060209183916044918391165afa908115611cbe57600091611f27575090565b611f3f915060203d8111611e0557611df6818361134f565b90565b604051627eeac760e11b81526001600160a01b0385166004820152602481019190915291935090602081806044810103816001600160a01b0388165afa908115611cbe57600091611f99575b501015913880611ed7565b906020823d8211611fc2575b81611fb26020938361134f565b810103126116be57505138611f8e565b3d9150611fa5565b90813b612003575b604051625d185960e41b81526001600160a01b0390921660048301526001600160e01b031916602482015260449150fd5b6040516301ffc9a760e01b81526001600160e01b0319821660048201526020816024816001600160a01b0387165afa60009181612055575b50612047575b50611fd2565b6120515782612041565b5050565b61206e91925060203d8111611e0557611df6818361134f565b903861203b565b6000546001600160a01b0316330361208957565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6002600154146120de576002600155565b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b6040516323b872dd60e01b60208083019182526001600160a01b0394851660248401529490931660448201526064808201959095529384529192601f1992919061216e60848261134f565b600092839283809351925af1913d1561225f573d6001600160401b03811161224b576121a48560405193601f840116018361134f565b81528091843d92013e5b8161221b575b50156121bd5750565b6084906040519062461bcd60e51b82526004820152603160248201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472604482015270185b9cd9995c919c9bdb4819985a5b1959607a1b6064820152fd5b80518015925083908315612233575b505050386121b4565b6122439350820181019101611cfa565b38828161222a565b634e487b7160e01b83526041600452602483fd5b505060606121ae56fea2646970667358221220f36e4ed36279081a8e9bb1f632ab119d960f40bf5477f8846359b2e6e32bd23164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xBC9B045 EQ PUSH2 0x10FD JUMPI DUP1 PUSH4 0x24DC6BD0 EQ PUSH2 0x10C3 JUMPI DUP1 PUSH4 0x3015394C EQ PUSH2 0x109F JUMPI DUP1 PUSH4 0x36DE9742 EQ PUSH2 0x1059 JUMPI DUP1 PUSH4 0x386C96E0 EQ PUSH2 0x1009 JUMPI DUP1 PUSH4 0x449768AD EQ PUSH2 0xED8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xE7F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE56 JUMPI DUP1 PUSH4 0x956463E5 EQ PUSH2 0xD3D JUMPI DUP1 PUSH4 0xA93C5317 EQ PUSH2 0xC12 JUMPI DUP1 PUSH4 0xB056D4AE EQ PUSH2 0x6E4 JUMPI DUP1 PUSH4 0xC58343EF EQ PUSH2 0x62D JUMPI DUP1 PUSH4 0xDD0DE6EC EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xE6BD720E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0xF1F5176C EQ PUSH2 0x195 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0xE5 PUSH2 0x11F8 JUMP JUMPDEST PUSH2 0xED PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x13C JUMPI PUSH1 0x0 SLOAD DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x190 JUMPI PUSH2 0x1C5 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP1 PUSH2 0x1CE PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1DE JUMPI PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP1 PUSH2 0x1F6 PUSH2 0x1F0 PUSH2 0x1FB SWAP4 DUP7 DUP7 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD PUSH2 0x186B JUMP JUMPDEST PUSH2 0x1387 JUMP JUMPDEST PUSH2 0x1D1 JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x64 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0x245 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST PUSH1 0x84 SWAP3 SWAP2 SWAP3 CALLDATALOAD SWAP4 DUP5 GT PUSH2 0x190 JUMPI PUSH2 0x263 PUSH2 0x279 SWAP5 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0x26E PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH2 0x100 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0x299 PUSH2 0x20CD JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x190 JUMPI PUSH1 0xE4 CALLDATALOAD ISZERO PUSH2 0x61C JUMPI PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x190 JUMPI TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND GT ISZERO PUSH2 0x60B JUMPI PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO EQ ISZERO DUP1 PUSH2 0x190 JUMPI PUSH1 0x24 CALLDATALOAD ISZERO PUSH2 0x5FB JUMPI PUSH2 0x300 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL JUMPDEST DUP4 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ ISZERO DUP1 PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x5E9 JUMPI PUSH1 0x4 CALLDATALOAD SWAP3 DUP4 ISZERO ISZERO DUP5 SUB PUSH2 0x190 JUMPI DUP4 ISZERO PUSH2 0x52E JUMPI DUP1 PUSH2 0x190 JUMPI PUSH1 0x84 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH2 0x351 CALLER DUP4 DUP4 DUP11 PUSH1 0x24 CALLDATALOAD PUSH2 0x1D12 JUMP JUMPDEST ISZERO PUSH2 0x4F7 JUMPI POP POP JUMPDEST PUSH2 0x190 JUMPI PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x379 DUP6 PUSH2 0x1320 JUMP JUMPDEST CALLER DUP6 MSTORE ISZERO ISZERO DUP7 DUP6 ADD MSTORE PUSH1 0x24 CALLDATALOAD ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA0 DUP7 ADD MSTORE SWAP2 AND PUSH1 0xC0 DUP5 ADD MSTORE AND PUSH1 0xE0 DUP3 ADD MSTORE PUSH1 0xE4 CALLDATALOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x4 SLOAD SWAP2 PUSH2 0x3CF DUP4 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x4 SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 MLOAD AND SWAP4 DUP3 SLOAD SWAP5 DUP8 DUP3 ADD MLOAD ISZERO ISZERO SWAP6 PUSH1 0xFF PUSH1 0xA8 SHL PUSH1 0x40 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xA8 SHL AND SWAP2 PUSH1 0xFF PUSH1 0xA0 SHL DUP9 PUSH1 0xA0 SHL AND SWAP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0xB0 SHL AND OR OR OR DUP4 SSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD SWAP5 DUP6 PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xC0 DUP4 ADD MLOAD AND SWAP4 PUSH2 0x100 PUSH1 0xE0 DUP5 ADD MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP6 PUSH1 0x60 SHL AND DUP8 OR PUSH1 0x4 DUP5 ADD SSTORE ADD MLOAD SWAP4 DUP5 SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE DUP8 DUP7 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 PUSH32 0xB67EE55B059861D68B3B5640EE51BDE6A5D9D849C6ECDB610663CBD4290BDFD5 PUSH1 0xC0 CALLER SWAP4 LOG4 PUSH1 0x1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3E2C0D9B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP POP PUSH2 0x556 PUSH2 0x541 PUSH1 0xE4 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH2 0x140B JUMP JUMPDEST PUSH2 0x54E DUP2 PUSH1 0x64 CALLDATALOAD DUP8 PUSH2 0x1B2A JUMP JUMPDEST SWAP2 SWAP1 POP PUSH2 0x141E JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH2 0x564 CALLER DUP3 DUP6 PUSH2 0x1BF4 JUMP JUMPDEST ISZERO PUSH2 0x5BA JUMPI POP PUSH1 0x0 PUSH1 0x24 CALLDATALOAD DUP1 PUSH2 0x5B0 JUMPI JUMPDEST DUP1 ISZERO PUSH2 0x594 JUMPI JUMPDEST ISZERO PUSH2 0x359 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x524F409B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0x24 CALLDATALOAD ISZERO PUSH1 0x24 CALLDATALOAD PUSH2 0x57C JUMPI POP PUSH1 0x1 PUSH1 0x84 CALLDATALOAD EQ ISZERO PUSH2 0x57C JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD ISZERO PUSH2 0x575 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x11840193 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLER PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1EB32685 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x300 PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xD36C85 PUSH1 0xE8 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xBFC921 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0x646 PUSH2 0x1909 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x120 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x5 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x669 DUP4 PUSH2 0x1320 JUMP JUMPDEST DUP1 SLOAD PUSH1 0xFF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 DUP2 AND DUP7 MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x60 SHR PUSH1 0xE0 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0x6E2 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x120E JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 PUSH1 0x4 CALLDATALOAD GT PUSH2 0x190 JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0x4 CALLDATALOAD ADD SLT ISZERO PUSH2 0x190 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT PUSH2 0x190 JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD GT PUSH2 0x190 JUMPI PUSH2 0x73E PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x74D PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x75A PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x4 DUP1 CALLDATALOAD ADD CALLDATALOAD DUP1 DUP3 MSTORE PUSH1 0x1F NOT SWAP1 PUSH2 0x770 SWAP1 PUSH2 0x1370 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP2 LT PUSH2 0x7CC JUMPI POP PUSH1 0x1 DUP1 DUP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP4 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP5 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x7B7 JUMPI DUP5 DUP7 SUB DUP6 RETURN JUMPDEST DUP3 MLOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP3 ADD SWAP2 DUP4 ADD PUSH2 0x7AA JUMP JUMPDEST SWAP1 PUSH2 0x7E0 PUSH1 0x64 DUP4 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13D6 JUMP JUMPDEST SWAP2 PUSH2 0x104 DUP2 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD CALLDATALOAD ISZERO PUSH2 0x61C JUMPI TIMESTAMP PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x80F PUSH1 0xC4 DUP5 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13EA JUMP JUMPDEST AND GT ISZERO PUSH2 0x60B JUMPI PUSH1 0x44 SWAP3 PUSH2 0x82B DUP5 DUP4 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST ISZERO PUSH2 0xC02 JUMPI PUSH2 0x842 PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL JUMPDEST DUP3 PUSH2 0x1FCA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x85E PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP6 SWAP1 SHL ADD PUSH1 0xE4 ADD PUSH2 0x13D6 JUMP JUMPDEST AND ISZERO PUSH2 0x5E9 JUMPI PUSH2 0x877 PUSH1 0x24 DUP4 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST ISZERO PUSH2 0xAFB JUMPI PUSH2 0x88E DUP5 DUP4 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST SWAP4 PUSH1 0x84 SWAP5 DUP6 DUP5 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD CALLDATALOAD PUSH2 0x8B7 PUSH1 0xA4 DUP7 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD CALLDATALOAD SWAP3 DUP4 DUP4 DUP8 CALLER SWAP4 PUSH2 0x1D12 JUMP JUMPDEST ISZERO PUSH2 0xACB JUMPI POP POP PUSH2 0xAC6 SWAP4 SWAP5 POP JUMPDEST PUSH2 0x8EA PUSH2 0x8DB PUSH1 0x24 DUP6 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST SWAP2 DUP5 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH2 0x905 PUSH1 0xE4 DUP7 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13D6 JUMP JUMPDEST SWAP2 PUSH2 0x919 PUSH1 0xC4 DUP8 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13EA JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0x927 DUP7 PUSH2 0x1320 JUMP JUMPDEST CALLER DUP7 MSTORE ISZERO ISZERO PUSH1 0x20 DUP7 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x4 DUP1 CALLDATALOAD PUSH1 0x8 DUP10 SWAP1 SHL ADD PUSH1 0x84 DUP2 ADD CALLDATALOAD PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA4 DUP2 ADD CALLDATALOAD PUSH1 0xA0 DUP9 ADD MSTORE SWAP4 SWAP1 SWAP3 AND PUSH1 0xC0 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP3 AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x104 ADD CALLDATALOAD PUSH2 0x100 DUP4 ADD MSTORE SLOAD SWAP2 PUSH2 0x98E DUP4 PUSH2 0x1387 JUMP JUMPDEST PUSH1 0x4 SSTORE DUP3 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 MLOAD AND SWAP4 DUP3 SLOAD SWAP5 PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO SWAP6 PUSH1 0xFF PUSH1 0xA8 SHL PUSH1 0x40 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xA8 SHL AND SWAP2 PUSH1 0xFF PUSH1 0xA0 SHL DUP9 PUSH1 0xA0 SHL AND SWAP2 PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0xB0 SHL AND OR OR OR DUP4 SSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x80 DUP2 ADD MLOAD SWAP5 DUP6 PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xC0 DUP4 ADD MLOAD AND SWAP4 PUSH2 0x100 PUSH1 0xE0 DUP5 ADD MLOAD SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT DUP6 PUSH1 0x60 SHL AND DUP8 OR PUSH1 0x4 DUP5 ADD SSTORE ADD MLOAD SWAP4 DUP5 SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0xA4 DUP8 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD CALLDATALOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 PUSH32 0xB67EE55B059861D68B3B5640EE51BDE6A5D9D849C6ECDB610663CBD4290BDFD5 PUSH1 0xC0 CALLER SWAP4 LOG4 PUSH2 0xAC0 DUP3 DUP6 PUSH2 0x13AC JUMP JUMPDEST MSTORE PUSH2 0x1387 JUMP JUMPDEST PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3E2C0D9B PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE SWAP1 DUP3 ADD MSTORE CALLER PUSH1 0x64 DUP3 ADD MSTORE DUP4 SWAP1 REVERT JUMPDEST SWAP2 SWAP3 SWAP2 PUSH1 0x4 CALLDATALOAD PUSH1 0x8 DUP4 SWAP1 SHL ADD PUSH1 0xA4 DUP2 ADD CALLDATALOAD SWAP1 PUSH2 0xB36 SWAP1 PUSH2 0xB20 SWAP1 PUSH2 0x104 ADD CALLDATALOAD DUP4 PUSH2 0x140B JUMP JUMPDEST PUSH2 0x54E DUP2 PUSH1 0x84 DUP8 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD CALLDATALOAD DUP7 PUSH2 0x1B2A JUMP JUMPDEST PUSH2 0xB53 CALLER DUP3 PUSH2 0xB4E PUSH1 0xE4 DUP9 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13D6 JUMP JUMPDEST PUSH2 0x1BF4 JUMP JUMPDEST ISZERO PUSH2 0xBBF JUMPI POP PUSH2 0xB6B DUP5 DUP5 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST SWAP1 DUP2 PUSH2 0xBB6 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0xB87 JUMPI JUMPDEST POP PUSH2 0x582 JUMPI PUSH2 0xAC6 SWAP3 PUSH2 0x8C5 JUMP JUMPDEST SWAP1 POP PUSH2 0xB9B DUP5 DUP5 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13FE JUMP JUMPDEST ISZERO SWAP1 DUP2 PUSH2 0xBAA JUMPI JUMPDEST POP DUP6 PUSH2 0xB79 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP EQ ISZERO DUP6 PUSH2 0xBA3 JUMP JUMPDEST DUP1 ISZERO SWAP2 POP PUSH2 0xB72 JUMP JUMPDEST PUSH1 0x64 SWAP1 DUP6 PUSH2 0xBD6 PUSH1 0xE4 DUP8 PUSH1 0x8 SHL PUSH1 0x4 CALLDATALOAD ADD ADD PUSH2 0x13D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x11840193 PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE CALLER SWAP1 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x842 PUSH4 0x80AC58CD PUSH1 0xE0 SHL PUSH2 0x83C JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xC43 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xC5B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xC76 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH1 0x64 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xC91 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP3 SWAP1 SWAP2 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xCAC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP6 SWAP1 SWAP5 PUSH2 0xCB7 PUSH2 0x20CD JUMP JUMPDEST DUP10 DUP2 EQ DUP1 ISZERO SWAP1 PUSH2 0xD33 JUMPI JUMPDEST PUSH2 0xD21 JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xCD6 JUMPI PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST DUP1 PUSH2 0x1F6 DUP10 DUP10 DUP10 DUP16 DUP16 DUP16 PUSH2 0xD16 PUSH2 0xD11 DUP10 DUP16 SWAP6 SWAP4 DUP16 SWAP6 DUP16 SWAP6 SWAP14 DUP16 SWAP15 PUSH2 0xD1C SWAP16 DUP3 PUSH2 0xD03 SWAP2 PUSH2 0xD0A SWAP6 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD SWAP9 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD SWAP5 PUSH2 0x142B JUMP JUMPDEST PUSH2 0x13D6 JUMP JUMPDEST SWAP2 PUSH2 0x1448 JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x55CA07B7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST POP DUP8 DUP2 EQ ISZERO PUSH2 0xCC2 JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x190 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xD6E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xD79 DUP4 PUSH2 0x194E JUMP JUMPDEST SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xD9F JUMPI POP POP POP PUSH2 0xD9B PUSH1 0x40 MLOAD SWAP3 DUP3 DUP5 SWAP4 DUP5 MSTORE DUP4 ADD SWAP1 PUSH2 0x12AD JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 PUSH2 0xDAE PUSH2 0xE51 SWAP3 DUP5 DUP7 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x2 DUP1 DUP7 MSTORE PUSH1 0x5 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xDCB DUP5 PUSH2 0x1320 JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP7 MSTORE PUSH1 0xFF PUSH1 0xA0 SWAP3 DUP2 DUP2 DUP6 SHR AND ISZERO ISZERO DUP14 DUP10 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x1 DUP5 ADD SLOAD AND SWAP2 PUSH1 0x60 SWAP3 DUP4 DUP8 ADD MSTORE DUP4 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP3 AND PUSH1 0xC0 DUP7 ADD MSTORE SHR PUSH1 0xE0 DUP5 ADD MSTORE ADD SLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH2 0xE40 DUP3 DUP9 PUSH2 0x13AC JUMP JUMPDEST MSTORE PUSH2 0xE4B DUP2 DUP8 PUSH2 0x13AC JUMP JUMPDEST POP PUSH2 0x1387 JUMP JUMPDEST PUSH2 0xD7D JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0xE98 PUSH2 0x2075 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xF09 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x190 JUMPI PUSH2 0xF22 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x127D JUMP JUMPDEST DUP1 DUP5 SWAP3 SWAP5 SUB PUSH2 0xD21 JUMPI PUSH2 0xF34 DUP3 PUSH2 0x1370 JUMP JUMPDEST SWAP3 PUSH2 0xF42 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x134F JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH2 0xF4E DUP4 PUSH2 0x1370 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP3 DUP4 DUP7 ADD SWAP7 PUSH1 0x1F NOT ADD CALLDATASIZE DUP9 CALLDATACOPY PUSH2 0xF66 DUP6 PUSH2 0x194E JUMP JUMPDEST SWAP5 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xFC0 JUMPI POP POP POP POP POP PUSH1 0x40 MLOAD SWAP3 PUSH1 0x40 DUP5 ADD SWAP1 PUSH1 0x40 DUP6 MSTORE MLOAD DUP1 SWAP2 MSTORE PUSH1 0x60 DUP5 ADD SWAP5 SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xFAA JUMPI DUP6 DUP8 SUB DUP5 DUP8 ADD MSTORE DUP6 DUP1 PUSH2 0xD9B DUP10 DUP9 PUSH2 0x12AD JUMP JUMPDEST DUP3 MLOAD ISZERO ISZERO DUP8 MSTORE SWAP6 DUP4 ADD SWAP6 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0xF90 JUMP JUMPDEST DUP1 PUSH2 0xFE5 PUSH2 0xFD2 PUSH2 0x1004 SWAP4 DUP6 DUP10 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD PUSH2 0xFDE DUP4 DUP8 DUP10 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x199E JUMP JUMPDEST PUSH2 0xFEF DUP4 DUP12 PUSH2 0x13AC JUMP JUMPDEST MSTORE PUSH2 0xFFA DUP3 DUP12 PUSH2 0x13AC JUMP JUMPDEST SWAP1 ISZERO ISZERO SWAP1 MSTORE PUSH2 0x1387 JUMP JUMPDEST PUSH2 0xF6A JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x102B PUSH2 0x11F8 JUMP JUMPDEST AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD SWAP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0xA0 SHR SWAP1 DUP4 ADD MSTORE SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0x1082 PUSH2 0x1075 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x1B2A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0x10B8 PUSH2 0x20CD JUMP JUMPDEST PUSH2 0x279 PUSH1 0x4 CALLDATALOAD PUSH2 0x186B JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0x140 PUSH2 0x6E2 PUSH2 0x10E8 PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x199E JUMP JUMPDEST PUSH1 0x40 SWAP3 SWAP2 SWAP3 MLOAD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x120E JUMP JUMPDEST CALLVALUE PUSH2 0x190 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x190 JUMPI PUSH2 0x1116 PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x190 JUMPI PUSH1 0x44 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP4 AND DUP1 DUP5 SUB PUSH2 0x190 JUMPI PUSH2 0x114A PUSH2 0x2075 JUMP JUMPDEST PUSH2 0x2710 DUP2 GT PUSH2 0x11E6 JUMPI DUP6 PUSH32 0x60567F9D30AB22EF3CD7557F56B897C677C80A85C8673A4A5C26EB9349EF8C60 SWAP6 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x1183 DUP6 PUSH2 0x12EF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 DUP4 MSTORE AND SWAP6 DUP7 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 MLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL SWAP1 MLOAD PUSH1 0xA0 SHL AND OR SWAP1 SSTORE PUSH2 0x11E1 PUSH1 0x40 MLOAD SWAP3 DUP4 SWAP3 DUP4 SWAP1 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0x20 SWAP2 PUSH1 0x40 DUP5 ADD SWAP6 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE0E54CED PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x190 JUMPI JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 MLOAD AND DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE DUP1 PUSH1 0x60 DUP4 ADD MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xC0 DUP4 ADD MLOAD AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xE0 DUP3 ADD MLOAD AND PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 SWAP2 ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x190 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x190 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x190 JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x12CD JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH2 0x120 DUP3 PUSH2 0x12E3 PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH2 0x120E JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x12BF JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x130A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x130A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x130A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x130A JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x130A JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x1396 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x13C0 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x190 JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x190 JUMPI SWAP1 JUMP JUMPDEST CALLDATALOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x190 JUMPI SWAP1 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x1396 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x1396 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x13C0 JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x1396 JUMPI JUMP JUMPDEST SWAP4 SWAP6 SWAP5 SWAP1 SWAP3 SWAP2 SWAP5 PUSH1 0x0 SWAP3 DUP6 DUP5 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x146B DUP3 PUSH2 0x1320 JUMP JUMPDEST PUSH1 0x5 DUP2 SLOAD SWAP2 PUSH1 0xFF PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP4 DUP5 DUP7 MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x1 DUP3 ADD SLOAD AND PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP2 AND PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x60 SHR PUSH1 0xE0 DUP6 ADD MSTORE ADD SLOAD PUSH2 0x100 DUP4 ADD MSTORE ISZERO PUSH2 0x1852 JUMPI DUP6 ISZERO DUP1 ISZERO PUSH2 0x1845 JUMPI JUMPDEST PUSH2 0x582 JUMPI PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP LT ISZERO PUSH2 0x60B JUMPI DUP3 DUP10 SUB PUSH2 0x1749 JUMPI DUP8 SWAP4 DUP7 PUSH1 0xA0 DUP4 ADD MLOAD EQ PUSH1 0x0 EQ PUSH2 0x1824 JUMPI DUP8 DUP7 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x1552 PUSH1 0x40 DUP8 KECCAK256 PUSH1 0x5 PUSH1 0x0 SWAP2 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND SWAP10 PUSH2 0x156F DUP9 PUSH2 0x100 DUP6 ADD MLOAD PUSH2 0x140B JUMP JUMPDEST PUSH2 0x157F DUP2 DUP14 PUSH1 0x80 DUP8 ADD MLOAD SWAP1 PUSH2 0x1B2A JUMP JUMPDEST SWAP6 SWAP1 SWAP4 PUSH1 0x20 DUP7 ADD MLOAD ISZERO ISZERO SWAP8 DUP9 PUSH1 0x0 EQ PUSH2 0x180B JUMPI DUP7 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP10 SWAP9 DUP11 SWAP9 CALLER SWAP8 SWAP2 JUMPDEST DUP2 PUSH2 0x17C3 JUMPI JUMPDEST POP POP POP DUP11 SWAP5 DUP12 JUMPDEST DUP2 DUP2 LT PUSH2 0x175B JUMPI POP POP POP POP POP PUSH1 0x20 DUP5 ADD MLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x1736 JUMPI SWAP4 PUSH2 0x15DC PUSH2 0x15F1 SWAP4 SWAP3 PUSH1 0x80 SWAP7 PUSH2 0x143B JUMP JUMPDEST SWAP2 JUMPDEST PUSH1 0xE0 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2123 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD ISZERO PUSH2 0x16D0 JUMPI ADD MLOAD SWAP1 DUP8 EXTCODESIZE ISZERO PUSH2 0x16CC JUMPI PUSH1 0x40 MLOAD PUSH4 0x79212195 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP3 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 DUP2 ADD DUP3 SWAP1 MSTORE DUP2 DUP2 PUSH1 0xC4 DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x16C1 JUMPI PUSH2 0x16AA JUMPI JUMPDEST POP PUSH1 0x40 PUSH1 0x3 SWAP2 JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE KECCAK256 ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH32 0x146C7C3A67244CF406CA437A82B2BF587BC02B628B63659C73B4295B8B00E76F PUSH1 0x60 CALLER SWAP4 LOG4 JUMP JUMPDEST PUSH2 0x16B4 DUP3 SWAP2 PUSH2 0x133C JUMP JUMPDEST PUSH2 0x16BE JUMPI CODESIZE PUSH2 0x1657 JUMP JUMPDEST DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST ADD MLOAD SWAP2 DUP8 EXTCODESIZE ISZERO PUSH2 0x16CC JUMPI PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP2 PUSH1 0x64 DUP2 DUP4 DUP11 GAS CALL DUP1 ISZERO PUSH2 0x16C1 JUMPI SWAP2 PUSH1 0x40 SWAP2 PUSH1 0x3 SWAP4 PUSH2 0x1727 JUMPI JUMPDEST POP PUSH2 0x165E JUMP JUMPDEST PUSH2 0x1730 SWAP1 PUSH2 0x133C JUMP JUMPDEST CODESIZE PUSH2 0x1721 JUMP JUMPDEST DUP1 SWAP2 GT PUSH2 0x1749 JUMPI PUSH1 0x80 SWAP4 PUSH2 0x15F1 SWAP3 PUSH2 0x15DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x30FD3C31 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH2 0x1766 DUP2 DUP4 DUP8 PUSH2 0x142B JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH2 0x1776 PUSH2 0xD11 DUP3 DUP7 DUP9 PUSH2 0x142B JUMP JUMPDEST SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND ISZERO DUP1 ISZERO PUSH2 0x17BB JUMPI JUMPDEST PUSH2 0x1749 JUMPI DUP3 PUSH2 0x179E PUSH2 0x17B6 SWAP5 PUSH2 0x1F6 SWAP4 PUSH2 0x141E JUMP JUMPDEST PUSH1 0xE0 DUP14 ADD MLOAD SWAP1 SWAP11 SWAP1 DUP13 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2123 JUMP JUMPDEST PUSH2 0x15B2 JUMP JUMPDEST POP DUP3 ISZERO PUSH2 0x1789 JUMP JUMPDEST SWAP2 SWAP6 SWAP1 SWAP2 ISZERO PUSH2 0x17F9 JUMPI SWAP1 PUSH2 0x17DA DUP2 PUSH2 0x17F1 SWAP4 PUSH2 0x143B JUMP JUMPDEST SWAP6 JUMPDEST PUSH1 0xE0 DUP11 ADD MLOAD DUP10 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2123 JUMP JUMPDEST CODESIZE DUP1 DUP1 PUSH2 0x15AB JUMP JUMPDEST SWAP5 SWAP1 DUP6 DUP2 GT PUSH2 0x11E6 JUMPI PUSH2 0x17F1 SWAP2 PUSH2 0x17DC JUMP JUMPDEST DUP7 MLOAD CALLER SWAP11 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP9 DUP15 SWAP9 DUP11 SWAP8 SWAP2 PUSH2 0x15A5 JUMP JUMPDEST DUP8 DUP7 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x3 PUSH1 0x40 DUP8 KECCAK256 ADD PUSH2 0x183E DUP9 DUP3 SLOAD PUSH2 0x143B JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1552 JUMP JUMPDEST POP PUSH1 0xA0 DUP2 ADD MLOAD DUP7 GT PUSH2 0x14EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x64B4F079 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER SUB PUSH2 0x18F0 JUMPI SWAP1 PUSH1 0x1 PUSH32 0xE0D7665E06E7DB1FC500D66D4E3898D1D4A5533D7EFE54B352FCDAA177C22783 SWAP3 ADD SLOAD AND SWAP3 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH2 0x18EC PUSH1 0x40 DUP3 KECCAK256 PUSH1 0x5 PUSH1 0x0 SWAP2 DUP3 DUP2 SSTORE DUP3 PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH1 0x2 DUP3 ADD SSTORE DUP3 PUSH1 0x3 DUP3 ADD SSTORE DUP3 PUSH1 0x4 DUP3 ADD SSTORE ADD SSTORE JUMP JUMPDEST DUP1 LOG3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x64B4F079 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1916 DUP3 PUSH2 0x1320 JUMP JUMPDEST DUP2 PUSH2 0x100 PUSH1 0x0 SWAP2 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE DUP3 PUSH1 0xA0 DUP3 ADD MSTORE DUP3 PUSH1 0xC0 DUP3 ADD MSTORE DUP3 PUSH1 0xE0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1958 DUP3 PUSH2 0x1370 JUMP JUMPDEST PUSH2 0x1965 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0x134F JUMP JUMPDEST DUP3 DUP2 MSTORE DUP1 SWAP3 PUSH2 0x1976 PUSH1 0x1F NOT SWAP2 PUSH2 0x1370 JUMP JUMPDEST ADD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1987 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x1992 PUSH2 0x1909 JUMP JUMPDEST DUP3 DUP3 DUP6 ADD ADD MSTORE ADD PUSH2 0x197B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x19A9 PUSH2 0x1909 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x19C5 DUP5 PUSH2 0x1320 JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 DUP4 AND SWAP4 DUP5 DUP8 MSTORE PUSH1 0xFF DUP5 PUSH1 0xA0 SHR AND ISZERO ISZERO SWAP5 DUP6 PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0xFF PUSH1 0x40 DUP10 ADD SWAP6 PUSH1 0xA8 SHR AND ISZERO ISZERO DUP6 MSTORE DUP2 PUSH1 0x1 DUP6 ADD SLOAD AND SWAP4 PUSH1 0x60 DUP10 ADD SWAP5 DUP6 MSTORE PUSH1 0x2 DUP2 ADD SLOAD SWAP2 PUSH1 0x80 DUP11 ADD SWAP3 DUP4 MSTORE PUSH1 0x3 DUP3 ADD SLOAD SWAP8 DUP9 PUSH1 0xA0 DUP13 ADD MSTORE PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 DUP13 PUSH1 0xC0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB DUP8 AND SWAP2 ADD MSTORE PUSH1 0xE0 DUP14 ADD SWAP5 PUSH1 0x60 SHR DUP6 MSTORE ADD SLOAD SWAP2 DUP3 PUSH2 0x100 DUP14 ADD MSTORE DUP7 ISZERO PUSH2 0x1B0E JUMPI JUMPDEST ISZERO ISZERO SWAP9 DUP10 PUSH2 0x1AF7 JUMPI JUMPDEST DUP10 PUSH2 0x1AEC JUMPI JUMPDEST POP DUP9 PUSH2 0x1A73 JUMPI JUMPDEST POP POP POP POP POP POP POP POP SWAP2 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 SWAP8 POP PUSH1 0x0 EQ PUSH2 0x1AA9 JUMPI POP POP DUP2 PUSH2 0x1A9C SWAP6 MLOAD ISZERO ISZERO SWAP5 MLOAD AND SWAP1 MLOAD SWAP2 DUP8 MLOAD AND SWAP4 PUSH2 0x1D12 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x1A67 JUMP JUMPDEST PUSH2 0x1AE7 SWAP7 POP DUP4 SWAP6 DUP5 SWAP6 SWAP4 PUSH2 0x1AC5 PUSH2 0x1ADD SWAP7 SWAP5 SWAP6 PUSH2 0x1AD2 SWAP5 PUSH2 0x140B JUMP JUMPDEST SWAP8 DUP9 SWAP3 MLOAD AND SWAP1 MLOAD SWAP1 PUSH2 0x1B2A JUMP JUMPDEST SWAP3 SWAP1 POP MLOAD AND SWAP4 PUSH2 0x141E JUMP JUMPDEST SWAP1 DUP6 MLOAD AND SWAP2 PUSH2 0x1BF4 JUMP JUMPDEST PUSH2 0x1A9C JUMP JUMPDEST DUP7 GT ISZERO SWAP9 POP CODESIZE PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0xC0 DUP13 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB AND TIMESTAMP LT SWAP10 POP PUSH2 0x1A5A JUMP JUMPDEST DUP10 SWAP7 POP PUSH2 0x1A51 JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x190 JUMPI JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0x152A902D PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP4 SWAP3 SWAP1 SWAP2 DUP6 AND SWAP1 DUP3 DUP2 PUSH1 0x44 DUP2 DUP6 GAS STATICCALL SWAP1 DUP2 PUSH1 0x0 SWAP2 DUP3 SWAP4 PUSH2 0x1BB6 JUMPI JUMPDEST POP PUSH2 0x1BAD JUMPI POP POP SWAP2 PUSH1 0x20 PUSH2 0x1BA9 SWAP3 PUSH2 0x2710 SWAP5 PUSH1 0x0 MSTORE PUSH1 0x3 DUP3 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP1 MLOAD SWAP1 PUSH2 0x1B94 DUP3 PUSH2 0x12EF JUMP JUMPDEST SLOAD SWAP7 DUP8 AND SWAP7 DUP8 DUP3 MSTORE PUSH1 0xA0 SHR SWAP2 DUP3 SWAP2 ADD MSTORE PUSH2 0x140B JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST SWAP6 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP3 POP DUP5 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1BED JUMPI JUMPDEST PUSH2 0x1BCF DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x16BE JUMPI POP PUSH1 0x20 PUSH2 0x1BE3 DUP3 PUSH2 0x1B16 JUMP JUMPDEST SWAP2 ADD MLOAD SWAP2 CODESIZE PUSH2 0x1B6B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP1 SWAP2 AND SWAP3 PUSH1 0x20 SWAP2 DUP3 DUP2 PUSH1 0x24 DUP2 DUP9 GAS STATICCALL DUP1 ISZERO PUSH2 0x1CBE JUMPI DUP5 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x1CCA JUMPI JUMPDEST POP LT ISZERO SWAP4 DUP5 PUSH2 0x1C42 JUMPI JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 DUP2 SWAP1 DUP4 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CBE JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1C92 JUMPI JUMPDEST POP SWAP1 POP LT ISZERO CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1C3B JUMP JUMPDEST DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1CB7 JUMPI JUMPDEST PUSH2 0x1CA6 DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x16BE JUMPI POP MLOAD DUP1 CODESIZE PUSH2 0x1C84 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1C9C JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP2 POP DUP4 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1CF3 JUMPI JUMPDEST PUSH2 0x1CE1 DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x16BE JUMPI POP DUP4 SWAP1 MLOAD CODESIZE PUSH2 0x1C31 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1CD7 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x190 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x190 JUMPI SWAP1 JUMP JUMPDEST SWAP4 SWAP2 SWAP1 SWAP4 PUSH2 0x1ECA JUMPI PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 PUSH1 0x20 SWAP4 DUP8 SWAP4 DUP6 DUP2 PUSH1 0x24 DUP2 DUP12 GAS STATICCALL DUP10 SWAP2 DUP2 PUSH2 0x1E8F JUMPI JUMPDEST POP PUSH2 0x1E1B JUMPI JUMPDEST POP POP PUSH1 0x1 EQ SWAP6 DUP7 PUSH2 0x1E0C JUMPI JUMPDEST POP DUP6 PUSH2 0x1D73 JUMPI JUMPDEST POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP4 SWAP5 POP SWAP1 SWAP3 AND ADDRESS EQ SWAP2 SWAP1 DUP3 ISZERO PUSH2 0x1D92 JUMPI JUMPDEST POP POP SWAP1 POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1D6B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE985E9C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP1 SWAP3 SWAP1 SWAP2 POP DUP3 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x1CBE JUMPI PUSH1 0x0 SWAP3 PUSH2 0x1DDF JUMPI JUMPDEST POP POP DUP1 CODESIZE DUP1 PUSH2 0x1D84 JUMP JUMPDEST PUSH2 0x1DFE SWAP3 POP DUP1 RETURNDATASIZE LT PUSH2 0x1E05 JUMPI JUMPDEST PUSH2 0x1DF6 DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1CFA JUMP JUMPDEST CODESIZE DUP1 PUSH2 0x1DD5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1DEC JUMP JUMPDEST DUP2 SWAP7 POP AND DUP6 DUP5 AND EQ SWAP5 CODESIZE PUSH2 0x1D64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x20604BF PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP8 POP DUP5 DUP2 PUSH1 0x24 DUP2 DUP11 GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1E58 JUMPI JUMPDEST POP PUSH2 0x1E4F JUMPI JUMPDEST DUP1 PUSH2 0x1D58 JUMP JUMPDEST SWAP3 POP PUSH1 0x1 PUSH2 0x1E49 JUMP JUMPDEST SWAP1 SWAP2 DUP7 DUP3 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1E88 JUMPI JUMPDEST PUSH2 0x1E6F DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x16BE JUMPI POP PUSH2 0x1E81 SWAP1 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1E43 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1E65 JUMP JUMPDEST SWAP1 SWAP2 POP DUP7 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x1EC3 JUMPI JUMPDEST PUSH2 0x1EA7 DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1EBF JUMPI PUSH2 0x1EB8 SWAP1 PUSH2 0x1B16 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x1D52 JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x1E9D JUMP JUMPDEST SWAP3 SWAP1 SWAP2 DUP1 ISZERO ISZERO SWAP4 DUP5 PUSH2 0x1F42 JUMPI JUMPDEST POP POP DUP3 PUSH2 0x1EE3 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xE985E9C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE SWAP3 POP PUSH1 0x20 SWAP2 DUP4 SWAP2 PUSH1 0x44 SWAP2 DUP4 SWAP2 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CBE JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1F27 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x1F3F SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E05 JUMPI PUSH2 0x1DF6 DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 SWAP4 POP SWAP1 PUSH1 0x20 DUP2 DUP1 PUSH1 0x44 DUP2 ADD SUB DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x1CBE JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1F99 JUMPI JUMPDEST POP LT ISZERO SWAP2 CODESIZE DUP1 PUSH2 0x1ED7 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x1FC2 JUMPI JUMPDEST DUP2 PUSH2 0x1FB2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x16BE JUMPI POP MLOAD CODESIZE PUSH2 0x1F8E JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1FA5 JUMP JUMPDEST SWAP1 DUP2 EXTCODESIZE PUSH2 0x2003 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x5D1859 PUSH1 0xE4 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 SWAP2 POP REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS STATICCALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2055 JUMPI JUMPDEST POP PUSH2 0x2047 JUMPI JUMPDEST POP PUSH2 0x1FD2 JUMP JUMPDEST PUSH2 0x2051 JUMPI DUP3 PUSH2 0x2041 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x206E SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1E05 JUMPI PUSH2 0x1DF6 DUP2 DUP4 PUSH2 0x134F JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x203B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x2089 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x20DE JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x24 DUP5 ADD MSTORE SWAP5 SWAP1 SWAP4 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP5 MSTORE SWAP2 SWAP3 PUSH1 0x1F NOT SWAP3 SWAP2 SWAP1 PUSH2 0x216E PUSH1 0x84 DUP3 PUSH2 0x134F JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 DUP1 SWAP4 MLOAD SWAP3 GAS CALL SWAP2 RETURNDATASIZE ISZERO PUSH2 0x225F JUMPI RETURNDATASIZE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x224B JUMPI PUSH2 0x21A4 DUP6 PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1F DUP5 ADD AND ADD DUP4 PUSH2 0x134F JUMP JUMPDEST DUP2 MSTORE DUP1 SWAP2 DUP5 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST DUP2 PUSH2 0x221B JUMPI JUMPDEST POP ISZERO PUSH2 0x21BD JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH1 0x44 DUP3 ADD MSTORE PUSH17 0x185B9CD9995C919C9BDB4819985A5B1959 PUSH1 0x7A SHL PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 MLOAD DUP1 ISZERO SWAP3 POP DUP4 SWAP1 DUP4 ISZERO PUSH2 0x2233 JUMPI JUMPDEST POP POP POP CODESIZE PUSH2 0x21B4 JUMP JUMPDEST PUSH2 0x2243 SWAP4 POP DUP3 ADD DUP2 ADD SWAP2 ADD PUSH2 0x1CFA JUMP JUMPDEST CODESIZE DUP3 DUP2 PUSH2 0x222A JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST POP POP PUSH1 0x60 PUSH2 0x21AE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN PUSH15 0x4ED36279081A8E9BB1F632AB119D96 0xF BLOCKHASH 0xBF SLOAD PUSH24 0xF8846359B2E6E32BD23164736F6C63430008130033000000 ",
							"sourceMap": "721:17595:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2344:16;721:17595;2344:16;;;721:17595;;;;;;;;;;;;;;;;;;-1:-1:-1;;721:17595:0;;;;;;:::i;:::-;1097:65:7;;:::i;:::-;-1:-1:-1;;;;;721:17595:0;;;;2231:22:7;;721:17595:0;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;2646:40:7;721:17595:0;2646:40:7;;721:17595:0;;;;-1:-1:-1;;;721:17595:0;;;;;;;;;;;;;;;;;-1:-1:-1;;;721:17595:0;;;;;;;;;;;;;;;;;-1:-1:-1;;721:17595:0;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;:::i;:::-;2276:107:8;;;:::i;:::-;721:17595:0;9956:21;;;;;;1749:1:8;721:17595:0;;;9979:3;10008:13;;;9979:3;10008:13;;;;:::i;:::-;721:17595;10008:13;:::i;:::-;9979:3;:::i;:::-;9945:9;;721:17595;;;;;;-1:-1:-1;;721:17595:0;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;4760:23;721:17595;;;;;;:::i;:::-;2276:107:8;;;;;:::i;:::-;721:17595:0;;;;4760:23;:::i;:::-;721:17595;;;;;;;;;;-1:-1:-1;;721:17595:0;;;;2276:107:8;;:::i;:::-;2046:20:0;721:17595;-1:-1:-1;;;;;721:17595:0;;;;;;2079:20;721:17595;2079:25;2075:69;;2205:13;721:17595;;-1:-1:-1;;;;;721:17595:0;;;;;;2222:15;-1:-1:-1;;;;;721:17595:0;;2205:32;;2201:77;;2344:16;721:17595;;;;;;;;;2344:16;721:17595;2344:16;;;:73;-1:-1:-1;;;2344:73:0;;;:::i;:::-;2429:15;721:17595;-1:-1:-1;;;;;721:17595:0;;;;;;;;-1:-1:-1;;;;;721:17595:0;;2429:29;2425:76;;721:17595;;;;;;;;;;2513:16;;;;721:17595;;;2000:15;721:17595;2637:14;721:17595;2585:89;2663:10;721:17595;;;2344:16;721:17595;2585:89;:::i;:::-;2584:90;2580:197;;2509:882;;;721:17595;;;;-1:-1:-1;;;;;2344:16:0;721:17595;;;;;;;:::i;:::-;3522:10;721:17595;;;;3424:320;;;721:17595;2344:16;721:17595;;;;3424:320;;721:17595;-1:-1:-1;;;;;721:17595:0;;;3587:14;3424:320;;721:17595;3587:14;721:17595;2000:15;3424:320;;721:17595;2000:15;721:17595;;3424:320;;721:17595;;;2429:15;3424:320;;721:17595;;;3424:320;;721:17595;2079:20;721:17595;;3424:320;;721:17595;;;;3795:16;721:17595;3795:16;:::i;:::-;721:17595;;;;;3818:9;721:17595;;;;;;;;;;;;;;;;;3424:320;;;;721:17595;;;;;;;;3424:320;;721:17595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3587:14;3424:320;;721:17595;;-1:-1:-1;;;;;721:17595:0;;;;;;;;2000:15;3424:320;;721:17595;;;3818:9;721:17595;;;;3424:320;;721:17595;;;;;-1:-1:-1;;;;;2429:15:0;3424:320;;721:17595;;3424:320;721:17595;;3424:320;;721:17595;;-1:-1:-1;;;;;721:17595:0;;3587:14;721:17595;;;;;;;;3424:320;721:17595;;;;;;;;;;;;;;;2000:15;721:17595;;;;;;;;;;;3587:14;721:17595;;;2000:15;721:17595;;;;;;;;;;;;;3522:10;;3862:227;2429:15;3522:10;3862:227;;721:17595;;;;;;;;;2580:197;721:17595;;-1:-1:-1;;;2694:73:0;;-1:-1:-1;;;;;721:17595:0;;;2694:73;;721:17595;2344:16;721:17595;;;;;;2046:20;721:17595;;;;;;2663:10;2637:14;721:17595;;;2000:15;;2694:73;2509:882;721:17595;;3000:22;2871:31;2079:20;721:17595;2000:15;721:17595;2871:31;:::i;:::-;2939:52;721:17595;2969:14;721:17595;2939:52;;:::i;:::-;3000:22;;;;:::i;:::-;721:17595;3081:10;3036:56;3081:10;3036:56;;;:::i;:::-;3035:57;3031:150;;-1:-1:-1;721:17595:0;2344:16;721:17595;;3263:33;;2509:882;3262:75;;;;2509:882;3258:126;2509:882;3258:126;;721:17595;;-1:-1:-1;;;3357:17:0;;721:17595;;3357:17;3262:75;721:17595;;;2344:16;721:17595;;2344:16;721:17595;3262:75;3302:34;721:17595;;2000:15;721:17595;3323:13;;3262:75;;3263:33;721:17595;2000:15;721:17595;3283:13;3263:33;;3031:150;721:17595;;-1:-1:-1;;;3112:59:0;;-1:-1:-1;;;;;721:17595:0;;;3112:59;;721:17595;2344:16;721:17595;;;;;;3081:10;2046:20;721:17595;;;2969:14;;3112:59;2425:76;721:17595;;-1:-1:-1;;;2476:17:0;;721:17595;;2476:17;2344:73;;-1:-1:-1;;;2344:73:0;;2201:77;721:17595;;-1:-1:-1;;;2255:15:0;;721:17595;;2255:15;2075:69;721:17595;;-1:-1:-1;;;2122:14:0;;721:17595;;2122:14;721:17595;;;;;;-1:-1:-1;;721:17595:0;;;;;;:::i;:::-;;;;;;10737:9;721:17595;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10737:9;721:17595;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;721:17595:0;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:107:8;;:::i;:::-;721:17595:0;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;721:17595:0;;;;:::i;:::-;;;;;;;;1656:7;721:17595;;;;;1656:7;;;;721:17595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1665:3;721:17595;2046:20;;721:17595;;;;;;2046:20;;:::i;:::-;721:17595;2079:20;721:17595;;;;;;2079:20;721:17595;2079:25;2075:69;;2222:15;-1:-1:-1;;;;;2205:13:0;;721:17595;;;;;;2205:13;;:::i;:::-;721:17595;2205:32;;2201:77;;2344:16;721:17595;2344:16;721:17595;;;;;;;2344:16;;:::i;:::-;:73;;;;-1:-1:-1;;;2344:73:0;;;:::i;:::-;-1:-1:-1;;;;;2429:15:0;721:17595;;;;;;;2429:15;;;:::i;:::-;721:17595;2429:29;2425:76;;2513:16;721:17595;;;;;;;;2513:16;:::i;:::-;721:17595;;;2604:16;721:17595;;;;;;;2344:16;2604;:::i;:::-;3587:14;;721:17595;;;;;;;;2637:14;721:17595;2585:89;2000:15;721:17595;;;;;;2000:15;721:17595;3522:10;;;;;2585:89;;:::i;:::-;2584:90;2580:197;;2509:882;;1665:3;2509:882;;;;3488:16;3452;721:17595;;;;;;;;3452:16;:::i;:::-;721:17595;;;;;;;2344:16;3488;:::i;:::-;-1:-1:-1;;;;;3647:15:0;2429;721:17595;;;;;;2429:15;3647;:::i;:::-;721:17595;3723:13;2205;721:17595;;;;;;2205:13;3723;:::i;:::-;721:17595;;;;;;;:::i;:::-;3522:10;721:17595;;;;;3424:320;;721:17595;;;;3424:320;;721:17595;-1:-1:-1;;;;;721:17595:0;;;3587:14;3424:320;;721:17595;;;;;;;;;3587:14;;;721:17595;2000:15;3424:320;;721:17595;2000:15;;;721:17595;;3424:320;;721:17595;;;;;2429:15;3424:320;;721:17595;;;;;;3424:320;;721:17595;2079:20;;721:17595;3424:320;;;721:17595;;;3795:16;721:17595;3795:16;:::i;:::-;721:17595;;;;;3818:9;721:17595;;;;;;;;;;;;;;;;;3424:320;721:17595;3424:320;;721:17595;;;;;;;;3424:320;;721:17595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3587:14;3424:320;;721:17595;;-1:-1:-1;;;;;721:17595:0;;;;;;;;2000:15;3424:320;;721:17595;;;3818:9;721:17595;;;;3424:320;;721:17595;;;;;-1:-1:-1;;;;;2429:15:0;3424:320;;721:17595;;3424:320;;721:17595;3424:320;;721:17595;;-1:-1:-1;;;;;721:17595:0;;3587:14;721:17595;;;;;;;;3424:320;721:17595;;;;;;;;;;;;;;;2000:15;721:17595;;;;;;2000:15;721:17595;;;;;;;;;;;3587:14;721:17595;;;2000:15;721:17595;;;;;;;;;;;;;3522:10;;3862:227;2429:15;3522:10;3862:227;;1679:43;;;;:::i;:::-;721:17595;1665:3;:::i;:::-;1645:9;;2580:197;721:17595;;-1:-1:-1;;;2694:73:0;;-1:-1:-1;;;;;721:17595:0;;;;2694:73;;721:17595;;;;;;;;;3522:10;2046:20;721:17595;;;;;2694:73;2509:882;721:17595;;;;;;;;;;2000:15;;;721:17595;;3000:22;;2871:31;;2079:20;;721:17595;;2871:31;:::i;:::-;2939:52;721:17595;3587:14;721:17595;;;;;;2969:14;721:17595;2939:52;;:::i;3000:22::-;3036:56;3522:10;721:17595;3057:15;2429;721:17595;;;;;;2429:15;3057;:::i;:::-;3036:56;:::i;:::-;3035:57;3031:150;;721:17595;3263:16;721:17595;;;;;;;2344:16;3263;:::i;:::-;:33;;;;2509:882;3262:75;;;;2509:882;3258:126;;;1665:3;2509:882;;;3262:75;721:17595;;3303:16;721:17595;;;;;;;2344:16;3303;:::i;:::-;3302:17;:34;;;;3262:75;;;;;3302:34;721:17595;3323:13;;;;3302:34;;;3263:33;3283:13;;;-1:-1:-1;3263:33:0;;3031:150;2046:20;721:17595;;3136:15;2429;721:17595;;;;;;2429:15;3136;:::i;:::-;721:17595;;-1:-1:-1;;;3112:59:0;;-1:-1:-1;;;;;721:17595:0;;;;3112:59;;721:17595;;;;;;;;3522:10;721:17595;;;;3112:59;2344:73;;-1:-1:-1;;;2344:73:0;;721:17595;;;;;;-1:-1:-1;;721:17595:0;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;2276:107:8;;;;;:::i;:::-;5515:24:0;;;;;:52;;;721:17595;5511:103;;721:17595;5638:7;;;;;;1749:1:8;721:17595:0;;;5647:3;5676:13;5737:23;5676:13;;;;;;5706;;5676;;;;;;;;;;;5647:3;5676:13;;;;5691;5676;;:::i;:::-;721:17595;5691:13;;:::i;:::-;721:17595;5706:13;;:::i;:::-;;:::i;:::-;5737:23;;:::i;5647:3::-;5627:9;;5511:103;721:17595;;-1:-1:-1;;;5585:21:0;;721:17595;;5585:21;5515:52;5543:24;;;;;5515:52;;721:17595;;;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;:::i;:::-;11052:18;;;;;:::i;:::-;11082:9;721:17595;11093:7;;;;;;721:17595;;;;;;;;;;;;;;;;:::i;:::-;;;;11102:3;11140:13;;11102:3;11140:13;;;;:::i;:::-;721:17595;;;11130:9;721:17595;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;;;11116:38;;;;:::i;:::-;;;;;;:::i;:::-;;11102:3;:::i;:::-;11082:9;;721:17595;;;;;;-1:-1:-1;;721:17595:0;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;-1:-1:-1;;721:17595:0;;;;1097:65:7;;:::i;:::-;721:17595:0;;;-1:-1:-1;;;;;;721:17595:0;;;;-1:-1:-1;;;;;721:17595:0;2646:40:7;721:17595:0;;2646:40:7;721:17595:0;;;;;;;-1:-1:-1;;721:17595:0;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;13200:24;;;;;13196:75;;721:17595;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;13318:18;;;:::i;:::-;13348:9;721:17595;13359:7;;;;;;721:17595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13368:3;13423:13;13408:44;13423:13;13368:3;13423:13;;;;:::i;:::-;721:17595;13438:13;;;;;:::i;:::-;721:17595;13408:44;;:::i;:::-;13382:70;;;;:::i;:::-;;;;;;:::i;:::-;721:17595;;;;;13368:3;:::i;:::-;13348:9;;721:17595;;;;;;-1:-1:-1;;721:17595:0;;;;-1:-1:-1;;;;;721:17595:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;;;-1:-1:-1;;721:17595:0;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;721:17595:0;;;;2276:107:8;;:::i;:::-;9743:9:0;721:17595;;9743:9;:::i;721:17595::-;;;;;;-1:-1:-1;;721:17595:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;721:17595:0;;;;;;:::i;:::-;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;1097:65:7;;:::i;:::-;14415:5:0;14409:11;;14405:57;;721:17595;14542:51;721:17595;;;;;;;:::i;:::-;;;;14501:29;;721:17595;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;14542:51;721:17595;;14542:51;;;;721:17595;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;;;;;14542:51;;;;721:17595;14405:57;721:17595;;-1:-1:-1;;;14438:16:0;;721:17595;;14438:16;721:17595;;;;-1:-1:-1;;;;;721:17595:0;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;721:17595:0;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;:::o;:::-;-1:-1:-1;;;;;721:17595:0;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;:::o;:::-;-1:-1:-1;;;;;721:17595:0;;;;;;;;;:::o;:::-;-1:-1:-1;;721:17595:0;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;:::o;:::-;;-1:-1:-1;;;;;721:17595:0;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;6136:3430::-;;;;;;;;-1:-1:-1;721:17595:0;;;;6374:9;721:17595;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6374:9;721:17595;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;;;;6405:29;6401:142;;6553:13;;:44;;;;6136:3430;6549:91;;13772:14;;;721:17595;-1:-1:-1;;;;;721:17595:0;13790:15;-1:-1:-1;13772:33:0;6646:64;;6720:55;;;6716:108;;721:17595;;;;;;;6865:28;6861:168;6865:28;;;721:17595;;;6374:9;721:17595;;6930:27;721:17595;;;;6405:15;721:17595;;;;;;;;;;;;;;;;;;;;;;;;;;;6930:27;721:17595;;;;;;;;;;;7140:32;721:17595;;;;;7140:32;:::i;:::-;7231:61;721:17595;;;;;;7231:61;;:::i;:::-;7301:22;;;721:17595;;;;;;7417:351;;;721:17595;;;;;-1:-1:-1;;;;;721:17595:0;;7567:26;721:17595;;7466:10;;721:17595;7417:351;7780:17;7776:497;;7417:351;8314:17;;;;8343:9;;8354:25;;;;;;721:17595;;;;;;;;;;8719:310;721:17595;;;8865:26;;9148:13;8865:26;;721:17595;8865:26;;:::i;:::-;8719:310;;721:17595;;;;-1:-1:-1;;;;;721:17595:0;9148:13;:::i;:::-;721:17595;;;;;;;;;9226:100;;;;;;721:17595;;-1:-1:-1;;;9226:100:0;;-1:-1:-1;;;;;721:17595:0;;;;9226:100;;721:17595;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9226:100;;;;;;;;;9194:248;;721:17595;;9194:248;;721:17595;;;6374:9;721:17595;;;9530:29;721:17595;;;;;;;;;;;;;;;;;;;;;9455:105;721:17595;9482:10;9455:105;;6136:3430::o;9226:100::-;;;;;:::i;:::-;721:17595;;9226:100;;;721:17595;;;9226:100;721:17595;;;;;;;;;9226:100;721:17595;;;9194:248;721:17595;;9349:85;;;;;;721:17595;;-1:-1:-1;;;9349:85:0;;-1:-1:-1;;;;;721:17595:0;;;;9349:85;;721:17595;;;;;;;;;;;;;;;;;;;9349:85;;;;;;;;721:17595;9349:85;721:17595;9349:85;;;9194:248;;;;9349:85;;;;:::i;:::-;;;;8719:310;8909:25;;;8905:124;;721:17595;8719:310;9148:13;8719:310;;;8905:124;721:17595;;-1:-1:-1;;;8998:23:0;;721:17595;;8998:23;8381:3;8409:17;;;;;:::i;:::-;721:17595;8458:26;;;;;;;:::i;:::-;721:17595;-1:-1:-1;;;;;721:17595:0;;8497:26;:38;;;;8381:3;8493:95;;8596:16;;8381:3;8596:16;8701:3;8596:16;;:::i;:::-;721:17595;;;;;;;;;-1:-1:-1;;;;;721:17595:0;8701:3;:::i;8381:::-;8343:9;;8497:38;8527:8;;;8497:38;;7776:497;7808:322;;;;721:17595;;;7966:30;;;8251:13;7966:30;;:::i;:::-;7808:322;;721:17595;;;;;;-1:-1:-1;;;;;721:17595:0;8251:13;:::i;:::-;7776:497;;;;;7808:322;8016:29;;;;;8012:118;;8251:13;7808:322;;;7417:351;721:17595;;7709:10;;-1:-1:-1;;;;;;721:17595:0;;7657:29;;721:17595;;;7417:351;;6861:168;721:17595;;;6374:9;721:17595;;;;;;6980:29;:41;721:17595;;;6980:41;:::i;:::-;721:17595;;6861:168;;6553:44;721:17595;;;;;6570:27;;6553:44;;6401:142;721:17595;;-1:-1:-1;;;6508:27:0;;721:17595;6508:27;;721:17595;;;;;6508:27;10143:371;-1:-1:-1;721:17595:0;;;10228:9;721:17595;;;;;;;-1:-1:-1;;721:17595:0;-1:-1:-1;;;;;721:17595:0;;;;10278:10;10259:29;10255:86;;10371:21;721:17595;10466:42;10371:21;;721:17595;;;;;;10228:9;721:17595;;10425:27;721:17595;;;;6405:15;721:17595;;;;;;;;;;;;;;;;;;;;;;;;;;;10425:27;10466:42;;10143:371::o;10255:86::-;721:17595;;-1:-1:-1;;;10306:27:0;;;;;721:17595;;;;;10306:27;721:17595;;;;;;;:::i;:::-;;;-1:-1:-1;721:17595:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;721:17595:0;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;11616:884;;;;721:17595;;:::i;:::-;;-1:-1:-1;721:17595:0;11751:9;721:17595;;;-1:-1:-1;721:17595:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11751:9;721:17595;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;;;;;;;11782:13;;11778:105;;11616:884;11897:29;;:53;;;;11616:884;11897:85;;;11616:884;11889:93;;11989:476;;11616:884;12471:23;;;;;;;;;11616:884;:::o;11989:476::-;12009:449;;;;;;;;;;721:17595;;;;;;12051:104;721:17595;;;;;;;;;;;;;12051:104;;:::i;:::-;11989:476;;;;;;;;;;12009:449;12371:77;12221:32;;;;;;;;12410:20;12221:32;;;12292:60;12221:32;;:::i;:::-;721:17595;;;;;;;12292:60;;:::i;:::-;721:17595;;;;;12410:20;;:::i;:::-;721:17595;;;;12371:77;;:::i;:::-;12009:449;;11897:85;11954:28;;;;-1:-1:-1;11897:85:0;;;:53;13772:14;;;721:17595;-1:-1:-1;;;;;721:17595:0;13790:15;-1:-1:-1;;;11897:53:0;;11778:105;11848:27;;-1:-1:-1;11778:105:0;;721:17595;;;-1:-1:-1;;;;;721:17595:0;;;;;;:::o;14973:528::-;721:17595;;;-1:-1:-1;;;15137:59:0;;;;;721:17595;;;;;;;;;;-1:-1:-1;;;;;721:17595:0;14973:528;;721:17595;;;;;;;;;;15137:59;;;;-1:-1:-1;;;15137:59:0;;;14973:528;15133:138;;;721:17595;;;;15462:24;721:17595;15489:5;721:17595;-1:-1:-1;721:17595:0;15392:15;721:17595;;;-1:-1:-1;721:17595:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;15462:24;:::i;:::-;721:17595;14973:528;:::o;15133:138::-;15239:15;-1:-1:-1;15239:15:0;;-1:-1:-1;;;15239:15:0:o;15137:59::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;721:17595;;;;;;;;;:::i;:::-;;;;15137:59;;;;;;;;;15859:235;721:17595;;-1:-1:-1;;;15987:31:0;;-1:-1:-1;;;;;721:17595:0;;;15987:31;;;721:17595;;;;;;15987:31;;;721:17595;;;;15987:31;;;;;;;;-1:-1:-1;15987:31:0;;;15859:235;15987:41;;;:101;;;;15859:235;15980:108;;;;15859:235;:::o;15987:101::-;721:17595;;-1:-1:-1;;;16032:46:0;;-1:-1:-1;;;;;721:17595:0;;;;15987:31;16032:46;;721:17595;16072:4;721:17595;;;;;;-1:-1:-1;721:17595:0;;;;;;;;;16032:46;;;;;;;-1:-1:-1;16032:46:0;;;15987:101;16032:56;;;;;15987:101;;;;;;16032:46;;;;;;;;;;;;;:::i;:::-;;;721:17595;;;;;;16032:46;;;;;;;;;;721:17595;;;-1:-1:-1;721:17595:0;;;;;15987:31;;;;;;;;;;;;;;;;:::i;:::-;;;721:17595;;;;;;;;15987:31;;;;;;;;721:17595;;;;;;;;;;;;;;;;;;:::o;16678:969::-;;;;;16894:198;;721:17595;;-1:-1:-1;;;17169:39:0;;;;;721:17595;;;;;-1:-1:-1;;;;;721:17595:0;;;;17169:39;;721:17595;;17169:39;721:17595;;;;17169:39;;;;;;;16678:969;17165:300;;;16678:969;17520:13;;721:17595;17520:13;:34;;;;16678:969;17520:121;;;;16678:969;17513:128;;;;;16678:969;:::o;17520:121::-;16880:4;;-1:-1:-1;721:17595:0;;;16880:4;17566:18;;16880:4;17566:74;;;;17520:121;;;;;;;;;;;;17566:74;721:17595;;-1:-1:-1;;;17588:52:0;;-1:-1:-1;;;;;721:17595:0;;;;17169:39;17588:52;;721:17595;16880:4;721:17595;;;;;;;;-1:-1:-1;721:17595:0;;;;;;;;17588:52;;;;;;;721:17595;17588:52;;;17566:74;;;;;;;;17588:52;;;;;;-1:-1:-1;17588:52:0;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;17520:34;721:17595;;;;;;;17537:17;17520:34;;;;17165:300;721:17595;;-1:-1:-1;;;17287:43:0;;17169:39;17287:43;;721:17595;;;;17248:24;-1:-1:-1;17287:43:0;721:17595;;;17287:43;;;721:17595;;17287:43;;;17165:300;17283:126;;;17165:300;;;;17283:126;;-1:-1:-1;721:17595:0;17283:126;;17287:43;;;;;;;;;;;;;;;;:::i;:::-;;;721:17595;;;;;;;;:::i;:::-;17287:43;;;;;;;;;17169:39;;;;;;;;;;;;;;;;;:::i;:::-;;;721:17595;;;;;;;:::i;:::-;17169:39;;;;721:17595;;;;17169:39;;;;;16894:198;16943:12;;;;;;:75;;;;16894:198;16943:141;;;;;16936:148;;;:::o;16943:141::-;721:17595;;-1:-1:-1;;;17031:53:0;;-1:-1:-1;;;;;721:17595:0;;;17031:53;;;721:17595;16880:4;721:17595;;;;;-1:-1:-1;17031:53:0;;721:17595;;;;;;;17031:53;;;;;;;721:17595;17031:53;;;16943:141;16936:148;:::o;17031:53::-;;;;;;;;;;;;;;:::i;:::-;16936:148;:::o;16943:75::-;721:17595;;-1:-1:-1;;;16959:47:0;;-1:-1:-1;;;;;721:17595:0;;16959:47;;;721:17595;;;;;;;;;;-1:-1:-1;721:17595:0;16959:47;721:17595;;;;;16959:47;721:17595;-1:-1:-1;;;;;721:17595:0;;16959:47;;;;;;;721:17595;16959:47;;;16943:75;16959:59;;;16943:75;;;;;16959:47;;;;;;;;;;;;;;;;:::i;:::-;;;721:17595;;;;;;16959:47;;;;;;-1:-1:-1;16959:47:0;;17889:424;;17986:27;;17982:236;;17889:424;721:17595;;-1:-1:-1;;;18249:58:0;;-1:-1:-1;;;;;721:17595:0;;;18249:58;;;721:17595;-1:-1:-1;;;;;;721:17595:0;;;;;;;-1:-1:-1;18249:58:0;17982:236;721:17595;;-1:-1:-1;;;18033:55:0;;-1:-1:-1;;;;;;721:17595:0;;18033:55;;;721:17595;18033:55;721:17595;;;-1:-1:-1;;;;;721:17595:0;;18033:55;;18017:1;;18033:55;;;17982:236;18029:182;;;17982:236;;;;18029:182;18125:68;;18029:182;;;18125:68;18175:7;;:::o;18033:55::-;;;;;;;;;;;;;;;:::i;:::-;;;;;1408:132:7;1316:6;721:17595:0;-1:-1:-1;;;;;721:17595:0;751:10:9;1472:23:7;721:17595:0;;1408:132:7:o;721:17595:0:-;;;;;;;;;;;;;;;;;;;;;;;;;2391:293:8;1793:1;2525:7;721:17595:0;2525:19:8;1793:1;;;2525:7;721:17595:0;2391:293:8:o;1793:1::-;721:17595:0;;-1:-1:-1;;;1793:1:8;;;;;;;;;;;721:17595:0;1793:1:8;721:17595:0;;;1793:1:8;;;;1128:498:10;721:17595:0;;-1:-1:-1;;;1399:51:10;;;;;;;-1:-1:-1;;;;;721:17595:0;;;1399:51:10;;;721:17595:0;;;;;;;;;;;;;;;;;1399:51:10;;;;;-1:-1:-1;;;1399:51:10;;;721:17595:0;;1399:51:10;:::i;:::-;1388:63;;;;;;;;;;;;721:17595:0;;;;;-1:-1:-1;;;;;721:17595:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;1484:57:10;;;721:17595:0;;;;;1128:498:10;:::o;721:17595:0:-;;;;;;;;;;;;;;;;1399:51:10;721:17595:0;;;;;;;;-1:-1:-1;;;721:17595:0;;;;;1484:57:10;721:17595:0;;1496:16:10;;;-1:-1:-1;1496:16:10;;:44;;;;1484:57;;;;;;;1496:44;1516:24;;-1:-1:-1;1516:24:10;;;;;;;:::i;:::-;1496:44;;;;;721:17595:0;-1:-1:-1;;;721:17595:0;;;;;1399:51:10;721:17595:0;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidAdditionalFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBatchRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCurrency\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"InvalidCurrencyApproval\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExpiry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"InvalidRequestId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"InvalidTokenApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"UnsupportedContractInterface\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"fee\",\"type\":\"uint96\"}],\"name\":\"CustomRoyaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityRemaining\",\"type\":\"uint256\"}],\"name\":\"RequestAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"RequestCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"RequestCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"additionalFees\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"additionalFeeRecipients\",\"type\":\"address[]\"}],\"name\":\"acceptRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"additionalFees\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"additionalFeeRecipients\",\"type\":\"address[]\"}],\"name\":\"acceptRequestBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"cancelRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"}],\"name\":\"cancelRequestBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.RequestParams\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"createRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.RequestParams[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"name\":\"createRequestBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"customRoyalties\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"fee\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"getRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"}],\"name\":\"getRequestBatch\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.Request[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royalty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"isRequestValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"}],\"name\":\"isRequestValidBatch\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"valid\",\"type\":\"bool[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.Request[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"fee\",\"type\":\"uint96\"}],\"name\":\"setRoyaltyInfo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptRequest(uint256,uint256,address,uint256[],address[])\":{\"params\":{\"additionalFeeRecipients\":\"The addresses to send the additional fees to.\",\"additionalFees\":\"The additional fees to pay.\",\"quantity\":\"The quantity of tokens to accept.\",\"recipient\":\"The recipient of the accepted tokens.\",\"requestId\":\"The ID of the request.\"}},\"acceptRequestBatch(uint256[],uint256[],address[],uint256[],address[])\":{\"details\":\"Additional fees are applied to each request.\",\"params\":{\"additionalFeeRecipients\":\"The addresses to send the additional fees to.\",\"additionalFees\":\"The additional fees to pay.\",\"quantities\":\"The quantities of tokens to accept.\",\"recipients\":\"The recipients of the accepted tokens.\",\"requestIds\":\"The IDs of the requests.\"}},\"cancelRequest(uint256)\":{\"params\":{\"requestId\":\"The ID of the request.\"}},\"cancelRequestBatch(uint256[])\":{\"params\":{\"requestIds\":\"The IDs of the requests.\"}},\"createRequest((bool,bool,address,uint256,uint256,uint96,address,uint256))\":{\"params\":{\"request\":\"The request's details.\"},\"returns\":{\"requestId\":\"The ID of the request.\"}},\"createRequestBatch((bool,bool,address,uint256,uint256,uint96,address,uint256)[])\":{\"params\":{\"requests\":\"The requests' details.\"},\"returns\":{\"requestIds\":\"The IDs of the requests.\"}},\"getRequest(uint256)\":{\"params\":{\"requestId\":\"The ID of the request.\"},\"returns\":{\"request\":\"The request.\"}},\"getRequestBatch(uint256[])\":{\"params\":{\"requestIds\":\"The IDs of the requests.\"},\"returns\":{\"requests\":\"The requests.\"}},\"getRoyaltyInfo(address,uint256,uint256)\":{\"params\":{\"cost\":\"Amount of currency sent/received for the trade.\",\"tokenContract\":\"Address of the token being traded.\",\"tokenId\":\"The ID of the token.\"},\"returns\":{\"recipient\":\"Address to send royalties to.\",\"royalty\":\"Amount of currency to be paid as royalties.\"}},\"isRequestValid(uint256,uint256)\":{\"params\":{\"quantity\":\"The amount of tokens to exchange. 0 is assumed to be the request's available quantity.\",\"requestId\":\"The ID of the request.\"},\"returns\":{\"request\":\"The request.\",\"valid\":\"The validity of the request.\"}},\"isRequestValidBatch(uint256[],uint256[])\":{\"params\":{\"quantities\":\"The amount of tokens to exchange per request. 0 is assumed to be the request's available quantity.\",\"requestIds\":\"The IDs of the requests.\"},\"returns\":{\"requests\":\"The requests.\",\"valid\":\"The validities of the requests.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setRoyaltyInfo(address,address,uint96)\":{\"details\":\"Can only be called by the owner.\",\"params\":{\"fee\":\"Fee percentage with a 10000 basis (e.g. 0.3% is 30 and 1% is 100 and 100% is 10000).\",\"recipient\":\"Address to send the royalties to.\",\"tokenContract\":\"The contract the custom royalties apply to.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAdditionalFees()\":[{\"notice\":\"Thrown when the additional fees are invalid.\"}],\"InvalidBatchRequest()\":[{\"notice\":\"Thrown when the parameters of a batch accept request are invalid.\"}],\"InvalidCurrency()\":[{\"notice\":\"Thrown when the currency address is invalid.\"}],\"InvalidCurrencyApproval(address,uint256,address)\":[{\"notice\":\"Thrown when the currency approval is invalid.\"}],\"InvalidExpiry()\":[{\"notice\":\"Thrown when expiry is invalid.\"}],\"InvalidPrice()\":[{\"notice\":\"Thrown when price is invalid.\"}],\"InvalidQuantity()\":[{\"notice\":\"Thrown when quantity is invalid.\"}],\"InvalidRequestId(uint256)\":[{\"notice\":\"Thrown when request id is invalid.\"}],\"InvalidRoyalty()\":[{\"notice\":\"Thrown when royalty is invalid.\"}],\"InvalidTokenApproval(address,uint256,uint256,address)\":[{\"notice\":\"Thrown when the token approval is invalid.\"}],\"UnsupportedContractInterface(address,bytes4)\":[{\"notice\":\"Thrown when the contract address does not support the required interface.\"}]},\"events\":{\"CustomRoyaltyChanged(address,address,uint96)\":{\"notice\":\"Emitted when custom royalty settings are changed.\"},\"RequestAccepted(uint256,address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when a request is accepted.\"},\"RequestCancelled(uint256,address)\":{\"notice\":\"Emitted when a request is cancelled.\"},\"RequestCreated(uint256,address,address,uint256,bool,uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when a request is created.\"}},\"kind\":\"user\",\"methods\":{\"acceptRequest(uint256,uint256,address,uint256[],address[])\":{\"notice\":\"Accepts a request.\"},\"acceptRequestBatch(uint256[],uint256[],address[],uint256[],address[])\":{\"notice\":\"Accepts requests.\"},\"cancelRequest(uint256)\":{\"notice\":\"Cancels a request.\"},\"cancelRequestBatch(uint256[])\":{\"notice\":\"Cancels requests.\"},\"createRequest((bool,bool,address,uint256,uint256,uint96,address,uint256))\":{\"notice\":\"Creates a request.\"},\"createRequestBatch((bool,bool,address,uint256,uint256,uint96,address,uint256)[])\":{\"notice\":\"Creates requests.\"},\"getRequest(uint256)\":{\"notice\":\"Gets a request.\"},\"getRequestBatch(uint256[])\":{\"notice\":\"Gets requests.\"},\"getRoyaltyInfo(address,uint256,uint256)\":{\"notice\":\"Returns the royalty details for the given token and cost.\"},\"isRequestValid(uint256,uint256)\":{\"notice\":\"Checks if a request is valid.A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable.\"},\"isRequestValidBatch(uint256[],uint256[])\":{\"notice\":\"Checks if requests are valid.A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable.\"},\"setRoyaltyInfo(address,address,uint96)\":{\"notice\":\"Will set the royalties fees and recipient for contracts that don't support ERC-2981.This can be called even when the contract supports ERC-2891, but will be ignored if it does.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SequenceMarket.sol\":\"SequenceMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/SequenceMarket.sol\":{\"keccak256\":\"0x92fe7d97694a198b40e83479f5de4ff799572d1f437d9012cff04dc5cad7bff1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c0ef62d20f311e7327644f5c9dc41d850ed4b48f242041f15252935aca389eb\",\"dweb:/ipfs/QmUsoSesSePhjrFdwedXgE3MS12vVzZbi1pTGH3F6rvk8j\"]},\"contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x2c51dd3958767427af5be84ef023f06c62e460f67aefd4696200fb228e97a6f6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c2afe817c4d59e253e5e0e96b79ba54b872e4f226767b1b9710344c34fc80e6\",\"dweb:/ipfs/Qmb8ETAA7yaV7FpmR8eqbtJtK6WjpxbgJecx7vcVwAhtrp\"]},\"contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xe5c62fab0f47b871ecdd9520f606ca3294c5e0561c490a630e2929dbfa9a9df4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c6dd527c4a79ee0ab6513b2d047ba55825bfee43daca8d31e0289f40dd716cb2\",\"dweb:/ipfs/QmYfysKDzuWhR1XUSJ9cmRfifhZvjptjsKcde84wSPG75E\"]},\"contracts/interfaces/ISequenceMarket.sol\":{\"keccak256\":\"0xe7a69e1349e9ae9d06a67b3df2571595572d92876b16877f64a001612f63b204\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9769b3738a9886feb338b7bd01feb73b8527e50b6357032e09cc12514c501fb5\",\"dweb:/ipfs/QmTtBu5N6TeJuEAwQzF7Ew1CnFhNWX9CdUsGhjdCbnST1m\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x73a4ea88c195262c79aed1a8ad6da1e599e0ebe3911a89014e410dae6debda74\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d9f63f1c107c912620de676785b876f798f1563fee4fee897d45012daf52131\",\"dweb:/ipfs/QmQTvyVSZCUYjjo95yGgQgQvKzTBhb9fRbuzKvpmP5v5aQ\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x3c4e9fd5c0bcf40b81dc2dc1accad5dac4f8172cb845d3f82e92c6b09379b54f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a564558bab2cb33daacd25a9327c355b0fabcd21a75148b1784b7d38724744ca\",\"dweb:/ipfs/QmdTL2JcTMoUEQGb7F3KhMv3kve44hnMyN4nRtnkLcsBf5\"]},\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3\",\"dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA\"]},\"lib/openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xbec94e472f5fde800401cdc48fe89c0260ab92b22965ddce17a715f9825b4f12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d28923f397006622c72dccec7a22c9d5c4c8407c1285dace5e69f4a7d54545e5\",\"dweb:/ipfs/QmPh1BnF3mrcUx1UZnE5uKjavTomomrJ5wdPwh22NvJSuz\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x1ff12b16497c367ed31baeb649b2fa2f49ac4b7180026048525e407d8b42d9b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44c3d33bdffd34a82d5aec12f417dce9d03bdde4b3f9007251007b5ce6b050d5\",\"dweb:/ipfs/Qmby8vmWDKNFzNwUd7km44trifaJK1e6FBV4g3CGsQNqz6\"]},\"lib/uniswap-lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xeea8564e527b64b5201b31c01f713ee2b6897eb63fb83bf1b0da7a82b668b60c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://936050173b4c572e0193bb232579b2fe5a714faa83c43476568c707c022674f4\",\"dweb:/ipfs/QmQzNm9bZ546rak7DZaucYZFU1dUUVrEFbTf9RqLG3XekD\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"InvalidAdditionalFees()": [
								{
									"notice": "Thrown when the additional fees are invalid."
								}
							],
							"InvalidBatchRequest()": [
								{
									"notice": "Thrown when the parameters of a batch accept request are invalid."
								}
							],
							"InvalidCurrency()": [
								{
									"notice": "Thrown when the currency address is invalid."
								}
							],
							"InvalidCurrencyApproval(address,uint256,address)": [
								{
									"notice": "Thrown when the currency approval is invalid."
								}
							],
							"InvalidExpiry()": [
								{
									"notice": "Thrown when expiry is invalid."
								}
							],
							"InvalidPrice()": [
								{
									"notice": "Thrown when price is invalid."
								}
							],
							"InvalidQuantity()": [
								{
									"notice": "Thrown when quantity is invalid."
								}
							],
							"InvalidRequestId(uint256)": [
								{
									"notice": "Thrown when request id is invalid."
								}
							],
							"InvalidRoyalty()": [
								{
									"notice": "Thrown when royalty is invalid."
								}
							],
							"InvalidTokenApproval(address,uint256,uint256,address)": [
								{
									"notice": "Thrown when the token approval is invalid."
								}
							],
							"UnsupportedContractInterface(address,bytes4)": [
								{
									"notice": "Thrown when the contract address does not support the required interface."
								}
							]
						},
						"events": {
							"CustomRoyaltyChanged(address,address,uint96)": {
								"notice": "Emitted when custom royalty settings are changed."
							},
							"RequestAccepted(uint256,address,address,address,uint256,uint256)": {
								"notice": "Emitted when a request is accepted."
							},
							"RequestCancelled(uint256,address)": {
								"notice": "Emitted when a request is cancelled."
							},
							"RequestCreated(uint256,address,address,uint256,bool,uint256,address,uint256,uint256)": {
								"notice": "Emitted when a request is created."
							}
						},
						"kind": "user",
						"methods": {
							"acceptRequest(uint256,uint256,address,uint256[],address[])": {
								"notice": "Accepts a request."
							},
							"acceptRequestBatch(uint256[],uint256[],address[],uint256[],address[])": {
								"notice": "Accepts requests."
							},
							"cancelRequest(uint256)": {
								"notice": "Cancels a request."
							},
							"cancelRequestBatch(uint256[])": {
								"notice": "Cancels requests."
							},
							"createRequest((bool,bool,address,uint256,uint256,uint96,address,uint256))": {
								"notice": "Creates a request."
							},
							"createRequestBatch((bool,bool,address,uint256,uint256,uint96,address,uint256)[])": {
								"notice": "Creates requests."
							},
							"getRequest(uint256)": {
								"notice": "Gets a request."
							},
							"getRequestBatch(uint256[])": {
								"notice": "Gets requests."
							},
							"getRoyaltyInfo(address,uint256,uint256)": {
								"notice": "Returns the royalty details for the given token and cost."
							},
							"isRequestValid(uint256,uint256)": {
								"notice": "Checks if a request is valid.A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable."
							},
							"isRequestValidBatch(uint256[],uint256[])": {
								"notice": "Checks if requests are valid.A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable."
							},
							"setRoyaltyInfo(address,address,uint96)": {
								"notice": "Will set the royalties fees and recipient for contracts that don't support ERC-2981.This can be called even when the contract supports ERC-2891, but will be ignored if it does."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC2981.sol": {
				"IERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the NFT Royalty Standard",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"params": {
									"_salePrice": "- the sale price of the NFT asset specified by _tokenId",
									"_tokenId": "- the NFT asset queried for royalty information"
								},
								"returns": {
									"receipient": "- address of who should be sent the royalty payment",
									"royaltyAmount": "- the royalty payment amount for _salePrice"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas",
								"params": {
									"_interfaceId": "The interface identifier, as specified in ERC-165"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"params\":{\"_salePrice\":\"- the sale price of the NFT asset specified by _tokenId\",\"_tokenId\":\"- the NFT asset queried for royalty information\"},\"returns\":{\"receipient\":\"- address of who should be sent the royalty payment\",\"royaltyAmount\":\"- the royalty payment amount for _salePrice\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas\",\"params\":{\"_interfaceId\":\"The interface identifier, as specified in ERC-165\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"notice\":\"Called with the sale price to determine how much royalty is owed and to whom.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x2c51dd3958767427af5be84ef023f06c62e460f67aefd4696200fb228e97a6f6\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9c2afe817c4d59e253e5e0e96b79ba54b872e4f226767b1b9710344c34fc80e6\",\"dweb:/ipfs/Qmb8ETAA7yaV7FpmR8eqbtJtK6WjpxbgJecx7vcVwAhtrp\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"notice": "Called with the sale price to determine how much royalty is owed and to whom."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xe5c62fab0f47b871ecdd9520f606ca3294c5e0561c490a630e2929dbfa9a9df4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c6dd527c4a79ee0ab6513b2d047ba55825bfee43daca8d31e0289f40dd716cb2\",\"dweb:/ipfs/QmYfysKDzuWhR1XUSJ9cmRfifhZvjptjsKcde84wSPG75E\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/ISequenceMarket.sol": {
				"ISequenceMarket": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidAdditionalFees",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidBatchRequest",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCurrency",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "InvalidCurrencyApproval",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidExpiry",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPrice",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQuantity",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "InvalidRequestId",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "InvalidTokenApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "UnsupportedContractInterface",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "fee",
									"type": "uint96"
								}
							],
							"name": "CustomRoyaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantityRemaining",
									"type": "uint256"
								}
							],
							"name": "RequestAccepted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								}
							],
							"name": "RequestCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isListing",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pricePerToken",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								}
							],
							"name": "RequestCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "additionalFees",
									"type": "uint256[]"
								},
								{
									"internalType": "address[]",
									"name": "additionalFeeRecipients",
									"type": "address[]"
								}
							],
							"name": "acceptRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "quantities",
									"type": "uint256[]"
								},
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "additionalFees",
									"type": "uint256[]"
								},
								{
									"internalType": "address[]",
									"name": "additionalFeeRecipients",
									"type": "address[]"
								}
							],
							"name": "acceptRequestBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "cancelRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								}
							],
							"name": "cancelRequestBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.RequestParams",
									"name": "request",
									"type": "tuple"
								}
							],
							"name": "createRequest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.RequestParams[]",
									"name": "requests",
									"type": "tuple[]"
								}
							],
							"name": "createRequestBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "getRequest",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.Request",
									"name": "request",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								}
							],
							"name": "getRequestBatch",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.Request[]",
									"name": "requests",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								}
							],
							"name": "getRoyaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royalty",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "isRequestValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.Request",
									"name": "request",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "quantities",
									"type": "uint256[]"
								}
							],
							"name": "isRequestValidBatch",
							"outputs": [
								{
									"internalType": "bool[]",
									"name": "valid",
									"type": "bool[]"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.Request[]",
									"name": "requests",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"acceptRequest(uint256,uint256,address,uint256[],address[])": {
								"params": {
									"additionalFeeRecipients": "The addresses to send the additional fees to.",
									"additionalFees": "The additional fees to pay.",
									"quantity": "The quantity of tokens to accept.",
									"recipient": "The recipient of the accepted tokens.",
									"requestId": "The ID of the request."
								}
							},
							"acceptRequestBatch(uint256[],uint256[],address[],uint256[],address[])": {
								"details": "Additional fees are applied to each request.",
								"params": {
									"additionalFeeRecipients": "The addresses to send the additional fees to.",
									"additionalFees": "The additional fees to pay.",
									"quantities": "The quantities of tokens to accept.",
									"recipients": "The recipients of the accepted tokens.",
									"requestIds": "The IDs of the requests."
								}
							},
							"cancelRequest(uint256)": {
								"params": {
									"requestId": "The ID of the request."
								}
							},
							"cancelRequestBatch(uint256[])": {
								"params": {
									"requestIds": "The IDs of the requests."
								}
							},
							"createRequest((bool,bool,address,uint256,uint256,uint96,address,uint256))": {
								"params": {
									"request": "The request's details."
								},
								"returns": {
									"requestId": "The ID of the request."
								}
							},
							"createRequestBatch((bool,bool,address,uint256,uint256,uint96,address,uint256)[])": {
								"params": {
									"requests": "The requests' details."
								},
								"returns": {
									"requestIds": "The IDs of the requests."
								}
							},
							"getRequest(uint256)": {
								"params": {
									"requestId": "The ID of the request."
								},
								"returns": {
									"request": "The request."
								}
							},
							"getRequestBatch(uint256[])": {
								"params": {
									"requestIds": "The IDs of the requests."
								},
								"returns": {
									"requests": "The requests."
								}
							},
							"getRoyaltyInfo(address,uint256,uint256)": {
								"params": {
									"cost": "Amount of currency sent/received for the trade.",
									"tokenContract": "Address of the token being traded.",
									"tokenId": "The ID of the token."
								},
								"returns": {
									"recipient": "Address to send royalties to.",
									"royalty": "Amount of currency to be paid as royalties."
								}
							},
							"isRequestValid(uint256,uint256)": {
								"params": {
									"quantity": "The amount of tokens to exchange. 0 is assumed to be the request's available quantity.",
									"requestId": "The ID of the request."
								},
								"returns": {
									"request": "The request.",
									"valid": "The validity of the request."
								}
							},
							"isRequestValidBatch(uint256[],uint256[])": {
								"params": {
									"quantities": "The amount of tokens to exchange per request. 0 is assumed to be the request's available quantity.",
									"requestIds": "The IDs of the requests."
								},
								"returns": {
									"requests": "The requests.",
									"valid": "The validities of the requests."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidAdditionalFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBatchRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCurrency\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"InvalidCurrencyApproval\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExpiry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"InvalidRequestId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"InvalidTokenApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"UnsupportedContractInterface\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"fee\",\"type\":\"uint96\"}],\"name\":\"CustomRoyaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityRemaining\",\"type\":\"uint256\"}],\"name\":\"RequestAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"RequestCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"RequestCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"additionalFees\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"additionalFeeRecipients\",\"type\":\"address[]\"}],\"name\":\"acceptRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"additionalFees\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"additionalFeeRecipients\",\"type\":\"address[]\"}],\"name\":\"acceptRequestBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"cancelRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"}],\"name\":\"cancelRequestBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.RequestParams\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"createRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.RequestParams[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"name\":\"createRequestBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"getRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"}],\"name\":\"getRequestBatch\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.Request[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royalty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"isRequestValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"}],\"name\":\"isRequestValidBatch\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"valid\",\"type\":\"bool[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.Request[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptRequest(uint256,uint256,address,uint256[],address[])\":{\"params\":{\"additionalFeeRecipients\":\"The addresses to send the additional fees to.\",\"additionalFees\":\"The additional fees to pay.\",\"quantity\":\"The quantity of tokens to accept.\",\"recipient\":\"The recipient of the accepted tokens.\",\"requestId\":\"The ID of the request.\"}},\"acceptRequestBatch(uint256[],uint256[],address[],uint256[],address[])\":{\"details\":\"Additional fees are applied to each request.\",\"params\":{\"additionalFeeRecipients\":\"The addresses to send the additional fees to.\",\"additionalFees\":\"The additional fees to pay.\",\"quantities\":\"The quantities of tokens to accept.\",\"recipients\":\"The recipients of the accepted tokens.\",\"requestIds\":\"The IDs of the requests.\"}},\"cancelRequest(uint256)\":{\"params\":{\"requestId\":\"The ID of the request.\"}},\"cancelRequestBatch(uint256[])\":{\"params\":{\"requestIds\":\"The IDs of the requests.\"}},\"createRequest((bool,bool,address,uint256,uint256,uint96,address,uint256))\":{\"params\":{\"request\":\"The request's details.\"},\"returns\":{\"requestId\":\"The ID of the request.\"}},\"createRequestBatch((bool,bool,address,uint256,uint256,uint96,address,uint256)[])\":{\"params\":{\"requests\":\"The requests' details.\"},\"returns\":{\"requestIds\":\"The IDs of the requests.\"}},\"getRequest(uint256)\":{\"params\":{\"requestId\":\"The ID of the request.\"},\"returns\":{\"request\":\"The request.\"}},\"getRequestBatch(uint256[])\":{\"params\":{\"requestIds\":\"The IDs of the requests.\"},\"returns\":{\"requests\":\"The requests.\"}},\"getRoyaltyInfo(address,uint256,uint256)\":{\"params\":{\"cost\":\"Amount of currency sent/received for the trade.\",\"tokenContract\":\"Address of the token being traded.\",\"tokenId\":\"The ID of the token.\"},\"returns\":{\"recipient\":\"Address to send royalties to.\",\"royalty\":\"Amount of currency to be paid as royalties.\"}},\"isRequestValid(uint256,uint256)\":{\"params\":{\"quantity\":\"The amount of tokens to exchange. 0 is assumed to be the request's available quantity.\",\"requestId\":\"The ID of the request.\"},\"returns\":{\"request\":\"The request.\",\"valid\":\"The validity of the request.\"}},\"isRequestValidBatch(uint256[],uint256[])\":{\"params\":{\"quantities\":\"The amount of tokens to exchange per request. 0 is assumed to be the request's available quantity.\",\"requestIds\":\"The IDs of the requests.\"},\"returns\":{\"requests\":\"The requests.\",\"valid\":\"The validities of the requests.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAdditionalFees()\":[{\"notice\":\"Thrown when the additional fees are invalid.\"}],\"InvalidBatchRequest()\":[{\"notice\":\"Thrown when the parameters of a batch accept request are invalid.\"}],\"InvalidCurrency()\":[{\"notice\":\"Thrown when the currency address is invalid.\"}],\"InvalidCurrencyApproval(address,uint256,address)\":[{\"notice\":\"Thrown when the currency approval is invalid.\"}],\"InvalidExpiry()\":[{\"notice\":\"Thrown when expiry is invalid.\"}],\"InvalidPrice()\":[{\"notice\":\"Thrown when price is invalid.\"}],\"InvalidQuantity()\":[{\"notice\":\"Thrown when quantity is invalid.\"}],\"InvalidRequestId(uint256)\":[{\"notice\":\"Thrown when request id is invalid.\"}],\"InvalidRoyalty()\":[{\"notice\":\"Thrown when royalty is invalid.\"}],\"InvalidTokenApproval(address,uint256,uint256,address)\":[{\"notice\":\"Thrown when the token approval is invalid.\"}],\"UnsupportedContractInterface(address,bytes4)\":[{\"notice\":\"Thrown when the contract address does not support the required interface.\"}]},\"events\":{\"CustomRoyaltyChanged(address,address,uint96)\":{\"notice\":\"Emitted when custom royalty settings are changed.\"},\"RequestAccepted(uint256,address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when a request is accepted.\"},\"RequestCancelled(uint256,address)\":{\"notice\":\"Emitted when a request is cancelled.\"},\"RequestCreated(uint256,address,address,uint256,bool,uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when a request is created.\"}},\"kind\":\"user\",\"methods\":{\"acceptRequest(uint256,uint256,address,uint256[],address[])\":{\"notice\":\"Accepts a request.\"},\"acceptRequestBatch(uint256[],uint256[],address[],uint256[],address[])\":{\"notice\":\"Accepts requests.\"},\"cancelRequest(uint256)\":{\"notice\":\"Cancels a request.\"},\"cancelRequestBatch(uint256[])\":{\"notice\":\"Cancels requests.\"},\"createRequest((bool,bool,address,uint256,uint256,uint96,address,uint256))\":{\"notice\":\"Creates a request.A listing is when the maker is selling tokens for currency.An offer is when the maker is buying tokens with currency.\"},\"createRequestBatch((bool,bool,address,uint256,uint256,uint96,address,uint256)[])\":{\"notice\":\"Creates requests.\"},\"getRequest(uint256)\":{\"notice\":\"Gets a request.\"},\"getRequestBatch(uint256[])\":{\"notice\":\"Gets requests.\"},\"getRoyaltyInfo(address,uint256,uint256)\":{\"notice\":\"Returns the royalty details for the given token and cost.\"},\"isRequestValid(uint256,uint256)\":{\"notice\":\"Checks if a request is valid.A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable.\"},\"isRequestValidBatch(uint256[],uint256[])\":{\"notice\":\"Checks if requests are valid.A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISequenceMarket.sol\":\"ISequenceMarket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/ISequenceMarket.sol\":{\"keccak256\":\"0xe7a69e1349e9ae9d06a67b3df2571595572d92876b16877f64a001612f63b204\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9769b3738a9886feb338b7bd01feb73b8527e50b6357032e09cc12514c501fb5\",\"dweb:/ipfs/QmTtBu5N6TeJuEAwQzF7Ew1CnFhNWX9CdUsGhjdCbnST1m\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"InvalidAdditionalFees()": [
								{
									"notice": "Thrown when the additional fees are invalid."
								}
							],
							"InvalidBatchRequest()": [
								{
									"notice": "Thrown when the parameters of a batch accept request are invalid."
								}
							],
							"InvalidCurrency()": [
								{
									"notice": "Thrown when the currency address is invalid."
								}
							],
							"InvalidCurrencyApproval(address,uint256,address)": [
								{
									"notice": "Thrown when the currency approval is invalid."
								}
							],
							"InvalidExpiry()": [
								{
									"notice": "Thrown when expiry is invalid."
								}
							],
							"InvalidPrice()": [
								{
									"notice": "Thrown when price is invalid."
								}
							],
							"InvalidQuantity()": [
								{
									"notice": "Thrown when quantity is invalid."
								}
							],
							"InvalidRequestId(uint256)": [
								{
									"notice": "Thrown when request id is invalid."
								}
							],
							"InvalidRoyalty()": [
								{
									"notice": "Thrown when royalty is invalid."
								}
							],
							"InvalidTokenApproval(address,uint256,uint256,address)": [
								{
									"notice": "Thrown when the token approval is invalid."
								}
							],
							"UnsupportedContractInterface(address,bytes4)": [
								{
									"notice": "Thrown when the contract address does not support the required interface."
								}
							]
						},
						"events": {
							"CustomRoyaltyChanged(address,address,uint96)": {
								"notice": "Emitted when custom royalty settings are changed."
							},
							"RequestAccepted(uint256,address,address,address,uint256,uint256)": {
								"notice": "Emitted when a request is accepted."
							},
							"RequestCancelled(uint256,address)": {
								"notice": "Emitted when a request is cancelled."
							},
							"RequestCreated(uint256,address,address,uint256,bool,uint256,address,uint256,uint256)": {
								"notice": "Emitted when a request is created."
							}
						},
						"kind": "user",
						"methods": {
							"acceptRequest(uint256,uint256,address,uint256[],address[])": {
								"notice": "Accepts a request."
							},
							"acceptRequestBatch(uint256[],uint256[],address[],uint256[],address[])": {
								"notice": "Accepts requests."
							},
							"cancelRequest(uint256)": {
								"notice": "Cancels a request."
							},
							"cancelRequestBatch(uint256[])": {
								"notice": "Cancels requests."
							},
							"createRequest((bool,bool,address,uint256,uint256,uint96,address,uint256))": {
								"notice": "Creates a request.A listing is when the maker is selling tokens for currency.An offer is when the maker is buying tokens with currency."
							},
							"createRequestBatch((bool,bool,address,uint256,uint256,uint96,address,uint256)[])": {
								"notice": "Creates requests."
							},
							"getRequest(uint256)": {
								"notice": "Gets a request."
							},
							"getRequestBatch(uint256[])": {
								"notice": "Gets requests."
							},
							"getRoyaltyInfo(address,uint256,uint256)": {
								"notice": "Returns the royalty details for the given token and cost."
							},
							"isRequestValid(uint256,uint256)": {
								"notice": "Checks if a request is valid.A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable."
							},
							"isRequestValidBatch(uint256[],uint256[])": {
								"notice": "Checks if requests are valid.A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable."
							}
						},
						"version": 1
					}
				},
				"ISequenceMarketFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "additionalFees",
									"type": "uint256[]"
								},
								{
									"internalType": "address[]",
									"name": "additionalFeeRecipients",
									"type": "address[]"
								}
							],
							"name": "acceptRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "quantities",
									"type": "uint256[]"
								},
								{
									"internalType": "address[]",
									"name": "recipients",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "additionalFees",
									"type": "uint256[]"
								},
								{
									"internalType": "address[]",
									"name": "additionalFeeRecipients",
									"type": "address[]"
								}
							],
							"name": "acceptRequestBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "cancelRequest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								}
							],
							"name": "cancelRequestBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.RequestParams",
									"name": "request",
									"type": "tuple"
								}
							],
							"name": "createRequest",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.RequestParams[]",
									"name": "requests",
									"type": "tuple[]"
								}
							],
							"name": "createRequestBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "getRequest",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.Request",
									"name": "request",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								}
							],
							"name": "getRequestBatch",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.Request[]",
									"name": "requests",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								}
							],
							"name": "getRoyaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royalty",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								}
							],
							"name": "isRequestValid",
							"outputs": [
								{
									"internalType": "bool",
									"name": "valid",
									"type": "bool"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.Request",
									"name": "request",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "requestIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "quantities",
									"type": "uint256[]"
								}
							],
							"name": "isRequestValidBatch",
							"outputs": [
								{
									"internalType": "bool[]",
									"name": "valid",
									"type": "bool[]"
								},
								{
									"components": [
										{
											"internalType": "address",
											"name": "creator",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "isListing",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "isERC1155",
											"type": "bool"
										},
										{
											"internalType": "address",
											"name": "tokenContract",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "quantity",
											"type": "uint256"
										},
										{
											"internalType": "uint96",
											"name": "expiry",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "currency",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "pricePerToken",
											"type": "uint256"
										}
									],
									"internalType": "struct ISequenceMarketStorage.Request[]",
									"name": "requests",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"acceptRequest(uint256,uint256,address,uint256[],address[])": {
								"params": {
									"additionalFeeRecipients": "The addresses to send the additional fees to.",
									"additionalFees": "The additional fees to pay.",
									"quantity": "The quantity of tokens to accept.",
									"recipient": "The recipient of the accepted tokens.",
									"requestId": "The ID of the request."
								}
							},
							"acceptRequestBatch(uint256[],uint256[],address[],uint256[],address[])": {
								"details": "Additional fees are applied to each request.",
								"params": {
									"additionalFeeRecipients": "The addresses to send the additional fees to.",
									"additionalFees": "The additional fees to pay.",
									"quantities": "The quantities of tokens to accept.",
									"recipients": "The recipients of the accepted tokens.",
									"requestIds": "The IDs of the requests."
								}
							},
							"cancelRequest(uint256)": {
								"params": {
									"requestId": "The ID of the request."
								}
							},
							"cancelRequestBatch(uint256[])": {
								"params": {
									"requestIds": "The IDs of the requests."
								}
							},
							"createRequest((bool,bool,address,uint256,uint256,uint96,address,uint256))": {
								"params": {
									"request": "The request's details."
								},
								"returns": {
									"requestId": "The ID of the request."
								}
							},
							"createRequestBatch((bool,bool,address,uint256,uint256,uint96,address,uint256)[])": {
								"params": {
									"requests": "The requests' details."
								},
								"returns": {
									"requestIds": "The IDs of the requests."
								}
							},
							"getRequest(uint256)": {
								"params": {
									"requestId": "The ID of the request."
								},
								"returns": {
									"request": "The request."
								}
							},
							"getRequestBatch(uint256[])": {
								"params": {
									"requestIds": "The IDs of the requests."
								},
								"returns": {
									"requests": "The requests."
								}
							},
							"getRoyaltyInfo(address,uint256,uint256)": {
								"params": {
									"cost": "Amount of currency sent/received for the trade.",
									"tokenContract": "Address of the token being traded.",
									"tokenId": "The ID of the token."
								},
								"returns": {
									"recipient": "Address to send royalties to.",
									"royalty": "Amount of currency to be paid as royalties."
								}
							},
							"isRequestValid(uint256,uint256)": {
								"params": {
									"quantity": "The amount of tokens to exchange. 0 is assumed to be the request's available quantity.",
									"requestId": "The ID of the request."
								},
								"returns": {
									"request": "The request.",
									"valid": "The validity of the request."
								}
							},
							"isRequestValidBatch(uint256[],uint256[])": {
								"params": {
									"quantities": "The amount of tokens to exchange per request. 0 is assumed to be the request's available quantity.",
									"requestIds": "The IDs of the requests."
								},
								"returns": {
									"requests": "The requests.",
									"valid": "The validities of the requests."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"additionalFees\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"additionalFeeRecipients\",\"type\":\"address[]\"}],\"name\":\"acceptRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"recipients\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"additionalFees\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"additionalFeeRecipients\",\"type\":\"address[]\"}],\"name\":\"acceptRequestBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"cancelRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"}],\"name\":\"cancelRequestBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.RequestParams\",\"name\":\"request\",\"type\":\"tuple\"}],\"name\":\"createRequest\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.RequestParams[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"name\":\"createRequestBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"getRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"}],\"name\":\"getRequestBatch\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.Request[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"}],\"name\":\"getRoyaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royalty\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"}],\"name\":\"isRequestValid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.Request\",\"name\":\"request\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"requestIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"quantities\",\"type\":\"uint256[]\"}],\"name\":\"isRequestValidBatch\",\"outputs\":[{\"internalType\":\"bool[]\",\"name\":\"valid\",\"type\":\"bool[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isERC1155\",\"type\":\"bool\"},{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"uint96\",\"name\":\"expiry\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"}],\"internalType\":\"struct ISequenceMarketStorage.Request[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptRequest(uint256,uint256,address,uint256[],address[])\":{\"params\":{\"additionalFeeRecipients\":\"The addresses to send the additional fees to.\",\"additionalFees\":\"The additional fees to pay.\",\"quantity\":\"The quantity of tokens to accept.\",\"recipient\":\"The recipient of the accepted tokens.\",\"requestId\":\"The ID of the request.\"}},\"acceptRequestBatch(uint256[],uint256[],address[],uint256[],address[])\":{\"details\":\"Additional fees are applied to each request.\",\"params\":{\"additionalFeeRecipients\":\"The addresses to send the additional fees to.\",\"additionalFees\":\"The additional fees to pay.\",\"quantities\":\"The quantities of tokens to accept.\",\"recipients\":\"The recipients of the accepted tokens.\",\"requestIds\":\"The IDs of the requests.\"}},\"cancelRequest(uint256)\":{\"params\":{\"requestId\":\"The ID of the request.\"}},\"cancelRequestBatch(uint256[])\":{\"params\":{\"requestIds\":\"The IDs of the requests.\"}},\"createRequest((bool,bool,address,uint256,uint256,uint96,address,uint256))\":{\"params\":{\"request\":\"The request's details.\"},\"returns\":{\"requestId\":\"The ID of the request.\"}},\"createRequestBatch((bool,bool,address,uint256,uint256,uint96,address,uint256)[])\":{\"params\":{\"requests\":\"The requests' details.\"},\"returns\":{\"requestIds\":\"The IDs of the requests.\"}},\"getRequest(uint256)\":{\"params\":{\"requestId\":\"The ID of the request.\"},\"returns\":{\"request\":\"The request.\"}},\"getRequestBatch(uint256[])\":{\"params\":{\"requestIds\":\"The IDs of the requests.\"},\"returns\":{\"requests\":\"The requests.\"}},\"getRoyaltyInfo(address,uint256,uint256)\":{\"params\":{\"cost\":\"Amount of currency sent/received for the trade.\",\"tokenContract\":\"Address of the token being traded.\",\"tokenId\":\"The ID of the token.\"},\"returns\":{\"recipient\":\"Address to send royalties to.\",\"royalty\":\"Amount of currency to be paid as royalties.\"}},\"isRequestValid(uint256,uint256)\":{\"params\":{\"quantity\":\"The amount of tokens to exchange. 0 is assumed to be the request's available quantity.\",\"requestId\":\"The ID of the request.\"},\"returns\":{\"request\":\"The request.\",\"valid\":\"The validity of the request.\"}},\"isRequestValidBatch(uint256[],uint256[])\":{\"params\":{\"quantities\":\"The amount of tokens to exchange per request. 0 is assumed to be the request's available quantity.\",\"requestIds\":\"The IDs of the requests.\"},\"returns\":{\"requests\":\"The requests.\",\"valid\":\"The validities of the requests.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptRequest(uint256,uint256,address,uint256[],address[])\":{\"notice\":\"Accepts a request.\"},\"acceptRequestBatch(uint256[],uint256[],address[],uint256[],address[])\":{\"notice\":\"Accepts requests.\"},\"cancelRequest(uint256)\":{\"notice\":\"Cancels a request.\"},\"cancelRequestBatch(uint256[])\":{\"notice\":\"Cancels requests.\"},\"createRequest((bool,bool,address,uint256,uint256,uint96,address,uint256))\":{\"notice\":\"Creates a request.A listing is when the maker is selling tokens for currency.An offer is when the maker is buying tokens with currency.\"},\"createRequestBatch((bool,bool,address,uint256,uint256,uint96,address,uint256)[])\":{\"notice\":\"Creates requests.\"},\"getRequest(uint256)\":{\"notice\":\"Gets a request.\"},\"getRequestBatch(uint256[])\":{\"notice\":\"Gets requests.\"},\"getRoyaltyInfo(address,uint256,uint256)\":{\"notice\":\"Returns the royalty details for the given token and cost.\"},\"isRequestValid(uint256,uint256)\":{\"notice\":\"Checks if a request is valid.A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable.\"},\"isRequestValidBatch(uint256[],uint256[])\":{\"notice\":\"Checks if requests are valid.A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISequenceMarket.sol\":\"ISequenceMarketFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/ISequenceMarket.sol\":{\"keccak256\":\"0xe7a69e1349e9ae9d06a67b3df2571595572d92876b16877f64a001612f63b204\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9769b3738a9886feb338b7bd01feb73b8527e50b6357032e09cc12514c501fb5\",\"dweb:/ipfs/QmTtBu5N6TeJuEAwQzF7Ew1CnFhNWX9CdUsGhjdCbnST1m\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"acceptRequest(uint256,uint256,address,uint256[],address[])": {
								"notice": "Accepts a request."
							},
							"acceptRequestBatch(uint256[],uint256[],address[],uint256[],address[])": {
								"notice": "Accepts requests."
							},
							"cancelRequest(uint256)": {
								"notice": "Cancels a request."
							},
							"cancelRequestBatch(uint256[])": {
								"notice": "Cancels requests."
							},
							"createRequest((bool,bool,address,uint256,uint256,uint96,address,uint256))": {
								"notice": "Creates a request.A listing is when the maker is selling tokens for currency.An offer is when the maker is buying tokens with currency."
							},
							"createRequestBatch((bool,bool,address,uint256,uint256,uint96,address,uint256)[])": {
								"notice": "Creates requests."
							},
							"getRequest(uint256)": {
								"notice": "Gets a request."
							},
							"getRequestBatch(uint256[])": {
								"notice": "Gets requests."
							},
							"getRoyaltyInfo(address,uint256,uint256)": {
								"notice": "Returns the royalty details for the given token and cost."
							},
							"isRequestValid(uint256,uint256)": {
								"notice": "Checks if a request is valid.A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable."
							},
							"isRequestValidBatch(uint256[],uint256[])": {
								"notice": "Checks if requests are valid.A request is valid if it is active, has not expired and give amount of tokens (currency for offers, tokens for listings) are transferrable."
							}
						},
						"version": 1
					}
				},
				"ISequenceMarketSignals": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidAdditionalFees",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidBatchRequest",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidCurrency",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "InvalidCurrencyApproval",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidExpiry",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidPrice",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQuantity",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								}
							],
							"name": "InvalidRequestId",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidRoyalty",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "InvalidTokenApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "contractAddress",
									"type": "address"
								},
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "UnsupportedContractInterface",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint96",
									"name": "fee",
									"type": "uint96"
								}
							],
							"name": "CustomRoyaltyChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantityRemaining",
									"type": "uint256"
								}
							],
							"name": "RequestAccepted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								}
							],
							"name": "RequestCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "requestId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "tokenContract",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isListing",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "quantity",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "pricePerToken",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								}
							],
							"name": "RequestCreated",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidAdditionalFees\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBatchRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCurrency\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"InvalidCurrencyApproval\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidExpiry\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPrice\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQuantity\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"InvalidRequestId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRoyalty\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"InvalidTokenApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"UnsupportedContractInterface\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"fee\",\"type\":\"uint96\"}],\"name\":\"CustomRoyaltyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantityRemaining\",\"type\":\"uint256\"}],\"name\":\"RequestAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"}],\"name\":\"RequestCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isListing\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"quantity\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pricePerToken\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"}],\"name\":\"RequestCreated\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidAdditionalFees()\":[{\"notice\":\"Thrown when the additional fees are invalid.\"}],\"InvalidBatchRequest()\":[{\"notice\":\"Thrown when the parameters of a batch accept request are invalid.\"}],\"InvalidCurrency()\":[{\"notice\":\"Thrown when the currency address is invalid.\"}],\"InvalidCurrencyApproval(address,uint256,address)\":[{\"notice\":\"Thrown when the currency approval is invalid.\"}],\"InvalidExpiry()\":[{\"notice\":\"Thrown when expiry is invalid.\"}],\"InvalidPrice()\":[{\"notice\":\"Thrown when price is invalid.\"}],\"InvalidQuantity()\":[{\"notice\":\"Thrown when quantity is invalid.\"}],\"InvalidRequestId(uint256)\":[{\"notice\":\"Thrown when request id is invalid.\"}],\"InvalidRoyalty()\":[{\"notice\":\"Thrown when royalty is invalid.\"}],\"InvalidTokenApproval(address,uint256,uint256,address)\":[{\"notice\":\"Thrown when the token approval is invalid.\"}],\"UnsupportedContractInterface(address,bytes4)\":[{\"notice\":\"Thrown when the contract address does not support the required interface.\"}]},\"events\":{\"CustomRoyaltyChanged(address,address,uint96)\":{\"notice\":\"Emitted when custom royalty settings are changed.\"},\"RequestAccepted(uint256,address,address,address,uint256,uint256)\":{\"notice\":\"Emitted when a request is accepted.\"},\"RequestCancelled(uint256,address)\":{\"notice\":\"Emitted when a request is cancelled.\"},\"RequestCreated(uint256,address,address,uint256,bool,uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when a request is created.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISequenceMarket.sol\":\"ISequenceMarketSignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/ISequenceMarket.sol\":{\"keccak256\":\"0xe7a69e1349e9ae9d06a67b3df2571595572d92876b16877f64a001612f63b204\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9769b3738a9886feb338b7bd01feb73b8527e50b6357032e09cc12514c501fb5\",\"dweb:/ipfs/QmTtBu5N6TeJuEAwQzF7Ew1CnFhNWX9CdUsGhjdCbnST1m\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"InvalidAdditionalFees()": [
								{
									"notice": "Thrown when the additional fees are invalid."
								}
							],
							"InvalidBatchRequest()": [
								{
									"notice": "Thrown when the parameters of a batch accept request are invalid."
								}
							],
							"InvalidCurrency()": [
								{
									"notice": "Thrown when the currency address is invalid."
								}
							],
							"InvalidCurrencyApproval(address,uint256,address)": [
								{
									"notice": "Thrown when the currency approval is invalid."
								}
							],
							"InvalidExpiry()": [
								{
									"notice": "Thrown when expiry is invalid."
								}
							],
							"InvalidPrice()": [
								{
									"notice": "Thrown when price is invalid."
								}
							],
							"InvalidQuantity()": [
								{
									"notice": "Thrown when quantity is invalid."
								}
							],
							"InvalidRequestId(uint256)": [
								{
									"notice": "Thrown when request id is invalid."
								}
							],
							"InvalidRoyalty()": [
								{
									"notice": "Thrown when royalty is invalid."
								}
							],
							"InvalidTokenApproval(address,uint256,uint256,address)": [
								{
									"notice": "Thrown when the token approval is invalid."
								}
							],
							"UnsupportedContractInterface(address,bytes4)": [
								{
									"notice": "Thrown when the contract address does not support the required interface."
								}
							]
						},
						"events": {
							"CustomRoyaltyChanged(address,address,uint96)": {
								"notice": "Emitted when custom royalty settings are changed."
							},
							"RequestAccepted(uint256,address,address,address,uint256,uint256)": {
								"notice": "Emitted when a request is accepted."
							},
							"RequestCancelled(uint256,address)": {
								"notice": "Emitted when a request is cancelled."
							},
							"RequestCreated(uint256,address,address,uint256,bool,uint256,address,uint256,uint256)": {
								"notice": "Emitted when a request is created."
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ISequenceMarketStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISequenceMarket.sol\":\"ISequenceMarketStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"contracts/interfaces/ISequenceMarket.sol\":{\"keccak256\":\"0xe7a69e1349e9ae9d06a67b3df2571595572d92876b16877f64a001612f63b204\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9769b3738a9886feb338b7bd01feb73b8527e50b6357032e09cc12514c501fb5\",\"dweb:/ipfs/QmTtBu5N6TeJuEAwQzF7Ew1CnFhNWX9CdUsGhjdCbnST1m\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOperator",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "MUST emit when an approval is updated"
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID   To broadcast the existence of multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0"
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID   To broadcast the existence of a token ID with no initial balance, the contract SHOULD emit the TransferSingle event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0"
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"params": {
									"_id": "ID of the Token",
									"_owner": "The address of the token holder"
								},
								"returns": {
									"_0": "The _owner's balance of the Token type requested"
								}
							},
							"balanceOfBatch(address[],uint256[])": {
								"params": {
									"_ids": "ID of the Tokens",
									"_owners": "The addresses of the token holders"
								},
								"returns": {
									"_0": "The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "Address of authorized operator",
									"_owner": "The owner of the Tokens"
								},
								"returns": {
									"isOperator": "True if the operator is approved, false if not"
								}
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "MUST emit TransferBatch event on success Caller must be approved to manage the _from account's tokens (see isApprovedForAll) MUST throw if `_to` is the zero address MUST throw if length of `_ids` is not the same as length of `_amounts` MUST throw if any of the balance of sender for token `_ids` is lower than the respective `_amounts` sent MUST throw on any other error When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155BatchReceived` on `_to` and revert if the return amount is not `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` Transfers and events MUST occur in the array order they were submitted (_ids[0] before _ids[1], etc)",
								"params": {
									"_amounts": "Transfer amounts per token type",
									"_data": "Additional data with no specified format, sent in call to `_to`",
									"_from": "Source addresses",
									"_ids": "IDs of each token type",
									"_to": "Target addresses"
								}
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "MUST emit TransferSingle event on success Caller must be approved to manage the _from account's tokens (see isApprovedForAll) MUST throw if `_to` is the zero address MUST throw if balance of sender for token `_id` is lower than the `_amount` sent MUST throw on any other error When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155Received` on `_to` and revert if the return amount is not `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`",
								"params": {
									"_amount": "Transfered amount",
									"_data": "Additional data with no specified format, sent in call to `_to`",
									"_from": "Source address",
									"_id": "ID of the token type",
									"_to": "Target address"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "MUST emit the ApprovalForAll event on success",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas",
								"params": {
									"_interfaceId": "The interface identifier, as specified in ERC-165"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"MUST emit when an approval is updated\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \\\"circulating supply\\\" for a given token ID   To broadcast the existence of multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \\\"circulating supply\\\" for a given token ID   To broadcast the existence of a token ID with no initial balance, the contract SHOULD emit the TransferSingle event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"_id\":\"ID of the Token\",\"_owner\":\"The address of the token holder\"},\"returns\":{\"_0\":\"The _owner's balance of the Token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"params\":{\"_ids\":\"ID of the Tokens\",\"_owners\":\"The addresses of the token holders\"},\"returns\":{\"_0\":\"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"Address of authorized operator\",\"_owner\":\"The owner of the Tokens\"},\"returns\":{\"isOperator\":\"True if the operator is approved, false if not\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"MUST emit TransferBatch event on success Caller must be approved to manage the _from account's tokens (see isApprovedForAll) MUST throw if `_to` is the zero address MUST throw if length of `_ids` is not the same as length of `_amounts` MUST throw if any of the balance of sender for token `_ids` is lower than the respective `_amounts` sent MUST throw on any other error When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155BatchReceived` on `_to` and revert if the return amount is not `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` Transfers and events MUST occur in the array order they were submitted (_ids[0] before _ids[1], etc)\",\"params\":{\"_amounts\":\"Transfer amounts per token type\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source addresses\",\"_ids\":\"IDs of each token type\",\"_to\":\"Target addresses\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"MUST emit TransferSingle event on success Caller must be approved to manage the _from account's tokens (see isApprovedForAll) MUST throw if `_to` is the zero address MUST throw if balance of sender for token `_id` is lower than the `_amount` sent MUST throw on any other error When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155Received` on `_to` and revert if the return amount is not `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\",\"params\":{\"_amount\":\"Transfered amount\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source address\",\"_id\":\"ID of the token type\",\"_to\":\"Target address\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"MUST emit the ApprovalForAll event on success\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas\",\"params\":{\"_interfaceId\":\"The interface identifier, as specified in ERC-165\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens\"},\"balanceOfBatch(address[],uint256[])\":{\"notice\":\"Get the balance of multiple account/token pairs\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Send multiple types of Tokens from the _from address to the _to address (with safety call)\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Transfers amount of an _id from the _from address to the _to address specified\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of caller's tokens\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x73a4ea88c195262c79aed1a8ad6da1e599e0ebe3911a89014e410dae6debda74\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d9f63f1c107c912620de676785b876f798f1563fee4fee897d45012daf52131\",\"dweb:/ipfs/QmQTvyVSZCUYjjo95yGgQgQvKzTBhb9fRbuzKvpmP5v5aQ\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address,uint256)": {
								"notice": "Get the balance of an account's Tokens"
							},
							"balanceOfBatch(address[],uint256[])": {
								"notice": "Get the balance of multiple account/token pairs"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Queries the approval status of an operator for a given owner"
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"notice": "Send multiple types of Tokens from the _from address to the _to address (with safety call)"
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"notice": "Transfers amount of an _id from the _from address to the _to address specified"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens"
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas",
								"params": {
									"_interfaceId": "The interface identifier, as specified in ERC-165"
								}
							}
						},
						"title": "ERC165",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas\",\"params\":{\"_interfaceId\":\"The interface identifier, as specified in ERC-165\"}}},\"title\":\"ERC165\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "who",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "see https://eips.ethereum.org/EIPS/eip-20",
						"kind": "dev",
						"methods": {},
						"title": "ERC20 interface",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"see https://eips.ethereum.org/EIPS/eip-20\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ERC20 interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x3c4e9fd5c0bcf40b81dc2dc1accad5dac4f8172cb845d3f82e92c6b09379b54f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a564558bab2cb33daacd25a9327c355b0fabcd21a75148b1784b7d38724744ca\",\"dweb:/ipfs/QmdTL2JcTMoUEQGb7F3KhMv3kve44hnMyN4nRtnkLcsBf5\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3\",\"dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x1ff12b16497c367ed31baeb649b2fa2f49ac4b7180026048525e407d8b42d9b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44c3d33bdffd34a82d5aec12f417dce9d03bdde4b3f9007251007b5ce6b050d5\",\"dweb:/ipfs/Qmby8vmWDKNFzNwUd7km44trifaJK1e6FBV4g3CGsQNqz6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xbec94e472f5fde800401cdc48fe89c0260ab92b22965ddce17a715f9825b4f12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d28923f397006622c72dccec7a22c9d5c4c8407c1285dace5e69f4a7d54545e5\",\"dweb:/ipfs/QmPh1BnF3mrcUx1UZnE5uKjavTomomrJ5wdPwh22NvJSuz\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x1ff12b16497c367ed31baeb649b2fa2f49ac4b7180026048525e407d8b42d9b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44c3d33bdffd34a82d5aec12f417dce9d03bdde4b3f9007251007b5ce6b050d5\",\"dweb:/ipfs/Qmby8vmWDKNFzNwUd7km44trifaJK1e6FBV4g3CGsQNqz6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/uniswap-lib/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e04af141596bfeb6b352e2c792b3b477cd8cfc7d5c7a4db426caae53446dfaa664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x4A CALL COINBASE MSIZE PUSH12 0xFEB6B352E2C792B3B477CD8C 0xFC PUSH30 0x5C7A4DB426CAAE53446DFAA664736F6C6343000813003300000000000000 ",
							"sourceMap": "188:1666:10:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220e04af141596bfeb6b352e2c792b3b477cd8cfc7d5c7a4db426caae53446dfaa664736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x4A CALL COINBASE MSIZE PUSH12 0xFEB6B352E2C792B3B477CD8C 0xFC PUSH30 0x5C7A4DB426CAAE53446DFAA664736F6C6343000813003300000000000000 ",
							"sourceMap": "188:1666:10:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/uniswap-lib/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":@uniswap/lib/=lib/uniswap-lib/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin/=lib/openzeppelin/\",\":uniswap-lib/=lib/uniswap-lib/contracts/\"],\"viaIR\":true},\"sources\":{\"lib/uniswap-lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xeea8564e527b64b5201b31c01f713ee2b6897eb63fb83bf1b0da7a82b668b60c\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://936050173b4c572e0193bb232579b2fe5a714faa83c43476568c707c022674f4\",\"dweb:/ipfs/QmQzNm9bZ546rak7DZaucYZFU1dUUVrEFbTf9RqLG3XekD\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/SequenceMarket.sol": {
				"id": 0
			},
			"contracts/interfaces/IERC2981.sol": {
				"id": 1
			},
			"contracts/interfaces/IERC721.sol": {
				"id": 2
			},
			"contracts/interfaces/ISequenceMarket.sol": {
				"id": 3
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol": {
				"id": 4
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol": {
				"id": 5
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC20.sol": {
				"id": 6
			},
			"lib/openzeppelin/contracts/access/Ownable.sol": {
				"id": 7
			},
			"lib/openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"id": 8
			},
			"lib/openzeppelin/contracts/utils/Context.sol": {
				"id": 9
			},
			"lib/uniswap-lib/contracts/libraries/TransferHelper.sol": {
				"id": 10
			}
		}
	}
}