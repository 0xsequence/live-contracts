{
	"id": "18b385484a16326ada71f7198e0e6144",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 999999,
				"details": {
					"yul": true
				}
			},
			"outputSelection": {
				"*": {
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"abi"
					]
				}
			},
			"libraries": {},
			"remappings": []
		},
		"sources": {
			"contracts/modules/GuestModule.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\n\nimport \"../utils/SignatureValidator.sol\";\n\nimport \"./commons/Implementation.sol\";\nimport \"./commons/ModuleAuth.sol\";\nimport \"./commons/ModuleHooks.sol\";\nimport \"./commons/ModuleCalls.sol\";\nimport \"./commons/ModuleUpdate.sol\";\nimport \"./commons/ModuleCreator.sol\";\n\nimport \"../interfaces/receivers/IERC1155Receiver.sol\";\nimport \"../interfaces/receivers/IERC721Receiver.sol\";\n\nimport \"../interfaces/IERC1271Wallet.sol\";\n\n\n/**\n * GuestModule implements an Arcadeum wallet without signatures, nonce or replay protection.\n * executing transactions using this wallet is not an authenticated process, and can be done by any address.\n *\n * @notice This contract is completely public with no security, designed to execute pre-signed transactions\n *   and use Arcadeum tools without using the wallets.\n */\ncontract GuestModule is\n  ModuleAuth,\n  ModuleCalls,\n  ModuleCreator\n{\n  /**\n   * @notice Allow any caller to execute an action\n   * @param _txs Transactions to process\n   */\n  function execute(\n    Transaction[] memory _txs,\n    uint256,\n    bytes memory\n  ) public override {\n    // Hash transaction bundle\n    bytes32 txHash = _subDigest(keccak256(abi.encode('guest:', _txs)));\n\n    // Execute the transactions\n    _executeGuest(txHash, _txs);\n  }\n\n  /**\n   * @notice Allow any caller to execute an action\n   * @param _txs Transactions to process\n   */\n  function selfExecute(\n    Transaction[] memory _txs\n  ) public override {\n    // Hash transaction bundle\n    bytes32 txHash = _subDigest(keccak256(abi.encode('self:', _txs)));\n\n    // Execute the transactions\n    _executeGuest(txHash, _txs);\n  }\n\n  /**\n   * @notice Executes a list of transactions\n   * @param _txHash  Hash of the batch of transactions\n   * @param _txs  Transactions to execute\n   */\n  function _executeGuest(\n    bytes32 _txHash,\n    Transaction[] memory _txs\n  ) private {\n    // Execute transaction\n    for (uint256 i = 0; i < _txs.length; i++) {\n      Transaction memory transaction = _txs[i];\n\n      bool success;\n      bytes memory result;\n\n      require(!transaction.delegateCall, 'GuestModule#_executeGuest: delegateCall not allowed');\n      require(gasleft() >= transaction.gasLimit, \"GuestModule#_executeGuest: NOT_ENOUGH_GAS\");\n\n      // solhint-disable\n      (success, result) = transaction.target.call{\n        value: transaction.value,\n        gas: transaction.gasLimit == 0 ? gasleft() : transaction.gasLimit\n      }(transaction.data);\n      // solhint-enable\n\n      if (success) {\n        emit TxExecuted(_txHash);\n      } else {\n        _revertBytes(transaction, _txHash, result);\n      }\n    }\n  }\n\n  /**\n   * @notice Validates any signature image, because the wallet is public and has now owner.\n   * @return true, all signatures are valid.\n   */\n  function _isValidImage(bytes32) internal override view returns (bool) {\n    return true;\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(\n    bytes4 _interfaceID\n  ) public override (\n    ModuleAuth,\n    ModuleCalls,\n    ModuleCreator\n  ) pure returns (bool) {\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/interfaces/IERC1271Wallet.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\n\ninterface IERC1271Wallet {\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided data\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided data\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n   *   > This function MAY modify Ethereum's state\n   * @param _data       Arbitrary length data signed on the behalf of address(this)\n   * @param _signature  Signature byte array associated with _data\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes calldata _data,\n    bytes calldata _signature)\n    external\n    view\n    returns (bytes4 magicValue);\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided hash\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided hash\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n   *   > This function MAY modify Ethereum's state\n   * @param _hash       keccak256 hash that was signed\n   * @param _signature  Signature byte array associated with _data\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    bytes calldata _signature)\n    external\n    view\n    returns (bytes4 magicValue);\n}"
			},
			"contracts/interfaces/receivers/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\n\ninterface IERC721Receiver {\n  function onERC721Received(address, address, uint256, bytes calldata) external returns (bytes4);\n}\n"
			},
			"contracts/interfaces/receivers/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\n\ninterface IERC1155Receiver {\n  function onERC1155Received(address, address, uint256, uint256, bytes calldata) external returns (bytes4);\n  function onERC1155BatchReceived(address, address, uint256[] calldata, uint256[] calldata, bytes calldata) external returns (bytes4);\n}\n"
			},
			"contracts/modules/commons/ModuleCreator.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\nimport \"./interfaces/IModuleCreator.sol\";\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleERC165.sol\";\n\n\ncontract ModuleCreator is IModuleCreator, ModuleERC165, ModuleSelfAuth {\n  event CreatedContract(address _contract);\n\n  /**\n   * @notice Creates a contract forwarding eth value\n   * @param _code Creation code of the contract\n   * @return addr The address of the created contract\n   */\n  function createContract(bytes memory _code) public override payable onlySelf returns (address addr) {\n    assembly { addr := create(callvalue(), add(_code, 32), mload(_code)) }\n    emit CreatedContract(addr);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (_interfaceID == type(IModuleCreator).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleUpdate.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\nimport \"./interfaces/IModuleUpdate.sol\";\n\nimport \"./Implementation.sol\";\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleERC165.sol\";\n\nimport \"../../utils/LibAddress.sol\";\n\n\ncontract ModuleUpdate is IModuleUpdate, ModuleERC165, ModuleSelfAuth, Implementation {\n  using LibAddress for address;\n\n  event ImplementationUpdated(address newImplementation);\n\n  /**\n   * @notice Updates the implementation of the base wallet\n   * @param _implementation New main module implementation\n   * @dev WARNING Updating the implementation can brick the wallet\n   */\n  function updateImplementation(address _implementation) external override onlySelf {\n    require(_implementation.isContract(), \"ModuleUpdate#updateImplementation: INVALID_IMPLEMENTATION\");\n    _setImplementation(_implementation);\n    emit ImplementationUpdated(_implementation);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (_interfaceID == type(IModuleUpdate).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleCalls.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleStorage.sol\";\nimport \"./ModuleERC165.sol\";\n\nimport \"./interfaces/IModuleCalls.sol\";\nimport \"./interfaces/IModuleAuth.sol\";\n\n\nabstract contract ModuleCalls is IModuleCalls, IModuleAuth, ModuleERC165, ModuleSelfAuth {\n  //                       NONCE_KEY = keccak256(\"org.arcadeum.module.calls.nonce\");\n  bytes32 private constant NONCE_KEY = bytes32(0x8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e);\n\n  uint256 private constant NONCE_BITS = 96;\n  bytes32 private constant NONCE_MASK = bytes32((1 << NONCE_BITS) - 1);\n\n  /**\n   * @notice Returns the next nonce of the default nonce space\n   * @dev The default nonce space is 0x00\n   * @return The next nonce\n   */\n  function nonce() external override virtual view returns (uint256) {\n    return readNonce(0);\n  }\n\n  /**\n   * @notice Returns the next nonce of the given nonce space\n   * @param _space Nonce space, each space keeps an independent nonce count\n   * @return The next nonce\n   */\n  function readNonce(uint256 _space) public override virtual view returns (uint256) {\n    return uint256(ModuleStorage.readBytes32Map(NONCE_KEY, bytes32(_space)));\n  }\n\n  /**\n   * @notice Changes the next nonce of the given nonce space\n   * @param _space Nonce space, each space keeps an independent nonce count\n   * @param _nonce Nonce to write on the space\n   */\n  function _writeNonce(uint256 _space, uint256 _nonce) private {\n    ModuleStorage.writeBytes32Map(NONCE_KEY, bytes32(_space), bytes32(_nonce));\n  }\n\n  /**\n   * @notice Allow wallet owner to execute an action\n   * @dev Relayers must ensure that the gasLimit specified for each transaction\n   *      is acceptable to them. A user could specify large enough that it could\n   *      consume all the gas available.\n   * @param _txs        Transactions to process\n   * @param _nonce      Signature nonce (may contain an encoded space)\n   * @param _signature  Encoded signature\n   */\n  function execute(\n    Transaction[] memory _txs,\n    uint256 _nonce,\n    bytes memory _signature\n  ) public override virtual {\n    // Validate and update nonce\n    _validateNonce(_nonce);\n\n    // Hash transaction bundle\n    bytes32 txHash = _subDigest(keccak256(abi.encode(_nonce, _txs)));\n\n    // Verify that signatures are valid\n    require(\n      _signatureValidation(txHash, _signature),\n      \"ModuleCalls#execute: INVALID_SIGNATURE\"\n    );\n\n    // Execute the transactions\n    _execute(txHash, _txs);\n  }\n\n  /**\n   * @notice Allow wallet to execute an action\n   *   without signing the message\n   * @param _txs  Transactions to execute\n   */\n  function selfExecute(\n    Transaction[] memory _txs\n  ) public override virtual onlySelf {\n    // Hash transaction bundle\n    bytes32 txHash = _subDigest(keccak256(abi.encode('self:', _txs)));\n\n    // Execute the transactions\n    _execute(txHash, _txs);\n  }\n\n  /**\n   * @notice Executes a list of transactions\n   * @param _txHash  Hash of the batch of transactions\n   * @param _txs  Transactions to execute\n   */\n  function _execute(\n    bytes32 _txHash,\n    Transaction[] memory _txs\n  ) private {\n    // Execute transaction\n    for (uint256 i = 0; i < _txs.length; i++) {\n      Transaction memory transaction = _txs[i];\n\n      bool success;\n      bytes memory result;\n\n      require(gasleft() >= transaction.gasLimit, \"ModuleCalls#_execute: NOT_ENOUGH_GAS\");\n\n      if (transaction.delegateCall) {\n        (success, result) = transaction.target.delegatecall{\n          gas: transaction.gasLimit == 0 ? gasleft() : transaction.gasLimit\n        }(transaction.data);\n      } else {\n        (success, result) = transaction.target.call{\n          value: transaction.value,\n          gas: transaction.gasLimit == 0 ? gasleft() : transaction.gasLimit\n        }(transaction.data);\n      }\n\n      if (success) {\n        emit TxExecuted(_txHash);\n      } else {\n        _revertBytes(transaction, _txHash, result);\n      }\n    }\n  }\n\n  /**\n   * @notice Verify if a nonce is valid\n   * @param _rawNonce Nonce to validate (may contain an encoded space)\n   * @dev A valid nonce must be above the last one used\n   *   with a maximum delta of 100\n   */\n  function _validateNonce(uint256 _rawNonce) private {\n    // Retrieve current nonce for this wallet\n    (uint256 space, uint256 providedNonce) = _decodeNonce(_rawNonce);\n    uint256 currentNonce = readNonce(space);\n\n    // Verify if nonce is valid\n    require(\n      providedNonce == currentNonce,\n      \"MainModule#_auth: INVALID_NONCE\"\n    );\n\n    // Update signature nonce\n    uint256 newNonce = providedNonce + 1;\n    _writeNonce(space, newNonce);\n    emit NonceChange(space, newNonce);\n  }\n\n  /**\n   * @notice Logs a failed transaction, reverts if the transaction is not optional\n   * @param _tx      Transaction that is reverting\n   * @param _txHash  Hash of the transaction\n   * @param _reason  Encoded revert message\n   */\n  function _revertBytes(\n    Transaction memory _tx,\n    bytes32 _txHash,\n    bytes memory _reason\n  ) internal {\n    if (_tx.revertOnError) {\n      assembly { revert(add(_reason, 0x20), mload(_reason)) }\n    } else {\n      emit TxFailed(_txHash, _reason);\n    }\n  }\n\n  /**\n   * @notice Decodes a raw nonce\n   * @dev A raw nonce is encoded using the first 160 bits for the space\n   *  and the last 96 bits for the nonce\n   * @param _rawNonce Nonce to be decoded\n   * @return _space The nonce space of the raw nonce\n   * @return _nonce The nonce of the raw nonce\n   */\n  function _decodeNonce(uint256 _rawNonce) private pure returns (uint256 _space, uint256 _nonce) {\n    _nonce = uint256(bytes32(_rawNonce) & NONCE_MASK);\n    _space = _rawNonce >> NONCE_BITS;\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (_interfaceID == type(IModuleCalls).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleHooks.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\nimport \"./interfaces/IModuleHooks.sol\";\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleStorage.sol\";\nimport \"./ModuleERC165.sol\";\n\nimport \"../../interfaces/receivers/IERC1155Receiver.sol\";\nimport \"../../interfaces/receivers/IERC721Receiver.sol\";\nimport \"../../interfaces/receivers/IERC223Receiver.sol\";\n\n\ncontract ModuleHooks is IERC1155Receiver, IERC721Receiver, IModuleHooks, ModuleERC165, ModuleSelfAuth {\n  //                       HOOKS_KEY = keccak256(\"org.arcadeum.module.hooks.hooks\");\n  bytes32 private constant HOOKS_KEY = bytes32(0xbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a120);\n\n  /**\n   * @notice Reads the implementation hook of a signature\n   * @param _signature Signature function\n   * @return The address of the implementation hook, address(0) if none\n  */\n  function readHook(bytes4 _signature) external override view returns (address) {\n    return _readHook(_signature);\n  }\n\n  /**\n   * @notice Adds a new hook to handle a given function selector\n   * @param _signature Signature function linked to the hook\n   * @param _implementation Hook implementation contract\n   * @dev Can't overwrite hooks that are part of the mainmodule (those defined below)\n   */\n  function addHook(bytes4 _signature, address _implementation) external override onlySelf {\n    require(_readHook(_signature) == address(0), \"ModuleHooks#addHook: HOOK_ALREADY_REGISTERED\");\n    _writeHook(_signature, _implementation);\n  }\n\n  /**\n   * @notice Removes a registered hook\n   * @param _signature Signature function linked to the hook\n   * @dev Can't remove hooks that are part of the mainmodule (those defined below) \n   *      without upgrading the wallet\n   */\n  function removeHook(bytes4 _signature) external override onlySelf {\n    require(_readHook(_signature) != address(0), \"ModuleHooks#removeHook: HOOK_NOT_REGISTERED\");\n    _writeHook(_signature, address(0));\n  }\n\n  /**\n   * @notice Reads the implementation hook of a signature\n   * @param _signature Signature function\n   * @return The address of the implementation hook, address(0) if none\n  */\n  function _readHook(bytes4 _signature) private view returns (address) {\n    return address(uint256(ModuleStorage.readBytes32Map(HOOKS_KEY, _signature)));\n  }\n\n  /**\n   * @notice Writes the implementation hook of a signature\n   * @param _signature Signature function\n   * @param _implementation Hook implementation contract\n  */\n  function _writeHook(bytes4 _signature, address _implementation) private {\n    ModuleStorage.writeBytes32Map(HOOKS_KEY, _signature, bytes32(uint256(_implementation)));\n  }\n\n  /**\n   * @notice Handle the receipt of a single ERC1155 token type.\n   * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n   */\n  function onERC1155Received(\n    address,\n    address,\n    uint256,\n    uint256,\n    bytes calldata\n  ) external override returns (bytes4) {\n    return ModuleHooks.onERC1155Received.selector;\n  }\n\n  /**\n   * @notice Handle the receipt of multiple ERC1155 token types.\n   * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n   */\n  function onERC1155BatchReceived(\n    address,\n    address,\n    uint256[] calldata,\n    uint256[] calldata,\n    bytes calldata\n  ) external override returns (bytes4) {\n    return ModuleHooks.onERC1155BatchReceived.selector;\n  }\n\n  /**\n   * @notice Handle the receipt of a single ERC721 token.\n   * @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n   */\n  function onERC721Received(address, address, uint256, bytes calldata) external override returns (bytes4) {\n    return ModuleHooks.onERC721Received.selector;\n  }\n\n  /**\n   * @notice Routes fallback calls through hooks\n   */\n  fallback() external payable {\n    address target = _readHook(msg.sig);\n    if (target != address(0)) {\n      (bool success, bytes memory result) = target.delegatecall(msg.data);\n      assembly {\n        if iszero(success)  {\n          revert(add(result, 0x20), mload(result))\n        }\n\n        return(add(result, 0x20), mload(result))\n      }\n    }\n  }\n\n  /**\n   * @notice Allows the wallet to receive ETH\n   */\n  receive() external payable { }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (\n      _interfaceID == type(IModuleHooks).interfaceId ||\n      _interfaceID == type(IERC1155Receiver).interfaceId ||\n      _interfaceID == type(IERC721Receiver).interfaceId ||\n      _interfaceID == type(IERC223Receiver).interfaceId\n    ) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\nimport \"../../utils/LibBytes.sol\";\nimport \"../../utils/SignatureValidator.sol\";\nimport \"../../interfaces/IERC1271Wallet.sol\";\n\nimport \"./interfaces/IModuleAuth.sol\";\n\nimport \"./ModuleERC165.sol\";\n\n\nabstract contract ModuleAuth is IModuleAuth, ModuleERC165, SignatureValidator, IERC1271Wallet {\n  using LibBytes for bytes;\n\n  uint256 private constant FLAG_SIGNATURE = 0;\n  uint256 private constant FLAG_ADDRESS = 1;\n  uint256 private constant FLAG_DYNAMIC_SIGNATURE = 2;\n\n  bytes4 private constant SELECTOR_ERC1271_BYTES_BYTES = 0x20c13b0b;\n  bytes4 private constant SELECTOR_ERC1271_BYTES32_BYTES = 0x1626ba7e;\n\n  /**\n   * @notice Verify if signer is default wallet owner\n   * @param _hash       Hashed signed message\n   * @param _signature  Array of signatures with signers ordered\n   *                    like the the keys in the multisig configs\n   *\n   * @dev The signature must be solidity packed and contain the total number of owners,\n   *      the threshold, the weight and either the address or a signature for each owner.\n   *\n   *      Each weight & (address or signature) pair is prefixed by a flag that signals if such pair\n   *      contains an address or a signature. The aggregated weight of the signatures must surpass the threshold.\n   *\n   *      Flag types:\n   *        0x00 - Signature\n   *        0x01 - Address\n   *\n   *      E.g:\n   *      abi.encodePacked(\n   *        uint16 threshold,\n   *        uint8 01,  uint8 weight_1, address signer_1,\n   *        uint8 00, uint8 weight_2, bytes signature_2,\n   *        ...\n   *        uint8 01,  uint8 weight_5, address signer_5\n   *      )\n   */\n  function _signatureValidation(\n    bytes32 _hash,\n    bytes memory _signature\n  )\n    internal override view returns (bool)\n  {\n    (\n      uint16 threshold,  // required threshold signature\n      uint256 rindex     // read index\n    ) = _signature.readFirstUint16();\n\n    // Start image hash generation\n    bytes32 imageHash = bytes32(uint256(threshold));\n\n    // Acumulated weight of signatures\n    uint256 totalWeight;\n\n    // Iterate until the image is completed\n    while (rindex < _signature.length) {\n      // Read next item type and addrWeight\n      uint256 flag; uint256 addrWeight; address addr;\n      (flag, addrWeight, rindex) = _signature.readUint8Uint8(rindex);\n\n      if (flag == FLAG_ADDRESS) {\n        // Read plain address\n        (addr, rindex) = _signature.readAddress(rindex);\n      } else if (flag == FLAG_SIGNATURE) {\n        // Read single signature and recover signer\n        bytes memory signature;\n        (signature, rindex) = _signature.readBytes66(rindex);\n        addr = recoverSigner(_hash, signature);\n\n        // Acumulate total weight of the signature\n        totalWeight += addrWeight;\n      } else if (flag == FLAG_DYNAMIC_SIGNATURE) {\n        // Read signer\n        (addr, rindex) = _signature.readAddress(rindex);\n\n        // Read signature size\n        uint256 size;\n        (size, rindex) = _signature.readUint16(rindex);\n\n        // Read dynamic size signature\n        bytes memory signature;\n        (signature, rindex) = _signature.readBytes(rindex, size);\n        require(isValidSignature(_hash, addr, signature), \"ModuleAuth#_signatureValidation: INVALID_SIGNATURE\");\n\n        // Acumulate total weight of the signature\n        totalWeight += addrWeight;\n      } else {\n        revert(\"ModuleAuth#_signatureValidation INVALID_FLAG\");\n      }\n\n      // Write weight and address to image\n      imageHash = keccak256(abi.encode(imageHash, addrWeight, addr));\n    }\n\n    return totalWeight >= threshold && _isValidImage(imageHash);\n  }\n\n  /**\n   * @notice Validates the signature image\n   * @param _imageHash Hashed image of signature\n   * @return true if the signature image is valid\n   */\n  function _isValidImage(bytes32 _imageHash) internal virtual view returns (bool);\n\n  /**\n   * @notice Will hash _data to be signed (similar to EIP-712)\n   * @param _digest Pre-final digest\n   * @return hashed data for this wallet\n   */\n  function _subDigest(bytes32 _digest) internal override view returns (bytes32) {\n    uint256 chainId; assembly { chainId := chainid() }\n    return keccak256(\n      abi.encodePacked(\n        \"\\x19\\x01\",\n        chainId,\n        address(this),\n        _digest\n      )\n    );\n  }\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided data\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided data\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))\n   * @param _data       Arbitrary length data signed on the behalf of address(this)\n   * @param _signatures Signature byte array associated with _data.\n   *                    Encoded as abi.encode(Signature[], Configs)\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes calldata _data,\n    bytes calldata _signatures\n  ) external override view returns (bytes4) {\n    // Validate signatures\n    if (_signatureValidation(_subDigest(keccak256(_data)), _signatures)) {\n      return SELECTOR_ERC1271_BYTES_BYTES;\n    }\n  }\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided hash\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided hash\n   *   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))\n   * @param _hash       keccak256 hash that was signed\n   * @param _signatures Signature byte array associated with _data.\n   *                    Encoded as abi.encode(Signature[], Configs)\n   * @return magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    bytes calldata _signatures\n  ) external override view returns (bytes4) {\n    // Validate signatures\n    if (_signatureValidation(_subDigest(_hash), _signatures)) {\n      return SELECTOR_ERC1271_BYTES32_BYTES;\n    }\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (\n      _interfaceID == type(IModuleAuth).interfaceId ||\n      _interfaceID == type(IERC1271Wallet).interfaceId\n    ) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/Implementation.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\n/**\n * @dev Allows modules to access the implementation slot\n */\ncontract Implementation {\n  /**\n   * @notice Updates the Wallet implementation\n   * @param _imp New implementation address\n   * @dev The wallet implementation is stored on the storage slot\n   *   defined by the address of the wallet itself\n   *   WARNING updating this value may break the wallet and users\n   *   must be confident that the new implementation is safe.\n   */\n  function _setImplementation(address _imp) internal {\n    assembly {\n      sstore(address(), _imp)\n    }\n  }\n\n  /**\n   * @notice Returns the Wallet implementation\n   * @return _imp The address of the current Wallet implementation\n   */\n  function _getImplementation() internal view returns (address _imp) {\n    assembly {\n      _imp := sload(address())\n    }\n  }\n}\n"
			},
			"contracts/utils/SignatureValidator.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\nimport \"../interfaces/IERC1271Wallet.sol\";\n\nimport \"./LibBytes.sol\";\n\n/**\n * @dev Contains logic for signature validation.\n * Signatures from wallet contracts assume ERC-1271 support (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1271.md)\n * Notes: Methods are strongly inspired by contracts in https://github.com/0xProject/0x-monorepo/blob/development/\n */\ncontract SignatureValidator {\n  using LibBytes for bytes;\n\n  /***********************************|\n  |             Variables             |\n  |__________________________________*/\n\n  // bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))\n  bytes4 constant internal ERC1271_MAGICVALUE = 0x20c13b0b;\n\n  // bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))\n  bytes4 constant internal ERC1271_MAGICVALUE_BYTES32 = 0x1626ba7e;\n\n  // Allowed signature types.\n  uint256 private constant SIG_TYPE_EIP712 = 1;\n  uint256 private constant SIG_TYPE_ETH_SIGN = 2;\n  uint256 private constant SIG_TYPE_WALLET_BYTES32 = 3;\n\n  /***********************************|\n  |        Signature Functions        |\n  |__________________________________*/\n\n /**\n   * @notice Recover the signer of hash, assuming it's an EOA account\n   * @dev Only for SignatureType.EIP712 and SignatureType.EthSign signatures\n   * @param _hash      Hash that was signed\n   *   encoded as (bytes32 r, bytes32 s, uint8 v, ... , SignatureType sigType)\n   */\n  function recoverSigner(\n    bytes32 _hash,\n    bytes memory _signature\n  ) internal pure returns (address signer) {\n    require(_signature.length == 66, \"SignatureValidator#recoverSigner: invalid signature length\");\n    uint256 signatureType = uint8(_signature[_signature.length - 1]);\n\n    // Variables are not scoped in Solidity.\n    uint8 v = uint8(_signature[64]);\n    bytes32 r = _signature.readBytes32(0);\n    bytes32 s = _signature.readBytes32(32);\n\n    // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n    // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n    // the valid range for s in (281): 0 < s < secp256k1n ÷ 2 + 1, and for v in (282): v ∈ {27, 28}. Most\n    // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n    //\n    // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n    // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n    // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n    // these malleable signatures as well.\n    //\n    // Source OpenZeppelin\n    // https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/cryptography/ECDSA.sol\n\n    if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n      revert(\"SignatureValidator#recoverSigner: invalid signature 's' value\");\n    }\n\n    if (v != 27 && v != 28) {\n      revert(\"SignatureValidator#recoverSigner: invalid signature 'v' value\");\n    }\n\n    // Signature using EIP712\n    if (signatureType == SIG_TYPE_EIP712) {\n      signer = ecrecover(_hash, v, r, s);\n\n    // Signed using web3.eth_sign() or Ethers wallet.signMessage()\n    } else if (signatureType == SIG_TYPE_ETH_SIGN) {\n      signer = ecrecover(\n        keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _hash)),\n        v,\n        r,\n        s\n      );\n\n    } else {\n      // Anything other signature types are illegal (We do not return false because\n      // the signature may actually be valid, just not in a format\n      // that we currently support. In this case returning false\n      // may lead the caller to incorrectly believe that the\n      // signature was invalid.)\n      revert(\"SignatureValidator#recoverSigner: UNSUPPORTED_SIGNATURE_TYPE\");\n    }\n\n    // Prevent signer from being 0x0\n    require(\n      signer != address(0x0),\n      \"SignatureValidator#recoverSigner: INVALID_SIGNER\"\n    );\n\n    return signer;\n  }\n\n /**\n   * @notice Returns true if the provided signature is valid for the given signer.\n   * @dev Supports SignatureType.EIP712, SignatureType.EthSign, and ERC1271 signatures\n   * @param _hash      Hash that was signed\n   * @param _signer    Address of the signer candidate\n   * @param _signature Signature byte array\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    address _signer,\n    bytes memory _signature\n  ) internal view returns (bool valid) {\n    uint256 signatureType = uint8(_signature[_signature.length - 1]);\n\n    if (signatureType == SIG_TYPE_EIP712 || signatureType == SIG_TYPE_ETH_SIGN) {\n      // Recover signer and compare with provided\n      valid = recoverSigner(_hash, _signature) == _signer;\n\n    } else if (signatureType == SIG_TYPE_WALLET_BYTES32) {\n      // Remove signature type before calling ERC1271, restore after call\n      uint256 prevSize; assembly { prevSize := mload(_signature) mstore(_signature, sub(prevSize, 1)) }\n      valid = ERC1271_MAGICVALUE_BYTES32 == IERC1271Wallet(_signer).isValidSignature(_hash, _signature);\n      assembly { mstore(_signature, prevSize) }\n\n    } else {\n      // Anything other signature types are illegal (We do not return false because\n      // the signature may actually be valid, just not in a format\n      // that we currently support. In this case returning false\n      // may lead the caller to incorrectly believe that the\n      // signature was invalid.)\n      revert(\"SignatureValidator#isValidSignature: UNSUPPORTED_SIGNATURE_TYPE\");\n    }\n  }\n}\n"
			},
			"contracts/utils/LibBytes.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\nlibrary LibBytes {\n  using LibBytes for bytes;\n\n  /***********************************|\n  |        Read Bytes Functions       |\n  |__________________________________*/\n\n  /**\n   * @dev Read firsts uint16 value.\n   * @param data Byte array to be read.\n   * @return a uint16 value of data at index zero.\n   * @return newIndex Updated index after reading the values.\n   */\n  function readFirstUint16(\n    bytes memory data\n  ) internal pure returns (\n    uint16 a,\n    uint256 newIndex\n  ) {\n    assembly {\n      let word := mload(add(32, data))\n      a := shr(240, word)\n      newIndex := 2\n    }\n    require(2 <= data.length, \"LibBytes#readFirstUint16: OUT_OF_BOUNDS\");\n  }\n\n  /**\n   * @dev Reads consecutive bool (8 bits) and uint8 values.\n   * @param data Byte array to be read.\n   * @param index Index in byte array of uint8 and uint8 values.\n   * @return a uint8 value of data at given index.\n   * @return b uint8 value of data at given index + 8.\n   * @return newIndex Updated index after reading the values.\n   */\n  function readUint8Uint8(\n    bytes memory data,\n    uint256 index\n  ) internal pure returns (\n    uint8 a,\n    uint8 b,\n    uint256 newIndex\n  ) {\n    assembly {\n      let word := mload(add(index, add(32, data)))\n      a := shr(248, word)\n      b := and(shr(240, word), 0xff)\n      newIndex := add(index, 2)\n    }\n    assert(newIndex > index);\n    require(newIndex <= data.length, \"LibBytes#readUint8Uint8: OUT_OF_BOUNDS\");\n  }\n\n  /**\n   * @dev Reads an address value from a position in a byte array.\n   * @param data Byte array to be read.\n   * @param index Index in byte array of address value.\n   * @return a address value of data at given index.\n   * @return newIndex Updated index after reading the value.\n   */\n  function readAddress(\n    bytes memory data,\n    uint256 index\n  ) internal pure returns (\n    address a,\n    uint256 newIndex\n  ) {\n    assembly {\n      let word := mload(add(index, add(32, data)))\n      a := and(shr(96, word), 0xffffffffffffffffffffffffffffffffffffffff)\n      newIndex := add(index, 20)\n    }\n    assert(newIndex > index);\n    require(newIndex <= data.length, \"LibBytes#readAddress: OUT_OF_BOUNDS\");\n  }\n\n  /**\n   * @dev Reads 66 bytes from a position in a byte array.\n   * @param data Byte array to be read.\n   * @param index Index in byte array of 66 bytes value.\n   * @return a 66 bytes bytes array value of data at given index.\n   * @return newIndex Updated index after reading the value.\n   */\n  function readBytes66(\n    bytes memory data,\n    uint256 index\n  ) internal pure returns (\n    bytes memory a,\n    uint256 newIndex\n  ) {\n    a = new bytes(66);\n    assembly {\n      let offset := add(32, add(data, index))\n      mstore(add(a, 32), mload(offset))\n      mstore(add(a, 64), mload(add(offset, 32)))\n      mstore(add(a, 66), mload(add(offset, 34)))\n      newIndex := add(index, 66)\n    }\n    assert(newIndex > index);\n    require(newIndex <= data.length, \"LibBytes#readBytes66: OUT_OF_BOUNDS\");\n  }\n\n  /**\n   * @dev Reads a bytes32 value from a position in a byte array.\n   * @param b Byte array containing a bytes32 value.\n   * @param index Index in byte array of bytes32 value.\n   * @return result bytes32 value from byte array.\n   */\n  function readBytes32(\n    bytes memory b,\n    uint256 index\n  )\n    internal\n    pure\n    returns (bytes32 result)\n  {\n    require(\n      b.length >= index + 32,\n      \"LibBytes#readBytes32: GREATER_OR_EQUAL_TO_32_LENGTH_REQUIRED\"\n    );\n\n    // Arrays are prefixed by a 256 bit length parameter\n    uint256 pos = index + 32;\n\n    // Read the bytes32 from array memory\n    assembly {\n      result := mload(add(b, pos))\n    }\n    return result;\n  }\n\n  /**\n   * @dev Reads an uint16 value from a position in a byte array.\n   * @param data Byte array to be read.\n   * @param index Index in byte array of uint16 value.\n   * @return a uint16 value of data at given index.\n   * @return newIndex Updated index after reading the value.\n   */\n  function readUint16(\n    bytes memory data,\n    uint256 index\n  ) internal pure returns (uint16 a, uint256 newIndex) {\n    assembly {\n      let word := mload(add(index, add(32, data)))\n      a := and(shr(240, word), 0xffff)\n      newIndex := add(index, 2)\n    }\n    assert(newIndex > index);\n    require(newIndex <= data.length, \"LibBytes#readUint16: OUT_OF_BOUNDS\");\n  }\n\n  /**\n   * @dev Reads bytes from a position in a byte array.\n   * @param data Byte array to be read.\n   * @param index Index in byte array of bytes value.\n   * @param size Number of bytes to read.\n   * @return a bytes bytes array value of data at given index.\n   * @return newIndex Updated index after reading the value.\n   */\n  function readBytes(\n    bytes memory data,\n    uint256 index,\n    uint256 size\n  ) internal pure returns (bytes memory a, uint256 newIndex) {\n    a = new bytes(size);\n\n    assembly {\n      let offset := add(32, add(data, index))\n\n      let i := 0 let n := 32\n      // Copy each word, except last one\n      for { } lt(n, size) { i := n n := add(n, 32) } {\n        mstore(add(a, n), mload(add(offset, i)))\n      }\n\n      // Load word after new array\n      let suffix := add(a, add(32, size))\n      let suffixWord := mload(suffix)\n\n      // Copy last word, overwrites after array \n      mstore(add(a, n), mload(add(offset, i)))\n\n      // Restore after array\n      mstore(suffix, suffixWord)\n\n      newIndex := add(index, size)\n    }\n\n    assert(newIndex >= index);\n    require(newIndex <= data.length, \"LibBytes#readBytes: OUT_OF_BOUNDS\");\n  }\n}\n"
			},
			"contracts/utils/LibAddress.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\n\nlibrary LibAddress {\n  /**\n   * @notice Will return true if provided address is a contract\n   * @param account Address to verify if contract or not\n   * @dev This contract will return false if called within the constructor of\n   *      a contract's deployment, as the code is not yet stored on-chain.\n   */\n  function isContract(address account) internal view returns (bool) {\n    uint256 csize;\n    // solhint-disable-next-line no-inline-assembly\n    assembly { csize := extcodesize(account) }\n    return csize != 0;\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleERC165.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\n\n\nabstract contract ModuleERC165 {\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @dev Adding new hooks will not lead to them being reported by this function\n   *      without upgrading the wallet. In addition, developpers must ensure that \n   *      all inherited contracts by the mainmodule don't conflict and are accounted\n   *      to be supported by the supportsInterface method.\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) virtual public pure returns (bool) {\n    return _interfaceID == this.supportsInterface.selector;\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleSelfAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\n\ncontract ModuleSelfAuth {\n  modifier onlySelf() {\n    require(msg.sender == address(this), \"ModuleSelfAuth#onlySelf: NOT_AUTHORIZED\");\n    _;\n  }\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleUpdate.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\n\ninterface IModuleUpdate {\n  /**\n   * @notice Updates the implementation of the base wallet\n   * @param _implementation New main module implementation\n   * @dev WARNING Updating the implementation can brick the wallet\n   */\n  function updateImplementation(address _implementation) external;\n}\n"
			},
			"contracts/interfaces/receivers/IERC223Receiver.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\n\ninterface IERC223Receiver {\n  function tokenFallback(address, uint256, bytes calldata) external;\n}\n"
			},
			"contracts/modules/commons/ModuleStorage.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\n\nlibrary ModuleStorage {\n  function writeBytes32(bytes32 _key, bytes32 _val) internal {\n    assembly { sstore(_key, _val) }\n  }\n\n  function readBytes32(bytes32 _key) internal view returns (bytes32 val) {\n    assembly { val := sload(_key) }\n  }\n\n  function writeBytes32Map(bytes32 _key, bytes32 _subKey, bytes32 _val) internal {\n    bytes32 key = keccak256(abi.encode(_key, _subKey));\n    assembly { sstore(key, _val) }\n  }\n\n  function readBytes32Map(bytes32 _key, bytes32 _subKey) internal view returns (bytes32 val) {\n    bytes32 key = keccak256(abi.encode(_key, _subKey));\n    assembly { val := sload(key) }\n  }\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleHooks.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\n\ninterface IModuleHooks {\n  /**\n   * @notice Reads the implementation hook of a signature\n   * @param _signature Signature function\n   * @return The address of the implementation hook, address(0) if none\n  */\n  function readHook(bytes4 _signature) external view returns (address);\n\n  /**\n   * @notice Adds a new hook to handle a given function selector\n   * @param _signature Signature function linked to the hook\n   * @param _implementation Hook implementation contract\n   */\n  function addHook(bytes4 _signature, address _implementation) external;\n\n  /**\n   * @notice Removes a registered hook\n   * @param _signature Signature function linked to the hook\n   */\n  function removeHook(bytes4 _signature) external;\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleCreator.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\n\ninterface IModuleCreator {\n  /**\n   * @notice Creates a contract forwarding eth value\n   * @param _code Creation code of the contract\n   * @return addr The address of the created contract\n   */\n  function createContract(bytes calldata _code) external payable returns (address addr);\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\n\n\nabstract contract IModuleAuth {\n  /**\n   * @notice Hashed _data to be signed\n   * @param _digest Pre-final digest\n   * @return hashed data for this wallet\n   */\n  function _subDigest(\n    bytes32 _digest\n  ) internal virtual view returns (bytes32);\n\n  /**\n   * @notice Verify if signer is default wallet owner\n   * @param _hash Hashed signed message\n   * @param _signature Encoded signature\n   * @return True is the signature is valid\n   */\n  function _signatureValidation(\n    bytes32 _hash,\n    bytes memory _signature\n  ) internal virtual view returns (bool);\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleCalls.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.7.6;\npragma experimental ABIEncoderV2;\n\n\ninterface IModuleCalls {\n  // Events\n  event NonceChange(uint256 _space, uint256 _newNonce);\n  event TxFailed(bytes32 _tx, bytes _reason);\n  event TxExecuted(bytes32 _tx) anonymous;\n\n  // Transaction structure\n  struct Transaction {\n    bool delegateCall;   // Performs delegatecall\n    bool revertOnError;  // Reverts transaction bundle if tx fails\n    uint256 gasLimit;    // Maximum gas to be forwarded\n    address target;      // Address of the contract to call\n    uint256 value;       // Amount of ETH to pass with the call\n    bytes data;          // calldata to pass\n  }\n\n  /**\n   * @notice Returns the next nonce of the default nonce space\n   * @dev The default nonce space is 0x00\n   * @return The next nonce\n   */\n  function nonce() external view returns (uint256);\n\n  /**\n   * @notice Returns the next nonce of the given nonce space\n   * @param _space Nonce space, each space keeps an independent nonce count\n   * @return The next nonce\n   */\n  function readNonce(uint256 _space) external view returns (uint256);\n\n  /**\n   * @notice Allow wallet owner to execute an action\n   * @param _txs        Transactions to process\n   * @param _nonce      Signature nonce (may contain an encoded space)\n   * @param _signature  Encoded signature\n   */\n  function execute(\n    Transaction[] calldata _txs,\n    uint256 _nonce,\n    bytes calldata _signature\n  ) external;\n\n  /**\n   * @notice Allow wallet to execute an action\n   *   without signing the message\n   * @param _txs  Transactions to execute\n   */\n  function selfExecute(\n    Transaction[] calldata _txs\n  ) external;\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/interfaces/IERC1271Wallet.sol": {
				"IERC1271Wallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					}
				}
			},
			"contracts/interfaces/receivers/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					}
				}
			},
			"contracts/interfaces/receivers/IERC223Receiver.sol": {
				"IERC223Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "tokenFallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					}
				}
			},
			"contracts/interfaces/receivers/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					}
				}
			},
			"contracts/modules/GuestModule.sol": {
				"GuestModule": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_contract",
									"type": "address"
								}
							],
							"name": "CreatedContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newNonce",
									"type": "uint256"
								}
							],
							"name": "NonceChange",
							"type": "event"
						},
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								}
							],
							"name": "TxExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_reason",
									"type": "bytes"
								}
							],
							"name": "TxFailed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "createContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								}
							],
							"name": "readNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								}
							],
							"name": "selfExecute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DDC DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A9A1628 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x7A9A1628 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x192 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x20C13B0B EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x61C2926C EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x162D JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x1590 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x2CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x18C9 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x1720 JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2 DUP3 PUSH2 0x3E7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204 PUSH2 0x1C8 DUP6 PUSH2 0x444 JUMP JUMPDEST DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x4A4 SWAP3 POP POP POP JUMP JUMPDEST ISZERO PUSH2 0x22C JUMPI POP PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D PUSH2 0x1C8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 SWAP4 POP PUSH2 0x444 SWAP3 POP POP POP JUMP JUMPDEST ISZERO PUSH2 0x285 JUMPI POP PUSH32 0x20C13B0B00000000000000000000000000000000000000000000000000000000 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x444 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CA DUP2 DUP4 PUSH2 0x69C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F0 DUP2 DUP6 PUSH2 0x69C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2 PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D80 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E2 PUSH1 0x0 PUSH2 0x2F6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x90042BAF00000000000000000000000000000000000000000000000000000000 EQ ISZERO PUSH2 0x43B JUMPI POP PUSH1 0x1 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x1B2 DUP3 PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CHAINID PUSH1 0x22 DUP4 ADD MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x42 DUP4 ADD MSTORE PUSH1 0x56 DUP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP5 ADD DUP5 MSTORE PUSH1 0x76 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4B2 DUP5 PUSH2 0x8A1 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xFFFF DUP3 AND PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP4 LT ISZERO PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 DUP1 PUSH2 0x4D6 DUP10 DUP8 PUSH2 0x90F JUMP JUMPDEST SWAP8 POP PUSH1 0xFF SWAP2 DUP3 AND SWAP5 POP AND SWAP2 POP PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x4FE JUMPI PUSH2 0x4F5 DUP10 DUP8 PUSH2 0x990 JUMP JUMPDEST SWAP7 POP SWAP1 POP PUSH2 0x622 JUMP JUMPDEST DUP3 PUSH2 0x52A JUMPI PUSH1 0x60 PUSH2 0x50F DUP11 DUP9 PUSH2 0xA08 JUMP JUMPDEST SWAP8 POP SWAP1 POP PUSH2 0x51D DUP12 DUP3 PUSH2 0xAB9 JUMP JUMPDEST SWAP2 POP DUP3 DUP6 ADD SWAP5 POP POP PUSH2 0x622 JUMP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0x5D1 JUMPI PUSH2 0x53D DUP10 DUP8 PUSH2 0x990 JUMP JUMPDEST SWAP7 POP SWAP1 POP PUSH1 0x0 PUSH2 0x54D DUP11 DUP9 PUSH2 0xE43 JUMP JUMPDEST SWAP8 POP PUSH2 0xFFFF AND SWAP1 POP PUSH1 0x60 PUSH2 0x562 DUP12 DUP10 DUP5 PUSH2 0xEB4 JUMP JUMPDEST SWAP9 POP SWAP1 POP PUSH2 0x571 DUP13 DUP5 DUP4 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C0B PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B28 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP5 POP POP POP POP PUSH2 0x4BF JUMP JUMPDEST DUP4 PUSH2 0xFFFF AND DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x691 JUMPI POP PUSH2 0x691 DUP3 PUSH2 0x11EB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x60 DUP3 PUSH1 0x0 ADD MLOAD ISZERO PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH2 0x19BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD GAS LT ISZERO PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH2 0x1918 JUMP JUMPDEST DUP3 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x80 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x0 EQ PUSH2 0x77D JUMPI DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x77F JUMP JUMPDEST GAS JUMPDEST SWAP1 DUP6 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x7FC JUMPI DUP6 PUSH1 0x40 MLOAD PUSH2 0x7EF SWAP2 SWAP1 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG0 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x807 DUP4 DUP8 DUP4 PUSH2 0x11F1 JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x69F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x389901C700000000000000000000000000000000000000000000000000000000 EQ ISZERO PUSH2 0x898 JUMPI POP PUSH1 0x1 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x1B2 DUP3 PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0xF0 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 SWAP1 DUP2 GT ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B77 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST DUP1 DUP3 ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0xF0 SHR PUSH1 0xFF AND PUSH1 0x2 DUP4 ADD DUP4 DUP2 GT PUSH2 0x92F JUMPI INVALID JUMPDEST DUP5 MLOAD DUP2 GT ISZERO PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CDB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 DUP3 ADD PUSH1 0x20 ADD MLOAD PUSH1 0x60 SHR PUSH1 0x14 DUP3 ADD DUP3 DUP2 GT PUSH2 0x9A7 JUMPI INVALID JUMPDEST DUP4 MLOAD DUP2 GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B54 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x42 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP2 POP DUP3 DUP5 ADD PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x22 DUP2 ADD MLOAD PUSH1 0x42 DUP5 ADD MSTORE POP PUSH1 0x42 DUP4 ADD SWAP1 POP DUP3 DUP2 GT PUSH2 0xA5F JUMPI INVALID JUMPDEST DUP4 MLOAD DUP2 GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C7C PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x42 EQ PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AEE PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 DUP5 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0xB27 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x40 DUP2 MLOAD DUP2 LT PUSH2 0xB49 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x0 PUSH2 0xB5F DUP6 DUP3 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB6E DUP7 PUSH1 0x20 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP2 GT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AB1 PUSH1 0x3D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0xC01 JUMPI POP DUP3 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B9E PUSH1 0x3D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP5 EQ ISZERO PUSH2 0xCCB JUMPI PUSH1 0x1 DUP8 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP5 POP PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x2 DUP5 EQ ISZERO PUSH2 0xD7C JUMPI PUSH1 0x1 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP PUSH1 0x1C ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C9F PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BDB PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF0 SHR PUSH1 0x2 DUP3 ADD DUP3 DUP2 GT PUSH2 0xE5A JUMPI INVALID JUMPDEST DUP4 MLOAD DUP2 GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D22 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEFA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP DUP4 DUP6 ADD PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x20 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xF21 JUMPI SWAP1 DUP3 ADD MLOAD DUP5 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD PUSH2 0xF08 JUMP JUMPDEST DUP5 DUP7 ADD PUSH1 0x20 ADD DUP1 MLOAD SWAP4 SWAP1 SWAP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE MSTORE POP DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xF41 JUMPI INVALID JUMPDEST DUP5 MLOAD DUP2 GT ISZERO PUSH2 0xF9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D01 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 DUP5 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0xFB6 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0xFCF JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST ISZERO PUSH2 0x1013 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFF5 DUP7 DUP6 PUSH2 0xAB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0x1192 JUMPI DUP3 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD DUP5 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 DUP2 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 DUP4 MSTORE DUP7 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP7 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP4 PUSH4 0x1626BA7E SWAP4 DUP12 SWAP4 DUP11 SWAP4 SWAP1 SWAP3 SWAP2 PUSH1 0x64 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10CD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10B5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10FA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x112C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 DUP5 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C3D PUSH1 0x3F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0x1203 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH32 0x3DBD1590EA96DD3253A91F24E64E3A502E1225D602A5731357BC12643070CCD7 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1234 SWAP3 SWAP2 SWAP1 PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND ISZERO DUP1 PUSH2 0x12B3 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x36E7817500000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x12C0 JUMPI POP PUSH1 0x1 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x1B2 DUP3 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH2 0x1328 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D44 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13AF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x13C6 JUMPI INVALID JUMPDEST PUSH2 0x13D3 DUP3 DUP4 DUP6 MUL ADD PUSH2 0x1A60 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP1 DUP7 DUP5 ADD DUP7 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x14AF JUMPI DUP2 CALLDATALOAD DUP10 ADD PUSH1 0xC0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP4 DUP15 SUB ADD SLT ISZERO PUSH2 0x141D JUMPI DUP10 DUP11 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 ADD DUP2 DUP2 LT DUP11 DUP3 GT OR ISZERO PUSH2 0x1432 JUMPI INVALID JUMPDEST DUP3 MSTORE PUSH2 0x143F DUP5 DUP12 ADD PUSH2 0x14BD JUMP JUMPDEST DUP2 MSTORE PUSH2 0x144C DUP3 DUP6 ADD PUSH2 0x14BD JUMP JUMPDEST DUP11 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD CALLDATALOAD DUP4 DUP4 ADD MSTORE PUSH1 0x80 SWAP3 POP PUSH2 0x1469 DUP4 DUP7 ADD PUSH2 0x137B JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP5 DUP2 ADD CALLDATALOAD DUP4 DUP4 ADD MSTORE SWAP3 DUP5 ADD CALLDATALOAD SWAP3 DUP10 DUP5 GT ISZERO PUSH2 0x1488 JUMPI DUP13 DUP14 REVERT JUMPDEST PUSH2 0x1496 DUP16 DUP13 DUP7 DUP9 ADD ADD PUSH2 0x150D JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE DUP8 MSTORE POP POP POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x13DF JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14DE JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14F5 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x151D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1531 JUMPI INVALID JUMPDEST PUSH2 0x1562 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x1A60 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1576 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15B7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x285 DUP5 DUP3 DUP6 ADD PUSH2 0x139F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15D7 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15EE JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x15FA DUP8 DUP4 DUP9 ADD PUSH2 0x139F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1616 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1623 DUP7 DUP3 DUP8 ADD PUSH2 0x150D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1641 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165E JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x166A DUP7 DUP3 DUP8 ADD PUSH2 0x14CD JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1688 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x22C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16CC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16E3 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x16EF DUP9 DUP4 DUP10 ADD PUSH2 0x14CD JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1707 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1714 DUP8 DUP3 DUP9 ADD PUSH2 0x14CD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1731 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1747 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x285 DUP5 DUP3 DUP6 ADD PUSH2 0x150D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1764 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP2 DUP4 MUL DUP5 ADD ADD DUP2 DUP7 ADD DUP6 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x182A JUMPI DUP6 DUP4 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD DUP10 MSTORE DUP2 MLOAD DUP1 MLOAD ISZERO ISZERO DUP5 MSTORE DUP5 DUP2 ADD MLOAD ISZERO ISZERO DUP6 DUP6 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP6 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD PUSH1 0xC0 SWAP2 DUP6 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x1816 DUP2 DUP7 ADD DUP4 PUSH2 0x1837 JUMP JUMPDEST SWAP11 DUP7 ADD SWAP11 SWAP5 POP POP POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1786 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x184F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1893 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A84 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x285 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1837 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x47756573744D6F64756C65235F6578656375746547756573743A204E4F545F45 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x4E4F5547485F4741530000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH1 0x6 PUSH1 0x40 DUP4 ADD MSTORE PUSH32 0x67756573743A0000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x22C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x47756573744D6F64756C65235F6578656375746547756573743A2064656C6567 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x61746543616C6C206E6F7420616C6C6F77656400000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH1 0x5 PUSH1 0x40 DUP4 ADD MSTORE PUSH32 0x73656C663A000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x22C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1A7C JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A9F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A87 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2F0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID MSTORE8 PUSH10 0x676E617475726556616C PUSH10 0x6461746F72237265636F PUSH23 0x65725369676E65723A20696E76616C6964207369676E61 PUSH21 0x757265202773272076616C75655369676E61747572 PUSH6 0x56616C696461 PUSH21 0x6F72237265636F7665725369676E65723A20696E76 PUSH2 0x6C69 PUSH5 0x207369676E PUSH2 0x7475 PUSH19 0x65206C656E6774684D6F64756C654175746823 0x5F PUSH20 0x69676E617475726556616C69646174696F6E2049 0x4E JUMP COINBASE 0x4C 0x49 DIFFICULTY 0x5F CHAINID 0x4C COINBASE SELFBALANCE 0x4C PUSH10 0x62427974657323726561 PUSH5 0x4164647265 PUSH20 0x733A204F55545F4F465F424F554E44534C696242 PUSH26 0x7465732372656164466972737455696E7431363A204F55545F4F CHAINID 0x5F TIMESTAMP 0x4F SSTORE 0x4E DIFFICULTY MSTORE8 MSTORE8 PUSH10 0x676E617475726556616C PUSH10 0x6461746F72237265636F PUSH23 0x65725369676E65723A20696E76616C6964207369676E61 PUSH21 0x757265202776272076616C75655369676E61747572 PUSH6 0x56616C696461 PUSH21 0x6F72237265636F7665725369676E65723A20494E56 COINBASE 0x4C 0x49 DIFFICULTY 0x5F MSTORE8 0x49 SELFBALANCE 0x4E GASLIMIT MSTORE 0x4D PUSH16 0x64756C6541757468235F7369676E6174 PUSH22 0x726556616C69646174696F6E3A20494E56414C49445F MSTORE8 0x49 SELFBALANCE 0x4E COINBASE SLOAD SSTORE MSTORE GASLIMIT MSTORE8 PUSH10 0x676E617475726556616C PUSH10 0x6461746F722369735661 PUSH13 0x69645369676E61747572653A20 SSTORE 0x4E MSTORE8 SSTORE POP POP 0x4F MSTORE SLOAD GASLIMIT DIFFICULTY 0x5F MSTORE8 0x49 SELFBALANCE 0x4E COINBASE SLOAD SSTORE MSTORE GASLIMIT 0x5F SLOAD MSIZE POP GASLIMIT 0x4C PUSH10 0x62427974657323726561 PUSH5 0x4279746573 CALLDATASIZE CALLDATASIZE GASPRICE KECCAK256 0x4F SSTORE SLOAD 0x5F 0x4F CHAINID 0x5F TIMESTAMP 0x4F SSTORE 0x4E DIFFICULTY MSTORE8 MSTORE8 PUSH10 0x676E617475726556616C PUSH10 0x6461746F72237265636F PUSH23 0x65725369676E65723A20554E535550504F525445445F53 0x49 SELFBALANCE 0x4E COINBASE SLOAD SSTORE MSTORE GASLIMIT 0x5F SLOAD MSIZE POP GASLIMIT 0x4C PUSH10 0x62427974657323726561 PUSH5 0x55696E7438 SSTORE PUSH10 0x6E74383A204F55545F4F CHAINID 0x5F TIMESTAMP 0x4F SSTORE 0x4E DIFFICULTY MSTORE8 0x4C PUSH10 0x62427974657323726561 PUSH5 0x4279746573 GASPRICE KECCAK256 0x4F SSTORE SLOAD 0x5F 0x4F CHAINID 0x5F TIMESTAMP 0x4F SSTORE 0x4E DIFFICULTY MSTORE8 0x4C PUSH10 0x62427974657323726561 PUSH5 0x55696E7431 CALLDATASIZE GASPRICE KECCAK256 0x4F SSTORE SLOAD 0x5F 0x4F CHAINID 0x5F TIMESTAMP 0x4F SSTORE 0x4E DIFFICULTY MSTORE8 0x4C PUSH10 0x62427974657323726561 PUSH5 0x4279746573 CALLER ORIGIN GASPRICE KECCAK256 SELFBALANCE MSTORE GASLIMIT COINBASE SLOAD GASLIMIT MSTORE 0x5F 0x4F MSTORE 0x5F GASLIMIT MLOAD SSTORE COINBASE 0x4C 0x5F SLOAD 0x4F 0x5F CALLER ORIGIN 0x5F 0x4C GASLIMIT 0x4E SELFBALANCE SLOAD 0x48 0x5F MSTORE GASLIMIT MLOAD SSTORE 0x49 MSTORE GASLIMIT DIFFICULTY 0x4D PUSH16 0x64756C6553656C6641757468236F6E6C PUSH26 0x53656C663A204E4F545F415554484F52495A4544A26469706673 PC 0x22 SLT KECCAK256 CREATE2 LOG1 0xDE SIGNEXTEND PUSH6 0xBAA2EE828E8 PUSH23 0x6BC6DBD0C74DA0CC4735A143852D24F868E4B62464736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "893:2451:4:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12071:22",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:22",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "65:147:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "75:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "97:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "84:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "84:20:22"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "75:5:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "190:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "199:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "202:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "192:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "192:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "192:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "126:5:22"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "137:5:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "144:42:22",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "133:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "133:54:22"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "123:2:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "123:65:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "116:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "116:73:22"
															},
															"nodeType": "YulIf",
															"src": "113:2:22"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "44:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "55:5:22",
														"type": ""
													}
												],
												"src": "14:198:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "299:1623:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "348:24:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "357:5:22"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "364:5:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "350:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "350:20:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "350:20:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "327:6:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "335:4:22",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "323:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "323:17:22"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "342:3:22"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "319:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "319:27:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "312:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "312:35:22"
															},
															"nodeType": "YulIf",
															"src": "309:2:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "381:30:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "391:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "391:20:22"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "385:2:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "420:14:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "430:4:22",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "424:2:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "443:28:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "453:18:22",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "447:2:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "494:13:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "496:7:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "496:9:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "496:9:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "486:2:22"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "490:2:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "483:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "483:10:22"
															},
															"nodeType": "YulIf",
															"src": "480:2:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "516:47:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "550:2:22"
																					},
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "554:2:22"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "546:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "546:11:22"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "559:2:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "542:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "542:20:22"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "527:14:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "527:36:22"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "520:3:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "572:16:22",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "585:3:22"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "576:5:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "604:3:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "609:2:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:15:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:15:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "621:19:22",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "632:3:22"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "637:2:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "628:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:12:22"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "621:3:22"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "649:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "664:6:22"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "672:2:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "660:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:15:22"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "653:3:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:14:22",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "693:5:22"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "688:1:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "752:1141:22",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "766:40:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "offset",
																					"nodeType": "YulIdentifier",
																					"src": "780:6:22"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "801:3:22"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "788:12:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "788:17:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "776:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "776:30:22"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "770:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "819:14:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "829:4:22",
																			"type": "",
																			"value": "0xc0"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "823:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "944:24:22",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "953:5:22"
																							},
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "960:5:22"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "946:6:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "946:20:22"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "946:20:22"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "end",
																									"nodeType": "YulIdentifier",
																									"src": "861:3:22"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "866:2:22"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "857:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "857:12:22"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "871:66:22",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "853:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "853:85:22"
																				},
																				{
																					"name": "_5",
																					"nodeType": "YulIdentifier",
																					"src": "940:2:22"
																				}
																			],
																			"functionName": {
																				"name": "slt",
																				"nodeType": "YulIdentifier",
																				"src": "849:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "849:94:22"
																		},
																		"nodeType": "YulIf",
																		"src": "846:2:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "981:12:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "991:2:22",
																			"type": "",
																			"value": "64"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "985:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1006:23:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "_6",
																					"nodeType": "YulIdentifier",
																					"src": "1026:2:22"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1020:5:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1020:9:22"
																		},
																		"variables": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulTypedName",
																				"src": "1010:6:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1042:33:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "memPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1064:6:22"
																				},
																				{
																					"name": "_5",
																					"nodeType": "YulIdentifier",
																					"src": "1072:2:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1060:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1060:15:22"
																		},
																		"variables": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulTypedName",
																				"src": "1046:10:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1138:13:22",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "invalid",
																							"nodeType": "YulIdentifier",
																							"src": "1140:7:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1140:9:22"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1140:9:22"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "newFreePtr",
																							"nodeType": "YulIdentifier",
																							"src": "1097:10:22"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "1109:2:22"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "1094:2:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1094:18:22"
																				},
																				{
																					"arguments": [
																						{
																							"name": "newFreePtr",
																							"nodeType": "YulIdentifier",
																							"src": "1117:10:22"
																						},
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "1129:6:22"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1114:2:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1114:22:22"
																				}
																			],
																			"functionName": {
																				"name": "or",
																				"nodeType": "YulIdentifier",
																				"src": "1091:2:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1091:46:22"
																		},
																		"nodeType": "YulIf",
																		"src": "1088:2:22"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_6",
																					"nodeType": "YulIdentifier",
																					"src": "1171:2:22"
																				},
																				{
																					"name": "newFreePtr",
																					"nodeType": "YulIdentifier",
																					"src": "1175:10:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1164:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1164:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1164:22:22"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "memPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1206:6:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1236:2:22"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "1240:2:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1232:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1232:11:22"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_bool",
																						"nodeType": "YulIdentifier",
																						"src": "1214:17:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1214:30:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1199:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1199:46:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1199:46:22"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "1269:6:22"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "1277:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1265:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1265:15:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1304:2:22"
																								},
																								{
																									"name": "_6",
																									"nodeType": "YulIdentifier",
																									"src": "1308:2:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1300:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1300:11:22"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_bool",
																						"nodeType": "YulIdentifier",
																						"src": "1282:17:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1282:30:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1258:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1258:55:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1258:55:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1326:12:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1336:2:22",
																			"type": "",
																			"value": "96"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nodeType": "YulTypedName",
																				"src": "1330:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "1362:6:22"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "1370:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1358:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1358:15:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1392:2:22"
																								},
																								{
																									"name": "_7",
																									"nodeType": "YulIdentifier",
																									"src": "1396:2:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1388:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1388:11:22"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1375:12:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1375:25:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1351:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1351:50:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1351:50:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1414:13:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1424:3:22",
																			"type": "",
																			"value": "128"
																		},
																		"variables": [
																			{
																				"name": "_8",
																				"nodeType": "YulTypedName",
																				"src": "1418:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "1451:6:22"
																						},
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "1459:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1447:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1447:15:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1489:2:22"
																								},
																								{
																									"name": "_8",
																									"nodeType": "YulIdentifier",
																									"src": "1493:2:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1485:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1485:11:22"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_address",
																						"nodeType": "YulIdentifier",
																						"src": "1464:20:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1464:33:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1440:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1440:58:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1440:58:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1511:13:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1521:3:22",
																			"type": "",
																			"value": "160"
																		},
																		"variables": [
																			{
																				"name": "_9",
																				"nodeType": "YulTypedName",
																				"src": "1515:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "1548:6:22"
																						},
																						{
																							"name": "_8",
																							"nodeType": "YulIdentifier",
																							"src": "1556:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1544:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1544:15:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "1578:2:22"
																								},
																								{
																									"name": "_9",
																									"nodeType": "YulIdentifier",
																									"src": "1582:2:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1574:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1574:11:22"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1561:12:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1561:25:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1537:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1537:50:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1537:50:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1600:41:22",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "1633:2:22"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "1637:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1629:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1629:11:22"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "1616:12:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1616:25:22"
																		},
																		"variables": [
																			{
																				"name": "offset_1",
																				"nodeType": "YulTypedName",
																				"src": "1604:8:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1674:24:22",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "1683:5:22"
																							},
																							{
																								"name": "array",
																								"nodeType": "YulIdentifier",
																								"src": "1690:5:22"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "1676:6:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1676:20:22"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1676:20:22"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "offset_1",
																					"nodeType": "YulIdentifier",
																					"src": "1660:8:22"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "1670:2:22"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "1657:2:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1657:16:22"
																		},
																		"nodeType": "YulIf",
																		"src": "1654:2:22"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "memPtr",
																							"nodeType": "YulIdentifier",
																							"src": "1722:6:22"
																						},
																						{
																							"name": "_9",
																							"nodeType": "YulIdentifier",
																							"src": "1730:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1718:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1718:15:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_4",
																											"nodeType": "YulIdentifier",
																											"src": "1762:2:22"
																										},
																										{
																											"name": "offset_1",
																											"nodeType": "YulIdentifier",
																											"src": "1766:8:22"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1758:3:22"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1758:17:22"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "1777:2:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1754:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1754:26:22"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1782:3:22"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_bytes",
																						"nodeType": "YulIdentifier",
																						"src": "1735:18:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1735:51:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1711:76:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1711:76:22"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1807:3:22"
																				},
																				{
																					"name": "memPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1812:6:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1800:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1800:19:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1800:19:22"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1832:19:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1843:3:22"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1848:2:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1839:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1839:12:22"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1832:3:22"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1864:19:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1875:3:22"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1880:2:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1871:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1871:12:22"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1864:3:22"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "718:1:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "721:2:22"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "715:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "715:9:22"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "725:18:22",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "727:14:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "736:1:22"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "739:1:22",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "732:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "732:9:22"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "727:1:22"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "711:3:22",
																"statements": []
															},
															"src": "707:1186:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1902:14:22",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "1911:5:22"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1902:5:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_Transaction_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "273:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "281:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "289:5:22",
														"type": ""
													}
												],
												"src": "217:1705:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1975:114:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1985:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2007:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1994:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "1994:20:22"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1985:5:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2067:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2076:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2079:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2069:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2069:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2069:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2036:5:22"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "2057:5:22"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "2050:6:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2050:13:22"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2043:6:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2043:21:22"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2033:2:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2033:32:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2026:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2026:40:22"
															},
															"nodeType": "YulIf",
															"src": "2023:2:22"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1954:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1965:5:22",
														"type": ""
													}
												],
												"src": "1927:162:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2168:303:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2217:30:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "arrayPos",
																					"nodeType": "YulIdentifier",
																					"src": "2226:8:22"
																				},
																				{
																					"name": "arrayPos",
																					"nodeType": "YulIdentifier",
																					"src": "2236:8:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2219:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2219:26:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2219:26:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2196:6:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2204:4:22",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2192:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2192:17:22"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2211:3:22"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2188:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2188:27:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2181:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2181:35:22"
															},
															"nodeType": "YulIf",
															"src": "2178:2:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2256:30:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2279:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2266:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2266:20:22"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2256:6:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2329:30:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "arrayPos",
																					"nodeType": "YulIdentifier",
																					"src": "2338:8:22"
																				},
																				{
																					"name": "arrayPos",
																					"nodeType": "YulIdentifier",
																					"src": "2348:8:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2331:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2331:26:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2331:26:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2301:6:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2309:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2298:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2298:30:22"
															},
															"nodeType": "YulIf",
															"src": "2295:2:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2368:29:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2384:6:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2392:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2380:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:17:22"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "2368:8:22"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2449:16:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2458:1:22",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2461:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2451:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2451:12:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2451:12:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2420:6:22"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2428:6:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2416:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2416:19:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2437:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2412:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2412:30:22"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2444:3:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2409:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:39:22"
															},
															"nodeType": "YulIf",
															"src": "2406:2:22"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2131:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2139:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "2147:8:22",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2157:6:22",
														"type": ""
													}
												],
												"src": "2094:377:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2530:547:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2579:24:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2588:5:22"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2595:5:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2581:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2581:20:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2581:20:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2558:6:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2566:4:22",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2554:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2554:17:22"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2573:3:22"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2550:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2550:27:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2543:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2543:35:22"
															},
															"nodeType": "YulIf",
															"src": "2540:2:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2612:30:22",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2635:6:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2622:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2622:20:22"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2616:2:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2681:13:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "2683:7:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2683:9:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2683:9:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2657:2:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2661:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2654:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2654:26:22"
															},
															"nodeType": "YulIf",
															"src": "2651:2:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2703:128:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2745:2:22"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2749:4:22",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2741:3:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2741:13:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2756:66:22",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2737:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2737:86:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2825:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2733:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2733:97:22"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2718:14:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2718:113:22"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "2707:7:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "2847:7:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2856:2:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2840:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2840:19:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2840:19:22"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2907:24:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2916:5:22"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "2923:5:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2909:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2909:20:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2909:20:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2882:6:22"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2890:2:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2878:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2878:15:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2895:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2874:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2874:26:22"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2902:3:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2871:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:35:22"
															},
															"nodeType": "YulIf",
															"src": "2868:2:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "2957:7:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2966:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2953:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2953:18:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2977:6:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2985:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2973:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2973:17:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2992:2:22"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "2940:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "2940:55:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2940:55:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "3019:7:22"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3028:2:22"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3015:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3015:16:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3033:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3011:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3011:27:22"
																	},
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3040:5:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3004:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:42:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3004:42:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3055:16:22",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "3064:7:22"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3055:5:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2504:6:22",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2512:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2520:5:22",
														"type": ""
													}
												],
												"src": "2476:601:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3206:291:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3252:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3261:6:22"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3269:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3254:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3254:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3254:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3227:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3236:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3223:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3223:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3219:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3219:32:22"
															},
															"nodeType": "YulIf",
															"src": "3216:2:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3287:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3314:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3301:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3301:23:22"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3291:6:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3367:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3376:6:22"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3384:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3369:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3369:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3369:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3339:6:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3347:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3336:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3336:30:22"
															},
															"nodeType": "YulIf",
															"src": "3333:2:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3402:89:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3463:9:22"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3474:6:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3459:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3459:22:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3483:7:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_struct$_Transaction_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3412:46:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3412:79:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3402:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_Transaction_$1589_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3172:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3183:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3195:6:22",
														"type": ""
													}
												],
												"src": "3082:415:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:547:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3715:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3724:6:22"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3732:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3717:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3717:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3717:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3690:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3699:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3686:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3686:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3711:2:22",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3682:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:32:22"
															},
															"nodeType": "YulIf",
															"src": "3679:2:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3750:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3777:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3764:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3764:23:22"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3754:6:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3796:28:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3806:18:22",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3800:2:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3851:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3860:6:22"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "3868:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3853:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3853:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3853:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3839:6:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3847:2:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3836:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3836:14:22"
															},
															"nodeType": "YulIf",
															"src": "3833:2:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3886:89:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3947:9:22"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3958:6:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3943:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3943:22:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3967:7:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_array$_t_struct$_Transaction_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "3896:46:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3896:79:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3886:6:22"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3984:42:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4011:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4022:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4007:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4007:18:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3994:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "3994:32:22"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3984:6:22"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4035:48:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4068:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4079:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4064:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4064:18:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4051:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4051:32:22"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4039:8:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4112:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4121:6:22"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4129:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4114:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4114:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4114:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4098:8:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4108:2:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4095:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4095:16:22"
															},
															"nodeType": "YulIf",
															"src": "4092:2:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4147:63:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4180:9:22"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4191:8:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4176:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4176:24:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4202:7:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4157:18:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4157:53:22"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4147:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_Transaction_$1589_memory_ptr_$dyn_memory_ptrt_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3619:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3630:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3642:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3650:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3658:6:22",
														"type": ""
													}
												],
												"src": "3502:714:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4327:393:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4373:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4382:6:22"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4390:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4375:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4375:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4375:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4348:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4357:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4344:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4344:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4369:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4340:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4340:32:22"
															},
															"nodeType": "YulIf",
															"src": "4337:2:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4408:33:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4431:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4418:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4418:23:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4408:6:22"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4450:46:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4481:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4492:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4477:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4477:18:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4464:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4464:32:22"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4454:6:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "4548:6:22"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "4556:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4541:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4511:6:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4519:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4508:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4508:30:22"
															},
															"nodeType": "YulIf",
															"src": "4505:2:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4574:86:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4632:9:22"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4643:6:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4628:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4628:22:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4652:7:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4600:27:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4600:60:22"
															},
															"variables": [
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "4578:8:22",
																	"type": ""
																},
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "4588:8:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4669:18:22",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "4679:8:22"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:22"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4696:18:22",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "4706:8:22"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4696:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4277:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4288:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4300:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4308:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4316:6:22",
														"type": ""
													}
												],
												"src": "4221:499:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4794:283:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4840:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4849:6:22"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4857:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4842:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4842:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4842:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4815:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4824:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4811:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4811:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4836:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4807:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4807:32:22"
															},
															"nodeType": "YulIf",
															"src": "4804:2:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4875:36:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4901:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4888:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4888:23:22"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4879:5:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5021:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5030:6:22"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5038:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5023:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5023:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5023:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4933:5:22"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4944:5:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4951:66:22",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4940:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4940:78:22"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4930:2:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4930:89:22"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4923:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "4923:97:22"
															},
															"nodeType": "YulIf",
															"src": "4920:2:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5056:15:22",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5066:5:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5056:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4760:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4771:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4783:6:22",
														"type": ""
													}
												],
												"src": "4725:352:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5207:626:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5253:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "5262:6:22"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "5270:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5255:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5255:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5255:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5237:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5224:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5224:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5249:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5220:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:32:22"
															},
															"nodeType": "YulIf",
															"src": "5217:2:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5288:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5315:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5302:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5302:23:22"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5292:6:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5334:28:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5344:18:22",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5338:2:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5389:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "5398:6:22"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "5406:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5391:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5391:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5391:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5377:6:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5385:2:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5374:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5374:14:22"
															},
															"nodeType": "YulIf",
															"src": "5371:2:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5424:86:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5482:9:22"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5493:6:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5478:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5478:22:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5502:7:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "5450:27:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5450:60:22"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "5428:8:22",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "5438:8:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5519:18:22",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "5529:8:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5519:6:22"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5546:18:22",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "5556:8:22"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5546:6:22"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5573:48:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5606:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5617:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5602:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5602:18:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5589:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5589:32:22"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5577:8:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5650:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "5659:6:22"
																				},
																				{
																					"name": "value3",
																					"nodeType": "YulIdentifier",
																					"src": "5667:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5652:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5652:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5652:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5636:8:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5646:2:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5633:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5633:16:22"
															},
															"nodeType": "YulIf",
															"src": "5630:2:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5685:88:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5743:9:22"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5754:8:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5739:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5739:24:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5765:7:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "5711:27:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5711:62:22"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "5689:8:22",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "5699:8:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5782:18:22",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "5792:8:22"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5782:6:22"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5809:18:22",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "5819:8:22"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5809:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5149:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5160:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5172:6:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5180:6:22",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5188:6:22",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5196:6:22",
														"type": ""
													}
												],
												"src": "5082:751:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5917:263:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5963:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5972:6:22"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5980:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5965:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5965:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5965:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5938:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5947:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5934:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5934:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5959:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5930:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "5930:32:22"
															},
															"nodeType": "YulIf",
															"src": "5927:2:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5998:37:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6025:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6012:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6012:23:22"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6002:6:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6078:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6087:6:22"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6095:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6080:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6080:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6080:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6050:6:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6058:18:22",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6047:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6047:30:22"
															},
															"nodeType": "YulIf",
															"src": "6044:2:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6113:61:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6146:9:22"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6157:6:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6142:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6142:22:22"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6166:7:22"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "6123:18:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:51:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6113:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5883:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5894:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5906:6:22",
														"type": ""
													}
												],
												"src": "5838:342:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6255:120:22",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6301:26:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6310:6:22"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6318:6:22"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6303:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6303:22:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6303:22:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6276:7:22"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6285:9:22"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6272:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6272:23:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6297:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6268:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6268:32:22"
															},
															"nodeType": "YulIf",
															"src": "6265:2:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6336:33:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6359:9:22"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6346:12:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6346:23:22"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6336:6:22"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6221:9:22",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6232:7:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6244:6:22",
														"type": ""
													}
												],
												"src": "6185:190:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6459:1196:22",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6469:16:22",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6482:3:22"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nodeType": "YulTypedName",
																	"src": "6473:5:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6494:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6514:5:22"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6508:5:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6508:12:22"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6498:6:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6536:3:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6541:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6529:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6529:19:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6529:19:22"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6557:14:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6567:4:22",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6561:2:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6580:19:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6591:3:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6596:2:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6587:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6587:12:22"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6580:3:22"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6608:48:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos_1",
																				"nodeType": "YulIdentifier",
																				"src": "6628:5:22"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "6639:6:22"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "6647:2:22"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6635:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6635:15:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6624:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6624:27:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6653:2:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6620:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6620:36:22"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "6612:4:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6665:28:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:22"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6690:2:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6679:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6679:14:22"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6669:6:22",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6702:12:22",
															"value": {
																"name": "end",
																"nodeType": "YulIdentifier",
																"src": "6711:3:22"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6706:1:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6772:857:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6793:3:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail",
																									"nodeType": "YulIdentifier",
																									"src": "6806:4:22"
																								},
																								{
																									"name": "pos_1",
																									"nodeType": "YulIdentifier",
																									"src": "6812:5:22"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "6802:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6802:16:22"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6820:66:22",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6798:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6798:89:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6786:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6786:102:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6786:102:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6901:23:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6917:6:22"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "6911:5:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6911:13:22"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "6905:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6937:14:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6947:4:22",
																			"type": "",
																			"value": "0xc0"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "6941:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "6971:4:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_2",
																											"nodeType": "YulIdentifier",
																											"src": "6997:2:22"
																										}
																									],
																									"functionName": {
																										"name": "mload",
																										"nodeType": "YulIdentifier",
																										"src": "6991:5:22"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "6991:9:22"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nodeType": "YulIdentifier",
																								"src": "6984:6:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6984:17:22"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nodeType": "YulIdentifier",
																						"src": "6977:6:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6977:25:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6964:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6964:39:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6964:39:22"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "7027:4:22"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "7033:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7023:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7023:13:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "_2",
																													"nodeType": "YulIdentifier",
																													"src": "7062:2:22"
																												},
																												{
																													"name": "_1",
																													"nodeType": "YulIdentifier",
																													"src": "7066:2:22"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nodeType": "YulIdentifier",
																												"src": "7058:3:22"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "7058:11:22"
																										}
																									],
																									"functionName": {
																										"name": "mload",
																										"nodeType": "YulIdentifier",
																										"src": "7052:5:22"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7052:18:22"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nodeType": "YulIdentifier",
																								"src": "7045:6:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7045:26:22"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nodeType": "YulIdentifier",
																						"src": "7038:6:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7038:34:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7016:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7016:57:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7016:57:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7086:14:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7096:4:22",
																			"type": "",
																			"value": "0x40"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "7090:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "7124:4:22"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "7130:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7120:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7120:13:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "7145:2:22"
																								},
																								{
																									"name": "_4",
																									"nodeType": "YulIdentifier",
																									"src": "7149:2:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7141:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7141:11:22"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7135:5:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7135:18:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7113:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7113:41:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7113:41:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7167:14:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7177:4:22",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "7171:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "7205:4:22"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "7211:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7201:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7201:13:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_2",
																											"nodeType": "YulIdentifier",
																											"src": "7230:2:22"
																										},
																										{
																											"name": "_5",
																											"nodeType": "YulIdentifier",
																											"src": "7234:2:22"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "7226:3:22"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "7226:11:22"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "7220:5:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7220:18:22"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7240:42:22",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7216:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7216:67:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7194:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7194:90:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7194:90:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7297:14:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7307:4:22",
																			"type": "",
																			"value": "0x80"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "7301:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "7335:4:22"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "7341:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7331:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7331:13:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "7356:2:22"
																								},
																								{
																									"name": "_6",
																									"nodeType": "YulIdentifier",
																									"src": "7360:2:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7352:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7352:11:22"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7346:5:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7346:18:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7324:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7324:41:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7324:41:22"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7378:14:22",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7388:4:22",
																			"type": "",
																			"value": "0xa0"
																		},
																		"variables": [
																			{
																				"name": "_7",
																				"nodeType": "YulTypedName",
																				"src": "7382:2:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7405:38:22",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "7435:2:22"
																						},
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "7439:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7431:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7431:11:22"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "7425:5:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7425:18:22"
																		},
																		"variables": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulTypedName",
																				"src": "7409:12:22",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "7467:4:22"
																						},
																						{
																							"name": "_7",
																							"nodeType": "YulIdentifier",
																							"src": "7473:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7463:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7463:13:22"
																				},
																				{
																					"name": "_3",
																					"nodeType": "YulIdentifier",
																					"src": "7478:2:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7456:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7456:25:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7456:25:22"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7494:55:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "memberValue0",
																					"nodeType": "YulIdentifier",
																					"src": "7521:12:22"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "7539:4:22"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "7545:2:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7535:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7535:13:22"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_t_bytes",
																				"nodeType": "YulIdentifier",
																				"src": "7502:18:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7502:47:22"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7494:4:22"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7562:25:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7576:6:22"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7584:2:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7572:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7572:15:22"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7562:6:22"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7600:19:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7611:3:22"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7616:2:22"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7607:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7607:12:22"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7600:3:22"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6734:1:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6737:6:22"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6731:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "6731:13:22"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6745:18:22",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6747:14:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6756:1:22"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6759:1:22",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6752:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6752:9:22"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6747:1:22"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6727:3:22",
																"statements": []
															},
															"src": "6723:906:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7638:11:22",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "7645:4:22"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7638:3:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Transaction_$dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6436:5:22",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6443:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6451:3:22",
														"type": ""
													}
												],
												"src": "6380:1275:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7711:267:22",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7721:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7741:5:22"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7735:5:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7735:12:22"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7725:6:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7763:3:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7768:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7756:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7756:19:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7756:19:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7810:5:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7817:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7806:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7806:16:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7828:3:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7833:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7824:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7824:14:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7840:6:22"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7784:21:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7784:63:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7784:63:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7856:116:22",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7871:3:22"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7884:6:22"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7892:2:22",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7880:3:22"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7880:15:22"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7897:66:22",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7876:3:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7876:88:22"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7867:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7867:98:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7967:4:22",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7863:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "7863:109:22"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7856:3:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7688:5:22",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7695:3:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7703:3:22",
														"type": ""
													}
												],
												"src": "7660:318:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8120:137:22",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8130:27:22",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8150:6:22"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8144:5:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "8144:13:22"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8134:6:22",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8192:6:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8200:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8188:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8188:17:22"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8207:3:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8212:6:22"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8166:21:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "8166:53:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8166:53:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8228:23:22",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8239:3:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8244:6:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8235:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "8235:16:22"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8228:3:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8096:3:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8101:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8112:3:22",
														"type": ""
													}
												],
												"src": "7983:274:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8363:125:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8373:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8385:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8396:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8381:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "8381:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8373:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8415:9:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8430:6:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8438:42:22",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8426:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8426:55:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8408:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "8408:74:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8408:74:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8332:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8343:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8354:4:22",
														"type": ""
													}
												],
												"src": "8262:226:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8588:92:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8598:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8610:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8621:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8606:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "8606:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8598:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8640:9:22"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "8665:6:22"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8658:6:22"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8658:14:22"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8651:6:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8651:22:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8633:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "8633:41:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8633:41:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8557:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8568:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8579:4:22",
														"type": ""
													}
												],
												"src": "8493:187:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8786:76:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8796:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8808:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8819:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8804:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "8804:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8796:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8838:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8849:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8831:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "8831:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8831:25:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8755:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8766:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8777:4:22",
														"type": ""
													}
												],
												"src": "8685:177:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9014:143:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9031:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9042:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9024:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "9024:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9024:25:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9069:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9080:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9065:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9065:18:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9085:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9058:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "9058:30:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9058:30:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9097:54:22",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9124:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9136:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9147:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9132:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9132:18:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "9105:18:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "9105:46:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9097:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8975:9:22",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8986:6:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8994:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9005:4:22",
														"type": ""
													}
												],
												"src": "8867:290:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9261:149:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9271:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9283:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9294:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9279:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "9279:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9271:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9313:9:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9328:6:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9336:66:22",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9324:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9324:79:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9306:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "9306:98:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9306:98:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9230:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9241:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9252:4:22",
														"type": ""
													}
												],
												"src": "9162:248:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9589:231:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9606:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9617:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9599:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "9599:21:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9599:21:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9640:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9651:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9636:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9636:18:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9656:2:22",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9629:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "9629:30:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9629:30:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9679:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9690:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9675:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9675:18:22"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9695:34:22",
																		"type": "",
																		"value": "GuestModule#_executeGuest: NOT_E"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9668:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "9668:62:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9668:62:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9750:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9761:2:22",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9746:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9746:18:22"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9766:11:22",
																		"type": "",
																		"value": "NOUGH_GAS"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9739:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "9739:39:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9739:39:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9787:27:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9799:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9810:3:22",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9795:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "9795:19:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9787:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_17c0f37e3df9b9389b662c46bffc8f205144b2709364ee4094e1c6af42e1b789__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9566:9:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9580:4:22",
														"type": ""
													}
												],
												"src": "9415:405:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10135:254:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10152:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10163:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10145:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10145:21:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10145:21:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10186:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10197:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10182:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10182:18:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10202:1:22",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10175:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10175:29:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10175:29:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10224:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10235:2:22",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10220:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10220:18:22"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10240:8:22",
																		"type": "",
																		"value": "guest:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10213:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10213:36:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10213:36:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10269:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10280:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10265:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10265:20:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10287:3:22",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10258:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10258:33:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10258:33:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10300:83:22",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10355:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10367:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10378:3:22",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10363:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10363:19:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Transaction_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "10308:46:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10308:75:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10300:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4dfa0bed92fb5c2df0b47ce555e6e6b89f746e856aa9783c634a4987edcbf682_t_array$_t_struct$_Transaction_$1589_memory_ptr_$dyn_memory_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$1589_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10104:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10115:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10126:4:22",
														"type": ""
													}
												],
												"src": "9825:564:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10568:241:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10585:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10596:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10578:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10578:21:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10578:21:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10619:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10630:2:22",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10615:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10615:18:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10635:2:22",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10608:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10608:30:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10608:30:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10658:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10669:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10654:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10654:18:22"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10674:34:22",
																		"type": "",
																		"value": "GuestModule#_executeGuest: deleg"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10647:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10647:62:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10647:62:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10729:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10740:2:22",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10725:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10725:18:22"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10745:21:22",
																		"type": "",
																		"value": "ateCall not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10718:49:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10718:49:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10776:27:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10788:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10799:3:22",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10784:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "10784:19:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10776:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ab313ac7bac2e04082177c40e394657d50f46d8ef007a7b5f1899b89521d3452__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10545:9:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10559:4:22",
														"type": ""
													}
												],
												"src": "10394:415:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11124:253:22",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11141:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11152:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11134:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11134:21:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11134:21:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11175:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11186:2:22",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11171:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11171:18:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11191:1:22",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11164:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11164:29:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11164:29:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11213:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11224:2:22",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11209:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11209:18:22"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11229:7:22",
																		"type": "",
																		"value": "self:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11202:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11202:35:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11202:35:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11257:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11268:4:22",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11253:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11253:20:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11275:3:22",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11246:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11246:33:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11246:33:22"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11288:83:22",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11343:6:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11355:9:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11366:3:22",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11351:3:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11351:19:22"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Transaction_$dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11296:46:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11296:75:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11288:4:22"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845_t_array$_t_struct$_Transaction_$1589_memory_ptr_$dyn_memory_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$1589_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11093:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11104:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11115:4:22",
														"type": ""
													}
												],
												"src": "10814:563:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11483:76:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11493:26:22",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11505:9:22"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11516:2:22",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11501:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11501:18:22"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11493:4:22"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11535:9:22"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11546:6:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11528:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11528:25:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11528:25:22"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11452:9:22",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11463:6:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11474:4:22",
														"type": ""
													}
												],
												"src": "11382:177:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11608:198:22",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11618:19:22",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11634:2:22",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11628:5:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11628:9:22"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "11618:6:22"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11646:35:22",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "11668:6:22"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "11676:4:22"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11664:3:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11664:17:22"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "11650:10:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11756:13:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "11758:7:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11758:9:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11758:9:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "11699:10:22"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11711:18:22",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "11696:2:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11696:34:22"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "11735:10:22"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11747:6:22"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11732:2:22"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11732:22:22"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "11693:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11693:62:22"
															},
															"nodeType": "YulIf",
															"src": "11690:2:22"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11785:2:22",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "11789:10:22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11778:6:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11778:22:22"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11778:22:22"
														}
													]
												},
												"name": "allocateMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "11588:4:22",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11597:6:22",
														"type": ""
													}
												],
												"src": "11564:242:22"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11864:205:22",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11874:10:22",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11883:1:22",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11878:1:22",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11943:63:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11968:3:22"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11973:1:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11964:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11964:11:22"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11987:3:22"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11992:1:22"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11983:3:22"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11983:11:22"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11977:5:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11977:18:22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11957:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11957:39:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11957:39:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11904:1:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11907:6:22"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11901:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "11901:13:22"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11915:19:22",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11917:15:22",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11926:1:22"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11929:2:22",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11922:3:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11922:10:22"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11917:1:22"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11897:3:22",
																"statements": []
															},
															"src": "11893:113:22"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12032:31:22",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "12045:3:22"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "12050:6:22"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12041:3:22"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12041:16:22"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12059:1:22",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12034:6:22"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12034:27:22"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12034:27:22"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12021:1:22"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12024:6:22"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "12018:2:22"
																},
																"nodeType": "YulFunctionCall",
																"src": "12018:13:22"
															},
															"nodeType": "YulIf",
															"src": "12015:2:22"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "11842:3:22",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "11847:3:22",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11852:6:22",
														"type": ""
													}
												],
												"src": "11811:258:22"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_array$_t_struct$_Transaction_$dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := 0xffffffffffffffff\n        if gt(_1, _3) { invalid() }\n        let dst := allocateMemory(add(mul(_1, _2), _2))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let src := add(offset, _2)\n        let i := array\n        for { } lt(i, _1) { i := add(i, 1) }\n        {\n            let _4 := add(offset, calldataload(src))\n            let _5 := 0xc0\n            if slt(add(sub(end, _4), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), _5) { revert(array, array) }\n            let _6 := 64\n            let memPtr := mload(_6)\n            let newFreePtr := add(memPtr, _5)\n            if or(gt(newFreePtr, _3), lt(newFreePtr, memPtr)) { invalid() }\n            mstore(_6, newFreePtr)\n            mstore(memPtr, abi_decode_t_bool(add(_4, _2)))\n            mstore(add(memPtr, _2), abi_decode_t_bool(add(_4, _6)))\n            let _7 := 96\n            mstore(add(memPtr, _6), calldataload(add(_4, _7)))\n            let _8 := 128\n            mstore(add(memPtr, _7), abi_decode_t_address(add(_4, _8)))\n            let _9 := 160\n            mstore(add(memPtr, _8), calldataload(add(_4, _9)))\n            let offset_1 := calldataload(add(_4, _5))\n            if gt(offset_1, _3) { revert(array, array) }\n            mstore(add(memPtr, _9), abi_decode_t_bytes(add(add(_4, offset_1), _2), end))\n            mstore(dst, memPtr)\n            dst := add(dst, _2)\n            src := add(src, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_t_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_t_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(arrayPos, arrayPos) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(arrayPos, arrayPos) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { invalid() }\n        let array_1 := allocateMemory(add(and(add(_1, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), array)\n        array := array_1\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Transaction_$1589_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_t_array$_t_struct$_Transaction_$dyn(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Transaction_$1589_memory_ptr_$dyn_memory_ptrt_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        value0 := abi_decode_t_array$_t_struct$_Transaction_$dyn(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(value2, value2) }\n        value2 := abi_decode_t_bytes(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        let value1_1, value2_1 := abi_decode_t_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value3, value3) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value3, value3) }\n        let value0_1, value1_1 := abi_decode_t_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value3, value3) }\n        let value2_1, value3_1 := abi_decode_t_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_t_array$_t_struct$_Transaction_$dyn(value, pos) -> end\n    {\n        let pos_1 := pos\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let tail := add(add(pos_1, mul(length, _1)), _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail, pos_1), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n            let _2 := mload(srcPtr)\n            let _3 := 0xc0\n            mstore(tail, iszero(iszero(mload(_2))))\n            mstore(add(tail, _1), iszero(iszero(mload(add(_2, _1)))))\n            let _4 := 0x40\n            mstore(add(tail, _4), mload(add(_2, _4)))\n            let _5 := 0x60\n            mstore(add(tail, _5), and(mload(add(_2, _5)), 0xffffffffffffffffffffffffffffffffffffffff))\n            let _6 := 0x80\n            mstore(add(tail, _6), mload(add(_2, _6)))\n            let _7 := 0xa0\n            let memberValue0 := mload(add(_2, _7))\n            mstore(add(tail, _7), _3)\n            tail := abi_encode_t_bytes(memberValue0, add(tail, _3))\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        end := tail\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_memory_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_t_bytes(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_stringliteral_17c0f37e3df9b9389b662c46bffc8f205144b2709364ee4094e1c6af42e1b789__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"GuestModule#_executeGuest: NOT_E\")\n        mstore(add(headStart, 96), \"NOUGH_GAS\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4dfa0bed92fb5c2df0b47ce555e6e6b89f746e856aa9783c634a4987edcbf682_t_array$_t_struct$_Transaction_$1589_memory_ptr_$dyn_memory_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$1589_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 6)\n        mstore(add(headStart, 96), \"guest:\")\n        mstore(add(headStart, 0x20), 128)\n        tail := abi_encode_t_array$_t_struct$_Transaction_$dyn(value0, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_ab313ac7bac2e04082177c40e394657d50f46d8ef007a7b5f1899b89521d3452__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"GuestModule#_executeGuest: deleg\")\n        mstore(add(headStart, 96), \"ateCall not allowed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845_t_array$_t_struct$_Transaction_$1589_memory_ptr_$dyn_memory_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$1589_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 5)\n        mstore(add(headStart, 96), \"self:\")\n        mstore(add(headStart, 0x20), 128)\n        tail := abi_encode_t_array$_t_struct$_Transaction_$dyn(value0, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n}",
									"id": 22,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061007b5760003560e01c80637a9a16281161004e5780637a9a1628146101255780638c3f55631461014557806390042baf14610172578063affed0e0146101925761007b565b806301ffc9a7146100805780631626ba7e146100b657806320c13b0b146100e357806361c2926c14610103575b600080fd5b34801561008c57600080fd5b506100a061009b366004611677565b6101a7565b6040516100ad91906118be565b60405180910390f35b3480156100c257600080fd5b506100d66100d136600461162d565b6101ba565b6040516100ad91906118eb565b3480156100ef57600080fd5b506100d66100fe3660046116b7565b610233565b34801561010f57600080fd5b5061012361011e366004611590565b61028d565b005b34801561013157600080fd5b506101236101403660046115c3565b6102ce565b34801561015157600080fd5b50610165610160366004611753565b6102f6565b6040516100ad91906118c9565b610185610180366004611720565b610322565b6040516100ad919061189d565b34801561019e57600080fd5b506101656103d6565b60006101b2826103e7565b90505b919050565b60006102046101c885610444565b84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104a492505050565b1561022c57507f1626ba7e000000000000000000000000000000000000000000000000000000005b9392505050565b600061025d6101c88686604051808383808284376040519201829003909120935061044492505050565b1561028557507f20c13b0b000000000000000000000000000000000000000000000000000000005b949350505050565b60006102be826040516020016102a39190611a19565b60405160208183030381529060405280519060200120610444565b90506102ca818361069c565b5050565b60006102e4846040516020016102a39190611975565b90506102f0818561069c565b50505050565b60006101b27f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e83610817565b600033301461037c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611d806027913960400191505060405180910390fd5b81516020830134f06040805173ffffffffffffffffffffffffffffffffffffffff8316815290519192507fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c919081900360200190a1919050565b60006103e260006102f6565b905090565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f90042baf00000000000000000000000000000000000000000000000000000000141561043b575060016101b5565b6101b282610844565b604080517f19010000000000000000000000000000000000000000000000000000000000006020808301919091524660228301523060601b6042830152605680830194909452825180830390940184526076909101909152815191012090565b60008060006104b2846108a1565b909250905061ffff821660005b855183101561067957600080806104d6898761090f565b975060ff918216945016915060018314156104fe576104f58987610990565b96509050610622565b8261052a57606061050f8a88610a08565b9750905061051d8b82610ab9565b9150828501945050610622565b60028314156105d15761053d8987610990565b96509050600061054d8a88610e43565b975061ffff16905060606105628b8984610eb4565b985090506105718c8483610fa3565b6105c6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526032815260200180611c0b6032913960400191505060405180910390fd5b505092810192610622565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611b28602c913960400191505060405180910390fd5b848282604051602001808481526020018381526020018273ffffffffffffffffffffffffffffffffffffffff16815260200193505050506040516020818303038152906040528051906020012094505050506104bf565b8361ffff1681101580156106915750610691826111eb565b979650505050505050565b60005b81518110156108125760008282815181106106b657fe5b6020026020010151905060006060826000015115610709576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610700906119bc565b60405180910390fd5b82604001515a1015610747576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070090611918565b826060015173ffffffffffffffffffffffffffffffffffffffff168360800151846040015160001461077d57846040015161077f565b5a5b908560a001516040516107929190611881565b600060405180830381858888f193505050503d80600081146107d0576040519150601f19603f3d011682016040523d82523d6000602084013e6107d5565b606091505b50909250905081156107fc57856040516107ef91906118c9565b60405180910390a0610807565b6108078387836111f1565b50505060010161069f565b505050565b60408051602080820194909452808201929092528051808303820181526060909201905280519101205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f389901c7000000000000000000000000000000000000000000000000000000001415610898575060016101b5565b6101b282611241565b6020810151815160f09190911c9060029081111561090a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180611b776027913960400191505060405180910390fd5b915091565b8082016020015160f881901c9060f01c60ff166002830183811161092f57fe5b8451811115610989576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611cdb6026913960400191505060405180910390fd5b9250925092565b8082016020015160601c601482018281116109a757fe5b8351811115610a01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611b546023913960400191505060405180910390fd5b9250929050565b604080516042808252608082019092526060916000919060208201818036833701905050915082840160200180516020840152602081015160408401526022810151604284015250604283019050828111610a5f57fe5b8351811115610a01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611c7c6023913960400191505060405180910390fd5b60008151604214610b15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603a815260200180611aee603a913960400191505060405180910390fd5b600082600184510381518110610b2757fe5b602001015160f81c60f81b60f81c60ff169050600083604081518110610b4957fe5b016020015160f81c90506000610b5f85826112c9565b90506000610b6e8660206112c9565b90507f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0811115610be9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180611ab1603d913960400191505060405180910390fd5b8260ff16601b14158015610c0157508260ff16601c14155b15610c57576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180611b9e603d913960400191505060405180910390fd5b6001841415610ccb5760018784848460405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610cba573d6000803e3d6000fd5b505050602060405103519450610dcd565b6002841415610d7c5760018760405160200180807f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250601c018281526020019150506040516020818303038152906040528051906020012084848460405160008152602001604052604051808581526020018460ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610cba573d6000803e3d6000fd5b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180611c9f603c913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8516610e39576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180611bdb6030913960400191505060405180910390fd5b5050505092915050565b8082016020015160f01c60028201828111610e5a57fe5b8351811115610a01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180611d226022913960400191505060405180910390fd5b606060008267ffffffffffffffff81118015610ecf57600080fd5b506040519080825280601f01601f191660200182016040528015610efa576020820181803683370190505b509150838501602001600060205b85811015610f2157908201518482015260208101610f08565b8486016020018051939092015190850152525082820183811015610f4157fe5b8451811115610f9b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611d016021913960400191505060405180910390fd5b935093915050565b60008082600184510381518110610fb657fe5b016020015160f81c90506001811480610fcf5750600281145b15611013578373ffffffffffffffffffffffffffffffffffffffff16610ff58685610ab9565b73ffffffffffffffffffffffffffffffffffffffff161491506111e3565b60038114156111925782517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81018452604080517f1626ba7e000000000000000000000000000000000000000000000000000000008152600481018881526024820192835286516044830152865173ffffffffffffffffffffffffffffffffffffffff891693631626ba7e938b938a9390929160640190602085019080838360005b838110156110cd5781810151838201526020016110b5565b50505050905090810190601f1680156110fa5780820380516001836020036101000a031916815260200191505b50935050505060206040518083038186803b15801561111857600080fd5b505afa15801561112c573d6000803e3d6000fd5b505050506040513d602081101561114257600080fd5b50519084527fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e000000000000000000000000000000000000000000000000000000001491506111e3565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603f815260200180611c3d603f913960400191505060405180910390fd5b509392505050565b50600190565b82602001511561120357805160208201fd5b7f3dbd1590ea96dd3253a91f24e64e3a502e1225d602a5731357bc12643070ccd782826040516112349291906118d2565b60405180910390a1505050565b60007fffffffff00000000000000000000000000000000000000000000000000000000821615806112b357507fffffffff0000000000000000000000000000000000000000000000000000000082167f36e7817500000000000000000000000000000000000000000000000000000000145b156112c0575060016101b5565b6101b282611331565b60008160200183511015611328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180611d44603c913960400191505060405180910390fd5b50016020015190565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146101b557600080fd5b600082601f8301126113af578081fd5b8135602067ffffffffffffffff808311156113c657fe5b6113d38283850201611a60565b83815282810190868401865b868110156114af578135890160c0807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0838e0301121561141d57898afd5b604080518281018181108a8211171561143257fe5b825261143f848b016114bd565b815261144c8285016114bd565b8a820152606080850135838301526080925061146983860161137b565b9082015260a08481013583830152928401359289841115611488578c8dfd5b6114968f8c8688010161150d565b90820152875250505092850192908501906001016113df565b509098975050505050505050565b803580151581146101b557600080fd5b60008083601f8401126114de578182fd5b50813567ffffffffffffffff8111156114f5578182fd5b602083019150836020828501011115610a0157600080fd5b600082601f83011261151d578081fd5b813567ffffffffffffffff81111561153157fe5b61156260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611a60565b818152846020838601011115611576578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156115a1578081fd5b813567ffffffffffffffff8111156115b7578182fd5b6102858482850161139f565b6000806000606084860312156115d7578182fd5b833567ffffffffffffffff808211156115ee578384fd5b6115fa8783880161139f565b9450602086013593506040860135915080821115611616578283fd5b506116238682870161150d565b9150509250925092565b600080600060408486031215611641578283fd5b83359250602084013567ffffffffffffffff81111561165e578283fd5b61166a868287016114cd565b9497909650939450505050565b600060208284031215611688578081fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461022c578182fd5b600080600080604085870312156116cc578081fd5b843567ffffffffffffffff808211156116e3578283fd5b6116ef888389016114cd565b90965094506020870135915080821115611707578283fd5b50611714878288016114cd565b95989497509550505050565b600060208284031215611731578081fd5b813567ffffffffffffffff811115611747578182fd5b6102858482850161150d565b600060208284031215611764578081fd5b5035919050565b60008282518085526020808601955080818302840101818601855b8481101561182a578583037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00189528151805115158452848101511515858501526040808201519085015260608082015173ffffffffffffffffffffffffffffffffffffffff16908501526080808201519085015260a09081015160c09185018290529061181681860183611837565b9a86019a9450505090830190600101611786565b5090979650505050505050565b6000815180845261184f816020860160208601611a84565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60008251611893818460208701611a84565b9190910192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b901515815260200190565b90815260200190565b6000838252604060208301526102856040830184611837565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b60208082526029908201527f47756573744d6f64756c65235f6578656375746547756573743a204e4f545f4560408201527f4e4f5547485f4741530000000000000000000000000000000000000000000000606082015260800190565b600060408252600660408301527f67756573743a000000000000000000000000000000000000000000000000000060608301526080602083015261022c608083018461176b565b60208082526033908201527f47756573744d6f64756c65235f6578656375746547756573743a2064656c656760408201527f61746543616c6c206e6f7420616c6c6f77656400000000000000000000000000606082015260800190565b600060408252600560408301527f73656c663a00000000000000000000000000000000000000000000000000000060608301526080602083015261022c608083018461176b565b60405181810167ffffffffffffffff81118282101715611a7c57fe5b604052919050565b60005b83811015611a9f578181015183820152602001611a87565b838111156102f0575050600091015256fe5369676e617475726556616c696461746f72237265636f7665725369676e65723a20696e76616c6964207369676e6174757265202773272076616c75655369676e617475726556616c696461746f72237265636f7665725369676e65723a20696e76616c6964207369676e6174757265206c656e6774684d6f64756c6541757468235f7369676e617475726556616c69646174696f6e20494e56414c49445f464c41474c696242797465732372656164416464726573733a204f55545f4f465f424f554e44534c696242797465732372656164466972737455696e7431363a204f55545f4f465f424f554e44535369676e617475726556616c696461746f72237265636f7665725369676e65723a20696e76616c6964207369676e6174757265202776272076616c75655369676e617475726556616c696461746f72237265636f7665725369676e65723a20494e56414c49445f5349474e45524d6f64756c6541757468235f7369676e617475726556616c69646174696f6e3a20494e56414c49445f5349474e41545552455369676e617475726556616c696461746f7223697356616c69645369676e61747572653a20554e535550504f525445445f5349474e41545552455f545950454c696242797465732372656164427974657336363a204f55545f4f465f424f554e44535369676e617475726556616c696461746f72237265636f7665725369676e65723a20554e535550504f525445445f5349474e41545552455f545950454c69624279746573237265616455696e743855696e74383a204f55545f4f465f424f554e44534c69624279746573237265616442797465733a204f55545f4f465f424f554e44534c69624279746573237265616455696e7431363a204f55545f4f465f424f554e44534c696242797465732372656164427974657333323a20475245415445525f4f525f455155414c5f544f5f33325f4c454e4754485f52455155495245444d6f64756c6553656c6641757468236f6e6c7953656c663a204e4f545f415554484f52495a4544a2646970667358221220f5a1de0b650baa2ee828e8766bc6dbd0c74da0cc4735a143852d24f868e4b62464736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A9A1628 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x7A9A1628 EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x145 JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x192 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x80 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x20C13B0B EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x61C2926C EQ PUSH2 0x103 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA0 PUSH2 0x9B CALLDATASIZE PUSH1 0x4 PUSH2 0x1677 JUMP JUMPDEST PUSH2 0x1A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x18BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x162D JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x18EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xD6 PUSH2 0xFE CALLDATASIZE PUSH1 0x4 PUSH2 0x16B7 JUMP JUMPDEST PUSH2 0x233 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x10F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x1590 JUMP JUMPDEST PUSH2 0x28D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x123 PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x15C3 JUMP JUMPDEST PUSH2 0x2CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x160 CALLDATASIZE PUSH1 0x4 PUSH2 0x1753 JUMP JUMPDEST PUSH2 0x2F6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x18C9 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0x1720 JUMP JUMPDEST PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x189D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x165 PUSH2 0x3D6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2 DUP3 PUSH2 0x3E7 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204 PUSH2 0x1C8 DUP6 PUSH2 0x444 JUMP JUMPDEST DUP5 DUP5 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x4A4 SWAP3 POP POP POP JUMP JUMPDEST ISZERO PUSH2 0x22C JUMPI POP PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25D PUSH2 0x1C8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB SWAP1 SWAP2 KECCAK256 SWAP4 POP PUSH2 0x444 SWAP3 POP POP POP JUMP JUMPDEST ISZERO PUSH2 0x285 JUMPI POP PUSH32 0x20C13B0B00000000000000000000000000000000000000000000000000000000 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BE DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1A19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x444 JUMP JUMPDEST SWAP1 POP PUSH2 0x2CA DUP2 DUP4 PUSH2 0x69C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x1975 JUMP JUMPDEST SWAP1 POP PUSH2 0x2F0 DUP2 DUP6 PUSH2 0x69C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B2 PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0x817 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0x37C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D80 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E2 PUSH1 0x0 PUSH2 0x2F6 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x90042BAF00000000000000000000000000000000000000000000000000000000 EQ ISZERO PUSH2 0x43B JUMPI POP PUSH1 0x1 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x1B2 DUP3 PUSH2 0x844 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CHAINID PUSH1 0x22 DUP4 ADD MSTORE ADDRESS PUSH1 0x60 SHL PUSH1 0x42 DUP4 ADD MSTORE PUSH1 0x56 DUP1 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP5 ADD DUP5 MSTORE PUSH1 0x76 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4B2 DUP5 PUSH2 0x8A1 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xFFFF DUP3 AND PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP4 LT ISZERO PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 DUP1 PUSH2 0x4D6 DUP10 DUP8 PUSH2 0x90F JUMP JUMPDEST SWAP8 POP PUSH1 0xFF SWAP2 DUP3 AND SWAP5 POP AND SWAP2 POP PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x4FE JUMPI PUSH2 0x4F5 DUP10 DUP8 PUSH2 0x990 JUMP JUMPDEST SWAP7 POP SWAP1 POP PUSH2 0x622 JUMP JUMPDEST DUP3 PUSH2 0x52A JUMPI PUSH1 0x60 PUSH2 0x50F DUP11 DUP9 PUSH2 0xA08 JUMP JUMPDEST SWAP8 POP SWAP1 POP PUSH2 0x51D DUP12 DUP3 PUSH2 0xAB9 JUMP JUMPDEST SWAP2 POP DUP3 DUP6 ADD SWAP5 POP POP PUSH2 0x622 JUMP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0x5D1 JUMPI PUSH2 0x53D DUP10 DUP8 PUSH2 0x990 JUMP JUMPDEST SWAP7 POP SWAP1 POP PUSH1 0x0 PUSH2 0x54D DUP11 DUP9 PUSH2 0xE43 JUMP JUMPDEST SWAP8 POP PUSH2 0xFFFF AND SWAP1 POP PUSH1 0x60 PUSH2 0x562 DUP12 DUP10 DUP5 PUSH2 0xEB4 JUMP JUMPDEST SWAP9 POP SWAP1 POP PUSH2 0x571 DUP13 DUP5 DUP4 PUSH2 0xFA3 JUMP JUMPDEST PUSH2 0x5C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C0B PUSH1 0x32 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP SWAP3 DUP2 ADD SWAP3 PUSH2 0x622 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B28 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP5 POP POP POP POP PUSH2 0x4BF JUMP JUMPDEST DUP4 PUSH2 0xFFFF AND DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x691 JUMPI POP PUSH2 0x691 DUP3 PUSH2 0x11EB JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x812 JUMPI PUSH1 0x0 DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x6B6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x60 DUP3 PUSH1 0x0 ADD MLOAD ISZERO PUSH2 0x709 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH2 0x19BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x40 ADD MLOAD GAS LT ISZERO PUSH2 0x747 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x700 SWAP1 PUSH2 0x1918 JUMP JUMPDEST DUP3 PUSH1 0x60 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x80 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x0 EQ PUSH2 0x77D JUMPI DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x77F JUMP JUMPDEST GAS JUMPDEST SWAP1 DUP6 PUSH1 0xA0 ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x1881 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x7D0 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x7D5 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP DUP2 ISZERO PUSH2 0x7FC JUMPI DUP6 PUSH1 0x40 MLOAD PUSH2 0x7EF SWAP2 SWAP1 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG0 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x807 DUP4 DUP8 DUP4 PUSH2 0x11F1 JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x69F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x389901C700000000000000000000000000000000000000000000000000000000 EQ ISZERO PUSH2 0x898 JUMPI POP PUSH1 0x1 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x1B2 DUP3 PUSH2 0x1241 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0xF0 SWAP2 SWAP1 SWAP2 SHR SWAP1 PUSH1 0x2 SWAP1 DUP2 GT ISZERO PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B77 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST DUP1 DUP3 ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0xF0 SHR PUSH1 0xFF AND PUSH1 0x2 DUP4 ADD DUP4 DUP2 GT PUSH2 0x92F JUMPI INVALID JUMPDEST DUP5 MLOAD DUP2 GT ISZERO PUSH2 0x989 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1CDB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST DUP1 DUP3 ADD PUSH1 0x20 ADD MLOAD PUSH1 0x60 SHR PUSH1 0x14 DUP3 ADD DUP3 DUP2 GT PUSH2 0x9A7 JUMPI INVALID JUMPDEST DUP4 MLOAD DUP2 GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B54 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x42 DUP1 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP2 POP DUP3 DUP5 ADD PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x22 DUP2 ADD MLOAD PUSH1 0x42 DUP5 ADD MSTORE POP PUSH1 0x42 DUP4 ADD SWAP1 POP DUP3 DUP2 GT PUSH2 0xA5F JUMPI INVALID JUMPDEST DUP4 MLOAD DUP2 GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C7C PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x42 EQ PUSH2 0xB15 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AEE PUSH1 0x3A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1 DUP5 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0xB27 JUMPI INVALID JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x40 DUP2 MLOAD DUP2 LT PUSH2 0xB49 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x0 PUSH2 0xB5F DUP6 DUP3 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB6E DUP7 PUSH1 0x20 PUSH2 0x12C9 JUMP JUMPDEST SWAP1 POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP2 GT ISZERO PUSH2 0xBE9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1AB1 PUSH1 0x3D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0xC01 JUMPI POP DUP3 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0xC57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1B9E PUSH1 0x3D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP5 EQ ISZERO PUSH2 0xCCB JUMPI PUSH1 0x1 DUP8 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP5 POP PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x2 DUP5 EQ ISZERO PUSH2 0xD7C JUMPI PUSH1 0x1 DUP8 PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP1 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE POP PUSH1 0x1C ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C9F PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0xE39 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x30 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1BDB PUSH1 0x30 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF0 SHR PUSH1 0x2 DUP3 ADD DUP3 DUP2 GT PUSH2 0xE5A JUMPI INVALID JUMPDEST DUP4 MLOAD DUP2 GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D22 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xECF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEFA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP DUP4 DUP6 ADD PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x20 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xF21 JUMPI SWAP1 DUP3 ADD MLOAD DUP5 DUP3 ADD MSTORE PUSH1 0x20 DUP2 ADD PUSH2 0xF08 JUMP JUMPDEST DUP5 DUP7 ADD PUSH1 0x20 ADD DUP1 MLOAD SWAP4 SWAP1 SWAP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE MSTORE POP DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xF41 JUMPI INVALID JUMPDEST DUP5 MLOAD DUP2 GT ISZERO PUSH2 0xF9B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D01 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 DUP5 MLOAD SUB DUP2 MLOAD DUP2 LT PUSH2 0xFB6 JUMPI INVALID JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 POP PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0xFCF JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST ISZERO PUSH2 0x1013 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFF5 DUP7 DUP6 PUSH2 0xAB9 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x3 DUP2 EQ ISZERO PUSH2 0x1192 JUMPI DUP3 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD DUP5 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 DUP2 MSTORE PUSH1 0x24 DUP3 ADD SWAP3 DUP4 MSTORE DUP7 MLOAD PUSH1 0x44 DUP4 ADD MSTORE DUP7 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 AND SWAP4 PUSH4 0x1626BA7E SWAP4 DUP12 SWAP4 DUP11 SWAP4 SWAP1 SWAP3 SWAP2 PUSH1 0x64 ADD SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x10CD JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x10B5 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x10FA JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1118 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x112C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 DUP5 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP PUSH2 0x11E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1C3D PUSH1 0x3F SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x20 ADD MLOAD ISZERO PUSH2 0x1203 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH32 0x3DBD1590EA96DD3253A91F24E64E3A502E1225D602A5731357BC12643070CCD7 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1234 SWAP3 SWAP2 SWAP1 PUSH2 0x18D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND ISZERO DUP1 PUSH2 0x12B3 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x36E7817500000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x12C0 JUMPI POP PUSH1 0x1 PUSH2 0x1B5 JUMP JUMPDEST PUSH2 0x1B2 DUP3 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD DUP4 MLOAD LT ISZERO PUSH2 0x1328 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x3C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1D44 PUSH1 0x3C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13AF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP4 GT ISZERO PUSH2 0x13C6 JUMPI INVALID JUMPDEST PUSH2 0x13D3 DUP3 DUP4 DUP6 MUL ADD PUSH2 0x1A60 JUMP JUMPDEST DUP4 DUP2 MSTORE DUP3 DUP2 ADD SWAP1 DUP7 DUP5 ADD DUP7 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x14AF JUMPI DUP2 CALLDATALOAD DUP10 ADD PUSH1 0xC0 DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP4 DUP15 SUB ADD SLT ISZERO PUSH2 0x141D JUMPI DUP10 DUP11 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 ADD DUP2 DUP2 LT DUP11 DUP3 GT OR ISZERO PUSH2 0x1432 JUMPI INVALID JUMPDEST DUP3 MSTORE PUSH2 0x143F DUP5 DUP12 ADD PUSH2 0x14BD JUMP JUMPDEST DUP2 MSTORE PUSH2 0x144C DUP3 DUP6 ADD PUSH2 0x14BD JUMP JUMPDEST DUP11 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD CALLDATALOAD DUP4 DUP4 ADD MSTORE PUSH1 0x80 SWAP3 POP PUSH2 0x1469 DUP4 DUP7 ADD PUSH2 0x137B JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE PUSH1 0xA0 DUP5 DUP2 ADD CALLDATALOAD DUP4 DUP4 ADD MSTORE SWAP3 DUP5 ADD CALLDATALOAD SWAP3 DUP10 DUP5 GT ISZERO PUSH2 0x1488 JUMPI DUP13 DUP14 REVERT JUMPDEST PUSH2 0x1496 DUP16 DUP13 DUP7 DUP9 ADD ADD PUSH2 0x150D JUMP JUMPDEST SWAP1 DUP3 ADD MSTORE DUP8 MSTORE POP POP POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x13DF JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x14DE JUMPI DUP2 DUP3 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x14F5 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0xA01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x151D JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1531 JUMPI INVALID JUMPDEST PUSH2 0x1562 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD PUSH2 0x1A60 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1576 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15A1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15B7 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x285 DUP5 DUP3 DUP6 ADD PUSH2 0x139F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15D7 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x15EE JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x15FA DUP8 DUP4 DUP9 ADD PUSH2 0x139F JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1616 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1623 DUP7 DUP3 DUP8 ADD PUSH2 0x150D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1641 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x165E JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x166A DUP7 DUP3 DUP8 ADD PUSH2 0x14CD JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1688 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x22C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x16CC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16E3 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x16EF DUP9 DUP4 DUP10 ADD PUSH2 0x14CD JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1707 JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x1714 DUP8 DUP3 DUP9 ADD PUSH2 0x14CD JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1731 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1747 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x285 DUP5 DUP3 DUP6 ADD PUSH2 0x150D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1764 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MLOAD DUP1 DUP6 MSTORE PUSH1 0x20 DUP1 DUP7 ADD SWAP6 POP DUP1 DUP2 DUP4 MUL DUP5 ADD ADD DUP2 DUP7 ADD DUP6 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x182A JUMPI DUP6 DUP4 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 ADD DUP10 MSTORE DUP2 MLOAD DUP1 MLOAD ISZERO ISZERO DUP5 MSTORE DUP5 DUP2 ADD MLOAD ISZERO ISZERO DUP6 DUP6 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP6 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD PUSH1 0xC0 SWAP2 DUP6 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH2 0x1816 DUP2 DUP7 ADD DUP4 PUSH2 0x1837 JUMP JUMPDEST SWAP11 DUP7 ADD SWAP11 SWAP5 POP POP POP SWAP1 DUP4 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1786 JUMP JUMPDEST POP SWAP1 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x184F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1893 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A84 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x285 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1837 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x29 SWAP1 DUP3 ADD MSTORE PUSH32 0x47756573744D6F64756C65235F6578656375746547756573743A204E4F545F45 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x4E4F5547485F4741530000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH1 0x6 PUSH1 0x40 DUP4 ADD MSTORE PUSH32 0x67756573743A0000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x22C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x33 SWAP1 DUP3 ADD MSTORE PUSH32 0x47756573744D6F64756C65235F6578656375746547756573743A2064656C6567 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x61746543616C6C206E6F7420616C6C6F77656400000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 MSTORE PUSH1 0x5 PUSH1 0x40 DUP4 ADD MSTORE PUSH32 0x73656C663A000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x22C PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1A7C JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A9F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A87 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2F0 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP INVALID MSTORE8 PUSH10 0x676E617475726556616C PUSH10 0x6461746F72237265636F PUSH23 0x65725369676E65723A20696E76616C6964207369676E61 PUSH21 0x757265202773272076616C75655369676E61747572 PUSH6 0x56616C696461 PUSH21 0x6F72237265636F7665725369676E65723A20696E76 PUSH2 0x6C69 PUSH5 0x207369676E PUSH2 0x7475 PUSH19 0x65206C656E6774684D6F64756C654175746823 0x5F PUSH20 0x69676E617475726556616C69646174696F6E2049 0x4E JUMP COINBASE 0x4C 0x49 DIFFICULTY 0x5F CHAINID 0x4C COINBASE SELFBALANCE 0x4C PUSH10 0x62427974657323726561 PUSH5 0x4164647265 PUSH20 0x733A204F55545F4F465F424F554E44534C696242 PUSH26 0x7465732372656164466972737455696E7431363A204F55545F4F CHAINID 0x5F TIMESTAMP 0x4F SSTORE 0x4E DIFFICULTY MSTORE8 MSTORE8 PUSH10 0x676E617475726556616C PUSH10 0x6461746F72237265636F PUSH23 0x65725369676E65723A20696E76616C6964207369676E61 PUSH21 0x757265202776272076616C75655369676E61747572 PUSH6 0x56616C696461 PUSH21 0x6F72237265636F7665725369676E65723A20494E56 COINBASE 0x4C 0x49 DIFFICULTY 0x5F MSTORE8 0x49 SELFBALANCE 0x4E GASLIMIT MSTORE 0x4D PUSH16 0x64756C6541757468235F7369676E6174 PUSH22 0x726556616C69646174696F6E3A20494E56414C49445F MSTORE8 0x49 SELFBALANCE 0x4E COINBASE SLOAD SSTORE MSTORE GASLIMIT MSTORE8 PUSH10 0x676E617475726556616C PUSH10 0x6461746F722369735661 PUSH13 0x69645369676E61747572653A20 SSTORE 0x4E MSTORE8 SSTORE POP POP 0x4F MSTORE SLOAD GASLIMIT DIFFICULTY 0x5F MSTORE8 0x49 SELFBALANCE 0x4E COINBASE SLOAD SSTORE MSTORE GASLIMIT 0x5F SLOAD MSIZE POP GASLIMIT 0x4C PUSH10 0x62427974657323726561 PUSH5 0x4279746573 CALLDATASIZE CALLDATASIZE GASPRICE KECCAK256 0x4F SSTORE SLOAD 0x5F 0x4F CHAINID 0x5F TIMESTAMP 0x4F SSTORE 0x4E DIFFICULTY MSTORE8 MSTORE8 PUSH10 0x676E617475726556616C PUSH10 0x6461746F72237265636F PUSH23 0x65725369676E65723A20554E535550504F525445445F53 0x49 SELFBALANCE 0x4E COINBASE SLOAD SSTORE MSTORE GASLIMIT 0x5F SLOAD MSIZE POP GASLIMIT 0x4C PUSH10 0x62427974657323726561 PUSH5 0x55696E7438 SSTORE PUSH10 0x6E74383A204F55545F4F CHAINID 0x5F TIMESTAMP 0x4F SSTORE 0x4E DIFFICULTY MSTORE8 0x4C PUSH10 0x62427974657323726561 PUSH5 0x4279746573 GASPRICE KECCAK256 0x4F SSTORE SLOAD 0x5F 0x4F CHAINID 0x5F TIMESTAMP 0x4F SSTORE 0x4E DIFFICULTY MSTORE8 0x4C PUSH10 0x62427974657323726561 PUSH5 0x55696E7431 CALLDATASIZE GASPRICE KECCAK256 0x4F SSTORE SLOAD 0x5F 0x4F CHAINID 0x5F TIMESTAMP 0x4F SSTORE 0x4E DIFFICULTY MSTORE8 0x4C PUSH10 0x62427974657323726561 PUSH5 0x4279746573 CALLER ORIGIN GASPRICE KECCAK256 SELFBALANCE MSTORE GASLIMIT COINBASE SLOAD GASLIMIT MSTORE 0x5F 0x4F MSTORE 0x5F GASLIMIT MLOAD SSTORE COINBASE 0x4C 0x5F SLOAD 0x4F 0x5F CALLER ORIGIN 0x5F 0x4C GASLIMIT 0x4E SELFBALANCE SLOAD 0x48 0x5F MSTORE GASLIMIT MLOAD SSTORE 0x49 MSTORE GASLIMIT DIFFICULTY 0x4D PUSH16 0x64756C6553656C6641757468236F6E6C PUSH26 0x53656C663A204E4F545F415554484F52495A4544A26469706673 PC 0x22 SLT KECCAK256 CREATE2 LOG1 0xDE SIGNEXTEND PUSH6 0xBAA2EE828E8 PUSH23 0x6BC6DBD0C74DA0CC4735A143852D24F868E4B62464736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "893:2451:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3138:204;;;;;;;;;;-1:-1:-1;3138:204:4;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5903:268:6;;;;;;;;;;-1:-1:-1;5903:268:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4987:284::-;;;;;;;;;;-1:-1:-1;4987:284:6;;;;;:::i;:::-;;:::i;1451:245:4:-;;;;;;;;;;-1:-1:-1;1451:245:4;;;;;:::i;:::-;;:::i;:::-;;1070:273;;;;;;;;;;-1:-1:-1;1070:273:4;;;;;:::i;:::-;;:::i;1103:165:7:-;;;;;;;;;;-1:-1:-1;1103:165:7;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;455:212:8:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;826:96:7:-;;;;;;;;;;;;;:::i;3138:204:4:-;3281:4;3300:37;3324:12;3300:23;:37::i;:::-;3293:44;;3138:204;;;;:::o;5903:268:6:-;6016:6;6061:52;6082:17;6093:5;6082:10;:17::i;:::-;6101:11;;6061:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6061:20:6;;-1:-1:-1;;;6061:52:6:i;:::-;6057:110;;;-1:-1:-1;6130:30:6;6057:110;5903:268;;;;;:::o;4987:284::-;5107:6;5152:63;5173:28;5194:5;;5184:16;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5173:10:6;;-1:-1:-1;;;5173:28:6:i;5152:63::-;5148:119;;;-1:-1:-1;5232:28:6;5148:119;4987:284;;;;;;:::o;1451:245:4:-;1560:14;1577:48;1618:4;1598:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;1588:36;;;;;;1577:10;:48::i;:::-;1560:65;;1664:27;1678:6;1686:4;1664:13;:27::i;:::-;1451:245;;:::o;1070:273::-;1206:14;1223:49;1265:4;1244:26;;;;;;;;:::i;1223:49::-;1206:66;;1311:27;1325:6;1333:4;1311:13;:27::i;:::-;1070:273;;;;:::o;1103:165:7:-;1176:7;1206:56;492:66;1254:6;1206:28;:56::i;455:212:8:-;541:12;126:10:11;148:4;126:27;118:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;622:5:8::1;616:12;611:2;604:5;600:14;587:11;580:49;641:21;::::0;;::::1;::::0;::::1;::::0;;;;572:57;;-1:-1:-1;641:21:8::1;::::0;;;;;::::1;::::0;;::::1;455:212:::0;;;:::o;826:96:7:-;883:7;905:12;915:1;905:9;:12::i;:::-;898:19;;826:96;:::o;877:233:8:-;963:4;979:48;;;995:32;979:48;975:80;;;-1:-1:-1;1044:4:8;1037:11;;975:80;1068:37;1092:12;1068:23;:37::i;4053:275:6:-;4216:101;;;;;;;;;;;;4176:9;4216:101;;;;4287:4;4216:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4199:124;;;;;;4053:275::o;1681:1977::-;1799:4;1821:16;1878:14;1919:28;:10;:26;:28::i;:::-;1813:134;;-1:-1:-1;1813:134:6;-1:-1:-1;2017:18:6;;;1989:17;2152:1436;2168:10;:17;2159:6;:26;2152:1436;;;2239:12;;;2322:33;:10;2348:6;2322:25;:33::i;:::-;2293:62;-1:-1:-1;2293:62:6;;;;;-1:-1:-1;2293:62:6;;-1:-1:-1;475:1:6;2368:20;;2364:1104;;;2447:30;:10;2470:6;2447:22;:30::i;:::-;2430:47;-1:-1:-1;2430:47:6;-1:-1:-1;2364:1104:6;;;2496:22;2492:976;;2582:22;2636:30;:10;2659:6;2636:22;:30::i;:::-;2614:52;-1:-1:-1;2614:52:6;-1:-1:-1;2683:31:6;2697:5;2614:52;2683:13;:31::i;:::-;2676:38;;2791:10;2776:25;;;;2492:976;;;;530:1;2820:4;:30;2816:652;;;2902:30;:10;2925:6;2902:22;:30::i;:::-;2885:47;-1:-1:-1;2885:47:6;-1:-1:-1;2974:12:6;3013:29;:10;2885:47;3013:21;:29::i;:::-;2996:46;-1:-1:-1;2996:46:6;;;-1:-1:-1;3092:22:6;3146:34;:10;2996:46;;3146:20;:34::i;:::-;3124:56;-1:-1:-1;3124:56:6;-1:-1:-1;3198:40:6;3215:5;3222:4;3124:56;3198:16;:40::i;:::-;3190:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3355:25:6;;;;2816:652;;;3405:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2816:652;3552:9;3563:10;3575:4;3541:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3531:50;;;;;;3519:62;;2152:1436;;;;;;3616:9;3601:24;;:11;:24;;:52;;;;;3629:24;3643:9;3629:13;:24::i;:::-;3594:59;1681:1977;-1:-1:-1;;;;;;;1681:1977:6:o;1854:829:4:-;1979:9;1974:705;1998:4;:11;1994:1;:15;1974:705;;;2024:30;2057:4;2062:1;2057:7;;;;;;;;;;;;;;2024:40;;2073:12;2093:19;2130:11;:24;;;2129:25;2121:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;2239:11;:20;;;2226:9;:33;;2218:87;;;;;;;;;;;;:::i;:::-;2359:11;:18;;;:23;;2399:11;:17;;;2431:11;:20;;;2455:1;2431:25;:60;;2471:11;:20;;;2431:60;;;2459:9;2431:60;2359:158;2500:11;:16;;;2359:158;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2339:178:4;;-1:-1:-1;2339:178:4;-1:-1:-1;2550:123:4;;;;2589:7;2578:19;;;;;;:::i;:::-;;;;;;;;2550:123;;;2622:42;2635:11;2648:7;2657:6;2622:12;:42::i;:::-;-1:-1:-1;;;2011:3:4;;1974:705;;;;1854:829;;:::o;489:187:12:-;610:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;600:36;;;;;660:10;;651:21::o;5940:231:7:-;6026:4;6042:46;;;6058:30;6042:46;6038:78;;;-1:-1:-1;6105:4:7;6098:11;;6038:78;6129:37;6153:12;6129:23;:37::i;435:300:20:-;595:2;591:13;;585:20;675:11;;621:3;617:14;;;;;650:1;;670:16;;;662:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;435:300;;;:::o;1084:427::-;1270:25;;;1285:2;1270:25;1264:32;1312:3;1308:14;;;;1342:3;1338:14;1354:4;1334:25;1389:1;1378:13;;1409:16;;;1402:24;;;;1452:4;:11;1440:8;:23;;1432:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1084:427;;;;;:::o;1803:422::-;1975:25;;;1990:2;1975:25;1969:32;2021:2;2017:13;2105:2;2094:14;;2126:16;;;2119:24;;;;2169:4;:11;2157:8;:23;;2149:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1803:422;;;;;:::o;2523:509::-;2669:13;;;2679:2;2669:13;;;;;;;;;2618:14;;2638:16;;2669:13;;;;;;;;;;;-1:-1:-1;2669:13:20;2665:17;;2737:5;2731:4;2727:16;2723:2;2719:25;2776:6;2770:13;2765:2;2762:1;2758:10;2751:33;2828:2;2820:6;2816:15;2810:22;2805:2;2802:1;2798:10;2791:42;2877:2;2869:6;2865:15;2859:22;2854:2;2851:1;2847:10;2840:42;;2912:2;2905:5;2901:14;2889:26;;2944:5;2933:8;:16;2926:24;;;;2976:4;:11;2964:8;:23;;2956:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1442:2690:21;1540:14;1570:10;:17;1591:2;1570:23;1562:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1662:21;1692:10;1723:1;1703:10;:17;:21;1692:33;;;;;;;;;;;;;;;;1686:40;;1662:64;;;;1778:7;1794:10;1805:2;1794:14;;;;;;;;;;;;;;;-1:-1:-1;1815:9:21;1827:25;:10;1815:9;1827:22;:25::i;:::-;1815:37;-1:-1:-1;1858:9:21;1870:26;:10;1893:2;1870:22;:26::i;:::-;1858:38;-1:-1:-1;2900:66:21;2887:79;;2883:171;;;2976:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2883:171;3064:1;:7;;3069:2;3064:7;;:18;;;;;3075:1;:7;;3080:2;3075:7;;3064:18;3060:110;;;3092:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3060:110;928:1;3210:13;:32;3206:757;;;3261:25;3271:5;3278:1;3281;3284;3261:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3252:34;;3206:757;;;978:1;3371:13;:34;3367:596;;;3424:130;3506:5;3453:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:70;;;;;;3523:1;3534;3545;3424:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:596;3886:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3367:596;4021:22;;;4006:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4114:13;;;;1442:2690;;;;:::o;4009:371:20:-;4167:25;;;4182:2;4167:25;4161:32;4213:3;4209:14;4262:1;4251:13;;4282:16;;;4275:24;;;;4325:4;:11;4313:8;:23;;4305:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4711:840;4817:14;4833:16;4871:4;4861:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4861:15:20;;4857:19;;4932:5;4926:4;4922:16;4918:2;4914:25;4956:1;4967:2;5017:105;5031:4;5028:1;5025:11;5017:105;;;5098:14;;;5092:21;5081:9;;;5074:40;5058:2;5051:10;;5017:105;;;5179:21;;;5190:2;5179:21;5225:13;;5319:14;;;;5313:21;5302:9;;;5295:40;5372:26;-1:-1:-1;5418:16:20;;;5453:17;;;;5446:25;;;;5497:4;:11;5485:8;:23;;5477:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4711:840;;;;;;:::o;4460:1203:21:-;4582:10;4600:21;4630:10;4661:1;4641:10;:17;:21;4630:33;;;;;;;;;;;;;;;-1:-1:-1;928:1:21;4675:32;;;:70;;;978:1;4711:13;:34;4675:70;4671:988;;;4849:7;4813:43;;:32;4827:5;4834:10;4813:13;:32::i;:::-;:43;;;4805:51;;4671:988;;;1034:1;4874:13;:40;4870:789;;;5039:17;;5076:16;;;5057:36;;5140:59;;;;;;;;;;;;;;;;;;;;;;;;;;:40;;;;;;5181:5;;5045:10;;5140:59;;;;;;;;;;;;;4998:16;5140:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5140:59:21;5218:28;;;5110:89;;:26;:89;;-1:-1:-1;5216:32:21;;;5579:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4870:789;4460:1203;;;;;;:::o;2836:92:4:-;-1:-1:-1;2919:4:4;;2836:92::o;4969:264:7:-;5089:3;:17;;;5085:144;;;5160:7;5154:14;5147:4;5138:7;5134:18;5127:42;5125:46;5196:26;5205:7;5214;5196:26;;;;;;;:::i;:::-;;;;;;;;4969:264;;;:::o;6381:300:6:-;6467:4;6490:45;;;;;:103;;-1:-1:-1;6545:48:6;;;6561:32;6545:48;6490:103;6479:147;;;-1:-1:-1;6615:4:6;6608:11;;6479:147;6639:37;6663:12;6639:23;:37::i;3273:447:20:-;3372:14;3423:5;3431:2;3423:10;3411:1;:8;:22;;3396:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3679:11:20;3595:2;3679:11;3673:18;;3273:447::o;647:148:9:-;743:47;;;759:31;743:47;647:148;;;:::o;14:198:22:-;84:20;;144:42;133:54;;123:65;;113:2;;202:1;199;192:12;217:1705;;342:3;335:4;327:6;323:17;319:27;309:2;;364:5;357;350:20;309:2;404:6;391:20;430:4;453:18;490:2;486;483:10;480:2;;;496:9;480:2;527:36;559:2;554;550;546:11;542:20;527:36;:::i;:::-;597:15;;;628:12;;;;660:15;;;693:5;707:1186;721:2;718:1;715:9;707:1186;;;801:3;788:17;780:6;776:30;829:4;940:2;871:66;866:2;861:3;857:12;853:85;849:94;846:2;;;960:5;953;946:20;846:2;991;1026;1020:9;1072:2;1064:6;1060:15;1129:6;1117:10;1114:22;1109:2;1097:10;1094:18;1091:46;1088:2;;;1140:9;1088:2;1164:22;;1214:30;1232:11;;;1214:30;:::i;:::-;1206:6;1199:46;1282:30;1308:2;1304;1300:11;1282:30;:::i;:::-;1277:2;1269:6;1265:15;1258:55;1336:2;1396;1392;1388:11;1375:25;1370:2;1362:6;1358:15;1351:50;1424:3;1414:13;;1464:33;1493:2;1489;1485:11;1464:33;:::i;:::-;1447:15;;;1440:58;1521:3;1574:11;;;1561:25;1544:15;;;1537:50;1629:11;;;1616:25;;1657:16;;;1654:2;;;1690:5;1683;1676:20;1654:2;1735:51;1782:3;1777:2;1766:8;1762:2;1758:17;1754:26;1735:51;:::i;:::-;1718:15;;;1711:76;1800:19;;-1:-1:-1;;;1839:12:22;;;;1871;;;;739:1;732:9;707:1186;;;-1:-1:-1;1911:5:22;;299:1623;-1:-1:-1;;;;;;;;299:1623:22:o;1927:162::-;1994:20;;2050:13;;2043:21;2033:32;;2023:2;;2079:1;2076;2069:12;2094:377;;;2211:3;2204:4;2196:6;2192:17;2188:27;2178:2;;2236:8;2226;2219:26;2178:2;-1:-1:-1;2266:20:22;;2309:18;2298:30;;2295:2;;;2348:8;2338;2331:26;2295:2;2392:4;2384:6;2380:17;2368:29;;2444:3;2437:4;2428:6;2420;2416:19;2412:30;2409:39;2406:2;;;2461:1;2458;2451:12;2476:601;;2573:3;2566:4;2558:6;2554:17;2550:27;2540:2;;2595:5;2588;2581:20;2540:2;2635:6;2622:20;2661:18;2657:2;2654:26;2651:2;;;2683:9;2651:2;2718:113;2825:4;2756:66;2749:4;2745:2;2741:13;2737:86;2733:97;2718:113;:::i;:::-;2856:2;2847:7;2840:19;2902:3;2895:4;2890:2;2882:6;2878:15;2874:26;2871:35;2868:2;;;2923:5;2916;2909:20;2868:2;2992;2985:4;2977:6;2973:17;2966:4;2957:7;2953:18;2940:55;3015:16;;;3033:4;3011:27;3004:42;;;;3019:7;2530:547;-1:-1:-1;;2530:547:22:o;3082:415::-;;3248:2;3236:9;3227:7;3223:23;3219:32;3216:2;;;3269:6;3261;3254:22;3216:2;3314:9;3301:23;3347:18;3339:6;3336:30;3333:2;;;3384:6;3376;3369:22;3333:2;3412:79;3483:7;3474:6;3463:9;3459:22;3412:79;:::i;3502:714::-;;;;3711:2;3699:9;3690:7;3686:23;3682:32;3679:2;;;3732:6;3724;3717:22;3679:2;3777:9;3764:23;3806:18;3847:2;3839:6;3836:14;3833:2;;;3868:6;3860;3853:22;3833:2;3896:79;3967:7;3958:6;3947:9;3943:22;3896:79;:::i;:::-;3886:89;;4022:2;4011:9;4007:18;3994:32;3984:42;;4079:2;4068:9;4064:18;4051:32;4035:48;;4108:2;4098:8;4095:16;4092:2;;;4129:6;4121;4114:22;4092:2;;4157:53;4202:7;4191:8;4180:9;4176:24;4157:53;:::i;:::-;4147:63;;;3669:547;;;;;:::o;4221:499::-;;;;4369:2;4357:9;4348:7;4344:23;4340:32;4337:2;;;4390:6;4382;4375:22;4337:2;4431:9;4418:23;4408:33;;4492:2;4481:9;4477:18;4464:32;4519:18;4511:6;4508:30;4505:2;;;4556:6;4548;4541:22;4505:2;4600:60;4652:7;4643:6;4632:9;4628:22;4600:60;:::i;:::-;4327:393;;4679:8;;-1:-1:-1;4574:86:22;;-1:-1:-1;;;;4327:393:22:o;4725:352::-;;4836:2;4824:9;4815:7;4811:23;4807:32;4804:2;;;4857:6;4849;4842:22;4804:2;4901:9;4888:23;4951:66;4944:5;4940:78;4933:5;4930:89;4920:2;;5038:6;5030;5023:22;5082:751;;;;;5249:2;5237:9;5228:7;5224:23;5220:32;5217:2;;;5270:6;5262;5255:22;5217:2;5315:9;5302:23;5344:18;5385:2;5377:6;5374:14;5371:2;;;5406:6;5398;5391:22;5371:2;5450:60;5502:7;5493:6;5482:9;5478:22;5450:60;:::i;:::-;5529:8;;-1:-1:-1;5424:86:22;-1:-1:-1;5617:2:22;5602:18;;5589:32;;-1:-1:-1;5633:16:22;;;5630:2;;;5667:6;5659;5652:22;5630:2;;5711:62;5765:7;5754:8;5743:9;5739:24;5711:62;:::i;:::-;5207:626;;;;-1:-1:-1;5792:8:22;-1:-1:-1;;;;5207:626:22:o;5838:342::-;;5959:2;5947:9;5938:7;5934:23;5930:32;5927:2;;;5980:6;5972;5965:22;5927:2;6025:9;6012:23;6058:18;6050:6;6047:30;6044:2;;;6095:6;6087;6080:22;6044:2;6123:51;6166:7;6157:6;6146:9;6142:22;6123:51;:::i;6185:190::-;;6297:2;6285:9;6276:7;6272:23;6268:32;6265:2;;;6318:6;6310;6303:22;6265:2;-1:-1:-1;6346:23:22;;6255:120;-1:-1:-1;6255:120:22:o;6380:1275::-;;6482:3;6514:5;6508:12;6541:6;6536:3;6529:19;6567:4;6596:2;6591:3;6587:12;6580:19;;6653:2;6647;6639:6;6635:15;6628:5;6624:27;6620:36;6690:2;6683:5;6679:14;6711:3;6723:906;6737:6;6734:1;6731:13;6723:906;;;6802:16;;;6820:66;6798:89;6786:102;;6911:13;;6991:9;;6984:17;6977:25;6964:39;;7058:11;;;7052:18;7045:26;7038:34;7023:13;;;7016:57;7096:4;7141:11;;;7135:18;7120:13;;;7113:41;7177:4;7226:11;;;7220:18;7240:42;7216:67;7201:13;;;7194:90;7307:4;7352:11;;;7346:18;7331:13;;;7324:41;7388:4;7431:11;;;7425:18;6947:4;7463:13;;;7456:25;;;7425:18;7502:47;7535:13;;;7425:18;7502:47;:::i;:::-;7607:12;;;;7494:55;-1:-1:-1;;;7572:15:22;;;;6759:1;6752:9;6723:906;;;-1:-1:-1;7645:4:22;;6459:1196;-1:-1:-1;;;;;;;6459:1196:22:o;7660:318::-;;7741:5;7735:12;7768:6;7763:3;7756:19;7784:63;7840:6;7833:4;7828:3;7824:14;7817:4;7810:5;7806:16;7784:63;:::i;:::-;7892:2;7880:15;7897:66;7876:88;7867:98;;;;7967:4;7863:109;;7711:267;-1:-1:-1;;7711:267:22:o;7983:274::-;;8150:6;8144:13;8166:53;8212:6;8207:3;8200:4;8192:6;8188:17;8166:53;:::i;:::-;8235:16;;;;;8120:137;-1:-1:-1;;8120:137:22:o;8262:226::-;8438:42;8426:55;;;;8408:74;;8396:2;8381:18;;8363:125::o;8493:187::-;8658:14;;8651:22;8633:41;;8621:2;8606:18;;8588:92::o;8685:177::-;8831:25;;;8819:2;8804:18;;8786:76::o;8867:290::-;;9042:6;9031:9;9024:25;9085:2;9080;9069:9;9065:18;9058:30;9105:46;9147:2;9136:9;9132:18;9124:6;9105:46;:::i;9162:248::-;9336:66;9324:79;;;;9306:98;;9294:2;9279:18;;9261:149::o;9415:405::-;9617:2;9599:21;;;9656:2;9636:18;;;9629:30;9695:34;9690:2;9675:18;;9668:62;9766:11;9761:2;9746:18;;9739:39;9810:3;9795:19;;9589:231::o;9825:564::-;;10163:2;10152:9;10145:21;10202:1;10197:2;10186:9;10182:18;10175:29;10240:8;10235:2;10224:9;10220:18;10213:36;10287:3;10280:4;10269:9;10265:20;10258:33;10308:75;10378:3;10367:9;10363:19;10355:6;10308:75;:::i;10394:415::-;10596:2;10578:21;;;10635:2;10615:18;;;10608:30;10674:34;10669:2;10654:18;;10647:62;10745:21;10740:2;10725:18;;10718:49;10799:3;10784:19;;10568:241::o;10814:563::-;;11152:2;11141:9;11134:21;11191:1;11186:2;11175:9;11171:18;11164:29;11229:7;11224:2;11213:9;11209:18;11202:35;11275:3;11268:4;11257:9;11253:20;11246:33;11296:75;11366:3;11355:9;11351:19;11343:6;11296:75;:::i;11564:242::-;11634:2;11628:9;11664:17;;;11711:18;11696:34;;11732:22;;;11693:62;11690:2;;;11758:9;11690:2;11785;11778:22;11608:198;;-1:-1:-1;11608:198:22:o;11811:258::-;11883:1;11893:113;11907:6;11904:1;11901:13;11893:113;;;11983:11;;;11977:18;11964:11;;;11957:39;11929:2;11922:10;11893:113;;;12024:6;12021:1;12018:13;12015:2;;;-1:-1:-1;;12059:1:22;12041:16;;12034:27;11864:205::o"
						}
					}
				}
			},
			"contracts/modules/commons/Implementation.sol": {
				"Implementation": {
					"abi": [],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220bae35032c4ed14c6edbc34bd83e444d535c192f734c87a0220cb5775e33316db64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xE3 POP ORIGIN 0xC4 0xED EQ 0xC6 0xED 0xBC CALLVALUE 0xBD DUP4 0xE4 DIFFICULTY 0xD5 CALLDATALOAD 0xC1 SWAP3 0xF7 CALLVALUE 0xC8 PUSH27 0x220CB5775E33316DB64736F6C6343000706003300000000000000 ",
							"sourceMap": "128:739:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220bae35032c4ed14c6edbc34bd83e444d535c192f734c87a0220cb5775e33316db64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xE3 POP ORIGIN 0xC4 0xED EQ 0xC6 0xED 0xBC CALLVALUE 0xBD DUP4 0xE4 DIFFICULTY 0xD5 CALLDATALOAD 0xC1 SWAP3 0xF7 CALLVALUE 0xC8 PUSH27 0x220CB5775E33316DB64736F6C6343000706003300000000000000 ",
							"sourceMap": "128:739:5:-:0;;;;;"
						}
					}
				}
			},
			"contracts/modules/commons/ModuleAuth.sol": {
				"ModuleAuth": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					}
				}
			},
			"contracts/modules/commons/ModuleCalls.sol": {
				"ModuleCalls": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newNonce",
									"type": "uint256"
								}
							],
							"name": "NonceChange",
							"type": "event"
						},
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								}
							],
							"name": "TxExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_reason",
									"type": "bytes"
								}
							],
							"name": "TxFailed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								}
							],
							"name": "readNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								}
							],
							"name": "selfExecute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					}
				}
			},
			"contracts/modules/commons/ModuleCreator.sol": {
				"ModuleCreator": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_contract",
									"type": "address"
								}
							],
							"name": "CreatedContract",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "createContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061031d806100206000396000f3fe6080604052600436106100295760003560e01c806301ffc9a71461002e57806390042baf1461008e575b600080fd5b34801561003a57600080fd5b5061007a6004803603602081101561005157600080fd5b50357fffffffff000000000000000000000000000000000000000000000000000000001661015d565b604080519115158252519081900360200190f35b610134600480360360208110156100a457600080fd5b8101906020810181356401000000008111156100bf57600080fd5b8201836020820111156100d157600080fd5b803590602001918460018302840111640100000000831117156100f357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101c2945050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f90042baf0000000000000000000000000000000000000000000000000000000014156101b1575060016101bd565b6101ba82610276565b90505b919050565b600033301461021c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806102c16027913960400191505060405180910390fd5b81516020830134f06040805173ffffffffffffffffffffffffffffffffffffffff8316815290519192507fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c919081900360200190a1919050565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a7000000000000000000000000000000000000000000000000000000001491905056fe4d6f64756c6553656c6641757468236f6e6c7953656c663a204e4f545f415554484f52495a4544a2646970667358221220d669ed848ba5122fb5005aa2b1b3d39f39887cfbb9231db8cce6d67b4861545664736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x31D DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x8E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1C2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x90042BAF00000000000000000000000000000000000000000000000000000000 EQ ISZERO PUSH2 0x1B1 JUMPI POP PUSH1 0x1 PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x1BA DUP3 PUSH2 0x276 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0x21C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C1 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP INVALID 0x4D PUSH16 0x64756C6553656C6641757468236F6E6C PUSH26 0x53656C663A204E4F545F415554484F52495A4544A26469706673 PC 0x22 SLT KECCAK256 0xD6 PUSH10 0xED848BA5122FB5005AA2 0xB1 0xB3 0xD3 SWAP16 CODECOPY DUP9 PUSH29 0xFBB9231DB8CCE6D67B4861545664736F6C634300070600330000000000 ",
							"sourceMap": "168:944:8:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c806301ffc9a71461002e57806390042baf1461008e575b600080fd5b34801561003a57600080fd5b5061007a6004803603602081101561005157600080fd5b50357fffffffff000000000000000000000000000000000000000000000000000000001661015d565b604080519115158252519081900360200190f35b610134600480360360208110156100a457600080fd5b8101906020810181356401000000008111156100bf57600080fd5b8201836020820111156100d157600080fd5b803590602001918460018302840111640100000000831117156100f357600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506101c2945050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f90042baf0000000000000000000000000000000000000000000000000000000014156101b1575060016101bd565b6101ba82610276565b90505b919050565b600033301461021c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806102c16027913960400191505060405180910390fd5b81516020830134f06040805173ffffffffffffffffffffffffffffffffffffffff8316815290519192507fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c919081900360200190a1919050565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a7000000000000000000000000000000000000000000000000000000001491905056fe4d6f64756c6553656c6641757468236f6e6c7953656c663a204e4f545f415554484f52495a4544a2646970667358221220d669ed848ba5122fb5005aa2b1b3d39f39887cfbb9231db8cce6d67b4861545664736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x8E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x15D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 PUSH1 0x20 DUP2 ADD DUP2 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0xBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP SWAP3 SWAP6 POP PUSH2 0x1C2 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x90042BAF00000000000000000000000000000000000000000000000000000000 EQ ISZERO PUSH2 0x1B1 JUMPI POP PUSH1 0x1 PUSH2 0x1BD JUMP JUMPDEST PUSH2 0x1BA DUP3 PUSH2 0x276 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0x21C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2C1 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP INVALID 0x4D PUSH16 0x64756C6553656C6641757468236F6E6C PUSH26 0x53656C663A204E4F545F415554484F52495A4544A26469706673 PC 0x22 SLT KECCAK256 0xD6 PUSH10 0xED848BA5122FB5005AA2 0xB1 0xB3 0xD3 SWAP16 CODECOPY DUP9 PUSH29 0xFBB9231DB8CCE6D67B4861545664736F6C634300070600330000000000 ",
							"sourceMap": "168:944:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;877:233;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;877:233:8;;;;:::i;:::-;;;;;;;;;;;;;;;;;;455:212;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;455:212:8;;-1:-1:-1;455:212:8;;-1:-1:-1;;;;;455:212:8:i;:::-;;;;;;;;;;;;;;;;;;;877:233;963:4;979:48;;;995:32;979:48;975:80;;;-1:-1:-1;1044:4:8;1037:11;;975:80;1068:37;1092:12;1068:23;:37::i;:::-;1061:44;;877:233;;;;:::o;455:212::-;541:12;126:10:11;148:4;126:27;118:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;622:5:8::1;616:12;611:2;604:5;600:14;587:11;580:49;641:21;::::0;;::::1;::::0;::::1;::::0;;;;572:57;;-1:-1:-1;641:21:8::1;::::0;;;;;::::1;::::0;;::::1;455:212:::0;;;:::o;647:148:9:-;743:47;;;759:31;743:47;647:148;;;:::o"
						}
					}
				}
			},
			"contracts/modules/commons/ModuleERC165.sol": {
				"ModuleERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					}
				}
			},
			"contracts/modules/commons/ModuleHooks.sol": {
				"ModuleHooks": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "addHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "readHook",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "removeHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610b49806100206000396000f3fe6080604052600436106100745760003560e01c80634fcf3eca1161004e5780634fcf3eca1461030a578063b93ea7ad14610358578063bc197c81146103c0578063f23a6e61146105075761007b565b806301ffc9a714610156578063150b7a02146101b65780631a9b2337146102955761007b565b3661007b57005b60006100aa6000357fffffffff00000000000000000000000000000000000000000000000000000000166105b6565b905073ffffffffffffffffffffffffffffffffffffffff811615610153576000808273ffffffffffffffffffffffffffffffffffffffff166000366040518083838082843760405192019450600093509091505080830381855af49150503d8060008114610134576040519150601f19603f3d011682016040523d82523d6000602084013e610139565b606091505b50915091508161014b57805160208201fd5b805160208201f35b50005b34801561016257600080fd5b506101a26004803603602081101561017957600080fd5b50357fffffffff000000000000000000000000000000000000000000000000000000001661060c565b604080519115158252519081900360200190f35b3480156101c257600080fd5b50610260600480360360808110156101d957600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116916040820135919081019060808101606082013564010000000081111561022157600080fd5b82018360208201111561023357600080fd5b8035906020019184600183028401116401000000008311171561025557600080fd5b50909250905061074d565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b3480156102a157600080fd5b506102e1600480360360208110156102b857600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610777565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561031657600080fd5b506103566004803603602081101561032d57600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610782565b005b34801561036457600080fd5b506103566004803603604081101561037b57600080fd5b5080357fffffffff0000000000000000000000000000000000000000000000000000000016906020013573ffffffffffffffffffffffffffffffffffffffff16610860565b3480156103cc57600080fd5b50610260600480360360a08110156103e357600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561042457600080fd5b82018360208201111561043657600080fd5b8035906020019184602083028401116401000000008311171561045857600080fd5b91939092909160208101903564010000000081111561047657600080fd5b82018360208201111561048857600080fd5b803590602001918460208302840111640100000000831117156104aa57600080fd5b9193909290916020810190356401000000008111156104c857600080fd5b8201836020820111156104da57600080fd5b803590602001918460018302840111640100000000831117156104fc57600080fd5b50909250905061093d565b34801561051357600080fd5b50610260600480360360a081101561052a57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561057757600080fd5b82018360208201111561058957600080fd5b803590602001918460018302840111640100000000831117156105ab57600080fd5b50909250905061096a565b60006106047fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1207fffffffff000000000000000000000000000000000000000000000000000000008416610995565b90505b919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fec6aba5000000000000000000000000000000000000000000000000000000000148061069f57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806106eb57507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061073757507fffffffff0000000000000000000000000000000000000000000000000000000082167fc0ee0b8a00000000000000000000000000000000000000000000000000000000145b1561074457506001610607565b610604826109c2565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6000610604826105b6565b3330146107da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180610aed6027913960400191505060405180910390fd5b60006107e5826105b6565b73ffffffffffffffffffffffffffffffffffffffff161415610852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610a96602b913960400191505060405180910390fd5b61085d816000610a0c565b50565b3330146108b8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180610aed6027913960400191505060405180910390fd5b60006108c3836105b6565b73ffffffffffffffffffffffffffffffffffffffff161461092f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610ac1602c913960400191505060405180910390fd5b6109398282610a0c565b5050565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60408051602080820194909452808201929092528051808303820181526060909201905280519101205490565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b604080517fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1206020808301919091527fffffffff000000000000000000000000000000000000000000000000000000008516828401528251808303840181526060909201909252805191012073ffffffffffffffffffffffffffffffffffffffff8216905561093956fe4d6f64756c65486f6f6b732372656d6f7665486f6f6b3a20484f4f4b5f4e4f545f524547495354455245444d6f64756c65486f6f6b7323616464486f6f6b3a20484f4f4b5f414c52454144595f524547495354455245444d6f64756c6553656c6641757468236f6e6c7953656c663a204e4f545f415554484f52495a4544a264697066735822122086bf9f736a7b5726e14265de4b8812802a5c948dfe727864a9329f4b3c25abc564736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB49 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4FCF3ECA GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x4FCF3ECA EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xB93EA7AD EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x507 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x1A9B2337 EQ PUSH2 0x295 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 PUSH2 0xAA PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x5B6 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x134 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x139 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x14B JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD RETURN JUMPDEST POP STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x782 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x860 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x93D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x96A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x604 PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 AND PUSH2 0x995 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xEC6ABA5000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x69F JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x6EB JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x737 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xC0EE0B8A00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x744 JUMPI POP PUSH1 0x1 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x604 DUP3 PUSH2 0x9C2 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x604 DUP3 PUSH2 0x5B6 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAED PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7E5 DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x852 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA96 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85D DUP2 PUSH1 0x0 PUSH2 0xA0C JUMP JUMPDEST POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x8B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAED PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8C3 DUP4 PUSH2 0x5B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x92F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAC1 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x939 DUP3 DUP3 PUSH2 0xA0C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 SSTORE PUSH2 0x939 JUMP INVALID 0x4D PUSH16 0x64756C65486F6F6B732372656D6F7665 0x48 PUSH16 0x6F6B3A20484F4F4B5F4E4F545F524547 0x49 MSTORE8 SLOAD GASLIMIT MSTORE GASLIMIT DIFFICULTY 0x4D PUSH16 0x64756C65486F6F6B7323616464486F6F PUSH12 0x3A20484F4F4B5F414C524541 DIFFICULTY MSIZE 0x5F MSTORE GASLIMIT SELFBALANCE 0x49 MSTORE8 SLOAD GASLIMIT MSTORE GASLIMIT DIFFICULTY 0x4D PUSH16 0x64756C6553656C6641757468236F6E6C PUSH26 0x53656C663A204E4F545F415554484F52495A4544A26469706673 PC 0x22 SLT KECCAK256 DUP7 0xBF SWAP16 PUSH20 0x6A7B5726E14265DE4B8812802A5C948DFE727864 0xA9 ORIGIN SWAP16 0x4B EXTCODECOPY 0x25 0xAB 0xC5 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "369:4498:10:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100745760003560e01c80634fcf3eca1161004e5780634fcf3eca1461030a578063b93ea7ad14610358578063bc197c81146103c0578063f23a6e61146105075761007b565b806301ffc9a714610156578063150b7a02146101b65780631a9b2337146102955761007b565b3661007b57005b60006100aa6000357fffffffff00000000000000000000000000000000000000000000000000000000166105b6565b905073ffffffffffffffffffffffffffffffffffffffff811615610153576000808273ffffffffffffffffffffffffffffffffffffffff166000366040518083838082843760405192019450600093509091505080830381855af49150503d8060008114610134576040519150601f19603f3d011682016040523d82523d6000602084013e610139565b606091505b50915091508161014b57805160208201fd5b805160208201f35b50005b34801561016257600080fd5b506101a26004803603602081101561017957600080fd5b50357fffffffff000000000000000000000000000000000000000000000000000000001661060c565b604080519115158252519081900360200190f35b3480156101c257600080fd5b50610260600480360360808110156101d957600080fd5b73ffffffffffffffffffffffffffffffffffffffff82358116926020810135909116916040820135919081019060808101606082013564010000000081111561022157600080fd5b82018360208201111561023357600080fd5b8035906020019184600183028401116401000000008311171561025557600080fd5b50909250905061074d565b604080517fffffffff000000000000000000000000000000000000000000000000000000009092168252519081900360200190f35b3480156102a157600080fd5b506102e1600480360360208110156102b857600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610777565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b34801561031657600080fd5b506103566004803603602081101561032d57600080fd5b50357fffffffff0000000000000000000000000000000000000000000000000000000016610782565b005b34801561036457600080fd5b506103566004803603604081101561037b57600080fd5b5080357fffffffff0000000000000000000000000000000000000000000000000000000016906020013573ffffffffffffffffffffffffffffffffffffffff16610860565b3480156103cc57600080fd5b50610260600480360360a08110156103e357600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169181019060608101604082013564010000000081111561042457600080fd5b82018360208201111561043657600080fd5b8035906020019184602083028401116401000000008311171561045857600080fd5b91939092909160208101903564010000000081111561047657600080fd5b82018360208201111561048857600080fd5b803590602001918460208302840111640100000000831117156104aa57600080fd5b9193909290916020810190356401000000008111156104c857600080fd5b8201836020820111156104da57600080fd5b803590602001918460018302840111640100000000831117156104fc57600080fd5b50909250905061093d565b34801561051357600080fd5b50610260600480360360a081101561052a57600080fd5b73ffffffffffffffffffffffffffffffffffffffff823581169260208101359091169160408201359160608101359181019060a08101608082013564010000000081111561057757600080fd5b82018360208201111561058957600080fd5b803590602001918460018302840111640100000000831117156105ab57600080fd5b50909250905061096a565b60006106047fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1207fffffffff000000000000000000000000000000000000000000000000000000008416610995565b90505b919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fec6aba5000000000000000000000000000000000000000000000000000000000148061069f57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806106eb57507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061073757507fffffffff0000000000000000000000000000000000000000000000000000000082167fc0ee0b8a00000000000000000000000000000000000000000000000000000000145b1561074457506001610607565b610604826109c2565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6000610604826105b6565b3330146107da576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180610aed6027913960400191505060405180910390fd5b60006107e5826105b6565b73ffffffffffffffffffffffffffffffffffffffff161415610852576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b815260200180610a96602b913960400191505060405180910390fd5b61085d816000610a0c565b50565b3330146108b8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180610aed6027913960400191505060405180910390fd5b60006108c3836105b6565b73ffffffffffffffffffffffffffffffffffffffff161461092f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180610ac1602c913960400191505060405180910390fd5b6109398282610a0c565b5050565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60408051602080820194909452808201929092528051808303820181526060909201905280519101205490565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b604080517fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1206020808301919091527fffffffff000000000000000000000000000000000000000000000000000000008516828401528251808303840181526060909201909252805191012073ffffffffffffffffffffffffffffffffffffffff8216905561093956fe4d6f64756c65486f6f6b732372656d6f7665486f6f6b3a20484f4f4b5f4e4f545f524547495354455245444d6f64756c65486f6f6b7323616464486f6f6b3a20484f4f4b5f414c52454144595f524547495354455245444d6f64756c6553656c6641757468236f6e6c7953656c663a204e4f545f415554484f52495a4544a264697066735822122086bf9f736a7b5726e14265de4b8812802a5c948dfe727864a9329f4b3c25abc564736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4FCF3ECA GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x4FCF3ECA EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xB93EA7AD EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x507 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x1A9B2337 EQ PUSH2 0x295 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x0 PUSH2 0xAA PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x5B6 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x153 JUMPI PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD SWAP5 POP PUSH1 0x0 SWAP4 POP SWAP1 SWAP2 POP POP DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x134 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x139 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x14B JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD RETURN JUMPDEST POP STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x162 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x80 DUP2 ADD PUSH1 0x60 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x777 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x782 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x364 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x356 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x860 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x3E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x436 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x476 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x488 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x4C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x4DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x4FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x93D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x52A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 CALLDATALOAD DUP2 AND SWAP3 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP2 PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0xA0 DUP2 ADD PUSH1 0x80 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x577 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x96A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x604 PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 AND PUSH2 0x995 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xEC6ABA5000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x69F JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x6EB JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x737 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xC0EE0B8A00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x744 JUMPI POP PUSH1 0x1 PUSH2 0x607 JUMP JUMPDEST PUSH2 0x604 DUP3 PUSH2 0x9C2 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x604 DUP3 PUSH2 0x5B6 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x7DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAED PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x7E5 DUP3 PUSH2 0x5B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x852 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA96 PUSH1 0x2B SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x85D DUP2 PUSH1 0x0 PUSH2 0xA0C JUMP JUMPDEST POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x8B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAED PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x8C3 DUP4 PUSH2 0x5B6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x92F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAC1 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x939 DUP3 DUP3 PUSH2 0xA0C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND DUP3 DUP5 ADD MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 SSTORE PUSH2 0x939 JUMP INVALID 0x4D PUSH16 0x64756C65486F6F6B732372656D6F7665 0x48 PUSH16 0x6F6B3A20484F4F4B5F4E4F545F524547 0x49 MSTORE8 SLOAD GASLIMIT MSTORE GASLIMIT DIFFICULTY 0x4D PUSH16 0x64756C65486F6F6B7323616464486F6F PUSH12 0x3A20484F4F4B5F414C524541 DIFFICULTY MSIZE 0x5F MSTORE GASLIMIT SELFBALANCE 0x49 MSTORE8 SLOAD GASLIMIT MSTORE GASLIMIT DIFFICULTY 0x4D PUSH16 0x64756C6553656C6641757468236F6E6C PUSH26 0x53656C663A204E4F545F415554484F52495A4544A26469706673 PC 0x22 SLT KECCAK256 DUP7 0xBF SWAP16 PUSH20 0x6A7B5726E14265DE4B8812802A5C948DFE727864 0xA9 ORIGIN SWAP16 0x4B EXTCODECOPY 0x25 0xAB 0xC5 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "369:4498:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3823:14;3840:18;3850:7;;;;3840:9;:18::i;:::-;3823:35;-1:-1:-1;3868:20:10;;;;3864:274;;3899:12;3913:19;3936:6;:19;;3956:8;;3936:29;;;;;;;;;;;;;;-1:-1:-1;3936:29:10;;-1:-1:-1;3936:29:10;;-1:-1:-1;;3936:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3898:67;;;;4002:7;3992:2;;4056:6;4050:13;4043:4;4035:6;4031:17;4024:40;3992:2;4116:6;4110:13;4103:4;4095:6;4091:17;4084:40;3982:150;3789:353;369:4498;4444:421;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4444:421:10;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3565:159;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3565:159:10;;-1:-1:-1;3565:159:10;-1:-1:-1;3565:159:10;:::i;:::-;;;;;;;;;;;;;;;;;;;860:117;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;860:117:10;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1737:208;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1737:208:10;;;;:::i;:::-;;1262:236;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1262:236:10;;;;;;;;;;;:::i;3181:226::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3181:226:10;;-1:-1:-1;3181:226:10;-1:-1:-1;3181:226:10;:::i;2804:194::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2804:194:10;;-1:-1:-1;2804:194:10;-1:-1:-1;2804:194:10;:::i;2132:156::-;2192:7;2230:51;605:66;2230:51;;;:28;:51::i;:::-;2222:60;-1:-1:-1;2132:156:10;;;;:::o;4444:421::-;4530:4;4553:46;;;4569:30;4553:46;;:106;;-1:-1:-1;4609:50:10;;;4625:34;4609:50;4553:106;:165;;;-1:-1:-1;4669:49:10;;;4685:33;4669:49;4553:165;:224;;;-1:-1:-1;4728:49:10;;;4744:33;4728:49;4553:224;4542:268;;;-1:-1:-1;4799:4:10;4792:11;;4542:268;4823:37;4847:12;4823:23;:37::i;3565:159::-;3682:37;3565:159;;;;;;;:::o;860:117::-;929:7;951:21;961:10;951:9;:21::i;1737:208::-;126:10:11;148:4;126:27;118:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1850:1:10::1;1817:21;1827:10:::0;1817:9:::1;:21::i;:::-;:35;;;;1809:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1906:34;1917:10;1937:1;1906:10;:34::i;:::-;1737:208:::0;:::o;1262:236::-;126:10:11;148:4;126:27;118:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:1:10::1;1364:21;1374:10:::0;1364:9:::1;:21::i;:::-;:35;;;1356:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:39;1465:10;1477:15;1454:10;:39::i;:::-;1262:236:::0;;:::o;3181:226::-;3359:43;3181:226;;;;;;;;;;:::o;2804:194::-;2955:38;2804:194;;;;;;;;:::o;489:187:12:-;610:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;600:36;;;;;660:10;;651:21::o;647:148:9:-;743:47;;;759:31;743:47;647:148;;;:::o;2461:170:10:-;419:25:12;;;605:66:10;419:25:12;;;;;;;;2539:87:10;;;419:25:12;;;;;;;;;;;;;;;;;;;;409:36;;;;;2600:24:10;;;462:17:12;;2539:87:10;460:21:12:o"
						}
					}
				}
			},
			"contracts/modules/commons/ModuleSelfAuth.sol": {
				"ModuleSelfAuth": {
					"abi": [],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220f0984fadf5ac9e03d398fff3f454e36cc469835e62f8126d11433a7959a7554a64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SWAP9 0x4F 0xAD CREATE2 0xAC SWAP15 SUB 0xD3 SWAP9 SELFDESTRUCT RETURN DELEGATECALL SLOAD 0xE3 PUSH13 0xC469835E62F8126D11433A7959 0xA7 SSTORE 0x4A PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "64:147:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220f0984fadf5ac9e03d398fff3f454e36cc469835e62f8126d11433a7959a7554a64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE SWAP9 0x4F 0xAD CREATE2 0xAC SWAP15 SUB 0xD3 SWAP9 SELFDESTRUCT RETURN DELEGATECALL SLOAD 0xE3 PUSH13 0xC469835E62F8126D11433A7959 0xA7 SSTORE 0x4A PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "64:147:11:-:0;;;;;"
						}
					}
				}
			},
			"contracts/modules/commons/ModuleStorage.sol": {
				"ModuleStorage": {
					"abi": [],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094247b90b4c97b2bddb096f58531bc8febf82a04889cb36a85af209c822b36e064736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x24 PUSH28 0x90B4C97B2BDDB096F58531BC8FEBF82A04889CB36A85AF209C822B36 0xE0 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "64:614:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122094247b90b4c97b2bddb096f58531bc8febf82a04889cb36a85af209c822b36e064736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 0x24 PUSH28 0x90B4C97B2BDDB096F58531BC8FEBF82A04889CB36A85AF209C822B36 0xE0 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "64:614:12:-:0;;;;;;;;"
						}
					}
				}
			},
			"contracts/modules/commons/ModuleUpdate.sol": {
				"ModuleUpdate": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "ImplementationUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "updateImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610333806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063025b22bc1461008e575b600080fd5b61007a6004803603602081101561005157600080fd5b50357fffffffff00000000000000000000000000000000000000000000000000000000166100c3565b604080519115158252519081900360200190f35b6100c1600480360360208110156100a457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610128565b005b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f025b22bc00000000000000000000000000000000000000000000000000000000141561011757506001610123565b61012082610249565b90505b919050565b333014610180576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806102d76027913960400191505060405180910390fd5b61019f8173ffffffffffffffffffffffffffffffffffffffff16610293565b6101f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603981526020018061029e6039913960400191505060405180910390fd5b6101fd81610299565b6040805173ffffffffffffffffffffffffffffffffffffffff8316815290517f310ba5f1d2ed074b51e2eccd052a47ae9ab7c6b800d1fca3db3999d6a592ca039181900360200190a150565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b3b151590565b305556fe4d6f64756c6555706461746523757064617465496d706c656d656e746174696f6e3a20494e56414c49445f494d504c454d454e544154494f4e4d6f64756c6553656c6641757468236f6e6c7953656c663a204e4f545f415554484f52495a4544a2646970667358221220668d00a03e5c4690df8a8ac6cbc85c89c476c71a4d1fa05f2fc36558bf8d3f9264736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x333 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x25B22BC EQ PUSH2 0x8E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x128 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x25B22BC00000000000000000000000000000000000000000000000000000000 EQ ISZERO PUSH2 0x117 JUMPI POP PUSH1 0x1 PUSH2 0x123 JUMP JUMPDEST PUSH2 0x120 DUP3 PUSH2 0x249 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D7 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19F DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x293 JUMP JUMPDEST PUSH2 0x1F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29E PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FD DUP2 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x310BA5F1D2ED074B51E2ECCD052A47AE9AB7C6B800D1FCA3DB3999D6A592CA03 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST ADDRESS SSTORE JUMP INVALID 0x4D PUSH16 0x64756C65557064617465237570646174 PUSH6 0x496D706C656D PUSH6 0x6E746174696F PUSH15 0x3A20494E56414C49445F494D504C45 0x4D GASLIMIT 0x4E SLOAD COINBASE SLOAD 0x49 0x4F 0x4E 0x4D PUSH16 0x64756C6553656C6641757468236F6E6C PUSH26 0x53656C663A204E4F545F415554484F52495A4544A26469706673 PC 0x22 SLT KECCAK256 PUSH7 0x8D00A03E5C4690 0xDF DUP11 DUP11 0xC6 0xCB 0xC8 0x5C DUP10 0xC4 PUSH23 0xC71A4D1FA05F2FC36558BF8D3F9264736F6C6343000706 STOP CALLER ",
							"sourceMap": "236:1103:13:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063025b22bc1461008e575b600080fd5b61007a6004803603602081101561005157600080fd5b50357fffffffff00000000000000000000000000000000000000000000000000000000166100c3565b604080519115158252519081900360200190f35b6100c1600480360360208110156100a457600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610128565b005b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f025b22bc00000000000000000000000000000000000000000000000000000000141561011757506001610123565b61012082610249565b90505b919050565b333014610180576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806102d76027913960400191505060405180910390fd5b61019f8173ffffffffffffffffffffffffffffffffffffffff16610293565b6101f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603981526020018061029e6039913960400191505060405180910390fd5b6101fd81610299565b6040805173ffffffffffffffffffffffffffffffffffffffff8316815290517f310ba5f1d2ed074b51e2eccd052a47ae9ab7c6b800d1fca3db3999d6a592ca039181900360200190a150565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b3b151590565b305556fe4d6f64756c6555706461746523757064617465496d706c656d656e746174696f6e3a20494e56414c49445f494d504c454d454e544154494f4e4d6f64756c6553656c6641757468236f6e6c7953656c663a204e4f545f415554484f52495a4544a2646970667358221220668d00a03e5c4690df8a8ac6cbc85c89c476c71a4d1fa05f2fc36558bf8d3f9264736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x25B22BC EQ PUSH2 0x8E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x128 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x25B22BC00000000000000000000000000000000000000000000000000000000 EQ ISZERO PUSH2 0x117 JUMPI POP PUSH1 0x1 PUSH2 0x123 JUMP JUMPDEST PUSH2 0x120 DUP3 PUSH2 0x249 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x180 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2D7 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19F DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x293 JUMP JUMPDEST PUSH2 0x1F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x39 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x29E PUSH1 0x39 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1FD DUP2 PUSH2 0x299 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP2 MSTORE SWAP1 MLOAD PUSH32 0x310BA5F1D2ED074B51E2ECCD052A47AE9AB7C6B800D1FCA3DB3999D6A592CA03 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP2 SWAP1 POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST ADDRESS SSTORE JUMP INVALID 0x4D PUSH16 0x64756C65557064617465237570646174 PUSH6 0x496D706C656D PUSH6 0x6E746174696F PUSH15 0x3A20494E56414C49445F494D504C45 0x4D GASLIMIT 0x4E SLOAD COINBASE SLOAD 0x49 0x4F 0x4E 0x4D PUSH16 0x64756C6553656C6641757468236F6E6C PUSH26 0x53656C663A204E4F545F415554484F52495A4544A26469706673 PC 0x22 SLT KECCAK256 PUSH7 0x8D00A03E5C4690 0xDF DUP11 DUP11 0xC6 0xCB 0xC8 0x5C DUP10 0xC4 PUSH23 0xC71A4D1FA05F2FC36558BF8D3F9264736F6C6343000706 STOP CALLER ",
							"sourceMap": "236:1103:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1105:232;;;;;;;;;;;;;;;;-1:-1:-1;1105:232:13;;;;:::i;:::-;;;;;;;;;;;;;;;;;;614:281;;;;;;;;;;;;;;;;-1:-1:-1;614:281:13;;;;:::i;:::-;;1105:232;1191:4;1207:47;;;1223:31;1207:47;1203:79;;;-1:-1:-1;1271:4:13;1264:11;;1203:79;1295:37;1319:12;1295:23;:37::i;:::-;1288:44;;1105:232;;;;:::o;614:281::-;126:10:11;148:4;126:27;118:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;710:28:13::1;:15;:26;;;:28::i;:::-;702:98;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;806:35;825:15;806:18;:35::i;:::-;852:38;::::0;;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;::::1;614:281:::0;:::o;647:148:9:-;743:47;;;759:31;743:47;647:148;;;:::o;373:212:19:-;536:20;570:10;;;373:212::o;504:107:5:-;585:9;578:23;570:37::o"
						}
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleAuth.sol": {
				"IModuleAuth": {
					"abi": [],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleCalls.sol": {
				"IModuleCalls": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newNonce",
									"type": "uint256"
								}
							],
							"name": "NonceChange",
							"type": "event"
						},
						{
							"anonymous": true,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								}
							],
							"name": "TxExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_reason",
									"type": "bytes"
								}
							],
							"name": "TxFailed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								}
							],
							"name": "readNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								}
							],
							"name": "selfExecute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleCreator.sol": {
				"IModuleCreator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "createContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleHooks.sol": {
				"IModuleHooks": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "addHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "readHook",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "removeHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleUpdate.sol": {
				"IModuleUpdate": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "updateImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					}
				}
			},
			"contracts/utils/LibAddress.sol": {
				"LibAddress": {
					"abi": [],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a95e8c7366103cb14200c1d797e311e6de9cdc284df796f16a2375fcee5215764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A SWAP6 0xE8 0xC7 CALLDATASIZE PUSH2 0x3CB EQ KECCAK256 0xC SAR PUSH26 0x7E311E6DE9CDC284DF796F16A2375FCEE5215764736F6C634300 SMOD MOD STOP CALLER ",
							"sourceMap": "64:523:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202a95e8c7366103cb14200c1d797e311e6de9cdc284df796f16a2375fcee5215764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A SWAP6 0xE8 0xC7 CALLDATASIZE PUSH2 0x3CB EQ KECCAK256 0xC SAR PUSH26 0x7E311E6DE9CDC284DF796F16A2375FCEE5215764736F6C634300 SMOD MOD STOP CALLER ",
							"sourceMap": "64:523:19:-:0;;;;;;;;"
						}
					}
				}
			},
			"contracts/utils/LibBytes.sol": {
				"LibBytes": {
					"abi": [],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220820a315b2e2d815ea66570fe28915249047e6787e8dd3ce1436d2900c2018a5964736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 EXP BALANCE JUMPDEST 0x2E 0x2D DUP2 0x5E 0xA6 PUSH6 0x70FE28915249 DIV PUSH31 0x6787E8DD3CE1436D2900C2018A5964736F6C63430007060033000000000000 ",
							"sourceMap": "63:5490:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220820a315b2e2d815ea66570fe28915249047e6787e8dd3ce1436d2900c2018a5964736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 EXP BALANCE JUMPDEST 0x2E 0x2D DUP2 0x5E 0xA6 PUSH6 0x70FE28915249 DIV PUSH31 0x6787E8DD3CE1436D2900C2018A5964736F6C63430007060033000000000000 ",
							"sourceMap": "63:5490:20:-:0;;;;;;;;"
						}
					}
				}
			},
			"contracts/utils/SignatureValidator.sol": {
				"SignatureValidator": {
					"abi": [],
					"evm": {
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212208d54edf10c68fba231fbb8dddf675fdae19b4581c53958e8b4fd5d9387f0d16164736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 SLOAD 0xED CALL 0xC PUSH9 0xFBA231FBB8DDDF675F 0xDA 0xE1 SWAP12 GASLIMIT DUP2 0xC5 CODECOPY PC 0xE8 0xB4 REVERT 0x5D SWAP4 DUP8 CREATE 0xD1 PUSH2 0x6473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "429:5236:21:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212208d54edf10c68fba231fbb8dddf675fdae19b4581c53958e8b4fd5d9387f0d16164736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP14 SLOAD 0xED CALL 0xC PUSH9 0xFBA231FBB8DDDF675F 0xDA 0xE1 SWAP12 GASLIMIT DUP2 0xC5 CODECOPY PC 0xE8 0xB4 REVERT 0x5D SWAP4 DUP8 CREATE 0xD1 PUSH2 0x6473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "429:5236:21:-:0;;;;;"
						}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "contracts/modules/commons/ModuleAuth.sol:144:37: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  ) external override view returns (bytes4) {\n                                    ^----^\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 5113,
					"file": "contracts/modules/commons/ModuleAuth.sol",
					"start": 5107
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "6321",
				"formattedMessage": "contracts/modules/commons/ModuleAuth.sol:163:37: Warning: Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.\n  ) external override view returns (bytes4) {\n                                    ^----^\n",
				"message": "Unnamed return variable can remain unassigned. Add an explicit return with value to all non-reverting code paths or name the variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 6022,
					"file": "contracts/modules/commons/ModuleAuth.sol",
					"start": 6016
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "contracts/modules/commons/ModuleHooks.sol:72:3: Warning: Function state mutability can be restricted to pure\n  function onERC1155Received(\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2998,
					"file": "contracts/modules/commons/ModuleHooks.sol",
					"start": 2804
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "contracts/modules/commons/ModuleHooks.sol:86:3: Warning: Function state mutability can be restricted to pure\n  function onERC1155BatchReceived(\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 3407,
					"file": "contracts/modules/commons/ModuleHooks.sol",
					"start": 3181
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "contracts/modules/commons/ModuleHooks.sol:100:3: Warning: Function state mutability can be restricted to pure\n  function onERC721Received(address, address, uint256, bytes calldata) external override returns (bytes4) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 3724,
					"file": "contracts/modules/commons/ModuleHooks.sol",
					"start": 3565
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "contracts/modules/GuestModule.sol:100:3: Warning: Function state mutability can be restricted to pure\n  function _isValidImage(bytes32) internal override view returns (bool) {\n  ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 2928,
					"file": "contracts/modules/GuestModule.sol",
					"start": 2836
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/interfaces/IERC1271Wallet.sol": {
				"id": 0
			},
			"contracts/interfaces/receivers/IERC1155Receiver.sol": {
				"id": 1
			},
			"contracts/interfaces/receivers/IERC223Receiver.sol": {
				"id": 2
			},
			"contracts/interfaces/receivers/IERC721Receiver.sol": {
				"id": 3
			},
			"contracts/modules/GuestModule.sol": {
				"id": 4
			},
			"contracts/modules/commons/Implementation.sol": {
				"id": 5
			},
			"contracts/modules/commons/ModuleAuth.sol": {
				"id": 6
			},
			"contracts/modules/commons/ModuleCalls.sol": {
				"id": 7
			},
			"contracts/modules/commons/ModuleCreator.sol": {
				"id": 8
			},
			"contracts/modules/commons/ModuleERC165.sol": {
				"id": 9
			},
			"contracts/modules/commons/ModuleHooks.sol": {
				"id": 10
			},
			"contracts/modules/commons/ModuleSelfAuth.sol": {
				"id": 11
			},
			"contracts/modules/commons/ModuleStorage.sol": {
				"id": 12
			},
			"contracts/modules/commons/ModuleUpdate.sol": {
				"id": 13
			},
			"contracts/modules/commons/interfaces/IModuleAuth.sol": {
				"id": 14
			},
			"contracts/modules/commons/interfaces/IModuleCalls.sol": {
				"id": 15
			},
			"contracts/modules/commons/interfaces/IModuleCreator.sol": {
				"id": 16
			},
			"contracts/modules/commons/interfaces/IModuleHooks.sol": {
				"id": 17
			},
			"contracts/modules/commons/interfaces/IModuleUpdate.sol": {
				"id": 18
			},
			"contracts/utils/LibAddress.sol": {
				"id": 19
			},
			"contracts/utils/LibBytes.sol": {
				"id": 20
			},
			"contracts/utils/SignatureValidator.sol": {
				"id": 21
			}
		}
	}
}