{
	"id": "3e0e26580fe2685d24d1f0ffd9cc440f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"settings": {
			"evmVersion": "paris",
			"libraries": {},
			"metadata": {
				"bytecodeHash": "ipfs"
			},
			"optimizer": {
				"enabled": true,
				"runs": 20000
			},
			"remappings": [
				"0xsequence/=lib/0xsequence/",
				"@0xsequence/contracts-library/=src/",
				"@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/",
				"@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/",
				"@openzeppelin/=lib/openzeppelin/",
				"chiru-labs/=lib/chiru-labs/",
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/",
				"erc721a/=lib/chiru-labs/erc721a/",
				"forge-std/=lib/forge-std/src/",
				"murky/=lib/murky/src/",
				"openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
				"openzeppelin/=lib/openzeppelin/",
				"solady/=lib/solady/src/"
			],
			"viaIR": true,
			"outputSelection": {
				"*": {
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"devdoc",
						"userdoc",
						"metadata",
						"abi"
					]
				}
			}
		},
		"sources": {
			"src/payments/PaymentsFactory.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {Payments} from \"@0xsequence/contracts-library/payments/Payments.sol\";\nimport {\n    IPaymentsFactory, IPaymentsFactoryFunctions\n} from \"@0xsequence/contracts-library/payments/IPaymentsFactory.sol\";\nimport {SequenceProxyFactory} from \"@0xsequence/contracts-library/proxies/SequenceProxyFactory.sol\";\n\n/**\n * Deployer of Payments proxies.\n */\ncontract PaymentsFactory is IPaymentsFactory, SequenceProxyFactory {\n    /**\n     * Creates an Payments Factory.\n     * @param factoryOwner The owner of the Payments Factory\n     */\n    constructor(address factoryOwner) {\n        Payments impl = new Payments();\n        SequenceProxyFactory._initialize(address(impl), factoryOwner);\n    }\n\n    /// @inheritdoc IPaymentsFactoryFunctions\n    function deploy(address proxyOwner, address paymentsOwner, address paymentsSigner)\n        external\n        returns (address proxyAddr)\n    {\n        bytes32 salt = keccak256(abi.encode(paymentsOwner, paymentsSigner));\n        proxyAddr = _createProxy(salt, proxyOwner, \"\");\n        Payments(proxyAddr).initialize(paymentsOwner, paymentsSigner);\n        emit PaymentsDeployed(proxyAddr);\n        return proxyAddr;\n    }\n\n    /// @inheritdoc IPaymentsFactoryFunctions\n    function determineAddress(address proxyOwner, address paymentsOwner, address paymentsSigner)\n        external\n        view\n        returns (address proxyAddr)\n    {\n        bytes32 salt = keccak256(abi.encode(paymentsOwner, paymentsSigner));\n        return _computeProxyAddress(salt, proxyOwner, \"\");\n    }\n}\n"
			},
			"src/proxies/SequenceProxyFactory.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {\n    TransparentUpgradeableBeaconProxy,\n    ITransparentUpgradeableBeaconProxy\n} from \"./TransparentUpgradeableBeaconProxy.sol\";\n\nimport {Create2} from \"@openzeppelin/contracts/utils/Create2.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {UpgradeableBeacon} from \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\n\n/**\n * An proxy factory that deploys upgradeable beacon proxies.\n * @dev The factory owner is able to upgrade the beacon implementation.\n * @dev Proxy deployers are able to override the beacon reference with their own.\n */\nabstract contract SequenceProxyFactory is Ownable {\n    UpgradeableBeacon public beacon;\n\n    /**\n     * Initialize a Sequence Proxy Factory.\n     * @param implementation The initial beacon implementation.\n     * @param factoryOwner The owner of the factory.\n     */\n    function _initialize(address implementation, address factoryOwner) internal {\n        beacon = new UpgradeableBeacon(implementation);\n        Ownable._transferOwnership(factoryOwner);\n    }\n\n    /**\n     * Deploys and initializes a new proxy instance.\n     * @param _salt The deployment salt.\n     * @param _proxyOwner The owner of the proxy.\n     * @param _data The initialization data.\n     * @return proxyAddress The address of the deployed proxy.\n     */\n    function _createProxy(bytes32 _salt, address _proxyOwner, bytes memory _data)\n        internal\n        returns (address proxyAddress)\n    {\n        bytes32 saltedHash = keccak256(abi.encodePacked(_salt, _proxyOwner, address(beacon), _data));\n        bytes memory bytecode = type(TransparentUpgradeableBeaconProxy).creationCode;\n\n        proxyAddress = Create2.deploy(0, saltedHash, bytecode);\n        ITransparentUpgradeableBeaconProxy(payable(proxyAddress)).initialize(_proxyOwner, address(beacon), _data);\n    }\n\n    /**\n     * Computes the address of a proxy instance.\n     * @param _salt The deployment salt.\n     * @param _proxyOwner The owner of the proxy.\n     * @return proxy The expected address of the deployed proxy.\n     */\n    function _computeProxyAddress(bytes32 _salt, address _proxyOwner, bytes memory _data)\n        internal\n        view\n        returns (address)\n    {\n        bytes32 saltedHash = keccak256(abi.encodePacked(_salt, _proxyOwner, address(beacon), _data));\n        bytes32 bytecodeHash = keccak256(type(TransparentUpgradeableBeaconProxy).creationCode);\n\n        return Create2.computeAddress(saltedHash, bytecodeHash);\n    }\n\n    /**\n     * Upgrades the beacon implementation.\n     * @param implementation The new beacon implementation.\n     */\n    function upgradeBeacon(address implementation) public onlyOwner {\n        beacon.upgradeTo(implementation);\n    }\n}\n"
			},
			"src/payments/IPaymentsFactory.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\ninterface IPaymentsFactoryFunctions {\n    /**\n     * Creates a Payments proxy contract\n     * @param proxyOwner The owner of the Payments proxy\n     * @param paymentsOwner The owner of the Payments implementation\n     * @param paymentsSigner The signer of the Payments implementation\n     * @return proxyAddr The address of the Payments proxy\n     */\n    function deploy(address proxyOwner, address paymentsOwner, address paymentsSigner)\n        external\n        returns (address proxyAddr);\n\n    /**\n     * Computes the address of a proxy instance.\n     * @param proxyOwner The owner of the Payments proxy\n     * @param paymentsOwner The owner of the Payments implementation\n     * @param paymentsSigner The signer of the Payments implementation\n     * @return proxyAddr The address of the Payments proxy\n     */\n    function determineAddress(address proxyOwner, address paymentsOwner, address paymentsSigner)\n        external\n        returns (address proxyAddr);\n}\n\ninterface IPaymentsFactorySignals {\n    /**\n     * Event emitted when a new Payments proxy contract is deployed.\n     * @param proxyAddr The address of the deployed proxy.\n     */\n    event PaymentsDeployed(address proxyAddr);\n}\n\ninterface IPaymentsFactory is IPaymentsFactoryFunctions, IPaymentsFactorySignals {}\n"
			},
			"src/payments/Payments.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {IPayments, IPaymentsFunctions} from \"./IPayments.sol\";\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {IERC165} from \"@0xsequence/erc-1155/contracts/interfaces/IERC165.sol\";\n\nimport {SignatureValidator} from \"../utils/SignatureValidator.sol\";\nimport {IERC721Transfer} from \"../tokens/common/IERC721Transfer.sol\";\nimport {IERC1155} from \"@0xsequence/erc-1155/contracts/interfaces/IERC1155.sol\";\nimport {SafeTransferLib} from \"solady/utils/SafeTransferLib.sol\";\n\ncontract Payments is Ownable, IPayments, IERC165 {\n    using SignatureValidator for bytes32;\n\n    bool private _initialized;\n\n    address public signer;\n\n    // Payment accepted. Works as a nonce.\n    mapping(uint256 => bool) public paymentAccepted;\n\n    /**\n     * Initialize the contract.\n     * @param _owner Owner address\n     * @param _signer Signer address\n     * @dev This should be called immediately after deployment.\n     */\n    function initialize(address _owner, address _signer) public virtual {\n        if (_initialized) {\n            revert InvalidInitialization();\n        }\n\n        Ownable._transferOwnership(_owner);\n        signer = _signer;\n\n        _initialized = true;\n    }\n\n    /**\n     * Update the signer address.\n     */\n    function updateSigner(address newSigner) external onlyOwner {\n        signer = newSigner;\n    }\n\n    /// @inheritdoc IPaymentsFunctions\n    function makePayment(PaymentDetails calldata paymentDetails, bytes calldata signature) external payable {\n        // Check if payment is already accepted\n        if (paymentAccepted[paymentDetails.purchaseId]) {\n            revert PaymentAlreadyAccepted();\n        }\n        if (!isValidPaymentSignature(paymentDetails, signature)) {\n            revert InvalidSignature();\n        }\n        if (block.timestamp > paymentDetails.expiration) {\n            revert PaymentExpired();\n        }\n        paymentAccepted[paymentDetails.purchaseId] = true;\n\n        address spender = msg.sender;\n\n        for (uint256 i = 0; i < paymentDetails.paymentRecipients.length; i++) {\n            // We don't check length == 0. Will only be signed if length 0 is a valid input.\n            PaymentRecipient calldata recipient = paymentDetails.paymentRecipients[i];\n            _takePayment(\n                paymentDetails.tokenType,\n                paymentDetails.tokenAddress,\n                spender,\n                recipient.recipient,\n                paymentDetails.tokenId,\n                recipient.amount\n            );\n        }\n\n        // Emit event\n        emit PaymentMade(spender, paymentDetails.productRecipient, paymentDetails.purchaseId, paymentDetails.productId);\n\n        // Perform chained call\n        if (paymentDetails.chainedCallDetails.chainedCallAddress != address(0)) {\n            _performChainedCall(paymentDetails.chainedCallDetails);\n        }\n    }\n\n    /// @inheritdoc IPaymentsFunctions\n    /// @notice A valid signature does not guarantee that the payment will be accepted.\n    function isValidPaymentSignature(PaymentDetails calldata paymentDetails, bytes calldata signature)\n        public\n        view\n        returns (bool)\n    {\n        bytes32 messageHash = hashPaymentDetails(paymentDetails);\n        address sigSigner = messageHash.recoverSigner(signature);\n        return sigSigner == signer;\n    }\n\n    /// @inheritdoc IPaymentsFunctions\n    /// @dev This hash includes the chain ID.\n    function hashPaymentDetails(PaymentDetails calldata paymentDetails) public view returns (bytes32) {\n        return keccak256(\n            abi.encode(\n                block.chainid,\n                paymentDetails.purchaseId,\n                paymentDetails.productRecipient,\n                paymentDetails.tokenType,\n                paymentDetails.tokenAddress,\n                paymentDetails.tokenId,\n                paymentDetails.paymentRecipients,\n                paymentDetails.expiration,\n                paymentDetails.productId,\n                paymentDetails.chainedCallDetails\n            )\n        );\n    }\n\n    /// @inheritdoc IPaymentsFunctions\n    /// @dev As the signer can validate any payment (including zero) this function does not increase the security surface.\n    function performChainedCall(ChainedCallDetails calldata chainedCallDetails, bytes calldata signature)\n        external\n        override\n    {\n        if (!isValidChainedCallSignature(chainedCallDetails, signature)) {\n            revert InvalidSignature();\n        }\n        _performChainedCall(chainedCallDetails);\n    }\n\n    /// @inheritdoc IPaymentsFunctions\n    function isValidChainedCallSignature(ChainedCallDetails calldata chainedCallDetails, bytes calldata signature)\n        public\n        view\n        returns (bool)\n    {\n        bytes32 messageHash = hashChainedCallDetails(chainedCallDetails);\n        address sigSigner = messageHash.recoverSigner(signature);\n        return sigSigner == signer;\n    }\n\n    /// @inheritdoc IPaymentsFunctions\n    /// @dev This hash includes the chain ID.\n    function hashChainedCallDetails(ChainedCallDetails calldata chainedCallDetails) public view returns (bytes32) {\n        return keccak256(\n            abi.encode(block.chainid, chainedCallDetails.chainedCallAddress, chainedCallDetails.chainedCallData)\n        );\n    }\n\n    /**\n     * Perform a chained call and revert on error.\n     */\n    function _performChainedCall(ChainedCallDetails calldata chainedCallDetails) internal {\n        (bool success,) = chainedCallDetails.chainedCallAddress.call{value: 0}(chainedCallDetails.chainedCallData);\n        if (!success) {\n            revert ChainedCallFailed();\n        }\n    }\n\n    /**\n     * Take payment in the given token.\n     */\n    function _takePayment(\n        TokenType tokenType,\n        address tokenAddr,\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 amount\n    ) internal {\n        if (tokenType == TokenType.ERC1155) {\n            // ERC-1155\n            IERC1155(tokenAddr).safeTransferFrom(from, to, tokenId, amount, \"\");\n        } else if (tokenType == TokenType.ERC721) {\n            // ERC-721\n            if (amount > 1) {\n                revert InvalidTokenTransfer();\n            }\n            IERC721Transfer(tokenAddr).safeTransferFrom(from, to, tokenId);\n        } else if (tokenType == TokenType.ERC20) {\n            // ERC-20\n            if (tokenId != 0) {\n                revert InvalidTokenTransfer();\n            }\n            SafeTransferLib.safeTransferFrom(tokenAddr, from, to, amount);\n        } else {\n            revert InvalidTokenTransfer();\n        }\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 _interfaceID) public view virtual returns (bool) {\n        return _interfaceID == type(IPayments).interfaceId || _interfaceID == type(IPaymentsFunctions).interfaceId\n            || _interfaceID == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/UpgradeableBeacon.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IBeacon.sol\";\r\nimport \"../../access/Ownable.sol\";\r\nimport \"../../utils/Address.sol\";\r\n\r\n/**\r\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\r\n * implementation contract, which is where they will delegate all function calls.\r\n *\r\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\r\n */\r\ncontract UpgradeableBeacon is IBeacon, Ownable {\r\n    address private _implementation;\r\n\r\n    /**\r\n     * @dev Emitted when the implementation returned by the beacon is changed.\r\n     */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\r\n     * beacon.\r\n     */\r\n    constructor(address implementation_) {\r\n        _setImplementation(implementation_);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function implementation() public view virtual override returns (address) {\r\n        return _implementation;\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrades the beacon to a new implementation.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - msg.sender must be the owner of the contract.\r\n     * - `newImplementation` must be a contract.\r\n     */\r\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the implementation contract address for this beacon\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `newImplementation` must be a contract.\r\n     */\r\n    function _setImplementation(address newImplementation) private {\r\n        require(Address.isContract(newImplementation), \"UpgradeableBeacon: implementation is not a contract\");\r\n        _implementation = newImplementation;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/utils/Create2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\r\n * `CREATE2` can be used to compute in advance the address where a smart\r\n * contract will be deployed, which allows for interesting new mechanisms known\r\n * as 'counterfactual interactions'.\r\n *\r\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\r\n * information.\r\n */\r\nlibrary Create2 {\r\n    /**\r\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\r\n     * will be deployed can be known in advance via {computeAddress}.\r\n     *\r\n     * The bytecode for a contract can be obtained from Solidity with\r\n     * `type(contractName).creationCode`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `bytecode` must not be empty.\r\n     * - `salt` must have not been used for `bytecode` already.\r\n     * - the factory must have a balance of at least `amount`.\r\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\r\n     */\r\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\r\n        require(address(this).balance >= amount, \"Create2: insufficient balance\");\r\n        require(bytecode.length != 0, \"Create2: bytecode length is zero\");\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\r\n        }\r\n        require(addr != address(0), \"Create2: Failed on deploy\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\r\n     * `bytecodeHash` or `salt` will result in a new destination address.\r\n     */\r\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\r\n        return computeAddress(salt, bytecodeHash, address(this));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\r\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\r\n     */\r\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            let ptr := mload(0x40) // Get free memory pointer\r\n\r\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\r\n            // |-------------------|---------------------------------------------------------------------------|\r\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\r\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\r\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\r\n            // | 0xFF              |            FF                                                             |\r\n            // |-------------------|---------------------------------------------------------------------------|\r\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\r\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\r\n\r\n            mstore(add(ptr, 0x40), bytecodeHash)\r\n            mstore(add(ptr, 0x20), salt)\r\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\r\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\r\n            mstore8(start, 0xff)\r\n            addr := keccak256(start, 85)\r\n        }\r\n    }\r\n}\r\n"
			},
			"src/proxies/TransparentUpgradeableBeaconProxy.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {BeaconProxy, Proxy} from \"./openzeppelin/BeaconProxy.sol\";\nimport {TransparentUpgradeableProxy, ERC1967Proxy} from \"./openzeppelin/TransparentUpgradeableProxy.sol\";\n\ninterface ITransparentUpgradeableBeaconProxy {\n    function initialize(address admin, address beacon, bytes memory data) external;\n}\n\nerror InvalidInitialization();\n\n/**\n * @dev As the underlying proxy implementation (TransparentUpgradeableProxy) allows the admin to call the implementation,\n * care must be taken to avoid proxy selector collisions. Implementation selectors must not conflict with the proxy selectors.\n * See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing].\n * The proxy selectors are:\n * - 0xcf7a1d77: initialize\n * - 0x3659cfe6: upgradeTo (from TransparentUpgradeableProxy)\n * - 0x4f1ef286: upgradeToAndCall (from TransparentUpgradeableProxy)\n * - 0x8f283970: changeAdmin (from TransparentUpgradeableProxy)\n * - 0xf851a440: admin (from TransparentUpgradeableProxy)\n * - 0x5c60da1b: implementation (from TransparentUpgradeableProxy)\n */\ncontract TransparentUpgradeableBeaconProxy is TransparentUpgradeableProxy, BeaconProxy {\n    /**\n     * Decode the initialization data from the msg.data and call the initialize function.\n     */\n    function _dispatchInitialize() private returns (bytes memory) {\n        _requireZeroValue();\n\n        (address admin, address beacon, bytes memory data) = abi.decode(msg.data[4:], (address, address, bytes));\n        initialize(admin, beacon, data);\n\n        return \"\";\n    }\n\n    function initialize(address admin, address beacon, bytes memory data) internal {\n        if (_admin() != address(0)) {\n            // Redundant call. This function can only be called when the admin is not set.\n            revert InvalidInitialization();\n        }\n        _changeAdmin(admin);\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n\n    /**\n     * @dev If the admin is not set, the fallback function is used to initialize the proxy.\n     * @dev If the admin is set, the fallback function is used to delegatecall the implementation.\n     */\n    function _fallback() internal override (TransparentUpgradeableProxy, Proxy) {\n        if (_getAdmin() == address(0)) {\n            bytes memory ret;\n            bytes4 selector = msg.sig;\n            if (selector == ITransparentUpgradeableBeaconProxy.initialize.selector) {\n                ret = _dispatchInitialize();\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    return(add(ret, 0x20), mload(ret))\n                }\n            }\n            // When the admin is not set, the fallback function is used to initialize the proxy.\n            revert InvalidInitialization();\n        }\n        TransparentUpgradeableProxy._fallback();\n    }\n\n    /**\n     * Returns the current implementation address.\n     * @dev This is the implementation address set by the admin, or the beacon implementation.\n     */\n    function _implementation() internal view override (ERC1967Proxy, BeaconProxy) returns (address) {\n        address implementation = ERC1967Proxy._implementation();\n        if (implementation != address(0)) {\n            return implementation;\n        }\n        return BeaconProxy._implementation();\n    }\n}\n"
			},
			"lib/solady/src/utils/SafeTransferLib.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Safe ETH and ERC20 transfer library that gracefully handles missing return values.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)\n/// @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)\n/// @author Permit2 operations from (https://github.com/Uniswap/permit2/blob/main/src/libraries/Permit2Lib.sol)\n///\n/// @dev Note:\n/// - For ETH transfers, please use `forceSafeTransferETH` for DoS protection.\n/// - For ERC20s, this implementation won't check that a token has code,\n///   responsibility is delegated to the caller.\nlibrary SafeTransferLib {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       CUSTOM ERRORS                        */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The ETH transfer has failed.\n    error ETHTransferFailed();\n\n    /// @dev The ERC20 `transferFrom` has failed.\n    error TransferFromFailed();\n\n    /// @dev The ERC20 `transfer` has failed.\n    error TransferFailed();\n\n    /// @dev The ERC20 `approve` has failed.\n    error ApproveFailed();\n\n    /// @dev The Permit2 operation has failed.\n    error Permit2Failed();\n\n    /// @dev The Permit2 amount must be less than `2**160 - 1`.\n    error Permit2AmountOverflow();\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                         CONSTANTS                          */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Suggested gas stipend for contract receiving ETH that disallows any storage writes.\n    uint256 internal constant GAS_STIPEND_NO_STORAGE_WRITES = 2300;\n\n    /// @dev Suggested gas stipend for contract receiving ETH to perform a few\n    /// storage reads and writes, but low enough to prevent griefing.\n    uint256 internal constant GAS_STIPEND_NO_GRIEF = 100000;\n\n    /// @dev The unique EIP-712 domain domain separator for the DAI token contract.\n    bytes32 internal constant DAI_DOMAIN_SEPARATOR =\n        0xdbb8cf42e1ecb028be3f3dbc922e1d878b963f411dc388ced501601c60f7c6f7;\n\n    /// @dev The address for the WETH9 contract on Ethereum mainnet.\n    address internal constant WETH9 = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;\n\n    /// @dev The canonical Permit2 address.\n    /// [Github](https://github.com/Uniswap/permit2)\n    /// [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)\n    address internal constant PERMIT2 = 0x000000000022D473030F116dDEE9F6B43aC78BA3;\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                       ETH OPERATIONS                       */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    // If the ETH transfer MUST succeed with a reasonable gas budget, use the force variants.\n    //\n    // The regular variants:\n    // - Forwards all remaining gas to the target.\n    // - Reverts if the target reverts.\n    // - Reverts if the current contract has insufficient balance.\n    //\n    // The force variants:\n    // - Forwards with an optional gas stipend\n    //   (defaults to `GAS_STIPEND_NO_GRIEF`, which is sufficient for most cases).\n    // - If the target reverts, or if the gas stipend is exhausted,\n    //   creates a temporary contract to force send the ETH via `SELFDESTRUCT`.\n    //   Future compatible with `SENDALL`: https://eips.ethereum.org/EIPS/eip-4758.\n    // - Reverts if the current contract has insufficient balance.\n    //\n    // The try variants:\n    // - Forwards with a mandatory gas stipend.\n    // - Instead of reverting, returns whether the transfer succeeded.\n\n    /// @dev Sends `amount` (in wei) ETH to `to`.\n    function safeTransferETH(address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            if iszero(call(gas(), to, amount, codesize(), 0x00, codesize(), 0x00)) {\n                mstore(0x00, 0xb12d13eb) // `ETHTransferFailed()`.\n                revert(0x1c, 0x04)\n            }\n        }\n    }\n\n    /// @dev Sends all the ETH in the current contract to `to`.\n    function safeTransferAllETH(address to) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Transfer all the ETH and check if it succeeded or not.\n            if iszero(call(gas(), to, selfbalance(), codesize(), 0x00, codesize(), 0x00)) {\n                mstore(0x00, 0xb12d13eb) // `ETHTransferFailed()`.\n                revert(0x1c, 0x04)\n            }\n        }\n    }\n\n    /// @dev Force sends `amount` (in wei) ETH to `to`, with a `gasStipend`.\n    function forceSafeTransferETH(address to, uint256 amount, uint256 gasStipend) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            if lt(selfbalance(), amount) {\n                mstore(0x00, 0xb12d13eb) // `ETHTransferFailed()`.\n                revert(0x1c, 0x04)\n            }\n            if iszero(call(gasStipend, to, amount, codesize(), 0x00, codesize(), 0x00)) {\n                mstore(0x00, to) // Store the address in scratch space.\n                mstore8(0x0b, 0x73) // Opcode `PUSH20`.\n                mstore8(0x20, 0xff) // Opcode `SELFDESTRUCT`.\n                if iszero(create(amount, 0x0b, 0x16)) { revert(codesize(), codesize()) } // For gas estimation.\n            }\n        }\n    }\n\n    /// @dev Force sends all the ETH in the current contract to `to`, with a `gasStipend`.\n    function forceSafeTransferAllETH(address to, uint256 gasStipend) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            if iszero(call(gasStipend, to, selfbalance(), codesize(), 0x00, codesize(), 0x00)) {\n                mstore(0x00, to) // Store the address in scratch space.\n                mstore8(0x0b, 0x73) // Opcode `PUSH20`.\n                mstore8(0x20, 0xff) // Opcode `SELFDESTRUCT`.\n                if iszero(create(selfbalance(), 0x0b, 0x16)) { revert(codesize(), codesize()) } // For gas estimation.\n            }\n        }\n    }\n\n    /// @dev Force sends `amount` (in wei) ETH to `to`, with `GAS_STIPEND_NO_GRIEF`.\n    function forceSafeTransferETH(address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            if lt(selfbalance(), amount) {\n                mstore(0x00, 0xb12d13eb) // `ETHTransferFailed()`.\n                revert(0x1c, 0x04)\n            }\n            if iszero(call(GAS_STIPEND_NO_GRIEF, to, amount, codesize(), 0x00, codesize(), 0x00)) {\n                mstore(0x00, to) // Store the address in scratch space.\n                mstore8(0x0b, 0x73) // Opcode `PUSH20`.\n                mstore8(0x20, 0xff) // Opcode `SELFDESTRUCT`.\n                if iszero(create(amount, 0x0b, 0x16)) { revert(codesize(), codesize()) } // For gas estimation.\n            }\n        }\n    }\n\n    /// @dev Force sends all the ETH in the current contract to `to`, with `GAS_STIPEND_NO_GRIEF`.\n    function forceSafeTransferAllETH(address to) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // forgefmt: disable-next-item\n            if iszero(call(GAS_STIPEND_NO_GRIEF, to, selfbalance(), codesize(), 0x00, codesize(), 0x00)) {\n                mstore(0x00, to) // Store the address in scratch space.\n                mstore8(0x0b, 0x73) // Opcode `PUSH20`.\n                mstore8(0x20, 0xff) // Opcode `SELFDESTRUCT`.\n                if iszero(create(selfbalance(), 0x0b, 0x16)) { revert(codesize(), codesize()) } // For gas estimation.\n            }\n        }\n    }\n\n    /// @dev Sends `amount` (in wei) ETH to `to`, with a `gasStipend`.\n    function trySafeTransferETH(address to, uint256 amount, uint256 gasStipend)\n        internal\n        returns (bool success)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            success := call(gasStipend, to, amount, codesize(), 0x00, codesize(), 0x00)\n        }\n    }\n\n    /// @dev Sends all the ETH in the current contract to `to`, with a `gasStipend`.\n    function trySafeTransferAllETH(address to, uint256 gasStipend)\n        internal\n        returns (bool success)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            success := call(gasStipend, to, selfbalance(), codesize(), 0x00, codesize(), 0x00)\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                      ERC20 OPERATIONS                      */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Sends `amount` of ERC20 `token` from `from` to `to`.\n    /// Reverts upon failure.\n    ///\n    /// The `from` account must have at least `amount` approved for\n    /// the current contract to manage.\n    function safeTransferFrom(address token, address from, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n            mstore(0x60, amount) // Store the `amount` argument.\n            mstore(0x40, to) // Store the `to` argument.\n            mstore(0x2c, shl(96, from)) // Store the `from` argument.\n            mstore(0x0c, 0x23b872dd000000000000000000000000) // `transferFrom(address,address,uint256)`.\n            // Perform the transfer, reverting upon failure.\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())), // Returned 1 or nothing.\n                    call(gas(), token, 0, 0x1c, 0x64, 0x00, 0x20)\n                )\n            ) {\n                mstore(0x00, 0x7939f424) // `TransferFromFailed()`.\n                revert(0x1c, 0x04)\n            }\n            mstore(0x60, 0) // Restore the zero slot to zero.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Sends `amount` of ERC20 `token` from `from` to `to`.\n    ///\n    /// The `from` account must have at least `amount` approved for the current contract to manage.\n    function trySafeTransferFrom(address token, address from, address to, uint256 amount)\n        internal\n        returns (bool success)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n            mstore(0x60, amount) // Store the `amount` argument.\n            mstore(0x40, to) // Store the `to` argument.\n            mstore(0x2c, shl(96, from)) // Store the `from` argument.\n            mstore(0x0c, 0x23b872dd000000000000000000000000) // `transferFrom(address,address,uint256)`.\n            success :=\n                and( // The arguments of `and` are evaluated from right to left.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())), // Returned 1 or nothing.\n                    call(gas(), token, 0, 0x1c, 0x64, 0x00, 0x20)\n                )\n            mstore(0x60, 0) // Restore the zero slot to zero.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Sends all of ERC20 `token` from `from` to `to`.\n    /// Reverts upon failure.\n    ///\n    /// The `from` account must have their entire balance approved for the current contract to manage.\n    function safeTransferAllFrom(address token, address from, address to)\n        internal\n        returns (uint256 amount)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n            mstore(0x40, to) // Store the `to` argument.\n            mstore(0x2c, shl(96, from)) // Store the `from` argument.\n            mstore(0x0c, 0x70a08231000000000000000000000000) // `balanceOf(address)`.\n            // Read the balance, reverting upon failure.\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    gt(returndatasize(), 0x1f), // At least 32 bytes returned.\n                    staticcall(gas(), token, 0x1c, 0x24, 0x60, 0x20)\n                )\n            ) {\n                mstore(0x00, 0x7939f424) // `TransferFromFailed()`.\n                revert(0x1c, 0x04)\n            }\n            mstore(0x00, 0x23b872dd) // `transferFrom(address,address,uint256)`.\n            amount := mload(0x60) // The `amount` is already at 0x60. We'll need to return it.\n            // Perform the transfer, reverting upon failure.\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())), // Returned 1 or nothing.\n                    call(gas(), token, 0, 0x1c, 0x64, 0x00, 0x20)\n                )\n            ) {\n                mstore(0x00, 0x7939f424) // `TransferFromFailed()`.\n                revert(0x1c, 0x04)\n            }\n            mstore(0x60, 0) // Restore the zero slot to zero.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Sends `amount` of ERC20 `token` from the current contract to `to`.\n    /// Reverts upon failure.\n    function safeTransfer(address token, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, to) // Store the `to` argument.\n            mstore(0x34, amount) // Store the `amount` argument.\n            mstore(0x00, 0xa9059cbb000000000000000000000000) // `transfer(address,uint256)`.\n            // Perform the transfer, reverting upon failure.\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())), // Returned 1 or nothing.\n                    call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                )\n            ) {\n                mstore(0x00, 0x90b8ec18) // `TransferFailed()`.\n                revert(0x1c, 0x04)\n            }\n            mstore(0x34, 0) // Restore the part of the free memory pointer that was overwritten.\n        }\n    }\n\n    /// @dev Sends all of ERC20 `token` from the current contract to `to`.\n    /// Reverts upon failure.\n    function safeTransferAll(address token, address to) internal returns (uint256 amount) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, 0x70a08231) // Store the function selector of `balanceOf(address)`.\n            mstore(0x20, address()) // Store the address of the current contract.\n            // Read the balance, reverting upon failure.\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    gt(returndatasize(), 0x1f), // At least 32 bytes returned.\n                    staticcall(gas(), token, 0x1c, 0x24, 0x34, 0x20)\n                )\n            ) {\n                mstore(0x00, 0x90b8ec18) // `TransferFailed()`.\n                revert(0x1c, 0x04)\n            }\n            mstore(0x14, to) // Store the `to` argument.\n            amount := mload(0x34) // The `amount` is already at 0x34. We'll need to return it.\n            mstore(0x00, 0xa9059cbb000000000000000000000000) // `transfer(address,uint256)`.\n            // Perform the transfer, reverting upon failure.\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())), // Returned 1 or nothing.\n                    call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                )\n            ) {\n                mstore(0x00, 0x90b8ec18) // `TransferFailed()`.\n                revert(0x1c, 0x04)\n            }\n            mstore(0x34, 0) // Restore the part of the free memory pointer that was overwritten.\n        }\n    }\n\n    /// @dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n    /// Reverts upon failure.\n    function safeApprove(address token, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, to) // Store the `to` argument.\n            mstore(0x34, amount) // Store the `amount` argument.\n            mstore(0x00, 0x095ea7b3000000000000000000000000) // `approve(address,uint256)`.\n            // Perform the approval, reverting upon failure.\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())), // Returned 1 or nothing.\n                    call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                )\n            ) {\n                mstore(0x00, 0x3e3f8f73) // `ApproveFailed()`.\n                revert(0x1c, 0x04)\n            }\n            mstore(0x34, 0) // Restore the part of the free memory pointer that was overwritten.\n        }\n    }\n\n    /// @dev Sets `amount` of ERC20 `token` for `to` to manage on behalf of the current contract.\n    /// If the initial attempt to approve fails, attempts to reset the approved amount to zero,\n    /// then retries the approval again (some tokens, e.g. USDT, requires this).\n    /// Reverts upon failure.\n    function safeApproveWithRetry(address token, address to, uint256 amount) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, to) // Store the `to` argument.\n            mstore(0x34, amount) // Store the `amount` argument.\n            mstore(0x00, 0x095ea7b3000000000000000000000000) // `approve(address,uint256)`.\n            // Perform the approval, retrying upon failure.\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    or(eq(mload(0x00), 1), iszero(returndatasize())), // Returned 1 or nothing.\n                    call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                )\n            ) {\n                mstore(0x34, 0) // Store 0 for the `amount`.\n                mstore(0x00, 0x095ea7b3000000000000000000000000) // `approve(address,uint256)`.\n                pop(call(gas(), token, 0, 0x10, 0x44, codesize(), 0x00)) // Reset the approval.\n                mstore(0x34, amount) // Store back the original `amount`.\n                // Retry the approval, reverting upon failure.\n                if iszero(\n                    and(\n                        or(eq(mload(0x00), 1), iszero(returndatasize())), // Returned 1 or nothing.\n                        call(gas(), token, 0, 0x10, 0x44, 0x00, 0x20)\n                    )\n                ) {\n                    mstore(0x00, 0x3e3f8f73) // `ApproveFailed()`.\n                    revert(0x1c, 0x04)\n                }\n            }\n            mstore(0x34, 0) // Restore the part of the free memory pointer that was overwritten.\n        }\n    }\n\n    /// @dev Returns the amount of ERC20 `token` owned by `account`.\n    /// Returns zero if the `token` does not exist.\n    function balanceOf(address token, address account) internal view returns (uint256 amount) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x14, account) // Store the `account` argument.\n            mstore(0x00, 0x70a08231000000000000000000000000) // `balanceOf(address)`.\n            amount :=\n                mul( // The arguments of `mul` are evaluated from right to left.\n                    mload(0x20),\n                    and( // The arguments of `and` are evaluated from right to left.\n                        gt(returndatasize(), 0x1f), // At least 32 bytes returned.\n                        staticcall(gas(), token, 0x10, 0x24, 0x20, 0x20)\n                    )\n                )\n        }\n    }\n\n    /// @dev Sends `amount` of ERC20 `token` from `from` to `to`.\n    /// If the initial attempt fails, try to use Permit2 to transfer the token.\n    /// Reverts upon failure.\n    ///\n    /// The `from` account must have at least `amount` approved for the current contract to manage.\n    function safeTransferFrom2(address token, address from, address to, uint256 amount) internal {\n        if (!trySafeTransferFrom(token, from, to, amount)) {\n            permit2TransferFrom(token, from, to, amount);\n        }\n    }\n\n    /// @dev Sends `amount` of ERC20 `token` from `from` to `to` via Permit2.\n    /// Reverts upon failure.\n    function permit2TransferFrom(address token, address from, address to, uint256 amount)\n        internal\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40)\n            mstore(add(m, 0x74), shr(96, shl(96, token)))\n            mstore(add(m, 0x54), amount)\n            mstore(add(m, 0x34), to)\n            mstore(add(m, 0x20), shl(96, from))\n            // `transferFrom(address,address,uint160,address)`.\n            mstore(m, 0x36c78516000000000000000000000000)\n            let p := PERMIT2\n            let exists := eq(chainid(), 1)\n            if iszero(exists) { exists := iszero(iszero(extcodesize(p))) }\n            if iszero(and(call(gas(), p, 0, add(m, 0x10), 0x84, codesize(), 0x00), exists)) {\n                mstore(0x00, 0x7939f4248757f0fd) // `TransferFromFailed()` or `Permit2AmountOverflow()`.\n                revert(add(0x18, shl(2, iszero(iszero(shr(160, amount))))), 0x04)\n            }\n        }\n    }\n\n    /// @dev Permit a user to spend a given amount of\n    /// another user's tokens via native EIP-2612 permit if possible, falling\n    /// back to Permit2 if native permit fails or is not implemented on the token.\n    function permit2(\n        address token,\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        bool success;\n        /// @solidity memory-safe-assembly\n        assembly {\n            for {} shl(96, xor(token, WETH9)) {} {\n                mstore(0x00, 0x3644e515) // `DOMAIN_SEPARATOR()`.\n                if iszero(\n                    and( // The arguments of `and` are evaluated from right to left.\n                        lt(iszero(mload(0x00)), eq(returndatasize(), 0x20)), // Returns 1 non-zero word.\n                        // Gas stipend to limit gas burn for tokens that don't refund gas when\n                        // an non-existing function is called. 5K should be enough for a SLOAD.\n                        staticcall(5000, token, 0x1c, 0x04, 0x00, 0x20)\n                    )\n                ) { break }\n                // After here, we can be sure that token is a contract.\n                let m := mload(0x40)\n                mstore(add(m, 0x34), spender)\n                mstore(add(m, 0x20), shl(96, owner))\n                mstore(add(m, 0x74), deadline)\n                if eq(mload(0x00), DAI_DOMAIN_SEPARATOR) {\n                    mstore(0x14, owner)\n                    mstore(0x00, 0x7ecebe00000000000000000000000000) // `nonces(address)`.\n                    mstore(add(m, 0x94), staticcall(gas(), token, 0x10, 0x24, add(m, 0x54), 0x20))\n                    mstore(m, 0x8fcbaf0c000000000000000000000000) // `IDAIPermit.permit`.\n                    // `nonces` is already at `add(m, 0x54)`.\n                    // `1` is already stored at `add(m, 0x94)`.\n                    mstore(add(m, 0xb4), and(0xff, v))\n                    mstore(add(m, 0xd4), r)\n                    mstore(add(m, 0xf4), s)\n                    success := call(gas(), token, 0, add(m, 0x10), 0x104, codesize(), 0x00)\n                    break\n                }\n                mstore(m, 0xd505accf000000000000000000000000) // `IERC20Permit.permit`.\n                mstore(add(m, 0x54), amount)\n                mstore(add(m, 0x94), and(0xff, v))\n                mstore(add(m, 0xb4), r)\n                mstore(add(m, 0xd4), s)\n                success := call(gas(), token, 0, add(m, 0x10), 0xe4, codesize(), 0x00)\n                break\n            }\n        }\n        if (!success) simplePermit2(token, owner, spender, amount, deadline, v, r, s);\n    }\n\n    /// @dev Simple permit on the Permit2 contract.\n    function simplePermit2(\n        address token,\n        address owner,\n        address spender,\n        uint256 amount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40)\n            mstore(m, 0x927da105) // `allowance(address,address,address)`.\n            {\n                let addressMask := shr(96, not(0))\n                mstore(add(m, 0x20), and(addressMask, owner))\n                mstore(add(m, 0x40), and(addressMask, token))\n                mstore(add(m, 0x60), and(addressMask, spender))\n                mstore(add(m, 0xc0), and(addressMask, spender))\n            }\n            let p := mul(PERMIT2, iszero(shr(160, amount)))\n            if iszero(\n                and( // The arguments of `and` are evaluated from right to left.\n                    gt(returndatasize(), 0x5f), // Returns 3 words: `amount`, `expiration`, `nonce`.\n                    staticcall(gas(), p, add(m, 0x1c), 0x64, add(m, 0x60), 0x60)\n                )\n            ) {\n                mstore(0x00, 0x6b836e6b8757f0fd) // `Permit2Failed()` or `Permit2AmountOverflow()`.\n                revert(add(0x18, shl(2, iszero(p))), 0x04)\n            }\n            mstore(m, 0x2b67b570) // `Permit2.permit` (PermitSingle variant).\n            // `owner` is already `add(m, 0x20)`.\n            // `token` is already at `add(m, 0x40)`.\n            mstore(add(m, 0x60), amount)\n            mstore(add(m, 0x80), 0xffffffffffff) // `expiration = type(uint48).max`.\n            // `nonce` is already at `add(m, 0xa0)`.\n            // `spender` is already at `add(m, 0xc0)`.\n            mstore(add(m, 0xe0), deadline)\n            mstore(add(m, 0x100), 0x100) // `signature` offset.\n            mstore(add(m, 0x120), 0x41) // `signature` length.\n            mstore(add(m, 0x140), r)\n            mstore(add(m, 0x160), s)\n            mstore(add(m, 0x180), shl(248, v))\n            if iszero(call(gas(), p, 0, add(m, 0x1c), 0x184, codesize(), 0x00)) {\n                mstore(0x00, 0x6b836e6b) // `Permit2Failed()`.\n                revert(0x1c, 0x04)\n            }\n        }\n    }\n}\n"
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\nimport './IERC165.sol';\r\n\r\n\r\ninterface IERC1155 is IERC165 {\r\n\r\n  /****************************************|\r\n  |                 Events                 |\r\n  |_______________________________________*/\r\n\r\n  /**\r\n   * @dev Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning\r\n   *   Operator MUST be msg.sender\r\n   *   When minting/creating tokens, the `_from` field MUST be set to `0x0`\r\n   *   When burning/destroying tokens, the `_to` field MUST be set to `0x0`\r\n   *   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID\r\n   *   To broadcast the existence of a token ID with no initial balance, the contract SHOULD emit the TransferSingle event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\r\n   */\r\n  event TransferSingle(address indexed _operator, address indexed _from, address indexed _to, uint256 _id, uint256 _amount);\r\n\r\n  /**\r\n   * @dev Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning\r\n   *   Operator MUST be msg.sender\r\n   *   When minting/creating tokens, the `_from` field MUST be set to `0x0`\r\n   *   When burning/destroying tokens, the `_to` field MUST be set to `0x0`\r\n   *   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID\r\n   *   To broadcast the existence of multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\r\n   */\r\n  event TransferBatch(address indexed _operator, address indexed _from, address indexed _to, uint256[] _ids, uint256[] _amounts);\r\n\r\n  /**\r\n   * @dev MUST emit when an approval is updated\r\n   */\r\n  event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\r\n\r\n\r\n  /****************************************|\r\n  |                Functions               |\r\n  |_______________________________________*/\r\n\r\n  /**\r\n    * @notice Transfers amount of an _id from the _from address to the _to address specified\r\n    * @dev MUST emit TransferSingle event on success\r\n    * Caller must be approved to manage the _from account's tokens (see isApprovedForAll)\r\n    * MUST throw if `_to` is the zero address\r\n    * MUST throw if balance of sender for token `_id` is lower than the `_amount` sent\r\n    * MUST throw on any other error\r\n    * When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155Received` on `_to` and revert if the return amount is not `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n    * @param _from    Source address\r\n    * @param _to      Target address\r\n    * @param _id      ID of the token type\r\n    * @param _amount  Transfered amount\r\n    * @param _data    Additional data with no specified format, sent in call to `_to`\r\n    */\r\n  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _amount, bytes calldata _data) external;\r\n\r\n  /**\r\n    * @notice Send multiple types of Tokens from the _from address to the _to address (with safety call)\r\n    * @dev MUST emit TransferBatch event on success\r\n    * Caller must be approved to manage the _from account's tokens (see isApprovedForAll)\r\n    * MUST throw if `_to` is the zero address\r\n    * MUST throw if length of `_ids` is not the same as length of `_amounts`\r\n    * MUST throw if any of the balance of sender for token `_ids` is lower than the respective `_amounts` sent\r\n    * MUST throw on any other error\r\n    * When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155BatchReceived` on `_to` and revert if the return amount is not `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n    * Transfers and events MUST occur in the array order they were submitted (_ids[0] before _ids[1], etc)\r\n    * @param _from     Source addresses\r\n    * @param _to       Target addresses\r\n    * @param _ids      IDs of each token type\r\n    * @param _amounts  Transfer amounts per token type\r\n    * @param _data     Additional data with no specified format, sent in call to `_to`\r\n  */\r\n  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _amounts, bytes calldata _data) external;\r\n\r\n  /**\r\n   * @notice Get the balance of an account's Tokens\r\n   * @param _owner  The address of the token holder\r\n   * @param _id     ID of the Token\r\n   * @return        The _owner's balance of the Token type requested\r\n   */\r\n  function balanceOf(address _owner, uint256 _id) external view returns (uint256);\r\n\r\n  /**\r\n   * @notice Get the balance of multiple account/token pairs\r\n   * @param _owners The addresses of the token holders\r\n   * @param _ids    ID of the Tokens\r\n   * @return        The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\r\n   */\r\n  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory);\r\n\r\n  /**\r\n   * @notice Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens\r\n   * @dev MUST emit the ApprovalForAll event on success\r\n   * @param _operator  Address to add to the set of authorized operators\r\n   * @param _approved  True if the operator is approved, false to revoke approval\r\n   */\r\n  function setApprovalForAll(address _operator, bool _approved) external;\r\n\r\n  /**\r\n   * @notice Queries the approval status of an operator for a given owner\r\n   * @param _owner     The owner of the Tokens\r\n   * @param _operator  Address of authorized operator\r\n   * @return isOperator True if the operator is approved, false if not\r\n   */\r\n  function isApprovedForAll(address _owner, address _operator) external view returns (bool isOperator);\r\n}\r\n"
			},
			"src/tokens/common/IERC721Transfer.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\n/// A minimal implementation of the ERC721 transfer interface.\ninterface IERC721Transfer {\n\n  function transferFrom(address from, address to, uint256 tokenId) external;\n  function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n}\n"
			},
			"src/utils/SignatureValidator.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {ECDSA} from \"solady/utils/ECDSA.sol\";\nimport {IERC1271Wallet} from \"@0xsequence/erc-1155/contracts/interfaces/IERC1271Wallet.sol\";\n\nlibrary SignatureValidator {\n    using ECDSA for bytes32;\n\n    uint8 private constant SIG_TYPE_ERC712 = 1;\n    uint8 private constant SIG_TYPE_ERC1271 = 2;\n\n    bytes4 internal constant ERC1271_MAGICVALUE = 0x1626ba7e;\n\n    /**\n     * Check if a signature is valid.\n     * @param digest The digest to check.\n     * @param signature The signature to check.\n     * @return signer The detected signer address if valid, otherwise address(0).\n     * @dev An ERC721 signature is formatted `0x01<signature>`.\n     * @dev An ERC1271 signature is formatted `0x02<signer><signature>`.\n     */\n    function recoverSigner(bytes32 digest, bytes calldata signature) internal view returns (address signer) {\n        // Check first byte of signature for signature type\n        uint8 sigType = uint8(signature[0]);\n        if (sigType == SIG_TYPE_ERC712) {\n            // ERC712\n            signer = digest.recoverCalldata(signature[1:]);\n        } else if (sigType == SIG_TYPE_ERC1271 && signature.length >= 21) {\n            // ERC1271\n            assembly {\n                let word := calldataload(add(1, signature.offset))\n                signer := shr(96, word)\n            }\n            try IERC1271Wallet(signer).isValidSignature(digest, signature[21:]) returns (bytes4 magicValue) {\n                if (magicValue != ERC1271_MAGICVALUE) {\n                    signer = address(0);\n                }\n            } catch {\n                signer = address(0);\n            }\n        }\n    }\n}\n"
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @title ERC165\r\n * @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\r\n */\r\ninterface IERC165 {\r\n\r\n    /**\r\n     * @notice Query if a contract implements an interface\r\n     * @dev Interface identification is specified in ERC-165. This function\r\n     * uses less than 30,000 gas\r\n     * @param _interfaceId The interface identifier, as specified in ERC-165\r\n     */\r\n    function supportsInterface(bytes4 _interfaceId)\r\n    external\r\n    view\r\n    returns (bool);\r\n}\r\n"
			},
			"src/payments/IPayments.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\ninterface IPaymentsFunctions {\n    enum TokenType {\n        ERC20,\n        ERC721,\n        ERC1155\n    }\n\n    struct PaymentRecipient {\n        // Payment recipient\n        address recipient;\n        // Payment amount\n        uint256 amount;\n    }\n\n    struct ChainedCallDetails {\n        // Address for chained call\n        address chainedCallAddress;\n        // Data for chained call\n        bytes chainedCallData;\n    }\n\n    struct PaymentDetails {\n        // Unique ID for this purchase\n        uint256 purchaseId;\n        // Recipient of the purchased product\n        address productRecipient;\n        // Type of payment token\n        TokenType tokenType;\n        // Token address to use for payment\n        address tokenAddress;\n        // Token ID to use for payment. Used for ERC-721 and 1155 payments\n        uint256 tokenId;\n        // Payment receipients\n        PaymentRecipient[] paymentRecipients;\n        // Expiration time of the payment\n        uint64 expiration;\n        // ID of the product\n        string productId;\n        // Chained call details\n        ChainedCallDetails chainedCallDetails;\n    }\n\n    /**\n     * Returns the hash of the payment details.\n     * @param paymentDetails The payment details.\n     * @return paymentHash The hash of the payment details for signing.\n     */\n    function hashPaymentDetails(PaymentDetails calldata paymentDetails) external view returns (bytes32 paymentHash);\n\n    /**\n     * Check is a payment signature is valid.\n     * @param paymentDetails The payment details.\n     * @param signature The signature of the payment.\n     * @return isValid True if the signature is valid.\n     */\n    function isValidPaymentSignature(PaymentDetails calldata paymentDetails, bytes calldata signature)\n        external\n        view\n        returns (bool isValid);\n\n    /**\n     * Make a payment for a product.\n     * @param paymentDetails The payment details.\n     * @param signature The signature of the payment.\n     */\n    function makePayment(PaymentDetails calldata paymentDetails, bytes calldata signature) external payable;\n\n    /**\n     * Check if a payment has been accepted.\n     * @param purchaseId The ID of the purchase.\n     * @return accepted True if the payment has been accepted.\n     */\n    function paymentAccepted(uint256 purchaseId) external view returns (bool);\n\n    /**\n     * Returns the hash of the chained call.\n     * @param chainedCallDetails The chained call details.\n     * @return callHash The hash of the chained call for signing.\n     */\n    function hashChainedCallDetails(ChainedCallDetails calldata chainedCallDetails)\n        external\n        view\n        returns (bytes32 callHash);\n\n    /**\n     * Complete a chained call.\n     * @param chainedCallDetails The chained call details.\n     * @param signature The signature of the chained call.\n     * @dev This is called when a payment is accepted off/cross chain.\n     */\n    function performChainedCall(ChainedCallDetails calldata chainedCallDetails, bytes calldata signature) external;\n\n    /**\n     * Check is a chained call signature is valid.\n     * @param chainedCallDetails The chained call details.\n     * @param signature The signature of the chained call.\n     * @return isValid True if the signature is valid.\n     */\n    function isValidChainedCallSignature(ChainedCallDetails calldata chainedCallDetails, bytes calldata signature)\n        external\n        view\n        returns (bool isValid);\n\n    /**\n     * Get the signer address.\n     * @return signer The signer address.\n     */\n    function signer() external view returns (address);\n}\n\ninterface IPaymentsSignals {\n    /// @notice Emitted when contract is already initialized.\n    error InvalidInitialization();\n\n    /// @notice Emitted when a payment is already accepted. This prevents double spending.\n    error PaymentAlreadyAccepted();\n\n    /// @notice Emitted when a signature is invalid.\n    error InvalidSignature();\n\n    /// @notice Emitted when a payment has expired.\n    error PaymentExpired();\n\n    /// @notice Emitted when a token transfer is invalid.\n    error InvalidTokenTransfer();\n\n    /// @notice Emitted when a chained call fails.\n    error ChainedCallFailed();\n\n    /// @notice Emitted when a payment is made.\n    event PaymentMade(\n        address indexed spender, address indexed productRecipient, uint256 indexed purchaseId, string productId\n    );\n}\n\ninterface IPayments is IPaymentsFunctions, IPaymentsSignals {}\n"
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1271Wallet.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\n\r\ninterface  IERC1271Wallet {\r\n\r\n  /**\r\n   * @notice Verifies whether the provided signature is valid with respect to the provided data\r\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided data\r\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\r\n   *   > This function MAY modify Ethereum's state\r\n   * @param _data       Arbitrary length data signed on the behalf of address(this)\r\n   * @param _signature  Signature byte array associated with _data\r\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\r\n   *\r\n   */\r\n  function isValidSignature(\r\n    bytes calldata _data,\r\n    bytes calldata _signature)\r\n    external\r\n    view\r\n    returns (bytes4 magicValue);\r\n\r\n  /**\r\n   * @notice Verifies whether the provided signature is valid with respect to the provided hash\r\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided hash\r\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\r\n   *   > This function MAY modify Ethereum's state\r\n   * @param _hash       keccak256 hash that was signed\r\n   * @param _signature  Signature byte array associated with _data\r\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\r\n   */\r\n  function isValidSignature(\r\n    bytes32 _hash,\r\n    bytes calldata _signature)\r\n    external\r\n    view\r\n    returns (bytes4 magicValue);\r\n}\r\n"
			},
			"lib/solady/src/utils/ECDSA.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/// @notice Gas optimized ECDSA wrapper.\n/// @author Solady (https://github.com/vectorized/solady/blob/main/src/utils/ECDSA.sol)\n/// @author Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/ECDSA.sol)\n/// @author Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol)\n///\n/// @dev Note:\n/// - The recovery functions use the ecrecover precompile (0x1).\n/// - As of Solady version 0.0.68, the `recover` variants will revert upon recovery failure.\n///   This is for more safety by default.\n///   Use the `tryRecover` variants if you need to get the zero address back\n///   upon recovery failure instead.\n/// - As of Solady version 0.0.134, all `bytes signature` variants accept both\n///   regular 65-byte `(r, s, v)` and EIP-2098 `(r, vs)` short form signatures.\n///   See: https://eips.ethereum.org/EIPS/eip-2098\n///   This is for calldata efficiency on smart accounts prevalent on L2s.\n///\n/// WARNING! Do NOT use signatures as unique identifiers:\n/// - Use a nonce in the digest to prevent replay attacks on the same contract.\n/// - Use EIP-712 for the digest to prevent replay attacks across different chains and contracts.\n///   EIP-712 also enables readable signing of typed data for better user safety.\n/// This implementation does NOT check if a signature is non-malleable.\nlibrary ECDSA {\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                        CUSTOM ERRORS                       */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev The signature is invalid.\n    error InvalidSignature();\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                    RECOVERY OPERATIONS                     */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Recovers the signer's address from a message digest `hash`, and the `signature`.\n    function recover(bytes32 hash, bytes memory signature) internal view returns (address result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := 1\n            let m := mload(0x40) // Cache the free memory pointer.\n            for {} 1 {} {\n                mstore(0x00, hash)\n                mstore(0x40, mload(add(signature, 0x20))) // `r`.\n                if eq(mload(signature), 64) {\n                    let vs := mload(add(signature, 0x40))\n                    mstore(0x20, add(shr(255, vs), 27)) // `v`.\n                    mstore(0x60, shr(1, shl(1, vs))) // `s`.\n                    break\n                }\n                if eq(mload(signature), 65) {\n                    mstore(0x20, byte(0, mload(add(signature, 0x60)))) // `v`.\n                    mstore(0x60, mload(add(signature, 0x40))) // `s`.\n                    break\n                }\n                result := 0\n                break\n            }\n            result :=\n                mload(\n                    staticcall(\n                        gas(), // Amount of gas left for the transaction.\n                        result, // Address of `ecrecover`.\n                        0x00, // Start of input.\n                        0x80, // Size of input.\n                        0x01, // Start of output.\n                        0x20 // Size of output.\n                    )\n                )\n            // `returndatasize()` will be `0x20` upon success, and `0x00` otherwise.\n            if iszero(returndatasize()) {\n                mstore(0x00, 0x8baa579f) // `InvalidSignature()`.\n                revert(0x1c, 0x04)\n            }\n            mstore(0x60, 0) // Restore the zero slot.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Recovers the signer's address from a message digest `hash`, and the `signature`.\n    function recoverCalldata(bytes32 hash, bytes calldata signature)\n        internal\n        view\n        returns (address result)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := 1\n            let m := mload(0x40) // Cache the free memory pointer.\n            mstore(0x00, hash)\n            for {} 1 {} {\n                if eq(signature.length, 64) {\n                    let vs := calldataload(add(signature.offset, 0x20))\n                    mstore(0x20, add(shr(255, vs), 27)) // `v`.\n                    mstore(0x40, calldataload(signature.offset)) // `r`.\n                    mstore(0x60, shr(1, shl(1, vs))) // `s`.\n                    break\n                }\n                if eq(signature.length, 65) {\n                    mstore(0x20, byte(0, calldataload(add(signature.offset, 0x40)))) // `v`.\n                    calldatacopy(0x40, signature.offset, 0x40) // Copy `r` and `s`.\n                    break\n                }\n                result := 0\n                break\n            }\n            result :=\n                mload(\n                    staticcall(\n                        gas(), // Amount of gas left for the transaction.\n                        result, // Address of `ecrecover`.\n                        0x00, // Start of input.\n                        0x80, // Size of input.\n                        0x01, // Start of output.\n                        0x20 // Size of output.\n                    )\n                )\n            // `returndatasize()` will be `0x20` upon success, and `0x00` otherwise.\n            if iszero(returndatasize()) {\n                mstore(0x00, 0x8baa579f) // `InvalidSignature()`.\n                revert(0x1c, 0x04)\n            }\n            mstore(0x60, 0) // Restore the zero slot.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Recovers the signer's address from a message digest `hash`,\n    /// and the EIP-2098 short form signature defined by `r` and `vs`.\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal view returns (address result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n            mstore(0x00, hash)\n            mstore(0x20, add(shr(255, vs), 27)) // `v`.\n            mstore(0x40, r)\n            mstore(0x60, shr(1, shl(1, vs))) // `s`.\n            result :=\n                mload(\n                    staticcall(\n                        gas(), // Amount of gas left for the transaction.\n                        1, // Address of `ecrecover`.\n                        0x00, // Start of input.\n                        0x80, // Size of input.\n                        0x01, // Start of output.\n                        0x20 // Size of output.\n                    )\n                )\n            // `returndatasize()` will be `0x20` upon success, and `0x00` otherwise.\n            if iszero(returndatasize()) {\n                mstore(0x00, 0x8baa579f) // `InvalidSignature()`.\n                revert(0x1c, 0x04)\n            }\n            mstore(0x60, 0) // Restore the zero slot.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Recovers the signer's address from a message digest `hash`,\n    /// and the signature defined by `v`, `r`, `s`.\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s)\n        internal\n        view\n        returns (address result)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n            mstore(0x00, hash)\n            mstore(0x20, and(v, 0xff))\n            mstore(0x40, r)\n            mstore(0x60, s)\n            result :=\n                mload(\n                    staticcall(\n                        gas(), // Amount of gas left for the transaction.\n                        1, // Address of `ecrecover`.\n                        0x00, // Start of input.\n                        0x80, // Size of input.\n                        0x01, // Start of output.\n                        0x20 // Size of output.\n                    )\n                )\n            // `returndatasize()` will be `0x20` upon success, and `0x00` otherwise.\n            if iszero(returndatasize()) {\n                mstore(0x00, 0x8baa579f) // `InvalidSignature()`.\n                revert(0x1c, 0x04)\n            }\n            mstore(0x60, 0) // Restore the zero slot.\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                   TRY-RECOVER OPERATIONS                   */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    // WARNING!\n    // These functions will NOT revert upon recovery failure.\n    // Instead, they will return the zero address upon recovery failure.\n    // It is critical that the returned address is NEVER compared against\n    // a zero address (e.g. an uninitialized address variable).\n\n    /// @dev Recovers the signer's address from a message digest `hash`, and the `signature`.\n    function tryRecover(bytes32 hash, bytes memory signature)\n        internal\n        view\n        returns (address result)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := 1\n            let m := mload(0x40) // Cache the free memory pointer.\n            for {} 1 {} {\n                mstore(0x00, hash)\n                mstore(0x40, mload(add(signature, 0x20))) // `r`.\n                if eq(mload(signature), 64) {\n                    let vs := mload(add(signature, 0x40))\n                    mstore(0x20, add(shr(255, vs), 27)) // `v`.\n                    mstore(0x60, shr(1, shl(1, vs))) // `s`.\n                    break\n                }\n                if eq(mload(signature), 65) {\n                    mstore(0x20, byte(0, mload(add(signature, 0x60)))) // `v`.\n                    mstore(0x60, mload(add(signature, 0x40))) // `s`.\n                    break\n                }\n                result := 0\n                break\n            }\n            pop(\n                staticcall(\n                    gas(), // Amount of gas left for the transaction.\n                    result, // Address of `ecrecover`.\n                    0x00, // Start of input.\n                    0x80, // Size of input.\n                    0x40, // Start of output.\n                    0x20 // Size of output.\n                )\n            )\n            mstore(0x60, 0) // Restore the zero slot.\n            // `returndatasize()` will be `0x20` upon success, and `0x00` otherwise.\n            result := mload(xor(0x60, returndatasize()))\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Recovers the signer's address from a message digest `hash`, and the `signature`.\n    function tryRecoverCalldata(bytes32 hash, bytes calldata signature)\n        internal\n        view\n        returns (address result)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := 1\n            let m := mload(0x40) // Cache the free memory pointer.\n            mstore(0x00, hash)\n            for {} 1 {} {\n                if eq(signature.length, 64) {\n                    let vs := calldataload(add(signature.offset, 0x20))\n                    mstore(0x20, add(shr(255, vs), 27)) // `v`.\n                    mstore(0x40, calldataload(signature.offset)) // `r`.\n                    mstore(0x60, shr(1, shl(1, vs))) // `s`.\n                    break\n                }\n                if eq(signature.length, 65) {\n                    mstore(0x20, byte(0, calldataload(add(signature.offset, 0x40)))) // `v`.\n                    calldatacopy(0x40, signature.offset, 0x40) // Copy `r` and `s`.\n                    break\n                }\n                result := 0\n                break\n            }\n            pop(\n                staticcall(\n                    gas(), // Amount of gas left for the transaction.\n                    result, // Address of `ecrecover`.\n                    0x00, // Start of input.\n                    0x80, // Size of input.\n                    0x40, // Start of output.\n                    0x20 // Size of output.\n                )\n            )\n            mstore(0x60, 0) // Restore the zero slot.\n            // `returndatasize()` will be `0x20` upon success, and `0x00` otherwise.\n            result := mload(xor(0x60, returndatasize()))\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Recovers the signer's address from a message digest `hash`,\n    /// and the EIP-2098 short form signature defined by `r` and `vs`.\n    function tryRecover(bytes32 hash, bytes32 r, bytes32 vs)\n        internal\n        view\n        returns (address result)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n            mstore(0x00, hash)\n            mstore(0x20, add(shr(255, vs), 27)) // `v`.\n            mstore(0x40, r)\n            mstore(0x60, shr(1, shl(1, vs))) // `s`.\n            pop(\n                staticcall(\n                    gas(), // Amount of gas left for the transaction.\n                    1, // Address of `ecrecover`.\n                    0x00, // Start of input.\n                    0x80, // Size of input.\n                    0x40, // Start of output.\n                    0x20 // Size of output.\n                )\n            )\n            mstore(0x60, 0) // Restore the zero slot.\n            // `returndatasize()` will be `0x20` upon success, and `0x00` otherwise.\n            result := mload(xor(0x60, returndatasize()))\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /// @dev Recovers the signer's address from a message digest `hash`,\n    /// and the signature defined by `v`, `r`, `s`.\n    function tryRecover(bytes32 hash, uint8 v, bytes32 r, bytes32 s)\n        internal\n        view\n        returns (address result)\n    {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let m := mload(0x40) // Cache the free memory pointer.\n            mstore(0x00, hash)\n            mstore(0x20, and(v, 0xff))\n            mstore(0x40, r)\n            mstore(0x60, s)\n            pop(\n                staticcall(\n                    gas(), // Amount of gas left for the transaction.\n                    1, // Address of `ecrecover`.\n                    0x00, // Start of input.\n                    0x80, // Size of input.\n                    0x40, // Start of output.\n                    0x20 // Size of output.\n                )\n            )\n            mstore(0x60, 0) // Restore the zero slot.\n            // `returndatasize()` will be `0x20` upon success, and `0x00` otherwise.\n            result := mload(xor(0x60, returndatasize()))\n            mstore(0x40, m) // Restore the free memory pointer.\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                     HASHING OPERATIONS                     */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns an Ethereum Signed Message, created from a `hash`.\n    /// This produces a hash corresponding to the one signed with the\n    /// [`eth_sign`](https://eth.wiki/json-rpc/API#eth_sign)\n    /// JSON-RPC method as part of EIP-191.\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x20, hash) // Store into scratch space for keccak256.\n            mstore(0x00, \"\\x00\\x00\\x00\\x00\\x19Ethereum Signed Message:\\n32\") // 28 bytes.\n            result := keccak256(0x04, 0x3c) // `32 * 2 - (32 - 28) = 60 = 0x3c`.\n        }\n    }\n\n    /// @dev Returns an Ethereum Signed Message, created from `s`.\n    /// This produces a hash corresponding to the one signed with the\n    /// [`eth_sign`](https://eth.wiki/json-rpc/API#eth_sign)\n    /// JSON-RPC method as part of EIP-191.\n    /// Note: Supports lengths of `s` up to 999999 bytes.\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32 result) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let sLength := mload(s)\n            let o := 0x20\n            mstore(o, \"\\x19Ethereum Signed Message:\\n\") // 26 bytes, zero-right-padded.\n            mstore(0x00, 0x00)\n            // Convert the `s.length` to ASCII decimal representation: `base10(s.length)`.\n            for { let temp := sLength } 1 {} {\n                o := sub(o, 1)\n                mstore8(o, add(48, mod(temp, 10)))\n                temp := div(temp, 10)\n                if iszero(temp) { break }\n            }\n            let n := sub(0x3a, o) // Header length: `26 + 32 - o`.\n            // Throw an out-of-offset error (consumes all gas) if the header exceeds 32 bytes.\n            returndatacopy(returndatasize(), returndatasize(), gt(n, 0x20))\n            mstore(s, or(mload(0x00), mload(n))) // Temporarily store the header.\n            result := keccak256(add(s, sub(0x20, n)), add(n, sLength))\n            mstore(s, sLength) // Restore the length.\n        }\n    }\n\n    /*´:°•.°+.*•´.*:˚.°*.˚•´.°:°•.°•.*•´.*:˚.°*.˚•´.°:°•.°+.*•´.*:*/\n    /*                   EMPTY CALLDATA HELPERS                   */\n    /*.•°:°.´+˚.*°.˚:*.´•*.+°.•°:´*.´•*.•°.•°:°.´:•˚°.*°.˚:*.´+°.•*/\n\n    /// @dev Returns an empty calldata bytes.\n    function emptySignature() internal pure returns (bytes calldata signature) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            signature.length := 0\n        }\n    }\n}\n"
			},
			"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\n\n/// @notice This implementation is a copy of OpenZeppelin's with the following changes:\n/// - Pragma updated\n/// - Imports updated\n/// - Constructor removed\n/// - Allows admin to call implementation\n\npragma solidity ^0.8.19;\n\nimport \"./ERC1967Proxy.sol\";\n\n/**\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n * include them in the ABI so this interface must be used to interact with it.\n */\ninterface ITransparentUpgradeableProxy is IERC1967 {\n    function admin() external view returns (address);\n\n    function implementation() external view returns (address);\n\n    function changeAdmin(address) external;\n\n    function upgradeTo(address) external;\n\n    function upgradeToAndCall(address, bytes memory) external payable;\n}\n\n/**\n * @dev This contract implements a proxy that is upgradeable by an admin.\n *\n * Unlike the original OpenZeppelin implementation, this contract does not prevent the admin from calling the implementation.\n * This potentially exposes the admin to a proxy selector attack. See\n * https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing].\n * When using this contract, you must ensure that the implementation function selectors do not clash with the proxy selectors.\n * The proxy selectors are:\n * - 0x3659cfe6: upgradeTo\n * - 0x4f1ef286: upgradeToAndCall\n * - 0x8f283970: changeAdmin\n * - 0xf851a440: admin\n * - 0x5c60da1b: implementation\n *\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n * implementation.\n *\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    /**\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n     *\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\n     * implementation provides a function with the same selector.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _getAdmin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\n     */\n    function _fallback() internal virtual override {\n        if (msg.sender == _getAdmin()) {\n            bytes memory ret;\n            bytes4 selector = msg.sig;\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\n                ret = _dispatchUpgradeTo();\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\n                ret = _dispatchUpgradeToAndCall();\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\n                ret = _dispatchChangeAdmin();\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\n                ret = _dispatchAdmin();\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\n                ret = _dispatchImplementation();\n            } else {\n                // Call implementation\n                return super._fallback();\n            }\n            assembly {\n                return(add(ret, 0x20), mload(ret))\n            }\n        } else {\n            super._fallback();\n        }\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function _dispatchAdmin() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address admin = _getAdmin();\n        return abi.encode(admin);\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _dispatchImplementation() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address implementation = _implementation();\n        return abi.encode(implementation);\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _dispatchChangeAdmin() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address newAdmin = abi.decode(msg.data[4:], (address));\n        _changeAdmin(newAdmin);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy.\n     */\n    function _dispatchUpgradeTo() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address newImplementation = abi.decode(msg.data[4:], (address));\n        _upgradeToAndCall(newImplementation, bytes(\"\"), false);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n     * proxied contract.\n     */\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\n        _upgradeToAndCall(newImplementation, data, true);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\n     */\n    function _admin() internal view virtual returns (address) {\n        return _getAdmin();\n    }\n\n    /**\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\n     */\n    function _requireZeroValue() internal {\n        require(msg.value == 0);\n    }\n}\n"
			},
			"src/proxies/openzeppelin/BeaconProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/beacon/BeaconProxy.sol)\n\n// Note: This implementation is an exact copy with the constructor removed, and pragma and imports updated.\n\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\";\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n *\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n * conflict with the storage layout of the implementation behind the proxy.\n *\n * _Available since v3.4._\n */\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Returns the current beacon address.\n     */\n    function _beacon() internal view virtual returns (address) {\n        return _getBeacon();\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract.\n     * - The implementation returned by `beacon` must be a contract.\n     */\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.1;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\r\n */\r\ninterface IBeacon {\r\n    /**\r\n     * @dev Must return an address that can be used as a delegate call target.\r\n     *\r\n     * {BeaconProxy} will check that this address is a contract.\r\n     */\r\n    function implementation() external view returns (address);\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"src/proxies/openzeppelin/ERC1967Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\n// Note: This implementation is an exact copy with the constructor removed, and pragma and imports updated.\n\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\r\n\r\npragma solidity ^0.8.2;\r\n\r\nimport \"../beacon/IBeacon.sol\";\r\nimport \"../../interfaces/IERC1967.sol\";\r\nimport \"../../interfaces/draft-IERC1822.sol\";\r\nimport \"../../utils/Address.sol\";\r\nimport \"../../utils/StorageSlot.sol\";\r\n\r\n/**\r\n * @dev This abstract contract provides getters and event emitting update functions for\r\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\r\n *\r\n * _Available since v4.1._\r\n */\r\nabstract contract ERC1967Upgrade is IERC1967 {\r\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\r\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\r\n\r\n    /**\r\n     * @dev Storage slot with the address of the current implementation.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function _getImplementation() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 implementation slot.\r\n     */\r\n    function _setImplementation(address newImplementation) private {\r\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\r\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n    }\r\n\r\n    /**\r\n     * @dev Perform implementation upgrade\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeTo(address newImplementation) internal {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Perform implementation upgrade with additional setup call.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\r\n        _upgradeTo(newImplementation);\r\n        if (data.length > 0 || forceCall) {\r\n            Address.functionDelegateCall(newImplementation, data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\r\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\r\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\r\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\r\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\r\n            _setImplementation(newImplementation);\r\n        } else {\r\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\r\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\r\n            } catch {\r\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\r\n            }\r\n            _upgradeToAndCall(newImplementation, data, forceCall);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Storage slot with the admin of the contract.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\r\n\r\n    /**\r\n     * @dev Returns the current admin.\r\n     */\r\n    function _getAdmin() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 admin slot.\r\n     */\r\n    function _setAdmin(address newAdmin) private {\r\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\r\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the admin of the proxy.\r\n     *\r\n     * Emits an {AdminChanged} event.\r\n     */\r\n    function _changeAdmin(address newAdmin) internal {\r\n        emit AdminChanged(_getAdmin(), newAdmin);\r\n        _setAdmin(newAdmin);\r\n    }\r\n\r\n    /**\r\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\r\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\r\n     */\r\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\r\n\r\n    /**\r\n     * @dev Returns the current beacon.\r\n     */\r\n    function _getBeacon() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\r\n     */\r\n    function _setBeacon(address newBeacon) private {\r\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\r\n        require(\r\n            Address.isContract(IBeacon(newBeacon).implementation()),\r\n            \"ERC1967: beacon implementation is not a contract\"\r\n        );\r\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\r\n    }\r\n\r\n    /**\r\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\r\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\r\n     *\r\n     * Emits a {BeaconUpgraded} event.\r\n     */\r\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\r\n        _setBeacon(newBeacon);\r\n        emit BeaconUpgraded(newBeacon);\r\n        if (data.length > 0 || forceCall) {\r\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\r\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\r\n * be specified by overriding the virtual {_implementation} function.\r\n *\r\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\r\n * different contract through the {_delegate} function.\r\n *\r\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\r\n */\r\nabstract contract Proxy {\r\n    /**\r\n     * @dev Delegates the current call to `implementation`.\r\n     *\r\n     * This function does not return to its internal call site, it will return directly to the external caller.\r\n     */\r\n    function _delegate(address implementation) internal virtual {\r\n        assembly {\r\n            // Copy msg.data. We take full control of memory in this inline assembly\r\n            // block because it will not return to Solidity code. We overwrite the\r\n            // Solidity scratch pad at memory position 0.\r\n            calldatacopy(0, 0, calldatasize())\r\n\r\n            // Call the implementation.\r\n            // out and outsize are 0 because we don't know the size yet.\r\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\r\n\r\n            // Copy the returned data.\r\n            returndatacopy(0, 0, returndatasize())\r\n\r\n            switch result\r\n            // delegatecall returns 0 on error.\r\n            case 0 {\r\n                revert(0, returndatasize())\r\n            }\r\n            default {\r\n                return(0, returndatasize())\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\r\n     * and {_fallback} should delegate.\r\n     */\r\n    function _implementation() internal view virtual returns (address);\r\n\r\n    /**\r\n     * @dev Delegates the current call to the address returned by `_implementation()`.\r\n     *\r\n     * This function does not return to its internal call site, it will return directly to the external caller.\r\n     */\r\n    function _fallback() internal virtual {\r\n        _beforeFallback();\r\n        _delegate(_implementation());\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\r\n     * function in the contract matches the call data.\r\n     */\r\n    fallback() external payable virtual {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\r\n     * is empty.\r\n     */\r\n    receive() external payable virtual {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\r\n     * call, or as part of the Solidity `fallback` or `receive` functions.\r\n     *\r\n     * If overridden should call `super._beforeFallback()`.\r\n     */\r\n    function _beforeFallback() internal virtual {}\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\r\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for reading and writing primitive types to specific storage slots.\r\n *\r\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\r\n * This library helps with reading and writing to such slots without the need for inline assembly.\r\n *\r\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\r\n *\r\n * Example usage to set ERC1967 implementation slot:\r\n * ```solidity\r\n * contract ERC1967 {\r\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n *\r\n *     function _getImplementation() internal view returns (address) {\r\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n *     }\r\n *\r\n *     function _setImplementation(address newImplementation) internal {\r\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\r\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\r\n * _Available since v4.9 for `string`, `bytes`._\r\n */\r\nlibrary StorageSlot {\r\n    struct AddressSlot {\r\n        address value;\r\n    }\r\n\r\n    struct BooleanSlot {\r\n        bool value;\r\n    }\r\n\r\n    struct Bytes32Slot {\r\n        bytes32 value;\r\n    }\r\n\r\n    struct Uint256Slot {\r\n        uint256 value;\r\n    }\r\n\r\n    struct StringSlot {\r\n        string value;\r\n    }\r\n\r\n    struct BytesSlot {\r\n        bytes value;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\r\n     */\r\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\r\n     */\r\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\r\n     */\r\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\r\n     */\r\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\r\n     */\r\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\r\n     */\r\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\r\n * proxy whose upgrades are fully controlled by the current implementation.\r\n */\r\ninterface IERC1822Proxiable {\r\n    /**\r\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\r\n     * address.\r\n     *\r\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\r\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\r\n     * function revert if invoked through a proxy.\r\n     */\r\n    function proxiableUUID() external view returns (bytes32);\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\r\n *\r\n * _Available since v4.8.3._\r\n */\r\ninterface IERC1967 {\r\n    /**\r\n     * @dev Emitted when the implementation is upgraded.\r\n     */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n     * @dev Emitted when the admin account has changed.\r\n     */\r\n    event AdminChanged(address previousAdmin, address newAdmin);\r\n\r\n    /**\r\n     * @dev Emitted when the beacon is changed.\r\n     */\r\n    event BeaconUpgraded(address indexed beacon);\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOperator",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "MUST emit when an approval is updated"
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID   To broadcast the existence of multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0"
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID   To broadcast the existence of a token ID with no initial balance, the contract SHOULD emit the TransferSingle event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0"
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"params": {
									"_id": "ID of the Token",
									"_owner": "The address of the token holder"
								},
								"returns": {
									"_0": "The _owner's balance of the Token type requested"
								}
							},
							"balanceOfBatch(address[],uint256[])": {
								"params": {
									"_ids": "ID of the Tokens",
									"_owners": "The addresses of the token holders"
								},
								"returns": {
									"_0": "The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "Address of authorized operator",
									"_owner": "The owner of the Tokens"
								},
								"returns": {
									"isOperator": "True if the operator is approved, false if not"
								}
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "MUST emit TransferBatch event on success Caller must be approved to manage the _from account's tokens (see isApprovedForAll) MUST throw if `_to` is the zero address MUST throw if length of `_ids` is not the same as length of `_amounts` MUST throw if any of the balance of sender for token `_ids` is lower than the respective `_amounts` sent MUST throw on any other error When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155BatchReceived` on `_to` and revert if the return amount is not `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` Transfers and events MUST occur in the array order they were submitted (_ids[0] before _ids[1], etc)",
								"params": {
									"_amounts": "Transfer amounts per token type",
									"_data": "Additional data with no specified format, sent in call to `_to`",
									"_from": "Source addresses",
									"_ids": "IDs of each token type",
									"_to": "Target addresses"
								}
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "MUST emit TransferSingle event on success Caller must be approved to manage the _from account's tokens (see isApprovedForAll) MUST throw if `_to` is the zero address MUST throw if balance of sender for token `_id` is lower than the `_amount` sent MUST throw on any other error When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155Received` on `_to` and revert if the return amount is not `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`",
								"params": {
									"_amount": "Transfered amount",
									"_data": "Additional data with no specified format, sent in call to `_to`",
									"_from": "Source address",
									"_id": "ID of the token type",
									"_to": "Target address"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "MUST emit the ApprovalForAll event on success",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas",
								"params": {
									"_interfaceId": "The interface identifier, as specified in ERC-165"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"MUST emit when an approval is updated\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \\\"circulating supply\\\" for a given token ID   To broadcast the existence of multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \\\"circulating supply\\\" for a given token ID   To broadcast the existence of a token ID with no initial balance, the contract SHOULD emit the TransferSingle event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"_id\":\"ID of the Token\",\"_owner\":\"The address of the token holder\"},\"returns\":{\"_0\":\"The _owner's balance of the Token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"params\":{\"_ids\":\"ID of the Tokens\",\"_owners\":\"The addresses of the token holders\"},\"returns\":{\"_0\":\"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"Address of authorized operator\",\"_owner\":\"The owner of the Tokens\"},\"returns\":{\"isOperator\":\"True if the operator is approved, false if not\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"MUST emit TransferBatch event on success Caller must be approved to manage the _from account's tokens (see isApprovedForAll) MUST throw if `_to` is the zero address MUST throw if length of `_ids` is not the same as length of `_amounts` MUST throw if any of the balance of sender for token `_ids` is lower than the respective `_amounts` sent MUST throw on any other error When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155BatchReceived` on `_to` and revert if the return amount is not `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` Transfers and events MUST occur in the array order they were submitted (_ids[0] before _ids[1], etc)\",\"params\":{\"_amounts\":\"Transfer amounts per token type\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source addresses\",\"_ids\":\"IDs of each token type\",\"_to\":\"Target addresses\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"MUST emit TransferSingle event on success Caller must be approved to manage the _from account's tokens (see isApprovedForAll) MUST throw if `_to` is the zero address MUST throw if balance of sender for token `_id` is lower than the `_amount` sent MUST throw on any other error When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155Received` on `_to` and revert if the return amount is not `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\",\"params\":{\"_amount\":\"Transfered amount\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source address\",\"_id\":\"ID of the token type\",\"_to\":\"Target address\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"MUST emit the ApprovalForAll event on success\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas\",\"params\":{\"_interfaceId\":\"The interface identifier, as specified in ERC-165\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens\"},\"balanceOfBatch(address[],uint256[])\":{\"notice\":\"Get the balance of multiple account/token pairs\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Send multiple types of Tokens from the _from address to the _to address (with safety call)\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Transfers amount of an _id from the _from address to the _to address specified\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of caller's tokens\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x73a4ea88c195262c79aed1a8ad6da1e599e0ebe3911a89014e410dae6debda74\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d9f63f1c107c912620de676785b876f798f1563fee4fee897d45012daf52131\",\"dweb:/ipfs/QmQTvyVSZCUYjjo95yGgQgQvKzTBhb9fRbuzKvpmP5v5aQ\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address,uint256)": {
								"notice": "Get the balance of an account's Tokens"
							},
							"balanceOfBatch(address[],uint256[])": {
								"notice": "Get the balance of multiple account/token pairs"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Queries the approval status of an operator for a given owner"
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"notice": "Send multiple types of Tokens from the _from address to the _to address (with safety call)"
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"notice": "Transfers amount of an _id from the _from address to the _to address specified"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens"
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1271Wallet.sol": {
				"IERC1271Wallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")   > This function MAY modify Ethereum's state",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signature": "Signature byte array associated with _data"
								},
								"returns": {
									"magicValue": "Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")   > This function MAY modify Ethereum's state",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signature": "Signature byte array associated with _data"
								},
								"returns": {
									"magicValue": "Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\")   > This function MAY modify Ethereum's state\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signature\":\"Signature byte array associated with _data\"},\"returns\":{\"magicValue\":\"Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\")   > This function MAY modify Ethereum's state\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signature\":\"Signature byte array associated with _data\"},\"returns\":{\"magicValue\":\"Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1271Wallet.sol\":\"IERC1271Wallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x7ff7bbcad2aa3e45b0ec97cfee3bc25a07be957b4060f87aeb75b73e09c3823a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2921978ea9b6ea7c1ba2c1704d79e02201d0fd468392a2ce129b32c071e04d7b\",\"dweb:/ipfs/QmVnnovTQ4zLWUUdJywbCbeHDtgDJ3vhUhwWo3FnM6e6yk\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							}
						},
						"version": 1
					}
				}
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas",
								"params": {
									"_interfaceId": "The interface identifier, as specified in ERC-165"
								}
							}
						},
						"title": "ERC165",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas\",\"params\":{\"_interfaceId\":\"The interface identifier, as specified in ERC-165\"}}},\"title\":\"ERC165\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3\",\"dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"UpgradeableBeacon": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.",
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation returned by the beacon is changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon."
							},
							"implementation()": {
								"details": "Returns the current implementation address."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeTo(address)": {
								"details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60803461011a57601f6105ee38819003918201601f19168301916001600160401b0383118484101761011f5780849260209460405283398101031261011a57516001600160a01b03808216919082820361011a576000549160018060a01b0319923384821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a33b156100b2575060015416176001556040516104b890816101368239f35b62461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146102ce5780635c60da1b1461027c578063715018a6146101e05780638da5cb5b1461018f5763f2fde38b1461005457600080fd5b3461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff808216809203610188576100ad610403565b8115610104578254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b80fd5b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57610217610403565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b503461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff81169081810361018857610328610403565b3b1561037f57807fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361042457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220c5471b22132cd15b928c4c1e3eecf6a636721aed3c412c5d6ea7e25407ed048464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x1F PUSH2 0x5EE CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x11F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x11A JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP3 SUB PUSH2 0x11A JUMPI PUSH1 0x0 SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP3 CALLER DUP5 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 EXTCODESIZE ISZERO PUSH2 0xB2 JUMPI POP PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP1 DUP2 PUSH2 0x136 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x188 JUMPI PUSH2 0xAD PUSH2 0x403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x104 JUMPI DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH2 0x217 PUSH2 0x403 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x188 JUMPI PUSH2 0x328 PUSH2 0x403 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x37F JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x424 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 SELFBALANCE SHL 0x22 SGT 0x2C 0xD1 JUMPDEST SWAP3 DUP13 0x4C 0x1E RETURNDATACOPY 0xEC 0xF6 0xA6 CALLDATASIZE PUSH19 0x1AED3C412C5D6EA7E25407ED048464736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "558:1545:9:-:0;;;;;;;;;;;;;-1:-1:-1;;558:1545:9;;;;-1:-1:-1;;;;;558:1545:9;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;558:1545:9;;;;;;;;;;-1:-1:-1;558:1545:9;;;;;;;;736:10:11;;558:1545:9;;;;-1:-1:-1;558:1545:9;;;736:10:11;;558:1545:9;;2646:40:3;-1:-1:-1;2646:40:3;;1746:19:10;:23;558:1545:9;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;558:1545:9;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;558:1545:9;;;;;;-1:-1:-1;558:1545:9;;;;;-1:-1:-1;558:1545:9"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"fun_checkOwner": {
									"entryPoint": 1027,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146102ce5780635c60da1b1461027c578063715018a6146101e05780638da5cb5b1461018f5763f2fde38b1461005457600080fd5b3461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff808216809203610188576100ad610403565b8115610104578254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b80fd5b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57610217610403565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b503461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff81169081810361018857610328610403565b3b1561037f57807fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361042457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220c5471b22132cd15b928c4c1e3eecf6a636721aed3c412c5d6ea7e25407ed048464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x188 JUMPI PUSH2 0xAD PUSH2 0x403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x104 JUMPI DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH2 0x217 PUSH2 0x403 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x188 JUMPI PUSH2 0x328 PUSH2 0x403 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x37F JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x424 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 SELFBALANCE SHL 0x22 SGT 0x2C 0xD1 JUMPDEST SWAP3 DUP13 0x4C 0x1E RETURNDATACOPY 0xEC 0xF6 0xA6 CALLDATASIZE PUSH19 0x1AED3C412C5D6EA7E25407ED048464736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "558:1545:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:65:3;;:::i;:::-;2231:22;;558:1545:9;;;;;;;;;;;;2646:40:3;;;;558:1545:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:65:3;;:::i;:::-;558:1545:9;;;;;;;;;;2646:40:3;;;;558:1545:9;;;;;;;;;;;;;;;;1223:15;558:1545;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:65:3;;:::i;:::-;1746:19:10;:23;558:1545:9;;;;2057:35;558:1545;;;2057:35;558:1545;1652:27;;;;558:1545;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1408:132:3;558:1545:9;1316:6:3;558:1545:9;;736:10:11;1472:23:3;558:1545:9;;1408:132:3:o;558:1545:9:-;;;;;;;;;;;;;;;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation returned by the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon.\"},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":\"UpgradeableBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3\",\"dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x96d52f844533def4977d87f5b21e2352a27d8796ea9bf11a4a44691cae275de8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad7f20ead8ceb4bde382271d7303432d514dde18173ffee542a66509227f1740\",\"dweb:/ipfs/QmWR6DmXsF3BTnaSLcA87aepLXHqM4MwdeRi9SvnWwfxKw\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203cb02f9305ba07739a9a36e45063afc207fc672f897ab4991b273ba65fbe5bc464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xB0 0x2F SWAP4 SDIV 0xBA SMOD PUSH20 0x9A9A36E45063AFC207FC672F897AB4991B273BA6 0x5F 0xBE JUMPDEST 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "202:9404:10:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212203cb02f9305ba07739a9a36e45063afc207fc672f897ab4991b273ba65fbe5bc464736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xB0 0x2F SWAP4 SDIV 0xBA SMOD PUSH20 0x9A9A36E45063AFC207FC672F897AB4991B273BA6 0x5F 0xBE JUMPDEST 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "202:9404:10:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/Create2.sol": {
				"Create2": {
					"abi": [],
					"devdoc": {
						"details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a9e8910e61f3742edb84b0ff1930f29d954269e3bc68fc9051e07835ea151c0364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xE8 SWAP2 0xE PUSH2 0xF374 0x2E 0xDB DUP5 0xB0 SELFDESTRUCT NOT ADDRESS CALLCODE SWAP14 SWAP6 TIMESTAMP PUSH10 0xE3BC68FC9051E07835EA ISZERO SHR SUB PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "508:3517:12:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220a9e8910e61f3742edb84b0ff1930f29d954269e3bc68fc9051e07835ea151c0364736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xE8 SWAP2 0xE PUSH2 0xF374 0x2E 0xDB DUP5 0xB0 SELFDESTRUCT NOT ADDRESS CALLCODE SWAP14 SWAP6 TIMESTAMP PUSH10 0xE3BC68FC9051E07835EA ISZERO SHR SUB PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "508:3517:12:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xff39e9a09fe168b6247c2f655cc9fede97483c9afc0956a0aa6b5dfdaac2eead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb53ed588b2f49728d4e41c1ff082d0e92221a76ce81aca0aaa627856ed6f4fb\",\"dweb:/ipfs/QmV8vkSqXZ3DMZB9n4nzV6QNnAsxAH4kCqZRnXJt3iEXMp\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122025c25c5c2424e45121016ec567fc87a2bb4588ee0355f5bfb00813a4d69141a364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xC2 0x5C 0x5C 0x24 0x24 0xE4 MLOAD 0x21 ADD PUSH15 0xC567FC87A2BB4588EE0355F5BFB008 SGT LOG4 0xD6 SWAP2 COINBASE LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1453:2789:13:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea264697066735822122025c25c5c2424e45121016ec567fc87a2bb4588ee0355f5bfb00813a4d69141a364736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xC2 0x5C 0x5C 0x24 0x24 0xE4 MLOAD 0x21 ADD PUSH15 0xC567FC87A2BB4588EE0355F5BFB008 SGT LOG4 0xD6 SWAP2 COINBASE LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1453:2789:13:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/solady/src/utils/ECDSA.sol": {
				"ECDSA": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidSignature",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "Solady (https://github.com/vectorized/solady/blob/main/src/utils/ECDSA.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/ECDSA.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol)",
						"details": "Note: - The recovery functions use the ecrecover precompile (0x1). - As of Solady version 0.0.68, the `recover` variants will revert upon recovery failure.   This is for more safety by default.   Use the `tryRecover` variants if you need to get the zero address back   upon recovery failure instead. - As of Solady version 0.0.134, all `bytes signature` variants accept both   regular 65-byte `(r, s, v)` and EIP-2098 `(r, vs)` short form signatures.   See: https://eips.ethereum.org/EIPS/eip-2098   This is for calldata efficiency on smart accounts prevalent on L2s. WARNING! Do NOT use signatures as unique identifiers: - Use a nonce in the digest to prevent replay attacks on the same contract. - Use EIP-712 for the digest to prevent replay attacks across different chains and contracts.   EIP-712 also enables readable signing of typed data for better user safety. This implementation does NOT check if a signature is non-malleable.",
						"errors": {
							"InvalidSignature()": [
								{
									"details": "The signature is invalid."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220168f0afcd6f845695c2d19102b90715f4fa95ec43c5534927fa1556e5a8a431a64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND DUP16 EXP 0xFC 0xD6 0xF8 GASLIMIT PUSH10 0x5C2D19102B90715F4FA9 0x5E 0xC4 EXTCODECOPY SSTORE CALLVALUE SWAP3 PUSH32 0xA1556E5A8A431A64736F6C634300081300330000000000000000000000000000 ",
							"sourceMap": "1453:16549:14:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220168f0afcd6f845695c2d19102b90715f4fa95ec43c5534927fa1556e5a8a431a64736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND DUP16 EXP 0xFC 0xD6 0xF8 GASLIMIT PUSH10 0x5C2D19102B90715F4FA9 0x5E 0xC4 EXTCODECOPY SSTORE CALLVALUE SWAP3 PUSH32 0xA1556E5A8A431A64736F6C634300081300330000000000000000000000000000 ",
							"sourceMap": "1453:16549:14:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/utils/ECDSA.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/ECDSA.sol)Modified from OpenZeppelin (https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/cryptography/ECDSA.sol)\",\"details\":\"Note: - The recovery functions use the ecrecover precompile (0x1). - As of Solady version 0.0.68, the `recover` variants will revert upon recovery failure.   This is for more safety by default.   Use the `tryRecover` variants if you need to get the zero address back   upon recovery failure instead. - As of Solady version 0.0.134, all `bytes signature` variants accept both   regular 65-byte `(r, s, v)` and EIP-2098 `(r, vs)` short form signatures.   See: https://eips.ethereum.org/EIPS/eip-2098   This is for calldata efficiency on smart accounts prevalent on L2s. WARNING! Do NOT use signatures as unique identifiers: - Use a nonce in the digest to prevent replay attacks on the same contract. - Use EIP-712 for the digest to prevent replay attacks across different chains and contracts.   EIP-712 also enables readable signing of typed data for better user safety. This implementation does NOT check if a signature is non-malleable.\",\"errors\":{\"InvalidSignature()\":[{\"details\":\"The signature is invalid.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Gas optimized ECDSA wrapper.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solady/src/utils/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/solady/src/utils/ECDSA.sol\":{\"keccak256\":\"0x317f8208d1f03356e8f709eec8e2c579d6be227099a26f777cc9ec8a06814ae4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f437b1683add465da31ecc92259d056d11edb4ea95dff22a8519fdabd82423dc\",\"dweb:/ipfs/QmbsFH26DQtnb97yqfF6Bw7CULFXupcra1x1xcq2Yy63FY\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Gas optimized ECDSA wrapper.",
						"version": 1
					}
				}
			},
			"lib/solady/src/utils/SafeTransferLib.sol": {
				"SafeTransferLib": {
					"abi": [
						{
							"inputs": [],
							"name": "ApproveFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ETHTransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Permit2AmountOverflow",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Permit2Failed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromFailed",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)Permit2 operations from (https://github.com/Uniswap/permit2/blob/main/src/libraries/Permit2Lib.sol)",
						"details": "Note: - For ETH transfers, please use `forceSafeTransferETH` for DoS protection. - For ERC20s, this implementation won't check that a token has code,   responsibility is delegated to the caller.",
						"errors": {
							"ApproveFailed()": [
								{
									"details": "The ERC20 `approve` has failed."
								}
							],
							"ETHTransferFailed()": [
								{
									"details": "The ETH transfer has failed."
								}
							],
							"Permit2AmountOverflow()": [
								{
									"details": "The Permit2 amount must be less than `2**160 - 1`."
								}
							],
							"Permit2Failed()": [
								{
									"details": "The Permit2 operation has failed."
								}
							],
							"TransferFailed()": [
								{
									"details": "The ERC20 `transfer` has failed."
								}
							],
							"TransferFromFailed()": [
								{
									"details": "The ERC20 `transferFrom` has failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"DAI_DOMAIN_SEPARATOR": {
								"details": "The unique EIP-712 domain domain separator for the DAI token contract."
							},
							"GAS_STIPEND_NO_GRIEF": {
								"details": "Suggested gas stipend for contract receiving ETH to perform a few storage reads and writes, but low enough to prevent griefing."
							},
							"GAS_STIPEND_NO_STORAGE_WRITES": {
								"details": "Suggested gas stipend for contract receiving ETH that disallows any storage writes."
							},
							"PERMIT2": {
								"details": "The canonical Permit2 address. [Github](https://github.com/Uniswap/permit2) [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)"
							},
							"WETH9": {
								"details": "The address for the WETH9 contract on Ethereum mainnet."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220dc80f50c196d260f412d31d639cef180a3b45d85a5a356c46b3ab9063246f2f164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP1 CREATE2 0xC NOT PUSH14 0x260F412D31D639CEF180A3B45D85 0xA5 LOG3 JUMP 0xC4 PUSH12 0x3AB9063246F2F164736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "701:25833:15:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220dc80f50c196d260f412d31d639cef180a3b45d85a5a356c46b3ab9063246f2f164736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP1 CREATE2 0xC NOT PUSH14 0x260F412D31D639CEF180A3B45D85 0xA5 LOG3 JUMP 0xC4 PUSH12 0x3AB9063246F2F164736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "701:25833:15:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApproveFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ETHTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permit2AmountOverflow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Permit2Failed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromFailed\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"Solady (https://github.com/vectorized/solady/blob/main/src/utils/SafeTransferLib.sol)Modified from Solmate (https://github.com/transmissions11/solmate/blob/main/src/utils/SafeTransferLib.sol)Permit2 operations from (https://github.com/Uniswap/permit2/blob/main/src/libraries/Permit2Lib.sol)\",\"details\":\"Note: - For ETH transfers, please use `forceSafeTransferETH` for DoS protection. - For ERC20s, this implementation won't check that a token has code,   responsibility is delegated to the caller.\",\"errors\":{\"ApproveFailed()\":[{\"details\":\"The ERC20 `approve` has failed.\"}],\"ETHTransferFailed()\":[{\"details\":\"The ETH transfer has failed.\"}],\"Permit2AmountOverflow()\":[{\"details\":\"The Permit2 amount must be less than `2**160 - 1`.\"}],\"Permit2Failed()\":[{\"details\":\"The Permit2 operation has failed.\"}],\"TransferFailed()\":[{\"details\":\"The ERC20 `transfer` has failed.\"}],\"TransferFromFailed()\":[{\"details\":\"The ERC20 `transferFrom` has failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"DAI_DOMAIN_SEPARATOR\":{\"details\":\"The unique EIP-712 domain domain separator for the DAI token contract.\"},\"GAS_STIPEND_NO_GRIEF\":{\"details\":\"Suggested gas stipend for contract receiving ETH to perform a few storage reads and writes, but low enough to prevent griefing.\"},\"GAS_STIPEND_NO_STORAGE_WRITES\":{\"details\":\"Suggested gas stipend for contract receiving ETH that disallows any storage writes.\"},\"PERMIT2\":{\"details\":\"The canonical Permit2 address. [Github](https://github.com/Uniswap/permit2) [Etherscan](https://etherscan.io/address/0x000000000022D473030F116dDEE9F6B43aC78BA3)\"},\"WETH9\":{\"details\":\"The address for the WETH9 contract on Ethereum mainnet.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Safe ETH and ERC20 transfer library that gracefully handles missing return values.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/solady/src/utils/SafeTransferLib.sol\":\"SafeTransferLib\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x583f47701d9b47bb3ef80fcabbbd62fbb58a01733b7a57e19658b4b02468883a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2523bfac005e21ef9963fdb3c08b2c61824e2b5ce2f53d1a1828b01ed995217c\",\"dweb:/ipfs/QmbBjVG9tZyeZSQH4m5GUzNBwo2iuvLoZYbmhT4gxnJc4J\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Safe ETH and ERC20 transfer library that gracefully handles missing return values.",
						"version": 1
					}
				}
			},
			"src/payments/IPayments.sol": {
				"IPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "ChainedCallFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTokenTransfer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PaymentAlreadyAccepted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PaymentExpired",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "productRecipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purchaseId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "productId",
									"type": "string"
								}
							],
							"name": "PaymentMade",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "chainedCallAddress",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "chainedCallData",
											"type": "bytes"
										}
									],
									"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
									"name": "chainedCallDetails",
									"type": "tuple"
								}
							],
							"name": "hashChainedCallDetails",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "callHash",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "purchaseId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "productRecipient",
											"type": "address"
										},
										{
											"internalType": "enum IPaymentsFunctions.TokenType",
											"name": "tokenType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "tokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct IPaymentsFunctions.PaymentRecipient[]",
											"name": "paymentRecipients",
											"type": "tuple[]"
										},
										{
											"internalType": "uint64",
											"name": "expiration",
											"type": "uint64"
										},
										{
											"internalType": "string",
											"name": "productId",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "chainedCallAddress",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "chainedCallData",
													"type": "bytes"
												}
											],
											"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
											"name": "chainedCallDetails",
											"type": "tuple"
										}
									],
									"internalType": "struct IPaymentsFunctions.PaymentDetails",
									"name": "paymentDetails",
									"type": "tuple"
								}
							],
							"name": "hashPaymentDetails",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "paymentHash",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "chainedCallAddress",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "chainedCallData",
											"type": "bytes"
										}
									],
									"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
									"name": "chainedCallDetails",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidChainedCallSignature",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "purchaseId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "productRecipient",
											"type": "address"
										},
										{
											"internalType": "enum IPaymentsFunctions.TokenType",
											"name": "tokenType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "tokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct IPaymentsFunctions.PaymentRecipient[]",
											"name": "paymentRecipients",
											"type": "tuple[]"
										},
										{
											"internalType": "uint64",
											"name": "expiration",
											"type": "uint64"
										},
										{
											"internalType": "string",
											"name": "productId",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "chainedCallAddress",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "chainedCallData",
													"type": "bytes"
												}
											],
											"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
											"name": "chainedCallDetails",
											"type": "tuple"
										}
									],
									"internalType": "struct IPaymentsFunctions.PaymentDetails",
									"name": "paymentDetails",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidPaymentSignature",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "purchaseId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "productRecipient",
											"type": "address"
										},
										{
											"internalType": "enum IPaymentsFunctions.TokenType",
											"name": "tokenType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "tokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct IPaymentsFunctions.PaymentRecipient[]",
											"name": "paymentRecipients",
											"type": "tuple[]"
										},
										{
											"internalType": "uint64",
											"name": "expiration",
											"type": "uint64"
										},
										{
											"internalType": "string",
											"name": "productId",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "chainedCallAddress",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "chainedCallData",
													"type": "bytes"
												}
											],
											"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
											"name": "chainedCallDetails",
											"type": "tuple"
										}
									],
									"internalType": "struct IPaymentsFunctions.PaymentDetails",
									"name": "paymentDetails",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "makePayment",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "purchaseId",
									"type": "uint256"
								}
							],
							"name": "paymentAccepted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "chainedCallAddress",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "chainedCallData",
											"type": "bytes"
										}
									],
									"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
									"name": "chainedCallDetails",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "performChainedCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"hashChainedCallDetails((address,bytes))": {
								"params": {
									"chainedCallDetails": "The chained call details."
								},
								"returns": {
									"callHash": "The hash of the chained call for signing."
								}
							},
							"hashPaymentDetails((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)))": {
								"params": {
									"paymentDetails": "The payment details."
								},
								"returns": {
									"paymentHash": "The hash of the payment details for signing."
								}
							},
							"isValidChainedCallSignature((address,bytes),bytes)": {
								"params": {
									"chainedCallDetails": "The chained call details.",
									"signature": "The signature of the chained call."
								},
								"returns": {
									"isValid": "True if the signature is valid."
								}
							},
							"isValidPaymentSignature((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)": {
								"params": {
									"paymentDetails": "The payment details.",
									"signature": "The signature of the payment."
								},
								"returns": {
									"isValid": "True if the signature is valid."
								}
							},
							"makePayment((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)": {
								"params": {
									"paymentDetails": "The payment details.",
									"signature": "The signature of the payment."
								}
							},
							"paymentAccepted(uint256)": {
								"params": {
									"purchaseId": "The ID of the purchase."
								},
								"returns": {
									"_0": "accepted True if the payment has been accepted."
								}
							},
							"performChainedCall((address,bytes),bytes)": {
								"details": "This is called when a payment is accepted off/cross chain.",
								"params": {
									"chainedCallDetails": "The chained call details.",
									"signature": "The signature of the chained call."
								}
							},
							"signer()": {
								"returns": {
									"_0": "signer The signer address."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ChainedCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PaymentAlreadyAccepted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PaymentExpired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"productRecipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"PaymentMade\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"}],\"name\":\"hashChainedCallDetails\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"callHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"productRecipient\",\"type\":\"address\"},{\"internalType\":\"enum IPaymentsFunctions.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentRecipient[]\",\"name\":\"paymentRecipients\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"expiration\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentDetails\",\"name\":\"paymentDetails\",\"type\":\"tuple\"}],\"name\":\"hashPaymentDetails\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidChainedCallSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"productRecipient\",\"type\":\"address\"},{\"internalType\":\"enum IPaymentsFunctions.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentRecipient[]\",\"name\":\"paymentRecipients\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"expiration\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentDetails\",\"name\":\"paymentDetails\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidPaymentSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"productRecipient\",\"type\":\"address\"},{\"internalType\":\"enum IPaymentsFunctions.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentRecipient[]\",\"name\":\"paymentRecipients\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"expiration\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentDetails\",\"name\":\"paymentDetails\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"makePayment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"}],\"name\":\"paymentAccepted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"performChainedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"hashChainedCallDetails((address,bytes))\":{\"params\":{\"chainedCallDetails\":\"The chained call details.\"},\"returns\":{\"callHash\":\"The hash of the chained call for signing.\"}},\"hashPaymentDetails((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)))\":{\"params\":{\"paymentDetails\":\"The payment details.\"},\"returns\":{\"paymentHash\":\"The hash of the payment details for signing.\"}},\"isValidChainedCallSignature((address,bytes),bytes)\":{\"params\":{\"chainedCallDetails\":\"The chained call details.\",\"signature\":\"The signature of the chained call.\"},\"returns\":{\"isValid\":\"True if the signature is valid.\"}},\"isValidPaymentSignature((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)\":{\"params\":{\"paymentDetails\":\"The payment details.\",\"signature\":\"The signature of the payment.\"},\"returns\":{\"isValid\":\"True if the signature is valid.\"}},\"makePayment((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)\":{\"params\":{\"paymentDetails\":\"The payment details.\",\"signature\":\"The signature of the payment.\"}},\"paymentAccepted(uint256)\":{\"params\":{\"purchaseId\":\"The ID of the purchase.\"},\"returns\":{\"_0\":\"accepted True if the payment has been accepted.\"}},\"performChainedCall((address,bytes),bytes)\":{\"details\":\"This is called when a payment is accepted off/cross chain.\",\"params\":{\"chainedCallDetails\":\"The chained call details.\",\"signature\":\"The signature of the chained call.\"}},\"signer()\":{\"returns\":{\"_0\":\"signer The signer address.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ChainedCallFailed()\":[{\"notice\":\"Emitted when a chained call fails.\"}],\"InvalidInitialization()\":[{\"notice\":\"Emitted when contract is already initialized.\"}],\"InvalidSignature()\":[{\"notice\":\"Emitted when a signature is invalid.\"}],\"InvalidTokenTransfer()\":[{\"notice\":\"Emitted when a token transfer is invalid.\"}],\"PaymentAlreadyAccepted()\":[{\"notice\":\"Emitted when a payment is already accepted. This prevents double spending.\"}],\"PaymentExpired()\":[{\"notice\":\"Emitted when a payment has expired.\"}]},\"events\":{\"PaymentMade(address,address,uint256,string)\":{\"notice\":\"Emitted when a payment is made.\"}},\"kind\":\"user\",\"methods\":{\"hashChainedCallDetails((address,bytes))\":{\"notice\":\"Returns the hash of the chained call.\"},\"hashPaymentDetails((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)))\":{\"notice\":\"Returns the hash of the payment details.\"},\"isValidChainedCallSignature((address,bytes),bytes)\":{\"notice\":\"Check is a chained call signature is valid.\"},\"isValidPaymentSignature((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)\":{\"notice\":\"Check is a payment signature is valid.\"},\"makePayment((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)\":{\"notice\":\"Make a payment for a product.\"},\"paymentAccepted(uint256)\":{\"notice\":\"Check if a payment has been accepted.\"},\"performChainedCall((address,bytes),bytes)\":{\"notice\":\"Complete a chained call.\"},\"signer()\":{\"notice\":\"Get the signer address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/payments/IPayments.sol\":\"IPayments\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/payments/IPayments.sol\":{\"keccak256\":\"0x87572398ac77fe65a8dbf0f434c5375be87b994fd03d10e626cd4290f1ecff77\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7894b9e6d1bd8efd2bf9f3822f5e13a4bc8893a066b5168bdc90fa8d9173cc98\",\"dweb:/ipfs/Qmd9HJAgizHRpJFRGRKrGdASjUrj6Wy2VzuEEJknPwBLiS\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ChainedCallFailed()": [
								{
									"notice": "Emitted when a chained call fails."
								}
							],
							"InvalidInitialization()": [
								{
									"notice": "Emitted when contract is already initialized."
								}
							],
							"InvalidSignature()": [
								{
									"notice": "Emitted when a signature is invalid."
								}
							],
							"InvalidTokenTransfer()": [
								{
									"notice": "Emitted when a token transfer is invalid."
								}
							],
							"PaymentAlreadyAccepted()": [
								{
									"notice": "Emitted when a payment is already accepted. This prevents double spending."
								}
							],
							"PaymentExpired()": [
								{
									"notice": "Emitted when a payment has expired."
								}
							]
						},
						"events": {
							"PaymentMade(address,address,uint256,string)": {
								"notice": "Emitted when a payment is made."
							}
						},
						"kind": "user",
						"methods": {
							"hashChainedCallDetails((address,bytes))": {
								"notice": "Returns the hash of the chained call."
							},
							"hashPaymentDetails((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)))": {
								"notice": "Returns the hash of the payment details."
							},
							"isValidChainedCallSignature((address,bytes),bytes)": {
								"notice": "Check is a chained call signature is valid."
							},
							"isValidPaymentSignature((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)": {
								"notice": "Check is a payment signature is valid."
							},
							"makePayment((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)": {
								"notice": "Make a payment for a product."
							},
							"paymentAccepted(uint256)": {
								"notice": "Check if a payment has been accepted."
							},
							"performChainedCall((address,bytes),bytes)": {
								"notice": "Complete a chained call."
							},
							"signer()": {
								"notice": "Get the signer address."
							}
						},
						"version": 1
					}
				},
				"IPaymentsFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "chainedCallAddress",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "chainedCallData",
											"type": "bytes"
										}
									],
									"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
									"name": "chainedCallDetails",
									"type": "tuple"
								}
							],
							"name": "hashChainedCallDetails",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "callHash",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "purchaseId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "productRecipient",
											"type": "address"
										},
										{
											"internalType": "enum IPaymentsFunctions.TokenType",
											"name": "tokenType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "tokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct IPaymentsFunctions.PaymentRecipient[]",
											"name": "paymentRecipients",
											"type": "tuple[]"
										},
										{
											"internalType": "uint64",
											"name": "expiration",
											"type": "uint64"
										},
										{
											"internalType": "string",
											"name": "productId",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "chainedCallAddress",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "chainedCallData",
													"type": "bytes"
												}
											],
											"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
											"name": "chainedCallDetails",
											"type": "tuple"
										}
									],
									"internalType": "struct IPaymentsFunctions.PaymentDetails",
									"name": "paymentDetails",
									"type": "tuple"
								}
							],
							"name": "hashPaymentDetails",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "paymentHash",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "chainedCallAddress",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "chainedCallData",
											"type": "bytes"
										}
									],
									"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
									"name": "chainedCallDetails",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidChainedCallSignature",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "purchaseId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "productRecipient",
											"type": "address"
										},
										{
											"internalType": "enum IPaymentsFunctions.TokenType",
											"name": "tokenType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "tokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct IPaymentsFunctions.PaymentRecipient[]",
											"name": "paymentRecipients",
											"type": "tuple[]"
										},
										{
											"internalType": "uint64",
											"name": "expiration",
											"type": "uint64"
										},
										{
											"internalType": "string",
											"name": "productId",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "chainedCallAddress",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "chainedCallData",
													"type": "bytes"
												}
											],
											"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
											"name": "chainedCallDetails",
											"type": "tuple"
										}
									],
									"internalType": "struct IPaymentsFunctions.PaymentDetails",
									"name": "paymentDetails",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidPaymentSignature",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isValid",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "purchaseId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "productRecipient",
											"type": "address"
										},
										{
											"internalType": "enum IPaymentsFunctions.TokenType",
											"name": "tokenType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "tokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct IPaymentsFunctions.PaymentRecipient[]",
											"name": "paymentRecipients",
											"type": "tuple[]"
										},
										{
											"internalType": "uint64",
											"name": "expiration",
											"type": "uint64"
										},
										{
											"internalType": "string",
											"name": "productId",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "chainedCallAddress",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "chainedCallData",
													"type": "bytes"
												}
											],
											"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
											"name": "chainedCallDetails",
											"type": "tuple"
										}
									],
									"internalType": "struct IPaymentsFunctions.PaymentDetails",
									"name": "paymentDetails",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "makePayment",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "purchaseId",
									"type": "uint256"
								}
							],
							"name": "paymentAccepted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "chainedCallAddress",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "chainedCallData",
											"type": "bytes"
										}
									],
									"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
									"name": "chainedCallDetails",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "performChainedCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"hashChainedCallDetails((address,bytes))": {
								"params": {
									"chainedCallDetails": "The chained call details."
								},
								"returns": {
									"callHash": "The hash of the chained call for signing."
								}
							},
							"hashPaymentDetails((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)))": {
								"params": {
									"paymentDetails": "The payment details."
								},
								"returns": {
									"paymentHash": "The hash of the payment details for signing."
								}
							},
							"isValidChainedCallSignature((address,bytes),bytes)": {
								"params": {
									"chainedCallDetails": "The chained call details.",
									"signature": "The signature of the chained call."
								},
								"returns": {
									"isValid": "True if the signature is valid."
								}
							},
							"isValidPaymentSignature((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)": {
								"params": {
									"paymentDetails": "The payment details.",
									"signature": "The signature of the payment."
								},
								"returns": {
									"isValid": "True if the signature is valid."
								}
							},
							"makePayment((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)": {
								"params": {
									"paymentDetails": "The payment details.",
									"signature": "The signature of the payment."
								}
							},
							"paymentAccepted(uint256)": {
								"params": {
									"purchaseId": "The ID of the purchase."
								},
								"returns": {
									"_0": "accepted True if the payment has been accepted."
								}
							},
							"performChainedCall((address,bytes),bytes)": {
								"details": "This is called when a payment is accepted off/cross chain.",
								"params": {
									"chainedCallDetails": "The chained call details.",
									"signature": "The signature of the chained call."
								}
							},
							"signer()": {
								"returns": {
									"_0": "signer The signer address."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"}],\"name\":\"hashChainedCallDetails\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"callHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"productRecipient\",\"type\":\"address\"},{\"internalType\":\"enum IPaymentsFunctions.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentRecipient[]\",\"name\":\"paymentRecipients\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"expiration\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentDetails\",\"name\":\"paymentDetails\",\"type\":\"tuple\"}],\"name\":\"hashPaymentDetails\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"paymentHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidChainedCallSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"productRecipient\",\"type\":\"address\"},{\"internalType\":\"enum IPaymentsFunctions.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentRecipient[]\",\"name\":\"paymentRecipients\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"expiration\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentDetails\",\"name\":\"paymentDetails\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidPaymentSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"productRecipient\",\"type\":\"address\"},{\"internalType\":\"enum IPaymentsFunctions.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentRecipient[]\",\"name\":\"paymentRecipients\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"expiration\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentDetails\",\"name\":\"paymentDetails\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"makePayment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"}],\"name\":\"paymentAccepted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"performChainedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"hashChainedCallDetails((address,bytes))\":{\"params\":{\"chainedCallDetails\":\"The chained call details.\"},\"returns\":{\"callHash\":\"The hash of the chained call for signing.\"}},\"hashPaymentDetails((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)))\":{\"params\":{\"paymentDetails\":\"The payment details.\"},\"returns\":{\"paymentHash\":\"The hash of the payment details for signing.\"}},\"isValidChainedCallSignature((address,bytes),bytes)\":{\"params\":{\"chainedCallDetails\":\"The chained call details.\",\"signature\":\"The signature of the chained call.\"},\"returns\":{\"isValid\":\"True if the signature is valid.\"}},\"isValidPaymentSignature((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)\":{\"params\":{\"paymentDetails\":\"The payment details.\",\"signature\":\"The signature of the payment.\"},\"returns\":{\"isValid\":\"True if the signature is valid.\"}},\"makePayment((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)\":{\"params\":{\"paymentDetails\":\"The payment details.\",\"signature\":\"The signature of the payment.\"}},\"paymentAccepted(uint256)\":{\"params\":{\"purchaseId\":\"The ID of the purchase.\"},\"returns\":{\"_0\":\"accepted True if the payment has been accepted.\"}},\"performChainedCall((address,bytes),bytes)\":{\"details\":\"This is called when a payment is accepted off/cross chain.\",\"params\":{\"chainedCallDetails\":\"The chained call details.\",\"signature\":\"The signature of the chained call.\"}},\"signer()\":{\"returns\":{\"_0\":\"signer The signer address.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"hashChainedCallDetails((address,bytes))\":{\"notice\":\"Returns the hash of the chained call.\"},\"hashPaymentDetails((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)))\":{\"notice\":\"Returns the hash of the payment details.\"},\"isValidChainedCallSignature((address,bytes),bytes)\":{\"notice\":\"Check is a chained call signature is valid.\"},\"isValidPaymentSignature((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)\":{\"notice\":\"Check is a payment signature is valid.\"},\"makePayment((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)\":{\"notice\":\"Make a payment for a product.\"},\"paymentAccepted(uint256)\":{\"notice\":\"Check if a payment has been accepted.\"},\"performChainedCall((address,bytes),bytes)\":{\"notice\":\"Complete a chained call.\"},\"signer()\":{\"notice\":\"Get the signer address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/payments/IPayments.sol\":\"IPaymentsFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/payments/IPayments.sol\":{\"keccak256\":\"0x87572398ac77fe65a8dbf0f434c5375be87b994fd03d10e626cd4290f1ecff77\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7894b9e6d1bd8efd2bf9f3822f5e13a4bc8893a066b5168bdc90fa8d9173cc98\",\"dweb:/ipfs/Qmd9HJAgizHRpJFRGRKrGdASjUrj6Wy2VzuEEJknPwBLiS\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"hashChainedCallDetails((address,bytes))": {
								"notice": "Returns the hash of the chained call."
							},
							"hashPaymentDetails((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)))": {
								"notice": "Returns the hash of the payment details."
							},
							"isValidChainedCallSignature((address,bytes),bytes)": {
								"notice": "Check is a chained call signature is valid."
							},
							"isValidPaymentSignature((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)": {
								"notice": "Check is a payment signature is valid."
							},
							"makePayment((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)": {
								"notice": "Make a payment for a product."
							},
							"paymentAccepted(uint256)": {
								"notice": "Check if a payment has been accepted."
							},
							"performChainedCall((address,bytes),bytes)": {
								"notice": "Complete a chained call."
							},
							"signer()": {
								"notice": "Get the signer address."
							}
						},
						"version": 1
					}
				},
				"IPaymentsSignals": {
					"abi": [
						{
							"inputs": [],
							"name": "ChainedCallFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTokenTransfer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PaymentAlreadyAccepted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PaymentExpired",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "productRecipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purchaseId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "productId",
									"type": "string"
								}
							],
							"name": "PaymentMade",
							"type": "event"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ChainedCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PaymentAlreadyAccepted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PaymentExpired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"productRecipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"PaymentMade\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"ChainedCallFailed()\":[{\"notice\":\"Emitted when a chained call fails.\"}],\"InvalidInitialization()\":[{\"notice\":\"Emitted when contract is already initialized.\"}],\"InvalidSignature()\":[{\"notice\":\"Emitted when a signature is invalid.\"}],\"InvalidTokenTransfer()\":[{\"notice\":\"Emitted when a token transfer is invalid.\"}],\"PaymentAlreadyAccepted()\":[{\"notice\":\"Emitted when a payment is already accepted. This prevents double spending.\"}],\"PaymentExpired()\":[{\"notice\":\"Emitted when a payment has expired.\"}]},\"events\":{\"PaymentMade(address,address,uint256,string)\":{\"notice\":\"Emitted when a payment is made.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/payments/IPayments.sol\":\"IPaymentsSignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/payments/IPayments.sol\":{\"keccak256\":\"0x87572398ac77fe65a8dbf0f434c5375be87b994fd03d10e626cd4290f1ecff77\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7894b9e6d1bd8efd2bf9f3822f5e13a4bc8893a066b5168bdc90fa8d9173cc98\",\"dweb:/ipfs/Qmd9HJAgizHRpJFRGRKrGdASjUrj6Wy2VzuEEJknPwBLiS\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ChainedCallFailed()": [
								{
									"notice": "Emitted when a chained call fails."
								}
							],
							"InvalidInitialization()": [
								{
									"notice": "Emitted when contract is already initialized."
								}
							],
							"InvalidSignature()": [
								{
									"notice": "Emitted when a signature is invalid."
								}
							],
							"InvalidTokenTransfer()": [
								{
									"notice": "Emitted when a token transfer is invalid."
								}
							],
							"PaymentAlreadyAccepted()": [
								{
									"notice": "Emitted when a payment is already accepted. This prevents double spending."
								}
							],
							"PaymentExpired()": [
								{
									"notice": "Emitted when a payment has expired."
								}
							]
						},
						"events": {
							"PaymentMade(address,address,uint256,string)": {
								"notice": "Emitted when a payment is made."
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/payments/IPaymentsFactory.sol": {
				"IPaymentsFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "PaymentsDeployed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "paymentsOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "paymentsSigner",
									"type": "address"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "paymentsOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "paymentsSigner",
									"type": "address"
								}
							],
							"name": "determineAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"PaymentsDeployed(address)": {
								"params": {
									"proxyAddr": "The address of the deployed proxy."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"deploy(address,address,address)": {
								"params": {
									"paymentsOwner": "The owner of the Payments implementation",
									"paymentsSigner": "The signer of the Payments implementation",
									"proxyOwner": "The owner of the Payments proxy"
								},
								"returns": {
									"proxyAddr": "The address of the Payments proxy"
								}
							},
							"determineAddress(address,address,address)": {
								"params": {
									"paymentsOwner": "The owner of the Payments implementation",
									"paymentsSigner": "The signer of the Payments implementation",
									"proxyOwner": "The owner of the Payments proxy"
								},
								"returns": {
									"proxyAddr": "The address of the Payments proxy"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"PaymentsDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentsOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentsSigner\",\"type\":\"address\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentsOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentsSigner\",\"type\":\"address\"}],\"name\":\"determineAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"PaymentsDeployed(address)\":{\"params\":{\"proxyAddr\":\"The address of the deployed proxy.\"}}},\"kind\":\"dev\",\"methods\":{\"deploy(address,address,address)\":{\"params\":{\"paymentsOwner\":\"The owner of the Payments implementation\",\"paymentsSigner\":\"The signer of the Payments implementation\",\"proxyOwner\":\"The owner of the Payments proxy\"},\"returns\":{\"proxyAddr\":\"The address of the Payments proxy\"}},\"determineAddress(address,address,address)\":{\"params\":{\"paymentsOwner\":\"The owner of the Payments implementation\",\"paymentsSigner\":\"The signer of the Payments implementation\",\"proxyOwner\":\"The owner of the Payments proxy\"},\"returns\":{\"proxyAddr\":\"The address of the Payments proxy\"}}},\"version\":1},\"userdoc\":{\"events\":{\"PaymentsDeployed(address)\":{\"notice\":\"Event emitted when a new Payments proxy contract is deployed.\"}},\"kind\":\"user\",\"methods\":{\"deploy(address,address,address)\":{\"notice\":\"Creates a Payments proxy contract\"},\"determineAddress(address,address,address)\":{\"notice\":\"Computes the address of a proxy instance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/payments/IPaymentsFactory.sol\":\"IPaymentsFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/payments/IPaymentsFactory.sol\":{\"keccak256\":\"0x1e2c52f14dd4dd5323525ed37175d8d901caeaf720a5dd3dcc67f7ae501727db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://619119c06b8d616e37ce7ba953002f83a8bbe238a2b55e4e72442df200218a0d\",\"dweb:/ipfs/QmRt4zaZvSRaJJWSvH8kUpXd5v2rQ7SsZheNP3wJ9ygAH6\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"PaymentsDeployed(address)": {
								"notice": "Event emitted when a new Payments proxy contract is deployed."
							}
						},
						"kind": "user",
						"methods": {
							"deploy(address,address,address)": {
								"notice": "Creates a Payments proxy contract"
							},
							"determineAddress(address,address,address)": {
								"notice": "Computes the address of a proxy instance."
							}
						},
						"version": 1
					}
				},
				"IPaymentsFactoryFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "paymentsOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "paymentsSigner",
									"type": "address"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "paymentsOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "paymentsSigner",
									"type": "address"
								}
							],
							"name": "determineAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"deploy(address,address,address)": {
								"params": {
									"paymentsOwner": "The owner of the Payments implementation",
									"paymentsSigner": "The signer of the Payments implementation",
									"proxyOwner": "The owner of the Payments proxy"
								},
								"returns": {
									"proxyAddr": "The address of the Payments proxy"
								}
							},
							"determineAddress(address,address,address)": {
								"params": {
									"paymentsOwner": "The owner of the Payments implementation",
									"paymentsSigner": "The signer of the Payments implementation",
									"proxyOwner": "The owner of the Payments proxy"
								},
								"returns": {
									"proxyAddr": "The address of the Payments proxy"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentsOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentsSigner\",\"type\":\"address\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentsOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentsSigner\",\"type\":\"address\"}],\"name\":\"determineAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deploy(address,address,address)\":{\"params\":{\"paymentsOwner\":\"The owner of the Payments implementation\",\"paymentsSigner\":\"The signer of the Payments implementation\",\"proxyOwner\":\"The owner of the Payments proxy\"},\"returns\":{\"proxyAddr\":\"The address of the Payments proxy\"}},\"determineAddress(address,address,address)\":{\"params\":{\"paymentsOwner\":\"The owner of the Payments implementation\",\"paymentsSigner\":\"The signer of the Payments implementation\",\"proxyOwner\":\"The owner of the Payments proxy\"},\"returns\":{\"proxyAddr\":\"The address of the Payments proxy\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy(address,address,address)\":{\"notice\":\"Creates a Payments proxy contract\"},\"determineAddress(address,address,address)\":{\"notice\":\"Computes the address of a proxy instance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/payments/IPaymentsFactory.sol\":\"IPaymentsFactoryFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/payments/IPaymentsFactory.sol\":{\"keccak256\":\"0x1e2c52f14dd4dd5323525ed37175d8d901caeaf720a5dd3dcc67f7ae501727db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://619119c06b8d616e37ce7ba953002f83a8bbe238a2b55e4e72442df200218a0d\",\"dweb:/ipfs/QmRt4zaZvSRaJJWSvH8kUpXd5v2rQ7SsZheNP3wJ9ygAH6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"deploy(address,address,address)": {
								"notice": "Creates a Payments proxy contract"
							},
							"determineAddress(address,address,address)": {
								"notice": "Computes the address of a proxy instance."
							}
						},
						"version": 1
					}
				},
				"IPaymentsFactorySignals": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "PaymentsDeployed",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"PaymentsDeployed(address)": {
								"params": {
									"proxyAddr": "The address of the deployed proxy."
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"PaymentsDeployed\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"PaymentsDeployed(address)\":{\"params\":{\"proxyAddr\":\"The address of the deployed proxy.\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"PaymentsDeployed(address)\":{\"notice\":\"Event emitted when a new Payments proxy contract is deployed.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/payments/IPaymentsFactory.sol\":\"IPaymentsFactorySignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/payments/IPaymentsFactory.sol\":{\"keccak256\":\"0x1e2c52f14dd4dd5323525ed37175d8d901caeaf720a5dd3dcc67f7ae501727db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://619119c06b8d616e37ce7ba953002f83a8bbe238a2b55e4e72442df200218a0d\",\"dweb:/ipfs/QmRt4zaZvSRaJJWSvH8kUpXd5v2rQ7SsZheNP3wJ9ygAH6\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"PaymentsDeployed(address)": {
								"notice": "Event emitted when a new Payments proxy contract is deployed."
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/payments/Payments.sol": {
				"Payments": {
					"abi": [
						{
							"inputs": [],
							"name": "ChainedCallFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTokenTransfer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PaymentAlreadyAccepted",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "PaymentExpired",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "productRecipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "purchaseId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "productId",
									"type": "string"
								}
							],
							"name": "PaymentMade",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "chainedCallAddress",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "chainedCallData",
											"type": "bytes"
										}
									],
									"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
									"name": "chainedCallDetails",
									"type": "tuple"
								}
							],
							"name": "hashChainedCallDetails",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "purchaseId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "productRecipient",
											"type": "address"
										},
										{
											"internalType": "enum IPaymentsFunctions.TokenType",
											"name": "tokenType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "tokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct IPaymentsFunctions.PaymentRecipient[]",
											"name": "paymentRecipients",
											"type": "tuple[]"
										},
										{
											"internalType": "uint64",
											"name": "expiration",
											"type": "uint64"
										},
										{
											"internalType": "string",
											"name": "productId",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "chainedCallAddress",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "chainedCallData",
													"type": "bytes"
												}
											],
											"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
											"name": "chainedCallDetails",
											"type": "tuple"
										}
									],
									"internalType": "struct IPaymentsFunctions.PaymentDetails",
									"name": "paymentDetails",
									"type": "tuple"
								}
							],
							"name": "hashPaymentDetails",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_signer",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "chainedCallAddress",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "chainedCallData",
											"type": "bytes"
										}
									],
									"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
									"name": "chainedCallDetails",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidChainedCallSignature",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "purchaseId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "productRecipient",
											"type": "address"
										},
										{
											"internalType": "enum IPaymentsFunctions.TokenType",
											"name": "tokenType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "tokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct IPaymentsFunctions.PaymentRecipient[]",
											"name": "paymentRecipients",
											"type": "tuple[]"
										},
										{
											"internalType": "uint64",
											"name": "expiration",
											"type": "uint64"
										},
										{
											"internalType": "string",
											"name": "productId",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "chainedCallAddress",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "chainedCallData",
													"type": "bytes"
												}
											],
											"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
											"name": "chainedCallDetails",
											"type": "tuple"
										}
									],
									"internalType": "struct IPaymentsFunctions.PaymentDetails",
									"name": "paymentDetails",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "isValidPaymentSignature",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "purchaseId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "productRecipient",
											"type": "address"
										},
										{
											"internalType": "enum IPaymentsFunctions.TokenType",
											"name": "tokenType",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "tokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "recipient",
													"type": "address"
												},
												{
													"internalType": "uint256",
													"name": "amount",
													"type": "uint256"
												}
											],
											"internalType": "struct IPaymentsFunctions.PaymentRecipient[]",
											"name": "paymentRecipients",
											"type": "tuple[]"
										},
										{
											"internalType": "uint64",
											"name": "expiration",
											"type": "uint64"
										},
										{
											"internalType": "string",
											"name": "productId",
											"type": "string"
										},
										{
											"components": [
												{
													"internalType": "address",
													"name": "chainedCallAddress",
													"type": "address"
												},
												{
													"internalType": "bytes",
													"name": "chainedCallData",
													"type": "bytes"
												}
											],
											"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
											"name": "chainedCallDetails",
											"type": "tuple"
										}
									],
									"internalType": "struct IPaymentsFunctions.PaymentDetails",
									"name": "paymentDetails",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "makePayment",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "paymentAccepted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "chainedCallAddress",
											"type": "address"
										},
										{
											"internalType": "bytes",
											"name": "chainedCallData",
											"type": "bytes"
										}
									],
									"internalType": "struct IPaymentsFunctions.ChainedCallDetails",
									"name": "chainedCallDetails",
									"type": "tuple"
								},
								{
									"internalType": "bytes",
									"name": "signature",
									"type": "bytes"
								}
							],
							"name": "performChainedCall",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "signer",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newSigner",
									"type": "address"
								}
							],
							"name": "updateSigner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"hashChainedCallDetails((address,bytes))": {
								"details": "This hash includes the chain ID.",
								"params": {
									"chainedCallDetails": "The chained call details."
								},
								"returns": {
									"_0": "The hash of the chained call for signing."
								}
							},
							"hashPaymentDetails((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)))": {
								"details": "This hash includes the chain ID.",
								"params": {
									"paymentDetails": "The payment details."
								},
								"returns": {
									"_0": "The hash of the payment details for signing."
								}
							},
							"initialize(address,address)": {
								"details": "This should be called immediately after deployment.",
								"params": {
									"_owner": "Owner address",
									"_signer": "Signer address"
								}
							},
							"isValidChainedCallSignature((address,bytes),bytes)": {
								"params": {
									"chainedCallDetails": "The chained call details.",
									"signature": "The signature of the chained call."
								},
								"returns": {
									"_0": "True if the signature is valid."
								}
							},
							"isValidPaymentSignature((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)": {
								"params": {
									"paymentDetails": "The payment details.",
									"signature": "The signature of the payment."
								},
								"returns": {
									"_0": "True if the signature is valid."
								}
							},
							"makePayment((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)": {
								"params": {
									"paymentDetails": "The payment details.",
									"signature": "The signature of the payment."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"performChainedCall((address,bytes),bytes)": {
								"details": "As the signer can validate any payment (including zero) this function does not increase the security surface.",
								"params": {
									"chainedCallDetails": "The chained call details.",
									"signature": "The signature of the chained call."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"supportsInterface(bytes4)": {
								"details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas",
								"params": {
									"_interfaceId": "The interface identifier, as specified in ERC-165"
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"stateVariables": {
							"paymentAccepted": {
								"params": {
									"purchaseId": "The ID of the purchase."
								},
								"return": "accepted True if the payment has been accepted.",
								"returns": {
									"_0": "accepted True if the payment has been accepted."
								}
							},
							"signer": {
								"return": "signer The signer address.",
								"returns": {
									"_0": "signer The signer address."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361149e90816100618239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146109cd575080630e6fe11f1461098e578063238ac933146109595780633a63b8031461092d578063485cc95514610847578063579a97e61461082b578063715018a6146107ad5780637b8bdc8e146107885780638da5cb5b1461075557806398c3065f14610709578063a7ecd37e146106a2578063b223870014610651578063decfb3b21461018f5763f2fde38b146100bd57600080fd5b3461018b57602060031936011261018b576100d6610a7c565b916100df610b88565b73ffffffffffffffffffffffffffffffffffffffff831615610108578361010584610c07565b80f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b509061019a36610b3f565b8293919492359283875260029160209683885260ff858a20541661062957906101c39187610dc1565b156106025767ffffffffffffffff6101dd60c08701610c74565b1642116105db5783875281865282872091600192837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790558288905b6102ca575b50505050610231848401610cdd565b937fbff0538a548e4ea8a217734a505ce9d9375306f438db1247603684e165834db861028e61026360e0870187610cfe565b945191829185835273ffffffffffffffffffffffffffffffffffffffff809a16963396840191610d4f565b0390a46101008101916102a96102a48484610d8e565b610cdd565b166102b2578280f35b6102c4916102bf91610d8e565b6110e2565b38808280f35b60a08088016102d9818a610c89565b90508310156105d4576102ec9089610c89565b8310156105a8578a908360061b01878a013592600384101561018b578b938b9289606061031a818701610cdd565b97608061032685610cdd565b970135930135938a81146000146104315750505073ffffffffffffffffffffffffffffffffffffffff809616803b1561042d5760c4938a9387938e51998a9889977ff242432a00000000000000000000000000000000000000000000000000000000895233908901521660248701526044860152606485015260848401528160a48401525af1801561042357610414575b505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103e85783018361021d565b6024896011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b61041d90610df4565b386103b7565b86513d8c823e3d90fd5b8580fd5b92979650909350908084036104f6575050116104ce57908b9173ffffffffffffffffffffffffffffffffffffffff80921690813b156104ca57836064928b5196879586947f42842e0e000000000000000000000000000000000000000000000000000000008652338d87015216602485015260448401525af18015610423576104bb575b506103b9565b6104c490610df4565b386104b5565b8380fd5b8588517f289aef69000000000000000000000000000000000000000000000000000000008152fd5b919590949392509061058057610558578c606481938e938c519787528c5233861b602c526f23b872dd000000000000000000000000600c52601c9485915af18c5188143d1517161561054d57508a905285526103b9565b8590637939f4248d52fd5b8689517f289aef69000000000000000000000000000000000000000000000000000000008152fd5b878a517f289aef69000000000000000000000000000000000000000000000000000000008152fd5b60248b6032877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5050610222565b82517f664b28b0000000000000000000000000000000000000000000000000000000008152fd5b82517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b8285517fb383ff03000000000000000000000000000000000000000000000000000000008152fd5b503461018b5761066d9161066436610af3565b9082959261104d565b1561067c5783610105846110e2565b517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b83346107065760206003193601126107065773ffffffffffffffffffffffffffffffffffffffff6106d1610a7c565b6106d9610b88565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015580f35b80fd5b503461018b57600319926020843601126107065781359367ffffffffffffffff851161075157610120908536030112610706575060209261074a9101610e78565b9051908152f35b5080fd5b50503461075157816003193601126107515773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b505034610751576020906107a461079e36610b3f565b91610dc1565b90519015158152f35b83346107065780600319360112610706576107c6610b88565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b505034610751576020906107a461084136610af3565b9161104d565b503461018b578160031936011261018b57610860610a7c565b906024359273ffffffffffffffffffffffffffffffffffffffff84168094036109295760ff855460a01c1661090357505061089a90610c07565b7fffffffffffffffffffffffff00000000000000000000000000000000000000006001541617600155740100000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff82541617815580f35b517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8480fd5b503461018b57602060031936011261018b578160209360ff923581526002855220541690519015158152f35b50503461075157816003193601126107515760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b503461018b57600319926020843601126107065781359367ffffffffffffffff85116107515783908536030112610706575060209261074a9101611057565b9250503461018b57602060031936011261018b57357fffffffff00000000000000000000000000000000000000000000000000000000811680910361018b57602092508015908115610a52575b8115610a28575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438610a21565b7fcfb8e9aa0000000000000000000000000000000000000000000000000000000081149150610a1a565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610a9f57565b600080fd5b359073ffffffffffffffffffffffffffffffffffffffff82168203610a9f57565b9181601f84011215610a9f5782359167ffffffffffffffff8311610a9f5760208381860195010111610a9f57565b90600319604081840112610a9f5760043567ffffffffffffffff91828211610a9f576040908286030112610a9f5760040192602435918211610a9f57610b3b91600401610ac5565b9091565b90600319604081840112610a9f5760043567ffffffffffffffff91828211610a9f57610120908286030112610a9f5760040192602435918211610a9f57610b3b91600401610ac5565b73ffffffffffffffffffffffffffffffffffffffff600054163303610ba957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6000549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b3567ffffffffffffffff81168103610a9f5790565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610a9f570180359067ffffffffffffffff8211610a9f57602001918160061b36038313610a9f57565b3573ffffffffffffffffffffffffffffffffffffffff81168103610a9f5790565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610a9f570180359067ffffffffffffffff8211610a9f57602001918136038313610a9f57565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc181360301821215610a9f570190565b90610dcf610dd49392610e78565b6111d0565b73ffffffffffffffffffffffffffffffffffffffff806001541691161490565b67ffffffffffffffff8111610e0857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610e0857604052565b610e8460208201610cdd565b906040810135906003821015610a9f5790610ea160608301610cdd565b90610eaf60a0840184610c89565b939092610ebe60c08301610c74565b94610ecc60e0840184610cfe565b6080610edf610100879994990187610d8e565b956040519a8b966101608801994660208a0152833560408a01528473ffffffffffffffffffffffffffffffffffffffff998a809516606082015201521660a08c0152013560c08a015282610140968760e08c0152526101808901919260005b81811061101e575050610f90925067ffffffffffffffff8098166101008a01527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe096878a8403016101208b0152610d4f565b92848785030190870152610fa382610aa4565b16825260208101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe182360301811215610a9f570190602082359201938211610a9f578136038413610a9f576110149385926040838160206110089601520191610d4f565b03908101835282610e37565b6020815191012090565b9091926040806001928861103189610aa4565b1681526020880135602082015201950191019392919093610f3e565b90610dcf610dd493925b6110dc61107161106683610cdd565b926020810190610cfe565b6110b060409392935193849273ffffffffffffffffffffffffffffffffffffffff60208501974689521660408501526060808501526080840191610d4f565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610e37565b51902090565b6110f96110ee82610cdd565b916020810190610cfe565b91826040519384938437820190600093848094848280965203925af1903d156111ca573d9067ffffffffffffffff821161119d576040519161116360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184610e37565b825260203d92013e5b1561117357565b60046040517f7cc2fbb3000000000000000000000000000000000000000000000000000000008152fd5b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526041600452fd5b5061116c565b909160008093821561143b57600191813560f81c8381036112d8575050828211610929579081857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360209501950183906040968791825199855286838214604180931491611261575b5050505050608092505afa51923d15611254576060525290565b638baa579f90526004601cfd5b6112915761127c57505050506080915080853880808061123a565b6080950135841a87528137853880808061123a565b50507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91506021608095013590601b8260ff1c01885235885216606052853880808061123a565b60029097969492959391971480611430575b6112f6575b5050505050565b8496509390919293013560601c94816015116104ca5761137c9160209160405193849283927f1626ba7e000000000000000000000000000000000000000000000000000000009788855260048501526040602485015260157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeb6044860193019101610d4f565b0381885afa8391816113d4575b5061139e5750909250505b38808080806112ef565b7fffffffff0000000000000000000000000000000000000000000000000000000016036113cc575b50611394565b9150386113c6565b9091506020813d8211611428575b816113ef60209383610e37565b810103126104ca57517fffffffff00000000000000000000000000000000000000000000000000000000811681036104ca579038611389565b3d91506113e2565b5060158210156112ea565b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fdfea26469706673582212209aeb45877519b9acd168c435fba72de99b3576f5579e22daa46c2528edb74d6664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x149E SWAP1 DUP2 PUSH2 0x61 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x9CD JUMPI POP DUP1 PUSH4 0xE6FE11F EQ PUSH2 0x98E JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x959 JUMPI DUP1 PUSH4 0x3A63B803 EQ PUSH2 0x92D JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x847 JUMPI DUP1 PUSH4 0x579A97E6 EQ PUSH2 0x82B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7AD JUMPI DUP1 PUSH4 0x7B8BDC8E EQ PUSH2 0x788 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x755 JUMPI DUP1 PUSH4 0x98C3065F EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xA7ECD37E EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xB2238700 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xDECFB3B2 EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI PUSH2 0xD6 PUSH2 0xA7C JUMP JUMPDEST SWAP2 PUSH2 0xDF PUSH2 0xB88 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0x108 JUMPI DUP4 PUSH2 0x105 DUP5 PUSH2 0xC07 JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 PUSH2 0x19A CALLDATASIZE PUSH2 0xB3F JUMP JUMPDEST DUP3 SWAP4 SWAP2 SWAP5 SWAP3 CALLDATALOAD SWAP3 DUP4 DUP8 MSTORE PUSH1 0x2 SWAP2 PUSH1 0x20 SWAP7 DUP4 DUP9 MSTORE PUSH1 0xFF DUP6 DUP11 KECCAK256 SLOAD AND PUSH2 0x629 JUMPI SWAP1 PUSH2 0x1C3 SWAP2 DUP8 PUSH2 0xDC1 JUMP JUMPDEST ISZERO PUSH2 0x602 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x1DD PUSH1 0xC0 DUP8 ADD PUSH2 0xC74 JUMP JUMPDEST AND TIMESTAMP GT PUSH2 0x5DB JUMPI DUP4 DUP8 MSTORE DUP2 DUP7 MSTORE DUP3 DUP8 KECCAK256 SWAP2 PUSH1 0x1 SWAP3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 DUP9 SWAP1 JUMPDEST PUSH2 0x2CA JUMPI JUMPDEST POP POP POP POP PUSH2 0x231 DUP5 DUP5 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP4 PUSH32 0xBFF0538A548E4EA8A217734A505CE9D9375306F438DB1247603684E165834DB8 PUSH2 0x28E PUSH2 0x263 PUSH1 0xE0 DUP8 ADD DUP8 PUSH2 0xCFE JUMP JUMPDEST SWAP5 MLOAD SWAP2 DUP3 SWAP2 DUP6 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP11 AND SWAP7 CALLER SWAP7 DUP5 ADD SWAP2 PUSH2 0xD4F JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x100 DUP2 ADD SWAP2 PUSH2 0x2A9 PUSH2 0x2A4 DUP5 DUP5 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xCDD JUMP JUMPDEST AND PUSH2 0x2B2 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0x2C4 SWAP2 PUSH2 0x2BF SWAP2 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x10E2 JUMP JUMPDEST CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0xA0 DUP1 DUP9 ADD PUSH2 0x2D9 DUP2 DUP11 PUSH2 0xC89 JUMP JUMPDEST SWAP1 POP DUP4 LT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x2EC SWAP1 DUP10 PUSH2 0xC89 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x5A8 JUMPI DUP11 SWAP1 DUP4 PUSH1 0x6 SHL ADD DUP8 DUP11 ADD CALLDATALOAD SWAP3 PUSH1 0x3 DUP5 LT ISZERO PUSH2 0x18B JUMPI DUP12 SWAP4 DUP12 SWAP3 DUP10 PUSH1 0x60 PUSH2 0x31A DUP2 DUP8 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP8 PUSH1 0x80 PUSH2 0x326 DUP6 PUSH2 0xCDD JUMP JUMPDEST SWAP8 ADD CALLDATALOAD SWAP4 ADD CALLDATALOAD SWAP4 DUP11 DUP2 EQ PUSH1 0x0 EQ PUSH2 0x431 JUMPI POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP7 AND DUP1 EXTCODESIZE ISZERO PUSH2 0x42D JUMPI PUSH1 0xC4 SWAP4 DUP11 SWAP4 DUP8 SWAP4 DUP15 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP10 MSTORE CALLER SWAP1 DUP10 ADD MSTORE AND PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x44 DUP7 ADD MSTORE PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD MSTORE DUP2 PUSH1 0xA4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x423 JUMPI PUSH2 0x414 JUMPI JUMPDEST POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x3E8 JUMPI DUP4 ADD DUP4 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x24 DUP10 PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH2 0x41D SWAP1 PUSH2 0xDF4 JUMP JUMPDEST CODESIZE PUSH2 0x3B7 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP3 SWAP8 SWAP7 POP SWAP1 SWAP4 POP SWAP1 DUP1 DUP5 SUB PUSH2 0x4F6 JUMPI POP POP GT PUSH2 0x4CE JUMPI SWAP1 DUP12 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x4CA JUMPI DUP4 PUSH1 0x64 SWAP3 DUP12 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH32 0x42842E0E00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE CALLER DUP14 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x423 JUMPI PUSH2 0x4BB JUMPI JUMPDEST POP PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x4C4 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST CODESIZE PUSH2 0x4B5 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP9 MLOAD PUSH32 0x289AEF6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 SWAP6 SWAP1 SWAP5 SWAP4 SWAP3 POP SWAP1 PUSH2 0x580 JUMPI PUSH2 0x558 JUMPI DUP13 PUSH1 0x64 DUP2 SWAP4 DUP15 SWAP4 DUP13 MLOAD SWAP8 DUP8 MSTORE DUP13 MSTORE CALLER DUP7 SHL PUSH1 0x2C MSTORE PUSH16 0x23B872DD000000000000000000000000 PUSH1 0xC MSTORE PUSH1 0x1C SWAP5 DUP6 SWAP2 GAS CALL DUP13 MLOAD DUP9 EQ RETURNDATASIZE ISZERO OR AND ISZERO PUSH2 0x54D JUMPI POP DUP11 SWAP1 MSTORE DUP6 MSTORE PUSH2 0x3B9 JUMP JUMPDEST DUP6 SWAP1 PUSH4 0x7939F424 DUP14 MSTORE REVERT JUMPDEST DUP7 DUP10 MLOAD PUSH32 0x289AEF6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP8 DUP11 MLOAD PUSH32 0x289AEF6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP12 PUSH1 0x32 DUP8 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST POP POP PUSH2 0x222 JUMP JUMPDEST DUP3 MLOAD PUSH32 0x664B28B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 MLOAD PUSH32 0x8BAA579F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP6 MLOAD PUSH32 0xB383FF0300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH2 0x66D SWAP2 PUSH2 0x664 CALLDATASIZE PUSH2 0xAF3 JUMP JUMPDEST SWAP1 DUP3 SWAP6 SWAP3 PUSH2 0x104D JUMP JUMPDEST ISZERO PUSH2 0x67C JUMPI DUP4 PUSH2 0x105 DUP5 PUSH2 0x10E2 JUMP JUMPDEST MLOAD PUSH32 0x8BAA579F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x706 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x706 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x6D1 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x6D9 PUSH2 0xB88 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x3 NOT SWAP3 PUSH1 0x20 DUP5 CALLDATASIZE ADD SLT PUSH2 0x706 JUMPI DUP2 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x751 JUMPI PUSH2 0x120 SWAP1 DUP6 CALLDATASIZE SUB ADD SLT PUSH2 0x706 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x74A SWAP2 ADD PUSH2 0xE78 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x751 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x751 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x751 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x7A4 PUSH2 0x79E CALLDATASIZE PUSH2 0xB3F JUMP JUMPDEST SWAP2 PUSH2 0xDC1 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x706 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x706 JUMPI PUSH2 0x7C6 PUSH2 0xB88 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x751 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x7A4 PUSH2 0x841 CALLDATASIZE PUSH2 0xAF3 JUMP JUMPDEST SWAP2 PUSH2 0x104D JUMP JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI PUSH2 0x860 PUSH2 0xA7C JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP1 SWAP5 SUB PUSH2 0x929 JUMPI PUSH1 0xFF DUP6 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x903 JUMPI POP POP PUSH2 0x89A SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH21 0x10000000000000000000000000000000000000000 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SLOAD AND OR DUP2 SSTORE DUP1 RETURN JUMPDEST MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x751 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x751 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x3 NOT SWAP3 PUSH1 0x20 DUP5 CALLDATASIZE ADD SLT PUSH2 0x706 JUMPI DUP2 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x751 JUMPI DUP4 SWAP1 DUP6 CALLDATASIZE SUB ADD SLT PUSH2 0x706 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x74A SWAP2 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP3 POP POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x18B JUMPI PUSH1 0x20 SWAP3 POP DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0xA52 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0xA28 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0xA21 JUMP JUMPDEST PUSH32 0xCFB8E9AA00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xA9F JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xA9F JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xA9F JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xA9F JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0xA9F JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x3 NOT PUSH1 0x40 DUP2 DUP5 ADD SLT PUSH2 0xA9F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0xA9F JUMPI PUSH1 0x40 SWAP1 DUP3 DUP7 SUB ADD SLT PUSH2 0xA9F JUMPI PUSH1 0x4 ADD SWAP3 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xA9F JUMPI PUSH2 0xB3B SWAP2 PUSH1 0x4 ADD PUSH2 0xAC5 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH1 0x3 NOT PUSH1 0x40 DUP2 DUP5 ADD SLT PUSH2 0xA9F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0xA9F JUMPI PUSH2 0x120 SWAP1 DUP3 DUP7 SUB ADD SLT PUSH2 0xA9F JUMPI PUSH1 0x4 ADD SWAP3 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xA9F JUMPI PUSH2 0xB3B SWAP2 PUSH1 0x4 ADD PUSH2 0xAC5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0xBA9 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0xA9F JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0xA9F JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xA9F JUMPI PUSH1 0x20 ADD SWAP2 DUP2 PUSH1 0x6 SHL CALLDATASIZE SUB DUP4 SGT PUSH2 0xA9F JUMPI JUMP JUMPDEST CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0xA9F JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0xA9F JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xA9F JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0xA9F JUMPI JUMP JUMPDEST PUSH1 0x1F DUP3 PUSH1 0x20 SWAP5 SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP4 DUP2 DUP7 MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0xA9F JUMPI ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDCF PUSH2 0xDD4 SWAP4 SWAP3 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x11D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x1 SLOAD AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE08 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE08 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE84 PUSH1 0x20 DUP3 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xA9F JUMPI SWAP1 PUSH2 0xEA1 PUSH1 0x60 DUP4 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP1 PUSH2 0xEAF PUSH1 0xA0 DUP5 ADD DUP5 PUSH2 0xC89 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0xEBE PUSH1 0xC0 DUP4 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP5 PUSH2 0xECC PUSH1 0xE0 DUP5 ADD DUP5 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x80 PUSH2 0xEDF PUSH2 0x100 DUP8 SWAP10 SWAP5 SWAP10 ADD DUP8 PUSH2 0xD8E JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP7 PUSH2 0x160 DUP9 ADD SWAP10 CHAINID PUSH1 0x20 DUP11 ADD MSTORE DUP4 CALLDATALOAD PUSH1 0x40 DUP11 ADD MSTORE DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP10 DUP11 DUP1 SWAP6 AND PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE AND PUSH1 0xA0 DUP13 ADD MSTORE ADD CALLDATALOAD PUSH1 0xC0 DUP11 ADD MSTORE DUP3 PUSH2 0x140 SWAP7 DUP8 PUSH1 0xE0 DUP13 ADD MSTORE MSTORE PUSH2 0x180 DUP10 ADD SWAP2 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x101E JUMPI POP POP PUSH2 0xF90 SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 SWAP9 AND PUSH2 0x100 DUP11 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP7 DUP8 DUP11 DUP5 SUB ADD PUSH2 0x120 DUP12 ADD MSTORE PUSH2 0xD4F JUMP JUMPDEST SWAP3 DUP5 DUP8 DUP6 SUB ADD SWAP1 DUP8 ADD MSTORE PUSH2 0xFA3 DUP3 PUSH2 0xAA4 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0xA9F JUMPI ADD SWAP1 PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 ADD SWAP4 DUP3 GT PUSH2 0xA9F JUMPI DUP2 CALLDATASIZE SUB DUP5 SGT PUSH2 0xA9F JUMPI PUSH2 0x1014 SWAP4 DUP6 SWAP3 PUSH1 0x40 DUP4 DUP2 PUSH1 0x20 PUSH2 0x1008 SWAP7 ADD MSTORE ADD SWAP2 PUSH2 0xD4F JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0x40 DUP1 PUSH1 0x1 SWAP3 DUP9 PUSH2 0x1031 DUP10 PUSH2 0xAA4 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP6 ADD SWAP2 ADD SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 PUSH2 0xF3E JUMP JUMPDEST SWAP1 PUSH2 0xDCF PUSH2 0xDD4 SWAP4 SWAP3 JUMPDEST PUSH2 0x10DC PUSH2 0x1071 PUSH2 0x1066 DUP4 PUSH2 0xCDD JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x10B0 PUSH1 0x40 SWAP4 SWAP3 SWAP4 MLOAD SWAP4 DUP5 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP6 ADD SWAP8 CHAINID DUP10 MSTORE AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP2 PUSH2 0xD4F JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xE37 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x10F9 PUSH2 0x10EE DUP3 PUSH2 0xCDD JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCFE JUMP JUMPDEST SWAP2 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 CALLDATACOPY DUP3 ADD SWAP1 PUSH1 0x0 SWAP4 DUP5 DUP1 SWAP5 DUP5 DUP3 DUP1 SWAP7 MSTORE SUB SWAP3 GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x11CA JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x119D JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1163 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0xE37 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x1173 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x7CC2FBB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP PUSH2 0x116C JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 DUP1 SWAP4 DUP3 ISZERO PUSH2 0x143B JUMPI PUSH1 0x1 SWAP2 DUP2 CALLDATALOAD PUSH1 0xF8 SHR DUP4 DUP2 SUB PUSH2 0x12D8 JUMPI POP POP DUP3 DUP3 GT PUSH2 0x929 JUMPI SWAP1 DUP2 DUP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SWAP6 ADD SWAP6 ADD DUP4 SWAP1 PUSH1 0x40 SWAP7 DUP8 SWAP2 DUP3 MLOAD SWAP10 DUP6 MSTORE DUP7 DUP4 DUP3 EQ PUSH1 0x41 DUP1 SWAP4 EQ SWAP2 PUSH2 0x1261 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x80 SWAP3 POP GAS STATICCALL MLOAD SWAP3 RETURNDATASIZE ISZERO PUSH2 0x1254 JUMPI PUSH1 0x60 MSTORE MSTORE SWAP1 JUMP JUMPDEST PUSH4 0x8BAA579F SWAP1 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH2 0x1291 JUMPI PUSH2 0x127C JUMPI POP POP POP POP PUSH1 0x80 SWAP2 POP DUP1 DUP6 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x80 SWAP6 ADD CALLDATALOAD DUP5 BYTE DUP8 MSTORE DUP2 CALLDATACOPY DUP6 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x123A JUMP JUMPDEST POP POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP PUSH1 0x21 PUSH1 0x80 SWAP6 ADD CALLDATALOAD SWAP1 PUSH1 0x1B DUP3 PUSH1 0xFF SHR ADD DUP9 MSTORE CALLDATALOAD DUP9 MSTORE AND PUSH1 0x60 MSTORE DUP6 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x2 SWAP1 SWAP8 SWAP7 SWAP5 SWAP3 SWAP6 SWAP4 SWAP2 SWAP8 EQ DUP1 PUSH2 0x1430 JUMPI JUMPDEST PUSH2 0x12F6 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 SWAP7 POP SWAP4 SWAP1 SWAP2 SWAP3 SWAP4 ADD CALLDATALOAD PUSH1 0x60 SHR SWAP5 DUP2 PUSH1 0x15 GT PUSH2 0x4CA JUMPI PUSH2 0x137C SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP8 DUP9 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x15 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEB PUSH1 0x44 DUP7 ADD SWAP4 ADD SWAP2 ADD PUSH2 0xD4F JUMP JUMPDEST SUB DUP2 DUP9 GAS STATICCALL DUP4 SWAP2 DUP2 PUSH2 0x13D4 JUMPI JUMPDEST POP PUSH2 0x139E JUMPI POP SWAP1 SWAP3 POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x12EF JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SUB PUSH2 0x13CC JUMPI JUMPDEST POP PUSH2 0x1394 JUMP JUMPDEST SWAP2 POP CODESIZE PUSH2 0x13C6 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1428 JUMPI JUMPDEST DUP2 PUSH2 0x13EF PUSH1 0x20 SWAP4 DUP4 PUSH2 0xE37 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4CA JUMPI MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 SUB PUSH2 0x4CA JUMPI SWAP1 CODESIZE PUSH2 0x1389 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x13E2 JUMP JUMPDEST POP PUSH1 0x15 DUP3 LT ISZERO PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xEB GASLIMIT DUP8 PUSH22 0x19B9ACD168C435FBA72DE99B3576F5579E22DAA46C25 0x28 0xED 0xB7 0x4D PUSH7 0x64736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "563:6376:18:-:0;;;;;;;2596:6:3;563:6376:18;;736:10:11;-1:-1:-1;;;;;;563:6376:18;;;;;;736:10:11;-1:-1:-1;;;;;563:6376:18;;;;2646:40:3;;2596:6;2646:40;563:6376:18;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 2724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address_7640": {
									"entryPoint": 2684,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 2757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_struct_ChainedCallDetails_calldatat_bytes_calldata": {
									"entryPoint": 2803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_struct_PaymentDetails_calldatat_bytes_calldata": {
									"entryPoint": 2879,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_encode_string_calldata": {
									"entryPoint": 3407,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"access_calldata_tail_array_struct_PaymentRecipient_calldata_dyn_calldata": {
									"entryPoint": 3209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"access_calldata_tail_string_calldata": {
									"entryPoint": 3326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"access_calldata_tail_struct_ChainedCallDetails_calldata": {
									"entryPoint": 3470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_7648": {
									"entryPoint": 3572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 2952,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_hashChainedCallDetails": {
									"entryPoint": 4183,
									"id": 2267,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_hashPaymentDetails": {
									"entryPoint": 3704,
									"id": 2191,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_isValidChainedCallSignature": {
									"entryPoint": 4173,
									"id": 2245,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_isValidPaymentSignature": {
									"entryPoint": 3521,
									"id": 2155,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_performChainedCall": {
									"entryPoint": 4322,
									"id": 2293,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_recoverSigner": {
									"entryPoint": 4560,
									"id": 3352,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_transferOwnership": {
									"entryPoint": 3079,
									"id": 260,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"read_from_calldatat_address": {
									"entryPoint": 3293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_calldatat_uint64": {
									"entryPoint": 3188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146109cd575080630e6fe11f1461098e578063238ac933146109595780633a63b8031461092d578063485cc95514610847578063579a97e61461082b578063715018a6146107ad5780637b8bdc8e146107885780638da5cb5b1461075557806398c3065f14610709578063a7ecd37e146106a2578063b223870014610651578063decfb3b21461018f5763f2fde38b146100bd57600080fd5b3461018b57602060031936011261018b576100d6610a7c565b916100df610b88565b73ffffffffffffffffffffffffffffffffffffffff831615610108578361010584610c07565b80f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b509061019a36610b3f565b8293919492359283875260029160209683885260ff858a20541661062957906101c39187610dc1565b156106025767ffffffffffffffff6101dd60c08701610c74565b1642116105db5783875281865282872091600192837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790558288905b6102ca575b50505050610231848401610cdd565b937fbff0538a548e4ea8a217734a505ce9d9375306f438db1247603684e165834db861028e61026360e0870187610cfe565b945191829185835273ffffffffffffffffffffffffffffffffffffffff809a16963396840191610d4f565b0390a46101008101916102a96102a48484610d8e565b610cdd565b166102b2578280f35b6102c4916102bf91610d8e565b6110e2565b38808280f35b60a08088016102d9818a610c89565b90508310156105d4576102ec9089610c89565b8310156105a8578a908360061b01878a013592600384101561018b578b938b9289606061031a818701610cdd565b97608061032685610cdd565b970135930135938a81146000146104315750505073ffffffffffffffffffffffffffffffffffffffff809616803b1561042d5760c4938a9387938e51998a9889977ff242432a00000000000000000000000000000000000000000000000000000000895233908901521660248701526044860152606485015260848401528160a48401525af1801561042357610414575b505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103e85783018361021d565b6024896011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b61041d90610df4565b386103b7565b86513d8c823e3d90fd5b8580fd5b92979650909350908084036104f6575050116104ce57908b9173ffffffffffffffffffffffffffffffffffffffff80921690813b156104ca57836064928b5196879586947f42842e0e000000000000000000000000000000000000000000000000000000008652338d87015216602485015260448401525af18015610423576104bb575b506103b9565b6104c490610df4565b386104b5565b8380fd5b8588517f289aef69000000000000000000000000000000000000000000000000000000008152fd5b919590949392509061058057610558578c606481938e938c519787528c5233861b602c526f23b872dd000000000000000000000000600c52601c9485915af18c5188143d1517161561054d57508a905285526103b9565b8590637939f4248d52fd5b8689517f289aef69000000000000000000000000000000000000000000000000000000008152fd5b878a517f289aef69000000000000000000000000000000000000000000000000000000008152fd5b60248b6032877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5050610222565b82517f664b28b0000000000000000000000000000000000000000000000000000000008152fd5b82517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b8285517fb383ff03000000000000000000000000000000000000000000000000000000008152fd5b503461018b5761066d9161066436610af3565b9082959261104d565b1561067c5783610105846110e2565b517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b83346107065760206003193601126107065773ffffffffffffffffffffffffffffffffffffffff6106d1610a7c565b6106d9610b88565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015580f35b80fd5b503461018b57600319926020843601126107065781359367ffffffffffffffff851161075157610120908536030112610706575060209261074a9101610e78565b9051908152f35b5080fd5b50503461075157816003193601126107515773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b505034610751576020906107a461079e36610b3f565b91610dc1565b90519015158152f35b83346107065780600319360112610706576107c6610b88565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b505034610751576020906107a461084136610af3565b9161104d565b503461018b578160031936011261018b57610860610a7c565b906024359273ffffffffffffffffffffffffffffffffffffffff84168094036109295760ff855460a01c1661090357505061089a90610c07565b7fffffffffffffffffffffffff00000000000000000000000000000000000000006001541617600155740100000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff82541617815580f35b517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8480fd5b503461018b57602060031936011261018b578160209360ff923581526002855220541690519015158152f35b50503461075157816003193601126107515760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b503461018b57600319926020843601126107065781359367ffffffffffffffff85116107515783908536030112610706575060209261074a9101611057565b9250503461018b57602060031936011261018b57357fffffffff00000000000000000000000000000000000000000000000000000000811680910361018b57602092508015908115610a52575b8115610a28575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438610a21565b7fcfb8e9aa0000000000000000000000000000000000000000000000000000000081149150610a1a565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610a9f57565b600080fd5b359073ffffffffffffffffffffffffffffffffffffffff82168203610a9f57565b9181601f84011215610a9f5782359167ffffffffffffffff8311610a9f5760208381860195010111610a9f57565b90600319604081840112610a9f5760043567ffffffffffffffff91828211610a9f576040908286030112610a9f5760040192602435918211610a9f57610b3b91600401610ac5565b9091565b90600319604081840112610a9f5760043567ffffffffffffffff91828211610a9f57610120908286030112610a9f5760040192602435918211610a9f57610b3b91600401610ac5565b73ffffffffffffffffffffffffffffffffffffffff600054163303610ba957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6000549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b3567ffffffffffffffff81168103610a9f5790565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610a9f570180359067ffffffffffffffff8211610a9f57602001918160061b36038313610a9f57565b3573ffffffffffffffffffffffffffffffffffffffff81168103610a9f5790565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610a9f570180359067ffffffffffffffff8211610a9f57602001918136038313610a9f57565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc181360301821215610a9f570190565b90610dcf610dd49392610e78565b6111d0565b73ffffffffffffffffffffffffffffffffffffffff806001541691161490565b67ffffffffffffffff8111610e0857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610e0857604052565b610e8460208201610cdd565b906040810135906003821015610a9f5790610ea160608301610cdd565b90610eaf60a0840184610c89565b939092610ebe60c08301610c74565b94610ecc60e0840184610cfe565b6080610edf610100879994990187610d8e565b956040519a8b966101608801994660208a0152833560408a01528473ffffffffffffffffffffffffffffffffffffffff998a809516606082015201521660a08c0152013560c08a015282610140968760e08c0152526101808901919260005b81811061101e575050610f90925067ffffffffffffffff8098166101008a01527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe096878a8403016101208b0152610d4f565b92848785030190870152610fa382610aa4565b16825260208101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe182360301811215610a9f570190602082359201938211610a9f578136038413610a9f576110149385926040838160206110089601520191610d4f565b03908101835282610e37565b6020815191012090565b9091926040806001928861103189610aa4565b1681526020880135602082015201950191019392919093610f3e565b90610dcf610dd493925b6110dc61107161106683610cdd565b926020810190610cfe565b6110b060409392935193849273ffffffffffffffffffffffffffffffffffffffff60208501974689521660408501526060808501526080840191610d4f565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610e37565b51902090565b6110f96110ee82610cdd565b916020810190610cfe565b91826040519384938437820190600093848094848280965203925af1903d156111ca573d9067ffffffffffffffff821161119d576040519161116360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184610e37565b825260203d92013e5b1561117357565b60046040517f7cc2fbb3000000000000000000000000000000000000000000000000000000008152fd5b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526041600452fd5b5061116c565b909160008093821561143b57600191813560f81c8381036112d8575050828211610929579081857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360209501950183906040968791825199855286838214604180931491611261575b5050505050608092505afa51923d15611254576060525290565b638baa579f90526004601cfd5b6112915761127c57505050506080915080853880808061123a565b6080950135841a87528137853880808061123a565b50507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91506021608095013590601b8260ff1c01885235885216606052853880808061123a565b60029097969492959391971480611430575b6112f6575b5050505050565b8496509390919293013560601c94816015116104ca5761137c9160209160405193849283927f1626ba7e000000000000000000000000000000000000000000000000000000009788855260048501526040602485015260157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeb6044860193019101610d4f565b0381885afa8391816113d4575b5061139e5750909250505b38808080806112ef565b7fffffffff0000000000000000000000000000000000000000000000000000000016036113cc575b50611394565b9150386113c6565b9091506020813d8211611428575b816113ef60209383610e37565b810103126104ca57517fffffffff00000000000000000000000000000000000000000000000000000000811681036104ca579038611389565b3d91506113e2565b5060158210156112ea565b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fdfea26469706673582212209aeb45877519b9acd168c435fba72de99b3576f5579e22daa46c2528edb74d6664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x9CD JUMPI POP DUP1 PUSH4 0xE6FE11F EQ PUSH2 0x98E JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x959 JUMPI DUP1 PUSH4 0x3A63B803 EQ PUSH2 0x92D JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x847 JUMPI DUP1 PUSH4 0x579A97E6 EQ PUSH2 0x82B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7AD JUMPI DUP1 PUSH4 0x7B8BDC8E EQ PUSH2 0x788 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x755 JUMPI DUP1 PUSH4 0x98C3065F EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xA7ECD37E EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xB2238700 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xDECFB3B2 EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI PUSH2 0xD6 PUSH2 0xA7C JUMP JUMPDEST SWAP2 PUSH2 0xDF PUSH2 0xB88 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0x108 JUMPI DUP4 PUSH2 0x105 DUP5 PUSH2 0xC07 JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 PUSH2 0x19A CALLDATASIZE PUSH2 0xB3F JUMP JUMPDEST DUP3 SWAP4 SWAP2 SWAP5 SWAP3 CALLDATALOAD SWAP3 DUP4 DUP8 MSTORE PUSH1 0x2 SWAP2 PUSH1 0x20 SWAP7 DUP4 DUP9 MSTORE PUSH1 0xFF DUP6 DUP11 KECCAK256 SLOAD AND PUSH2 0x629 JUMPI SWAP1 PUSH2 0x1C3 SWAP2 DUP8 PUSH2 0xDC1 JUMP JUMPDEST ISZERO PUSH2 0x602 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x1DD PUSH1 0xC0 DUP8 ADD PUSH2 0xC74 JUMP JUMPDEST AND TIMESTAMP GT PUSH2 0x5DB JUMPI DUP4 DUP8 MSTORE DUP2 DUP7 MSTORE DUP3 DUP8 KECCAK256 SWAP2 PUSH1 0x1 SWAP3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 DUP9 SWAP1 JUMPDEST PUSH2 0x2CA JUMPI JUMPDEST POP POP POP POP PUSH2 0x231 DUP5 DUP5 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP4 PUSH32 0xBFF0538A548E4EA8A217734A505CE9D9375306F438DB1247603684E165834DB8 PUSH2 0x28E PUSH2 0x263 PUSH1 0xE0 DUP8 ADD DUP8 PUSH2 0xCFE JUMP JUMPDEST SWAP5 MLOAD SWAP2 DUP3 SWAP2 DUP6 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP11 AND SWAP7 CALLER SWAP7 DUP5 ADD SWAP2 PUSH2 0xD4F JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x100 DUP2 ADD SWAP2 PUSH2 0x2A9 PUSH2 0x2A4 DUP5 DUP5 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xCDD JUMP JUMPDEST AND PUSH2 0x2B2 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0x2C4 SWAP2 PUSH2 0x2BF SWAP2 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x10E2 JUMP JUMPDEST CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0xA0 DUP1 DUP9 ADD PUSH2 0x2D9 DUP2 DUP11 PUSH2 0xC89 JUMP JUMPDEST SWAP1 POP DUP4 LT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x2EC SWAP1 DUP10 PUSH2 0xC89 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x5A8 JUMPI DUP11 SWAP1 DUP4 PUSH1 0x6 SHL ADD DUP8 DUP11 ADD CALLDATALOAD SWAP3 PUSH1 0x3 DUP5 LT ISZERO PUSH2 0x18B JUMPI DUP12 SWAP4 DUP12 SWAP3 DUP10 PUSH1 0x60 PUSH2 0x31A DUP2 DUP8 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP8 PUSH1 0x80 PUSH2 0x326 DUP6 PUSH2 0xCDD JUMP JUMPDEST SWAP8 ADD CALLDATALOAD SWAP4 ADD CALLDATALOAD SWAP4 DUP11 DUP2 EQ PUSH1 0x0 EQ PUSH2 0x431 JUMPI POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP7 AND DUP1 EXTCODESIZE ISZERO PUSH2 0x42D JUMPI PUSH1 0xC4 SWAP4 DUP11 SWAP4 DUP8 SWAP4 DUP15 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP10 MSTORE CALLER SWAP1 DUP10 ADD MSTORE AND PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x44 DUP7 ADD MSTORE PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD MSTORE DUP2 PUSH1 0xA4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x423 JUMPI PUSH2 0x414 JUMPI JUMPDEST POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x3E8 JUMPI DUP4 ADD DUP4 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x24 DUP10 PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH2 0x41D SWAP1 PUSH2 0xDF4 JUMP JUMPDEST CODESIZE PUSH2 0x3B7 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP3 SWAP8 SWAP7 POP SWAP1 SWAP4 POP SWAP1 DUP1 DUP5 SUB PUSH2 0x4F6 JUMPI POP POP GT PUSH2 0x4CE JUMPI SWAP1 DUP12 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x4CA JUMPI DUP4 PUSH1 0x64 SWAP3 DUP12 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH32 0x42842E0E00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE CALLER DUP14 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x423 JUMPI PUSH2 0x4BB JUMPI JUMPDEST POP PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x4C4 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST CODESIZE PUSH2 0x4B5 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP9 MLOAD PUSH32 0x289AEF6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 SWAP6 SWAP1 SWAP5 SWAP4 SWAP3 POP SWAP1 PUSH2 0x580 JUMPI PUSH2 0x558 JUMPI DUP13 PUSH1 0x64 DUP2 SWAP4 DUP15 SWAP4 DUP13 MLOAD SWAP8 DUP8 MSTORE DUP13 MSTORE CALLER DUP7 SHL PUSH1 0x2C MSTORE PUSH16 0x23B872DD000000000000000000000000 PUSH1 0xC MSTORE PUSH1 0x1C SWAP5 DUP6 SWAP2 GAS CALL DUP13 MLOAD DUP9 EQ RETURNDATASIZE ISZERO OR AND ISZERO PUSH2 0x54D JUMPI POP DUP11 SWAP1 MSTORE DUP6 MSTORE PUSH2 0x3B9 JUMP JUMPDEST DUP6 SWAP1 PUSH4 0x7939F424 DUP14 MSTORE REVERT JUMPDEST DUP7 DUP10 MLOAD PUSH32 0x289AEF6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP8 DUP11 MLOAD PUSH32 0x289AEF6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP12 PUSH1 0x32 DUP8 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST POP POP PUSH2 0x222 JUMP JUMPDEST DUP3 MLOAD PUSH32 0x664B28B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 MLOAD PUSH32 0x8BAA579F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP6 MLOAD PUSH32 0xB383FF0300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH2 0x66D SWAP2 PUSH2 0x664 CALLDATASIZE PUSH2 0xAF3 JUMP JUMPDEST SWAP1 DUP3 SWAP6 SWAP3 PUSH2 0x104D JUMP JUMPDEST ISZERO PUSH2 0x67C JUMPI DUP4 PUSH2 0x105 DUP5 PUSH2 0x10E2 JUMP JUMPDEST MLOAD PUSH32 0x8BAA579F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x706 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x706 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x6D1 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x6D9 PUSH2 0xB88 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x3 NOT SWAP3 PUSH1 0x20 DUP5 CALLDATASIZE ADD SLT PUSH2 0x706 JUMPI DUP2 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x751 JUMPI PUSH2 0x120 SWAP1 DUP6 CALLDATASIZE SUB ADD SLT PUSH2 0x706 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x74A SWAP2 ADD PUSH2 0xE78 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x751 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x751 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x751 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x7A4 PUSH2 0x79E CALLDATASIZE PUSH2 0xB3F JUMP JUMPDEST SWAP2 PUSH2 0xDC1 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x706 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x706 JUMPI PUSH2 0x7C6 PUSH2 0xB88 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x751 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x7A4 PUSH2 0x841 CALLDATASIZE PUSH2 0xAF3 JUMP JUMPDEST SWAP2 PUSH2 0x104D JUMP JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI PUSH2 0x860 PUSH2 0xA7C JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP1 SWAP5 SUB PUSH2 0x929 JUMPI PUSH1 0xFF DUP6 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x903 JUMPI POP POP PUSH2 0x89A SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH21 0x10000000000000000000000000000000000000000 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SLOAD AND OR DUP2 SSTORE DUP1 RETURN JUMPDEST MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x751 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x751 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x3 NOT SWAP3 PUSH1 0x20 DUP5 CALLDATASIZE ADD SLT PUSH2 0x706 JUMPI DUP2 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x751 JUMPI DUP4 SWAP1 DUP6 CALLDATASIZE SUB ADD SLT PUSH2 0x706 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x74A SWAP2 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP3 POP POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x18B JUMPI PUSH1 0x20 SWAP3 POP DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0xA52 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0xA28 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0xA21 JUMP JUMPDEST PUSH32 0xCFB8E9AA00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xA9F JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xA9F JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xA9F JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xA9F JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0xA9F JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x3 NOT PUSH1 0x40 DUP2 DUP5 ADD SLT PUSH2 0xA9F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0xA9F JUMPI PUSH1 0x40 SWAP1 DUP3 DUP7 SUB ADD SLT PUSH2 0xA9F JUMPI PUSH1 0x4 ADD SWAP3 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xA9F JUMPI PUSH2 0xB3B SWAP2 PUSH1 0x4 ADD PUSH2 0xAC5 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH1 0x3 NOT PUSH1 0x40 DUP2 DUP5 ADD SLT PUSH2 0xA9F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0xA9F JUMPI PUSH2 0x120 SWAP1 DUP3 DUP7 SUB ADD SLT PUSH2 0xA9F JUMPI PUSH1 0x4 ADD SWAP3 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xA9F JUMPI PUSH2 0xB3B SWAP2 PUSH1 0x4 ADD PUSH2 0xAC5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0xBA9 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0xA9F JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0xA9F JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xA9F JUMPI PUSH1 0x20 ADD SWAP2 DUP2 PUSH1 0x6 SHL CALLDATASIZE SUB DUP4 SGT PUSH2 0xA9F JUMPI JUMP JUMPDEST CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0xA9F JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0xA9F JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xA9F JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0xA9F JUMPI JUMP JUMPDEST PUSH1 0x1F DUP3 PUSH1 0x20 SWAP5 SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP4 DUP2 DUP7 MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0xA9F JUMPI ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDCF PUSH2 0xDD4 SWAP4 SWAP3 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x11D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x1 SLOAD AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE08 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE08 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE84 PUSH1 0x20 DUP3 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xA9F JUMPI SWAP1 PUSH2 0xEA1 PUSH1 0x60 DUP4 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP1 PUSH2 0xEAF PUSH1 0xA0 DUP5 ADD DUP5 PUSH2 0xC89 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0xEBE PUSH1 0xC0 DUP4 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP5 PUSH2 0xECC PUSH1 0xE0 DUP5 ADD DUP5 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x80 PUSH2 0xEDF PUSH2 0x100 DUP8 SWAP10 SWAP5 SWAP10 ADD DUP8 PUSH2 0xD8E JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP7 PUSH2 0x160 DUP9 ADD SWAP10 CHAINID PUSH1 0x20 DUP11 ADD MSTORE DUP4 CALLDATALOAD PUSH1 0x40 DUP11 ADD MSTORE DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP10 DUP11 DUP1 SWAP6 AND PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE AND PUSH1 0xA0 DUP13 ADD MSTORE ADD CALLDATALOAD PUSH1 0xC0 DUP11 ADD MSTORE DUP3 PUSH2 0x140 SWAP7 DUP8 PUSH1 0xE0 DUP13 ADD MSTORE MSTORE PUSH2 0x180 DUP10 ADD SWAP2 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x101E JUMPI POP POP PUSH2 0xF90 SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 SWAP9 AND PUSH2 0x100 DUP11 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP7 DUP8 DUP11 DUP5 SUB ADD PUSH2 0x120 DUP12 ADD MSTORE PUSH2 0xD4F JUMP JUMPDEST SWAP3 DUP5 DUP8 DUP6 SUB ADD SWAP1 DUP8 ADD MSTORE PUSH2 0xFA3 DUP3 PUSH2 0xAA4 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0xA9F JUMPI ADD SWAP1 PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 ADD SWAP4 DUP3 GT PUSH2 0xA9F JUMPI DUP2 CALLDATASIZE SUB DUP5 SGT PUSH2 0xA9F JUMPI PUSH2 0x1014 SWAP4 DUP6 SWAP3 PUSH1 0x40 DUP4 DUP2 PUSH1 0x20 PUSH2 0x1008 SWAP7 ADD MSTORE ADD SWAP2 PUSH2 0xD4F JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0x40 DUP1 PUSH1 0x1 SWAP3 DUP9 PUSH2 0x1031 DUP10 PUSH2 0xAA4 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP6 ADD SWAP2 ADD SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 PUSH2 0xF3E JUMP JUMPDEST SWAP1 PUSH2 0xDCF PUSH2 0xDD4 SWAP4 SWAP3 JUMPDEST PUSH2 0x10DC PUSH2 0x1071 PUSH2 0x1066 DUP4 PUSH2 0xCDD JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x10B0 PUSH1 0x40 SWAP4 SWAP3 SWAP4 MLOAD SWAP4 DUP5 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP6 ADD SWAP8 CHAINID DUP10 MSTORE AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP2 PUSH2 0xD4F JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xE37 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x10F9 PUSH2 0x10EE DUP3 PUSH2 0xCDD JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCFE JUMP JUMPDEST SWAP2 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 CALLDATACOPY DUP3 ADD SWAP1 PUSH1 0x0 SWAP4 DUP5 DUP1 SWAP5 DUP5 DUP3 DUP1 SWAP7 MSTORE SUB SWAP3 GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x11CA JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x119D JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1163 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0xE37 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x1173 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x7CC2FBB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP PUSH2 0x116C JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 DUP1 SWAP4 DUP3 ISZERO PUSH2 0x143B JUMPI PUSH1 0x1 SWAP2 DUP2 CALLDATALOAD PUSH1 0xF8 SHR DUP4 DUP2 SUB PUSH2 0x12D8 JUMPI POP POP DUP3 DUP3 GT PUSH2 0x929 JUMPI SWAP1 DUP2 DUP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SWAP6 ADD SWAP6 ADD DUP4 SWAP1 PUSH1 0x40 SWAP7 DUP8 SWAP2 DUP3 MLOAD SWAP10 DUP6 MSTORE DUP7 DUP4 DUP3 EQ PUSH1 0x41 DUP1 SWAP4 EQ SWAP2 PUSH2 0x1261 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x80 SWAP3 POP GAS STATICCALL MLOAD SWAP3 RETURNDATASIZE ISZERO PUSH2 0x1254 JUMPI PUSH1 0x60 MSTORE MSTORE SWAP1 JUMP JUMPDEST PUSH4 0x8BAA579F SWAP1 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH2 0x1291 JUMPI PUSH2 0x127C JUMPI POP POP POP POP PUSH1 0x80 SWAP2 POP DUP1 DUP6 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x80 SWAP6 ADD CALLDATALOAD DUP5 BYTE DUP8 MSTORE DUP2 CALLDATACOPY DUP6 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x123A JUMP JUMPDEST POP POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP PUSH1 0x21 PUSH1 0x80 SWAP6 ADD CALLDATALOAD SWAP1 PUSH1 0x1B DUP3 PUSH1 0xFF SHR ADD DUP9 MSTORE CALLDATALOAD DUP9 MSTORE AND PUSH1 0x60 MSTORE DUP6 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x2 SWAP1 SWAP8 SWAP7 SWAP5 SWAP3 SWAP6 SWAP4 SWAP2 SWAP8 EQ DUP1 PUSH2 0x1430 JUMPI JUMPDEST PUSH2 0x12F6 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 SWAP7 POP SWAP4 SWAP1 SWAP2 SWAP3 SWAP4 ADD CALLDATALOAD PUSH1 0x60 SHR SWAP5 DUP2 PUSH1 0x15 GT PUSH2 0x4CA JUMPI PUSH2 0x137C SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP8 DUP9 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x15 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEB PUSH1 0x44 DUP7 ADD SWAP4 ADD SWAP2 ADD PUSH2 0xD4F JUMP JUMPDEST SUB DUP2 DUP9 GAS STATICCALL DUP4 SWAP2 DUP2 PUSH2 0x13D4 JUMPI JUMPDEST POP PUSH2 0x139E JUMPI POP SWAP1 SWAP3 POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x12EF JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SUB PUSH2 0x13CC JUMPI JUMPDEST POP PUSH2 0x1394 JUMP JUMPDEST SWAP2 POP CODESIZE PUSH2 0x13C6 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1428 JUMPI JUMPDEST DUP2 PUSH2 0x13EF PUSH1 0x20 SWAP4 DUP4 PUSH2 0xE37 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4CA JUMPI MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 SUB PUSH2 0x4CA JUMPI SWAP1 CODESIZE PUSH2 0x1389 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x13E2 JUMP JUMPDEST POP PUSH1 0x15 DUP3 LT ISZERO PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xEB GASLIMIT DUP8 PUSH22 0x19B9ACD168C435FBA72DE99B3576F5579E22DAA46C25 0x28 0xED 0xB7 0x4D PUSH7 0x64736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "563:6376:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;563:6376:18;;;;;;;:::i;:::-;1097:65:3;;;:::i;:::-;563:6376:18;;;2231:22:3;563:6376:18;;2326:8:3;;;;:::i;:::-;563:6376:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;1622:15;563:6376;;;;;;;;;;;;1618:104;;1736:50;;;;;:::i;:::-;1735:51;1731:107;;563:6376;1869:25;;;;;:::i;:::-;563:6376;1851:15;:43;1847:97;;563:6376;;;;;;;;;;;;;;;;;;;;2057:13;;2052:524;563:6376;;;2052:524;2634:31;;;;;;;;;:::i;:::-;2694:24;2613:106;563:6376;2694:24;563:6376;2694:24;;;;:::i;:::-;563:6376;;;;;;;;;;;;2031:10;;563:6376;;;;;:::i;:::-;2613:106;;;2766:33;;;;:52;:33;;;;:::i;:::-;:52;:::i;:::-;563:6376;2762:151;;563:6376;;;2762:151;2868:33;;;;;:::i;:::-;;:::i;:::-;2762:151;;563:6376;;;2117:3;2076:32;;;;;;;;:::i;:::-;2072:43;;;;;;;2267:32;;;;:::i;:::-;563:6376;;;;;;;;;;;2346:24;;;563:6376;;;;;;;;2388:27;;;;;;;;;;;:::i;:::-;2458:19;2495:22;2458:19;;;:::i;:::-;2495:22;;563:6376;2535:16;;563:6376;5943:30;;;;5939:695;1622:15;;;563:6376;;;;;;;6013:67;;;;;563:6376;;;;;;;;6013:67;;;;;563:6376;6013:67;;2031:10;6013:67;;;563:6376;;;;;;;;;;;;;;;;;;;;;;;6013:67;;;;;;;;5939:695;;;563:6376;;;;;;;;2057:13;;563:6376;;;;;;;;;;6013:67;;;;:::i;:::-;;;;;563:6376;;;;;;;;;6013:67;563:6376;;;5939:695;6101:29;;;-1:-1:-1;6101:29:18;;-1:-1:-1;6101:29:18;;;;563:6376;;6173:10;;;6169:78;;563:6376;;;;;;;6260:62;;;;;;563:6376;;;;;6260:62;;;;;563:6376;6260:62;;2031:10;6260:62;;;563:6376;;;;;;;;;;6260:62;;;;;;;;6097:537;;5939:695;;6260:62;;;;:::i;:::-;;;;;563:6376;;;6169:78;563:6376;;;6210:22;;;;6097:537;6343:28;;;;;;-1:-1:-1;6343:28:18;;;6409:80;;9254:988:15;;;;;;;;;;;;;2031:10:18;9254:988:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5939:695:18;;9254:988:15;;;;;;;6409:80:18;563:6376;;;6452:22;;;;6339:295;563:6376;;;6601:22;;;;563:6376;;;;;;;;;;2072:43;;;;;1847:97;563:6376;;1917:16;;;;1731:107;563:6376;;1809:18;;;;1618:104;563:6376;;;1687:24;;;;563:6376;;;;;4410:58;563:6376;;;;:::i;:::-;4410:58;;;;;:::i;:::-;4409:59;4405:115;;4549:18;;;;:::i;4405:115::-;563:6376;4491:18;;;;563:6376;;;;;;-1:-1:-1;;563:6376:18;;;;;;;;:::i;:::-;1097:65:3;;:::i;:::-;563:6376:18;;1386:18;563:6376;;;1386:18;563:6376;;;;;;;;;;;-1:-1:-1;;563:6376:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;563:6376:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;563:6376:18;;;;;1097:65:3;;:::i;:::-;563:6376:18;;;;;;;;;;2646:40:3;;;;563:6376:18;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;563:6376:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1080:73;;1190:6;;;;;:::i;:::-;563:6376;1207:16;563:6376;;;1207:16;563:6376;;;;;;;;;;;1080:73;563:6376;1119:23;;;;563:6376;;;;;;;;;;-1:-1:-1;;563:6376:18;;;;;;;;;;;;;764:47;563:6376;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;563:6376:18;;;;;;;;693:21;563:6376;;;;;;;;;;;;;-1:-1:-1;;563:6376:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;563:6376:18;;;;;;;;;;;;;;;6774:43;;;;:99;;;;;563:6376;6774:156;;;;563:6376;;;;;;;6774:156;6905:25;6889:41;;;6774:156;;;:99;6837:36;6821:52;;;-1:-1:-1;6774:99:18;;563:6376;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;563:6376:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;563:6376:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1408:132:3:-;563:6376:18;1316:6:3;563:6376:18;;736:10:11;1472:23:3;563:6376:18;;1408:132:3:o;563:6376:18:-;;;;;;;;;;;;;;;;;;;;;;;2503:191:3;2596:6;563:6376:18;;;;;;;;;;;;2596:6:3;563:6376:18;;2646:40:3;2596:6;2646:40;;2503:191::o;563:6376:18:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;563:6376:18;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;3052:329::-;;3238:34;3302:36;3052:329;;3238:34;:::i;:::-;3302:36;:::i;:::-;563:6376;;3368:6;563:6376;;;;3355:19;3052:329;:::o;563:6376::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3472:615::-;3712:31;;;;;:::i;:::-;3761:24;;;;563:6376;;;;;;;;3803:27;;;;;;:::i;:::-;3888:32;;;;;;;:::i;:::-;3938:25;;;;;;;;:::i;:::-;3981:24;;;;;;;:::i;:::-;3848:22;4023:33;;;;;;;;;:::i;:::-;563:6376;3761:24;563:6376;;;;;;;3638:13;;3712:31;3610:460;;563:6376;;;3761:24;563:6376;;;;;;;;;;3803:27;563:6376;;;;;;3888:32;563:6376;;;3848:22;563:6376;3938:25;563:6376;;;;;;;3981:24;563:6376;;;;;;;;;-1:-1:-1;563:6376:18;;;;;;;;;;;;;;;4023:33;563:6376;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;3712:31;563:6376;;;;;;;;;;;;;;;3712:31;563:6376;;;;;;;;;;;;;;;;3610:460;563:6376;;;3761:24;563:6376;;3712:31;563:6376;;;;;;;:::i;:::-;3610:460;;;;;;;;:::i;:::-;3712:31;563:6376;;3610:460;;3587:493;3472:615;:::o;563:6376::-;;;;3761:24;563:6376;;;;;;;:::i;:::-;;;;3712:31;563:6376;;;3712:31;563:6376;;;;;;;;;;;;;;;4620:349;;4818:42;4890:36;4620:349;;5060:267;5210:100;5275:34;5236:37;;;:::i;:::-;5275:34;;;;;;:::i;:::-;563:6376;;;;;;5210:100;;;563:6376;5275:34;5210:100;;5221:13;;563:6376;;;;;;;;;;;;;;;;;:::i;:::-;5210:100;;;;;;;;:::i;:::-;563:6376;5187:133;;5060:267;:::o;5400:283::-;5567:34;5514:37;;;:::i;:::-;5567:34;;;;;;:::i;:::-;563:6376;;;;;;;;;;;5514:37;;563:6376;;;;;;;;;5514:88;;;;563:6376;;;;;;;;;;;;;;;;5567:34;563:6376;;;;;;;;:::i;:::-;;;5567:34;563:6376;;;;;5616:8;5612:65;;5400:283::o;5612:65::-;5647:19;563:6376;;5647:19;;;;563:6376;;;;;;;;;;;;;;792:891:26;;;563:6376:18;;;;;;;309:1:26;;988:12;;563:6376:18;;1015:26:26;;;309:1;;358;;;;;;;;;;;;4260:1664:14;358:1:26;;;;4260:1664:14;;;;;;;;;;;;;;;;;;;;309:1:26;;4260:1664:14;;;;;;;;;;;;;;;;;;;;1011:666:26;792:891::o;4260:1664:14:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;563:6376:18;4260:1664:14;;;;;;;;;;;;;;;;;1011:666:26;358:1;1146:27;;;;;;;;;;:53;;;1011:666;1142:535;;1011:666;;;;;;792:891::o;1142:535::-;1238:131;;;;;;;;;;;;358:1;;1444:2;358:1;;;;563:6376:18;1386:63:26;563:6376:18;;;;;;;;;1386:63:26;;;;;;;563:6376:18;;358:1:26;;;;1444:2;358:1;;;;;;;;;:::i;:::-;1386:63;;;;;;;;;;1142:535;-1:-1:-1;1382:285:26;;-1:-1:-1;1633:19:26;;-1:-1:-1;;1382:285:26;1142:535;;;;;;;1382:285;563:6376:18;;1500:32:26;1496:98;;1382:285;;;;1496:98;1556:19;-1:-1:-1;1496:98:26;;;1386:63;;;;;;;;;;;;;;;;;;:::i;:::-;;;358:1;;;;;563:6376:18;;;;;;;1386:63:26;;;;;;;-1:-1:-1;1386:63:26;;1146:53;1177:22;1197:2;1177:22;;;1146:53;;563:6376:18;;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ChainedCallFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenTransfer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PaymentAlreadyAccepted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PaymentExpired\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"productRecipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"}],\"name\":\"PaymentMade\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"}],\"name\":\"hashChainedCallDetails\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"productRecipient\",\"type\":\"address\"},{\"internalType\":\"enum IPaymentsFunctions.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentRecipient[]\",\"name\":\"paymentRecipients\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"expiration\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentDetails\",\"name\":\"paymentDetails\",\"type\":\"tuple\"}],\"name\":\"hashPaymentDetails\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_signer\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidChainedCallSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"productRecipient\",\"type\":\"address\"},{\"internalType\":\"enum IPaymentsFunctions.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentRecipient[]\",\"name\":\"paymentRecipients\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"expiration\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentDetails\",\"name\":\"paymentDetails\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"isValidPaymentSignature\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"purchaseId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"productRecipient\",\"type\":\"address\"},{\"internalType\":\"enum IPaymentsFunctions.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentRecipient[]\",\"name\":\"paymentRecipients\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64\",\"name\":\"expiration\",\"type\":\"uint64\"},{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"}],\"internalType\":\"struct IPaymentsFunctions.PaymentDetails\",\"name\":\"paymentDetails\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"makePayment\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"paymentAccepted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"chainedCallAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"chainedCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct IPaymentsFunctions.ChainedCallDetails\",\"name\":\"chainedCallDetails\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"performChainedCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSigner\",\"type\":\"address\"}],\"name\":\"updateSigner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"hashChainedCallDetails((address,bytes))\":{\"details\":\"This hash includes the chain ID.\",\"params\":{\"chainedCallDetails\":\"The chained call details.\"},\"returns\":{\"_0\":\"The hash of the chained call for signing.\"}},\"hashPaymentDetails((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)))\":{\"details\":\"This hash includes the chain ID.\",\"params\":{\"paymentDetails\":\"The payment details.\"},\"returns\":{\"_0\":\"The hash of the payment details for signing.\"}},\"initialize(address,address)\":{\"details\":\"This should be called immediately after deployment.\",\"params\":{\"_owner\":\"Owner address\",\"_signer\":\"Signer address\"}},\"isValidChainedCallSignature((address,bytes),bytes)\":{\"params\":{\"chainedCallDetails\":\"The chained call details.\",\"signature\":\"The signature of the chained call.\"},\"returns\":{\"_0\":\"True if the signature is valid.\"}},\"isValidPaymentSignature((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)\":{\"params\":{\"paymentDetails\":\"The payment details.\",\"signature\":\"The signature of the payment.\"},\"returns\":{\"_0\":\"True if the signature is valid.\"}},\"makePayment((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)\":{\"params\":{\"paymentDetails\":\"The payment details.\",\"signature\":\"The signature of the payment.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"performChainedCall((address,bytes),bytes)\":{\"details\":\"As the signer can validate any payment (including zero) this function does not increase the security surface.\",\"params\":{\"chainedCallDetails\":\"The chained call details.\",\"signature\":\"The signature of the chained call.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas\",\"params\":{\"_interfaceId\":\"The interface identifier, as specified in ERC-165\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"paymentAccepted\":{\"params\":{\"purchaseId\":\"The ID of the purchase.\"},\"return\":\"accepted True if the payment has been accepted.\",\"returns\":{\"_0\":\"accepted True if the payment has been accepted.\"}},\"signer\":{\"return\":\"signer The signer address.\",\"returns\":{\"_0\":\"signer The signer address.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"ChainedCallFailed()\":[{\"notice\":\"Emitted when a chained call fails.\"}],\"InvalidInitialization()\":[{\"notice\":\"Emitted when contract is already initialized.\"}],\"InvalidSignature()\":[{\"notice\":\"Emitted when a signature is invalid.\"}],\"InvalidTokenTransfer()\":[{\"notice\":\"Emitted when a token transfer is invalid.\"}],\"PaymentAlreadyAccepted()\":[{\"notice\":\"Emitted when a payment is already accepted. This prevents double spending.\"}],\"PaymentExpired()\":[{\"notice\":\"Emitted when a payment has expired.\"}]},\"events\":{\"PaymentMade(address,address,uint256,string)\":{\"notice\":\"Emitted when a payment is made.\"}},\"kind\":\"user\",\"methods\":{\"hashChainedCallDetails((address,bytes))\":{\"notice\":\"Returns the hash of the chained call.\"},\"hashPaymentDetails((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)))\":{\"notice\":\"Returns the hash of the payment details.\"},\"initialize(address,address)\":{\"notice\":\"Initialize the contract.\"},\"isValidChainedCallSignature((address,bytes),bytes)\":{\"notice\":\"Check is a chained call signature is valid.\"},\"isValidPaymentSignature((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)\":{\"notice\":\"A valid signature does not guarantee that the payment will be accepted.\"},\"makePayment((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)\":{\"notice\":\"Make a payment for a product.\"},\"paymentAccepted(uint256)\":{\"notice\":\"Check if a payment has been accepted.\"},\"performChainedCall((address,bytes),bytes)\":{\"notice\":\"Complete a chained call.\"},\"signer()\":{\"notice\":\"Get the signer address.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateSigner(address)\":{\"notice\":\"Update the signer address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/payments/Payments.sol\":\"Payments\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x73a4ea88c195262c79aed1a8ad6da1e599e0ebe3911a89014e410dae6debda74\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d9f63f1c107c912620de676785b876f798f1563fee4fee897d45012daf52131\",\"dweb:/ipfs/QmQTvyVSZCUYjjo95yGgQgQvKzTBhb9fRbuzKvpmP5v5aQ\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x7ff7bbcad2aa3e45b0ec97cfee3bc25a07be957b4060f87aeb75b73e09c3823a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2921978ea9b6ea7c1ba2c1704d79e02201d0fd468392a2ce129b32c071e04d7b\",\"dweb:/ipfs/QmVnnovTQ4zLWUUdJywbCbeHDtgDJ3vhUhwWo3FnM6e6yk\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]},\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3\",\"dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/solady/src/utils/ECDSA.sol\":{\"keccak256\":\"0x317f8208d1f03356e8f709eec8e2c579d6be227099a26f777cc9ec8a06814ae4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f437b1683add465da31ecc92259d056d11edb4ea95dff22a8519fdabd82423dc\",\"dweb:/ipfs/QmbsFH26DQtnb97yqfF6Bw7CULFXupcra1x1xcq2Yy63FY\"]},\"lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x583f47701d9b47bb3ef80fcabbbd62fbb58a01733b7a57e19658b4b02468883a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2523bfac005e21ef9963fdb3c08b2c61824e2b5ce2f53d1a1828b01ed995217c\",\"dweb:/ipfs/QmbBjVG9tZyeZSQH4m5GUzNBwo2iuvLoZYbmhT4gxnJc4J\"]},\"src/payments/IPayments.sol\":{\"keccak256\":\"0x87572398ac77fe65a8dbf0f434c5375be87b994fd03d10e626cd4290f1ecff77\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7894b9e6d1bd8efd2bf9f3822f5e13a4bc8893a066b5168bdc90fa8d9173cc98\",\"dweb:/ipfs/Qmd9HJAgizHRpJFRGRKrGdASjUrj6Wy2VzuEEJknPwBLiS\"]},\"src/payments/Payments.sol\":{\"keccak256\":\"0x848a020a5aaa3ec49a04077956d8ac0a03793e53a962e4b83850d18bf9dc1fae\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://126a6142ec3313e58a532fd24da8c13b79215ecc3931e558d6cfffea833f97f5\",\"dweb:/ipfs/Qmf3bwLBx3XJM9yKKpscg18F9aK8dqPR7Np3m4DBWdBQhR\"]},\"src/tokens/common/IERC721Transfer.sol\":{\"keccak256\":\"0xb8295185decbabfcba7aafe000cc42fdb29bbccf3ead5c61f09c4cea06cbba48\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cb48fac70022eed6f278f88f2f4170ccf67084117f401189f3433cbf00511887\",\"dweb:/ipfs/QmQJcyLh4UW5JDTs9HHTsXSF9FeRa4eMziVQ26j1YMTM86\"]},\"src/utils/SignatureValidator.sol\":{\"keccak256\":\"0xffbb2fb71f103bbb676f0087d57d1cdc8227b44621a8c67ee67b51baa53f5d00\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://217f3016e0714a0f4f22e901dedec28818e5dd65cbd594da3239cd060e9bb6ce\",\"dweb:/ipfs/QmVAQywSeoudCmBu9ufXaEfKZTFh5PPTFxmDitDiAM1XZv\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ChainedCallFailed()": [
								{
									"notice": "Emitted when a chained call fails."
								}
							],
							"InvalidInitialization()": [
								{
									"notice": "Emitted when contract is already initialized."
								}
							],
							"InvalidSignature()": [
								{
									"notice": "Emitted when a signature is invalid."
								}
							],
							"InvalidTokenTransfer()": [
								{
									"notice": "Emitted when a token transfer is invalid."
								}
							],
							"PaymentAlreadyAccepted()": [
								{
									"notice": "Emitted when a payment is already accepted. This prevents double spending."
								}
							],
							"PaymentExpired()": [
								{
									"notice": "Emitted when a payment has expired."
								}
							]
						},
						"events": {
							"PaymentMade(address,address,uint256,string)": {
								"notice": "Emitted when a payment is made."
							}
						},
						"kind": "user",
						"methods": {
							"hashChainedCallDetails((address,bytes))": {
								"notice": "Returns the hash of the chained call."
							},
							"hashPaymentDetails((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)))": {
								"notice": "Returns the hash of the payment details."
							},
							"initialize(address,address)": {
								"notice": "Initialize the contract."
							},
							"isValidChainedCallSignature((address,bytes),bytes)": {
								"notice": "Check is a chained call signature is valid."
							},
							"isValidPaymentSignature((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)": {
								"notice": "A valid signature does not guarantee that the payment will be accepted."
							},
							"makePayment((uint256,address,uint8,address,uint256,(address,uint256)[],uint64,string,(address,bytes)),bytes)": {
								"notice": "Make a payment for a product."
							},
							"paymentAccepted(uint256)": {
								"notice": "Check if a payment has been accepted."
							},
							"performChainedCall((address,bytes),bytes)": {
								"notice": "Complete a chained call."
							},
							"signer()": {
								"notice": "Get the signer address."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateSigner(address)": {
								"notice": "Update the signer address."
							}
						},
						"version": 1
					}
				}
			},
			"src/payments/PaymentsFactory.sol": {
				"PaymentsFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "PaymentsDeployed",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beacon",
							"outputs": [
								{
									"internalType": "contract UpgradeableBeacon",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "paymentsOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "paymentsSigner",
									"type": "address"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "paymentsOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "paymentsSigner",
									"type": "address"
								}
							],
							"name": "determineAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "upgradeBeacon",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"PaymentsDeployed(address)": {
								"params": {
									"proxyAddr": "The address of the deployed proxy."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"factoryOwner": "The owner of the Payments Factory"
								}
							},
							"deploy(address,address,address)": {
								"params": {
									"paymentsOwner": "The owner of the Payments implementation",
									"paymentsSigner": "The signer of the Payments implementation",
									"proxyOwner": "The owner of the Payments proxy"
								},
								"returns": {
									"proxyAddr": "The address of the Payments proxy"
								}
							},
							"determineAddress(address,address,address)": {
								"params": {
									"paymentsOwner": "The owner of the Payments implementation",
									"paymentsSigner": "The signer of the Payments implementation",
									"proxyOwner": "The owner of the Payments proxy"
								},
								"returns": {
									"proxyAddr": "The address of the Payments proxy"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeBeacon(address)": {
								"params": {
									"implementation": "The new beacon implementation."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"fun_transferOwnership": {
									"entryPoint": 294,
									"id": 260,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608034610121576001600160401b0390601f6138d138819003918201601f191683019291908484118385101761010b57816020928492604096875283398101031261012157516001600160a01b0380821682036101215761005f33610126565b8251936114ff94858101958187108388111761010b576123d2823980600096039086f0908115610101578451916105ee808401928311848410176100ed5791848492602094611de4853916815203019085f080156100e0576100d39394501660018060a01b03196001541617600155610126565b51611c76908161016e8239f35b50505051903d90823e3d90fd5b634e487b7160e01b88526041600452602488fd5b84513d87823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6040608081526004908136101561001557600080fd5b600091823560e01c80631bce45831461079057806359659e901461073d578063715018a6146106a05780638da5cb5b1461064b578063d9181cd3146102ee578063e657f693146101aa5763f2fde38b1461006e57600080fd5b346101a65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a6576100a561084f565b906100ae6108bd565b73ffffffffffffffffffffffffffffffffffffffff809216928315610123575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b8284346102eb5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102eb57506101e461084f565b906101ed610877565b916055600b6101fa61089a565b845173ffffffffffffffffffffffffffffffffffffffff968716602080830191825292909716604080830191909152815290957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09161025a60608261099b565b519020906102ab86519161026d8361097f565b6000835273ffffffffffffffffffffffffffffffffffffffff9661029f8860015416948a519586938d850198896109ff565b0390810183528261099b565b5190206111eb85516102bf8883018261099b565b81815287810191610a5683395190209085519186830152868201523081520160ff815320915191168152f35b80fd5b5090346101a65760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a65761032761084f565b92610330610877565b61033861089a565b908351946020968787018761037586868490602090939293604083019473ffffffffffffffffffffffffffffffffffffffff809216845216910152565b03976103a77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0998a810183528261099b565b5190208651916103b68361097f565b6000835273ffffffffffffffffffffffffffffffffffffffff91816103f98c6103ed878d88600154169051958694850197886109ff565b038c810183528261099b565b5190206111eb895161040d8d83018261099b565b8181528c810191610a5683398051156105f057518492918af516988915610594578260015416938a3b156105905791608491601f8a95946104988f8e51998a9889977fcf7a1d77000000000000000000000000000000000000000000000000000000008952168c880152602487015260606044870152825192839182606489015288880191016109dc565b01168101030181838b5af1801561058657908591610572575b5050853b1561056e5784517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316918101918252929091166020820152829082908190604001038183885af1801561056457610550575b50507ffd420143d893df8a37b4078d9c81efaa2fb5fc7a74cc5512ccb158588de5fcfc838251848152a151908152f35b61055a829161093c565b6102eb5780610520565b83513d84823e3d90fd5b8380fd5b61057b9061093c565b61056e5783386104b1565b86513d87823e3d90fd5b8880fd5b6064858c8b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152fd5b6064878e808e51927f08c379a000000000000000000000000000000000000000000000000000000000845283015260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fd5b50503461069c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069c5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b83346102eb57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102eb576106d76108bd565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461069c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069c5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5090346101a65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a657826107ca61084f565b6107d26108bd565b73ffffffffffffffffffffffffffffffffffffffff90816001541690813b1561056e5783602492865197889586947f3659cfe600000000000000000000000000000000000000000000000000000000865216908401525af1908115610846575061083a575080f35b6108439061093c565b80f35b513d84823e3d90fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361087257565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361087257565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361087257565b73ffffffffffffffffffffffffffffffffffffffff6000541633036108de57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff811161095057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761095057604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761095057604052565b60005b8381106109ef5750506000910152565b81810151838201526020016109df565b9190926048949383527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809260601b16602084015260601b166034820152610a5082518093602086850191016109dc565b01019056fe60808060405234610016576111cf908161001c8239f35b600080fdfe604060808152366103825773ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000917fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000843516146100c057600484517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b6100c8611192565b60049136831161037e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037e578235916101088361067f565b602435926101158461067f565b60443567ffffffffffffffff811161037a57610135839136908801610789565b941692156103525761014791166107e3565b803b156102cf578451907f5c60da1b000000000000000000000000000000000000000000000000000000009384835260209687848381865afa9384156102a657889461019d9189916102b2575b503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790555194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab575b610242575b8361023c6107d0565b80519101f35b8592839182525afa9182156102a65761026a9392610277575b506102646109b1565b91610a21565b5038808083818080610233565b610298919250843d861161029f575b610290818361070e565b810190610902565b903861025b565b503d610286565b61091a565b508661022e565b6102c99150863d881161029f57610290818361070e565b38610194565b60848360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b8487517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b8380fd5b73ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000907fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000833516146104395760046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b610441611192565b60049236841161067b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067b5783356104808161067f565b6024359161048d8361067f565b60443567ffffffffffffffff8111610677576104ad829136908901610789565b9316931561064e576104bf91166107e3565b813b156105ca576040517f5c60da1b000000000000000000000000000000000000000000000000000000009283825260209586838281855afa9283156102a65787936105149188916105b357503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617905560405194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab57610242578361023c6107d0565b6102c99150853d871161029f57610290818361070e565b6084846020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b856040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b8280fd5b73ffffffffffffffffffffffffffffffffffffffff81160361069d57565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106ed57604052565b6106a2565b6040810190811067ffffffffffffffff8211176106ed57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106ed57604052565b67ffffffffffffffff81116106ed57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561069d578035906107a08261074f565b926107ae604051948561070e565b8284526020838301011161069d57816000926020809301838601378301015290565b604051906107dd826106d1565b60008252565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61039081547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604080519373ffffffffffffffffffffffffffffffffffffffff9081851686521693846020820152a1811561087e577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b9081602091031261069d57516109178161067f565b90565b6040513d6000823e3d90fd5b1561092d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201527f73206e6f74206120636f6e7472616374000000000000000000000000000000006064820152fd5b604051906060820182811067ffffffffffffffff8211176106ed57604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806109179493602081519101845af43d15610a60573d91610a438361074f565b92610a51604051948561070e565b83523d6000602085013e610acd565b606091610acd565b15610a6f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b91929015610aed5750815115610ae1575090565b610917903b1515610a68565b825190915015610b005750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610b7d575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610b3c565b610bee610bd57fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b3303610d14576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe6000000000000000000000000000000000000000000000000000000008103610c515750610c49610f0f565b602081519101f35b7f4f1ef286000000000000000000000000000000000000000000000000000000008103610c865750610c81611083565b610c49565b7f8f283970000000000000000000000000000000000000000000000000000000008103610cb65750610c81610ec5565b7ff851a440000000000000000000000000000000000000000000000000000000008103610ce65750610c81610dfd565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610d1457610c81610e53565b610d1c610d3b565b6000808092368280378136915af43d82803e15610d37573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541680610df8575060206004917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156102a657600091610de0575090565b610917915060203d811161029f57610290818361070e565b905090565b610e05611192565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103541660405190602082015260208152610917816106f2565b610e5b611192565b610e63610d3b565b73ffffffffffffffffffffffffffffffffffffffff6040519116602082015260208152610917816106f2565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261069d576004356109178161067f565b610ecd611192565b3660041161069d57610efc73ffffffffffffffffffffffffffffffffffffffff610ef636610e8f565b166107e3565b604051610f08816106d1565b6000815290565b610f17611192565b3660041161069d5773ffffffffffffffffffffffffffffffffffffffff610f3d36610e8f565b1660405190610f4b826106d1565b60008252803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610ff7575b610fe3575b5050604051610f08816106d1565b610fef916102646109b1565b503880610fd5565b506000610fd0565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b3660041161069d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069d576004356110c18161067f565b60243567ffffffffffffffff811161069d576110f673ffffffffffffffffffffffffffffffffffffffff913690600401610789565b9116803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061118a57610fe3575050604051610f08816106d1565b506001610fd0565b3461069d5756fea264697066735822122043b19ddbf8b158c7b89e1cb0ede6eab8cd9c86ef2e863af97cab3041b065284164736f6c63430008130033a2646970667358221220c4f7e0f9163fb3af8844b45ab856243a6732e46866793f4499915cfea03af3b864736f6c6343000813003360803461011a57601f6105ee38819003918201601f19168301916001600160401b0383118484101761011f5780849260209460405283398101031261011a57516001600160a01b03808216919082820361011a576000549160018060a01b0319923384821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a33b156100b2575060015416176001556040516104b890816101368239f35b62461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146102ce5780635c60da1b1461027c578063715018a6146101e05780638da5cb5b1461018f5763f2fde38b1461005457600080fd5b3461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff808216809203610188576100ad610403565b8115610104578254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b80fd5b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57610217610403565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b503461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff81169081810361018857610328610403565b3b1561037f57807fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361042457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220c5471b22132cd15b928c4c1e3eecf6a636721aed3c412c5d6ea7e25407ed048464736f6c634300081300336080806040523461005b5760008054336001600160a01b0319821681178355916001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a361149e90816100618239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a7146109cd575080630e6fe11f1461098e578063238ac933146109595780633a63b8031461092d578063485cc95514610847578063579a97e61461082b578063715018a6146107ad5780637b8bdc8e146107885780638da5cb5b1461075557806398c3065f14610709578063a7ecd37e146106a2578063b223870014610651578063decfb3b21461018f5763f2fde38b146100bd57600080fd5b3461018b57602060031936011261018b576100d6610a7c565b916100df610b88565b73ffffffffffffffffffffffffffffffffffffffff831615610108578361010584610c07565b80f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b509061019a36610b3f565b8293919492359283875260029160209683885260ff858a20541661062957906101c39187610dc1565b156106025767ffffffffffffffff6101dd60c08701610c74565b1642116105db5783875281865282872091600192837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790558288905b6102ca575b50505050610231848401610cdd565b937fbff0538a548e4ea8a217734a505ce9d9375306f438db1247603684e165834db861028e61026360e0870187610cfe565b945191829185835273ffffffffffffffffffffffffffffffffffffffff809a16963396840191610d4f565b0390a46101008101916102a96102a48484610d8e565b610cdd565b166102b2578280f35b6102c4916102bf91610d8e565b6110e2565b38808280f35b60a08088016102d9818a610c89565b90508310156105d4576102ec9089610c89565b8310156105a8578a908360061b01878a013592600384101561018b578b938b9289606061031a818701610cdd565b97608061032685610cdd565b970135930135938a81146000146104315750505073ffffffffffffffffffffffffffffffffffffffff809616803b1561042d5760c4938a9387938e51998a9889977ff242432a00000000000000000000000000000000000000000000000000000000895233908901521660248701526044860152606485015260848401528160a48401525af1801561042357610414575b505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146103e85783018361021d565b6024896011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b61041d90610df4565b386103b7565b86513d8c823e3d90fd5b8580fd5b92979650909350908084036104f6575050116104ce57908b9173ffffffffffffffffffffffffffffffffffffffff80921690813b156104ca57836064928b5196879586947f42842e0e000000000000000000000000000000000000000000000000000000008652338d87015216602485015260448401525af18015610423576104bb575b506103b9565b6104c490610df4565b386104b5565b8380fd5b8588517f289aef69000000000000000000000000000000000000000000000000000000008152fd5b919590949392509061058057610558578c606481938e938c519787528c5233861b602c526f23b872dd000000000000000000000000600c52601c9485915af18c5188143d1517161561054d57508a905285526103b9565b8590637939f4248d52fd5b8689517f289aef69000000000000000000000000000000000000000000000000000000008152fd5b878a517f289aef69000000000000000000000000000000000000000000000000000000008152fd5b60248b6032877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5050610222565b82517f664b28b0000000000000000000000000000000000000000000000000000000008152fd5b82517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b8285517fb383ff03000000000000000000000000000000000000000000000000000000008152fd5b503461018b5761066d9161066436610af3565b9082959261104d565b1561067c5783610105846110e2565b517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b83346107065760206003193601126107065773ffffffffffffffffffffffffffffffffffffffff6106d1610a7c565b6106d9610b88565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015580f35b80fd5b503461018b57600319926020843601126107065781359367ffffffffffffffff851161075157610120908536030112610706575060209261074a9101610e78565b9051908152f35b5080fd5b50503461075157816003193601126107515773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b505034610751576020906107a461079e36610b3f565b91610dc1565b90519015158152f35b83346107065780600319360112610706576107c6610b88565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b505034610751576020906107a461084136610af3565b9161104d565b503461018b578160031936011261018b57610860610a7c565b906024359273ffffffffffffffffffffffffffffffffffffffff84168094036109295760ff855460a01c1661090357505061089a90610c07565b7fffffffffffffffffffffffff00000000000000000000000000000000000000006001541617600155740100000000000000000000000000000000000000007fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff82541617815580f35b517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8480fd5b503461018b57602060031936011261018b578160209360ff923581526002855220541690519015158152f35b50503461075157816003193601126107515760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b503461018b57600319926020843601126107065781359367ffffffffffffffff85116107515783908536030112610706575060209261074a9101611057565b9250503461018b57602060031936011261018b57357fffffffff00000000000000000000000000000000000000000000000000000000811680910361018b57602092508015908115610a52575b8115610a28575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501438610a21565b7fcfb8e9aa0000000000000000000000000000000000000000000000000000000081149150610a1a565b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610a9f57565b600080fd5b359073ffffffffffffffffffffffffffffffffffffffff82168203610a9f57565b9181601f84011215610a9f5782359167ffffffffffffffff8311610a9f5760208381860195010111610a9f57565b90600319604081840112610a9f5760043567ffffffffffffffff91828211610a9f576040908286030112610a9f5760040192602435918211610a9f57610b3b91600401610ac5565b9091565b90600319604081840112610a9f5760043567ffffffffffffffff91828211610a9f57610120908286030112610a9f5760040192602435918211610a9f57610b3b91600401610ac5565b73ffffffffffffffffffffffffffffffffffffffff600054163303610ba957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6000549073ffffffffffffffffffffffffffffffffffffffff80911691827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3565b3567ffffffffffffffff81168103610a9f5790565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610a9f570180359067ffffffffffffffff8211610a9f57602001918160061b36038313610a9f57565b3573ffffffffffffffffffffffffffffffffffffffff81168103610a9f5790565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610a9f570180359067ffffffffffffffff8211610a9f57602001918136038313610a9f57565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0938186528686013760008582860101520116010190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc181360301821215610a9f570190565b90610dcf610dd49392610e78565b6111d0565b73ffffffffffffffffffffffffffffffffffffffff806001541691161490565b67ffffffffffffffff8111610e0857604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610e0857604052565b610e8460208201610cdd565b906040810135906003821015610a9f5790610ea160608301610cdd565b90610eaf60a0840184610c89565b939092610ebe60c08301610c74565b94610ecc60e0840184610cfe565b6080610edf610100879994990187610d8e565b956040519a8b966101608801994660208a0152833560408a01528473ffffffffffffffffffffffffffffffffffffffff998a809516606082015201521660a08c0152013560c08a015282610140968760e08c0152526101808901919260005b81811061101e575050610f90925067ffffffffffffffff8098166101008a01527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe096878a8403016101208b0152610d4f565b92848785030190870152610fa382610aa4565b16825260208101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe182360301811215610a9f570190602082359201938211610a9f578136038413610a9f576110149385926040838160206110089601520191610d4f565b03908101835282610e37565b6020815191012090565b9091926040806001928861103189610aa4565b1681526020880135602082015201950191019392919093610f3e565b90610dcf610dd493925b6110dc61107161106683610cdd565b926020810190610cfe565b6110b060409392935193849273ffffffffffffffffffffffffffffffffffffffff60208501974689521660408501526060808501526080840191610d4f565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610e37565b51902090565b6110f96110ee82610cdd565b916020810190610cfe565b91826040519384938437820190600093848094848280965203925af1903d156111ca573d9067ffffffffffffffff821161119d576040519161116360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184610e37565b825260203d92013e5b1561117357565b60046040517f7cc2fbb3000000000000000000000000000000000000000000000000000000008152fd5b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526041600452fd5b5061116c565b909160008093821561143b57600191813560f81c8381036112d8575050828211610929579081857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8360209501950183906040968791825199855286838214604180931491611261575b5050505050608092505afa51923d15611254576060525290565b638baa579f90526004601cfd5b6112915761127c57505050506080915080853880808061123a565b6080950135841a87528137853880808061123a565b50507f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff91506021608095013590601b8260ff1c01885235885216606052853880808061123a565b60029097969492959391971480611430575b6112f6575b5050505050565b8496509390919293013560601c94816015116104ca5761137c9160209160405193849283927f1626ba7e000000000000000000000000000000000000000000000000000000009788855260048501526040602485015260157fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeb6044860193019101610d4f565b0381885afa8391816113d4575b5061139e5750909250505b38808080806112ef565b7fffffffff0000000000000000000000000000000000000000000000000000000016036113cc575b50611394565b9150386113c6565b9091506020813d8211611428575b816113ef60209383610e37565b810103126104ca57517fffffffff00000000000000000000000000000000000000000000000000000000811681036104ca579038611389565b3d91506113e2565b5060158210156112ea565b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fdfea26469706673582212209aeb45877519b9acd168c435fba72de99b3576f5579e22daa46c2528edb74d6664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x1F PUSH2 0x38D1 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 DUP5 GT DUP4 DUP6 LT OR PUSH2 0x10B JUMPI DUP2 PUSH1 0x20 SWAP3 DUP5 SWAP3 PUSH1 0x40 SWAP7 DUP8 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x121 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x121 JUMPI PUSH2 0x5F CALLER PUSH2 0x126 JUMP JUMPDEST DUP3 MLOAD SWAP4 PUSH2 0x14FF SWAP5 DUP6 DUP2 ADD SWAP6 DUP2 DUP8 LT DUP4 DUP9 GT OR PUSH2 0x10B JUMPI PUSH2 0x23D2 DUP3 CODECOPY DUP1 PUSH1 0x0 SWAP7 SUB SWAP1 DUP7 CREATE SWAP1 DUP2 ISZERO PUSH2 0x101 JUMPI DUP5 MLOAD SWAP2 PUSH2 0x5EE DUP1 DUP5 ADD SWAP3 DUP4 GT DUP5 DUP5 LT OR PUSH2 0xED JUMPI SWAP2 DUP5 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH2 0x1DE4 DUP6 CODECOPY AND DUP2 MSTORE SUB ADD SWAP1 DUP6 CREATE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH2 0xD3 SWAP4 SWAP5 POP AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH2 0x126 JUMP JUMPDEST MLOAD PUSH2 0x1C76 SWAP1 DUP2 PUSH2 0x16E DUP3 CODECOPY RETURN JUMPDEST POP POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BCE4583 EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0x59659E90 EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0xD9181CD3 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xE657F693 EQ PUSH2 0x1AA JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A6 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A6 JUMPI PUSH2 0xA5 PUSH2 0x84F JUMP JUMPDEST SWAP1 PUSH2 0xAE PUSH2 0x8BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH2 0x123 JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x2EB JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2EB JUMPI POP PUSH2 0x1E4 PUSH2 0x84F JUMP JUMPDEST SWAP1 PUSH2 0x1ED PUSH2 0x877 JUMP JUMPDEST SWAP2 PUSH1 0x55 PUSH1 0xB PUSH2 0x1FA PUSH2 0x89A JUMP JUMPDEST DUP5 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE SWAP3 SWAP1 SWAP8 AND PUSH1 0x40 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE SWAP1 SWAP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 PUSH2 0x25A PUSH1 0x60 DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x2AB DUP7 MLOAD SWAP2 PUSH2 0x26D DUP4 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 PUSH2 0x29F DUP9 PUSH1 0x1 SLOAD AND SWAP5 DUP11 MLOAD SWAP6 DUP7 SWAP4 DUP14 DUP6 ADD SWAP9 DUP10 PUSH2 0x9FF JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x11EB DUP6 MLOAD PUSH2 0x2BF DUP9 DUP4 ADD DUP3 PUSH2 0x99B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP8 DUP2 ADD SWAP2 PUSH2 0xA56 DUP4 CODECOPY MLOAD SWAP1 KECCAK256 SWAP1 DUP6 MLOAD SWAP2 DUP7 DUP4 ADD MSTORE DUP7 DUP3 ADD MSTORE ADDRESS DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A6 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A6 JUMPI PUSH2 0x327 PUSH2 0x84F JUMP JUMPDEST SWAP3 PUSH2 0x330 PUSH2 0x877 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x89A JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP5 PUSH1 0x20 SWAP7 DUP8 DUP8 ADD DUP8 PUSH2 0x375 DUP7 DUP7 DUP5 SWAP1 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP4 PUSH1 0x40 DUP4 ADD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP8 PUSH2 0x3A7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP10 DUP11 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP7 MLOAD SWAP2 PUSH2 0x3B6 DUP4 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP2 PUSH2 0x3F9 DUP13 PUSH2 0x3ED DUP8 DUP14 DUP9 PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP6 DUP7 SWAP5 DUP6 ADD SWAP8 DUP9 PUSH2 0x9FF JUMP JUMPDEST SUB DUP13 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x11EB DUP10 MLOAD PUSH2 0x40D DUP14 DUP4 ADD DUP3 PUSH2 0x99B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP13 DUP2 ADD SWAP2 PUSH2 0xA56 DUP4 CODECOPY DUP1 MLOAD ISZERO PUSH2 0x5F0 JUMPI MLOAD DUP5 SWAP3 SWAP2 DUP11 CREATE2 AND SWAP9 DUP10 ISZERO PUSH2 0x594 JUMPI DUP3 PUSH1 0x1 SLOAD AND SWAP4 DUP11 EXTCODESIZE ISZERO PUSH2 0x590 JUMPI SWAP2 PUSH1 0x84 SWAP2 PUSH1 0x1F DUP11 SWAP6 SWAP5 PUSH2 0x498 DUP16 DUP15 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 DUP10 MSTORE AND DUP13 DUP9 ADD MSTORE PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP8 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP3 PUSH1 0x64 DUP10 ADD MSTORE DUP9 DUP9 ADD SWAP2 ADD PUSH2 0x9DC JUMP JUMPDEST ADD AND DUP2 ADD SUB ADD DUP2 DUP4 DUP12 GAS CALL DUP1 ISZERO PUSH2 0x586 JUMPI SWAP1 DUP6 SWAP2 PUSH2 0x572 JUMPI JUMPDEST POP POP DUP6 EXTCODESIZE ISZERO PUSH2 0x56E JUMPI DUP5 MLOAD PUSH32 0x485CC95500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP4 DUP9 GAS CALL DUP1 ISZERO PUSH2 0x564 JUMPI PUSH2 0x550 JUMPI JUMPDEST POP POP PUSH32 0xFD420143D893DF8A37B4078D9C81EFAA2FB5FC7A74CC5512CCB158588DE5FCFC DUP4 DUP3 MLOAD DUP5 DUP2 MSTORE LOG1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x55A DUP3 SWAP2 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x2EB JUMPI DUP1 PUSH2 0x520 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0x57B SWAP1 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x56E JUMPI DUP4 CODESIZE PUSH2 0x4B1 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH1 0x64 DUP6 DUP13 DUP12 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A204661696C6564206F6E206465706C6F7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP8 DUP15 DUP1 DUP15 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x69C JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x2EB JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2EB JUMPI PUSH2 0x6D7 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x69C JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69C JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A6 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A6 JUMPI DUP3 PUSH2 0x7CA PUSH2 0x84F JUMP JUMPDEST PUSH2 0x7D2 PUSH2 0x8BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH1 0x1 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x56E JUMPI DUP4 PUSH1 0x24 SWAP3 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP7 MSTORE AND SWAP1 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x846 JUMPI POP PUSH2 0x83A JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x843 SWAP1 PUSH2 0x93C JUMP JUMPDEST DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x872 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x872 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x872 JUMPI JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x8DE JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x950 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x950 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x950 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x9EF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x48 SWAP5 SWAP4 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP1 SWAP3 PUSH1 0x60 SHL AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH2 0xA50 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP7 DUP6 ADD SWAP2 ADD PUSH2 0x9DC JUMP JUMPDEST ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x11CF SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xB1 SWAP14 0xDB 0xF8 0xB1 PC 0xC7 0xB8 SWAP15 SHR 0xB0 0xED 0xE6 0xEA 0xB8 0xCD SWAP13 DUP7 0xEF 0x2E DUP7 GASPRICE 0xF9 PUSH29 0xAB3041B065284164736F6C63430008130033A2646970667358221220C4 0xF7 0xE0 0xF9 AND EXTCODEHASH 0xB3 0xAF DUP9 PREVRANDAO 0xB4 GAS 0xB8 JUMP 0x24 GASPRICE PUSH8 0x32E46866793F4499 SWAP2 0x5C INVALID LOG0 GASPRICE RETURN 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER PUSH1 0x80 CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x1F PUSH2 0x5EE CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x11F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x11A JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP3 SUB PUSH2 0x11A JUMPI PUSH1 0x0 SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP3 CALLER DUP5 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 EXTCODESIZE ISZERO PUSH2 0xB2 JUMPI POP PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP1 DUP2 PUSH2 0x136 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x188 JUMPI PUSH2 0xAD PUSH2 0x403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x104 JUMPI DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH2 0x217 PUSH2 0x403 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x188 JUMPI PUSH2 0x328 PUSH2 0x403 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x37F JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x424 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 SELFBALANCE SHL 0x22 SGT 0x2C 0xD1 JUMPDEST SWAP3 DUP13 0x4C 0x1E RETURNDATACOPY 0xEC 0xF6 0xA6 CALLDATASIZE PUSH19 0x1AED3C412C5D6EA7E25407ED048464736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH2 0x149E SWAP1 DUP2 PUSH2 0x61 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 DUP2 DUP2 MSTORE PUSH1 0x4 DUP1 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP3 DUP4 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x9CD JUMPI POP DUP1 PUSH4 0xE6FE11F EQ PUSH2 0x98E JUMPI DUP1 PUSH4 0x238AC933 EQ PUSH2 0x959 JUMPI DUP1 PUSH4 0x3A63B803 EQ PUSH2 0x92D JUMPI DUP1 PUSH4 0x485CC955 EQ PUSH2 0x847 JUMPI DUP1 PUSH4 0x579A97E6 EQ PUSH2 0x82B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x7AD JUMPI DUP1 PUSH4 0x7B8BDC8E EQ PUSH2 0x788 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x755 JUMPI DUP1 PUSH4 0x98C3065F EQ PUSH2 0x709 JUMPI DUP1 PUSH4 0xA7ECD37E EQ PUSH2 0x6A2 JUMPI DUP1 PUSH4 0xB2238700 EQ PUSH2 0x651 JUMPI DUP1 PUSH4 0xDECFB3B2 EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI PUSH2 0xD6 PUSH2 0xA7C JUMP JUMPDEST SWAP2 PUSH2 0xDF PUSH2 0xB88 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND ISZERO PUSH2 0x108 JUMPI DUP4 PUSH2 0x105 DUP5 PUSH2 0xC07 JUMP JUMPDEST DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP SWAP1 PUSH2 0x19A CALLDATASIZE PUSH2 0xB3F JUMP JUMPDEST DUP3 SWAP4 SWAP2 SWAP5 SWAP3 CALLDATALOAD SWAP3 DUP4 DUP8 MSTORE PUSH1 0x2 SWAP2 PUSH1 0x20 SWAP7 DUP4 DUP9 MSTORE PUSH1 0xFF DUP6 DUP11 KECCAK256 SLOAD AND PUSH2 0x629 JUMPI SWAP1 PUSH2 0x1C3 SWAP2 DUP8 PUSH2 0xDC1 JUMP JUMPDEST ISZERO PUSH2 0x602 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH2 0x1DD PUSH1 0xC0 DUP8 ADD PUSH2 0xC74 JUMP JUMPDEST AND TIMESTAMP GT PUSH2 0x5DB JUMPI DUP4 DUP8 MSTORE DUP2 DUP7 MSTORE DUP3 DUP8 KECCAK256 SWAP2 PUSH1 0x1 SWAP3 DUP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP3 DUP9 SWAP1 JUMPDEST PUSH2 0x2CA JUMPI JUMPDEST POP POP POP POP PUSH2 0x231 DUP5 DUP5 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP4 PUSH32 0xBFF0538A548E4EA8A217734A505CE9D9375306F438DB1247603684E165834DB8 PUSH2 0x28E PUSH2 0x263 PUSH1 0xE0 DUP8 ADD DUP8 PUSH2 0xCFE JUMP JUMPDEST SWAP5 MLOAD SWAP2 DUP3 SWAP2 DUP6 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP11 AND SWAP7 CALLER SWAP7 DUP5 ADD SWAP2 PUSH2 0xD4F JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x100 DUP2 ADD SWAP2 PUSH2 0x2A9 PUSH2 0x2A4 DUP5 DUP5 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0xCDD JUMP JUMPDEST AND PUSH2 0x2B2 JUMPI DUP3 DUP1 RETURN JUMPDEST PUSH2 0x2C4 SWAP2 PUSH2 0x2BF SWAP2 PUSH2 0xD8E JUMP JUMPDEST PUSH2 0x10E2 JUMP JUMPDEST CODESIZE DUP1 DUP3 DUP1 RETURN JUMPDEST PUSH1 0xA0 DUP1 DUP9 ADD PUSH2 0x2D9 DUP2 DUP11 PUSH2 0xC89 JUMP JUMPDEST SWAP1 POP DUP4 LT ISZERO PUSH2 0x5D4 JUMPI PUSH2 0x2EC SWAP1 DUP10 PUSH2 0xC89 JUMP JUMPDEST DUP4 LT ISZERO PUSH2 0x5A8 JUMPI DUP11 SWAP1 DUP4 PUSH1 0x6 SHL ADD DUP8 DUP11 ADD CALLDATALOAD SWAP3 PUSH1 0x3 DUP5 LT ISZERO PUSH2 0x18B JUMPI DUP12 SWAP4 DUP12 SWAP3 DUP10 PUSH1 0x60 PUSH2 0x31A DUP2 DUP8 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP8 PUSH1 0x80 PUSH2 0x326 DUP6 PUSH2 0xCDD JUMP JUMPDEST SWAP8 ADD CALLDATALOAD SWAP4 ADD CALLDATALOAD SWAP4 DUP11 DUP2 EQ PUSH1 0x0 EQ PUSH2 0x431 JUMPI POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP7 AND DUP1 EXTCODESIZE ISZERO PUSH2 0x42D JUMPI PUSH1 0xC4 SWAP4 DUP11 SWAP4 DUP8 SWAP4 DUP15 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH32 0xF242432A00000000000000000000000000000000000000000000000000000000 DUP10 MSTORE CALLER SWAP1 DUP10 ADD MSTORE AND PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x44 DUP7 ADD MSTORE PUSH1 0x64 DUP6 ADD MSTORE PUSH1 0x84 DUP5 ADD MSTORE DUP2 PUSH1 0xA4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x423 JUMPI PUSH2 0x414 JUMPI JUMPDEST POP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x3E8 JUMPI DUP4 ADD DUP4 PUSH2 0x21D JUMP JUMPDEST PUSH1 0x24 DUP10 PUSH1 0x11 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH2 0x41D SWAP1 PUSH2 0xDF4 JUMP JUMPDEST CODESIZE PUSH2 0x3B7 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST SWAP3 SWAP8 SWAP7 POP SWAP1 SWAP4 POP SWAP1 DUP1 DUP5 SUB PUSH2 0x4F6 JUMPI POP POP GT PUSH2 0x4CE JUMPI SWAP1 DUP12 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x4CA JUMPI DUP4 PUSH1 0x64 SWAP3 DUP12 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH32 0x42842E0E00000000000000000000000000000000000000000000000000000000 DUP7 MSTORE CALLER DUP14 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x423 JUMPI PUSH2 0x4BB JUMPI JUMPDEST POP PUSH2 0x3B9 JUMP JUMPDEST PUSH2 0x4C4 SWAP1 PUSH2 0xDF4 JUMP JUMPDEST CODESIZE PUSH2 0x4B5 JUMP JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP6 DUP9 MLOAD PUSH32 0x289AEF6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP2 SWAP6 SWAP1 SWAP5 SWAP4 SWAP3 POP SWAP1 PUSH2 0x580 JUMPI PUSH2 0x558 JUMPI DUP13 PUSH1 0x64 DUP2 SWAP4 DUP15 SWAP4 DUP13 MLOAD SWAP8 DUP8 MSTORE DUP13 MSTORE CALLER DUP7 SHL PUSH1 0x2C MSTORE PUSH16 0x23B872DD000000000000000000000000 PUSH1 0xC MSTORE PUSH1 0x1C SWAP5 DUP6 SWAP2 GAS CALL DUP13 MLOAD DUP9 EQ RETURNDATASIZE ISZERO OR AND ISZERO PUSH2 0x54D JUMPI POP DUP11 SWAP1 MSTORE DUP6 MSTORE PUSH2 0x3B9 JUMP JUMPDEST DUP6 SWAP1 PUSH4 0x7939F424 DUP14 MSTORE REVERT JUMPDEST DUP7 DUP10 MLOAD PUSH32 0x289AEF6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP8 DUP11 MLOAD PUSH32 0x289AEF6900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP12 PUSH1 0x32 DUP8 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST POP POP PUSH2 0x222 JUMP JUMPDEST DUP3 MLOAD PUSH32 0x664B28B000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 MLOAD PUSH32 0x8BAA579F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP3 DUP6 MLOAD PUSH32 0xB383FF0300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH2 0x66D SWAP2 PUSH2 0x664 CALLDATASIZE PUSH2 0xAF3 JUMP JUMPDEST SWAP1 DUP3 SWAP6 SWAP3 PUSH2 0x104D JUMP JUMPDEST ISZERO PUSH2 0x67C JUMPI DUP4 PUSH2 0x105 DUP5 PUSH2 0x10E2 JUMP JUMPDEST MLOAD PUSH32 0x8BAA579F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x706 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x706 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x6D1 PUSH2 0xA7C JUMP JUMPDEST PUSH2 0x6D9 PUSH2 0xB88 JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x3 NOT SWAP3 PUSH1 0x20 DUP5 CALLDATASIZE ADD SLT PUSH2 0x706 JUMPI DUP2 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x751 JUMPI PUSH2 0x120 SWAP1 DUP6 CALLDATASIZE SUB ADD SLT PUSH2 0x706 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x74A SWAP2 ADD PUSH2 0xE78 JUMP JUMPDEST SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x751 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x751 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x751 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x7A4 PUSH2 0x79E CALLDATASIZE PUSH2 0xB3F JUMP JUMPDEST SWAP2 PUSH2 0xDC1 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP4 CALLVALUE PUSH2 0x706 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x706 JUMPI PUSH2 0x7C6 PUSH2 0xB88 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x751 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x7A4 PUSH2 0x841 CALLDATASIZE PUSH2 0xAF3 JUMP JUMPDEST SWAP2 PUSH2 0x104D JUMP JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI PUSH2 0x860 PUSH2 0xA7C JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND DUP1 SWAP5 SUB PUSH2 0x929 JUMPI PUSH1 0xFF DUP6 SLOAD PUSH1 0xA0 SHR AND PUSH2 0x903 JUMPI POP POP PUSH2 0x89A SWAP1 PUSH2 0xC07 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH21 0x10000000000000000000000000000000000000000 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SLOAD AND OR DUP2 SSTORE DUP1 RETURN JUMPDEST MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI DUP2 PUSH1 0x20 SWAP4 PUSH1 0xFF SWAP3 CALLDATALOAD DUP2 MSTORE PUSH1 0x2 DUP6 MSTORE KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x751 JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x751 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x3 NOT SWAP3 PUSH1 0x20 DUP5 CALLDATASIZE ADD SLT PUSH2 0x706 JUMPI DUP2 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0x751 JUMPI DUP4 SWAP1 DUP6 CALLDATASIZE SUB ADD SLT PUSH2 0x706 JUMPI POP PUSH1 0x20 SWAP3 PUSH2 0x74A SWAP2 ADD PUSH2 0x1057 JUMP JUMPDEST SWAP3 POP POP CALLVALUE PUSH2 0x18B JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x18B JUMPI CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x18B JUMPI PUSH1 0x20 SWAP3 POP DUP1 ISZERO SWAP1 DUP2 ISZERO PUSH2 0xA52 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0xA28 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0xA21 JUMP JUMPDEST PUSH32 0xCFB8E9AA00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0xA1A JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xA9F JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0xA9F JUMPI JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xA9F JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0xA9F JUMPI PUSH1 0x20 DUP4 DUP2 DUP7 ADD SWAP6 ADD ADD GT PUSH2 0xA9F JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x3 NOT PUSH1 0x40 DUP2 DUP5 ADD SLT PUSH2 0xA9F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0xA9F JUMPI PUSH1 0x40 SWAP1 DUP3 DUP7 SUB ADD SLT PUSH2 0xA9F JUMPI PUSH1 0x4 ADD SWAP3 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xA9F JUMPI PUSH2 0xB3B SWAP2 PUSH1 0x4 ADD PUSH2 0xAC5 JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST SWAP1 PUSH1 0x3 NOT PUSH1 0x40 DUP2 DUP5 ADD SLT PUSH2 0xA9F JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0xA9F JUMPI PUSH2 0x120 SWAP1 DUP3 DUP7 SUB ADD SLT PUSH2 0xA9F JUMPI PUSH1 0x4 ADD SWAP3 PUSH1 0x24 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xA9F JUMPI PUSH2 0xB3B SWAP2 PUSH1 0x4 ADD PUSH2 0xAC5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0xBA9 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 JUMP JUMPDEST CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0xA9F JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0xA9F JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xA9F JUMPI PUSH1 0x20 ADD SWAP2 DUP2 PUSH1 0x6 SHL CALLDATASIZE SUB DUP4 SGT PUSH2 0xA9F JUMPI JUMP JUMPDEST CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0xA9F JUMPI SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0xA9F JUMPI ADD DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xA9F JUMPI PUSH1 0x20 ADD SWAP2 DUP2 CALLDATASIZE SUB DUP4 SGT PUSH2 0xA9F JUMPI JUMP JUMPDEST PUSH1 0x1F DUP3 PUSH1 0x20 SWAP5 SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP4 DUP2 DUP7 MSTORE DUP7 DUP7 ADD CALLDATACOPY PUSH1 0x0 DUP6 DUP3 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC1 DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0xA9F JUMPI ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xDCF PUSH2 0xDD4 SWAP4 SWAP3 PUSH2 0xE78 JUMP JUMPDEST PUSH2 0x11D0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x1 SLOAD AND SWAP2 AND EQ SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE08 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE08 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE84 PUSH1 0x20 DUP3 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xA9F JUMPI SWAP1 PUSH2 0xEA1 PUSH1 0x60 DUP4 ADD PUSH2 0xCDD JUMP JUMPDEST SWAP1 PUSH2 0xEAF PUSH1 0xA0 DUP5 ADD DUP5 PUSH2 0xC89 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 PUSH2 0xEBE PUSH1 0xC0 DUP4 ADD PUSH2 0xC74 JUMP JUMPDEST SWAP5 PUSH2 0xECC PUSH1 0xE0 DUP5 ADD DUP5 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x80 PUSH2 0xEDF PUSH2 0x100 DUP8 SWAP10 SWAP5 SWAP10 ADD DUP8 PUSH2 0xD8E JUMP JUMPDEST SWAP6 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP7 PUSH2 0x160 DUP9 ADD SWAP10 CHAINID PUSH1 0x20 DUP11 ADD MSTORE DUP4 CALLDATALOAD PUSH1 0x40 DUP11 ADD MSTORE DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP10 DUP11 DUP1 SWAP6 AND PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE AND PUSH1 0xA0 DUP13 ADD MSTORE ADD CALLDATALOAD PUSH1 0xC0 DUP11 ADD MSTORE DUP3 PUSH2 0x140 SWAP7 DUP8 PUSH1 0xE0 DUP13 ADD MSTORE MSTORE PUSH2 0x180 DUP10 ADD SWAP2 SWAP3 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x101E JUMPI POP POP PUSH2 0xF90 SWAP3 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP1 SWAP9 AND PUSH2 0x100 DUP11 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP7 DUP8 DUP11 DUP5 SUB ADD PUSH2 0x120 DUP12 ADD MSTORE PUSH2 0xD4F JUMP JUMPDEST SWAP3 DUP5 DUP8 DUP6 SUB ADD SWAP1 DUP8 ADD MSTORE PUSH2 0xFA3 DUP3 PUSH2 0xAA4 JUMP JUMPDEST AND DUP3 MSTORE PUSH1 0x20 DUP2 ADD CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP3 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0xA9F JUMPI ADD SWAP1 PUSH1 0x20 DUP3 CALLDATALOAD SWAP3 ADD SWAP4 DUP3 GT PUSH2 0xA9F JUMPI DUP2 CALLDATASIZE SUB DUP5 SGT PUSH2 0xA9F JUMPI PUSH2 0x1014 SWAP4 DUP6 SWAP3 PUSH1 0x40 DUP4 DUP2 PUSH1 0x20 PUSH2 0x1008 SWAP7 ADD MSTORE ADD SWAP2 PUSH2 0xD4F JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xE37 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0x40 DUP1 PUSH1 0x1 SWAP3 DUP9 PUSH2 0x1031 DUP10 PUSH2 0xAA4 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x20 DUP9 ADD CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP6 ADD SWAP2 ADD SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 PUSH2 0xF3E JUMP JUMPDEST SWAP1 PUSH2 0xDCF PUSH2 0xDD4 SWAP4 SWAP3 JUMPDEST PUSH2 0x10DC PUSH2 0x1071 PUSH2 0x1066 DUP4 PUSH2 0xCDD JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x10B0 PUSH1 0x40 SWAP4 SWAP3 SWAP4 MLOAD SWAP4 DUP5 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP6 ADD SWAP8 CHAINID DUP10 MSTORE AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP1 DUP6 ADD MSTORE PUSH1 0x80 DUP5 ADD SWAP2 PUSH2 0xD4F JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xE37 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x10F9 PUSH2 0x10EE DUP3 PUSH2 0xCDD JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xCFE JUMP JUMPDEST SWAP2 DUP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 CALLDATACOPY DUP3 ADD SWAP1 PUSH1 0x0 SWAP4 DUP5 DUP1 SWAP5 DUP5 DUP3 DUP1 SWAP7 MSTORE SUB SWAP3 GAS CALL SWAP1 RETURNDATASIZE ISZERO PUSH2 0x11CA JUMPI RETURNDATASIZE SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x119D JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1163 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND ADD DUP5 PUSH2 0xE37 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x20 RETURNDATASIZE SWAP3 ADD RETURNDATACOPY JUMPDEST ISZERO PUSH2 0x1173 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x7CC2FBB300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP PUSH2 0x116C JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x0 DUP1 SWAP4 DUP3 ISZERO PUSH2 0x143B JUMPI PUSH1 0x1 SWAP2 DUP2 CALLDATALOAD PUSH1 0xF8 SHR DUP4 DUP2 SUB PUSH2 0x12D8 JUMPI POP POP DUP3 DUP3 GT PUSH2 0x929 JUMPI SWAP1 DUP2 DUP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x20 SWAP6 ADD SWAP6 ADD DUP4 SWAP1 PUSH1 0x40 SWAP7 DUP8 SWAP2 DUP3 MLOAD SWAP10 DUP6 MSTORE DUP7 DUP4 DUP3 EQ PUSH1 0x41 DUP1 SWAP4 EQ SWAP2 PUSH2 0x1261 JUMPI JUMPDEST POP POP POP POP POP PUSH1 0x80 SWAP3 POP GAS STATICCALL MLOAD SWAP3 RETURNDATASIZE ISZERO PUSH2 0x1254 JUMPI PUSH1 0x60 MSTORE MSTORE SWAP1 JUMP JUMPDEST PUSH4 0x8BAA579F SWAP1 MSTORE PUSH1 0x4 PUSH1 0x1C REVERT JUMPDEST PUSH2 0x1291 JUMPI PUSH2 0x127C JUMPI POP POP POP POP PUSH1 0x80 SWAP2 POP DUP1 DUP6 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x80 SWAP6 ADD CALLDATALOAD DUP5 BYTE DUP8 MSTORE DUP2 CALLDATACOPY DUP6 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x123A JUMP JUMPDEST POP POP PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP PUSH1 0x21 PUSH1 0x80 SWAP6 ADD CALLDATALOAD SWAP1 PUSH1 0x1B DUP3 PUSH1 0xFF SHR ADD DUP9 MSTORE CALLDATALOAD DUP9 MSTORE AND PUSH1 0x60 MSTORE DUP6 CODESIZE DUP1 DUP1 DUP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x2 SWAP1 SWAP8 SWAP7 SWAP5 SWAP3 SWAP6 SWAP4 SWAP2 SWAP8 EQ DUP1 PUSH2 0x1430 JUMPI JUMPDEST PUSH2 0x12F6 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 SWAP7 POP SWAP4 SWAP1 SWAP2 SWAP3 SWAP4 ADD CALLDATALOAD PUSH1 0x60 SHR SWAP5 DUP2 PUSH1 0x15 GT PUSH2 0x4CA JUMPI PUSH2 0x137C SWAP2 PUSH1 0x20 SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP3 DUP4 SWAP3 PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP8 DUP9 DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x40 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x15 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEB PUSH1 0x44 DUP7 ADD SWAP4 ADD SWAP2 ADD PUSH2 0xD4F JUMP JUMPDEST SUB DUP2 DUP9 GAS STATICCALL DUP4 SWAP2 DUP2 PUSH2 0x13D4 JUMPI JUMPDEST POP PUSH2 0x139E JUMPI POP SWAP1 SWAP3 POP POP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x12EF JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND SUB PUSH2 0x13CC JUMPI JUMPDEST POP PUSH2 0x1394 JUMP JUMPDEST SWAP2 POP CODESIZE PUSH2 0x13C6 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x1428 JUMPI JUMPDEST DUP2 PUSH2 0x13EF PUSH1 0x20 SWAP4 DUP4 PUSH2 0xE37 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x4CA JUMPI MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 SUB PUSH2 0x4CA JUMPI SWAP1 CODESIZE PUSH2 0x1389 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x13E2 JUMP JUMPDEST POP PUSH1 0x15 DUP3 LT ISZERO PUSH2 0x12EA JUMP JUMPDEST PUSH1 0x24 DUP6 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xEB GASLIMIT DUP8 PUSH22 0x19B9ACD168C435FBA72DE99B3576F5579E22DAA46C25 0x28 0xED 0xB7 0x4D PUSH7 0x64736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "413:1169:19:-:0;;;;-1:-1:-1;;;;;413:1169:19;;;;;;;;;;-1:-1:-1;;413:1169:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;413:1169:19;;;;;;;983:12:3;736:10:11;983:12:3;:::i;:::-;413:1169:19;;659:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;659:14:19;;;;;;;;;;413:1169;;;1022:37:20;;;;;;;;;;;;;;;;;413:1169:19;1022:37:20;;;;413:1169:19;;;1022:37:20;;;;;;;;;1096:12;413:1169:19;;;;;;;;;;;;;;;;1096:12:20;:::i;:::-;413:1169:19;;;;;;;;1022:37:20;413:1169:19;;;;;;;;;;;;1022:37:20;-1:-1:-1;;;413:1169:19;;;;;;;;659:14;413:1169;;;;;;;;;659:14;413:1169;;;-1:-1:-1;413:1169:19;;;;;-1:-1:-1;413:1169:19;;-1:-1:-1;413:1169:19;;2503:191:3;2596:6;413:1169:19;;-1:-1:-1;;;;;413:1169:19;;;-1:-1:-1;;;;;;413:1169:19;;;;;;;;;2646:40:3;;2596:6;2646:40;2503:191::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 2202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_4580": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_4584": {
									"entryPoint": 2167,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_address_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_packed_bytes32_address_address_bytes": {
									"entryPoint": 2559,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_4581": {
									"entryPoint": 2364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_6072": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 2237,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6040608081526004908136101561001557600080fd5b600091823560e01c80631bce45831461079057806359659e901461073d578063715018a6146106a05780638da5cb5b1461064b578063d9181cd3146102ee578063e657f693146101aa5763f2fde38b1461006e57600080fd5b346101a65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a6576100a561084f565b906100ae6108bd565b73ffffffffffffffffffffffffffffffffffffffff809216928315610123575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b8284346102eb5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102eb57506101e461084f565b906101ed610877565b916055600b6101fa61089a565b845173ffffffffffffffffffffffffffffffffffffffff968716602080830191825292909716604080830191909152815290957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09161025a60608261099b565b519020906102ab86519161026d8361097f565b6000835273ffffffffffffffffffffffffffffffffffffffff9661029f8860015416948a519586938d850198896109ff565b0390810183528261099b565b5190206111eb85516102bf8883018261099b565b81815287810191610a5683395190209085519186830152868201523081520160ff815320915191168152f35b80fd5b5090346101a65760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a65761032761084f565b92610330610877565b61033861089a565b908351946020968787018761037586868490602090939293604083019473ffffffffffffffffffffffffffffffffffffffff809216845216910152565b03976103a77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0998a810183528261099b565b5190208651916103b68361097f565b6000835273ffffffffffffffffffffffffffffffffffffffff91816103f98c6103ed878d88600154169051958694850197886109ff565b038c810183528261099b565b5190206111eb895161040d8d83018261099b565b8181528c810191610a5683398051156105f057518492918af516988915610594578260015416938a3b156105905791608491601f8a95946104988f8e51998a9889977fcf7a1d77000000000000000000000000000000000000000000000000000000008952168c880152602487015260606044870152825192839182606489015288880191016109dc565b01168101030181838b5af1801561058657908591610572575b5050853b1561056e5784517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316918101918252929091166020820152829082908190604001038183885af1801561056457610550575b50507ffd420143d893df8a37b4078d9c81efaa2fb5fc7a74cc5512ccb158588de5fcfc838251848152a151908152f35b61055a829161093c565b6102eb5780610520565b83513d84823e3d90fd5b8380fd5b61057b9061093c565b61056e5783386104b1565b86513d87823e3d90fd5b8880fd5b6064858c8b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152fd5b6064878e808e51927f08c379a000000000000000000000000000000000000000000000000000000000845283015260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fd5b50503461069c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069c5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b83346102eb57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102eb576106d76108bd565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461069c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069c5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5090346101a65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a657826107ca61084f565b6107d26108bd565b73ffffffffffffffffffffffffffffffffffffffff90816001541690813b1561056e5783602492865197889586947f3659cfe600000000000000000000000000000000000000000000000000000000865216908401525af1908115610846575061083a575080f35b6108439061093c565b80f35b513d84823e3d90fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361087257565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361087257565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361087257565b73ffffffffffffffffffffffffffffffffffffffff6000541633036108de57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff811161095057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761095057604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761095057604052565b60005b8381106109ef5750506000910152565b81810151838201526020016109df565b9190926048949383527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809260601b16602084015260601b166034820152610a5082518093602086850191016109dc565b01019056fe60808060405234610016576111cf908161001c8239f35b600080fdfe604060808152366103825773ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000917fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000843516146100c057600484517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b6100c8611192565b60049136831161037e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037e578235916101088361067f565b602435926101158461067f565b60443567ffffffffffffffff811161037a57610135839136908801610789565b941692156103525761014791166107e3565b803b156102cf578451907f5c60da1b000000000000000000000000000000000000000000000000000000009384835260209687848381865afa9384156102a657889461019d9189916102b2575b503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790555194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab575b610242575b8361023c6107d0565b80519101f35b8592839182525afa9182156102a65761026a9392610277575b506102646109b1565b91610a21565b5038808083818080610233565b610298919250843d861161029f575b610290818361070e565b810190610902565b903861025b565b503d610286565b61091a565b508661022e565b6102c99150863d881161029f57610290818361070e565b38610194565b60848360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b8487517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b8380fd5b73ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000907fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000833516146104395760046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b610441611192565b60049236841161067b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067b5783356104808161067f565b6024359161048d8361067f565b60443567ffffffffffffffff8111610677576104ad829136908901610789565b9316931561064e576104bf91166107e3565b813b156105ca576040517f5c60da1b000000000000000000000000000000000000000000000000000000009283825260209586838281855afa9283156102a65787936105149188916105b357503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617905560405194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab57610242578361023c6107d0565b6102c99150853d871161029f57610290818361070e565b6084846020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b856040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b8280fd5b73ffffffffffffffffffffffffffffffffffffffff81160361069d57565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106ed57604052565b6106a2565b6040810190811067ffffffffffffffff8211176106ed57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106ed57604052565b67ffffffffffffffff81116106ed57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561069d578035906107a08261074f565b926107ae604051948561070e565b8284526020838301011161069d57816000926020809301838601378301015290565b604051906107dd826106d1565b60008252565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61039081547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604080519373ffffffffffffffffffffffffffffffffffffffff9081851686521693846020820152a1811561087e577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b9081602091031261069d57516109178161067f565b90565b6040513d6000823e3d90fd5b1561092d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201527f73206e6f74206120636f6e7472616374000000000000000000000000000000006064820152fd5b604051906060820182811067ffffffffffffffff8211176106ed57604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806109179493602081519101845af43d15610a60573d91610a438361074f565b92610a51604051948561070e565b83523d6000602085013e610acd565b606091610acd565b15610a6f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b91929015610aed5750815115610ae1575090565b610917903b1515610a68565b825190915015610b005750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610b7d575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610b3c565b610bee610bd57fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b3303610d14576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe6000000000000000000000000000000000000000000000000000000008103610c515750610c49610f0f565b602081519101f35b7f4f1ef286000000000000000000000000000000000000000000000000000000008103610c865750610c81611083565b610c49565b7f8f283970000000000000000000000000000000000000000000000000000000008103610cb65750610c81610ec5565b7ff851a440000000000000000000000000000000000000000000000000000000008103610ce65750610c81610dfd565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610d1457610c81610e53565b610d1c610d3b565b6000808092368280378136915af43d82803e15610d37573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541680610df8575060206004917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156102a657600091610de0575090565b610917915060203d811161029f57610290818361070e565b905090565b610e05611192565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103541660405190602082015260208152610917816106f2565b610e5b611192565b610e63610d3b565b73ffffffffffffffffffffffffffffffffffffffff6040519116602082015260208152610917816106f2565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261069d576004356109178161067f565b610ecd611192565b3660041161069d57610efc73ffffffffffffffffffffffffffffffffffffffff610ef636610e8f565b166107e3565b604051610f08816106d1565b6000815290565b610f17611192565b3660041161069d5773ffffffffffffffffffffffffffffffffffffffff610f3d36610e8f565b1660405190610f4b826106d1565b60008252803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610ff7575b610fe3575b5050604051610f08816106d1565b610fef916102646109b1565b503880610fd5565b506000610fd0565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b3660041161069d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069d576004356110c18161067f565b60243567ffffffffffffffff811161069d576110f673ffffffffffffffffffffffffffffffffffffffff913690600401610789565b9116803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061118a57610fe3575050604051610f08816106d1565b506001610fd0565b3461069d5756fea264697066735822122043b19ddbf8b158c7b89e1cb0ede6eab8cd9c86ef2e863af97cab3041b065284164736f6c63430008130033a2646970667358221220c4f7e0f9163fb3af8844b45ab856243a6732e46866793f4499915cfea03af3b864736f6c63430008130033",
							"opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BCE4583 EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0x59659E90 EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0xD9181CD3 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xE657F693 EQ PUSH2 0x1AA JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A6 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A6 JUMPI PUSH2 0xA5 PUSH2 0x84F JUMP JUMPDEST SWAP1 PUSH2 0xAE PUSH2 0x8BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH2 0x123 JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x2EB JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2EB JUMPI POP PUSH2 0x1E4 PUSH2 0x84F JUMP JUMPDEST SWAP1 PUSH2 0x1ED PUSH2 0x877 JUMP JUMPDEST SWAP2 PUSH1 0x55 PUSH1 0xB PUSH2 0x1FA PUSH2 0x89A JUMP JUMPDEST DUP5 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE SWAP3 SWAP1 SWAP8 AND PUSH1 0x40 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE SWAP1 SWAP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 PUSH2 0x25A PUSH1 0x60 DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x2AB DUP7 MLOAD SWAP2 PUSH2 0x26D DUP4 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 PUSH2 0x29F DUP9 PUSH1 0x1 SLOAD AND SWAP5 DUP11 MLOAD SWAP6 DUP7 SWAP4 DUP14 DUP6 ADD SWAP9 DUP10 PUSH2 0x9FF JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x11EB DUP6 MLOAD PUSH2 0x2BF DUP9 DUP4 ADD DUP3 PUSH2 0x99B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP8 DUP2 ADD SWAP2 PUSH2 0xA56 DUP4 CODECOPY MLOAD SWAP1 KECCAK256 SWAP1 DUP6 MLOAD SWAP2 DUP7 DUP4 ADD MSTORE DUP7 DUP3 ADD MSTORE ADDRESS DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A6 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A6 JUMPI PUSH2 0x327 PUSH2 0x84F JUMP JUMPDEST SWAP3 PUSH2 0x330 PUSH2 0x877 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x89A JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP5 PUSH1 0x20 SWAP7 DUP8 DUP8 ADD DUP8 PUSH2 0x375 DUP7 DUP7 DUP5 SWAP1 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP4 PUSH1 0x40 DUP4 ADD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP8 PUSH2 0x3A7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP10 DUP11 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP7 MLOAD SWAP2 PUSH2 0x3B6 DUP4 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP2 PUSH2 0x3F9 DUP13 PUSH2 0x3ED DUP8 DUP14 DUP9 PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP6 DUP7 SWAP5 DUP6 ADD SWAP8 DUP9 PUSH2 0x9FF JUMP JUMPDEST SUB DUP13 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x11EB DUP10 MLOAD PUSH2 0x40D DUP14 DUP4 ADD DUP3 PUSH2 0x99B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP13 DUP2 ADD SWAP2 PUSH2 0xA56 DUP4 CODECOPY DUP1 MLOAD ISZERO PUSH2 0x5F0 JUMPI MLOAD DUP5 SWAP3 SWAP2 DUP11 CREATE2 AND SWAP9 DUP10 ISZERO PUSH2 0x594 JUMPI DUP3 PUSH1 0x1 SLOAD AND SWAP4 DUP11 EXTCODESIZE ISZERO PUSH2 0x590 JUMPI SWAP2 PUSH1 0x84 SWAP2 PUSH1 0x1F DUP11 SWAP6 SWAP5 PUSH2 0x498 DUP16 DUP15 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 DUP10 MSTORE AND DUP13 DUP9 ADD MSTORE PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP8 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP3 PUSH1 0x64 DUP10 ADD MSTORE DUP9 DUP9 ADD SWAP2 ADD PUSH2 0x9DC JUMP JUMPDEST ADD AND DUP2 ADD SUB ADD DUP2 DUP4 DUP12 GAS CALL DUP1 ISZERO PUSH2 0x586 JUMPI SWAP1 DUP6 SWAP2 PUSH2 0x572 JUMPI JUMPDEST POP POP DUP6 EXTCODESIZE ISZERO PUSH2 0x56E JUMPI DUP5 MLOAD PUSH32 0x485CC95500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP4 DUP9 GAS CALL DUP1 ISZERO PUSH2 0x564 JUMPI PUSH2 0x550 JUMPI JUMPDEST POP POP PUSH32 0xFD420143D893DF8A37B4078D9C81EFAA2FB5FC7A74CC5512CCB158588DE5FCFC DUP4 DUP3 MLOAD DUP5 DUP2 MSTORE LOG1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x55A DUP3 SWAP2 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x2EB JUMPI DUP1 PUSH2 0x520 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0x57B SWAP1 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x56E JUMPI DUP4 CODESIZE PUSH2 0x4B1 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH1 0x64 DUP6 DUP13 DUP12 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A204661696C6564206F6E206465706C6F7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP8 DUP15 DUP1 DUP15 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x69C JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x2EB JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2EB JUMPI PUSH2 0x6D7 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x69C JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69C JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A6 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A6 JUMPI DUP3 PUSH2 0x7CA PUSH2 0x84F JUMP JUMPDEST PUSH2 0x7D2 PUSH2 0x8BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH1 0x1 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x56E JUMPI DUP4 PUSH1 0x24 SWAP3 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP7 MSTORE AND SWAP1 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x846 JUMPI POP PUSH2 0x83A JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x843 SWAP1 PUSH2 0x93C JUMP JUMPDEST DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x872 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x872 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x872 JUMPI JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x8DE JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x950 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x950 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x950 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x9EF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x48 SWAP5 SWAP4 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP1 SWAP3 PUSH1 0x60 SHL AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH2 0xA50 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP7 DUP6 ADD SWAP2 ADD PUSH2 0x9DC JUMP JUMPDEST ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x11CF SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xB1 SWAP14 0xDB 0xF8 0xB1 PC 0xC7 0xB8 SWAP15 SHR 0xB0 0xED 0xE6 0xEA 0xB8 0xCD SWAP13 DUP7 0xEF 0x2E DUP7 GASPRICE 0xF9 PUSH29 0xAB3041B065284164736F6C63430008130033A2646970667358221220C4 0xF7 0xE0 0xF9 AND EXTCODEHASH 0xB3 0xAF DUP9 PREVRANDAO 0xB4 GAS 0xB8 JUMP 0x24 GASPRICE PUSH8 0x32E46866793F4499 SWAP2 0x5C INVALID LOG0 GASPRICE RETURN 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "413:1169:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1097:65:3;;;:::i;:::-;413:1169:19;;;;2231:22:3;;;413:1169:19;;;;;;;;;;;;;;2646:40:3;413:1169:19;2646:40:3;;413:1169:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;2398:1617:12;;413:1169:19;;:::i;:::-;;;;;;;;1472:41;;;413:1169;;;;;;;;;;;;;;;1472:41;;413:1169;;-1:-1:-1;;1472:41:19;413:1169;;1472:41;:::i;:::-;413:1169;1462:52;;413:1169;2317:60:20;413:1169:19;;;;;;:::i;:::-;;;;;;2317:60:20;413:1169:19;2362:6:20;413:1169:19;;;;;2317:60:20;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;413:1169:19;2307:71:20;;2421:52;413:1169:19;;;2421:52:20;;;413:1169:19;;:::i;:::-;2421:52:20;;;;;;;;;;413:1169:19;2411:63:20;;2398:1617:12;;;;;;;;;;;;1965:4;2398:1617;;;;;;;413:1169:19;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;978:41;;;;;;;;;413:1169;;;;;;;;;;;;;;;;;;;;;978:41;;;;;;;;;;;;;:::i;:::-;413:1169;968:52;;413:1169;;;;;;:::i;:::-;;;;;;;1569:60:20;413:1169:19;1569:60:20;413:1169:19;;;1614:6:20;413:1169:19;;;;1569:60:20;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;413:1169:19;1559:71:20;;1664:52;413:1169:19;;;1664:52:20;;;413:1169:19;;:::i;:::-;1664:52:20;;;;;;;;;;413:1169:19;;1314:20:12;413:1169:19;;1426:102:12;;;;;;413:1169:19;1546:18:12;;;413:1169:19;;;1614:6:20;413:1169:19;;1791:105:20;;;;;;413:1169:19;;;;;;;;;;;1791:105:20;;;;;413:1169:19;1791:105:20;;413:1169:19;1791:105:20;;;413:1169:19;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1791:105:20;;;;;;;;;;;;;;;;413:1169:19;1086:61;;;;;;;413:1169;;;1086:61;;413:1169;;;;1086:61;;;413:1169;;;;;;;;;;;;;;;;;;;1086:61;;;;;;;;;;;;413:1169;;;1162:27;413:1169;;;;;;1162:27;413:1169;;;;;1086:61;;;;;:::i;:::-;413:1169;;1086:61;;;;413:1169;;;;;;;;;1086:61;413:1169;;;1791:105:20;;;;:::i;:::-;413:1169:19;;1791:105:20;;;;;413:1169:19;;;;;;;;;1791:105:20;413:1169:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:65:3;;:::i;:::-;413:1169:19;;;;;;;;;;2646:40:3;;;;413:1169:19;;;;;;;;;;;;;;;;;;712:31:20;413:1169:19;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1097:65:3;;:::i;:::-;413:1169:19;;;2746:6:20;413:1169:19;;2746:32:20;;;;;;413:1169:19;;;;;2746:32:20;;;;;413:1169:19;2746:32:20;;413:1169:19;2746:32:20;;;413:1169:19;2746:32:20;;;;;;;;;;413:1169:19;;;2746:32:20;;;;:::i;:::-;413:1169:19;;2746:32:20;413:1169:19;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;1408:132:3:-;413:1169:19;1316:6:3;413:1169:19;;736:10:11;1472:23:3;413:1169:19;;1408:132:3:o;413:1169:19:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;413:1169:19;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"PaymentsDeployed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beacon\",\"outputs\":[{\"internalType\":\"contract UpgradeableBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentsOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentsSigner\",\"type\":\"address\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentsOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentsSigner\",\"type\":\"address\"}],\"name\":\"determineAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgradeBeacon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"PaymentsDeployed(address)\":{\"params\":{\"proxyAddr\":\"The address of the deployed proxy.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"factoryOwner\":\"The owner of the Payments Factory\"}},\"deploy(address,address,address)\":{\"params\":{\"paymentsOwner\":\"The owner of the Payments implementation\",\"paymentsSigner\":\"The signer of the Payments implementation\",\"proxyOwner\":\"The owner of the Payments proxy\"},\"returns\":{\"proxyAddr\":\"The address of the Payments proxy\"}},\"determineAddress(address,address,address)\":{\"params\":{\"paymentsOwner\":\"The owner of the Payments implementation\",\"paymentsSigner\":\"The signer of the Payments implementation\",\"proxyOwner\":\"The owner of the Payments proxy\"},\"returns\":{\"proxyAddr\":\"The address of the Payments proxy\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeBeacon(address)\":{\"params\":{\"implementation\":\"The new beacon implementation.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"PaymentsDeployed(address)\":{\"notice\":\"Event emitted when a new Payments proxy contract is deployed.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Creates an Payments Factory.\"},\"deploy(address,address,address)\":{\"notice\":\"Creates a Payments proxy contract\"},\"determineAddress(address,address,address)\":{\"notice\":\"Computes the address of a proxy instance.\"},\"upgradeBeacon(address)\":{\"notice\":\"Upgrades the beacon implementation.\"}},\"notice\":\"Deployer of Payments proxies.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/payments/PaymentsFactory.sol\":\"PaymentsFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x73a4ea88c195262c79aed1a8ad6da1e599e0ebe3911a89014e410dae6debda74\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d9f63f1c107c912620de676785b876f798f1563fee4fee897d45012daf52131\",\"dweb:/ipfs/QmQTvyVSZCUYjjo95yGgQgQvKzTBhb9fRbuzKvpmP5v5aQ\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x7ff7bbcad2aa3e45b0ec97cfee3bc25a07be957b4060f87aeb75b73e09c3823a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2921978ea9b6ea7c1ba2c1704d79e02201d0fd468392a2ce129b32c071e04d7b\",\"dweb:/ipfs/QmVnnovTQ4zLWUUdJywbCbeHDtgDJ3vhUhwWo3FnM6e6yk\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]},\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3\",\"dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA\"]},\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x96d52f844533def4977d87f5b21e2352a27d8796ea9bf11a4a44691cae275de8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad7f20ead8ceb4bde382271d7303432d514dde18173ffee542a66509227f1740\",\"dweb:/ipfs/QmWR6DmXsF3BTnaSLcA87aepLXHqM4MwdeRi9SvnWwfxKw\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xff39e9a09fe168b6247c2f655cc9fede97483c9afc0956a0aa6b5dfdaac2eead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb53ed588b2f49728d4e41c1ff082d0e92221a76ce81aca0aaa627856ed6f4fb\",\"dweb:/ipfs/QmV8vkSqXZ3DMZB9n4nzV6QNnAsxAH4kCqZRnXJt3iEXMp\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"lib/solady/src/utils/ECDSA.sol\":{\"keccak256\":\"0x317f8208d1f03356e8f709eec8e2c579d6be227099a26f777cc9ec8a06814ae4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f437b1683add465da31ecc92259d056d11edb4ea95dff22a8519fdabd82423dc\",\"dweb:/ipfs/QmbsFH26DQtnb97yqfF6Bw7CULFXupcra1x1xcq2Yy63FY\"]},\"lib/solady/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0x583f47701d9b47bb3ef80fcabbbd62fbb58a01733b7a57e19658b4b02468883a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2523bfac005e21ef9963fdb3c08b2c61824e2b5ce2f53d1a1828b01ed995217c\",\"dweb:/ipfs/QmbBjVG9tZyeZSQH4m5GUzNBwo2iuvLoZYbmhT4gxnJc4J\"]},\"src/payments/IPayments.sol\":{\"keccak256\":\"0x87572398ac77fe65a8dbf0f434c5375be87b994fd03d10e626cd4290f1ecff77\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7894b9e6d1bd8efd2bf9f3822f5e13a4bc8893a066b5168bdc90fa8d9173cc98\",\"dweb:/ipfs/Qmd9HJAgizHRpJFRGRKrGdASjUrj6Wy2VzuEEJknPwBLiS\"]},\"src/payments/IPaymentsFactory.sol\":{\"keccak256\":\"0x1e2c52f14dd4dd5323525ed37175d8d901caeaf720a5dd3dcc67f7ae501727db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://619119c06b8d616e37ce7ba953002f83a8bbe238a2b55e4e72442df200218a0d\",\"dweb:/ipfs/QmRt4zaZvSRaJJWSvH8kUpXd5v2rQ7SsZheNP3wJ9ygAH6\"]},\"src/payments/Payments.sol\":{\"keccak256\":\"0x848a020a5aaa3ec49a04077956d8ac0a03793e53a962e4b83850d18bf9dc1fae\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://126a6142ec3313e58a532fd24da8c13b79215ecc3931e558d6cfffea833f97f5\",\"dweb:/ipfs/Qmf3bwLBx3XJM9yKKpscg18F9aK8dqPR7Np3m4DBWdBQhR\"]},\"src/payments/PaymentsFactory.sol\":{\"keccak256\":\"0x4b664182384602513aeacab2c12ac416dc640703939cfbc3488c5f32702a36eb\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b5be675f8e3fbb006d6c73770843dc310f2c969f8c78e591be93992f9d6f034e\",\"dweb:/ipfs/QmakGbB72rjL1Aw48ANzatmZva6tTnGZobb5nz5mttcQnj\"]},\"src/proxies/SequenceProxyFactory.sol\":{\"keccak256\":\"0x263347655a632136e3dabcc6e49da7fb9fa5b62a4f1e9eeed3cdd74234c81c53\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f41dc2c95c5d793105ed53f9ae9adea5a00264be78d86bf4f26cca6d33b7141\",\"dweb:/ipfs/QmfP1T4HDdDWYNFxMGHMeaq6owWmNdGjDMrh6hN3in2GVW\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0x366f201163ff5b941a61d5d2cd5966f25e332f52b197335cb68670c5fc83ba12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://485725a0c56e49d07de7233293e85fe1a586ddd70b07f1b14af5819874819da9\",\"dweb:/ipfs/QmRgQV9yzosT37zGpg6wb6Ff7q8Ux4Ttryo1RdPWaAfAED\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]},\"src/tokens/common/IERC721Transfer.sol\":{\"keccak256\":\"0xb8295185decbabfcba7aafe000cc42fdb29bbccf3ead5c61f09c4cea06cbba48\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cb48fac70022eed6f278f88f2f4170ccf67084117f401189f3433cbf00511887\",\"dweb:/ipfs/QmQJcyLh4UW5JDTs9HHTsXSF9FeRa4eMziVQ26j1YMTM86\"]},\"src/utils/SignatureValidator.sol\":{\"keccak256\":\"0xffbb2fb71f103bbb676f0087d57d1cdc8227b44621a8c67ee67b51baa53f5d00\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://217f3016e0714a0f4f22e901dedec28818e5dd65cbd594da3239cd060e9bb6ce\",\"dweb:/ipfs/QmVAQywSeoudCmBu9ufXaEfKZTFh5PPTFxmDitDiAM1XZv\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"PaymentsDeployed(address)": {
								"notice": "Event emitted when a new Payments proxy contract is deployed."
							}
						},
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Creates an Payments Factory."
							},
							"deploy(address,address,address)": {
								"notice": "Creates a Payments proxy contract"
							},
							"determineAddress(address,address,address)": {
								"notice": "Computes the address of a proxy instance."
							},
							"upgradeBeacon(address)": {
								"notice": "Upgrades the beacon implementation."
							}
						},
						"notice": "Deployer of Payments proxies.",
						"version": 1
					}
				}
			},
			"src/proxies/SequenceProxyFactory.sol": {
				"SequenceProxyFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beacon",
							"outputs": [
								{
									"internalType": "contract UpgradeableBeacon",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "upgradeBeacon",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The factory owner is able to upgrade the beacon implementation.Proxy deployers are able to override the beacon reference with their own.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeBeacon(address)": {
								"params": {
									"implementation": "The new beacon implementation."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beacon\",\"outputs\":[{\"internalType\":\"contract UpgradeableBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgradeBeacon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The factory owner is able to upgrade the beacon implementation.Proxy deployers are able to override the beacon reference with their own.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeBeacon(address)\":{\"params\":{\"implementation\":\"The new beacon implementation.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"upgradeBeacon(address)\":{\"notice\":\"Upgrades the beacon implementation.\"}},\"notice\":\"An proxy factory that deploys upgradeable beacon proxies.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/SequenceProxyFactory.sol\":\"SequenceProxyFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3\",\"dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA\"]},\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x96d52f844533def4977d87f5b21e2352a27d8796ea9bf11a4a44691cae275de8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad7f20ead8ceb4bde382271d7303432d514dde18173ffee542a66509227f1740\",\"dweb:/ipfs/QmWR6DmXsF3BTnaSLcA87aepLXHqM4MwdeRi9SvnWwfxKw\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xff39e9a09fe168b6247c2f655cc9fede97483c9afc0956a0aa6b5dfdaac2eead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb53ed588b2f49728d4e41c1ff082d0e92221a76ce81aca0aaa627856ed6f4fb\",\"dweb:/ipfs/QmV8vkSqXZ3DMZB9n4nzV6QNnAsxAH4kCqZRnXJt3iEXMp\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/SequenceProxyFactory.sol\":{\"keccak256\":\"0x263347655a632136e3dabcc6e49da7fb9fa5b62a4f1e9eeed3cdd74234c81c53\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f41dc2c95c5d793105ed53f9ae9adea5a00264be78d86bf4f26cca6d33b7141\",\"dweb:/ipfs/QmfP1T4HDdDWYNFxMGHMeaq6owWmNdGjDMrh6hN3in2GVW\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0x366f201163ff5b941a61d5d2cd5966f25e332f52b197335cb68670c5fc83ba12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://485725a0c56e49d07de7233293e85fe1a586ddd70b07f1b14af5819874819da9\",\"dweb:/ipfs/QmRgQV9yzosT37zGpg6wb6Ff7q8Ux4Ttryo1RdPWaAfAED\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"upgradeBeacon(address)": {
								"notice": "Upgrades the beacon implementation."
							}
						},
						"notice": "An proxy factory that deploys upgradeable beacon proxies.",
						"version": 1
					}
				}
			},
			"src/proxies/TransparentUpgradeableBeaconProxy.sol": {
				"ITransparentUpgradeableBeaconProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":\"ITransparentUpgradeableBeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0x366f201163ff5b941a61d5d2cd5966f25e332f52b197335cb68670c5fc83ba12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://485725a0c56e49d07de7233293e85fe1a586ddd70b07f1b14af5819874819da9\",\"dweb:/ipfs/QmRgQV9yzosT37zGpg6wb6Ff7q8Ux4Ttryo1RdPWaAfAED\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TransparentUpgradeableBeaconProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "As the underlying proxy implementation (TransparentUpgradeableProxy) allows the admin to call the implementation, care must be taken to avoid proxy selector collisions. Implementation selectors must not conflict with the proxy selectors. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. The proxy selectors are: - 0xcf7a1d77: initialize - 0x3659cfe6: upgradeTo (from TransparentUpgradeableProxy) - 0x4f1ef286: upgradeToAndCall (from TransparentUpgradeableProxy) - 0x8f283970: changeAdmin (from TransparentUpgradeableProxy) - 0xf851a440: admin (from TransparentUpgradeableProxy) - 0x5c60da1b: implementation (from TransparentUpgradeableProxy)",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234610016576111cf908161001c8239f35b600080fdfe604060808152366103825773ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000917fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000843516146100c057600484517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b6100c8611192565b60049136831161037e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037e578235916101088361067f565b602435926101158461067f565b60443567ffffffffffffffff811161037a57610135839136908801610789565b941692156103525761014791166107e3565b803b156102cf578451907f5c60da1b000000000000000000000000000000000000000000000000000000009384835260209687848381865afa9384156102a657889461019d9189916102b2575b503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790555194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab575b610242575b8361023c6107d0565b80519101f35b8592839182525afa9182156102a65761026a9392610277575b506102646109b1565b91610a21565b5038808083818080610233565b610298919250843d861161029f575b610290818361070e565b810190610902565b903861025b565b503d610286565b61091a565b508661022e565b6102c99150863d881161029f57610290818361070e565b38610194565b60848360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b8487517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b8380fd5b73ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000907fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000833516146104395760046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b610441611192565b60049236841161067b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067b5783356104808161067f565b6024359161048d8361067f565b60443567ffffffffffffffff8111610677576104ad829136908901610789565b9316931561064e576104bf91166107e3565b813b156105ca576040517f5c60da1b000000000000000000000000000000000000000000000000000000009283825260209586838281855afa9283156102a65787936105149188916105b357503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617905560405194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab57610242578361023c6107d0565b6102c99150853d871161029f57610290818361070e565b6084846020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b856040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b8280fd5b73ffffffffffffffffffffffffffffffffffffffff81160361069d57565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106ed57604052565b6106a2565b6040810190811067ffffffffffffffff8211176106ed57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106ed57604052565b67ffffffffffffffff81116106ed57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561069d578035906107a08261074f565b926107ae604051948561070e565b8284526020838301011161069d57816000926020809301838601378301015290565b604051906107dd826106d1565b60008252565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61039081547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604080519373ffffffffffffffffffffffffffffffffffffffff9081851686521693846020820152a1811561087e577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b9081602091031261069d57516109178161067f565b90565b6040513d6000823e3d90fd5b1561092d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201527f73206e6f74206120636f6e7472616374000000000000000000000000000000006064820152fd5b604051906060820182811067ffffffffffffffff8211176106ed57604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806109179493602081519101845af43d15610a60573d91610a438361074f565b92610a51604051948561070e565b83523d6000602085013e610acd565b606091610acd565b15610a6f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b91929015610aed5750815115610ae1575090565b610917903b1515610a68565b825190915015610b005750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610b7d575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610b3c565b610bee610bd57fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b3303610d14576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe6000000000000000000000000000000000000000000000000000000008103610c515750610c49610f0f565b602081519101f35b7f4f1ef286000000000000000000000000000000000000000000000000000000008103610c865750610c81611083565b610c49565b7f8f283970000000000000000000000000000000000000000000000000000000008103610cb65750610c81610ec5565b7ff851a440000000000000000000000000000000000000000000000000000000008103610ce65750610c81610dfd565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610d1457610c81610e53565b610d1c610d3b565b6000808092368280378136915af43d82803e15610d37573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541680610df8575060206004917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156102a657600091610de0575090565b610917915060203d811161029f57610290818361070e565b905090565b610e05611192565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103541660405190602082015260208152610917816106f2565b610e5b611192565b610e63610d3b565b73ffffffffffffffffffffffffffffffffffffffff6040519116602082015260208152610917816106f2565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261069d576004356109178161067f565b610ecd611192565b3660041161069d57610efc73ffffffffffffffffffffffffffffffffffffffff610ef636610e8f565b166107e3565b604051610f08816106d1565b6000815290565b610f17611192565b3660041161069d5773ffffffffffffffffffffffffffffffffffffffff610f3d36610e8f565b1660405190610f4b826106d1565b60008252803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610ff7575b610fe3575b5050604051610f08816106d1565b610fef916102646109b1565b503880610fd5565b506000610fd0565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b3660041161069d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069d576004356110c18161067f565b60243567ffffffffffffffff811161069d576110f673ffffffffffffffffffffffffffffffffffffffff913690600401610789565b9116803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061118a57610fe3575050604051610f08816106d1565b506001610fd0565b3461069d5756fea264697066735822122043b19ddbf8b158c7b89e1cb0ede6eab8cd9c86ef2e863af97cab3041b065284164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x11CF SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xB1 SWAP14 0xDB 0xF8 0xB1 PC 0xC7 0xB8 SWAP15 SHR 0xB0 0xED 0xE6 0xEA 0xB8 0xCD SWAP13 DUP7 0xEF 0x2E DUP7 GASPRICE 0xF9 PUSH29 0xAB3041B065284164736F6C634300081300330000000000000000000000 ",
							"sourceMap": "1159:2219:21:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_payable": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 1929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory_array_string": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_6570": {
									"entryPoint": 1745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_6573": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun__fallback": {
									"entryPoint": 2964,
									"id": 3073,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_changeAdmin": {
									"entryPoint": 2019,
									"id": 504,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_dispatchAdmin": {
									"entryPoint": 3581,
									"id": 3093,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchChangeAdmin": {
									"entryPoint": 3781,
									"id": 3142,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchImplementation": {
									"entryPoint": 3667,
									"id": 3113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeTo": {
									"entryPoint": 3855,
									"id": 3176,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeToAndCall": {
									"entryPoint": 4227,
									"id": 3208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_fallback": {
									"entryPoint": null,
									"id": 626,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_fallback_2823": {
									"entryPoint": 898,
									"id": 2823,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_functionDelegateCall": {
									"entryPoint": 2593,
									"id": 979,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_implementation": {
									"entryPoint": 3387,
									"id": 2853,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_requireZeroValue": {
									"entryPoint": 4498,
									"id": 3230,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 2765,
									"id": 1018,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"require_helper_stringliteral_cc2e": {
									"entryPoint": 2664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_f95f": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"revert_forward": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"update_storage_value_offsett_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_address_payable": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xB1 SWAP14 0xDB 0xF8 0xB1 PC 0xC7 0xB8 SWAP15 SHR 0xB0 0xED 0xE6 0xEA 0xB8 0xCD SWAP13 DUP7 0xEF 0x2E DUP7 GASPRICE 0xF9 PUSH29 0xAB3041B065284164736F6C634300081300330000000000000000000000 ",
							"sourceMap": "1159:2219:21:-:0;;;;;2695:66:7;1159:2219:21;;3747:66:6;;;1159:2219:21;2293:25;2289:561;;;;-1:-1:-1;2382:7:21;2419:54;2382:7;;;;2407:66;2403:296;;2816:23;1159:2219;;2816:23;;;;2403:296;1406:12;;:::i;:::-;1533:1;1159:2219;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;1731:22;;1727:174;;1923:5;;1159:2219;1923:5;:::i;:::-;1746:19:10;;:23;1159:2219:21;;;;;;5377:35:6;;;;1159:2219:21;5377:35:6;;;;;;;;;;;;;;;5336:153;5377:35;;;;;2403:296:21;1746:19:10;;:23;;5336:153:6;:::i;:::-;4841:66;1159:2219:21;;;;;;;;;;;6021:25:6;;;;;;1159:2219:21;;6061:15:6;;;:28;;;2403:296:21;6057:132:6;;2403:296:21;1159:2219;;;:::i;:::-;2602:83;;;;;6057:132:6;6135:35;;;;;;;;;;;;;6958:77:10;6135:35:6;;;;6057:132;1159:2219:21;;;:::i;:::-;6958:77:10;;:::i;:::-;;6057:132:6;;;;;;;;;6135:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;6061:28::-;;;;;5377:35;;;;;;;;;;;;;;:::i;:::-;;;;1159:2219:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:174;1159:2219;;;1867:23;;;;1159:2219;;;;;;;;2203:702;1159:2219;3747:66:6;;;1159:2219:21;2293:25;2289:561;;;;-1:-1:-1;2382:7:21;2419:54;2382:7;;;;2407:66;2403:296;;2816:23;1159:2219;;2816:23;;;;2403:296;1406:12;;:::i;:::-;1533:1;1524:8;;1159:2219;;;;;;1524:8;1159:2219;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1524:8;;;1159:2219;;;;:::i;:::-;;;1731:22;;1727:174;;1923:5;1159:2219;;1923:5;:::i;:::-;1746:19:10;;:23;1159:2219:21;;;;;5377:35:6;;;;1159:2219:21;5377:35:6;;;;;;;;;;;;;;;5336:153;5377:35;;;;;1746:19:10;;:23;;5336:153:6;:::i;:::-;4841:66;1159:2219:21;;;;;;;;;;;;6021:25:6;;;;;;1159:2219:21;;6061:15:6;;;:28;;;6057:132;;1159:2219:21;;;:::i;5377:35:6:-;;;;;;;;;;;;;;:::i;1159:2219:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:174;1159:2219;;;1867:23;;;;1159:2219;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1159:2219:21;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;2316:1;1159:2219;;:::o;4413:138:6:-;3747:66;;;;4478:35;1159:2219:21;;;;;;;;;;;;;;;;;;4478:35:6;4155:22;;1159:2219:21;;;;;;;4413:138:6:o;1159:2219:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7237:332:10:-;7449:25;7237:332;7492:69;7237:332;;7449:25;;;;;;;;1159:2219:21;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;7449:25:10;;1159:2219:21;;;7492:69:10;:::i;1159:2219:21:-;;;7492:69:10;:::i;1159:2219:21:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;7865:644:10;;;;8075:427;;;1159:2219:21;;;8107:22:10;8103:290;;8407:17;;:::o;8103:290::-;8317:60;1746:19;;:23;;8317:60;:::i;8075:427::-;1159:2219:21;;;;-1:-1:-1;9212:21:10;:17;;9387:145;;;;;;;9208:388;1159:2219:21;;9564:20:10;;;;1159:2219:21;;9564:20:10;;;;1159:2219:21;;;;;;;;;9232:1:10;1159:2219:21;;;;;;;;;;;;9232:1:10;1159:2219:21;;;;;;;;;;;9564:20:10;;;;1159:2219:21;;;;;;;;;;;;;;;-1:-1:-1;1159:2219:21;;;;3487:1089:24;3548:25;3747:66:6;;;1159:2219:21;;;;3747:66:6;1159:2219:21;;;;3548:25:24;:10;:25;3747:66:6;;-1:-1:-1;3637:7:24;;;3674:47;3662:59;;3674:47;;3747:20;;;:::i;:::-;4437:75;;;;;;3658:766;3804:54;3792:66;;3804:54;;3884:27;;;:::i;:::-;3658:766;;3788:636;3948:49;3936:61;;3948:49;;4023:22;;;:::i;3932:492::-;4082:43;4070:55;;4082:43;;4151:16;;;:::i;4066:358::-;4204:52;4192:64;4204:52;;4282:25;;:::i;4188:236::-;2466:17:7;;:::i;:::-;1040:840;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:303:21;1159:2219;3747:66:6;1056;3747;1159:2219:21;3248:28;3244:80;;3747:66:6;1186:38:22;;3747:66:6;4841;3747;1159:2219:21;;;1186:38:22;;;;1159:2219:21;1186:38:22;;;;;;;;;-1:-1:-1;1186:38:22;;;3333:36:21;3073:303;:::o;1186:38:22:-;;;;;;;;;;;;;;:::i;3244:80:21:-;3292:21;;;:::o;4927:165:24:-;4970:12;;:::i;:::-;1159:2219:21;3747:66:6;;1159:2219:21;;;5068:17:24;;;;1159:2219:21;5068:17:24;;;;;;:::i;5452:198::-;5504:12;;:::i;:::-;5583:17;;:::i;:::-;1159:2219:21;;;;;5617:26:24;;;1159:2219:21;5617:26:24;;;;;;:::i;1159:2219:21:-;;;;;;;;;;;;;:::i;5761:216:24:-;5810:12;;:::i;:::-;5894:8;5903:1;1159:2219:21;;;5941:8:24;1159:2219:21;5883:35:24;5894:8;5883:35;:::i;:::-;1159:2219:21;5941:8:24;:::i;:::-;1159:2219:21;;;;;:::i;:::-;5894:8:24;1159:2219:21;;5761:216:24;:::o;6052:255::-;6099:12;;:::i;:::-;6192:8;6201:1;1159:2219:21;;;;6181:35:24;6192:8;6181:35;:::i;:::-;1159:2219:21;;;;;;;:::i;:::-;6192:8:24;1159:2219:21;;1746:19:10;;:23;1159:2219:21;;1056:66:6;1159:2219:21;;;;;;;;1939:27:6;;6192:8:24;1939:27:6;;1159:2219:21;;2268:15:6;;;:28;;;6052:255:24;2264:114:6;;6052:255:24;1159:2219:21;;;;;;;:::i;2264:114:6:-;6958:77:10;1159:2219:21;;;:::i;6958:77:10:-;;2264:114:6;;;;2268:28;;6192:8:24;2268:28:6;;1159:2219:21;;;;;;;;6201:1:24;1159:2219:21;;;;;;;;;;;;;;;;;;;6591:254:24;6729:8;6738:1;1159:2219:21;;;;;6729:8:24;1159:2219:21;;;;6738:1:24;1159:2219:21;;;;:::i;:::-;;;;;;;;;;6729:8:24;;1159:2219:21;6738:1:24;1159:2219:21;;:::i;:::-;;;1746:19:10;;:23;1159:2219:21;;1056:66:6;1159:2219:21;;;;;;;;1939:27:6;;-1:-1:-1;1939:27:6;;1159:2219:21;;2268:15:6;;;:28;;;2264:114;;1159:2219:21;;;;;;;:::i;2268:28:6:-;;6813:4:24;2268:28:6;;7328:78:24;7384:9;1159:2219:21;;7328:78:24:o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"As the underlying proxy implementation (TransparentUpgradeableProxy) allows the admin to call the implementation, care must be taken to avoid proxy selector collisions. Implementation selectors must not conflict with the proxy selectors. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. The proxy selectors are: - 0xcf7a1d77: initialize - 0x3659cfe6: upgradeTo (from TransparentUpgradeableProxy) - 0x4f1ef286: upgradeToAndCall (from TransparentUpgradeableProxy) - 0x8f283970: changeAdmin (from TransparentUpgradeableProxy) - 0xf851a440: admin (from TransparentUpgradeableProxy) - 0x5c60da1b: implementation (from TransparentUpgradeableProxy)\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":\"TransparentUpgradeableBeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0x366f201163ff5b941a61d5d2cd5966f25e332f52b197335cb68670c5fc83ba12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://485725a0c56e49d07de7233293e85fe1a586ddd70b07f1b14af5819874819da9\",\"dweb:/ipfs/QmRgQV9yzosT37zGpg6wb6Ff7q8Ux4Ttryo1RdPWaAfAED\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/openzeppelin/BeaconProxy.sol": {
				"BeaconProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234610016576102c8908161001c8239f35b600080fdfe6080806040523661011d5760208160048173ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054167f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa90811561011157600091610082575b506101f5565b6020903d8211610109575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff8211176100dc576100d6935060405201610214565b3861007c565b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b3d915061008d565b6040513d6000823e3d90fd5b6004602073ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156101115760009161019957506101f5565b60203d81116101ee575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f820116820182811067ffffffffffffffff8211176100dc576100d69350604052810190610266565b503d6101a3565b6000808092368280378136915af43d82803e15610210573d90f35b3d90fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060209101126102615760805173ffffffffffffffffffffffffffffffffffffffff811681036102615790565b600080fd5b90816020910312610261575173ffffffffffffffffffffffffffffffffffffffff81168103610261579056fea2646970667358221220a5e8cb40fe612f51ecea1a2368cedac31aee81e9d188ce9ac50f7972c754c68464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x2C8 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x11D JUMPI PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x82 JUMPI JUMPDEST POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 SWAP1 RETURNDATASIZE DUP3 GT PUSH2 0x109 JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE ADD PUSH2 0x214 JUMP JUMPDEST CODESIZE PUSH2 0x7C JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x199 JUMPI POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1EE JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x266 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x210 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x261 JUMPI PUSH1 0x80 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x261 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xE8 0xCB BLOCKHASH INVALID PUSH2 0x2F51 0xEC 0xEA BYTE 0x23 PUSH9 0xCEDAC31AEE81E9D188 0xCE SWAP11 0xC5 0xF PUSH26 0x72C754C68464736F6C6343000813003300000000000000000000 ",
							"sourceMap": "779:965:22:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory_676": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_delegate": {
									"entryPoint": 501,
									"id": 607,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_fallback": {
									"entryPoint": 285,
									"id": 626,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040523661011d5760208160048173ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054167f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa90811561011157600091610082575b506101f5565b6020903d8211610109575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff8211176100dc576100d6935060405201610214565b3861007c565b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b3d915061008d565b6040513d6000823e3d90fd5b6004602073ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156101115760009161019957506101f5565b60203d81116101ee575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f820116820182811067ffffffffffffffff8211176100dc576100d69350604052810190610266565b503d6101a3565b6000808092368280378136915af43d82803e15610210573d90f35b3d90fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060209101126102615760805173ffffffffffffffffffffffffffffffffffffffff811681036102615790565b600080fd5b90816020910312610261575173ffffffffffffffffffffffffffffffffffffffff81168103610261579056fea2646970667358221220a5e8cb40fe612f51ecea1a2368cedac31aee81e9d188ce9ac50f7972c754c68464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x11D JUMPI PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x82 JUMPI JUMPDEST POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 SWAP1 RETURNDATASIZE DUP3 GT PUSH2 0x109 JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE ADD PUSH2 0x214 JUMP JUMPDEST CODESIZE PUSH2 0x7C JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x199 JUMPI POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1EE JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x266 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x210 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x261 JUMPI PUSH1 0x80 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x261 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xE8 0xCB BLOCKHASH INVALID PUSH2 0x2F51 0xEC 0xEA BYTE 0x23 PUSH9 0xCEDAC31AEE81E9D188 0xCE SWAP11 0xC5 0xF PUSH26 0x72C754C68464736F6C6343000813003300000000000000000000 ",
							"sourceMap": "779:965:22:-:0;;;;;2695:66:7;779:965:22;1186:38;4841:66:6;1186:38:22;4841:66:6;779:965:22;4841:66:6;;779:965:22;;1186:38;;;;;;;;;-1:-1:-1;1186:38:22;;;779:965;2466:17:7;;:::i;1186:38:22:-;;;;;;;;;779:965;;;;;;;;;;;;;;;;1186:38;779:965;;;;1186:38;;:::i;:::-;;;;779:965;;;;;;;1186:38;779:965;;1186:38;;;-1:-1:-1;1186:38:22;;;779:965;;;-1:-1:-1;779:965:22;;;;;2379:113:7;1186:38:22;;779:965;4841:66:6;;779:965:22;;;1186:38;;;;779:965;1186:38;;;;;;;;;-1:-1:-1;1186:38:22;;;2466:17:7;;:::i;1186:38:22:-;;;;;;;;779:965;;;;;;;;;;;;;;;;1186:38;779:965;;;;1186:38;;;;:::i;:::-;;;;;969:918:7;1040:840;;;;;;;;;;;;;;;;;;;;;;;;;;;779:965:22;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;779:965:22;;;;;;;;;;;;;;;;;;;;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/openzeppelin/ERC1967Proxy.sol": {
				"ERC1967Proxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460145760e7908161001a8239f35b600080fdfe60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea264697066735822122080986bae64af134e9781310ac1a939daae58d1a6f4cabe379960f606b5191dae64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x14 JUMPI PUSH1 0xE7 SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x5F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SWAP9 PUSH12 0xAE64AF134E9781310AC1A939 0xDA 0xAE PC 0xD1 0xA6 DELEGATECALL 0xCA 0xBE CALLDATACOPY SWAP10 PUSH1 0xF6 MOD 0xB5 NOT SAR 0xAE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "740:267:23:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea264697066735822122080986bae64af134e9781310ac1a939daae58d1a6f4cabe379960f606b5191dae64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x5F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SWAP9 PUSH12 0xAE64AF134E9781310AC1A939 0xDA 0xAE PC 0xD1 0xA6 DELEGATECALL 0xCA 0xBE CALLDATACOPY SWAP10 PUSH1 0xF6 MOD 0xB5 NOT SAR 0xAE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "740:267:23:-:0;;;;;;;1056:66:6;;;;-1:-1:-1;740:267:23;;;;1040:840:7;;;740:267:23;;1040:840:7;;;;;;;;;;;;;;;;;740:267:23;1056:66:6;;;;-1:-1:-1;740:267:23;;;;1040:840:7;;;740:267:23;;1040:840:7;;;;;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol": {
				"ITransparentUpgradeableProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and some of its functions are implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and some of its functions are implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":\"ITransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TransparentUpgradeableProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that is upgradeable by an admin. Unlike the original OpenZeppelin implementation, this contract does not prevent the admin from calling the implementation. This potentially exposes the admin to a proxy selector attack. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. When using this contract, you must ensure that the implementation function selectors do not clash with the proxy selectors. The proxy selectors are: - 0x3659cfe6: upgradeTo - 0x4f1ef286: upgradeToAndCall - 0x8f283970: changeAdmin - 0xf851a440: admin - 0x5c60da1b: implementation NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523461001657610ac4908161001c8239f35b600080fdfe60806040523661016c577fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163303610167576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b602081519101f35b7f4f1ef2860000000000000000000000000000000000000000000000000000000081036100d957506100d46109cb565b61009c565b7f8f28397000000000000000000000000000000000000000000000000000000000810361010957506100d4610474565b7ff851a44000000000000000000000000000000000000000000000000000000000810361013957506100d4610303565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610167576100d461035c565b6101ff565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1633036101ff576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15610252573d90f35b3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176102a157604052565b610256565b6020810190811067ffffffffffffffff8211176102a157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176102a157604052565b61030b610a87565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354166040519060208201526020815261035981610285565b90565b610364610a87565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166040519060208201526020815261035981610285565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103d557565b600080fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60209101126103d55760043573ffffffffffffffffffffffffffffffffffffffff811681036103d55790565b67ffffffffffffffff81116102a157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6040519061046e826102a6565b60008252565b61047c610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff806104a3366103da565b167fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519084168152846020820152a1811561052d577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055610359610461565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b6105b9610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff6105df366103da565b16604051906105ed826102a6565b60008252803b156106ae577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906106a6575b61068c575b5050604051610685816102a6565b6000815290565b61069e916106986107e8565b91610858565b503880610677565b506000610672565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b803b156106ae5773ffffffffffffffffffffffffffffffffffffffff81167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906107e0575b6107d1575050565b6107dd916106986107e8565b50565b5060016107c9565b604051906060820182811067ffffffffffffffff8211176102a157604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806103599493602081519101845af43d15610897573d9161087a83610427565b9261088860405194856102c2565b83523d6000602085013e610904565b606091610904565b156108a657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156109245750815115610918575090565b610359903b151561089f565b8251909150156109375750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106109b4575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610973565b366004116103d55760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d557610a056103b2565b6024359067ffffffffffffffff82116103d557366023830112156103d557816004013591610a3283610427565b91610a4060405193846102c2565b83835236602485840101116103d5576000602085610a7f96602473ffffffffffffffffffffffffffffffffffffffff9601838801378501015216610732565b610359610461565b346103d55756fea26469706673582212202604ce993c1d920813b6d9facd053e140c7e93e5605de22dc87a788c38b9e48764736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0xAC4 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x16C JUMPI PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x167 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xD9 JUMPI POP PUSH2 0xD4 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x109 JUMPI POP PUSH2 0xD4 PUSH2 0x474 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x139 JUMPI POP PUSH2 0xD4 PUSH2 0x303 JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0x167 JUMPI PUSH2 0xD4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x1FF JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x252 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x30B PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x364 PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3D5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x3D5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x3D5 JUMPI SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2A1 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x46E DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x47C PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x4A3 CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP2 PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP5 SLOAD SWAP3 DUP2 MLOAD SWAP1 DUP5 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x52D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x5B9 PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5DF CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0x5ED DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6A6 JUMPI JUMPDEST PUSH2 0x68C JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x685 DUP2 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x69E SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST SWAP2 PUSH2 0x858 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x677 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x7E0 JUMPI JUMPDEST PUSH2 0x7D1 JUMPI POP POP JUMP JUMPDEST PUSH2 0x7DD SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x359 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x87A DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP3 PUSH2 0x888 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2C2 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x904 JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x904 JUMP JUMPDEST ISZERO PUSH2 0x8A6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x924 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x918 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x359 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x89F JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x937 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0x973 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3D5 JUMPI PUSH2 0xA05 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3D5 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3D5 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0xA32 DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP2 PUSH2 0xA40 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2C2 JUMP JUMPDEST DUP4 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP6 DUP5 ADD ADD GT PUSH2 0x3D5 JUMPI PUSH1 0x0 PUSH1 0x20 DUP6 PUSH2 0xA7F SWAP7 PUSH1 0x24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE AND PUSH2 0x732 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST CALLVALUE PUSH2 0x3D5 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 DIV 0xCE SWAP10 EXTCODECOPY SAR SWAP3 ADDMOD SGT 0xB6 0xD9 STATICCALL 0xCD SDIV RETURNDATACOPY EQ 0xC PUSH31 0x93E5605DE22DC87A788C38B9E48764736F6C63430008130033000000000000 ",
							"sourceMap": "2827:4581:24:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_payable": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_address_payable": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_array_string": {
									"entryPoint": 1121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_string": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_3829": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_3831": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun__fallback": {
									"entryPoint": 364,
									"id": 3073,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_dispatchAdmin": {
									"entryPoint": 771,
									"id": 3093,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchChangeAdmin": {
									"entryPoint": 1140,
									"id": 3142,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchImplementation": {
									"entryPoint": 860,
									"id": 3113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeTo": {
									"entryPoint": 1457,
									"id": 3176,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeToAndCall": {
									"entryPoint": 2507,
									"id": 3208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_fallback": {
									"entryPoint": null,
									"id": 626,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_functionDelegateCall": {
									"entryPoint": 2136,
									"id": 979,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_requireZeroValue": {
									"entryPoint": 2695,
									"id": 3230,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_upgradeToAndCall": {
									"entryPoint": 1842,
									"id": 391,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 2308,
									"id": 1018,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"require_helper_stringliteral_cc2e": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523661016c577fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163303610167576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b602081519101f35b7f4f1ef2860000000000000000000000000000000000000000000000000000000081036100d957506100d46109cb565b61009c565b7f8f28397000000000000000000000000000000000000000000000000000000000810361010957506100d4610474565b7ff851a44000000000000000000000000000000000000000000000000000000000810361013957506100d4610303565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610167576100d461035c565b6101ff565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1633036101ff576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15610252573d90f35b3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176102a157604052565b610256565b6020810190811067ffffffffffffffff8211176102a157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176102a157604052565b61030b610a87565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354166040519060208201526020815261035981610285565b90565b610364610a87565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166040519060208201526020815261035981610285565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103d557565b600080fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60209101126103d55760043573ffffffffffffffffffffffffffffffffffffffff811681036103d55790565b67ffffffffffffffff81116102a157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6040519061046e826102a6565b60008252565b61047c610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff806104a3366103da565b167fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519084168152846020820152a1811561052d577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055610359610461565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b6105b9610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff6105df366103da565b16604051906105ed826102a6565b60008252803b156106ae577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906106a6575b61068c575b5050604051610685816102a6565b6000815290565b61069e916106986107e8565b91610858565b503880610677565b506000610672565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b803b156106ae5773ffffffffffffffffffffffffffffffffffffffff81167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906107e0575b6107d1575050565b6107dd916106986107e8565b50565b5060016107c9565b604051906060820182811067ffffffffffffffff8211176102a157604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806103599493602081519101845af43d15610897573d9161087a83610427565b9261088860405194856102c2565b83523d6000602085013e610904565b606091610904565b156108a657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156109245750815115610918575090565b610359903b151561089f565b8251909150156109375750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106109b4575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610973565b366004116103d55760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d557610a056103b2565b6024359067ffffffffffffffff82116103d557366023830112156103d557816004013591610a3283610427565b91610a4060405193846102c2565b83835236602485840101116103d5576000602085610a7f96602473ffffffffffffffffffffffffffffffffffffffff9601838801378501015216610732565b610359610461565b346103d55756fea26469706673582212202604ce993c1d920813b6d9facd053e140c7e93e5605de22dc87a788c38b9e48764736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x16C JUMPI PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x167 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xD9 JUMPI POP PUSH2 0xD4 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x109 JUMPI POP PUSH2 0xD4 PUSH2 0x474 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x139 JUMPI POP PUSH2 0xD4 PUSH2 0x303 JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0x167 JUMPI PUSH2 0xD4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x1FF JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x252 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x30B PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x364 PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3D5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x3D5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x3D5 JUMPI SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2A1 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x46E DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x47C PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x4A3 CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP2 PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP5 SLOAD SWAP3 DUP2 MLOAD SWAP1 DUP5 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x52D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x5B9 PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5DF CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0x5ED DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6A6 JUMPI JUMPDEST PUSH2 0x68C JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x685 DUP2 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x69E SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST SWAP2 PUSH2 0x858 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x677 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x7E0 JUMPI JUMPDEST PUSH2 0x7D1 JUMPI POP POP JUMP JUMPDEST PUSH2 0x7DD SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x359 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x87A DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP3 PUSH2 0x888 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2C2 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x904 JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x904 JUMP JUMPDEST ISZERO PUSH2 0x8A6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x924 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x918 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x359 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x89F JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x937 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0x973 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3D5 JUMPI PUSH2 0xA05 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3D5 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3D5 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0xA32 DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP2 PUSH2 0xA40 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2C2 JUMP JUMPDEST DUP4 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP6 DUP5 ADD ADD GT PUSH2 0x3D5 JUMPI PUSH1 0x0 PUSH1 0x20 DUP6 PUSH2 0xA7F SWAP7 PUSH1 0x24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE AND PUSH2 0x732 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST CALLVALUE PUSH2 0x3D5 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 DIV 0xCE SWAP10 EXTCODECOPY SAR SWAP3 ADDMOD SGT 0xB6 0xD9 STATICCALL 0xCD SDIV RETURNDATACOPY EQ 0xC PUSH31 0x93E5605DE22DC87A788C38B9E48764736F6C63430008130033000000000000 ",
							"sourceMap": "2827:4581:24:-:0;;;;2695:66:7;2827:4581:24;3747:66:6;;2827:4581:24;;3548:10;:25;2827:4581;;-1:-1:-1;3637:7:24;;;3674:47;3662:59;;3674:47;;3747:20;;;:::i;:::-;4437:75;;;;;;3658:766;3804:54;3792:66;;3804:54;;3884:27;;;:::i;:::-;3658:766;;3788:636;3948:49;3936:61;;3948:49;;4023:22;;;:::i;3932:492::-;4082:43;4070:55;;4082:43;;4151:16;;;:::i;4066:358::-;4204:52;4192:64;4204:52;;4282:25;;:::i;4188:236::-;;:::i;3487:1089::-;3747:66:6;;2827:4581:24;;3548:10;:25;2827:4581;;-1:-1:-1;3637:7:24;;;3674:47;3662:59;;3674:47;;3747:20;;;:::i;3544:1026::-;2827:4581;1056:66:6;3747;2827:4581:24;-1:-1:-1;1040:840:7;;;;;;;;;;;;;;;;;;;;;;;;;;2827:4581:24;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;4927:165::-;4970:12;;:::i;:::-;2827:4581;3747:66:6;;2827:4581:24;;;5068:17;;;;2827:4581;5068:17;;;;;;:::i;:::-;4927:165;:::o;5452:198::-;5504:12;;:::i;:::-;2827:4581;1056:66:6;3747;2827:4581:24;;;5617:26;;;;2827:4581;5617:26;;;;;;:::i;2827:4581::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;5894:8;2827:4581;;:::o;5761:216::-;5810:12;;:::i;:::-;5894:8;5903:1;2827:4581;;;;5894:8;5883:35;5894:8;5883:35;:::i;:::-;2827:4581;3747:66:6;;4478:35;2827:4581:24;3747:66:6;;2827:4581:24;;;;;;;;;;;;;4478:35:6;4155:22;;2827:4581:24;;;;;;;;;:::i;:::-;;;;;;;;5903:1;2827:4581;;;;;;;;;;;;;;;;;;;6052:255;6099:12;;:::i;:::-;6192:8;6201:1;2827:4581;;;;6181:35;6192:8;6181:35;:::i;:::-;2827:4581;;;;;;;:::i;:::-;6192:8;2827:4581;;1746:19:10;;:23;2827:4581:24;;1056:66:6;2827:4581:24;;;;;;;;1939:27:6;;6192:8:24;1939:27:6;;2827:4581:24;;2268:15:6;;;:28;;;6052:255:24;2264:114:6;;6052:255:24;2827:4581;;;;;;;:::i;:::-;6192:8;2827:4581;;6052:255;:::o;2264:114:6:-;6958:77:10;2827:4581:24;;;:::i;:::-;6958:77:10;;:::i;:::-;;2264:114:6;;;;2268:28;;6192:8:24;2268:28:6;;2827:4581:24;;;;;;;;6201:1;2827:4581;;;;;;;;;;;;;;;;;;;2115:270:6;1746:19:10;;:23;2827:4581:24;;;;;1056:66:6;2827:4581:24;;;;;;;;1939:27:6;-1:-1:-1;1939:27:6;;2827:4581:24;;2268:15:6;;;:28;;;2115:270;2264:114;;2115:270;;:::o;2264:114::-;6958:77:10;2827:4581:24;;;:::i;6958:77:10:-;;2115:270:6:o;2268:28::-;;6813:4:24;2268:28:6;;2827:4581:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7237:332:10:-;7449:25;7237:332;7492:69;7237:332;;7449:25;;;;;;;;2827:4581:24;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;7449:25:10;;2827:4581:24;;;7492:69:10;:::i;2827:4581:24:-;;;7492:69:10;:::i;2827:4581:24:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;7865:644:10;;;;8075:427;;;2827:4581:24;;;8107:22:10;8103:290;;8407:17;;:::o;8103:290::-;8317:60;1746:19;;:23;;8317:60;:::i;8075:427::-;2827:4581:24;;;;-1:-1:-1;9212:21:10;:17;;9387:145;;;;;;;9208:388;2827:4581:24;;9564:20:10;;;;2827:4581:24;;9564:20:10;;;;2827:4581:24;;;;;;;;;9232:1:10;2827:4581:24;;;;;;;;;;;;9232:1:10;2827:4581:24;;;;;;;;;;;9564:20:10;;;;2827:4581:24;;;;;;;;;;;;;;;-1:-1:-1;2827:4581:24;;;;6591:254;6729:8;6738:1;2827:4581;;;;;6729:8;2827:4581;;;;;;:::i;:::-;;;;;;;;;6729:8;2827:4581;;;;;;;;6738:1;2827:4581;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;6729:8;2827:4581;;;;;;;;6729:8;2827:4581;;6813:4;2827:4581;;;;;;;;;;;;;;6813:4;:::i;:::-;2827:4581;;:::i;7328:78::-;7384:9;2827:4581;;7328:78::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. Unlike the original OpenZeppelin implementation, this contract does not prevent the admin from calling the implementation. This potentially exposes the admin to a proxy selector attack. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. When using this contract, you must ensure that the implementation function selectors do not clash with the proxy selectors. The proxy selectors are: - 0x3659cfe6: upgradeTo - 0x4f1ef286: upgradeToAndCall - 0x8f283970: changeAdmin - 0xf851a440: admin - 0x5c60da1b: implementation NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/common/IERC721Transfer.sol": {
				"IERC721Transfer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A minimal implementation of the ERC721 transfer interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/IERC721Transfer.sol\":\"IERC721Transfer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/common/IERC721Transfer.sol\":{\"keccak256\":\"0xb8295185decbabfcba7aafe000cc42fdb29bbccf3ead5c61f09c4cea06cbba48\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://cb48fac70022eed6f278f88f2f4170ccf67084117f401189f3433cbf00511887\",\"dweb:/ipfs/QmQJcyLh4UW5JDTs9HHTsXSF9FeRa4eMziVQ26j1YMTM86\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A minimal implementation of the ERC721 transfer interface.",
						"version": 1
					}
				}
			},
			"src/utils/SignatureValidator.sol": {
				"SignatureValidator": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212209cfdaa2833bde380ece502214beef88686f8bb2769af03dd19f3ec7cb71c839c64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 REVERT 0xAA 0x28 CALLER 0xBD 0xE3 DUP1 0xEC 0xE5 MUL 0x21 0x4B 0xEE 0xF8 DUP7 DUP7 0xF8 0xBB 0x27 PUSH10 0xAF03DD19F3EC7CB71C83 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "205:1480:26:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212209cfdaa2833bde380ece502214beef88686f8bb2769af03dd19f3ec7cb71c839c64736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP13 REVERT 0xAA 0x28 CALLER 0xBD 0xE3 DUP1 0xEC 0xE5 MUL 0x21 0x4B 0xEE 0xF8 DUP7 DUP7 0xF8 0xBB 0x27 PUSH10 0xAF03DD19F3EC7CB71C83 SWAP13 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "205:1480:26:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/utils/SignatureValidator.sol\":\"SignatureValidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x7ff7bbcad2aa3e45b0ec97cfee3bc25a07be957b4060f87aeb75b73e09c3823a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2921978ea9b6ea7c1ba2c1704d79e02201d0fd468392a2ce129b32c071e04d7b\",\"dweb:/ipfs/QmVnnovTQ4zLWUUdJywbCbeHDtgDJ3vhUhwWo3FnM6e6yk\"]},\"lib/solady/src/utils/ECDSA.sol\":{\"keccak256\":\"0x317f8208d1f03356e8f709eec8e2c579d6be227099a26f777cc9ec8a06814ae4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f437b1683add465da31ecc92259d056d11edb4ea95dff22a8519fdabd82423dc\",\"dweb:/ipfs/QmbsFH26DQtnb97yqfF6Bw7CULFXupcra1x1xcq2Yy63FY\"]},\"src/utils/SignatureValidator.sol\":{\"keccak256\":\"0xffbb2fb71f103bbb676f0087d57d1cdc8227b44621a8c67ee67b51baa53f5d00\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://217f3016e0714a0f4f22e901dedec28818e5dd65cbd594da3239cd060e9bb6ce\",\"dweb:/ipfs/QmVAQywSeoudCmBu9ufXaEfKZTFh5PPTFxmDitDiAM1XZv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol": {
				"id": 0
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1271Wallet.sol": {
				"id": 1
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol": {
				"id": 2
			},
			"lib/openzeppelin/contracts/access/Ownable.sol": {
				"id": 3
			},
			"lib/openzeppelin/contracts/interfaces/IERC1967.sol": {
				"id": 4
			},
			"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"id": 5
			},
			"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"id": 6
			},
			"lib/openzeppelin/contracts/proxy/Proxy.sol": {
				"id": 7
			},
			"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"id": 8
			},
			"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"id": 9
			},
			"lib/openzeppelin/contracts/utils/Address.sol": {
				"id": 10
			},
			"lib/openzeppelin/contracts/utils/Context.sol": {
				"id": 11
			},
			"lib/openzeppelin/contracts/utils/Create2.sol": {
				"id": 12
			},
			"lib/openzeppelin/contracts/utils/StorageSlot.sol": {
				"id": 13
			},
			"lib/solady/src/utils/ECDSA.sol": {
				"id": 14
			},
			"lib/solady/src/utils/SafeTransferLib.sol": {
				"id": 15
			},
			"src/payments/IPayments.sol": {
				"id": 16
			},
			"src/payments/IPaymentsFactory.sol": {
				"id": 17
			},
			"src/payments/Payments.sol": {
				"id": 18
			},
			"src/payments/PaymentsFactory.sol": {
				"id": 19
			},
			"src/proxies/SequenceProxyFactory.sol": {
				"id": 20
			},
			"src/proxies/TransparentUpgradeableBeaconProxy.sol": {
				"id": 21
			},
			"src/proxies/openzeppelin/BeaconProxy.sol": {
				"id": 22
			},
			"src/proxies/openzeppelin/ERC1967Proxy.sol": {
				"id": 23
			},
			"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol": {
				"id": 24
			},
			"src/tokens/common/IERC721Transfer.sol": {
				"id": 25
			},
			"src/utils/SignatureValidator.sol": {
				"id": 26
			}
		}
	}
}