{
	"id": "0619385e8c0319fc8b29ab515c4f408b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 500000
			},
			"outputSelection": {
				"*": {
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"devdoc",
						"userdoc",
						"metadata",
						"abi"
					]
				}
			},
			"libraries": {},
			"remappings": []
		},
		"sources": {
			"contracts/modules/MainModule.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./commons/ModuleAuthFixed.sol\";\nimport \"./commons/ModuleHooks.sol\";\nimport \"./commons/ModuleCalls.sol\";\nimport \"./commons/ModuleCreator.sol\";\nimport \"./commons/ModuleExtraAuth.sol\";\nimport \"./commons/ModuleAuthConvenience.sol\";\n\n\n/**\n * @notice Contains the core functionality Sequence wallets will inherit.\n * @dev If using a new main module, developers must ensure that all inherited\n *      contracts by the main module don't conflict and are accounted for to be\n *      supported by the supportsInterface method.\n */\ncontract MainModule is\n  ModuleAuthFixed,\n  ModuleExtraAuth,\n  ModuleCalls,\n  ModuleHooks,\n  ModuleCreator,\n  ModuleAuthConvenience\n{\n  constructor(\n    address _factory,\n    address _mainModuleUpgradable\n  ) ModuleAuthFixed(\n    _factory,\n    _mainModuleUpgradable\n  ) { }\n\n  function _isValidImage(\n    bytes32 _imageHash\n  ) internal override(\n    IModuleAuth,\n    ModuleAuthFixed,\n    ModuleExtraAuth\n  ) view returns (bool) {\n    return super._isValidImage(_imageHash);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(\n    bytes4 _interfaceID\n  ) public override(\n    ModuleAuthFixed,\n    ModuleAuthConvenience,\n    ModuleCalls,\n    ModuleExtraAuth,\n    ModuleHooks,\n    ModuleCreator\n  ) pure returns (bool) {\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleAuthConvenience.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleAuth.sol\";\nimport \"./ModuleIPFS.sol\";\nimport \"./ModuleERC165.sol\";\n\nimport \"../../utils/LibString.sol\";\n\n\n\nabstract contract ModuleAuthConvenience is ModuleERC165, ModuleSelfAuth, ModuleAuth, ModuleIPFS {\n\n  /**\n  * @notice Updates the image hash and the IPFS root in a single operation.\n  * @dev These two operations are often performed together, so this function\n  *      allows to save some gas by performing them in a single step.\n  *\n  * @param _imageHash The new image hash to be set.\n  * @param _ipfsRoot The new IPFS root to be set.\n  */\n  function updateImageHashAndIPFS(\n    bytes32 _imageHash,\n    bytes32 _ipfsRoot\n  ) external onlySelf {\n    _updateImageHash(_imageHash);\n    _updateIPFSRoot(_ipfsRoot);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override (\n    ModuleERC165,\n    ModuleAuth\n  ) virtual pure returns (bool) {\n    if (_interfaceID == type(ModuleAuthConvenience).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleExtraAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleAuth.sol\";\nimport \"./ModuleStorage.sol\";\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleERC165.sol\";\n\n\nabstract contract ModuleExtraAuth is ModuleERC165, ModuleSelfAuth, ModuleAuth {\n  //                       EXTRA_IMAGE_HASH_KEY = keccak256(\"org.sequence.module.static.auth.extra.image.hash\");\n  bytes32 private constant EXTRA_IMAGE_HASH_KEY = bytes32(0x849e7bdc245db17e50b9f43086f1914d70eb4dab6dd89af4d541d53353ad97de);\n\n  event SetExtraImageHash(bytes32 indexed _imageHash, uint256 _expiration);\n\n  function _writeExpirationForImageHash(bytes32 _imageHash, uint256 _expiration) internal {\n    ModuleStorage.writeBytes32Map(EXTRA_IMAGE_HASH_KEY, _imageHash, bytes32(_expiration));\n  }\n\n  function _readExpirationForImageHash(bytes32 _imageHash) internal view returns (uint256 _expiration) {\n    return uint256(ModuleStorage.readBytes32Map(EXTRA_IMAGE_HASH_KEY, _imageHash));\n  }\n\n  function _isValidImage(bytes32 _imageHash) internal override virtual view returns (bool) {\n    if (super._isValidImage(_imageHash)) {\n      return true;\n    }\n\n    uint256 expiration = _readExpirationForImageHash(_imageHash);\n\n    // solhint-disable-next-line not-rely-on-time\n    return expiration != 0 && expiration > block.timestamp;\n  }\n\n  function extraImageHash(bytes32 _imageHash) public view returns (uint256) {\n    return _readExpirationForImageHash(_imageHash);\n  }\n\n  function setExtraImageHash(bytes32 _imageHash, uint256 _expiration) external onlySelf {\n    _writeExpirationForImageHash(_imageHash, _expiration);\n\n    emit SetExtraImageHash(_imageHash, _expiration);\n  }\n\n  function clearExtraImageHashes(bytes32[] calldata _imageHashes) external onlySelf {\n    unchecked {\n      uint256 imageHashesLength = _imageHashes.length;\n      for (uint256 i = 0; i < imageHashesLength; i++) {\n        bytes32 imageHash = _imageHashes[i];\n        _writeExpirationForImageHash(imageHash, 0);\n\n       emit SetExtraImageHash(imageHash, 0);\n      }\n    }\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override (\n    ModuleERC165,\n    ModuleAuth\n  ) virtual pure returns (bool) {\n    if (_interfaceID == type(ModuleExtraAuth).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleCreator.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./interfaces/IModuleCreator.sol\";\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleERC165.sol\";\n\n\ncontract ModuleCreator is IModuleCreator, ModuleERC165, ModuleSelfAuth {\n  event CreatedContract(address _contract);\n\n  /**\n   * @notice Creates a contract forwarding eth value\n   * @param _code Creation code of the contract\n   * @return addr The address of the created contract\n   */\n  function createContract(bytes memory _code) public override virtual payable onlySelf returns (address addr) {\n    assembly { addr := create(callvalue(), add(_code, 32), mload(_code)) }\n    if (addr == address(0)) revert CreateFailed(_code);\n    emit CreatedContract(addr);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (_interfaceID == type(IModuleCreator).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleCalls.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleStorage.sol\";\nimport \"./ModuleERC165.sol\";\nimport \"./ModuleNonce.sol\";\nimport \"./ModuleOnlyDelegatecall.sol\";\n\nimport \"./interfaces/IModuleCalls.sol\";\nimport \"./interfaces/IModuleAuth.sol\";\n\nimport \"./submodules/nonce/SubModuleNonce.sol\";\nimport \"./submodules/auth/SequenceBaseSig.sol\";\n\nimport \"../../utils/LibOptim.sol\";\n\n\nabstract contract ModuleCalls is IModuleCalls, IModuleAuth, ModuleERC165, ModuleOnlyDelegatecall, ModuleSelfAuth, ModuleNonce {\n  /**\n   * @notice Allow wallet owner to execute an action\n   * @dev Relayers must ensure that the gasLimit specified for each transaction\n   *      is acceptable to them. A user could specify large enough that it could\n   *      consume all the gas available.\n   * @param _txs        Transactions to process\n   * @param _nonce      Signature nonce (may contain an encoded space)\n   * @param _signature  Encoded signature\n   */\n  function execute(\n    Transaction[] calldata _txs,\n    uint256 _nonce,\n    bytes calldata _signature\n  ) external override virtual onlyDelegatecall {\n    // Validate and update nonce\n    _validateNonce(_nonce);\n\n    // Hash and verify transaction bundle\n    (bool isValid, bytes32 txHash) = _signatureValidation(\n      keccak256(\n        abi.encode(\n          _nonce,\n          _txs\n        )\n      ),\n      _signature\n    );\n\n    if (!isValid) {\n      revert InvalidSignature(txHash, _signature);\n    }\n\n    // Execute the transactions\n    _execute(txHash, _txs);\n  }\n\n  /**\n   * @notice Allow wallet to execute an action\n   *   without signing the message\n   * @param _txs  Transactions to execute\n   */\n  function selfExecute(\n    Transaction[] calldata _txs\n  ) external override virtual onlySelf {\n    // Hash transaction bundle\n    bytes32 txHash = SequenceBaseSig.subdigest(\n      keccak256(\n        abi.encode('self:', _txs)\n      )\n    );\n\n    // Execute the transactions\n    _execute(txHash, _txs);\n  }\n\n  /**\n   * @notice Executes a list of transactions\n   * @param _txHash  Hash of the batch of transactions\n   * @param _txs  Transactions to execute\n   */\n  function _execute(\n    bytes32 _txHash,\n    Transaction[] calldata _txs\n  ) private {\n    unchecked {\n      // Execute transaction\n      uint256 size = _txs.length;\n      for (uint256 i = 0; i < size; i++) {\n        Transaction calldata transaction = _txs[i];\n        uint256 gasLimit = transaction.gasLimit;\n\n        if (gasleft() < gasLimit) revert NotEnoughGas(i, gasLimit, gasleft());\n\n        bool success;\n        if (transaction.delegateCall) {\n          success = LibOptim.delegatecall(\n            transaction.target,\n            gasLimit == 0 ? gasleft() : gasLimit,\n            transaction.data\n          );\n        } else {\n          success = LibOptim.call(\n            transaction.target,\n            transaction.value,\n            gasLimit == 0 ? gasleft() : gasLimit,\n            transaction.data\n          );\n        }\n\n        if (success) {\n          emit TxExecuted(_txHash, i);\n        } else {\n          // Avoid copy of return data until neccesary\n          _revertBytes(\n            transaction.revertOnError,\n            _txHash,\n            i,\n            LibOptim.returnData()\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @notice Logs a failed transaction, reverts if the transaction is not optional\n   * @param _revertOnError  Signals if it should revert or just log\n   * @param _txHash         Hash of the transaction\n   * @param _index          Index of the transaction in the batch\n   * @param _reason         Encoded revert message\n   */\n  function _revertBytes(\n    bool _revertOnError,\n    bytes32 _txHash,\n    uint256 _index,\n    bytes memory _reason\n  ) internal {\n    if (_revertOnError) {\n      assembly { revert(add(_reason, 0x20), mload(_reason)) }\n    } else {\n      emit TxFailed(_txHash, _index, _reason);\n    }\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (_interfaceID == type(IModuleCalls).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleHooks.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./interfaces/IModuleHooks.sol\";\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleStorage.sol\";\nimport \"./ModuleERC165.sol\";\n\nimport \"../../interfaces/receivers/IERC1155Receiver.sol\";\nimport \"../../interfaces/receivers/IERC721Receiver.sol\";\nimport \"../../interfaces/receivers/IERC223Receiver.sol\";\n\n\ncontract ModuleHooks is IERC1155Receiver, IERC721Receiver, IModuleHooks, ModuleERC165, ModuleSelfAuth {\n  //                       HOOKS_KEY = keccak256(\"org.arcadeum.module.hooks.hooks\");\n  bytes32 private constant HOOKS_KEY = bytes32(0xbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a120);\n\n  /**\n   * @notice Reads the implementation hook of a signature\n   * @param _signature Signature function\n   * @return The address of the implementation hook, address(0) if none\n  */\n  function readHook(bytes4 _signature) external override virtual view returns (address) {\n    return _readHook(_signature);\n  }\n\n  /**\n   * @notice Adds a new hook to handle a given function selector\n   * @param _signature Signature function linked to the hook\n   * @param _implementation Hook implementation contract\n   * @dev Can't overwrite hooks that are part of the main module (those defined below)\n   */\n  function addHook(bytes4 _signature, address _implementation) external override virtual onlySelf {\n    if (_readHook(_signature) != address(0)) revert HookAlreadyExists(_signature);\n    _writeHook(_signature, _implementation);\n  }\n\n  /**\n   * @notice Removes a registered hook\n   * @param _signature Signature function linked to the hook\n   * @dev Can't remove hooks that are part of the main module (those defined below)\n   *      without upgrading the wallet\n   */\n  function removeHook(bytes4 _signature) external override virtual onlySelf {\n    if (_readHook(_signature) == address(0)) revert HookDoesNotExist(_signature);\n    _writeHook(_signature, address(0));\n  }\n\n  /**\n   * @notice Reads the implementation hook of a signature\n   * @param _signature Signature function\n   * @return The address of the implementation hook, address(0) if none\n  */\n  function _readHook(bytes4 _signature) private view returns (address) {\n    return address(uint160(uint256(ModuleStorage.readBytes32Map(HOOKS_KEY, _signature))));\n  }\n\n  /**\n   * @notice Writes the implementation hook of a signature\n   * @param _signature Signature function\n   * @param _implementation Hook implementation contract\n  */\n  function _writeHook(bytes4 _signature, address _implementation) private {\n    ModuleStorage.writeBytes32Map(HOOKS_KEY, _signature, bytes32(uint256(uint160(_implementation))));\n    emit DefinedHook(_signature, _implementation);\n  }\n\n  /**\n   * @notice Handle the receipt of a single ERC1155 token type.\n   * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n   */\n  function onERC1155Received(\n    address,\n    address,\n    uint256,\n    uint256,\n    bytes calldata\n  ) external override virtual returns (bytes4) {\n    return ModuleHooks.onERC1155Received.selector;\n  }\n\n  /**\n   * @notice Handle the receipt of multiple ERC1155 token types.\n   * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n   */\n  function onERC1155BatchReceived(\n    address,\n    address,\n    uint256[] calldata,\n    uint256[] calldata,\n    bytes calldata\n  ) external override virtual returns (bytes4) {\n    return ModuleHooks.onERC1155BatchReceived.selector;\n  }\n\n  /**\n   * @notice Handle the receipt of a single ERC721 token.\n   * @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n   */\n  function onERC721Received(address, address, uint256, bytes calldata) external override virtual returns (bytes4) {\n    return ModuleHooks.onERC721Received.selector;\n  }\n\n  /**\n   * @notice Routes fallback calls through hooks\n   */\n  fallback() external payable {\n    if (msg.data.length >= 4) {\n      address target = _readHook(msg.sig);\n      if (target != address(0)) {\n        (bool success, bytes memory result) = target.delegatecall(msg.data);\n        assembly {\n          if iszero(success)  {\n            revert(add(result, 0x20), mload(result))\n          }\n\n          return(add(result, 0x20), mload(result))\n        }\n      }\n    }\n  }\n\n  /**\n   * @notice Allows the wallet to receive ETH\n   */\n  receive() external payable { }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (\n      _interfaceID == type(IModuleHooks).interfaceId ||\n      _interfaceID == type(IERC1155Receiver).interfaceId ||\n      _interfaceID == type(IERC721Receiver).interfaceId ||\n      _interfaceID == type(IERC223Receiver).interfaceId\n    ) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleAuthFixed.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleAuth.sol\";\nimport \"./ModuleUpdate.sol\";\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleStorage.sol\";\n\nimport \"../../Wallet.sol\";\n\n/**\n *  Implements ModuleAuth by validating the signature image against\n *  the salt used to deploy the contract\n *\n *  This module allows wallets to be deployed with a default configuration\n *  without using any aditional contract storage\n */\nabstract contract ModuleAuthFixed is ModuleSelfAuth, ModuleAuth, ModuleUpdate {\n  bytes32 public immutable INIT_CODE_HASH;\n  address public immutable FACTORY;\n  address public immutable UPGRADEABLE_IMPLEMENTATION;\n\n  constructor(address _factory, address _mainModuleUpgradeable) {\n    // Build init code hash of the deployed wallets using that module\n    bytes32 initCodeHash = keccak256(abi.encodePacked(Wallet.creationCode, uint256(uint160(address(this)))));\n\n    INIT_CODE_HASH = initCodeHash;\n    FACTORY = _factory;\n    UPGRADEABLE_IMPLEMENTATION = _mainModuleUpgradeable;\n  }\n\n  /**\n   * @notice Updates the configuration of the wallet\n   * @dev In the process of updating the configuration, the wallet implementation\n   *      is updated to the mainModuleUpgradeable, this only happens once in the\n   *      lifetime of the wallet.\n   *\n   * @param _imageHash New required image hash of the signature\n   */\n  function _updateImageHash(bytes32 _imageHash) internal override virtual {\n    // Update imageHash in storage\n    if (_imageHash == bytes32(0)) revert ImageHashIsZero();\n    ModuleStorage.writeBytes32(IMAGE_HASH_KEY, _imageHash);\n    emit ImageHashUpdated(_imageHash);\n\n    // Update wallet implementation to mainModuleUpgradeable\n    _updateImplementation(UPGRADEABLE_IMPLEMENTATION);\n  }\n\n  /**\n   * @notice Validates the signature image with the salt used to deploy the contract\n   * @param _imageHash Hash image of signature\n   * @return true if the signature image is valid\n   */\n  function _isValidImage(bytes32 _imageHash) internal override virtual view returns (bool) {\n    return address(\n      uint160(\n        uint256(\n          keccak256(\n            abi.encodePacked(\n              hex\"ff\",\n              FACTORY,\n              _imageHash,\n              INIT_CODE_HASH\n            )\n          )\n        )\n      )\n    ) == address(this);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override(ModuleAuth, ModuleUpdate) virtual pure returns (bool) {\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/interfaces/receivers/IERC223Receiver.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IERC223Receiver {\n  function tokenFallback(address, uint256, bytes calldata) external;\n}\n"
			},
			"contracts/interfaces/receivers/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IERC721Receiver {\n  function onERC721Received(address, address, uint256, bytes calldata) external returns (bytes4);\n}\n"
			},
			"contracts/interfaces/receivers/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IERC1155Receiver {\n  function onERC1155Received(address, address, uint256, uint256, bytes calldata) external returns (bytes4);\n  function onERC1155BatchReceived(address, address, uint256[] calldata, uint256[] calldata, bytes calldata) external returns (bytes4);\n}\n"
			},
			"contracts/modules/commons/ModuleERC165.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nabstract contract ModuleERC165 {\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @dev Adding new hooks will not lead to them being reported by this function\n   *      without upgrading the wallet. In addition, developers must ensure that\n   *      all inherited contracts by the main module don't conflict and are accounted\n   *      to be supported by the supportsInterface method.\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) virtual public pure returns (bool) {\n    return _interfaceID == this.supportsInterface.selector;\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleStorage.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nlibrary ModuleStorage {\n  function writeBytes32(bytes32 _key, bytes32 _val) internal {\n    assembly { sstore(_key, _val) }\n  }\n\n  function readBytes32(bytes32 _key) internal view returns (bytes32 val) {\n    assembly { val := sload(_key) }\n  }\n\n  function writeBytes32Map(bytes32 _key, bytes32 _subKey, bytes32 _val) internal {\n    bytes32 key = keccak256(abi.encode(_key, _subKey));\n    assembly { sstore(key, _val) }\n  }\n\n  function readBytes32Map(bytes32 _key, bytes32 _subKey) internal view returns (bytes32 val) {\n    bytes32 key = keccak256(abi.encode(_key, _subKey));\n    assembly { val := sload(key) }\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleSelfAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ncontract ModuleSelfAuth {\n  error OnlySelfAuth(address _sender, address _self);\n\n  modifier onlySelf() {\n    if (msg.sender != address(this)) {\n      revert OnlySelfAuth(msg.sender, address(this));\n    }\n    _;\n  }\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleHooks.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IModuleHooks {\n  // Errors\n  error HookAlreadyExists(bytes4 _signature);\n  error HookDoesNotExist(bytes4 _signature);\n\n  // Events\n  event DefinedHook(bytes4 _signature, address _implementation);\n\n  /**\n   * @notice Reads the implementation hook of a signature\n   * @param _signature Signature function\n   * @return The address of the implementation hook, address(0) if none\n  */\n  function readHook(bytes4 _signature) external view returns (address);\n\n  /**\n   * @notice Adds a new hook to handle a given function selector\n   * @param _signature Signature function linked to the hook\n   * @param _implementation Hook implementation contract\n   */\n  function addHook(bytes4 _signature, address _implementation) external;\n\n  /**\n   * @notice Removes a registered hook\n   * @param _signature Signature function linked to the hook\n   */\n  function removeHook(bytes4 _signature) external;\n}\n"
			},
			"contracts/modules/commons/ModuleAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"../../utils/LibBytes.sol\";\nimport \"../../interfaces/IERC1271Wallet.sol\";\n\nimport \"./interfaces/IModuleAuth.sol\";\n\nimport \"./ModuleERC165.sol\";\n\nimport \"./submodules/auth/SequenceBaseSig.sol\";\nimport \"./submodules/auth/SequenceDynamicSig.sol\";\nimport \"./submodules/auth/SequenceNoChainIdSig.sol\";\nimport \"./submodules/auth/SequenceChainedSig.sol\";\n\n\nabstract contract ModuleAuth is\n  IModuleAuth,\n  ModuleERC165,\n  IERC1271Wallet,\n  SequenceChainedSig\n{\n  using LibBytes for bytes;\n\n  bytes1 internal constant LEGACY_TYPE = hex\"00\";\n  bytes1 internal constant DYNAMIC_TYPE = hex\"01\";\n  bytes1 internal constant NO_CHAIN_ID_TYPE = hex\"02\";\n  bytes1 internal constant CHAINED_TYPE = hex\"03\";\n\n  bytes4 internal constant SELECTOR_ERC1271_BYTES_BYTES = 0x20c13b0b;\n  bytes4 internal constant SELECTOR_ERC1271_BYTES32_BYTES = 0x1626ba7e;\n\n  /**\n   * @notice Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\n   * @dev The signature must be prefixed with a type byte, which is used to determine the recovery method.\n   *\n   * @param _digest Digest of the signed data.\n   * @param _signature A Sequence signature.\n   *\n   * @return threshold The required number of signatures needed to consider the signature valid.\n   * @return weight The actual number of signatures collected in the signature.\n   * @return imageHash The imageHash of the configuration that signed the message.\n   * @return subdigest A modified version of the original digest, unique for each wallet/network.\n   * @return checkpoint A nonce that is incremented every time a new configuration is set.\n   */\n  function signatureRecovery(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) public override virtual view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    bytes32 subdigest,\n    uint256 checkpoint\n  ) {\n    bytes1 signatureType = _signature[0];\n\n    if (signatureType == LEGACY_TYPE) {\n      // networkId digest + base recover\n      subdigest = SequenceBaseSig.subdigest(_digest);\n      (threshold, weight, imageHash, checkpoint) = SequenceBaseSig.recover(subdigest, _signature);\n      return (threshold, weight, imageHash, subdigest, checkpoint);\n    }\n\n    if (signatureType == DYNAMIC_TYPE) {\n      // networkId digest + dynamic recover\n      subdigest = SequenceBaseSig.subdigest(_digest);\n      (threshold, weight, imageHash, checkpoint) = SequenceDynamicSig.recover(subdigest, _signature);\n      return (threshold, weight, imageHash, subdigest, checkpoint);\n    }\n\n    if (signatureType == NO_CHAIN_ID_TYPE) {\n      // noChainId digest + dynamic recover\n      subdigest = SequenceNoChainIdSig.subdigest(_digest);\n      (threshold, weight, imageHash, checkpoint) = SequenceDynamicSig.recover(subdigest, _signature);\n      return (threshold, weight, imageHash, subdigest, checkpoint);\n    }\n\n    if (signatureType == CHAINED_TYPE) {\n      // original digest + chained recover\n      // (subdigest will be computed in the chained recover)\n      return chainedRecover(_digest, _signature);\n    }\n\n    revert InvalidSignatureType(signatureType);\n  }\n\n  /**\n   * @dev Validates a signature.\n   *\n   * @param _digest Digest of the signed data.\n   * @param _signature A Sequence signature.\n   *\n   * @return isValid Indicates whether the signature is valid or not.\n   * @return subdigest A modified version of the original digest, unique for each wallet/network.\n   */\n  function _signatureValidation(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) internal override virtual view returns (\n    bool isValid,\n    bytes32 subdigest\n  ) {\n    uint256 threshold; uint256 weight; bytes32 imageHash;\n    (threshold, weight, imageHash, subdigest,) = signatureRecovery(_digest, _signature);\n    isValid = weight >= threshold && _isValidImage(imageHash);\n  }\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided data\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided data\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))\n   * @param _data       Arbitrary length data signed on the behalf of address(this)\n   * @param _signatures Signature byte array associated with _data.\n   *                    Encoded as abi.encode(Signature[], Configs)\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes calldata _data,\n    bytes calldata _signatures\n  ) public override virtual view returns (bytes4) {\n    // Validate signatures\n    (bool isValid,) = _signatureValidation(keccak256(_data), _signatures);\n    if (isValid) {\n      return SELECTOR_ERC1271_BYTES_BYTES;\n    }\n\n    return bytes4(0);\n  }\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided hash\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided hash\n   *   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))\n   * @param _hash       keccak256 hash that was signed\n   * @param _signatures Signature byte array associated with _data.\n   *                    Encoded as abi.encode(Signature[], Configs)\n   * @return magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    bytes calldata _signatures\n  ) public override virtual view returns (bytes4) {\n    // Validate signatures\n    (bool isValid,) = _signatureValidation(_hash, _signatures);\n    if (isValid) {\n      return SELECTOR_ERC1271_BYTES32_BYTES;\n    }\n\n    return bytes4(0);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (\n      _interfaceID == type(IModuleAuth).interfaceId ||\n      _interfaceID == type(IERC1271Wallet).interfaceId\n    ) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n\n  /**\n   * @notice Updates the signers configuration of the wallet\n   * @param _imageHash New required image hash of the signature\n   */\n  function updateImageHash(bytes32 _imageHash) external override virtual onlySelf {\n    _updateImageHash(_imageHash);\n  }\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleCreator.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IModuleCreator {\n  error CreateFailed(bytes _code);\n\n  /**\n   * @notice Creates a contract forwarding eth value\n   * @param _code Creation code of the contract\n   * @return addr The address of the created contract\n   */\n  function createContract(bytes calldata _code) external payable returns (address addr);\n}\n"
			},
			"contracts/utils/LibOptim.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n/**\n * @title Library for optimized EVM operations\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice This library contains functions for optimizing certain EVM operations.\n */\nlibrary LibOptim {\n\n  /**\n   * @notice Computes the keccak256 hash of two 32-byte inputs.\n   * @dev It uses only scratch memory space.\n   * @param _a The first 32 bytes of the hash.\n   * @param _b The second 32 bytes of the hash.\n   * @return c The keccak256 hash of the two 32-byte inputs.\n   */\n  function fkeccak256(\n    bytes32 _a,\n    bytes32 _b\n  ) internal pure returns (bytes32 c) {\n    assembly {\n      mstore(0, _a)\n      mstore(32, _b)\n      c := keccak256(0, 64)\n    }\n  }\n\n  /**\n   * @notice Returns the return data from the last call.\n   * @return r The return data from the last call.\n   */\n  function returnData() internal pure returns (bytes memory r) {\n    assembly {\n      let size := returndatasize()\n      r := mload(0x40)\n      let start := add(r, 32)\n      mstore(0x40, add(start, size))\n      mstore(r, size)\n      returndatacopy(start, 0, size)\n    }\n  }\n\n  /**\n   * @notice Calls another contract with the given parameters.\n   * @dev This method doesn't increase the memory pointer.\n   * @param _to The address of the contract to call.\n   * @param _val The value to send to the contract.\n   * @param _gas The amount of gas to provide for the call.\n   * @param _data The data to send to the contract.\n   * @return r The success status of the call.\n   */\n  function call(\n    address _to,\n    uint256 _val,\n    uint256 _gas,\n    bytes calldata _data\n  ) internal returns (bool r) {\n    assembly {\n      let tmp := mload(0x40)\n      calldatacopy(tmp, _data.offset, _data.length)\n\n      r := call(\n        _gas,\n        _to,\n        _val,\n        tmp,\n        _data.length,\n        0,\n        0\n      )\n    }\n  }\n\n  /**\n   * @notice Calls another contract with the given parameters, using delegatecall.\n   * @dev This method doesn't increase the memory pointer.\n   * @param _to The address of the contract to call.\n   * @param _gas The amount of gas to provide for the call.\n   * @param _data The data to send to the contract.\n   * @return r The success status of the call.\n   */\n  function delegatecall(\n    address _to,\n    uint256 _gas,\n    bytes calldata _data\n  ) internal returns (bool r) {\n    assembly {\n      let tmp := mload(0x40)\n      calldatacopy(tmp, _data.offset, _data.length)\n\n      r := delegatecall(\n        _gas,\n        _to,\n        tmp,\n        _data.length,\n        0,\n        0\n      )\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"../../../../utils/SignatureValidator.sol\";\nimport \"../../../../utils/LibBytesPointer.sol\";\nimport \"../../../../utils/LibBytes.sol\";\nimport \"../../../../utils/LibOptim.sol\";\n\n\n/**\n * @title SequenceBaseSig Library\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice A Solidity implementation for handling signatures in the Sequence protocol.\n */\nlibrary SequenceBaseSig {\n  using LibBytesPointer for bytes;\n\n  uint256 private constant FLAG_SIGNATURE = 0;\n  uint256 private constant FLAG_ADDRESS = 1;\n  uint256 private constant FLAG_DYNAMIC_SIGNATURE = 2;\n  uint256 private constant FLAG_NODE = 3;\n  uint256 private constant FLAG_BRANCH = 4;\n  uint256 private constant FLAG_SUBDIGEST = 5;\n  uint256 private constant FLAG_NESTED = 6;\n\n  error InvalidNestedSignature(bytes32 _hash, address _addr, bytes _signature);\n  error InvalidSignatureFlag(uint256 _flag);\n\n  /**\n  * @notice Generates a subdigest for the input digest (unique for this wallet and network).\n  * @param _digest The input digest to generate the subdigest from.\n  * @return bytes32 The subdigest generated from the input digest.\n  */\n  function subdigest(\n    bytes32 _digest\n  ) internal view returns (bytes32) {\n    return keccak256(\n      abi.encodePacked(\n        \"\\x19\\x01\",\n        block.chainid,\n        address(this),\n        _digest\n      )\n    );\n  }\n\n  /**\n  * @notice Generates the leaf for an address and weight.\n  * @dev The leaf is generated by concatenating the address and weight.\n  *\n  * @param _addr The address to generate the leaf for.\n  * @param _weight The weight to generate the leaf for.\n  * @return bytes32 The leaf generated from the address and weight.\n  */\n  function _leafForAddressAndWeight(\n    address _addr,\n    uint96 _weight\n  ) internal pure returns (bytes32) {\n    unchecked {\n      return bytes32(uint256(_weight) << 160 | uint256(uint160(_addr)));\n    }\n  }\n\n  /**\n  * @notice Generates the leaf for a hardcoded subdigest.\n  * @dev The leaf is generated by hashing 'Sequence static digest:\\n' and the subdigest.\n  * @param _subdigest The subdigest to generate the leaf for.\n  * @return bytes32 The leaf generated from the hardcoded subdigest.\n  */\n  function _leafForHardcodedSubdigest(\n    bytes32 _subdigest\n  ) internal pure returns (bytes32) {\n    return keccak256(abi.encodePacked('Sequence static digest:\\n', _subdigest));\n  }\n\n  /**\n  * @notice Generates the leaf for a nested tree node.\n  * @dev The leaf is generated by hashing 'Sequence nested config:\\n', the node, the threshold and the weight.\n  *\n  * @param _node The root of the node to generate the leaf for.\n  * @param _threshold The internal threshold of the tree.\n  * @param _weight The external weight of the tree.\n  * @return bytes32 The leaf generated from the nested tree.\n  */\n  function _leafForNested(\n    bytes32 _node,\n    uint256 _threshold,\n    uint256 _weight\n  ) internal pure returns (bytes32) {\n    return keccak256(abi.encodePacked('Sequence nested config:\\n', _node, _threshold, _weight));\n  }\n\n  /**\n   * @notice Returns the weight and root of a signature branch.\n   * @dev If the signature contains a hardcoded subdigest, and it matches the input digest, then the weight is set to 2 ** 256 - 1.\n   *\n   * @param _subdigest The digest to verify the signature against.\n   * @param _signature The signature branch to recover.\n   * @return weight The total weight of the recovered signatures.\n   * @return root The root hash of the recovered configuration.\n   */\n  function recoverBranch(\n    bytes32 _subdigest,\n    bytes calldata _signature\n  ) internal view returns (\n    uint256 weight,\n    bytes32 root\n  ) {\n    unchecked {\n      uint256 rindex;\n\n      // Iterate until the image is completed\n      while (rindex < _signature.length) {\n        // Read next item type\n        uint256 flag;\n        (flag, rindex) = _signature.readUint8(rindex);\n\n        if (flag == FLAG_ADDRESS) {\n          // Read plain address\n          uint8 addrWeight; address addr;\n          (addrWeight, addr, rindex) = _signature.readUint8Address(rindex);\n\n          // Write weight and address to image\n          bytes32 node = _leafForAddressAndWeight(addr, addrWeight);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        if (flag == FLAG_SIGNATURE) {\n          // Read weight\n          uint8 addrWeight;\n          (addrWeight, rindex) = _signature.readUint8(rindex);\n\n          // Read single signature and recover signer\n          uint256 nrindex = rindex + 66;\n          address addr = SignatureValidator.recoverSigner(_subdigest, _signature[rindex:nrindex]);\n          rindex = nrindex;\n\n          // Acumulate total weight of the signature\n          weight += addrWeight;\n\n          // Write weight and address to image\n          bytes32 node = _leafForAddressAndWeight(addr, addrWeight);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        if (flag == FLAG_DYNAMIC_SIGNATURE) {\n          // Read signer and weight\n          uint8 addrWeight; address addr;\n          (addrWeight, addr, rindex) = _signature.readUint8Address(rindex);\n\n          // Read signature size\n          uint256 size;\n          (size, rindex) = _signature.readUint24(rindex);\n\n          // Read dynamic size signature\n          uint256 nrindex = rindex + size;\n          if (!SignatureValidator.isValidSignature(_subdigest, addr, _signature[rindex:nrindex])) {\n            revert InvalidNestedSignature(_subdigest, addr, _signature[rindex:nrindex]);\n          }\n          rindex = nrindex;\n\n          // Acumulate total weight of the signature\n          weight += addrWeight;\n\n          // Write weight and address to image\n          bytes32 node = _leafForAddressAndWeight(addr, addrWeight);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        if (flag == FLAG_NODE) {\n          // Read node hash\n          bytes32 node;\n          (node, rindex) = _signature.readBytes32(rindex);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        if (flag == FLAG_BRANCH) {\n          // Enter a branch of the signature merkle tree\n          uint256 size;\n          (size, rindex) = _signature.readUint24(rindex);\n          uint256 nrindex = rindex + size;\n\n          uint256 nweight; bytes32 node;\n          (nweight, node) = recoverBranch(_subdigest, _signature[rindex:nrindex]);\n\n          weight += nweight;\n          root = LibOptim.fkeccak256(root, node);\n\n          rindex = nrindex;\n          continue;\n        }\n\n        if (flag == FLAG_NESTED) {\n          // Enter a branch of the signature merkle tree\n          // but with an internal threshold and an external fixed weight\n          uint256 externalWeight;\n          (externalWeight, rindex) = _signature.readUint8(rindex);\n\n          uint256 internalThreshold;\n          (internalThreshold, rindex) = _signature.readUint16(rindex);\n\n          uint256 size;\n          (size, rindex) = _signature.readUint24(rindex);\n          uint256 nrindex = rindex + size;\n\n          uint256 internalWeight; bytes32 internalRoot;\n          (internalWeight, internalRoot) = recoverBranch(_subdigest, _signature[rindex:nrindex]);\n          rindex = nrindex;\n\n          if (internalWeight >= internalThreshold) {\n            weight += externalWeight;\n          }\n\n          bytes32 node = _leafForNested(internalRoot, internalThreshold, externalWeight);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n\n          continue;\n        }\n\n        if (flag == FLAG_SUBDIGEST) {\n          // A hardcoded always accepted digest\n          // it pushes the weight to the maximum\n          bytes32 hardcoded;\n          (hardcoded, rindex) = _signature.readBytes32(rindex);\n          if (hardcoded == _subdigest) {\n            weight = type(uint256).max;\n          }\n\n          bytes32 node = _leafForHardcodedSubdigest(hardcoded);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        revert InvalidSignatureFlag(flag);\n      }\n    }\n  }\n\n  /**\n   * @notice Returns the threshold, weight, root, and checkpoint of a signature.\n   * @dev To verify the signature, the weight must be greater than or equal to the threshold, and the root\n   *      must match the expected `imageHash` of the wallet.\n   *\n   * @param _subdigest The digest to verify the signature against.\n   * @param _signature The signature to recover.\n   * @return threshold The minimum weight required for the signature to be valid.\n   * @return weight The total weight of the recovered signatures.\n   * @return imageHash The root hash of the recovered configuration\n   * @return checkpoint The checkpoint of the signature.\n   */\n  function recover(\n    bytes32 _subdigest,\n    bytes calldata _signature\n  ) internal view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    uint256 checkpoint\n  ) {\n    unchecked {\n      (weight, imageHash) = recoverBranch(_subdigest, _signature[6:]);\n\n      // Threshold & checkpoint are the top nodes\n      // (but they are first on the signature)\n      threshold = LibBytes.readFirstUint16(_signature);\n      checkpoint = LibBytes.readUint32(_signature, 2);\n\n      imageHash = LibOptim.fkeccak256(imageHash, bytes32(threshold));\n      imageHash = LibOptim.fkeccak256(imageHash, bytes32(checkpoint));\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nlibrary SubModuleNonce {\n  // Nonce schema\n  //\n  // - space[160]:nonce[96]\n  //\n  uint256 internal constant NONCE_BITS = 96;\n  bytes32 internal constant NONCE_MASK = bytes32(uint256(type(uint96).max));\n\n  /**\n   * @notice Decodes a raw nonce\n   * @dev Schema: space[160]:type[96]\n   * @param _rawNonce Nonce to be decoded\n   * @return _space The nonce space of the raw nonce\n   * @return _nonce The nonce of the raw nonce\n   */\n  function decodeNonce(uint256 _rawNonce) internal pure returns (\n    uint256 _space,\n    uint256 _nonce\n  ) {\n    unchecked {\n      // Decode nonce\n      _space = _rawNonce >> NONCE_BITS;\n      _nonce = uint256(bytes32(_rawNonce) & NONCE_MASK);\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nabstract contract IModuleAuth {\n  //                        IMAGE_HASH_KEY = keccak256(\"org.arcadeum.module.auth.upgradable.image.hash\");\n  bytes32 internal constant IMAGE_HASH_KEY = bytes32(0xea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8);\n\n  event ImageHashUpdated(bytes32 newImageHash);\n\n  // Errors\n  error ImageHashIsZero();\n  error InvalidSignatureType(bytes1 _type);\n\n  function _signatureValidation(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) internal virtual view returns (\n    bool isValid,\n    bytes32 subdigest\n  );\n\n  function signatureRecovery(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) public virtual view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    bytes32 subdigest,\n    uint256 checkpoint\n  );\n\n  /**\n   * @notice Validates the signature image\n   * @return true if the signature image is valid\n   */\n  function _isValidImage(bytes32) internal virtual view returns (bool) {\n    return false;\n  }\n\n  /**\n   * @notice Updates the signers configuration of the wallet\n   * @param _imageHash New required image hash of the signature\n   */\n  function updateImageHash(bytes32 _imageHash) external virtual;\n\n  /**\n   * @notice Updates the signers configuration of the wallet\n   * @param _imageHash New required image hash of the signature\n   */\n  function _updateImageHash(bytes32 _imageHash) internal virtual;\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleCalls.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IModuleCalls {\n  // Events\n  event TxFailed(bytes32 indexed _tx, uint256 _index, bytes _reason);\n  event TxExecuted(bytes32 indexed _tx, uint256 _index);\n\n  // Errors\n  error NotEnoughGas(uint256 _index, uint256 _requested, uint256 _available);\n  error InvalidSignature(bytes32 _hash, bytes _signature);\n\n  // Transaction structure\n  struct Transaction {\n    bool delegateCall;   // Performs delegatecall\n    bool revertOnError;  // Reverts transaction bundle if tx fails\n    uint256 gasLimit;    // Maximum gas to be forwarded\n    address target;      // Address of the contract to call\n    uint256 value;       // Amount of ETH to pass with the call\n    bytes data;          // calldata to pass\n  }\n\n  /**\n   * @notice Allow wallet owner to execute an action\n   * @param _txs        Transactions to process\n   * @param _nonce      Signature nonce (may contain an encoded space)\n   * @param _signature  Encoded signature\n   */\n  function execute(\n    Transaction[] calldata _txs,\n    uint256 _nonce,\n    bytes calldata _signature\n  ) external;\n\n  /**\n   * @notice Allow wallet to execute an action\n   *   without signing the message\n   * @param _txs  Transactions to execute\n   */\n  function selfExecute(\n    Transaction[] calldata _txs\n  ) external;\n}\n"
			},
			"contracts/modules/commons/ModuleOnlyDelegatecall.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ncontract ModuleOnlyDelegatecall {\n  address private immutable self;\n\n  error OnlyDelegatecall();\n\n  constructor() {\n    self = address(this);\n  }\n\n  /**\n   * @notice Modifier that only allows functions to be called via delegatecall.\n   */\n  modifier onlyDelegatecall() {\n    if (address(this) == self) {\n      revert OnlyDelegatecall();\n    }\n    _;\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleNonce.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleStorage.sol\";\n\nimport \"./submodules/nonce/SubModuleNonce.sol\";\n\n\ncontract ModuleNonce {\n  // Events\n  event NonceChange(uint256 _space, uint256 _newNonce);\n\n  // Errors\n  error BadNonce(uint256 _space, uint256 _provided, uint256 _current);\n\n  //                       NONCE_KEY = keccak256(\"org.arcadeum.module.calls.nonce\");\n  bytes32 private constant NONCE_KEY = bytes32(0x8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e);\n\n  /**\n   * @notice Returns the next nonce of the default nonce space\n   * @dev The default nonce space is 0x00\n   * @return The next nonce\n   */\n  function nonce() external virtual view returns (uint256) {\n    return readNonce(0);\n  }\n\n  /**\n   * @notice Returns the next nonce of the given nonce space\n   * @param _space Nonce space, each space keeps an independent nonce count\n   * @return The next nonce\n   */\n  function readNonce(uint256 _space) public virtual view returns (uint256) {\n    return uint256(ModuleStorage.readBytes32Map(NONCE_KEY, bytes32(_space)));\n  }\n\n  /**\n   * @notice Changes the next nonce of the given nonce space\n   * @param _space Nonce space, each space keeps an independent nonce count\n   * @param _nonce Nonce to write on the space\n   */\n  function _writeNonce(uint256 _space, uint256 _nonce) internal {\n    ModuleStorage.writeBytes32Map(NONCE_KEY, bytes32(_space), bytes32(_nonce));\n  }\n\n  /**\n   * @notice Verify if a nonce is valid\n   * @param _rawNonce Nonce to validate (may contain an encoded space)\n   */\n  function _validateNonce(uint256 _rawNonce) internal virtual {\n    // Retrieve current nonce for this wallet\n    (uint256 space, uint256 providedNonce) = SubModuleNonce.decodeNonce(_rawNonce);\n\n    uint256 currentNonce = readNonce(space);\n    if (currentNonce != providedNonce) {\n      revert BadNonce(space, providedNonce, currentNonce);\n    }\n\n    unchecked {\n      uint256 newNonce = providedNonce + 1;\n\n      _writeNonce(space, newNonce);\n      emit NonceChange(space, newNonce);\n      return;\n    }\n  }\n}\n"
			},
			"contracts/Wallet.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n/**\n    Minimal upgradeable proxy implementation, delegates all calls to the address\n    defined by the storage slot matching the wallet address.\n\n    Inspired by EIP-1167 Implementation (https://eips.ethereum.org/EIPS/eip-1167)\n\n    deployed code:\n\n        0x00    0x36         0x36      CALLDATASIZE      cds\n        0x01    0x3d         0x3d      RETURNDATASIZE    0 cds\n        0x02    0x3d         0x3d      RETURNDATASIZE    0 0 cds\n        0x03    0x37         0x37      CALLDATACOPY\n        0x04    0x3d         0x3d      RETURNDATASIZE    0\n        0x05    0x3d         0x3d      RETURNDATASIZE    0 0\n        0x06    0x3d         0x3d      RETURNDATASIZE    0 0 0\n        0x07    0x36         0x36      CALLDATASIZE      cds 0 0 0\n        0x08    0x3d         0x3d      RETURNDATASIZE    0 cds 0 0 0\n        0x09    0x30         0x30      ADDRESS           addr 0 cds 0 0 0\n        0x0A    0x54         0x54      SLOAD             imp 0 cds 0 0 0\n        0x0B    0x5a         0x5a      GAS               gas imp 0 cds 0 0 0\n        0x0C    0xf4         0xf4      DELEGATECALL      suc 0\n        0x0D    0x3d         0x3d      RETURNDATASIZE    rds suc 0\n        0x0E    0x82         0x82      DUP3              0 rds suc 0\n        0x0F    0x80         0x80      DUP1              0 0 rds suc 0\n        0x10    0x3e         0x3e      RETURNDATACOPY    suc 0\n        0x11    0x90         0x90      SWAP1             0 suc\n        0x12    0x3d         0x3d      RETURNDATASIZE    rds 0 suc\n        0x13    0x91         0x91      SWAP2             suc 0 rds\n        0x14    0x60 0x18    0x6018    PUSH1             0x18 suc 0 rds\n    /-- 0x16    0x57         0x57      JUMPI             0 rds\n    |   0x17    0xfd         0xfd      REVERT\n    \\-> 0x18    0x5b         0x5b      JUMPDEST          0 rds\n        0x19    0xf3         0xf3      RETURN\n\n    flat deployed code: 0x363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3\n\n    deploy function:\n\n        0x00    0x60 0x3a    0x603a    PUSH1             0x3a\n        0x02    0x60 0x0e    0x600e    PUSH1             0x0e 0x3a\n        0x04    0x3d         0x3d      RETURNDATASIZE    0 0x0e 0x3a\n        0x05    0x39         0x39      CODECOPY\n        0x06    0x60 0x1a    0x601a    PUSH1             0x1a\n        0x08    0x80         0x80      DUP1              0x1a 0x1a\n        0x09    0x51         0x51      MLOAD             imp 0x1a\n        0x0A    0x30         0x30      ADDRESS           addr imp 0x1a\n        0x0B    0x55         0x55      SSTORE            0x1a\n        0x0C    0x3d         0x3d      RETURNDATASIZE    0 0x1a\n        0x0D    0xf3         0xf3      RETURN\n        [...deployed code]\n\n    flat deploy function: 0x603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3\n*/\nlibrary Wallet {\n  bytes internal constant creationCode = hex\"603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3\";\n}\n"
			},
			"contracts/modules/commons/ModuleUpdate.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./interfaces/IModuleUpdate.sol\";\n\nimport \"./Implementation.sol\";\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleERC165.sol\";\n\nimport \"../../utils/LibAddress.sol\";\n\n\ncontract ModuleUpdate is IModuleUpdate, ModuleERC165, ModuleSelfAuth, Implementation {\n  using LibAddress for address;\n\n  event ImplementationUpdated(address newImplementation);\n\n  /**\n   * @notice Updates the implementation of the base wallet\n   * @param _implementation New main module implementation\n   * @dev WARNING Updating the implementation can brick the wallet\n   */\n  function updateImplementation(address _implementation) external override virtual onlySelf {\n    _updateImplementation(_implementation);\n  }\n\n  /**\n   * @notice Updates the implementation of the base wallet, used internally.\n   * @param _implementation New main module implementation\n   * @dev WARNING Updating the implementation can brick the wallet\n   */\n  function _updateImplementation(address _implementation) internal override virtual {\n    if (!_implementation.isContract()) revert InvalidImplementation(_implementation);\n    _setImplementation(_implementation);\n    emit ImplementationUpdated(_implementation);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (_interfaceID == type(IModuleUpdate).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/utils/LibString.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n/**\n * @title Library for string manipulation operations\n * @notice This library contains functions for manipulating strings in Solidity.\n */\nlibrary LibString {\n  bytes private constant ALPHABET_HEX_16 = '0123456789abcdef';\n  bytes private constant ALPHABET_32 = 'abcdefghijklmnopqrstuvwxyz234567';\n\n  /**\n   * @notice Prefixes a hexadecimal string with \"0x\".\n   * @param _hex The hexadecimal string to prefix.\n   * @return The prefixed hexadecimal string.\n   */\n  function prefixHexadecimal(string memory _hex) internal pure returns (string memory) {\n    return string(abi.encodePacked('0x', _hex));\n  }\n\n  /**\n   * @notice Prefixes a base32 string with \"b\".\n   * @param _base32 The base32 string to prefix.\n   * @return The prefixed base32 string.\n   */\n  function prefixBase32(string memory _base32) internal pure returns (string memory) {\n    return string(abi.encodePacked('b', _base32));\n  }\n\n  /**\n   * @notice Converts a byte array to a hexadecimal string.\n   * @param _bytes The byte array to convert.\n   * @return The resulting hexadecimal string.\n   */\n  function bytesToHexadecimal(bytes memory _bytes) internal pure returns (string memory) {\n    uint256 bytesLength = _bytes.length;\n    bytes memory bytesArray = new bytes(bytesLength << 1);\n\n    unchecked {\n      for (uint256 i = 0; i < bytesLength; i++) {\n        uint256 word = uint8(_bytes[i]);\n        uint256 ib = i << 1;\n        bytesArray[ib] = bytes1(ALPHABET_HEX_16[word >> 4]);\n        bytesArray[ib + 1] = bytes1(ALPHABET_HEX_16[word & 0xf]);\n      }\n    }\n\n    return string(bytesArray);\n  }\n\n  /**\n   * @notice Converts a byte array to a base32 string.\n   * @param _bytes The byte array to convert.\n   * @return The resulting base32 string.\n   */\n  function bytesToBase32(bytes memory _bytes) internal pure returns (string memory) {\n    uint256 bytesLength = _bytes.length;\n\n    uint256 t1 = bytesLength << 3;\n\n    unchecked {\n      // base32-encoded length = ceil(# of bits / 5)\n      bytes memory bytesArray = new bytes((t1 + 4) / 5);\n\n      uint256 bits = 0;\n      uint256 buffer = 0;\n      uint256 pointer = 0;\n\n      for (uint256 i = 0; i < bytesLength; i++) {\n        buffer = (buffer << 8) | uint8(_bytes[i]);\n        bits += 8;\n\n        while (bits >= 5) {\n          bits -= 5;\n          bytesArray[pointer] = bytes1(ALPHABET_32[(buffer >> bits) & 0x1f]);\n          pointer++;\n        }\n      }\n\n      if (bits > 0) {\n        bytesArray[pointer] = bytes1(ALPHABET_32[(buffer << (5 - bits)) & 0x1f]);\n      }\n\n      return string(bytesArray);\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleIPFS.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleStorage.sol\";\n\nimport \"../../utils/LibString.sol\";\n\n\ncontract ModuleIPFS is ModuleSelfAuth {\n  event IPFSRootUpdated(bytes32 _hash);\n\n  //                       IPFS_ROOT_KEY = keccak256(\"sequence.ipfs.root\")\n  bytes32 private constant IPFS_ROOT_KEY = bytes32(0x0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d033);\n\n  function ipfsRootBytes32() public view returns (bytes32) {\n    return ModuleStorage.readBytes32(IPFS_ROOT_KEY);\n  }\n\n  function ipfsRoot() public view returns (string memory) {\n    return string(\n      abi.encodePacked(\n        \"ipfs://\",\n        LibString.prefixBase32(\n          LibString.bytesToBase32(\n            abi.encodePacked(\n              hex'01701220',\n              ipfsRootBytes32()\n            )\n          )\n        )\n      )\n    );\n  }\n\n  function updateIPFSRoot(bytes32 _hash) external onlySelf {\n    _updateIPFSRoot(_hash);\n  }\n\n  function _updateIPFSRoot(bytes32 _hash) internal {\n    ModuleStorage.writeBytes32(IPFS_ROOT_KEY, _hash);\n    emit IPFSRootUpdated(_hash);\n  }\n}\n"
			},
			"contracts/utils/LibBytes.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\n/**\n * @title Library for reading data from bytes arrays\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice This library contains functions for reading data from bytes arrays.\n *\n * @dev These functions do not check if the input index is within the bounds of the data array.\n *         Reading out of bounds may return dirty values.\n */\nlibrary LibBytes {\n\n  /**\n   * @notice Returns the bytes32 value at the given index in the input data.\n   * @param data The input data.\n   * @param index The index of the value to retrieve.\n   * @return a The bytes32 value at the given index.\n   */\n  function readBytes32(\n    bytes calldata data,\n    uint256 index\n  ) internal pure returns (\n    bytes32 a\n  ) {\n    assembly {\n      a := calldataload(add(data.offset, index))\n    }\n  }\n\n  /**\n   * @notice Returns the uint8 value at the given index in the input data.\n   * @param data The input data.\n   * @param index The index of the value to retrieve.\n   * @return a The uint8 value at the given index.\n   */\n  function readUint8(\n    bytes calldata data,\n    uint256 index\n  ) internal pure returns (\n    uint8 a\n  ) {\n    assembly {\n      let word := calldataload(add(index, data.offset))\n      a := shr(248, word)\n    }\n  }\n\n  /**\n   * @notice Returns the first uint16 value in the input data.\n   * @param data The input data.\n   * @return a The first uint16 value in the input data.\n   */\n  function readFirstUint16(\n    bytes calldata data\n  ) internal pure returns (\n    uint16 a\n  ) {\n    assembly {\n      let word := calldataload(data.offset)\n      a := shr(240, word)\n    }\n  }\n\n  /**\n   * @notice Returns the uint32 value at the given index in the input data.\n   * @param data The input data.\n   * @param index The index of the value to retrieve.\n   * @return a The uint32 value at the given index.\n   */\n  function readUint32(\n    bytes calldata data,\n    uint256 index\n  ) internal pure returns (\n    uint32 a\n  ) {\n    assembly {\n      let word := calldataload(add(index, data.offset))\n      a := shr(224, word)\n    }\n  }\n}\n"
			},
			"contracts/utils/LibBytesPointer.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\n/**\n * @title Library for reading data from bytes arrays with a pointer\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice This library contains functions for reading data from bytes arrays with a pointer.\n *\n * @dev These functions do not check if the input index is within the bounds of the data array.\n *         Reading out of bounds may return dirty values.\n */\nlibrary LibBytesPointer {\n\n  /**\n   * @dev Returns the first uint16 value in the input data and updates the pointer.\n   * @param _data The input data.\n   * @return a The first uint16 value.\n   * @return newPointer The new pointer.\n   */\n  function readFirstUint16(\n    bytes calldata _data\n  ) internal pure returns (\n    uint16 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(_data.offset)\n      a := shr(240, word)\n      newPointer := 2\n    }\n  }\n\n  /**\n   * @notice Returns the uint8 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint8 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readUint8(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint8 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := shr(248, word)\n      newPointer := add(_index, 1)\n    }\n  }\n\n  /**\n   * @notice Returns the uint8 value and the address at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint8 value at the given index.\n   * @return b The following address value.\n   * @return newPointer The new pointer.\n   */\n  function readUint8Address(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint8 a,\n    address b,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := shr(248, word)\n      b := and(shr(88, word), 0xffffffffffffffffffffffffffffffffffffffff)\n      newPointer := add(_index, 21)\n    }\n  }\n\n  /**\n   * @notice Returns the uint16 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint16 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readUint16(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint16 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := and(shr(240, word), 0xffff)\n      newPointer := add(_index, 2)\n    }\n  }\n\n  /**\n   * @notice Returns the uint24 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint24 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readUint24(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint24 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := and(shr(232, word), 0xffffff)\n      newPointer := add(_index, 3)\n    }\n  }\n\n  /**\n   * @notice Returns the uint64 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint64 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readUint64(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint64 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := and(shr(192, word), 0xffffffffffffffff)\n      newPointer := add(_index, 8)\n    }\n  }\n\n  /**\n   * @notice Returns the bytes32 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _pointer The index of the value to retrieve.\n   * @return a The bytes32 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readBytes32(\n    bytes calldata _data,\n    uint256 _pointer\n  ) internal pure returns (\n    bytes32 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      a := calldataload(add(_pointer, _data.offset))\n      newPointer := add(_pointer, 32)\n    }\n  }\n}\n"
			},
			"contracts/utils/SignatureValidator.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"../interfaces/IERC1271Wallet.sol\";\n\nimport \"./LibBytes.sol\";\n\n/**\n * @dev Contains logic for signature validation.\n * Signatures from wallet contracts assume ERC-1271 support (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1271.md)\n * Notes: Methods are strongly inspired by contracts in https://github.com/0xProject/0x-monorepo/blob/development/\n */\nlibrary SignatureValidator {\n  // Errors\n  error InvalidSignatureLength(bytes _signature);\n  error EmptySignature();\n  error InvalidSValue(bytes _signature, bytes32 _s);\n  error InvalidVValue(bytes _signature, uint256 _v);\n  error UnsupportedSignatureType(bytes _signature, uint256 _type, bool _recoverMode);\n  error SignerIsAddress0(bytes _signature);\n\n  using LibBytes for bytes;\n\n  /***********************************|\n  |             Variables             |\n  |__________________________________*/\n\n  // bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))\n  bytes4 constant internal ERC1271_MAGICVALUE = 0x20c13b0b;\n\n  // bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))\n  bytes4 constant internal ERC1271_MAGICVALUE_BYTES32 = 0x1626ba7e;\n\n  // Allowed signature types.\n  uint256 private constant SIG_TYPE_EIP712 = 1;\n  uint256 private constant SIG_TYPE_ETH_SIGN = 2;\n  uint256 private constant SIG_TYPE_WALLET_BYTES32 = 3;\n\n  /***********************************|\n  |        Signature Functions        |\n  |__________________________________*/\n\n /**\n   * @notice Recover the signer of hash, assuming it's an EOA account\n   * @dev Only for SignatureType.EIP712 and SignatureType.EthSign signatures\n   * @param _hash      Hash that was signed\n   *   encoded as (bytes32 r, bytes32 s, uint8 v, ... , SignatureType sigType)\n   */\n  function recoverSigner(\n    bytes32 _hash,\n    bytes calldata _signature\n  ) internal pure returns (address signer) {\n    if (_signature.length != 66) revert InvalidSignatureLength(_signature);\n    uint256 signatureType = _signature.readUint8(_signature.length - 1);\n\n    // Variables are not scoped in Solidity.\n    uint8 v = _signature.readUint8(64);\n    bytes32 r = _signature.readBytes32(0);\n    bytes32 s = _signature.readBytes32(32);\n\n    // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n    // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n    // the valid range for s in (281): 0 < s < secp256k1n ÷ 2 + 1, and for v in (282): v ∈ {27, 28}. Most\n    // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n    //\n    // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n    // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n    // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n    // these malleable signatures as well.\n    //\n    // Source OpenZeppelin\n    // https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/cryptography/ECDSA.sol\n\n    if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n      revert InvalidSValue(_signature, s);\n    }\n\n    if (v != 27 && v != 28) {\n      revert InvalidVValue(_signature, v);\n    }\n\n    // Signature using EIP712\n    if (signatureType == SIG_TYPE_EIP712) {\n      signer = ecrecover(_hash, v, r, s);\n\n    // Signed using web3.eth_sign() or Ethers wallet.signMessage()\n    } else if (signatureType == SIG_TYPE_ETH_SIGN) {\n      signer = ecrecover(\n        keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _hash)),\n        v,\n        r,\n        s\n      );\n\n    } else {\n      // We cannot recover the signer for any other signature type.\n      revert UnsupportedSignatureType(_signature, signatureType, true);\n    }\n\n    // Prevent signer from being 0x0\n    if (signer == address(0x0)) revert SignerIsAddress0(_signature);\n\n    return signer;\n  }\n\n /**\n   * @notice Returns true if the provided signature is valid for the given signer.\n   * @dev Supports SignatureType.EIP712, SignatureType.EthSign, and ERC1271 signatures\n   * @param _hash      Hash that was signed\n   * @param _signer    Address of the signer candidate\n   * @param _signature Signature byte array\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    address _signer,\n    bytes calldata _signature\n  ) internal view returns (bool valid) {\n    if (_signature.length == 0) {\n      revert EmptySignature();\n    }\n\n    uint256 signatureType = uint8(_signature[_signature.length - 1]);\n    if (signatureType == SIG_TYPE_EIP712 || signatureType == SIG_TYPE_ETH_SIGN) {\n      // Recover signer and compare with provided\n      valid = recoverSigner(_hash, _signature) == _signer;\n\n    } else if (signatureType == SIG_TYPE_WALLET_BYTES32) {\n      // Remove signature type before calling ERC1271, restore after call\n      valid = ERC1271_MAGICVALUE_BYTES32 == IERC1271Wallet(_signer).isValidSignature(_hash, _signature[0:_signature.length - 1]);\n\n    } else {\n      // We cannot validate any other signature type.\n      // We revert because we can say nothing about its validity.\n      revert UnsupportedSignatureType(_signature, signatureType, false);\n    }\n  }\n}\n"
			},
			"contracts/utils/LibAddress.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nlibrary LibAddress {\n  /**\n   * @notice Will return true if provided address is a contract\n   * @param account Address to verify if contract or not\n   * @dev This contract will return false if called within the constructor of\n   *      a contract's deployment, as the code is not yet stored on-chain.\n   */\n  function isContract(address account) internal view returns (bool) {\n    uint256 csize;\n    // solhint-disable-next-line no-inline-assembly\n    assembly { csize := extcodesize(account) }\n    return csize != 0;\n  }\n}\n"
			},
			"contracts/modules/commons/Implementation.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n/**\n * @dev Allows modules to access the implementation slot\n */\ncontract Implementation {\n  /**\n   * @notice Updates the Wallet implementation\n   * @param _imp New implementation address\n   * @dev The wallet implementation is stored on the storage slot\n   *   defined by the address of the wallet itself\n   *   WARNING updating this value may break the wallet and users\n   *   must be confident that the new implementation is safe.\n   */\n  function _setImplementation(address _imp) internal {\n    assembly {\n      sstore(address(), _imp)\n    }\n  }\n\n  /**\n   * @notice Returns the Wallet implementation\n   * @return _imp The address of the current Wallet implementation\n   */\n  function _getImplementation() internal view returns (address _imp) {\n    assembly {\n      _imp := sload(address())\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleUpdate.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nabstract contract IModuleUpdate {\n  // Errors\n  error InvalidImplementation(address _implementation);\n\n  /**\n   * @notice Updates the implementation of the base wallet\n   * @param _implementation New main module implementation\n   * @dev WARNING Updating the implementation can brick the wallet\n   */\n  function updateImplementation(address _implementation) external virtual;\n\n  /**\n   * @notice Updates the implementation of the base wallet, used internally.\n   * @param _implementation New main module implementation\n   * @dev WARNING Updating the implementation can brick the wallet\n   */\n  function _updateImplementation(address _implementation) internal virtual;\n}\n"
			},
			"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./SequenceBaseSig.sol\";\n\nimport \"../../interfaces/IModuleAuth.sol\";\n\nimport \"../../ModuleSelfAuth.sol\";\nimport \"../../ModuleStorage.sol\";\n\nimport \"../../../../utils/LibBytesPointer.sol\";\nimport \"../../../../utils/LibOptim.sol\";\n\n/**\n * @title Sequence chained auth recovery submodule\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice Defines Sequence signatures that work by delegating control to new configurations.\n * @dev The delegations can be chained together, the first signature is the one that is used to validate\n *      the message, the last signature must match the current on-chain configuration of the wallet.\n */\nabstract contract SequenceChainedSig is IModuleAuth, ModuleSelfAuth {\n  using LibBytesPointer for bytes;\n\n  bytes32 public constant SET_IMAGE_HASH_TYPE_HASH = keccak256(\"SetImageHash(bytes32 imageHash)\");\n\n  error LowWeightChainedSignature(bytes _signature, uint256 threshold, uint256 _weight);\n  error WrongChainedCheckpointOrder(uint256 _current, uint256 _prev);\n\n  /**\n   * @notice Defined the special token that must be signed to delegate control to a new configuration.\n   * @param _imageHash The hash of the new configuration.\n   * @return bytes32 The message hash to be signed.\n   */\n  function _hashSetImageHashStruct(bytes32 _imageHash) internal pure returns (bytes32) {\n    return LibOptim.fkeccak256(SET_IMAGE_HASH_TYPE_HASH, _imageHash);\n  }\n\n  /**\n   * @notice Returns the threshold, weight, root, and checkpoint of a (chained) signature.\n   * \n   * @dev This method return the `threshold`, `weight` and `imageHash` of the last signature in the chain.\n   *      Intermediate signatures are validated directly in this method. The `subdigest` is the one of the\n   *      first signature in the chain (since that's the one that is used to validate the message).\n   *\n   * @param _digest The digest to recover the signature from.\n   * @param _signature The signature to recover.\n   * @return threshold The threshold of the (last) signature.\n   * @return weight The weight of the (last) signature.\n   * @return imageHash The image hash of the (last) signature.\n   * @return subdigest The subdigest of the (first) signature in the chain.\n   * @return checkpoint The checkpoint of the (last) signature.\n   */\n  function chainedRecover(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) internal view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    bytes32 subdigest,\n    uint256 checkpoint\n  ) {\n    uint256 rindex = 1;\n    uint256 sigSize;\n\n    //\n    // First signature out of the loop\n    //\n\n    // First uint24 is the size of the signature\n    (sigSize, rindex) = _signature.readUint24(rindex);\n    uint256 nrindex = sigSize + rindex;\n\n    (\n      threshold,\n      weight,\n      imageHash,\n      subdigest,\n      checkpoint\n    ) = signatureRecovery(\n      _digest,\n      _signature[rindex:nrindex]\n    );\n\n    if (weight < threshold) {\n      revert LowWeightChainedSignature(_signature[rindex:nrindex], threshold, weight);\n    }\n\n    rindex = nrindex;\n\n    // The following signatures are handled by this loop.\n    // This is done this way because the first signature does not have a\n    // checkpoint to be validated against.\n    while (rindex < _signature.length) {\n      // First uint24 is the size of the signature\n      (sigSize, rindex) = _signature.readUint24(rindex);\n      nrindex = sigSize + rindex;\n\n      uint256 nextCheckpoint;\n\n      (\n        threshold,\n        weight,\n        imageHash,,\n        // Do not change the subdigest;\n        // it should remain that of the first signature.\n        nextCheckpoint\n      ) = signatureRecovery(\n        _hashSetImageHashStruct(imageHash),\n        _signature[rindex:nrindex]\n      );\n\n      // Validate signature\n      if (weight < threshold) {\n        revert LowWeightChainedSignature(_signature[rindex:nrindex], threshold, weight);\n      }\n\n      // Checkpoints must be provided in descending order\n      // since the first signature is the one that is used to validate the message\n      // and the last signature is the one that is used to validate the current configuration\n      if (nextCheckpoint >= checkpoint) {\n        revert WrongChainedCheckpointOrder(nextCheckpoint, checkpoint);\n      }\n\n      checkpoint = nextCheckpoint;\n      rindex = nrindex;\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nlibrary SequenceNoChainIdSig {\n\n  /**\n   * @notice Computes a subdigest for a Sequence signature that works on all chains.\n   * @dev The subdigest is computed by removing the chain ID from the digest (using 0 instead).\n   * @param _digest The digest of the chain of signatures.\n   * @return bytes32 The subdigest with no chain ID.\n   */\n  function subdigest(bytes32 _digest) internal view returns (bytes32) {\n    return keccak256(\n      abi.encodePacked(\n        \"\\x19\\x01\",\n        uint256(0),\n        address(this),\n        _digest\n      )\n    );\n  }\n}\n"
			},
			"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./SequenceBaseSig.sol\";\n\n\nlibrary SequenceDynamicSig {\n\n  /**\n   * @notice Recover a \"dynamically encoded\" Sequence signature.\n   * @dev The Signature is stripped of the first byte, which is the encoding flag.\n   *\n   * @param _subdigest The digest of the signature.\n   * @param _signature The Sequence signature.\n   * @return threshold The threshold weight required to validate the signature.\n   * @return weight The weight of the signature.\n   * @return imageHash The hash of the recovered configuration.\n   * @return checkpoint The checkpoint of the configuration.\n   */\n  function recover(\n    bytes32 _subdigest,\n    bytes calldata _signature\n  ) internal view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    uint256 checkpoint\n  ) {\n    return SequenceBaseSig.recover(_subdigest, _signature[1:]);\n  }\n}\n"
			},
			"contracts/interfaces/IERC1271Wallet.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IERC1271Wallet {\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided data\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided data\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n   *   > This function MAY modify Ethereum's state\n   * @param _data       Arbitrary length data signed on the behalf of address(this)\n   * @param _signature  Signature byte array associated with _data\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes calldata _data,\n    bytes calldata _signature)\n    external\n    view\n    returns (bytes4 magicValue);\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided hash\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided hash\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n   *   > This function MAY modify Ethereum's state\n   * @param _hash       keccak256 hash that was signed\n   * @param _signature  Signature byte array associated with _data\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    bytes calldata _signature)\n    external\n    view\n    returns (bytes4 magicValue);\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Wallet.sol": {
				"Wallet": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052bfa58d46a4be200bab062b01124719353438ddddea437973ed824200e2df4664736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xBF 0xA5 DUP14 CHAINID LOG4 0xBE KECCAK256 SIGNEXTEND 0xAB MOD 0x2B ADD SLT SELFBALANCE NOT CALLDATALOAD CALLVALUE CODESIZE 0xDD 0xDD 0xEA NUMBER PUSH26 0x73ED824200E2DF4664736F6C6343000812003300000000000000 ",
							"sourceMap": "2845:146:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;2845:146:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052bfa58d46a4be200bab062b01124719353438ddddea437973ed824200e2df4664736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xBF 0xA5 DUP14 CHAINID LOG4 0xBE KECCAK256 SIGNEXTEND 0xAB MOD 0x2B ADD SLT SELFBALANCE NOT CALLDATALOAD CALLVALUE CODESIZE 0xDD 0xDD 0xEA NUMBER PUSH26 0x73ED824200E2DF4664736F6C6343000812003300000000000000 ",
							"sourceMap": "2845:146:0:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Minimal upgradeable proxy implementation, delegates all calls to the address defined by the storage slot matching the wallet address. Inspired by EIP-1167 Implementation (https://eips.ethereum.org/EIPS/eip-1167) deployed code: 0x00    0x36         0x36      CALLDATASIZE      cds 0x01    0x3d         0x3d      RETURNDATASIZE    0 cds 0x02    0x3d         0x3d      RETURNDATASIZE    0 0 cds 0x03    0x37         0x37      CALLDATACOPY 0x04    0x3d         0x3d      RETURNDATASIZE    0 0x05    0x3d         0x3d      RETURNDATASIZE    0 0 0x06    0x3d         0x3d      RETURNDATASIZE    0 0 0 0x07    0x36         0x36      CALLDATASIZE      cds 0 0 0 0x08    0x3d         0x3d      RETURNDATASIZE    0 cds 0 0 0 0x09    0x30         0x30      ADDRESS           addr 0 cds 0 0 0 0x0A    0x54         0x54      SLOAD             imp 0 cds 0 0 0 0x0B    0x5a         0x5a      GAS               gas imp 0 cds 0 0 0 0x0C    0xf4         0xf4      DELEGATECALL      suc 0 0x0D    0x3d         0x3d      RETURNDATASIZE    rds suc 0 0x0E    0x82         0x82      DUP3              0 rds suc 0 0x0F    0x80         0x80      DUP1              0 0 rds suc 0 0x10    0x3e         0x3e      RETURNDATACOPY    suc 0 0x11    0x90         0x90      SWAP1             0 suc 0x12    0x3d         0x3d      RETURNDATASIZE    rds 0 suc 0x13    0x91         0x91      SWAP2             suc 0 rds 0x14    0x60 0x18    0x6018    PUSH1             0x18 suc 0 rds /-- 0x16    0x57         0x57      JUMPI             0 rds |   0x17    0xfd         0xfd      REVERT \\\\-> 0x18    0x5b         0x5b      JUMPDEST          0 rds 0x19    0xf3         0xf3      RETURN flat deployed code: 0x363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3 deploy function: 0x00    0x60 0x3a    0x603a    PUSH1             0x3a 0x02    0x60 0x0e    0x600e    PUSH1             0x0e 0x3a 0x04    0x3d         0x3d      RETURNDATASIZE    0 0x0e 0x3a 0x05    0x39         0x39      CODECOPY 0x06    0x60 0x1a    0x601a    PUSH1             0x1a 0x08    0x80         0x80      DUP1              0x1a 0x1a 0x09    0x51         0x51      MLOAD             imp 0x1a 0x0A    0x30         0x30      ADDRESS           addr imp 0x1a 0x0B    0x55         0x55      SSTORE            0x1a 0x0C    0x3d         0x3d      RETURNDATASIZE    0 0x1a 0x0D    0xf3         0xf3      RETURN [...deployed code] flat deploy function: 0x603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Wallet.sol\":\"Wallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/Wallet.sol\":{\"keccak256\":\"0xb7bfad3219a2517d12ef08c0f992cca708fa765f1e2115e05617ca89f170ea92\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a566c143b3230da770140a82d44ae50cfb21fd64ead9a6f19193bbbed3698fd4\",\"dweb:/ipfs/QmSsyNk5WLBFTfoebQWhLLzzjzEcbfcWRJAsJznEnemP5B\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Minimal upgradeable proxy implementation, delegates all calls to the address defined by the storage slot matching the wallet address. Inspired by EIP-1167 Implementation (https://eips.ethereum.org/EIPS/eip-1167) deployed code: 0x00    0x36         0x36      CALLDATASIZE      cds 0x01    0x3d         0x3d      RETURNDATASIZE    0 cds 0x02    0x3d         0x3d      RETURNDATASIZE    0 0 cds 0x03    0x37         0x37      CALLDATACOPY 0x04    0x3d         0x3d      RETURNDATASIZE    0 0x05    0x3d         0x3d      RETURNDATASIZE    0 0 0x06    0x3d         0x3d      RETURNDATASIZE    0 0 0 0x07    0x36         0x36      CALLDATASIZE      cds 0 0 0 0x08    0x3d         0x3d      RETURNDATASIZE    0 cds 0 0 0 0x09    0x30         0x30      ADDRESS           addr 0 cds 0 0 0 0x0A    0x54         0x54      SLOAD             imp 0 cds 0 0 0 0x0B    0x5a         0x5a      GAS               gas imp 0 cds 0 0 0 0x0C    0xf4         0xf4      DELEGATECALL      suc 0 0x0D    0x3d         0x3d      RETURNDATASIZE    rds suc 0 0x0E    0x82         0x82      DUP3              0 rds suc 0 0x0F    0x80         0x80      DUP1              0 0 rds suc 0 0x10    0x3e         0x3e      RETURNDATACOPY    suc 0 0x11    0x90         0x90      SWAP1             0 suc 0x12    0x3d         0x3d      RETURNDATASIZE    rds 0 suc 0x13    0x91         0x91      SWAP2             suc 0 rds 0x14    0x60 0x18    0x6018    PUSH1             0x18 suc 0 rds /-- 0x16    0x57         0x57      JUMPI             0 rds |   0x17    0xfd         0xfd      REVERT \\-> 0x18    0x5b         0x5b      JUMPDEST          0 rds 0x19    0xf3         0xf3      RETURN flat deployed code: 0x363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3 deploy function: 0x00    0x60 0x3a    0x603a    PUSH1             0x3a 0x02    0x60 0x0e    0x600e    PUSH1             0x0e 0x3a 0x04    0x3d         0x3d      RETURNDATASIZE    0 0x0e 0x3a 0x05    0x39         0x39      CODECOPY 0x06    0x60 0x1a    0x601a    PUSH1             0x1a 0x08    0x80         0x80      DUP1              0x1a 0x1a 0x09    0x51         0x51      MLOAD             imp 0x1a 0x0A    0x30         0x30      ADDRESS           addr imp 0x1a 0x0B    0x55         0x55      SSTORE            0x1a 0x0C    0x3d         0x3d      RETURNDATASIZE    0 0x1a 0x0D    0xf3         0xf3      RETURN [...deployed code] flat deploy function: 0x603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3",
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC1271Wallet.sol": {
				"IERC1271Wallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")   > This function MAY modify Ethereum's state",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signature": "Signature byte array associated with _data"
								},
								"returns": {
									"magicValue": "Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")   > This function MAY modify Ethereum's state",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signature": "Signature byte array associated with _data"
								},
								"returns": {
									"magicValue": "Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\")   > This function MAY modify Ethereum's state\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signature\":\"Signature byte array associated with _data\"},\"returns\":{\"magicValue\":\"Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\")   > This function MAY modify Ethereum's state\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signature\":\"Signature byte array associated with _data\"},\"returns\":{\"magicValue\":\"Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC1271Wallet.sol\":\"IERC1271Wallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/receivers/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/receivers/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/receivers/IERC1155Receiver.sol\":{\"keccak256\":\"0x934ce83f4abb6e487c5092af8ff0b6ef5ca697b893fa4d24b3d63b994441bf62\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2fef087d5a188a3b96a3bf0ddae611a802dfd6b72dbf92895e9d3512c77b70ff\",\"dweb:/ipfs/QmTsvU6DDK7dJAddyVCMe81oa2bCgmcz4dibbnwGQdmKDt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/receivers/IERC223Receiver.sol": {
				"IERC223Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "tokenFallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/receivers/IERC223Receiver.sol\":\"IERC223Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/receivers/IERC223Receiver.sol\":{\"keccak256\":\"0x27f58bb8b5a9b976b39a92c9c989a7d76476a121ca60827ff01d4c69c3839f32\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://83af2e3d4e7f42aab73a7ed8f02b9830817f6f621ac17dc9d09d3cccbf2b769f\",\"dweb:/ipfs/QmaBecBuHUtskh5hoKf76wu5wf8aW2rX7oxCtpbLid8vRV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/receivers/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/receivers/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/receivers/IERC721Receiver.sol\":{\"keccak256\":\"0x20623593e9b812c4ff01da0d9abf3540986f3ce8c4a19137ed42d8d9ee7ec5d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da617c8301ba39ac038d62fd7ae25a8b5e1a076924ef843e55c912ac5677b9f4\",\"dweb:/ipfs/Qmf71tpo1CkuZL5pHXD4TtAxiCeHiDJ3hK5hM7WDEKUzds\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/MainModule.sol": {
				"MainModule": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_mainModuleUpgradable",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_provided",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								}
							],
							"name": "BadNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "CreateFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "HookAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "HookDoesNotExist",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_requested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_available",
									"type": "uint256"
								}
							],
							"name": "NotEnoughGas",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OnlyDelegatecall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_contract",
									"type": "address"
								}
							],
							"name": "CreatedContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "DefinedHook",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "IPFSRootUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "ImplementationUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newNonce",
									"type": "uint256"
								}
							],
							"name": "NonceChange",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_expiration",
									"type": "uint256"
								}
							],
							"name": "SetExtraImageHash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "TxExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_reason",
									"type": "bytes"
								}
							],
							"name": "TxFailed",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "FACTORY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INIT_CODE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADEABLE_IMPLEMENTATION",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "addHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "_imageHashes",
									"type": "bytes32[]"
								}
							],
							"name": "clearExtraImageHashes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "createContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "extraImageHash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ipfsRoot",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ipfsRootBytes32",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "readHook",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								}
							],
							"name": "readNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "removeHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								}
							],
							"name": "selfExecute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_expiration",
									"type": "uint256"
								}
							],
							"name": "setExtraImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "updateIPFSRoot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_ipfsRoot",
									"type": "bytes32"
								}
							],
							"name": "updateImageHashAndIPFS",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "updateImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "If using a new main module, developers must ensure that all inherited      contracts by the main module don't conflict and are accounted for to be      supported by the supportsInterface method.",
						"kind": "dev",
						"methods": {
							"addHook(bytes4,address)": {
								"details": "Can't overwrite hooks that are part of the main module (those defined below)",
								"params": {
									"_implementation": "Hook implementation contract",
									"_signature": "Signature function linked to the hook"
								}
							},
							"createContract(bytes)": {
								"params": {
									"_code": "Creation code of the contract"
								},
								"returns": {
									"addr": "The address of the created contract"
								}
							},
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"details": "Relayers must ensure that the gasLimit specified for each transaction      is acceptable to them. A user could specify large enough that it could      consume all the gas available.",
								"params": {
									"_nonce": "Signature nonce (may contain an encoded space)",
									"_signature": "Encoded signature",
									"_txs": "Transactions to process"
								}
							},
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
								}
							},
							"nonce()": {
								"details": "The default nonce space is 0x00",
								"returns": {
									"_0": "The next nonce"
								}
							},
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`"
								}
							},
							"onERC721Received(address,address,uint256,bytes)": {
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`"
								}
							},
							"readHook(bytes4)": {
								"params": {
									"_signature": "Signature function"
								},
								"returns": {
									"_0": "The address of the implementation hook, address(0) if none"
								}
							},
							"readNonce(uint256)": {
								"params": {
									"_space": "Nonce space, each space keeps an independent nonce count"
								},
								"returns": {
									"_0": "The next nonce"
								}
							},
							"removeHook(bytes4)": {
								"details": "Can't remove hooks that are part of the main module (those defined below)      without upgrading the wallet",
								"params": {
									"_signature": "Signature function linked to the hook"
								}
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"params": {
									"_txs": "Transactions to execute"
								}
							},
							"signatureRecovery(bytes32,bytes)": {
								"details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
								"params": {
									"_digest": "Digest of the signed data.",
									"_signature": "A Sequence signature."
								},
								"returns": {
									"checkpoint": "A nonce that is incremented every time a new configuration is set.",
									"imageHash": "The imageHash of the configuration that signed the message.",
									"subdigest": "A modified version of the original digest, unique for each wallet/network.",
									"threshold": "The required number of signatures needed to consider the signature valid.",
									"weight": "The actual number of signatures collected in the signature."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							},
							"updateImageHashAndIPFS(bytes32,bytes32)": {
								"details": "These two operations are often performed together, so this function      allows to save some gas by performing them in a single step.",
								"params": {
									"_imageHash": "The new image hash to be set.",
									"_ipfsRoot": "The new IPFS root to be set."
								}
							},
							"updateImplementation(address)": {
								"details": "WARNING Updating the implementation can brick the wallet",
								"params": {
									"_implementation": "New main module implementation"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"@_125": {
									"entryPoint": null,
									"id": 125,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_1808": {
									"entryPoint": null,
									"id": 1808,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_629": {
									"entryPoint": null,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 165,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 250,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:952:37",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:37",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:37"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:37"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:37"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:37"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:37",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:37",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:37"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:37"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:37",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:37"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:37"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:37"
															},
															"nodeType": "YulIf",
															"src": "115:70:37"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:37",
														"type": ""
													}
												],
												"src": "14:177:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "294:195:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "340:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "349:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "352:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "336:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "307:32:37"
															},
															"nodeType": "YulIf",
															"src": "304:52:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "365:50:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "375:40:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "424:59:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "479:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "434:49:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "252:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "263:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "275:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "283:6:37",
														"type": ""
													}
												],
												"src": "196:293:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "659:291:37",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "669:27:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "689:6:37"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "683:5:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:13:37"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "673:6:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "705:10:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "714:1:37",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "709:1:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "776:77:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "801:3:37"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "806:1:37"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "797:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "797:11:37"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "824:6:37"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "832:1:37"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "820:3:37"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "820:14:37"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "836:4:37",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "816:3:37"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "816:25:37"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "810:5:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "810:32:37"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "790:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "790:53:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "790:53:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "735:1:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "738:6:37"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "732:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "732:13:37"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "746:21:37",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "748:17:37",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "757:1:37"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "760:4:37",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "753:3:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "753:12:37"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "748:1:37"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "728:3:37",
																"statements": []
															},
															"src": "724:129:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "862:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "881:6:37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "872:16:37"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "866:2:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "904:2:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "908:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "897:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "897:18:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "897:18:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "924:20:37",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "935:2:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "939:4:37",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "931:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:13:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "924:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "627:3:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "632:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "640:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "651:3:37",
														"type": ""
													}
												],
												"src": "494:456:37"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, value1)\n        end := add(_1, 0x20)\n    }\n}",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6101006040523480156200001257600080fd5b5060405162003a1838038062003a188339810160408190526200003591620000c2565b30608052604080516060810190915260288082528391839160009190620039f060208301396040516200006e91903090602001620000fa565b60408051601f19818403018152919052805160209091012060a052506001600160a01b0391821660c0521660e052506200012e9050565b80516001600160a01b0381168114620000bd57600080fd5b919050565b60008060408385031215620000d657600080fd5b620000e183620000a5565b9150620000f160208401620000a5565b90509250929050565b6000835160005b818110156200011d576020818701810151858301520162000101565b509190910191825250602001919050565b60805160a05160c05160e0516138736200017d600039600081816105b40152611496015260008181610484015261251b015260008181610422015261254c01526000610c5001526138736000f3fe6080604052600436106101bb5760003560e01c80637a9a1628116100ec578063a4ab5f9f1161008a578063bc197c8111610064578063bc197c81146106a0578063c71f1f96146106e8578063d0748f71146106fd578063f23a6e611461071d576101c2565b8063a4ab5f9f1461064b578063affed0e01461066b578063b93ea7ad14610680576101c2565b80638c3f5563116100c65780638c3f5563146105d65780638efa6441146105f657806390042baf14610618578063a38cef191461062b576101c2565b80637a9a16281461053a578063853c50681461055a578063888eeec6146105a2576101c2565b8063257671f5116101595780634598154f116101335780634598154f146104a65780634fcf3eca146104c657806357c56d6b146104e657806361c2926c1461051a576101c2565b8063257671f51461041057806329561426146104525780632dd3100014610472576101c2565b8063150b7a0211610195578063150b7a02146103155780631626ba7e1461038b5780631a9b2337146103ab57806320c13b0b146103f0576101c2565b806301ffc9a7146102a0578063025b22bc146102d5578063038dbaac146102f5576101c2565b366101c257005b6004361061029e5760006101f96000357fffffffff0000000000000000000000000000000000000000000000000000000016610763565b905073ffffffffffffffffffffffffffffffffffffffff81161561029c576000808273ffffffffffffffffffffffffffffffffffffffff16600036604051610242929190612cd1565b600060405180830381855af49150503d806000811461027d576040519150601f19603f3d011682016040523d82523d6000602084013e610282565b606091505b50915091508161029457805160208201fd5b805160208201f35b505b005b3480156102ac57600080fd5b506102c06102bb366004612d0f565b6107b7565b60405190151581526020015b60405180910390f35b3480156102e157600080fd5b5061029e6102f0366004612d55565b6107c2565b34801561030157600080fd5b5061029e610310366004612dbc565b610814565b34801561032157600080fd5b5061035a610330366004612e40565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016102cc565b34801561039757600080fd5b5061035a6103a6366004612eaf565b61091f565b3480156103b757600080fd5b506103cb6103c6366004612d0f565b61096c565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102cc565b3480156103fc57600080fd5b5061035a61040b366004612efb565b610977565b34801561041c57600080fd5b506104447f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102cc565b34801561045e57600080fd5b5061029e61046d366004612f67565b6109dc565b34801561047e57600080fd5b506103cb7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104b257600080fd5b5061029e6104c1366004612f80565b610a26565b3480156104d257600080fd5b5061029e6104e1366004612d0f565b610aeb565b3480156104f257600080fd5b506104447f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d181565b34801561052657600080fd5b5061029e610535366004612dbc565b610bb3565b34801561054657600080fd5b5061029e610555366004612fa2565b610c39565b34801561056657600080fd5b5061057a610575366004612eaf565b610d3e565b604080519586526020860194909452928401919091526060830152608082015260a0016102cc565b3480156105ae57600080fd5b506103cb7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105e257600080fd5b506104446105f1366004612f67565b610f06565b34801561060257600080fd5b5061060b610f32565b6040516102cc9190613079565b6103cb6106263660046130bb565b610fb3565b34801561063757600080fd5b5061029e610646366004612f67565b61109d565b34801561065757600080fd5b50610444610666366004612f67565b6110e7565b34801561067757600080fd5b506104446110f2565b34801561068c57600080fd5b5061029e61069b36600461318a565b611103565b3480156106ac57600080fd5b5061035a6106bb3660046131bf565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b3480156106f457600080fd5b506104446111ce565b34801561070957600080fd5b5061029e610718366004612f80565b6111f8565b34801561072957600080fd5b5061035a61073836600461327a565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60006107b17fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1207fffffffff00000000000000000000000000000000000000000000000000000000841661124b565b92915050565b60006107b1826112a9565b333014610808576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b61081181611305565b50565b333014610855576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b8060005b81811015610919576000848483818110610875576108756132f2565b9050602002013590506108d5816000604080517f849e7bdc245db17e50b9f43086f1914d70eb4dab6dd89af4d541d53353ad97de602080830191909152818301859052825180830384018152606090920190925280519101208190555050565b807f804f6171d6008d9e16ee3aa0561fec328397f4ba2827a6605db388cfdefa3b0c600060405161090891815260200190565b60405180910390a250600101610859565b50505050565b60008061092d8585856113c0565b509050801561095f57507f1626ba7e000000000000000000000000000000000000000000000000000000009050610965565b50600090505b9392505050565b60006107b182610763565b60008061099c868660405161098d929190612cd1565b604051809103902085856113c0565b50905080156109ce57507f20c13b0b0000000000000000000000000000000000000000000000000000000090506109d4565b50600090505b949350505050565b333014610a1d576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b610811816113fe565b333014610a67576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b604080517f849e7bdc245db17e50b9f43086f1914d70eb4dab6dd89af4d541d53353ad97de602080830191909152818301859052825180830384018152606083019384905280519101208390559082905282907f804f6171d6008d9e16ee3aa0561fec328397f4ba2827a6605db388cfdefa3b0c9060800160405180910390a25050565b333014610b2c576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b6000610b3782610763565b73ffffffffffffffffffffffffffffffffffffffff1603610ba8576040517f1c3812cc0000000000000000000000000000000000000000000000000000000081527fffffffff00000000000000000000000000000000000000000000000000000000821660048201526024016107ff565b6108118160006114ba565b333014610bf4576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b6000610c278383604051602001610c0c9291906134c9565b6040516020818303038152906040528051906020012061157a565b9050610c348184846115ff565b505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610ca8576040517f0a57d61d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cb183611787565b600080610ce9858888604051602001610ccc93929190613511565b6040516020818303038152906040528051906020012085856113c0565b9150915081610d2a578084846040517f8f4a234f0000000000000000000000000000000000000000000000000000000081526004016107ff93929190613534565b610d358188886115ff565b50505050505050565b60008060008060008087876000818110610d5a57610d5a6132f2565b909101357fff00000000000000000000000000000000000000000000000000000000000000169150819050610db057610d928961157a565b9250610d9f838989611884565b92985090965094509150610efb9050565b7fff0000000000000000000000000000000000000000000000000000000000000081811601610def57610de28961157a565b9250610d9f8389896118d5565b7ffe000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821601610e4157610de289611901565b7ffd000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821601610ea557610e9589898961196e565b9550955095509550955050610efb565b6040517f6085cd820000000000000000000000000000000000000000000000000000000081527fff00000000000000000000000000000000000000000000000000000000000000821660048201526024016107ff565b939792965093509350565b60006107b17f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e8361124b565b6060610f8f610f8a610f426111ce565b6040517f017012200000000000000000000000000000000000000000000000000000000060208201526024810191909152604401604051602081830303815290604052611aeb565b611d04565b604051602001610f9f919061354e565b604051602081830303815290604052905090565b6000333014610ff6576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b81516020830134f0905073ffffffffffffffffffffffffffffffffffffffff811661104f57816040517f0d2571910000000000000000000000000000000000000000000000000000000081526004016107ff9190613079565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c9060200160405180910390a1919050565b3330146110de576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b61081181611d2d565b60006107b182611d86565b60006110fe6000610f06565b905090565b333014611144576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b600061114f83610763565b73ffffffffffffffffffffffffffffffffffffffff16146111c0576040517f5b4d6d6a0000000000000000000000000000000000000000000000000000000081527fffffffff00000000000000000000000000000000000000000000000000000000831660048201526024016107ff565b6111ca82826114ba565b5050565b60006110fe7f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d0335490565b333014611239576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b611242826113fe565b6111ca81611d2d565b600080838360405160200161126a929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b60007f2e74b92a000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016112fc57506001919050565b6107b182611db2565b73ffffffffffffffffffffffffffffffffffffffff81163b61136b576040517f0c76093700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024016107ff565b611373813055565b60405173ffffffffffffffffffffffffffffffffffffffff821681527f310ba5f1d2ed074b51e2eccd052a47ae9ab7c6b800d1fca3db3999d6a592ca03906020015b60405180910390a150565b60008060008060006113d3888888610d3e565b509650919450925090508282108015906113f157506113f181611e0e565b9450505050935093915050565b80611435576040517f4294d12700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61145e7fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8829055565b6040518181527f307ed6bd941ee9fc80f369c94af5fa11e25bab5102a6140191756c5474a30bfa9060200160405180910390a16108117f0000000000000000000000000000000000000000000000000000000000000000611305565b604080517fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1206020808301919091527fffffffff000000000000000000000000000000000000000000000000000000008516828401819052835180840385018152606084018086528151919093012073ffffffffffffffffffffffffffffffffffffffff8616908190559152608082015290517f0d7fc113eaf016db4681a1ba86d083ce3e0961f321062a75ac2b0aeb33deeed19181900360a00190a15050565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201524660228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166042820152605681018290526000906076015b604051602081830303815290604052805190602001209050919050565b8060005b81811015611780573684848381811061161e5761161e6132f2565b90506020028101906116309190613593565b90506040810135805a10156116855782815a6040517f2bb3e3ba0000000000000000000000000000000000000000000000000000000081526004810193909352602483019190915260448201526064016107ff565b600061169460208401846135d1565b156116d3576116cc6116ac6080850160608601612d55565b83156116b857836116ba565b5a5b6116c760a08701876135ec565b611e19565b905061170e565b61170b6116e66080850160608601612d55565b608085013584156116f757846116f9565b5a5b61170660a08801886135ec565b611e34565b90505b801561175357877f5c4eeb02dabf8976016ab414d617f9a162936dcace3cdef8c69ef6e262ad5ae78560405161174691815260200190565b60405180910390a2611775565b61177561176660408501602086016135d1565b8986611770611e51565b611e70565b505050600101611603565b5050505050565b606081901c6bffffffffffffffffffffffff821660006117a683610f06565b90508181146117f2576040517f9b6514f40000000000000000000000000000000000000000000000000000000081526004810184905260248101839052604481018290526064016107ff565b604080517f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e60208083019190915281830186905282518083038401815260609092019092528051910120600183019081905560408051858152602081018390527f1f180c27086c7a39ea2a7b25239d1ab92348f07ca7bb59d1438fcf527568f881910160405180910390a15050505050565b600080808061189f8761189a876006818b613651565b611ebe565b6000908152873560f01c6020818152604080842084526002909a013560e01c908190529890912090999198509695509350505050565b60008080806118f0876118eb876001818b613651565b611884565b935093509350935093509350935093565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526000602282018190527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b16604283015260568201839052906076016115e2565b6000808080806004600188013560e81c8261198983836136aa565b905061199b8b61057583868d8f613651565b939b50919950975095509350878710156119f3576119bb81848b8d613651565b89896040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016107ff94939291906136bd565b8092505b88831015611add5760038301928a013560e81c9150611a1683836136aa565b90506000611a38611a2688612354565b8c8c8790869261057593929190613651565b939c50919a5098509091505088881015611a9057611a5882858c8e613651565b8a8a6040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016107ff94939291906136bd565b848110611ad3576040517f37daf62b00000000000000000000000000000000000000000000000000000000815260048101829052602481018690526044016107ff565b93509150816119f7565b505050939792965093509350565b8051606090600381901b60006005600483010467ffffffffffffffff811115611b1657611b1661308c565b6040519080825280601f01601f191660200182016040528015611b40576020820181803683370190505b5090506000806000805b86811015611c5457888181518110611b6457611b646132f2565b01602001516008948501949390931b60f89390931c92909217915b60058410611c4c576040805180820190915260208082527f6162636465666768696a6b6c6d6e6f707172737475767778797a323334353637818301527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb90950194601f85871c16908110611bf557611bf56132f2565b602001015160f81c60f81b858381518110611c1257611c126132f2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600190910190611b7f565b600101611b4a565b508215611cf8576040518060400160405280602081526020017f6162636465666768696a6b6c6d6e6f707172737475767778797a3233343536378152508360050383901b601f1681518110611cab57611cab6132f2565b602001015160f81c60f81b848281518110611cc857611cc86132f2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b50919695505050505050565b606081604051602001611d1791906136e4565b6040516020818303038152906040529050919050565b611d567f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d033829055565b6040518181527f20d3ef1b5738a9f6d7beae515432206e7a8e2740ca6dcf46a952190ad01bcb51906020016113b5565b60006107b17f849e7bdc245db17e50b9f43086f1914d70eb4dab6dd89af4d541d53353ad97de8361124b565b60007f6ffbd451000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601611e0557506001919050565b6107b182612388565b60006107b1826124c9565b60006040518284823760008084838989f49695505050505050565b6000604051828482376000808483898b8af1979650505050505050565b60603d604051915060208201818101604052818352816000823e505090565b8315611e7e57805160208201fd5b827fab46c69f7f32e1bf09b0725853da82a211e5402a0600296ab499a2fb5ea3b4198383604051611eb0929190613729565b60405180910390a250505050565b60008060005b8381101561234b57600181019085013560f81c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101611f6557601582019186013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff81169074ff000000000000000000000000000000000000000016811785611f4b5780611f5a565b60008681526020829052604090205b955050505050611ec4565b80611ffb5760018201918681013560f81c906043016000611f918a611f8c84888c8e613651565b6125f7565b60ff841697909701969194508491905060a083901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff82161786611fe05780611fef565b60008781526020829052604090205b96505050505050611ec4565b60028103612123576000808784013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff16601586019550909250905060008885013560e81c600386018162ffffff1691508096508192505050600081860190506120748b848c8c8a90869261206f93929190613651565b6128ba565b6120bc578a8361208683898d8f613651565b6040517f9a9462320000000000000000000000000000000000000000000000000000000081526004016107ff9493929190613742565b60ff8416979097019694508460a084901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617876121075780612116565b60008881526020829052604090205b9750505050505050611ec4565b600381036121565760208201918601358361213e578061214d565b60008481526020829052604090205b93505050611ec4565b600481036121a2576003808301928781013560e81c91908201016000806121838b61189a85898d8f613651565b60009889526020526040909720969097019650909350611ec492505050565b600681036122aa5760008287013560f81c60018401935060ff16905060008784013560f01c60028501945061ffff16905060008885013560e81c600386018162ffffff1691508096508192505050600081860190506000806122108d8d8d8b90879261189a93929190613651565b9398508893909250905084821061222657988501985b604080517f53657175656e6365206e657374656420636f6e6669673a0a0000000000000000602080830191909152603882018490526058820188905260788083018a905283518084039091018152609890920190925280519101208961228c578061229b565b60008a81526020829052604090205b99505050505050505050611ec4565b600581036123165760208201918601358781036122e5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94505b60006122f082612aa1565b9050846122fd578061230c565b60008581526020829052604090205b9450505050611ec4565b6040517fb2505f7c000000000000000000000000000000000000000000000000000000008152600481018290526024016107ff565b50935093915050565b7f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d160009081526020829052604081206107b1565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fec6aba5000000000000000000000000000000000000000000000000000000000148061241b57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061246757507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b806124b357507fffffffff0000000000000000000000000000000000000000000000000000000082167fc0ee0b8a00000000000000000000000000000000000000000000000000000000145b156124c057506001919050565b6107b182612adc565b60006125cb826040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060601b166021820152603581018290527f000000000000000000000000000000000000000000000000000000000000000060558201526000903090607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012073ffffffffffffffffffffffffffffffffffffffff161492915050565b156125d857506001919050565b60006125e383611d86565b905080158015906109655750421092915050565b6000604282146126375782826040517f2ee17a3d0000000000000000000000000000000000000000000000000000000081526004016107ff929190613782565b6000612650612647600185613796565b85013560f81c90565b60ff169050604084013560f81c843560208601357f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08111156126c4578686826040517fad4aac760000000000000000000000000000000000000000000000000000000081526004016107ff939291906137a9565b8260ff16601b141580156126dc57508260ff16601c14155b15612719578686846040517fe578897e0000000000000000000000000000000000000000000000000000000081526004016107ff939291906137cd565b60018403612786576040805160008152602081018083528a905260ff851691810191909152606081018390526080810182905260019060a0015b6020604051602081039080840390855afa158015612775573d6000803e3d6000fd5b50505060206040510351945061285e565b60028403612823576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101899052600190605c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff861690820152606081018490526080810183905260a001612753565b86868560016040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016107ff94939291906137f4565b73ffffffffffffffffffffffffffffffffffffffff85166128af5786866040517f6c1719d20000000000000000000000000000000000000000000000000000000081526004016107ff929190613782565b505050509392505050565b60008181036128f5576040517fac241e1100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008383612904600182613796565b818110612913576129136132f2565b919091013560f81c915050600181148061292d5750600281145b15612972578473ffffffffffffffffffffffffffffffffffffffff166129548786866125f7565b73ffffffffffffffffffffffffffffffffffffffff16149150612a98565b60038103612a5d5773ffffffffffffffffffffffffffffffffffffffff8516631626ba7e87866000876129a6600182613796565b926129b393929190613651565b6040518463ffffffff1660e01b81526004016129d193929190613534565b602060405180830381865afa1580156129ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a129190613820565b7fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e00000000000000000000000000000000000000000000000000000000149150612a98565b83838260006040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016107ff94939291906137f4565b50949350505050565b6040517f53657175656e636520737461746963206469676573743a0a00000000000000006020820152603881018290526000906058016115e2565b60007fe4a77bbc000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601612b2f57506001919050565b6107b18260007f1cbec625000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601612b8657506001919050565b6107b18260006107b18260007ffda4dd44000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601612be357506001919050565b6107b18260007fffffffff0000000000000000000000000000000000000000000000000000000082167fac6a444e000000000000000000000000000000000000000000000000000000001480612c7a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f36e7817500000000000000000000000000000000000000000000000000000000145b15612c8757506001919050565b7f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316146107b1565b8183823760009101908152919050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461081157600080fd5b600060208284031215612d2157600080fd5b813561096581612ce1565b803573ffffffffffffffffffffffffffffffffffffffff81168114612d5057600080fd5b919050565b600060208284031215612d6757600080fd5b61096582612d2c565b60008083601f840112612d8257600080fd5b50813567ffffffffffffffff811115612d9a57600080fd5b6020830191508360208260051b8501011115612db557600080fd5b9250929050565b60008060208385031215612dcf57600080fd5b823567ffffffffffffffff811115612de657600080fd5b612df285828601612d70565b90969095509350505050565b60008083601f840112612e1057600080fd5b50813567ffffffffffffffff811115612e2857600080fd5b602083019150836020828501011115612db557600080fd5b600080600080600060808688031215612e5857600080fd5b612e6186612d2c565b9450612e6f60208701612d2c565b935060408601359250606086013567ffffffffffffffff811115612e9257600080fd5b612e9e88828901612dfe565b969995985093965092949392505050565b600080600060408486031215612ec457600080fd5b83359250602084013567ffffffffffffffff811115612ee257600080fd5b612eee86828701612dfe565b9497909650939450505050565b60008060008060408587031215612f1157600080fd5b843567ffffffffffffffff80821115612f2957600080fd5b612f3588838901612dfe565b90965094506020870135915080821115612f4e57600080fd5b50612f5b87828801612dfe565b95989497509550505050565b600060208284031215612f7957600080fd5b5035919050565b60008060408385031215612f9357600080fd5b50508035926020909101359150565b600080600080600060608688031215612fba57600080fd5b853567ffffffffffffffff80821115612fd257600080fd5b612fde89838a01612d70565b9097509550602088013594506040880135915080821115612ffe57600080fd5b50612e9e88828901612dfe565b60005b8381101561302657818101518382015260200161300e565b50506000910152565b6000815180845261304781602086016020860161300b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610965602083018461302f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156130cd57600080fd5b813567ffffffffffffffff808211156130e557600080fd5b818401915084601f8301126130f957600080fd5b81358181111561310b5761310b61308c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156131515761315161308c565b8160405282815287602084870101111561316a57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806040838503121561319d57600080fd5b82356131a881612ce1565b91506131b660208401612d2c565b90509250929050565b60008060008060008060008060a0898b0312156131db57600080fd5b6131e489612d2c565b97506131f260208a01612d2c565b9650604089013567ffffffffffffffff8082111561320f57600080fd5b61321b8c838d01612d70565b909850965060608b013591508082111561323457600080fd5b6132408c838d01612d70565b909650945060808b013591508082111561325957600080fd5b506132668b828c01612dfe565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561329357600080fd5b61329c87612d2c565b95506132aa60208801612d2c565b94506040870135935060608701359250608087013567ffffffffffffffff8111156132d457600080fd5b6132e089828a01612dfe565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80358015158114612d5057600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196508560051b810191508460005b878110156134bc57828403895281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418836030181126133d357600080fd5b870160c06133e082613321565b151586526133ef878301613321565b15158688015260408281013590870152606073ffffffffffffffffffffffffffffffffffffffff613421828501612d2c565b16908701526080828101359087015260a080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe101811261346757600080fd5b90920187810192903567ffffffffffffffff81111561348557600080fd5b80360384131561349457600080fd5b82828901526134a68389018286613331565b9c89019c97505050928601925050600101613394565b5091979650505050505050565b60408152600560408201527f73656c663a00000000000000000000000000000000000000000000000000000060608201526080602082015260006109d460808301848661337a565b83815260406020820152600061352b60408301848661337a565b95945050505050565b83815260406020820152600061352b604083018486613331565b7f697066733a2f2f0000000000000000000000000000000000000000000000000081526000825161358681600785016020870161300b565b9190910160070192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418336030181126135c757600080fd5b9190910192915050565b6000602082840312156135e357600080fd5b61096582613321565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261362157600080fd5b83018035915067ffffffffffffffff82111561363c57600080fd5b602001915036819003821315612db557600080fd5b6000808585111561366157600080fd5b8386111561366e57600080fd5b5050820193919092039150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156107b1576107b161367b565b6060815260006136d1606083018688613331565b6020830194909452506040015292915050565b7f620000000000000000000000000000000000000000000000000000000000000081526000825161371c81600185016020870161300b565b9190910160010192915050565b8281526040602082015260006109d4604083018461302f565b84815273ffffffffffffffffffffffffffffffffffffffff84166020820152606060408201526000613778606083018486613331565b9695505050505050565b6020815260006109d4602083018486613331565b818103818111156107b1576107b161367b565b6040815260006137bd604083018587613331565b9050826020830152949350505050565b6040815260006137e1604083018587613331565b905060ff83166020830152949350505050565b606081526000613808606083018688613331565b60208301949094525090151560409091015292915050565b60006020828403121561383257600080fd5b815161096581612ce156fea26469706673582212203c8d5199f30c123dff9711c13e6d1af00442c59755d475d5781636aabab62db364736f6c63430008120033603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3A18 CODESIZE SUB DUP1 PUSH3 0x3A18 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0xC2 JUMP JUMPDEST ADDRESS PUSH1 0x80 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x28 DUP1 DUP3 MSTORE DUP4 SWAP2 DUP4 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH3 0x39F0 PUSH1 0x20 DUP4 ADD CODECOPY PUSH1 0x40 MLOAD PUSH3 0x6E SWAP2 SWAP1 ADDRESS SWAP1 PUSH1 0x20 ADD PUSH3 0xFA JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0xA0 MSTORE POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0xC0 MSTORE AND PUSH1 0xE0 MSTORE POP PUSH3 0x12E SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0xBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0xD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xE1 DUP4 PUSH3 0xA5 JUMP JUMPDEST SWAP2 POP PUSH3 0xF1 PUSH1 0x20 DUP5 ADD PUSH3 0xA5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x11D JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH3 0x101 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x3873 PUSH3 0x17D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x5B4 ADD MSTORE PUSH2 0x1496 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x484 ADD MSTORE PUSH2 0x251B ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x422 ADD MSTORE PUSH2 0x254C ADD MSTORE PUSH1 0x0 PUSH2 0xC50 ADD MSTORE PUSH2 0x3873 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A9A1628 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xA4AB5F9F GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xC71F1F96 EQ PUSH2 0x6E8 JUMPI DUP1 PUSH4 0xD0748F71 EQ PUSH2 0x6FD JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x71D JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xA4AB5F9F EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x66B JUMPI DUP1 PUSH4 0xB93EA7AD EQ PUSH2 0x680 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x8C3F5563 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0x8EFA6441 EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xA38CEF19 EQ PUSH2 0x62B JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x7A9A1628 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0x853C5068 EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0x888EEEC6 EQ PUSH2 0x5A2 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x257671F5 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x4598154F GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x4598154F EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x4FCF3ECA EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x57C56D6B EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x61C2926C EQ PUSH2 0x51A JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x257671F5 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x29561426 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x2DD31000 EQ PUSH2 0x472 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x1A9B2337 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x20C13B0B EQ PUSH2 0x3F0 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x25B22BC EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x38DBAAC EQ PUSH2 0x2F5 JUMPI PUSH2 0x1C2 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1C2 JUMPI STOP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29E JUMPI PUSH1 0x0 PUSH2 0x1F9 PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x763 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x242 SWAP3 SWAP2 SWAP1 PUSH2 0x2CD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x282 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x294 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD RETURN JUMPDEST POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0F JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D55 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DBC JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E40 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAF JUMP JUMPDEST PUSH2 0x91F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0F JUMP JUMPDEST PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x2EFB JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x46D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F67 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F80 JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0F JUMP JUMPDEST PUSH2 0xAEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH32 0x8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x535 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DBC JUMP JUMPDEST PUSH2 0xBB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x555 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA2 JUMP JUMPDEST PUSH2 0xC39 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57A PUSH2 0x575 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAF JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH2 0x5F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F67 JUMP JUMPDEST PUSH2 0xF06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60B PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x3079 JUMP JUMPDEST PUSH2 0x3CB PUSH2 0x626 CALLDATASIZE PUSH1 0x4 PUSH2 0x30BB JUMP JUMPDEST PUSH2 0xFB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x646 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F67 JUMP JUMPDEST PUSH2 0x109D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH2 0x666 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F67 JUMP JUMPDEST PUSH2 0x10E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH2 0x10F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x69B CALLDATASIZE PUSH1 0x4 PUSH2 0x318A JUMP JUMPDEST PUSH2 0x1103 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x6BB CALLDATASIZE PUSH1 0x4 PUSH2 0x31BF JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH2 0x11CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x718 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F80 JUMP JUMPDEST PUSH2 0x11F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x738 CALLDATASIZE PUSH1 0x4 PUSH2 0x327A JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 AND PUSH2 0x124B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP3 PUSH2 0x12A9 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x808 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x1305 JUMP JUMPDEST POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x855 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x919 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x875 PUSH2 0x32F2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0x8D5 DUP2 PUSH1 0x0 PUSH1 0x40 DUP1 MLOAD PUSH32 0x849E7BDC245DB17E50B9F43086F1914D70EB4DAB6DD89AF4D541D53353AD97DE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH32 0x804F6171D6008D9E16EE3AA0561FEC328397F4BA2827A6605DB388CFDEFA3B0C PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x908 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0x859 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x92D DUP6 DUP6 DUP6 PUSH2 0x13C0 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO PUSH2 0x95F JUMPI POP PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x965 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP3 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x99C DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x98D SWAP3 SWAP2 SWAP1 PUSH2 0x2CD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 DUP6 PUSH2 0x13C0 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO PUSH2 0x9CE JUMPI POP PUSH32 0x20C13B0B00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x9D4 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x13FE JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x849E7BDC245DB17E50B9F43086F1914D70EB4DAB6DD89AF4D541D53353AD97DE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP4 DUP5 SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 DUP4 SWAP1 SSTORE SWAP1 DUP3 SWAP1 MSTORE DUP3 SWAP1 PUSH32 0x804F6171D6008D9E16EE3AA0561FEC328397F4BA2827A6605DB388CFDEFA3B0C SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xB2C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB37 DUP3 PUSH2 0x763 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1C3812CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH1 0x0 PUSH2 0x14BA JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xBF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC27 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC0C SWAP3 SWAP2 SWAP1 PUSH2 0x34C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x157A JUMP JUMPDEST SWAP1 POP PUSH2 0xC34 DUP2 DUP5 DUP5 PUSH2 0x15FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA57D61D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB1 DUP4 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCE9 DUP6 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCCC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 PUSH2 0x13C0 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xD2A JUMPI DUP1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x8F4A234F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3534 JUMP JUMPDEST PUSH2 0xD35 DUP2 DUP9 DUP9 PUSH2 0x15FF JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD5A JUMPI PUSH2 0xD5A PUSH2 0x32F2 JUMP JUMPDEST SWAP1 SWAP2 ADD CALLDATALOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND SWAP2 POP DUP2 SWAP1 POP PUSH2 0xDB0 JUMPI PUSH2 0xD92 DUP10 PUSH2 0x157A JUMP JUMPDEST SWAP3 POP PUSH2 0xD9F DUP4 DUP10 DUP10 PUSH2 0x1884 JUMP JUMPDEST SWAP3 SWAP9 POP SWAP1 SWAP7 POP SWAP5 POP SWAP2 POP PUSH2 0xEFB SWAP1 POP JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 DUP2 AND ADD PUSH2 0xDEF JUMPI PUSH2 0xDE2 DUP10 PUSH2 0x157A JUMP JUMPDEST SWAP3 POP PUSH2 0xD9F DUP4 DUP10 DUP10 PUSH2 0x18D5 JUMP JUMPDEST PUSH32 0xFE00000000000000000000000000000000000000000000000000000000000000 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ADD PUSH2 0xE41 JUMPI PUSH2 0xDE2 DUP10 PUSH2 0x1901 JUMP JUMPDEST PUSH32 0xFD00000000000000000000000000000000000000000000000000000000000000 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ADD PUSH2 0xEA5 JUMPI PUSH2 0xE95 DUP10 DUP10 DUP10 PUSH2 0x196E JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP PUSH2 0xEFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6085CD8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FF JUMP JUMPDEST SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF8F PUSH2 0xF8A PUSH2 0xF42 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x170122000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1AEB JUMP JUMPDEST PUSH2 0x1D04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF9F SWAP2 SWAP1 PUSH2 0x354E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0xFF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x104F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xD25719100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x3079 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x10DE JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP3 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FE PUSH1 0x0 PUSH2 0xF06 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1144 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114F DUP4 PUSH2 0x763 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5B4D6D6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x11CA DUP3 DUP3 PUSH2 0x14BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FE PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 SLOAD SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x1242 DUP3 PUSH2 0x13FE JUMP JUMPDEST PUSH2 0x11CA DUP2 PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x126A SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2E74B92A00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x12FC JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B1 DUP3 PUSH2 0x1DB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x136B JUMPI PUSH1 0x40 MLOAD PUSH32 0xC76093700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x1373 DUP2 ADDRESS SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0x310BA5F1D2ED074B51E2ECCD052A47AE9AB7C6B800D1FCA3DB3999D6A592CA03 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x13D3 DUP9 DUP9 DUP9 PUSH2 0xD3E JUMP JUMPDEST POP SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x13F1 JUMPI POP PUSH2 0x13F1 DUP2 PUSH2 0x1E0E JUMP JUMPDEST SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x1435 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4294D12700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x145E PUSH32 0xEA7157FA25E3AA17D0AE2D5280FA4E24D421C61842AA85E45194E1145AA72BF8 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x307ED6BD941EE9FC80F369C94AF5FA11E25BAB5102A6140191756C5474A30BFA SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x811 PUSH32 0x0 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND DUP3 DUP5 ADD DUP2 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP6 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP4 ADD KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP2 SWAP1 SSTORE SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xD7FC113EAF016DB4681A1BA86D083CE3E0961F321062A75AC2B0AEB33DEEED1 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE CHAINID PUSH1 0x22 DUP3 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 ADDRESS PUSH1 0x60 SHL AND PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x56 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x76 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1780 JUMPI CALLDATASIZE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x161E JUMPI PUSH2 0x161E PUSH2 0x32F2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1630 SWAP2 SWAP1 PUSH2 0x3593 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP1 GAS LT ISZERO PUSH2 0x1685 JUMPI DUP3 DUP2 GAS PUSH1 0x40 MLOAD PUSH32 0x2BB3E3BA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1694 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x35D1 JUMP JUMPDEST ISZERO PUSH2 0x16D3 JUMPI PUSH2 0x16CC PUSH2 0x16AC PUSH1 0x80 DUP6 ADD PUSH1 0x60 DUP7 ADD PUSH2 0x2D55 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x16B8 JUMPI DUP4 PUSH2 0x16BA JUMP JUMPDEST GAS JUMPDEST PUSH2 0x16C7 PUSH1 0xA0 DUP8 ADD DUP8 PUSH2 0x35EC JUMP JUMPDEST PUSH2 0x1E19 JUMP JUMPDEST SWAP1 POP PUSH2 0x170E JUMP JUMPDEST PUSH2 0x170B PUSH2 0x16E6 PUSH1 0x80 DUP6 ADD PUSH1 0x60 DUP7 ADD PUSH2 0x2D55 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD CALLDATALOAD DUP5 ISZERO PUSH2 0x16F7 JUMPI DUP5 PUSH2 0x16F9 JUMP JUMPDEST GAS JUMPDEST PUSH2 0x1706 PUSH1 0xA0 DUP9 ADD DUP9 PUSH2 0x35EC JUMP JUMPDEST PUSH2 0x1E34 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x1753 JUMPI DUP8 PUSH32 0x5C4EEB02DABF8976016AB414D617F9A162936DCACE3CDEF8C69EF6E262AD5AE7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1746 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x1775 PUSH2 0x1766 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x35D1 JUMP JUMPDEST DUP10 DUP7 PUSH2 0x1770 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0x1E70 JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x1603 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SWAP1 SHR PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 PUSH2 0x17A6 DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9B6514F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x1 DUP4 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x1F180C27086C7A39EA2A7B25239D1AB92348F07CA7BB59D1438FCF527568F881 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x189F DUP8 PUSH2 0x189A DUP8 PUSH1 0x6 DUP2 DUP12 PUSH2 0x3651 JUMP JUMPDEST PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP8 CALLDATALOAD PUSH1 0xF0 SHR PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP11 ADD CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 SWAP1 MSTORE SWAP9 SWAP1 SWAP2 KECCAK256 SWAP1 SWAP10 SWAP2 SWAP9 POP SWAP7 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x18F0 DUP8 PUSH2 0x18EB DUP8 PUSH1 0x1 DUP2 DUP12 PUSH2 0x3651 JUMP JUMPDEST PUSH2 0x1884 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x22 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 ADDRESS PUSH1 0x60 SHL AND PUSH1 0x42 DUP4 ADD MSTORE PUSH1 0x56 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x76 ADD PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 PUSH1 0x4 PUSH1 0x1 DUP9 ADD CALLDATALOAD PUSH1 0xE8 SHR DUP3 PUSH2 0x1989 DUP4 DUP4 PUSH2 0x36AA JUMP JUMPDEST SWAP1 POP PUSH2 0x199B DUP12 PUSH2 0x575 DUP4 DUP7 DUP14 DUP16 PUSH2 0x3651 JUMP JUMPDEST SWAP4 SWAP12 POP SWAP2 SWAP10 POP SWAP8 POP SWAP6 POP SWAP4 POP DUP8 DUP8 LT ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x19BB DUP2 DUP5 DUP12 DUP14 PUSH2 0x3651 JUMP JUMPDEST DUP10 DUP10 PUSH1 0x40 MLOAD PUSH32 0xB006ABA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36BD JUMP JUMPDEST DUP1 SWAP3 POP JUMPDEST DUP9 DUP4 LT ISZERO PUSH2 0x1ADD JUMPI PUSH1 0x3 DUP4 ADD SWAP3 DUP11 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP2 POP PUSH2 0x1A16 DUP4 DUP4 PUSH2 0x36AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A38 PUSH2 0x1A26 DUP9 PUSH2 0x2354 JUMP JUMPDEST DUP13 DUP13 DUP8 SWAP1 DUP7 SWAP3 PUSH2 0x575 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3651 JUMP JUMPDEST SWAP4 SWAP13 POP SWAP2 SWAP11 POP SWAP9 POP SWAP1 SWAP2 POP POP DUP9 DUP9 LT ISZERO PUSH2 0x1A90 JUMPI PUSH2 0x1A58 DUP3 DUP6 DUP13 DUP15 PUSH2 0x3651 JUMP JUMPDEST DUP11 DUP11 PUSH1 0x40 MLOAD PUSH32 0xB006ABA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36BD JUMP JUMPDEST DUP5 DUP2 LT PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x37DAF62B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST SWAP4 POP SWAP2 POP DUP2 PUSH2 0x19F7 JUMP JUMPDEST POP POP POP SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x3 DUP2 SWAP1 SHL PUSH1 0x0 PUSH1 0x5 PUSH1 0x4 DUP4 ADD DIV PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B16 JUMPI PUSH2 0x1B16 PUSH2 0x308C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B40 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1C54 JUMPI DUP9 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1B64 JUMPI PUSH2 0x1B64 PUSH2 0x32F2 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x8 SWAP5 DUP6 ADD SWAP5 SWAP4 SWAP1 SWAP4 SHL PUSH1 0xF8 SWAP4 SWAP1 SWAP4 SHR SWAP3 SWAP1 SWAP3 OR SWAP2 JUMPDEST PUSH1 0x5 DUP5 LT PUSH2 0x1C4C JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 DUP4 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB SWAP1 SWAP6 ADD SWAP5 PUSH1 0x1F DUP6 DUP8 SHR AND SWAP1 DUP2 LT PUSH2 0x1BF5 JUMPI PUSH2 0x1BF5 PUSH2 0x32F2 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C12 JUMPI PUSH2 0x1C12 PUSH2 0x32F2 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1B7F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1B4A JUMP JUMPDEST POP DUP3 ISZERO PUSH2 0x1CF8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 MSTORE POP DUP4 PUSH1 0x5 SUB DUP4 SWAP1 SHL PUSH1 0x1F AND DUP2 MLOAD DUP2 LT PUSH2 0x1CAB JUMPI PUSH2 0x1CAB PUSH2 0x32F2 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1CC8 JUMPI PUSH2 0x1CC8 PUSH2 0x32F2 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D17 SWAP2 SWAP1 PUSH2 0x36E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D56 PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x20D3EF1B5738A9F6D7BEAE515432206E7A8E2740CA6DCF46A952190AD01BCB51 SWAP1 PUSH1 0x20 ADD PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 PUSH32 0x849E7BDC245DB17E50B9F43086F1914D70EB4DAB6DD89AF4D541D53353AD97DE DUP4 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FFBD45100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x1E05 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B1 DUP3 PUSH2 0x2388 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP3 PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 DUP10 DUP10 DELEGATECALL SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 DUP10 DUP12 DUP11 CALL SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 RETURNDATASIZE PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP4 MSTORE DUP2 PUSH1 0x0 DUP3 RETURNDATACOPY POP POP SWAP1 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1E7E JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP3 PUSH32 0xAB46C69F7F32E1BF09B0725853DA82A211E5402A0600296AB499A2FB5EA3B419 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1EB0 SWAP3 SWAP2 SWAP1 PUSH2 0x3729 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x234B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 DUP6 ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD PUSH2 0x1F65 JUMPI PUSH1 0x15 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0x58 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH21 0xFF0000000000000000000000000000000000000000 AND DUP2 OR DUP6 PUSH2 0x1F4B JUMPI DUP1 PUSH2 0x1F5A JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP6 POP POP POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST DUP1 PUSH2 0x1FFB JUMPI PUSH1 0x1 DUP3 ADD SWAP2 DUP7 DUP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP1 PUSH1 0x43 ADD PUSH1 0x0 PUSH2 0x1F91 DUP11 PUSH2 0x1F8C DUP5 DUP9 DUP13 DUP15 PUSH2 0x3651 JUMP JUMPDEST PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0xFF DUP5 AND SWAP8 SWAP1 SWAP8 ADD SWAP7 SWAP2 SWAP5 POP DUP5 SWAP2 SWAP1 POP PUSH1 0xA0 DUP4 SWAP1 SHL PUSH21 0xFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND OR DUP7 PUSH2 0x1FE0 JUMPI DUP1 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP7 POP POP POP POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x2123 JUMPI PUSH1 0x0 DUP1 DUP8 DUP5 ADD CALLDATALOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0x58 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x15 DUP7 ADD SWAP6 POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP9 DUP6 ADD CALLDATALOAD PUSH1 0xE8 SHR PUSH1 0x3 DUP7 ADD DUP2 PUSH3 0xFFFFFF AND SWAP2 POP DUP1 SWAP7 POP DUP2 SWAP3 POP POP POP PUSH1 0x0 DUP2 DUP7 ADD SWAP1 POP PUSH2 0x2074 DUP12 DUP5 DUP13 DUP13 DUP11 SWAP1 DUP7 SWAP3 PUSH2 0x206F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3651 JUMP JUMPDEST PUSH2 0x28BA JUMP JUMPDEST PUSH2 0x20BC JUMPI DUP11 DUP4 PUSH2 0x2086 DUP4 DUP10 DUP14 DUP16 PUSH2 0x3651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9A94623200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3742 JUMP JUMPDEST PUSH1 0xFF DUP5 AND SWAP8 SWAP1 SWAP8 ADD SWAP7 SWAP5 POP DUP5 PUSH1 0xA0 DUP5 SWAP1 SHL PUSH21 0xFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR DUP8 PUSH2 0x2107 JUMPI DUP1 PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP8 POP POP POP POP POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x2156 JUMPI PUSH1 0x20 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD DUP4 PUSH2 0x213E JUMPI DUP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x4 DUP2 SUB PUSH2 0x21A2 JUMPI PUSH1 0x3 DUP1 DUP4 ADD SWAP3 DUP8 DUP2 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP2 SWAP1 DUP3 ADD ADD PUSH1 0x0 DUP1 PUSH2 0x2183 DUP12 PUSH2 0x189A DUP6 DUP10 DUP14 DUP16 PUSH2 0x3651 JUMP JUMPDEST PUSH1 0x0 SWAP9 DUP10 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP8 KECCAK256 SWAP7 SWAP1 SWAP8 ADD SWAP7 POP SWAP1 SWAP4 POP PUSH2 0x1EC4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 SUB PUSH2 0x22AA JUMPI PUSH1 0x0 DUP3 DUP8 ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP8 DUP5 ADD CALLDATALOAD PUSH1 0xF0 SHR PUSH1 0x2 DUP6 ADD SWAP5 POP PUSH2 0xFFFF AND SWAP1 POP PUSH1 0x0 DUP9 DUP6 ADD CALLDATALOAD PUSH1 0xE8 SHR PUSH1 0x3 DUP7 ADD DUP2 PUSH3 0xFFFFFF AND SWAP2 POP DUP1 SWAP7 POP DUP2 SWAP3 POP POP POP PUSH1 0x0 DUP2 DUP7 ADD SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x2210 DUP14 DUP14 DUP14 DUP12 SWAP1 DUP8 SWAP3 PUSH2 0x189A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3651 JUMP JUMPDEST SWAP4 SWAP9 POP DUP9 SWAP4 SWAP1 SWAP3 POP SWAP1 POP DUP5 DUP3 LT PUSH2 0x2226 JUMPI SWAP9 DUP6 ADD SWAP9 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x53657175656E6365206E657374656420636F6E6669673A0A0000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x38 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x58 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x78 DUP1 DUP4 ADD DUP11 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x98 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 DUP10 PUSH2 0x228C JUMPI DUP1 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x5 DUP2 SUB PUSH2 0x2316 JUMPI PUSH1 0x20 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD DUP8 DUP2 SUB PUSH2 0x22E5 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 POP JUMPDEST PUSH1 0x0 PUSH2 0x22F0 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST SWAP1 POP DUP5 PUSH2 0x22FD JUMPI DUP1 PUSH2 0x230C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP5 POP POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xB2505F7C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7FF JUMP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xEC6ABA5000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x241B JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x2467 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x24B3 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xC0EE0B8A00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x24C0 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B1 DUP3 PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25CB DUP3 PUSH1 0x40 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH32 0x0 PUSH1 0x60 SHL AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x35 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x55 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 ADDRESS SWAP1 PUSH1 0x75 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST ISZERO PUSH2 0x25D8 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25E3 DUP4 PUSH2 0x1D86 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x965 JUMPI POP TIMESTAMP LT SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x42 DUP3 EQ PUSH2 0x2637 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x2EE17A3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP3 SWAP2 SWAP1 PUSH2 0x3782 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2650 PUSH2 0x2647 PUSH1 0x1 DUP6 PUSH2 0x3796 JUMP JUMPDEST DUP6 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0xF8 SHR DUP5 CALLDATALOAD PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP2 GT ISZERO PUSH2 0x26C4 JUMPI DUP7 DUP7 DUP3 PUSH1 0x40 MLOAD PUSH32 0xAD4AAC7600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37A9 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x26DC JUMPI POP DUP3 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x2719 JUMPI DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE578897E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37CD JUMP JUMPDEST PUSH1 0x1 DUP5 SUB PUSH2 0x2786 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2775 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP5 POP PUSH2 0x285E JUMP JUMPDEST PUSH1 0x2 DUP5 SUB PUSH2 0x2823 JUMPI PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE MSTORE PUSH1 0xFF DUP7 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH2 0x2753 JUMP JUMPDEST DUP7 DUP7 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH32 0x9DFBA85200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x28AF JUMPI DUP7 DUP7 PUSH1 0x40 MLOAD PUSH32 0x6C1719D200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP3 SWAP2 SWAP1 PUSH2 0x3782 JUMP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB PUSH2 0x28F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAC241E1100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH2 0x2904 PUSH1 0x1 DUP3 PUSH2 0x3796 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2913 JUMPI PUSH2 0x2913 PUSH2 0x32F2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP2 POP POP PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x292D JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST ISZERO PUSH2 0x2972 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2954 DUP8 DUP7 DUP7 PUSH2 0x25F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x2A5D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH4 0x1626BA7E DUP8 DUP7 PUSH1 0x0 DUP8 PUSH2 0x29A6 PUSH1 0x1 DUP3 PUSH2 0x3796 JUMP JUMPDEST SWAP3 PUSH2 0x29B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3651 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3534 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A12 SWAP2 SWAP1 PUSH2 0x3820 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP PUSH2 0x2A98 JUMP JUMPDEST DUP4 DUP4 DUP3 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x9DFBA85200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37F4 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x53657175656E636520737461746963206469676573743A0A0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x38 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x58 ADD PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xE4A77BBC00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x2B2F JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B1 DUP3 PUSH1 0x0 PUSH32 0x1CBEC62500000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x2B86 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B1 DUP3 PUSH1 0x0 PUSH2 0x7B1 DUP3 PUSH1 0x0 PUSH32 0xFDA4DD4400000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x2BE3 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B1 DUP3 PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xAC6A444E00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2C7A JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x36E7817500000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x2C87 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x7B1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x965 DUP2 PUSH2 0x2CE1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2D50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x965 DUP3 PUSH2 0x2D2C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2D82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2DB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2DF2 DUP6 DUP3 DUP7 ADD PUSH2 0x2D70 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2DB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2E58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E61 DUP7 PUSH2 0x2D2C JUMP JUMPDEST SWAP5 POP PUSH2 0x2E6F PUSH1 0x20 DUP8 ADD PUSH2 0x2D2C JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E9E DUP9 DUP3 DUP10 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EEE DUP7 DUP3 DUP8 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2F11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2F29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F35 DUP9 DUP4 DUP10 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5B DUP8 DUP3 DUP9 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2FBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2FD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FDE DUP10 DUP4 DUP11 ADD PUSH2 0x2D70 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2FFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E9E DUP9 DUP3 DUP10 ADD PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3026 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x300E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3047 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x300B JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x965 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x302F JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x30E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x310B JUMPI PUSH2 0x310B PUSH2 0x308C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3151 JUMPI PUSH2 0x3151 PUSH2 0x308C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x316A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x319D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x31A8 DUP2 PUSH2 0x2CE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x31B6 PUSH1 0x20 DUP5 ADD PUSH2 0x2D2C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x31DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31E4 DUP10 PUSH2 0x2D2C JUMP JUMPDEST SWAP8 POP PUSH2 0x31F2 PUSH1 0x20 DUP11 ADD PUSH2 0x2D2C JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x320F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x321B DUP13 DUP4 DUP14 ADD PUSH2 0x2D70 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3240 DUP13 DUP4 DUP14 ADD PUSH2 0x2D70 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3266 DUP12 DUP3 DUP13 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x329C DUP8 PUSH2 0x2D2C JUMP JUMPDEST SWAP6 POP PUSH2 0x32AA PUSH1 0x20 DUP9 ADD PUSH2 0x2D2C JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32E0 DUP10 DUP3 DUP11 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2D50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP6 PUSH1 0x5 SHL DUP2 ADD SWAP2 POP DUP5 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x34BC JUMPI DUP3 DUP5 SUB DUP10 MSTORE DUP2 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41 DUP9 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x33D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0xC0 PUSH2 0x33E0 DUP3 PUSH2 0x3321 JUMP JUMPDEST ISZERO ISZERO DUP7 MSTORE PUSH2 0x33EF DUP8 DUP4 ADD PUSH2 0x3321 JUMP JUMPDEST ISZERO ISZERO DUP7 DUP9 ADD MSTORE PUSH1 0x40 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x60 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x3421 DUP3 DUP6 ADD PUSH2 0x2D2C JUMP JUMPDEST AND SWAP1 DUP8 ADD MSTORE PUSH1 0x80 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP8 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD CALLDATALOAD CALLDATASIZE DUP5 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 ADD DUP2 SLT PUSH2 0x3467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 ADD DUP8 DUP2 ADD SWAP3 SWAP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP5 SGT ISZERO PUSH2 0x3494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 DUP10 ADD MSTORE PUSH2 0x34A6 DUP4 DUP10 ADD DUP3 DUP7 PUSH2 0x3331 JUMP JUMPDEST SWAP13 DUP10 ADD SWAP13 SWAP8 POP POP POP SWAP3 DUP7 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x3394 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x73656C663A000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x9D4 PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x337A JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x352B PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x337A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x352B PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x3331 JUMP JUMPDEST PUSH32 0x697066733A2F2F00000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x3586 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x300B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41 DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x35C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x965 DUP3 PUSH2 0x3321 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x363C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x2DB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x3661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x366E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7B1 JUMPI PUSH2 0x7B1 PUSH2 0x367B JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x36D1 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x3331 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6200000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x371C DUP2 PUSH1 0x1 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x300B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x9D4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x302F JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3778 PUSH1 0x60 DUP4 ADD DUP5 DUP7 PUSH2 0x3331 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9D4 PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x3331 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7B1 JUMPI PUSH2 0x7B1 PUSH2 0x367B JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x37BD PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x3331 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x37E1 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x3331 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3808 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x3331 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x965 DUP2 PUSH2 0x2CE1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY DUP14 MLOAD SWAP10 RETURN 0xC SLT RETURNDATASIZE SELFDESTRUCT SWAP8 GT 0xC1 RETURNDATACOPY PUSH14 0x1AF00442C59755D475D5781636AA 0xBA 0xB6 0x2D 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER PUSH1 0x3A PUSH1 0xE RETURNDATASIZE CODECOPY PUSH1 0x1A DUP1 MLOAD ADDRESS SSTORE RETURNDATASIZE RETURN CALLDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATACOPY RETURNDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATASIZE RETURNDATASIZE ADDRESS SLOAD GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY SWAP1 RETURNDATASIZE SWAP2 PUSH1 0x18 JUMPI REVERT JUMPDEST RETURN ",
							"sourceMap": "593:963:5:-:0;;;729:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;200:4:17;185:20;;859:19:9;;;;;;;;;;;;;823:8:5;;837:21;;809:20:9;;859:19;;;;;;842:70;;;;;904:4;;842:70;;;:::i;:::-;;;;-1:-1:-1;;842:70:9;;;;;;;;;832:81;;842:70;832:81;;;;920:29;;-1:-1:-1;;;;;;955:18:9;;;;;979:51;;;-1:-1:-1;593:963:5;;-1:-1:-1;593:963:5;14:177:37;93:13;;-1:-1:-1;;;;;135:31:37;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:456::-;651:3;689:6;683:13;714:1;724:129;738:6;735:1;732:13;724:129;;;836:4;820:14;;;816:25;;810:32;797:11;;;790:53;753:12;724:129;;;-1:-1:-1;872:16:37;;;;897:18;;;-1:-1:-1;939:4:37;931:13;;494:456;-1:-1:-1;494:456:37:o;:::-;593:963:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@FACTORY_587": {
									"entryPoint": null,
									"id": 587,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@INIT_CODE_HASH_585": {
									"entryPoint": null,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SET_IMAGE_HASH_TYPE_HASH_2927": {
									"entryPoint": null,
									"id": 2927,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADEABLE_IMPLEMENTATION_589": {
									"entryPoint": null,
									"id": 589,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1524": {
									"entryPoint": null,
									"id": 1524,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1529": {
									"entryPoint": null,
									"id": 1529,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_execute_933": {
									"entryPoint": 5631,
									"id": 933,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_hashSetImageHashStruct_2956": {
									"entryPoint": 9044,
									"id": 2956,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isValidImage_1162": {
									"entryPoint": 9417,
									"id": 1162,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isValidImage_142": {
									"entryPoint": 7694,
									"id": 142,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isValidImage_696": {
									"entryPoint": null,
									"id": 696,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_leafForAddressAndWeight_2309": {
									"entryPoint": null,
									"id": 2309,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_leafForHardcodedSubdigest_2326": {
									"entryPoint": 10913,
									"id": 2326,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_leafForNested_2349": {
									"entryPoint": null,
									"id": 2349,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_readExpirationForImageHash_1130": {
									"entryPoint": 7558,
									"id": 1130,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_readHook_1389": {
									"entryPoint": 1891,
									"id": 1389,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revertBytes_957": {
									"entryPoint": 7792,
									"id": 957,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setImplementation_175": {
									"entryPoint": null,
									"id": 175,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_signatureValidation_400": {
									"entryPoint": 5056,
									"id": 400,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@_updateIPFSRoot_1659": {
									"entryPoint": 7469,
									"id": 1659,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateImageHash_662": {
									"entryPoint": 5118,
									"id": 662,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateImplementation_1980": {
									"entryPoint": 4869,
									"id": 1980,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateNonce_1790": {
									"entryPoint": 6023,
									"id": 1790,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_writeExpirationForImageHash_1113": {
									"entryPoint": null,
									"id": 1113,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_writeHook_1420": {
									"entryPoint": 5306,
									"id": 1420,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_writeNonce_1739": {
									"entryPoint": null,
									"id": 1739,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addHook_1334": {
									"entryPoint": 4355,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@bytesToBase32_3696": {
									"entryPoint": 6891,
									"id": 3696,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@call_3420": {
									"entryPoint": 7732,
									"id": 3420,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@chainedRecover_3102": {
									"entryPoint": 6510,
									"id": 3102,
									"parameterSlots": 3,
									"returnSlots": 5
								},
								"@clearExtraImageHashes_1237": {
									"entryPoint": 2068,
									"id": 1237,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@createContract_1026": {
									"entryPoint": 4019,
									"id": 1026,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decodeNonce_3208": {
									"entryPoint": null,
									"id": 3208,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@delegatecall_3434": {
									"entryPoint": 7705,
									"id": 3434,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@execute_787": {
									"entryPoint": 3129,
									"id": 787,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@extraImageHash_1174": {
									"entryPoint": 4327,
									"id": 1174,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@fkeccak256_3396": {
									"entryPoint": null,
									"id": 3396,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@ipfsRootBytes32_1604": {
									"entryPoint": 4558,
									"id": 1604,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ipfsRoot_1630": {
									"entryPoint": 3890,
									"id": 1630,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_3228": {
									"entryPoint": null,
									"id": 3228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isValidSignature_3964": {
									"entryPoint": 10426,
									"id": 3964,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@isValidSignature_431": {
									"entryPoint": 2423,
									"id": 431,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@isValidSignature_460": {
									"entryPoint": 2335,
									"id": 460,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@nonce_1695": {
									"entryPoint": 4338,
									"id": 1695,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@onERC1155BatchReceived_1466": {
									"entryPoint": null,
									"id": 1466,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"@onERC1155Received_1442": {
									"entryPoint": null,
									"id": 1442,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@onERC721Received_1486": {
									"entryPoint": null,
									"id": 1486,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@prefixBase32_3480": {
									"entryPoint": 7428,
									"id": 3480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@readBytes32Map_1918": {
									"entryPoint": 4683,
									"id": 1918,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readBytes32_1876": {
									"entryPoint": null,
									"id": 1876,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@readBytes32_3244": {
									"entryPoint": null,
									"id": 3244,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@readBytes32_3380": {
									"entryPoint": null,
									"id": 3380,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@readFirstUint16_3266": {
									"entryPoint": null,
									"id": 3266,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readHook_1304": {
									"entryPoint": 2412,
									"id": 1304,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@readNonce_1716": {
									"entryPoint": 3846,
									"id": 1716,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@readUint16_3338": {
									"entryPoint": null,
									"id": 3338,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@readUint24_3352": {
									"entryPoint": null,
									"id": 3352,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@readUint32_3278": {
									"entryPoint": null,
									"id": 3278,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@readUint8Address_3324": {
									"entryPoint": null,
									"id": 3324,
									"parameterSlots": 3,
									"returnSlots": 3
								},
								"@readUint8_3256": {
									"entryPoint": null,
									"id": 3256,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@readUint8_3308": {
									"entryPoint": null,
									"id": 3308,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@recoverBranch_2839": {
									"entryPoint": 7870,
									"id": 2839,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@recoverSigner_3882": {
									"entryPoint": 9719,
									"id": 3882,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@recover_2905": {
									"entryPoint": 6276,
									"id": 2905,
									"parameterSlots": 3,
									"returnSlots": 4
								},
								"@recover_3131": {
									"entryPoint": 6357,
									"id": 3131,
									"parameterSlots": 3,
									"returnSlots": 4
								},
								"@removeHook_1365": {
									"entryPoint": 2795,
									"id": 1365,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@returnData_3404": {
									"entryPoint": 7761,
									"id": 3404,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@selfExecute_817": {
									"entryPoint": 2995,
									"id": 817,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setExtraImageHash_1194": {
									"entryPoint": 2598,
									"id": 1194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@signatureRecovery_356": {
									"entryPoint": 3390,
									"id": 356,
									"parameterSlots": 3,
									"returnSlots": 5
								},
								"@subdigest_2279": {
									"entryPoint": 5498,
									"id": 2279,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@subdigest_3159": {
									"entryPoint": 6401,
									"id": 3159,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1051": {
									"entryPoint": 7602,
									"id": 1051,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1069": {
									"entryPoint": null,
									"id": 1069,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1264": {
									"entryPoint": null,
									"id": 1264,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1575": {
									"entryPoint": 9096,
									"id": 1575,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_163": {
									"entryPoint": 1975,
									"id": 163,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2005": {
									"entryPoint": null,
									"id": 2005,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_492": {
									"entryPoint": null,
									"id": 492,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_568": {
									"entryPoint": 4777,
									"id": 568,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_713": {
									"entryPoint": null,
									"id": 713,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_982": {
									"entryPoint": 10972,
									"id": 982,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateIPFSRoot_1642": {
									"entryPoint": 4253,
									"id": 1642,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateImageHashAndIPFS_541": {
									"entryPoint": 4600,
									"id": 541,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateImageHash_506": {
									"entryPoint": 2524,
									"id": 506,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateImplementation_1955": {
									"entryPoint": 1986,
									"id": 1955,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@writeBytes32Map_1897": {
									"entryPoint": null,
									"id": 1897,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@writeBytes32_1867": {
									"entryPoint": null,
									"id": 1867,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 11564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_bytes32_dyn_calldata": {
									"entryPoint": 11632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bool": {
									"entryPoint": 13089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 11774,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 12735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 11840,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 12922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr": {
									"entryPoint": 11708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_struct$_Transaction_$2119_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_struct$_Transaction_$2119_calldata_ptr_$dyn_calldata_ptrt_uint256t_bytes_calldata_ptr": {
									"entryPoint": 12194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 13777,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 12135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_bytes_calldata_ptr": {
									"entryPoint": 11951,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes32t_uint256": {
									"entryPoint": 12160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 11535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 14368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4t_address": {
									"entryPoint": 12682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 12027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 12475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_struct_Transaction_calldata_dyn_calldata": {
									"entryPoint": 13178,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_bytes_calldata": {
									"entryPoint": 13105,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 12335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 11473,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_26b70929d2fa0780c1c1464bfedd403dbaa218f98edb5cf8a3ef7b664ee22408_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_uint256_t_address_t_bytes32__to_t_string_memory_ptr_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_583557e68bca91e5400591dbc9ae31043113c95e3cd985463ae532f51d706f8c_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_58d1832f15932b40f8da147bd99ac98efab990f25a786a2229b05ee5f5be41a7_t_bytes32_t_uint256_t_uint256__to_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 13646,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 14052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1__to_t_bytes1__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_bytes_calldata_ptr_slice__to_t_bytes32_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 14146,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 13620,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr_slice__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4_t_address__to_t_bytes4_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 14210,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_slice_t_uint256_t_uint256__to_t_bytes_memory_ptr_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 14013,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_t_bytes32__to_t_bytes_memory_ptr_t_bytes32__fromStack_reversed": {
									"entryPoint": 14249,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_t_uint256_t_bool__to_t_bytes_memory_ptr_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 14324,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 14285,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845_t_array$_t_struct$_Transaction_$2119_calldata_ptr_$dyn_calldata_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$2119_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 13513,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_struct$_Transaction_$2119_calldata_ptr_$dyn_calldata_ptr__to_t_uint256_t_array$_t_struct$_Transaction_$2119_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 13585,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 14121,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"access_calldata_tail_t_bytes_calldata_ptr": {
									"entryPoint": 13804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"access_calldata_tail_t_struct$_Transaction_$2119_calldata_ptr": {
									"entryPoint": 13715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_array_index_range_access_t_bytes_calldata_ptr": {
									"entryPoint": 13905,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_add_t_uint256": {
									"entryPoint": 13994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 14230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 12299,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 13947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 13042,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 12428,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 11489,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:27625:37",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:37",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "161:124:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "184:3:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "189:6:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:37"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "171:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "171:33:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "171:33:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "227:3:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "232:6:37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "223:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:16:37"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "217:2:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "255:2:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:1:37",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "248:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:13:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "248:13:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "270:9:37",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "277:2:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "270:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "129:3:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "134:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "142:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "153:3:37",
														"type": ""
													}
												],
												"src": "14:271:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "334:133:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "445:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "454:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "457:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "447:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "447:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "447:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "357:5:37"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "368:5:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "375:66:37",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "364:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "364:78:37"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "354:2:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:89:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "347:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:97:37"
															},
															"nodeType": "YulIf",
															"src": "344:117:37"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "323:5:37",
														"type": ""
													}
												],
												"src": "290:177:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "541:176:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "562:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "571:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "583:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "554:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "554:32:37"
															},
															"nodeType": "YulIf",
															"src": "551:52:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "612:36:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "638:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "625:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:23:37"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "616:5:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "681:5:37"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "657:23:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:30:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "657:30:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "696:15:37",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "706:5:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "696:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "507:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "518:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "530:6:37",
														"type": ""
													}
												],
												"src": "472:245:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "817:92:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "827:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "839:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "850:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "827:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "869:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "894:6:37"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "887:6:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "887:14:37"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "880:6:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "880:22:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "862:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "862:41:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "862:41:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "786:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "797:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "808:4:37",
														"type": ""
													}
												],
												"src": "722:187:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:147:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "973:29:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "995:6:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "982:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "982:20:37"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "973:5:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1088:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1097:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1100:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1090:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1090:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1090:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1024:5:37"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1035:5:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1042:42:37",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1031:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1031:54:37"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1021:2:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1021:65:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1014:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1014:73:37"
															},
															"nodeType": "YulIf",
															"src": "1011:93:37"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "942:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "953:5:37",
														"type": ""
													}
												],
												"src": "914:196:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1185:116:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1231:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1240:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1243:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1233:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1233:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1233:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1206:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1215:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1202:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1202:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1198:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1198:32:37"
															},
															"nodeType": "YulIf",
															"src": "1195:52:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:39:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1285:9:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1266:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:29:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1151:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1162:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1174:6:37",
														"type": ""
													}
												],
												"src": "1115:186:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1390:283:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1439:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1448:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1451:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1441:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1441:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1441:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1418:6:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1426:4:37",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1414:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1414:17:37"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1433:3:37"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1410:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1410:27:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:35:37"
															},
															"nodeType": "YulIf",
															"src": "1400:55:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1464:30:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1487:6:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1474:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1474:20:37"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1464:6:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1537:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1546:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1549:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1539:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1539:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1539:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1509:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1517:18:37",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1506:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1506:30:37"
															},
															"nodeType": "YulIf",
															"src": "1503:50:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1562:29:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1578:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1586:4:37",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1574:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1574:17:37"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1562:8:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1651:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1660:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1663:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1653:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1653:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1653:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1614:6:37"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1626:1:37",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1629:6:37"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1622:3:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1622:14:37"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1610:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1610:27:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1639:4:37",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1606:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1606:38:37"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1646:3:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1603:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1603:47:37"
															},
															"nodeType": "YulIf",
															"src": "1600:67:37"
														}
													]
												},
												"name": "abi_decode_array_bytes32_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1353:6:37",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1361:3:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1369:8:37",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1379:6:37",
														"type": ""
													}
												],
												"src": "1306:367:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1783:332:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1829:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1838:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1841:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1831:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1831:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1831:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1804:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1813:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1800:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1800:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1825:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1796:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1796:32:37"
															},
															"nodeType": "YulIf",
															"src": "1793:52:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1854:37:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1881:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1868:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1868:23:37"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1858:6:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1934:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1943:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1946:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1936:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1936:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1936:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1906:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1914:18:37",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1903:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1903:30:37"
															},
															"nodeType": "YulIf",
															"src": "1900:50:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1959:96:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2027:9:37"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2038:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2023:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:22:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2047:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_bytes32_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "1985:37:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:70:37"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "1963:8:37",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "1973:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2064:18:37",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "2074:8:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2064:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2091:18:37",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "2101:8:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2091:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1741:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1752:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1764:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1772:6:37",
														"type": ""
													}
												],
												"src": "1678:437:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2192:275:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2241:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2250:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2253:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2243:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2243:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2243:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2220:6:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2228:4:37",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2216:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2216:17:37"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2235:3:37"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2212:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2212:27:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2205:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2205:35:37"
															},
															"nodeType": "YulIf",
															"src": "2202:55:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2266:30:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2289:6:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2276:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:20:37"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2266:6:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2339:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2348:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2351:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2341:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2341:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2341:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2311:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2319:18:37",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2308:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:30:37"
															},
															"nodeType": "YulIf",
															"src": "2305:50:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2364:29:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2380:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2388:4:37",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2376:17:37"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "2364:8:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2445:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2454:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2457:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2447:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2447:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2447:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2416:6:37"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2424:6:37"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2412:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2412:19:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2433:4:37",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:30:37"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2440:3:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2405:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2405:39:37"
															},
															"nodeType": "YulIf",
															"src": "2402:59:37"
														}
													]
												},
												"name": "abi_decode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2155:6:37",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2163:3:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "2171:8:37",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2181:6:37",
														"type": ""
													}
												],
												"src": "2120:347:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2612:486:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2659:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2668:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2671:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2661:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2661:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2661:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2633:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2642:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2629:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2629:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2654:3:37",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2625:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2625:33:37"
															},
															"nodeType": "YulIf",
															"src": "2622:53:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2684:39:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2713:9:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2694:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2694:29:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2684:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2732:48:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2765:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2776:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2761:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2761:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2742:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2742:38:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2732:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2789:42:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2816:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2827:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2799:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2799:32:37"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2789:6:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2840:46:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2871:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2882:2:37",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2867:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2867:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2854:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:32:37"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2844:6:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2929:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2938:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2941:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2931:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2931:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2931:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2901:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2909:18:37",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2898:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2898:30:37"
															},
															"nodeType": "YulIf",
															"src": "2895:50:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2954:84:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3010:9:37"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3021:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3006:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:22:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3030:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "2980:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2980:58:37"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "2958:8:37",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "2968:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3047:18:37",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "3057:8:37"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3047:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3074:18:37",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "3084:8:37"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "3074:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2546:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2557:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2569:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2577:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2585:6:37",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2593:6:37",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2601:6:37",
														"type": ""
													}
												],
												"src": "2472:626:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3202:149:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3212:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3224:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3235:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3220:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3220:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3212:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3254:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3269:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3277:66:37",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3265:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3265:79:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3247:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3247:98:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3247:98:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3182:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3193:4:37",
														"type": ""
													}
												],
												"src": "3103:248:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3462:371:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3508:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3517:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3520:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3510:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3510:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3510:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3483:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3492:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3479:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3479:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3504:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3475:32:37"
															},
															"nodeType": "YulIf",
															"src": "3472:52:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3533:33:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3556:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3543:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3543:23:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3533:6:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3575:46:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3606:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3617:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3602:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3602:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3589:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3589:32:37"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3579:6:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3664:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3673:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3676:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3666:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3666:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3666:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3636:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3644:18:37",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3633:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3633:30:37"
															},
															"nodeType": "YulIf",
															"src": "3630:50:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3689:84:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3745:9:37"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3756:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3741:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3741:22:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3765:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3715:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3715:58:37"
															},
															"variables": [
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "3693:8:37",
																	"type": ""
																},
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "3703:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3782:18:37",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "3792:8:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3782:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3809:18:37",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "3819:8:37"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3809:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3412:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3423:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3435:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3443:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3451:6:37",
														"type": ""
													}
												],
												"src": "3356:477:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3939:125:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3949:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3961:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3972:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3957:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3957:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3949:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3991:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4006:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4014:42:37",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4002:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4002:55:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3984:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3984:74:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3984:74:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3908:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3919:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3930:4:37",
														"type": ""
													}
												],
												"src": "3838:226:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4194:592:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4240:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4252:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4242:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4242:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4242:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4215:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4224:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4211:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4211:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4236:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4207:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4207:32:37"
															},
															"nodeType": "YulIf",
															"src": "4204:52:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4265:37:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4292:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4279:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4279:23:37"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4269:6:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4311:28:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4321:18:37",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4315:2:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4366:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4375:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4378:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4368:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4368:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4368:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4354:6:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4362:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4351:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4351:14:37"
															},
															"nodeType": "YulIf",
															"src": "4348:34:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4391:84:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4447:9:37"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4458:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4443:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4443:22:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4467:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4417:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:58:37"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "4395:8:37",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "4405:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4484:18:37",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "4494:8:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4484:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4511:18:37",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "4521:8:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4511:6:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4538:48:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4571:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4582:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4567:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4567:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4554:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4554:32:37"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4542:8:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4615:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4624:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4627:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4617:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4617:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4617:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4601:8:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4611:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4598:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4598:16:37"
															},
															"nodeType": "YulIf",
															"src": "4595:36:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4640:86:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4696:9:37"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4707:8:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4692:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4692:24:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4718:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4666:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4666:60:37"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "4644:8:37",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "4654:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4735:18:37",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "4745:8:37"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4735:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4762:18:37",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "4772:8:37"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4762:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4136:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4147:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4159:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4167:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4175:6:37",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4183:6:37",
														"type": ""
													}
												],
												"src": "4069:717:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4892:76:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4902:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4914:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4925:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4910:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4910:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4902:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4944:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4955:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4937:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4937:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4937:25:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4861:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4872:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4883:4:37",
														"type": ""
													}
												],
												"src": "4791:177:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5043:110:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5089:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5098:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5101:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5091:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5091:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5091:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5064:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5073:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5060:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5060:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5085:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5056:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5056:32:37"
															},
															"nodeType": "YulIf",
															"src": "5053:52:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5114:33:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5137:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5124:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:23:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5114:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5009:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5020:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5032:6:37",
														"type": ""
													}
												],
												"src": "4973:180:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5245:161:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5291:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5300:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5303:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5293:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5293:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5293:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5266:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5275:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5262:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5262:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5287:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5258:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5258:32:37"
															},
															"nodeType": "YulIf",
															"src": "5255:52:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5316:33:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5339:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5326:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5326:23:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5316:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5358:42:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5385:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5396:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5381:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5381:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5368:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5368:32:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5358:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5203:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5214:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5226:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5234:6:37",
														"type": ""
													}
												],
												"src": "5158:248:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5547:332:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5593:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5602:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5605:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5595:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5595:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5595:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5568:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5577:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5564:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5564:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5589:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5560:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5560:32:37"
															},
															"nodeType": "YulIf",
															"src": "5557:52:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5618:37:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5645:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5632:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:23:37"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5622:6:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5698:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5707:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5710:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5700:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5700:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5700:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5670:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5678:18:37",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5667:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5667:30:37"
															},
															"nodeType": "YulIf",
															"src": "5664:50:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5723:96:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5791:9:37"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5802:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5787:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5787:22:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5811:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_bytes32_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "5749:37:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5749:70:37"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "5727:8:37",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "5737:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5828:18:37",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "5838:8:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5828:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5855:18:37",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "5865:8:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5855:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_Transaction_$2119_calldata_ptr_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5505:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5516:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5528:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5536:6:37",
														"type": ""
													}
												],
												"src": "5411:468:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6073:655:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6119:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6128:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6131:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6121:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6121:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6121:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6094:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6103:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6090:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6090:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6115:2:37",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6086:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "6086:32:37"
															},
															"nodeType": "YulIf",
															"src": "6083:52:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6144:37:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6171:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6158:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "6158:23:37"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "6148:6:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6190:28:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6200:18:37",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6194:2:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6245:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6254:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6257:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6247:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6247:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6247:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6233:6:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6241:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6230:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "6230:14:37"
															},
															"nodeType": "YulIf",
															"src": "6227:34:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6270:96:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6338:9:37"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6349:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6334:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6334:22:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6358:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_bytes32_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "6296:37:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "6296:70:37"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "6274:8:37",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "6284:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6375:18:37",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "6385:8:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6375:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6402:18:37",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "6412:8:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6402:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6429:42:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6456:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6467:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6452:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6452:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6439:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "6439:32:37"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6480:48:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6513:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6524:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6509:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6509:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6496:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "6496:32:37"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6484:8:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6557:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6566:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6569:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6559:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6559:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6559:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6543:8:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6553:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6540:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "6540:16:37"
															},
															"nodeType": "YulIf",
															"src": "6537:36:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6582:86:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6638:9:37"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6649:8:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:24:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6660:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "6608:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "6608:60:37"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "6586:8:37",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "6596:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6677:18:37",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "6687:8:37"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6677:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6704:18:37",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "6714:8:37"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "6704:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_Transaction_$2119_calldata_ptr_$dyn_calldata_ptrt_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6007:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6018:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6030:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6038:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6046:6:37",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6054:6:37",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6062:6:37",
														"type": ""
													}
												],
												"src": "5884:844:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6946:250:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6956:27:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6968:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6979:3:37",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6964:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "6964:19:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6956:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6999:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7010:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6992:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "6992:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6992:25:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7037:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7048:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7033:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7033:18:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7053:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7026:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "7026:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7026:34:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7080:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7091:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7076:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7076:18:37"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7096:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7069:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "7069:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7069:34:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7123:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7134:2:37",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7119:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7119:18:37"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "7139:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7112:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "7112:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7112:34:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7166:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7177:3:37",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7162:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7162:19:37"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "7183:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7155:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "7155:35:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7155:35:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6883:9:37",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6894:6:37",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6902:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6910:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6918:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6926:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6937:4:37",
														"type": ""
													}
												],
												"src": "6733:463:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7271:110:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7317:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7326:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7329:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7319:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7319:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7319:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7292:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7301:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7288:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7288:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7313:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7284:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "7284:32:37"
															},
															"nodeType": "YulIf",
															"src": "7281:52:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7342:33:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7365:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7352:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "7352:23:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7237:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7248:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7260:6:37",
														"type": ""
													}
												],
												"src": "7201:180:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7487:76:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7497:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7509:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7520:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7505:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7497:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7539:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7550:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7532:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "7532:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7532:25:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7456:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7467:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7478:4:37",
														"type": ""
													}
												],
												"src": "7386:177:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7634:184:37",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7644:10:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7653:1:37",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7648:1:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7713:63:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7738:3:37"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7743:1:37"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7734:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7734:11:37"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "7757:3:37"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7762:1:37"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7753:3:37"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7753:11:37"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7747:5:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7747:18:37"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7727:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7727:39:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7727:39:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7674:1:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7677:6:37"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7671:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "7671:13:37"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7685:19:37",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7687:15:37",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7696:1:37"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7699:2:37",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7692:3:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7692:10:37"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7687:1:37"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7667:3:37",
																"statements": []
															},
															"src": "7663:113:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7796:3:37"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7801:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7792:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7792:16:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7810:1:37",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7785:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "7785:27:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7785:27:37"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7612:3:37",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7617:3:37",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7622:6:37",
														"type": ""
													}
												],
												"src": "7568:250:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7873:280:37",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7883:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7903:5:37"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7897:5:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "7897:12:37"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7887:6:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7925:3:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7930:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7918:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "7918:19:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7918:19:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7985:5:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7992:4:37",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7981:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7981:16:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8003:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8008:4:37",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7999:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7999:14:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8015:6:37"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7946:34:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "7946:76:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7946:76:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8031:116:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8046:3:37"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "8059:6:37"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8067:2:37",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "8055:3:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8055:15:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8072:66:37",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "8051:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8051:88:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8042:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8042:98:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8142:4:37",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8038:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "8038:109:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8031:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7850:5:37",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7857:3:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7865:3:37",
														"type": ""
													}
												],
												"src": "7823:330:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8279:99:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8296:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8307:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8289:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "8289:21:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8289:21:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8319:53:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8345:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8357:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8368:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8353:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8353:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "8327:17:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "8327:45:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8319:4:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8248:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8259:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8270:4:37",
														"type": ""
													}
												],
												"src": "8158:220:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8415:152:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8432:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8435:77:37",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "8425:88:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8425:88:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8529:1:37",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8532:4:37",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8522:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "8522:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8522:15:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8553:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8556:4:37",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8546:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "8546:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8546:15:37"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "8383:184:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8651:901:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8697:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8706:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8709:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8699:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8699:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8699:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8672:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8681:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8668:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8668:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8693:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8664:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "8664:32:37"
															},
															"nodeType": "YulIf",
															"src": "8661:52:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8722:37:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8749:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8736:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "8736:23:37"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8726:6:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8768:28:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8778:18:37",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8772:2:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8823:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8832:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8835:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8825:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8825:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8825:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8811:6:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8819:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8808:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "8808:14:37"
															},
															"nodeType": "YulIf",
															"src": "8805:34:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8848:32:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8862:9:37"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8873:6:37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8858:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "8858:22:37"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "8852:2:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8928:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8937:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8940:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8930:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8930:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8930:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "8907:2:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8911:4:37",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8903:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8903:13:37"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8918:7:37"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8899:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8899:27:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8892:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "8892:35:37"
															},
															"nodeType": "YulIf",
															"src": "8889:55:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8953:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "8976:2:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8963:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "8963:16:37"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "8957:2:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9002:22:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9004:16:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9004:18:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9004:18:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "8994:2:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8998:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8991:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "8991:10:37"
															},
															"nodeType": "YulIf",
															"src": "8988:36:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9033:76:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9043:66:37",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "9037:2:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9118:23:37",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9138:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9132:5:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "9132:9:37"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "9122:6:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9150:71:37",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9172:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "9196:2:37"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9200:4:37",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "9192:3:37"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9192:13:37"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "9207:2:37"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "9188:3:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9188:22:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9212:2:37",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9184:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9184:31:37"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "9217:2:37"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9180:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9180:40:37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9168:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "9168:53:37"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "9154:10:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9280:22:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9282:16:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9282:18:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9282:18:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9239:10:37"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9251:2:37"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9236:2:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9236:18:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9259:10:37"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9271:6:37"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9256:2:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9256:22:37"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9233:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "9233:46:37"
															},
															"nodeType": "YulIf",
															"src": "9230:72:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9318:2:37",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "9322:10:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9311:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "9311:22:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9311:22:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9349:6:37"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "9357:2:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9342:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "9342:18:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9342:18:37"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9406:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9415:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9418:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9408:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9408:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9408:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "9383:2:37"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "9387:2:37"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9379:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9379:11:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9392:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9375:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9375:20:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9397:7:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9372:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "9372:33:37"
															},
															"nodeType": "YulIf",
															"src": "9369:53:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9448:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9456:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9444:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9444:15:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "9465:2:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9469:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9461:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9461:11:37"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "9474:2:37"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "9431:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "9431:46:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9431:46:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "9501:6:37"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "9509:2:37"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9497:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9497:15:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9514:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9493:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9493:24:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9519:1:37",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9486:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:35:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9486:35:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9530:16:37",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "9540:6:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9530:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8617:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8628:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8640:6:37",
														"type": ""
													}
												],
												"src": "8572:980:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9643:233:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9689:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9698:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9701:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9691:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9691:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9691:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9664:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9673:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9660:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9660:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9685:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9656:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "9656:32:37"
															},
															"nodeType": "YulIf",
															"src": "9653:52:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9714:36:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9740:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9727:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "9727:23:37"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9718:5:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9783:5:37"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "9759:23:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "9759:30:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9759:30:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9798:15:37",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9808:5:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9798:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9822:48:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9855:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9866:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9851:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9851:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9832:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "9832:38:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9822:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9601:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9612:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9624:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9632:6:37",
														"type": ""
													}
												],
												"src": "9557:319:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10108:983:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10155:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10164:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10167:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10157:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10157:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10157:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10129:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10138:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10125:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10125:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10150:3:37",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10121:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "10121:33:37"
															},
															"nodeType": "YulIf",
															"src": "10118:53:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10180:39:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10209:9:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10190:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "10190:29:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10180:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10228:48:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10261:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10272:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10257:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10257:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10238:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "10238:38:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "10228:6:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10285:46:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10316:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10327:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10312:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10312:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10299:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "10299:32:37"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "10289:6:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10340:28:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10350:18:37",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10344:2:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10395:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10404:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10407:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10397:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10397:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10397:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10383:6:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10391:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10380:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "10380:14:37"
															},
															"nodeType": "YulIf",
															"src": "10377:34:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10420:96:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10488:9:37"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10499:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10484:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10484:22:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10508:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_bytes32_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "10446:37:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "10446:70:37"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "10424:8:37",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "10434:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10525:18:37",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "10535:8:37"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "10525:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10552:18:37",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "10562:8:37"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "10552:6:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10579:48:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10612:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10623:2:37",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10608:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10608:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10595:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "10595:32:37"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "10583:8:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10656:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10665:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10668:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10658:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10658:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10658:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "10642:8:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10652:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10639:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "10639:16:37"
															},
															"nodeType": "YulIf",
															"src": "10636:36:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10681:98:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10749:9:37"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "10760:8:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10745:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10745:24:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10771:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_bytes32_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "10707:37:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "10707:72:37"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "10685:8:37",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "10695:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10788:18:37",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "10798:8:37"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "10788:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10815:18:37",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "10825:8:37"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "10815:6:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10842:49:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10875:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10886:3:37",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10871:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10871:19:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10858:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "10858:33:37"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "10846:8:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10920:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10929:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10932:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10922:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10922:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10922:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "10906:8:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10916:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10903:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "10903:16:37"
															},
															"nodeType": "YulIf",
															"src": "10900:36:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10945:86:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11001:9:37"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "11012:8:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10997:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10997:24:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11023:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "10971:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "10971:60:37"
															},
															"variables": [
																{
																	"name": "value6_1",
																	"nodeType": "YulTypedName",
																	"src": "10949:8:37",
																	"type": ""
																},
																{
																	"name": "value7_1",
																	"nodeType": "YulTypedName",
																	"src": "10959:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11040:18:37",
															"value": {
																"name": "value6_1",
																"nodeType": "YulIdentifier",
																"src": "11050:8:37"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "11040:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11067:18:37",
															"value": {
																"name": "value7_1",
																"nodeType": "YulIdentifier",
																"src": "11077:8:37"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "11067:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10018:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10029:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10041:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10049:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10057:6:37",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10065:6:37",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10073:6:37",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "10081:6:37",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "10089:6:37",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "10097:6:37",
														"type": ""
													}
												],
												"src": "9881:1210:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11183:161:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11229:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11238:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11241:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11231:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11231:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11231:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11204:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11213:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11200:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11200:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11225:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11196:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "11196:32:37"
															},
															"nodeType": "YulIf",
															"src": "11193:52:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11254:33:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11277:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11264:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "11264:23:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11254:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11296:42:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11323:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11334:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11319:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11319:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11306:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "11306:32:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "11296:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11141:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11152:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11164:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11172:6:37",
														"type": ""
													}
												],
												"src": "11096:248:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11506:538:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11553:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11562:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11565:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11555:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11555:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11555:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11527:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11536:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11523:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11523:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11548:3:37",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11519:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "11519:33:37"
															},
															"nodeType": "YulIf",
															"src": "11516:53:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11578:39:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11607:9:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11588:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "11588:29:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11578:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11626:48:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11659:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11670:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11655:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11655:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11636:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "11636:38:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "11626:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11683:42:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11710:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11721:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11706:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11706:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11693:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "11693:32:37"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "11683:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11734:42:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11761:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11772:2:37",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11757:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11757:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11744:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "11744:32:37"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "11734:6:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11785:47:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11816:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11827:3:37",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11812:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11812:19:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11799:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "11799:33:37"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "11789:6:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11875:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11884:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11887:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11877:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11877:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11877:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11847:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11855:18:37",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11844:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "11844:30:37"
															},
															"nodeType": "YulIf",
															"src": "11841:50:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11900:84:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11956:9:37"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11967:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11952:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11952:22:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11976:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "11926:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "11926:58:37"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "11904:8:37",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "11914:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11993:18:37",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "12003:8:37"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "11993:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12020:18:37",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "12030:8:37"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "12020:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11432:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11443:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11455:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11463:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11471:6:37",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11479:6:37",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "11487:6:37",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "11495:6:37",
														"type": ""
													}
												],
												"src": "11349:695:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12178:198:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12188:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12200:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12211:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12196:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "12196:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12188:4:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12223:52:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12233:42:37",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12227:2:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12291:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12306:6:37"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12314:2:37"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12302:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12302:15:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12284:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "12284:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12284:34:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12338:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12349:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12334:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12334:18:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12358:6:37"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12366:2:37"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12354:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12354:15:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12327:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "12327:43:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12327:43:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12139:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12150:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12158:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12169:4:37",
														"type": ""
													}
												],
												"src": "12049:327:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12413:152:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12430:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12433:77:37",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12423:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "12423:88:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12423:88:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12527:1:37",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12530:4:37",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12520:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "12520:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12520:15:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12551:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12554:4:37",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12544:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "12544:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12544:15:37"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12381:184:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12679:76:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12689:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12701:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12712:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12697:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "12697:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12689:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12731:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12742:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12724:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "12724:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12724:25:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12648:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12659:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12670:4:37",
														"type": ""
													}
												],
												"src": "12570:185:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12806:114:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12816:29:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "12838:6:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "12825:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "12825:20:37"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12816:5:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12898:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12907:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12910:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12900:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12900:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12900:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12867:5:37"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "12888:5:37"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "12881:6:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12881:13:37"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12874:6:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12874:21:37"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12864:2:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12864:32:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12857:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "12857:40:37"
															},
															"nodeType": "YulIf",
															"src": "12854:60:37"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "12785:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12796:5:37",
														"type": ""
													}
												],
												"src": "12760:160:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12991:259:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13008:3:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13013:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13001:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "13001:19:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13001:19:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13046:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13051:4:37",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13042:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13042:14:37"
																	},
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "13058:5:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13065:6:37"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "13029:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "13029:43:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13029:43:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "13096:3:37"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "13101:6:37"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13092:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13092:16:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13110:4:37",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13088:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13088:27:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13117:1:37",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13081:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "13081:38:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13081:38:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13128:116:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "13143:3:37"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "13156:6:37"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13164:2:37",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "13152:3:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13152:15:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13169:66:37",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "13148:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13148:88:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13139:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13139:98:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13239:4:37",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13135:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "13135:109:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13128:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "12960:5:37",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12967:6:37",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12975:3:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12983:3:37",
														"type": ""
													}
												],
												"src": "12925:325:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13353:1930:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13370:3:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13375:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13363:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "13363:19:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13363:19:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13391:14:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13401:4:37",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13395:2:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13414:31:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13437:3:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13442:2:37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13433:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "13433:12:37"
															},
															"variables": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulTypedName",
																	"src": "13418:11:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13454:24:37",
															"value": {
																"name": "updated_pos",
																"nodeType": "YulIdentifier",
																"src": "13467:11:37"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nodeType": "YulTypedName",
																	"src": "13458:5:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13487:18:37",
															"value": {
																"name": "updated_pos",
																"nodeType": "YulIdentifier",
																"src": "13494:11:37"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13487:3:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13514:38:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nodeType": "YulIdentifier",
																		"src": "13530:5:37"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13541:1:37",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13544:6:37"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13537:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13537:14:37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13526:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "13526:26:37"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "13518:4:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13561:19:37",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13575:5:37"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "13565:6:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13589:10:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13598:1:37",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13593:1:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13657:1600:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "13678:3:37"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "13687:4:37"
																						},
																						{
																							"name": "pos_1",
																							"nodeType": "YulIdentifier",
																							"src": "13693:5:37"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "13683:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13683:16:37"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13671:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13671:29:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13671:29:37"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13713:46:37",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "13752:6:37"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "13739:12:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13739:20:37"
																		},
																		"variables": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulTypedName",
																				"src": "13717:18:37",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "13908:16:37",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13917:1:37",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13920:1:37",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "13910:6:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13910:12:37"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13910:12:37"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "rel_offset_of_tail",
																							"nodeType": "YulIdentifier",
																							"src": "13786:18:37"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "calldatasize",
																												"nodeType": "YulIdentifier",
																												"src": "13814:12:37"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "13814:14:37"
																										},
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "13830:5:37"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "13810:3:37"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13810:26:37"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "13838:66:37",
																									"type": "",
																									"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13806:3:37"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13806:99:37"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nodeType": "YulIdentifier",
																						"src": "13782:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13782:124:37"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "13775:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13775:132:37"
																		},
																		"nodeType": "YulIf",
																		"src": "13772:152:37"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13937:45:37",
																		"value": {
																			"arguments": [
																				{
																					"name": "rel_offset_of_tail",
																					"nodeType": "YulIdentifier",
																					"src": "13956:18:37"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "13976:5:37"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13952:3:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13952:30:37"
																		},
																		"variables": [
																			{
																				"name": "value_1",
																				"nodeType": "YulTypedName",
																				"src": "13941:7:37",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13995:14:37",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14005:4:37",
																			"type": "",
																			"value": "0xc0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "13999:2:37",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "14029:4:37"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value_1",
																											"nodeType": "YulIdentifier",
																											"src": "14065:7:37"
																										}
																									],
																									"functionName": {
																										"name": "abi_decode_bool",
																										"nodeType": "YulIdentifier",
																										"src": "14049:15:37"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "14049:24:37"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nodeType": "YulIdentifier",
																								"src": "14042:6:37"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14042:32:37"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nodeType": "YulIdentifier",
																						"src": "14035:6:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14035:40:37"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14022:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14022:54:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14022:54:37"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "14100:4:37"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "14106:2:37"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14096:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14096:13:37"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "value_1",
																													"nodeType": "YulIdentifier",
																													"src": "14145:7:37"
																												},
																												{
																													"name": "_1",
																													"nodeType": "YulIdentifier",
																													"src": "14154:2:37"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nodeType": "YulIdentifier",
																												"src": "14141:3:37"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14141:16:37"
																										}
																									],
																									"functionName": {
																										"name": "abi_decode_bool",
																										"nodeType": "YulIdentifier",
																										"src": "14125:15:37"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "14125:33:37"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nodeType": "YulIdentifier",
																								"src": "14118:6:37"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14118:41:37"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nodeType": "YulIdentifier",
																						"src": "14111:6:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14111:49:37"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14089:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14089:72:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14089:72:37"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14174:14:37",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14184:4:37",
																			"type": "",
																			"value": "0x40"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "14178:2:37",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "14212:4:37"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "14218:2:37"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14208:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14208:13:37"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "value_1",
																									"nodeType": "YulIdentifier",
																									"src": "14240:7:37"
																								},
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "14249:2:37"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14236:3:37"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14236:16:37"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "14223:12:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14223:30:37"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14201:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14201:53:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14201:53:37"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14267:14:37",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14277:4:37",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "14271:2:37",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "14305:4:37"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "14311:2:37"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14301:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14301:13:37"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value_1",
																											"nodeType": "YulIdentifier",
																											"src": "14343:7:37"
																										},
																										{
																											"name": "_4",
																											"nodeType": "YulIdentifier",
																											"src": "14352:2:37"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "14339:3:37"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "14339:16:37"
																								}
																							],
																							"functionName": {
																								"name": "abi_decode_address",
																								"nodeType": "YulIdentifier",
																								"src": "14320:18:37"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14320:36:37"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "14358:42:37",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "14316:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14316:85:37"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14294:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14294:108:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14294:108:37"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14415:14:37",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14425:4:37",
																			"type": "",
																			"value": "0x80"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "14419:2:37",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "14453:4:37"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "14459:2:37"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14449:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14449:13:37"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "value_1",
																									"nodeType": "YulIdentifier",
																									"src": "14481:7:37"
																								},
																								{
																									"name": "_5",
																									"nodeType": "YulIdentifier",
																									"src": "14490:2:37"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14477:3:37"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14477:16:37"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "14464:12:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14464:30:37"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14442:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14442:53:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14442:53:37"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14508:14:37",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "14518:4:37",
																			"type": "",
																			"value": "0xa0"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "14512:2:37",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14535:58:37",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value_1",
																							"nodeType": "YulIdentifier",
																							"src": "14580:7:37"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "14589:2:37"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14576:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14576:16:37"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "14563:12:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14563:30:37"
																		},
																		"variables": [
																			{
																				"name": "rel_offset_of_tail_1",
																				"nodeType": "YulTypedName",
																				"src": "14539:20:37",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "14746:16:37",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14755:1:37",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14758:1:37",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "14748:6:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14748:12:37"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "14748:12:37"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "rel_offset_of_tail_1",
																							"nodeType": "YulIdentifier",
																							"src": "14620:20:37"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "calldatasize",
																												"nodeType": "YulIdentifier",
																												"src": "14650:12:37"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14650:14:37"
																										},
																										{
																											"name": "value_1",
																											"nodeType": "YulIdentifier",
																											"src": "14666:7:37"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "14646:3:37"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "14646:28:37"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "14676:66:37",
																									"type": "",
																									"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "14642:3:37"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14642:101:37"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nodeType": "YulIdentifier",
																						"src": "14616:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14616:128:37"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "14609:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14609:136:37"
																		},
																		"nodeType": "YulIf",
																		"src": "14606:156:37"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14775:49:37",
																		"value": {
																			"arguments": [
																				{
																					"name": "rel_offset_of_tail_1",
																					"nodeType": "YulIdentifier",
																					"src": "14794:20:37"
																				},
																				{
																					"name": "value_1",
																					"nodeType": "YulIdentifier",
																					"src": "14816:7:37"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14790:3:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14790:34:37"
																		},
																		"variables": [
																			{
																				"name": "value_2",
																				"nodeType": "YulTypedName",
																				"src": "14779:7:37",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14837:37:37",
																		"value": {
																			"arguments": [
																				{
																					"name": "value_2",
																					"nodeType": "YulIdentifier",
																					"src": "14866:7:37"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "14853:12:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14853:21:37"
																		},
																		"variables": [
																			{
																				"name": "length_1",
																				"nodeType": "YulTypedName",
																				"src": "14841:8:37",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14887:31:37",
																		"value": {
																			"arguments": [
																				{
																					"name": "value_2",
																					"nodeType": "YulIdentifier",
																					"src": "14906:7:37"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "14915:2:37"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14902:3:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14902:16:37"
																		},
																		"variables": [
																			{
																				"name": "value_3",
																				"nodeType": "YulTypedName",
																				"src": "14891:7:37",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "14967:16:37",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14976:1:37",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14979:1:37",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "14969:6:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14969:12:37"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "14969:12:37"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "length_1",
																					"nodeType": "YulIdentifier",
																					"src": "14937:8:37"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14947:18:37",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "14934:2:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14934:32:37"
																		},
																		"nodeType": "YulIf",
																		"src": "14931:52:37"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "15043:16:37",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15052:1:37",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15055:1:37",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "15045:6:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15045:12:37"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15045:12:37"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "value_3",
																					"nodeType": "YulIdentifier",
																					"src": "15003:7:37"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "calldatasize",
																								"nodeType": "YulIdentifier",
																								"src": "15016:12:37"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15016:14:37"
																						},
																						{
																							"name": "length_1",
																							"nodeType": "YulIdentifier",
																							"src": "15032:8:37"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "15012:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15012:29:37"
																				}
																			],
																			"functionName": {
																				"name": "sgt",
																				"nodeType": "YulIdentifier",
																				"src": "14999:3:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14999:43:37"
																		},
																		"nodeType": "YulIf",
																		"src": "14996:63:37"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "15083:4:37"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "15089:2:37"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15079:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15079:13:37"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "15094:2:37"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15072:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15072:25:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15072:25:37"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15110:67:37",
																		"value": {
																			"arguments": [
																				{
																					"name": "value_3",
																					"nodeType": "YulIdentifier",
																					"src": "15144:7:37"
																				},
																				{
																					"name": "length_1",
																					"nodeType": "YulIdentifier",
																					"src": "15153:8:37"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "15167:4:37"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "15173:2:37"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15163:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15163:13:37"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_bytes_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "15118:25:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15118:59:37"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15110:4:37"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15190:25:37",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "15204:6:37"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "15212:2:37"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15200:3:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15200:15:37"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15190:6:37"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "15228:19:37",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "15239:3:37"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "15244:2:37"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15235:3:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15235:12:37"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "15228:3:37"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13619:1:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13622:6:37"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13616:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "13616:13:37"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13630:18:37",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13632:14:37",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13641:1:37"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13644:1:37",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13637:3:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13637:9:37"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13632:1:37"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13612:3:37",
																"statements": []
															},
															"src": "13608:1649:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15266:11:37",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "15273:4:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15266:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_struct_Transaction_calldata_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13322:5:37",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13329:6:37",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13337:3:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13345:3:37",
														"type": ""
													}
												],
												"src": "13255:2028:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15610:272:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15627:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15638:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15620:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "15620:21:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15620:21:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15661:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15672:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15657:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15657:18:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15677:1:37",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15650:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "15650:29:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15650:29:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15699:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15710:2:37",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15695:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15695:18:37"
																	},
																	{
																		"hexValue": "73656c663a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15715:7:37",
																		"type": "",
																		"value": "self:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15688:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "15688:35:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15688:35:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15743:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15754:4:37",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15739:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15739:20:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15761:3:37",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15732:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "15732:33:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15732:33:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15774:102:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15840:6:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15848:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15860:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15871:3:37",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15856:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15856:19:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_struct_Transaction_calldata_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "15782:57:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "15782:94:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15774:4:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845_t_array$_t_struct$_Transaction_$2119_calldata_ptr_$dyn_calldata_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$2119_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15571:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15582:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15590:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15601:4:37",
														"type": ""
													}
												],
												"src": "15288:594:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16136:190:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16153:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16164:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16146:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "16146:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16146:25:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16191:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16202:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16187:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16187:18:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16207:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16180:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "16180:30:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16180:30:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16219:101:37",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16285:6:37"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16293:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16305:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16316:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16301:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16301:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_struct_Transaction_calldata_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "16227:57:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "16227:93:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16219:4:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_struct$_Transaction_$2119_calldata_ptr_$dyn_calldata_ptr__to_t_uint256_t_array$_t_struct$_Transaction_$2119_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16089:9:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16100:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16108:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16116:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16127:4:37",
														"type": ""
													}
												],
												"src": "15887:439:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16488:158:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16505:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16516:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16498:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "16498:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16498:25:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16543:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16554:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16539:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16539:18:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16559:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16532:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "16532:30:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16532:30:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16571:69:37",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16605:6:37"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "16613:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16625:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16636:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16621:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16621:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "16579:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "16579:61:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16571:4:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16441:9:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16452:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16460:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16468:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16479:4:37",
														"type": ""
													}
												],
												"src": "16331:315:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16750:149:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16760:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16772:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16783:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16768:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "16768:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16760:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16802:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16817:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16825:66:37",
																				"type": "",
																				"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16813:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16813:79:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16795:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "16795:98:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16795:98:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1__to_t_bytes1__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16719:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16730:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16741:4:37",
														"type": ""
													}
												],
												"src": "16651:248:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17124:159:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17141:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17146:66:37",
																		"type": "",
																		"value": "0x0170122000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17134:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "17134:79:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17134:79:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "17233:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17238:1:37",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17229:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17229:11:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17242:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17222:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "17222:27:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17222:27:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17258:19:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17269:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17274:2:37",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17265:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "17265:12:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17258:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_26b70929d2fa0780c1c1464bfedd403dbaa218f98edb5cf8a3ef7b664ee22408_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17100:3:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17105:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17116:3:37",
														"type": ""
													}
												],
												"src": "16904:379:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17528:197:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17545:3:37"
																	},
																	{
																		"hexValue": "697066733a2f2f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17550:9:37",
																		"type": "",
																		"value": "ipfs://"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17538:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "17538:22:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17538:22:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17569:27:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17589:6:37"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17583:5:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "17583:13:37"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "17573:6:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17644:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17652:4:37",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17640:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17640:17:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "17663:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17668:1:37",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17659:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17659:11:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17672:6:37"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "17605:34:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "17605:74:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17605:74:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17688:31:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "17703:3:37"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "17708:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17699:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17699:16:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17717:1:37",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17695:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "17695:24:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17688:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17504:3:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17509:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17520:3:37",
														"type": ""
													}
												],
												"src": "17288:437:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17849:99:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17866:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17877:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17859:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "17859:21:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17859:21:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17889:53:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17915:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17927:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17938:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17923:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17923:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "17897:17:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "17897:45:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17889:4:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17818:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17829:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17840:4:37",
														"type": ""
													}
												],
												"src": "17730:218:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18082:119:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18092:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18104:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18115:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18100:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "18100:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18092:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18134:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18145:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18127:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "18127:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18127:25:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18172:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18183:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18168:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18168:18:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "18188:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18161:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "18161:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18161:34:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18043:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18054:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18062:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18073:4:37",
														"type": ""
													}
												],
												"src": "17953:248:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18333:241:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18343:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18355:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18366:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18351:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "18351:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18343:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18385:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18400:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18408:66:37",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18396:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18396:79:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18378:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "18378:98:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18378:98:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18496:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18507:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18492:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18492:18:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "18516:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18524:42:37",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18512:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18512:55:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18485:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "18485:83:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18485:83:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4_t_address__to_t_bytes4_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18294:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18305:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18313:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18324:4:37",
														"type": ""
													}
												],
												"src": "18206:368:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18855:315:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18872:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18877:66:37",
																		"type": "",
																		"value": "0x1901000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18865:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "18865:79:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18865:79:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "18964:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18969:1:37",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18960:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18960:11:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18973:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18953:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "18953:27:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18953:27:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "19000:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19005:2:37",
																				"type": "",
																				"value": "34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18996:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18996:12:37"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19018:2:37",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "19022:6:37"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "19014:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19014:15:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19031:66:37",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19010:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19010:88:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18989:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "18989:110:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18989:110:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "19119:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19124:2:37",
																				"type": "",
																				"value": "54"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19115:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19115:12:37"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19129:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19108:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "19108:28:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19108:28:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19145:19:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19156:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19161:2:37",
																		"type": "",
																		"value": "86"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19152:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "19152:12:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19145:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_uint256_t_address_t_bytes32__to_t_string_memory_ptr_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18815:3:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18820:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18828:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18836:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18847:3:37",
														"type": ""
													}
												],
												"src": "18579:591:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19281:281:37",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19291:51:37",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "19330:11:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "19317:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "19317:25:37"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "19295:18:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19490:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19499:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19502:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19492:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19492:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19492:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "19365:18:37"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "19393:12:37"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19393:14:37"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "19409:8:37"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "19389:3:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19389:29:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19420:66:37",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19385:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19385:102:37"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "19361:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19361:127:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19354:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "19354:135:37"
															},
															"nodeType": "YulIf",
															"src": "19351:155:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19515:41:37",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "19527:8:37"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "19537:18:37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19523:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "19523:33:37"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "19515:4:37"
																}
															]
														}
													]
												},
												"name": "access_calldata_tail_t_struct$_Transaction_$2119_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "19246:8:37",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "19256:11:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "19272:4:37",
														"type": ""
													}
												],
												"src": "19175:387:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19724:162:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19734:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19746:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19757:2:37",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19742:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "19742:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19734:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19776:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19787:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19769:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "19769:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19769:25:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19814:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19825:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19810:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19810:18:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19830:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19803:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "19803:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19803:34:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19857:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19868:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19853:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19853:18:37"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19873:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19846:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "19846:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19846:34:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19677:9:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19688:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19696:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19704:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19715:4:37",
														"type": ""
													}
												],
												"src": "19567:319:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19958:113:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20004:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20013:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20016:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20006:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20006:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20006:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19979:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19988:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19975:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19975:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20000:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19971:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "19971:32:37"
															},
															"nodeType": "YulIf",
															"src": "19968:52:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20029:36:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20055:9:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "20039:15:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "20039:26:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "20029:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19924:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19935:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19947:6:37",
														"type": ""
													}
												],
												"src": "19891:180:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20170:486:37",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20180:51:37",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "20219:11:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "20206:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "20206:25:37"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "20184:18:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20379:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20388:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20391:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20381:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20381:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20381:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "20254:18:37"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "20282:12:37"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "20282:14:37"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "20298:8:37"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "20278:3:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "20278:29:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20309:66:37",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20274:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20274:102:37"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "20250:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20250:127:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20243:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "20243:135:37"
															},
															"nodeType": "YulIf",
															"src": "20240:155:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20404:47:37",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "20422:8:37"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "20432:18:37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20418:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "20418:33:37"
															},
															"variables": [
																{
																	"name": "addr_1",
																	"nodeType": "YulTypedName",
																	"src": "20408:6:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20460:30:37",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nodeType": "YulIdentifier",
																		"src": "20483:6:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "20470:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "20470:20:37"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "20460:6:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20533:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20542:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20545:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20535:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20535:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20535:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20505:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20513:18:37",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20502:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "20502:30:37"
															},
															"nodeType": "YulIf",
															"src": "20499:50:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20558:25:37",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nodeType": "YulIdentifier",
																		"src": "20570:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20578:4:37",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20566:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "20566:17:37"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "20558:4:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20634:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20643:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20646:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20636:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20636:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20636:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "20599:4:37"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "20609:12:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20609:14:37"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "20625:6:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20605:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20605:27:37"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "20595:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "20595:38:37"
															},
															"nodeType": "YulIf",
															"src": "20592:58:37"
														}
													]
												},
												"name": "access_calldata_tail_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "20127:8:37",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "20137:11:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "20153:4:37",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20159:6:37",
														"type": ""
													}
												],
												"src": "20076:580:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20790:119:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20800:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20812:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20823:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20808:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "20808:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20800:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20842:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20853:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20835:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "20835:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20835:25:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20880:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20891:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20876:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20876:18:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20896:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20869:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "20869:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20869:34:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20751:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20762:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20770:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20781:4:37",
														"type": ""
													}
												],
												"src": "20661:248:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21044:201:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21082:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21091:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21094:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21084:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21084:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21084:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "21060:10:37"
																	},
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "21072:8:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21057:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "21057:24:37"
															},
															"nodeType": "YulIf",
															"src": "21054:44:37"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21131:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21140:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "21143:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "21133:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21133:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21133:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "21113:8:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21123:6:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21110:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "21110:20:37"
															},
															"nodeType": "YulIf",
															"src": "21107:40:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21156:36:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "21173:6:37"
																	},
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "21181:10:37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21169:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "21169:23:37"
															},
															"variableNames": [
																{
																	"name": "offsetOut",
																	"nodeType": "YulIdentifier",
																	"src": "21156:9:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21201:38:37",
															"value": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "21218:8:37"
																	},
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "21228:10:37"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "21214:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "21214:25:37"
															},
															"variableNames": [
																{
																	"name": "lengthOut",
																	"nodeType": "YulIdentifier",
																	"src": "21201:9:37"
																}
															]
														}
													]
												},
												"name": "calldata_array_index_range_access_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20978:6:37",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20986:6:37",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "20994:10:37",
														"type": ""
													},
													{
														"name": "endIndex",
														"nodeType": "YulTypedName",
														"src": "21006:8:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "offsetOut",
														"nodeType": "YulTypedName",
														"src": "21019:9:37",
														"type": ""
													},
													{
														"name": "lengthOut",
														"nodeType": "YulTypedName",
														"src": "21030:9:37",
														"type": ""
													}
												],
												"src": "20914:331:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21282:152:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21299:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21302:77:37",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21292:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "21292:88:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21292:88:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21396:1:37",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21399:4:37",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21389:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "21389:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21389:15:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21420:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21423:4:37",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21413:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "21413:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21413:15:37"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "21250:184:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21487:77:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21497:16:37",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21508:1:37"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21511:1:37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21504:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "21504:9:37"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "21497:3:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21536:22:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21538:16:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21538:18:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21538:18:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21528:1:37"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "21531:3:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "21525:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "21525:10:37"
															},
															"nodeType": "YulIf",
															"src": "21522:36:37"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "21470:1:37",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "21473:1:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "21479:3:37",
														"type": ""
													}
												],
												"src": "21439:125:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21760:201:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21777:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21788:2:37",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21770:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "21770:21:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21770:21:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21800:69:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21834:6:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21842:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21854:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21865:2:37",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21850:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21850:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "21808:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "21808:61:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21800:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21889:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21900:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21885:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21885:18:37"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21905:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21878:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "21878:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21878:34:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21932:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21943:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21928:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21928:18:37"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "21948:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21921:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "21921:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21921:34:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_slice_t_uint256_t_uint256__to_t_bytes_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21705:9:37",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "21716:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21724:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21732:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21740:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21751:4:37",
														"type": ""
													}
												],
												"src": "21569:392:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21998:152:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22015:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22018:77:37",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22008:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "22008:88:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22008:88:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22112:1:37",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22115:4:37",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22105:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "22105:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22105:15:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22136:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22139:4:37",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "22129:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "22129:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22129:15:37"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "21966:184:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22395:191:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22412:3:37"
																	},
																	{
																		"hexValue": "62",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22417:3:37",
																		"type": "",
																		"value": "b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22405:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "22405:16:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22405:16:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22430:27:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22450:6:37"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22444:5:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "22444:13:37"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "22434:6:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "22505:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22513:4:37",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22501:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22501:17:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "22524:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22529:1:37",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22520:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22520:11:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22533:6:37"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "22466:34:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "22466:74:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22466:74:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22549:31:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "22564:3:37"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "22569:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22560:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22560:16:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22578:1:37",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22556:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "22556:24:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "22549:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22371:3:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22376:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22387:3:37",
														"type": ""
													}
												],
												"src": "22155:431:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22738:142:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22755:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22766:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22748:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "22748:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22748:25:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22793:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22804:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22789:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22789:18:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22809:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22782:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "22782:30:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22782:30:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22821:53:37",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22847:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22859:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22870:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22855:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22855:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "22829:17:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "22829:45:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22821:4:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22699:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22710:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22718:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22729:4:37",
														"type": ""
													}
												],
												"src": "22591:289:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23076:250:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23093:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23104:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23086:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "23086:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23086:25:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23131:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23142:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23127:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23127:18:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "23151:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23159:42:37",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "23147:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23147:55:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23120:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "23120:83:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23120:83:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23223:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23234:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23219:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23219:18:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23239:2:37",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23212:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "23212:30:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23212:30:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23251:69:37",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23285:6:37"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "23293:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23305:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23316:2:37",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23301:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23301:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "23259:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "23259:61:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23251:4:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_bytes_calldata_ptr_slice__to_t_bytes32_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23021:9:37",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "23032:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23040:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23048:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23056:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23067:4:37",
														"type": ""
													}
												],
												"src": "22885:441:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23460:115:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23477:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23488:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23470:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "23470:21:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23470:21:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23500:69:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23534:6:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23542:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23554:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23565:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23550:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23550:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "23508:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "23508:61:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23500:4:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23421:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23432:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23440:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23451:4:37",
														"type": ""
													}
												],
												"src": "23331:244:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23629:79:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23639:17:37",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23651:1:37"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "23654:1:37"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "23647:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "23647:9:37"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "23639:4:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "23680:22:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "23682:16:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "23682:18:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "23682:18:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "23671:4:37"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "23677:1:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "23668:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "23668:11:37"
															},
															"nodeType": "YulIf",
															"src": "23665:37:37"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "23611:1:37",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "23614:1:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "23620:4:37",
														"type": ""
													}
												],
												"src": "23580:128:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23870:158:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23887:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23898:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23880:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "23880:21:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23880:21:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23910:69:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23944:6:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23952:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23964:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23975:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23960:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23960:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "23918:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "23918:61:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23910:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23999:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24010:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23995:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23995:18:37"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "24015:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23988:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "23988:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23988:34:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_t_bytes32__to_t_bytes_memory_ptr_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23823:9:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23834:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23842:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23850:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23861:4:37",
														"type": ""
													}
												],
												"src": "23713:315:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24188:169:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24205:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24216:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24198:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "24198:21:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24198:21:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24228:69:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24262:6:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24270:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24282:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24293:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24278:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24278:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "24236:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "24236:61:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24228:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24317:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24328:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24313:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24313:18:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "24337:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24345:4:37",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "24333:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24333:17:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24306:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "24306:45:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24306:45:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24141:9:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24152:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24160:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24168:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24179:4:37",
														"type": ""
													}
												],
												"src": "24033:324:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24543:217:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24553:27:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24565:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24576:3:37",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24561:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "24561:19:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24553:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24596:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24607:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24589:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "24589:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24589:25:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24634:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24645:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24630:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24630:18:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "24654:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24662:4:37",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "24650:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24650:17:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24623:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "24623:45:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24623:45:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24688:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24699:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24684:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24684:18:37"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "24704:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24677:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "24677:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24677:34:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24731:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24742:2:37",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24727:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24727:18:37"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "24747:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24720:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "24720:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24720:34:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24488:9:37",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "24499:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24507:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24515:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24523:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24534:4:37",
														"type": ""
													}
												],
												"src": "24362:398:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24985:160:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25002:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25007:66:37",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24995:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "24995:79:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24995:79:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "25094:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25099:2:37",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25090:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25090:12:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25104:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25083:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "25083:28:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25083:28:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25120:19:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25131:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25136:2:37",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25127:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "25127:12:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25120:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24961:3:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24966:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24977:3:37",
														"type": ""
													}
												],
												"src": "24765:380:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25329:217:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25346:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25357:2:37",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25339:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "25339:21:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25339:21:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25369:69:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25403:6:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25411:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25423:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25434:2:37",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25419:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25419:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "25377:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "25377:61:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25369:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25458:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25469:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25454:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25454:18:37"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "25474:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25447:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "25447:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25447:34:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25501:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25512:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25497:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25497:18:37"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "25531:6:37"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "25524:6:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "25524:14:37"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "25517:6:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25517:22:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25490:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "25490:50:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25490:50:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_t_uint256_t_bool__to_t_bytes_memory_ptr_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25274:9:37",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "25285:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25293:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25301:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25309:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25320:4:37",
														"type": ""
													}
												],
												"src": "25150:396:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25714:158:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25731:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25742:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25724:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "25724:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25724:25:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25769:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25780:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25765:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25765:18:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25785:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25758:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "25758:30:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25758:30:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25797:69:37",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25831:6:37"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "25839:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25851:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25862:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25847:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25847:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "25805:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "25805:61:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25797:4:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr_slice__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25667:9:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25678:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25686:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25694:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25705:4:37",
														"type": ""
													}
												],
												"src": "25551:321:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25957:169:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26003:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26012:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "26015:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "26005:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "26005:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "26005:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25978:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25987:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25974:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25974:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25999:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "25970:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "25970:32:37"
															},
															"nodeType": "YulIf",
															"src": "25967:52:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "26028:29:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26047:9:37"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "26041:5:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "26041:16:37"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "26032:5:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "26090:5:37"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "26066:23:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "26066:30:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26066:30:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26105:15:37",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "26115:5:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "26105:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25923:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "25934:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25946:6:37",
														"type": ""
													}
												],
												"src": "25877:249:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26407:235:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26424:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26429:66:37",
																		"type": "",
																		"value": "0x53657175656e6365206e657374656420636f6e6669673a0a0000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26417:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "26417:79:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26417:79:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "26516:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26521:2:37",
																				"type": "",
																				"value": "24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26512:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26512:12:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26526:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26505:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "26505:28:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26505:28:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "26553:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26558:2:37",
																				"type": "",
																				"value": "56"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26549:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26549:12:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "26563:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26542:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "26542:28:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26542:28:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "26590:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26595:2:37",
																				"type": "",
																				"value": "88"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26586:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26586:12:37"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "26600:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26579:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "26579:28:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26579:28:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26616:20:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26627:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26632:3:37",
																		"type": "",
																		"value": "120"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26623:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "26623:13:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26616:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_58d1832f15932b40f8da147bd99ac98efab990f25a786a2229b05ee5f5be41a7_t_bytes32_t_uint256_t_uint256__to_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26367:3:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "26372:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "26380:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26388:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26399:3:37",
														"type": ""
													}
												],
												"src": "26131:511:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26867:160:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26884:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26889:66:37",
																		"type": "",
																		"value": "0x53657175656e636520737461746963206469676573743a0a0000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26877:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "26877:79:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26877:79:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "26976:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26981:2:37",
																				"type": "",
																				"value": "24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26972:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26972:12:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26986:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26965:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "26965:28:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26965:28:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27002:19:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27013:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27018:2:37",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27009:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "27009:12:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27002:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_583557e68bca91e5400591dbc9ae31043113c95e3cd985463ae532f51d706f8c_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26843:3:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26848:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26859:3:37",
														"type": ""
													}
												],
												"src": "26647:380:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27308:315:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27325:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27330:66:37",
																		"type": "",
																		"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27318:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "27318:79:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27318:79:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "27417:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27422:1:37",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27413:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27413:11:37"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "27434:2:37",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "27438:6:37"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "27430:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "27430:15:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27447:66:37",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "27426:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27426:88:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27406:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "27406:109:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27406:109:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "27535:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27540:2:37",
																				"type": "",
																				"value": "21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27531:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27531:12:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "27545:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27524:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "27524:28:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27524:28:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "27572:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27577:2:37",
																				"type": "",
																				"value": "53"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27568:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27568:12:37"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "27582:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27561:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "27561:28:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27561:28:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27598:19:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27609:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27614:2:37",
																		"type": "",
																		"value": "85"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27605:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "27605:12:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27598:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27268:3:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "27273:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "27281:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "27289:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27300:3:37",
														"type": ""
													}
												],
												"src": "27032:591:37"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_array_bytes32_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Transaction_$2119_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Transaction_$2119_calldata_ptr_$dyn_calldata_ptrt_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_bytes4t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_bytes32_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_rational_0_by_1__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_array_struct_Transaction_calldata_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        let updated_pos := add(pos, _1)\n        let pos_1 := updated_pos\n        pos := updated_pos\n        let tail := add(pos_1, shl(5, length))\n        let srcPtr := value\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, pos_1))\n            let rel_offset_of_tail := calldataload(srcPtr)\n            if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), value), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41))) { revert(0, 0) }\n            let value_1 := add(rel_offset_of_tail, value)\n            let _2 := 0xc0\n            mstore(tail, iszero(iszero(abi_decode_bool(value_1))))\n            mstore(add(tail, _1), iszero(iszero(abi_decode_bool(add(value_1, _1)))))\n            let _3 := 0x40\n            mstore(add(tail, _3), calldataload(add(value_1, _3)))\n            let _4 := 0x60\n            mstore(add(tail, _4), and(abi_decode_address(add(value_1, _4)), 0xffffffffffffffffffffffffffffffffffffffff))\n            let _5 := 0x80\n            mstore(add(tail, _5), calldataload(add(value_1, _5)))\n            let _6 := 0xa0\n            let rel_offset_of_tail_1 := calldataload(add(value_1, _6))\n            if iszero(slt(rel_offset_of_tail_1, add(sub(calldatasize(), value_1), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1))) { revert(0, 0) }\n            let value_2 := add(rel_offset_of_tail_1, value_1)\n            let length_1 := calldataload(value_2)\n            let value_3 := add(value_2, _1)\n            if gt(length_1, 0xffffffffffffffff) { revert(0, 0) }\n            if sgt(value_3, sub(calldatasize(), length_1)) { revert(0, 0) }\n            mstore(add(tail, _6), _2)\n            tail := abi_encode_bytes_calldata(value_3, length_1, add(tail, _2))\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        end := tail\n    }\n    function abi_encode_tuple_t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845_t_array$_t_struct$_Transaction_$2119_calldata_ptr_$dyn_calldata_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$2119_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 5)\n        mstore(add(headStart, 96), \"self:\")\n        mstore(add(headStart, 0x20), 128)\n        tail := abi_encode_array_struct_Transaction_calldata_dyn_calldata(value0, value1, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_struct$_Transaction_$2119_calldata_ptr_$dyn_calldata_ptr__to_t_uint256_t_array$_t_struct$_Transaction_$2119_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_struct_Transaction_calldata_dyn_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes1__to_t_bytes1__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff00000000000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_26b70929d2fa0780c1c1464bfedd403dbaa218f98edb5cf8a3ef7b664ee22408_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x0170122000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 4), value0)\n        end := add(pos, 36)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"ipfs://\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 7), length)\n        end := add(add(pos, length), 7)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes4_t_address__to_t_bytes4_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_uint256_t_address_t_bytes32__to_t_string_memory_ptr_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, 0x1901000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), and(shl(96, value1), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        mstore(add(pos, 54), value2)\n        end := add(pos, 86)\n    }\n    function access_calldata_tail_t_struct$_Transaction_$2119_calldata_ptr(base_ref, ptr_to_tail) -> addr\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_slice_t_uint256_t_uint256__to_t_bytes_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 96))\n        mstore(add(headStart, 32), value2)\n        mstore(add(headStart, 64), value3)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"b\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 1), length)\n        end := add(add(pos, length), 1)\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_bytes_calldata_ptr_slice__to_t_bytes32_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_bytes_calldata(value2, value3, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 32))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_bytes32__to_t_bytes_memory_ptr_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), value2)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), and(value2, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_uint256_t_bool__to_t_bytes_memory_ptr_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 96))\n        mstore(add(headStart, 32), value2)\n        mstore(add(headStart, 64), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr_slice__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_58d1832f15932b40f8da147bd99ac98efab990f25a786a2229b05ee5f5be41a7_t_bytes32_t_uint256_t_uint256__to_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, 0x53657175656e6365206e657374656420636f6e6669673a0a0000000000000000)\n        mstore(add(pos, 24), value0)\n        mstore(add(pos, 56), value1)\n        mstore(add(pos, 88), value2)\n        end := add(pos, 120)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_583557e68bca91e5400591dbc9ae31043113c95e3cd985463ae532f51d706f8c_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x53657175656e636520737461746963206469676573743a0a0000000000000000)\n        mstore(add(pos, 24), value0)\n        end := add(pos, 56)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, 0xff00000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 1), and(shl(96, value0), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        mstore(add(pos, 21), value1)\n        mstore(add(pos, 53), value2)\n        end := add(pos, 85)\n    }\n}",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"585": [
									{
										"length": 32,
										"start": 1058
									},
									{
										"length": 32,
										"start": 9548
									}
								],
								"587": [
									{
										"length": 32,
										"start": 1156
									},
									{
										"length": 32,
										"start": 9499
									}
								],
								"589": [
									{
										"length": 32,
										"start": 1460
									},
									{
										"length": 32,
										"start": 5270
									}
								],
								"1795": [
									{
										"length": 32,
										"start": 3152
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101bb5760003560e01c80637a9a1628116100ec578063a4ab5f9f1161008a578063bc197c8111610064578063bc197c81146106a0578063c71f1f96146106e8578063d0748f71146106fd578063f23a6e611461071d576101c2565b8063a4ab5f9f1461064b578063affed0e01461066b578063b93ea7ad14610680576101c2565b80638c3f5563116100c65780638c3f5563146105d65780638efa6441146105f657806390042baf14610618578063a38cef191461062b576101c2565b80637a9a16281461053a578063853c50681461055a578063888eeec6146105a2576101c2565b8063257671f5116101595780634598154f116101335780634598154f146104a65780634fcf3eca146104c657806357c56d6b146104e657806361c2926c1461051a576101c2565b8063257671f51461041057806329561426146104525780632dd3100014610472576101c2565b8063150b7a0211610195578063150b7a02146103155780631626ba7e1461038b5780631a9b2337146103ab57806320c13b0b146103f0576101c2565b806301ffc9a7146102a0578063025b22bc146102d5578063038dbaac146102f5576101c2565b366101c257005b6004361061029e5760006101f96000357fffffffff0000000000000000000000000000000000000000000000000000000016610763565b905073ffffffffffffffffffffffffffffffffffffffff81161561029c576000808273ffffffffffffffffffffffffffffffffffffffff16600036604051610242929190612cd1565b600060405180830381855af49150503d806000811461027d576040519150601f19603f3d011682016040523d82523d6000602084013e610282565b606091505b50915091508161029457805160208201fd5b805160208201f35b505b005b3480156102ac57600080fd5b506102c06102bb366004612d0f565b6107b7565b60405190151581526020015b60405180910390f35b3480156102e157600080fd5b5061029e6102f0366004612d55565b6107c2565b34801561030157600080fd5b5061029e610310366004612dbc565b610814565b34801561032157600080fd5b5061035a610330366004612e40565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016102cc565b34801561039757600080fd5b5061035a6103a6366004612eaf565b61091f565b3480156103b757600080fd5b506103cb6103c6366004612d0f565b61096c565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102cc565b3480156103fc57600080fd5b5061035a61040b366004612efb565b610977565b34801561041c57600080fd5b506104447f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016102cc565b34801561045e57600080fd5b5061029e61046d366004612f67565b6109dc565b34801561047e57600080fd5b506103cb7f000000000000000000000000000000000000000000000000000000000000000081565b3480156104b257600080fd5b5061029e6104c1366004612f80565b610a26565b3480156104d257600080fd5b5061029e6104e1366004612d0f565b610aeb565b3480156104f257600080fd5b506104447f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d181565b34801561052657600080fd5b5061029e610535366004612dbc565b610bb3565b34801561054657600080fd5b5061029e610555366004612fa2565b610c39565b34801561056657600080fd5b5061057a610575366004612eaf565b610d3e565b604080519586526020860194909452928401919091526060830152608082015260a0016102cc565b3480156105ae57600080fd5b506103cb7f000000000000000000000000000000000000000000000000000000000000000081565b3480156105e257600080fd5b506104446105f1366004612f67565b610f06565b34801561060257600080fd5b5061060b610f32565b6040516102cc9190613079565b6103cb6106263660046130bb565b610fb3565b34801561063757600080fd5b5061029e610646366004612f67565b61109d565b34801561065757600080fd5b50610444610666366004612f67565b6110e7565b34801561067757600080fd5b506104446110f2565b34801561068c57600080fd5b5061029e61069b36600461318a565b611103565b3480156106ac57600080fd5b5061035a6106bb3660046131bf565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b3480156106f457600080fd5b506104446111ce565b34801561070957600080fd5b5061029e610718366004612f80565b6111f8565b34801561072957600080fd5b5061035a61073836600461327a565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60006107b17fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1207fffffffff00000000000000000000000000000000000000000000000000000000841661124b565b92915050565b60006107b1826112a9565b333014610808576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b61081181611305565b50565b333014610855576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b8060005b81811015610919576000848483818110610875576108756132f2565b9050602002013590506108d5816000604080517f849e7bdc245db17e50b9f43086f1914d70eb4dab6dd89af4d541d53353ad97de602080830191909152818301859052825180830384018152606090920190925280519101208190555050565b807f804f6171d6008d9e16ee3aa0561fec328397f4ba2827a6605db388cfdefa3b0c600060405161090891815260200190565b60405180910390a250600101610859565b50505050565b60008061092d8585856113c0565b509050801561095f57507f1626ba7e000000000000000000000000000000000000000000000000000000009050610965565b50600090505b9392505050565b60006107b182610763565b60008061099c868660405161098d929190612cd1565b604051809103902085856113c0565b50905080156109ce57507f20c13b0b0000000000000000000000000000000000000000000000000000000090506109d4565b50600090505b949350505050565b333014610a1d576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b610811816113fe565b333014610a67576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b604080517f849e7bdc245db17e50b9f43086f1914d70eb4dab6dd89af4d541d53353ad97de602080830191909152818301859052825180830384018152606083019384905280519101208390559082905282907f804f6171d6008d9e16ee3aa0561fec328397f4ba2827a6605db388cfdefa3b0c9060800160405180910390a25050565b333014610b2c576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b6000610b3782610763565b73ffffffffffffffffffffffffffffffffffffffff1603610ba8576040517f1c3812cc0000000000000000000000000000000000000000000000000000000081527fffffffff00000000000000000000000000000000000000000000000000000000821660048201526024016107ff565b6108118160006114ba565b333014610bf4576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b6000610c278383604051602001610c0c9291906134c9565b6040516020818303038152906040528051906020012061157a565b9050610c348184846115ff565b505050565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610ca8576040517f0a57d61d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cb183611787565b600080610ce9858888604051602001610ccc93929190613511565b6040516020818303038152906040528051906020012085856113c0565b9150915081610d2a578084846040517f8f4a234f0000000000000000000000000000000000000000000000000000000081526004016107ff93929190613534565b610d358188886115ff565b50505050505050565b60008060008060008087876000818110610d5a57610d5a6132f2565b909101357fff00000000000000000000000000000000000000000000000000000000000000169150819050610db057610d928961157a565b9250610d9f838989611884565b92985090965094509150610efb9050565b7fff0000000000000000000000000000000000000000000000000000000000000081811601610def57610de28961157a565b9250610d9f8389896118d5565b7ffe000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821601610e4157610de289611901565b7ffd000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821601610ea557610e9589898961196e565b9550955095509550955050610efb565b6040517f6085cd820000000000000000000000000000000000000000000000000000000081527fff00000000000000000000000000000000000000000000000000000000000000821660048201526024016107ff565b939792965093509350565b60006107b17f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e8361124b565b6060610f8f610f8a610f426111ce565b6040517f017012200000000000000000000000000000000000000000000000000000000060208201526024810191909152604401604051602081830303815290604052611aeb565b611d04565b604051602001610f9f919061354e565b604051602081830303815290604052905090565b6000333014610ff6576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b81516020830134f0905073ffffffffffffffffffffffffffffffffffffffff811661104f57816040517f0d2571910000000000000000000000000000000000000000000000000000000081526004016107ff9190613079565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c9060200160405180910390a1919050565b3330146110de576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b61081181611d2d565b60006107b182611d86565b60006110fe6000610f06565b905090565b333014611144576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b600061114f83610763565b73ffffffffffffffffffffffffffffffffffffffff16146111c0576040517f5b4d6d6a0000000000000000000000000000000000000000000000000000000081527fffffffff00000000000000000000000000000000000000000000000000000000831660048201526024016107ff565b6111ca82826114ba565b5050565b60006110fe7f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d0335490565b333014611239576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044016107ff565b611242826113fe565b6111ca81611d2d565b600080838360405160200161126a929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b60007f2e74b92a000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016112fc57506001919050565b6107b182611db2565b73ffffffffffffffffffffffffffffffffffffffff81163b61136b576040517f0c76093700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff821660048201526024016107ff565b611373813055565b60405173ffffffffffffffffffffffffffffffffffffffff821681527f310ba5f1d2ed074b51e2eccd052a47ae9ab7c6b800d1fca3db3999d6a592ca03906020015b60405180910390a150565b60008060008060006113d3888888610d3e565b509650919450925090508282108015906113f157506113f181611e0e565b9450505050935093915050565b80611435576040517f4294d12700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61145e7fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8829055565b6040518181527f307ed6bd941ee9fc80f369c94af5fa11e25bab5102a6140191756c5474a30bfa9060200160405180910390a16108117f0000000000000000000000000000000000000000000000000000000000000000611305565b604080517fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1206020808301919091527fffffffff000000000000000000000000000000000000000000000000000000008516828401819052835180840385018152606084018086528151919093012073ffffffffffffffffffffffffffffffffffffffff8616908190559152608082015290517f0d7fc113eaf016db4681a1ba86d083ce3e0961f321062a75ac2b0aeb33deeed19181900360a00190a15050565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201524660228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166042820152605681018290526000906076015b604051602081830303815290604052805190602001209050919050565b8060005b81811015611780573684848381811061161e5761161e6132f2565b90506020028101906116309190613593565b90506040810135805a10156116855782815a6040517f2bb3e3ba0000000000000000000000000000000000000000000000000000000081526004810193909352602483019190915260448201526064016107ff565b600061169460208401846135d1565b156116d3576116cc6116ac6080850160608601612d55565b83156116b857836116ba565b5a5b6116c760a08701876135ec565b611e19565b905061170e565b61170b6116e66080850160608601612d55565b608085013584156116f757846116f9565b5a5b61170660a08801886135ec565b611e34565b90505b801561175357877f5c4eeb02dabf8976016ab414d617f9a162936dcace3cdef8c69ef6e262ad5ae78560405161174691815260200190565b60405180910390a2611775565b61177561176660408501602086016135d1565b8986611770611e51565b611e70565b505050600101611603565b5050505050565b606081901c6bffffffffffffffffffffffff821660006117a683610f06565b90508181146117f2576040517f9b6514f40000000000000000000000000000000000000000000000000000000081526004810184905260248101839052604481018290526064016107ff565b604080517f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e60208083019190915281830186905282518083038401815260609092019092528051910120600183019081905560408051858152602081018390527f1f180c27086c7a39ea2a7b25239d1ab92348f07ca7bb59d1438fcf527568f881910160405180910390a15050505050565b600080808061189f8761189a876006818b613651565b611ebe565b6000908152873560f01c6020818152604080842084526002909a013560e01c908190529890912090999198509695509350505050565b60008080806118f0876118eb876001818b613651565b611884565b935093509350935093509350935093565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526000602282018190527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b16604283015260568201839052906076016115e2565b6000808080806004600188013560e81c8261198983836136aa565b905061199b8b61057583868d8f613651565b939b50919950975095509350878710156119f3576119bb81848b8d613651565b89896040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016107ff94939291906136bd565b8092505b88831015611add5760038301928a013560e81c9150611a1683836136aa565b90506000611a38611a2688612354565b8c8c8790869261057593929190613651565b939c50919a5098509091505088881015611a9057611a5882858c8e613651565b8a8a6040517fb006aba00000000000000000000000000000000000000000000000000000000081526004016107ff94939291906136bd565b848110611ad3576040517f37daf62b00000000000000000000000000000000000000000000000000000000815260048101829052602481018690526044016107ff565b93509150816119f7565b505050939792965093509350565b8051606090600381901b60006005600483010467ffffffffffffffff811115611b1657611b1661308c565b6040519080825280601f01601f191660200182016040528015611b40576020820181803683370190505b5090506000806000805b86811015611c5457888181518110611b6457611b646132f2565b01602001516008948501949390931b60f89390931c92909217915b60058410611c4c576040805180820190915260208082527f6162636465666768696a6b6c6d6e6f707172737475767778797a323334353637818301527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb90950194601f85871c16908110611bf557611bf56132f2565b602001015160f81c60f81b858381518110611c1257611c126132f2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600190910190611b7f565b600101611b4a565b508215611cf8576040518060400160405280602081526020017f6162636465666768696a6b6c6d6e6f707172737475767778797a3233343536378152508360050383901b601f1681518110611cab57611cab6132f2565b602001015160f81c60f81b848281518110611cc857611cc86132f2565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b50919695505050505050565b606081604051602001611d1791906136e4565b6040516020818303038152906040529050919050565b611d567f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d033829055565b6040518181527f20d3ef1b5738a9f6d7beae515432206e7a8e2740ca6dcf46a952190ad01bcb51906020016113b5565b60006107b17f849e7bdc245db17e50b9f43086f1914d70eb4dab6dd89af4d541d53353ad97de8361124b565b60007f6ffbd451000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601611e0557506001919050565b6107b182612388565b60006107b1826124c9565b60006040518284823760008084838989f49695505050505050565b6000604051828482376000808483898b8af1979650505050505050565b60603d604051915060208201818101604052818352816000823e505090565b8315611e7e57805160208201fd5b827fab46c69f7f32e1bf09b0725853da82a211e5402a0600296ab499a2fb5ea3b4198383604051611eb0929190613729565b60405180910390a250505050565b60008060005b8381101561234b57600181019085013560f81c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101611f6557601582019186013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff81169074ff000000000000000000000000000000000000000016811785611f4b5780611f5a565b60008681526020829052604090205b955050505050611ec4565b80611ffb5760018201918681013560f81c906043016000611f918a611f8c84888c8e613651565b6125f7565b60ff841697909701969194508491905060a083901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff82161786611fe05780611fef565b60008781526020829052604090205b96505050505050611ec4565b60028103612123576000808784013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff16601586019550909250905060008885013560e81c600386018162ffffff1691508096508192505050600081860190506120748b848c8c8a90869261206f93929190613651565b6128ba565b6120bc578a8361208683898d8f613651565b6040517f9a9462320000000000000000000000000000000000000000000000000000000081526004016107ff9493929190613742565b60ff8416979097019694508460a084901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617876121075780612116565b60008881526020829052604090205b9750505050505050611ec4565b600381036121565760208201918601358361213e578061214d565b60008481526020829052604090205b93505050611ec4565b600481036121a2576003808301928781013560e81c91908201016000806121838b61189a85898d8f613651565b60009889526020526040909720969097019650909350611ec492505050565b600681036122aa5760008287013560f81c60018401935060ff16905060008784013560f01c60028501945061ffff16905060008885013560e81c600386018162ffffff1691508096508192505050600081860190506000806122108d8d8d8b90879261189a93929190613651565b9398508893909250905084821061222657988501985b604080517f53657175656e6365206e657374656420636f6e6669673a0a0000000000000000602080830191909152603882018490526058820188905260788083018a905283518084039091018152609890920190925280519101208961228c578061229b565b60008a81526020829052604090205b99505050505050505050611ec4565b600581036123165760208201918601358781036122e5577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94505b60006122f082612aa1565b9050846122fd578061230c565b60008581526020829052604090205b9450505050611ec4565b6040517fb2505f7c000000000000000000000000000000000000000000000000000000008152600481018290526024016107ff565b50935093915050565b7f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d160009081526020829052604081206107b1565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fec6aba5000000000000000000000000000000000000000000000000000000000148061241b57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061246757507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b806124b357507fffffffff0000000000000000000000000000000000000000000000000000000082167fc0ee0b8a00000000000000000000000000000000000000000000000000000000145b156124c057506001919050565b6107b182612adc565b60006125cb826040517fff0000000000000000000000000000000000000000000000000000000000000060208201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000060601b166021820152603581018290527f000000000000000000000000000000000000000000000000000000000000000060558201526000903090607501604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012073ffffffffffffffffffffffffffffffffffffffff161492915050565b156125d857506001919050565b60006125e383611d86565b905080158015906109655750421092915050565b6000604282146126375782826040517f2ee17a3d0000000000000000000000000000000000000000000000000000000081526004016107ff929190613782565b6000612650612647600185613796565b85013560f81c90565b60ff169050604084013560f81c843560208601357f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08111156126c4578686826040517fad4aac760000000000000000000000000000000000000000000000000000000081526004016107ff939291906137a9565b8260ff16601b141580156126dc57508260ff16601c14155b15612719578686846040517fe578897e0000000000000000000000000000000000000000000000000000000081526004016107ff939291906137cd565b60018403612786576040805160008152602081018083528a905260ff851691810191909152606081018390526080810182905260019060a0015b6020604051602081039080840390855afa158015612775573d6000803e3d6000fd5b50505060206040510351945061285e565b60028403612823576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101899052600190605c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff861690820152606081018490526080810183905260a001612753565b86868560016040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016107ff94939291906137f4565b73ffffffffffffffffffffffffffffffffffffffff85166128af5786866040517f6c1719d20000000000000000000000000000000000000000000000000000000081526004016107ff929190613782565b505050509392505050565b60008181036128f5576040517fac241e1100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008383612904600182613796565b818110612913576129136132f2565b919091013560f81c915050600181148061292d5750600281145b15612972578473ffffffffffffffffffffffffffffffffffffffff166129548786866125f7565b73ffffffffffffffffffffffffffffffffffffffff16149150612a98565b60038103612a5d5773ffffffffffffffffffffffffffffffffffffffff8516631626ba7e87866000876129a6600182613796565b926129b393929190613651565b6040518463ffffffff1660e01b81526004016129d193929190613534565b602060405180830381865afa1580156129ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a129190613820565b7fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e00000000000000000000000000000000000000000000000000000000149150612a98565b83838260006040517f9dfba8520000000000000000000000000000000000000000000000000000000081526004016107ff94939291906137f4565b50949350505050565b6040517f53657175656e636520737461746963206469676573743a0a00000000000000006020820152603881018290526000906058016115e2565b60007fe4a77bbc000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601612b2f57506001919050565b6107b18260007f1cbec625000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601612b8657506001919050565b6107b18260006107b18260007ffda4dd44000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601612be357506001919050565b6107b18260007fffffffff0000000000000000000000000000000000000000000000000000000082167fac6a444e000000000000000000000000000000000000000000000000000000001480612c7a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f36e7817500000000000000000000000000000000000000000000000000000000145b15612c8757506001919050565b7f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316146107b1565b8183823760009101908152919050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461081157600080fd5b600060208284031215612d2157600080fd5b813561096581612ce1565b803573ffffffffffffffffffffffffffffffffffffffff81168114612d5057600080fd5b919050565b600060208284031215612d6757600080fd5b61096582612d2c565b60008083601f840112612d8257600080fd5b50813567ffffffffffffffff811115612d9a57600080fd5b6020830191508360208260051b8501011115612db557600080fd5b9250929050565b60008060208385031215612dcf57600080fd5b823567ffffffffffffffff811115612de657600080fd5b612df285828601612d70565b90969095509350505050565b60008083601f840112612e1057600080fd5b50813567ffffffffffffffff811115612e2857600080fd5b602083019150836020828501011115612db557600080fd5b600080600080600060808688031215612e5857600080fd5b612e6186612d2c565b9450612e6f60208701612d2c565b935060408601359250606086013567ffffffffffffffff811115612e9257600080fd5b612e9e88828901612dfe565b969995985093965092949392505050565b600080600060408486031215612ec457600080fd5b83359250602084013567ffffffffffffffff811115612ee257600080fd5b612eee86828701612dfe565b9497909650939450505050565b60008060008060408587031215612f1157600080fd5b843567ffffffffffffffff80821115612f2957600080fd5b612f3588838901612dfe565b90965094506020870135915080821115612f4e57600080fd5b50612f5b87828801612dfe565b95989497509550505050565b600060208284031215612f7957600080fd5b5035919050565b60008060408385031215612f9357600080fd5b50508035926020909101359150565b600080600080600060608688031215612fba57600080fd5b853567ffffffffffffffff80821115612fd257600080fd5b612fde89838a01612d70565b9097509550602088013594506040880135915080821115612ffe57600080fd5b50612e9e88828901612dfe565b60005b8381101561302657818101518382015260200161300e565b50506000910152565b6000815180845261304781602086016020860161300b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610965602083018461302f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156130cd57600080fd5b813567ffffffffffffffff808211156130e557600080fd5b818401915084601f8301126130f957600080fd5b81358181111561310b5761310b61308c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156131515761315161308c565b8160405282815287602084870101111561316a57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000806040838503121561319d57600080fd5b82356131a881612ce1565b91506131b660208401612d2c565b90509250929050565b60008060008060008060008060a0898b0312156131db57600080fd5b6131e489612d2c565b97506131f260208a01612d2c565b9650604089013567ffffffffffffffff8082111561320f57600080fd5b61321b8c838d01612d70565b909850965060608b013591508082111561323457600080fd5b6132408c838d01612d70565b909650945060808b013591508082111561325957600080fd5b506132668b828c01612dfe565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561329357600080fd5b61329c87612d2c565b95506132aa60208801612d2c565b94506040870135935060608701359250608087013567ffffffffffffffff8111156132d457600080fd5b6132e089828a01612dfe565b979a9699509497509295939492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b80358015158114612d5057600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196508560051b810191508460005b878110156134bc57828403895281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418836030181126133d357600080fd5b870160c06133e082613321565b151586526133ef878301613321565b15158688015260408281013590870152606073ffffffffffffffffffffffffffffffffffffffff613421828501612d2c565b16908701526080828101359087015260a080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe101811261346757600080fd5b90920187810192903567ffffffffffffffff81111561348557600080fd5b80360384131561349457600080fd5b82828901526134a68389018286613331565b9c89019c97505050928601925050600101613394565b5091979650505050505050565b60408152600560408201527f73656c663a00000000000000000000000000000000000000000000000000000060608201526080602082015260006109d460808301848661337a565b83815260406020820152600061352b60408301848661337a565b95945050505050565b83815260406020820152600061352b604083018486613331565b7f697066733a2f2f0000000000000000000000000000000000000000000000000081526000825161358681600785016020870161300b565b9190910160070192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418336030181126135c757600080fd5b9190910192915050565b6000602082840312156135e357600080fd5b61096582613321565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261362157600080fd5b83018035915067ffffffffffffffff82111561363c57600080fd5b602001915036819003821315612db557600080fd5b6000808585111561366157600080fd5b8386111561366e57600080fd5b5050820193919092039150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156107b1576107b161367b565b6060815260006136d1606083018688613331565b6020830194909452506040015292915050565b7f620000000000000000000000000000000000000000000000000000000000000081526000825161371c81600185016020870161300b565b9190910160010192915050565b8281526040602082015260006109d4604083018461302f565b84815273ffffffffffffffffffffffffffffffffffffffff84166020820152606060408201526000613778606083018486613331565b9695505050505050565b6020815260006109d4602083018486613331565b818103818111156107b1576107b161367b565b6040815260006137bd604083018587613331565b9050826020830152949350505050565b6040815260006137e1604083018587613331565b905060ff83166020830152949350505050565b606081526000613808606083018688613331565b60208301949094525090151560409091015292915050565b60006020828403121561383257600080fd5b815161096581612ce156fea26469706673582212203c8d5199f30c123dff9711c13e6d1af00442c59755d475d5781636aabab62db364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BB JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7A9A1628 GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xA4AB5F9F GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0xC71F1F96 EQ PUSH2 0x6E8 JUMPI DUP1 PUSH4 0xD0748F71 EQ PUSH2 0x6FD JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x71D JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xA4AB5F9F EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x66B JUMPI DUP1 PUSH4 0xB93EA7AD EQ PUSH2 0x680 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x8C3F5563 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x5D6 JUMPI DUP1 PUSH4 0x8EFA6441 EQ PUSH2 0x5F6 JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x618 JUMPI DUP1 PUSH4 0xA38CEF19 EQ PUSH2 0x62B JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x7A9A1628 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0x853C5068 EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0x888EEEC6 EQ PUSH2 0x5A2 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x257671F5 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x4598154F GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x4598154F EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x4FCF3ECA EQ PUSH2 0x4C6 JUMPI DUP1 PUSH4 0x57C56D6B EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0x61C2926C EQ PUSH2 0x51A JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x257671F5 EQ PUSH2 0x410 JUMPI DUP1 PUSH4 0x29561426 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x2DD31000 EQ PUSH2 0x472 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x1A9B2337 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x20C13B0B EQ PUSH2 0x3F0 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x25B22BC EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x38DBAAC EQ PUSH2 0x2F5 JUMPI PUSH2 0x1C2 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1C2 JUMPI STOP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29E JUMPI PUSH1 0x0 PUSH2 0x1F9 PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x763 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x29C JUMPI PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x242 SWAP3 SWAP2 SWAP1 PUSH2 0x2CD1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x27D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x282 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x294 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD RETURN JUMPDEST POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C0 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0F JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x2F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D55 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x301 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x310 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DBC JUMP JUMPDEST PUSH2 0x814 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E40 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAF JUMP JUMPDEST PUSH2 0x91F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0F JUMP JUMPDEST PUSH2 0x96C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x40B CALLDATASIZE PUSH1 0x4 PUSH2 0x2EFB JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x46D CALLDATASIZE PUSH1 0x4 PUSH2 0x2F67 JUMP JUMPDEST PUSH2 0x9DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F80 JUMP JUMPDEST PUSH2 0xA26 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x4E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D0F JUMP JUMPDEST PUSH2 0xAEB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH32 0x8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x535 CALLDATASIZE PUSH1 0x4 PUSH2 0x2DBC JUMP JUMPDEST PUSH2 0xBB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x555 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA2 JUMP JUMPDEST PUSH2 0xC39 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x566 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x57A PUSH2 0x575 CALLDATASIZE PUSH1 0x4 PUSH2 0x2EAF JUMP JUMPDEST PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x2CC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3CB PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH2 0x5F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F67 JUMP JUMPDEST PUSH2 0xF06 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60B PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x3079 JUMP JUMPDEST PUSH2 0x3CB PUSH2 0x626 CALLDATASIZE PUSH1 0x4 PUSH2 0x30BB JUMP JUMPDEST PUSH2 0xFB3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x646 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F67 JUMP JUMPDEST PUSH2 0x109D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x657 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH2 0x666 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F67 JUMP JUMPDEST PUSH2 0x10E7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH2 0x10F2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x69B CALLDATASIZE PUSH1 0x4 PUSH2 0x318A JUMP JUMPDEST PUSH2 0x1103 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x6BB CALLDATASIZE PUSH1 0x4 PUSH2 0x31BF JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH2 0x11CE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x709 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29E PUSH2 0x718 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F80 JUMP JUMPDEST PUSH2 0x11F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x729 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0x738 CALLDATASIZE PUSH1 0x4 PUSH2 0x327A JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 AND PUSH2 0x124B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP3 PUSH2 0x12A9 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x808 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x1305 JUMP JUMPDEST POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x855 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x919 JUMPI PUSH1 0x0 DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x875 JUMPI PUSH2 0x875 PUSH2 0x32F2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD SWAP1 POP PUSH2 0x8D5 DUP2 PUSH1 0x0 PUSH1 0x40 DUP1 MLOAD PUSH32 0x849E7BDC245DB17E50B9F43086F1914D70EB4DAB6DD89AF4D541D53353AD97DE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH32 0x804F6171D6008D9E16EE3AA0561FEC328397F4BA2827A6605DB388CFDEFA3B0C PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x908 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH1 0x1 ADD PUSH2 0x859 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x92D DUP6 DUP6 DUP6 PUSH2 0x13C0 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO PUSH2 0x95F JUMPI POP PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x965 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP3 PUSH2 0x763 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x99C DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x98D SWAP3 SWAP2 SWAP1 PUSH2 0x2CD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 DUP6 PUSH2 0x13C0 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO PUSH2 0x9CE JUMPI POP PUSH32 0x20C13B0B00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x9D4 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xA1D JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x13FE JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x849E7BDC245DB17E50B9F43086F1914D70EB4DAB6DD89AF4D541D53353AD97DE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP6 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP4 DUP5 SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 DUP4 SWAP1 SSTORE SWAP1 DUP3 SWAP1 MSTORE DUP3 SWAP1 PUSH32 0x804F6171D6008D9E16EE3AA0561FEC328397F4BA2827A6605DB388CFDEFA3B0C SWAP1 PUSH1 0x80 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xB2C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB37 DUP3 PUSH2 0x763 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1C3812CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH1 0x0 PUSH2 0x14BA JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xBF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC27 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC0C SWAP3 SWAP2 SWAP1 PUSH2 0x34C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x157A JUMP JUMPDEST SWAP1 POP PUSH2 0xC34 DUP2 DUP5 DUP5 PUSH2 0x15FF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0xCA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA57D61D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB1 DUP4 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCE9 DUP6 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCCC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 PUSH2 0x13C0 JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xD2A JUMPI DUP1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x8F4A234F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3534 JUMP JUMPDEST PUSH2 0xD35 DUP2 DUP9 DUP9 PUSH2 0x15FF JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xD5A JUMPI PUSH2 0xD5A PUSH2 0x32F2 JUMP JUMPDEST SWAP1 SWAP2 ADD CALLDATALOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND SWAP2 POP DUP2 SWAP1 POP PUSH2 0xDB0 JUMPI PUSH2 0xD92 DUP10 PUSH2 0x157A JUMP JUMPDEST SWAP3 POP PUSH2 0xD9F DUP4 DUP10 DUP10 PUSH2 0x1884 JUMP JUMPDEST SWAP3 SWAP9 POP SWAP1 SWAP7 POP SWAP5 POP SWAP2 POP PUSH2 0xEFB SWAP1 POP JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 DUP2 AND ADD PUSH2 0xDEF JUMPI PUSH2 0xDE2 DUP10 PUSH2 0x157A JUMP JUMPDEST SWAP3 POP PUSH2 0xD9F DUP4 DUP10 DUP10 PUSH2 0x18D5 JUMP JUMPDEST PUSH32 0xFE00000000000000000000000000000000000000000000000000000000000000 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ADD PUSH2 0xE41 JUMPI PUSH2 0xDE2 DUP10 PUSH2 0x1901 JUMP JUMPDEST PUSH32 0xFD00000000000000000000000000000000000000000000000000000000000000 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ADD PUSH2 0xEA5 JUMPI PUSH2 0xE95 DUP10 DUP10 DUP10 PUSH2 0x196E JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP PUSH2 0xEFB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6085CD8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FF JUMP JUMPDEST SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x60 PUSH2 0xF8F PUSH2 0xF8A PUSH2 0xF42 PUSH2 0x11CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x170122000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1AEB JUMP JUMPDEST PUSH2 0x1D04 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF9F SWAP2 SWAP1 PUSH2 0x354E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0xFF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x104F JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xD25719100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP2 SWAP1 PUSH2 0x3079 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x10DE JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x811 DUP2 PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP3 PUSH2 0x1D86 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FE PUSH1 0x0 PUSH2 0xF06 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1144 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114F DUP4 PUSH2 0x763 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5B4D6D6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x11CA DUP3 DUP3 PUSH2 0x14BA JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10FE PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 SLOAD SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1239 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x1242 DUP3 PUSH2 0x13FE JUMP JUMPDEST PUSH2 0x11CA DUP2 PUSH2 0x1D2D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x126A SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2E74B92A00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x12FC JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B1 DUP3 PUSH2 0x1DB2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x136B JUMPI PUSH1 0x40 MLOAD PUSH32 0xC76093700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH2 0x1373 DUP2 ADDRESS SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0x310BA5F1D2ED074B51E2ECCD052A47AE9AB7C6B800D1FCA3DB3999D6A592CA03 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x13D3 DUP9 DUP9 DUP9 PUSH2 0xD3E JUMP JUMPDEST POP SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x13F1 JUMPI POP PUSH2 0x13F1 DUP2 PUSH2 0x1E0E JUMP JUMPDEST SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0x1435 JUMPI PUSH1 0x40 MLOAD PUSH32 0x4294D12700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x145E PUSH32 0xEA7157FA25E3AA17D0AE2D5280FA4E24D421C61842AA85E45194E1145AA72BF8 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x307ED6BD941EE9FC80F369C94AF5FA11E25BAB5102A6140191756C5474A30BFA SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x811 PUSH32 0x0 PUSH2 0x1305 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND DUP3 DUP5 ADD DUP2 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP6 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP4 ADD KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP2 SWAP1 SSTORE SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xD7FC113EAF016DB4681A1BA86D083CE3E0961F321062A75AC2B0AEB33DEEED1 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE CHAINID PUSH1 0x22 DUP3 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 ADDRESS PUSH1 0x60 SHL AND PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x56 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x76 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1780 JUMPI CALLDATASIZE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x161E JUMPI PUSH2 0x161E PUSH2 0x32F2 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1630 SWAP2 SWAP1 PUSH2 0x3593 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP1 GAS LT ISZERO PUSH2 0x1685 JUMPI DUP3 DUP2 GAS PUSH1 0x40 MLOAD PUSH32 0x2BB3E3BA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1694 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x35D1 JUMP JUMPDEST ISZERO PUSH2 0x16D3 JUMPI PUSH2 0x16CC PUSH2 0x16AC PUSH1 0x80 DUP6 ADD PUSH1 0x60 DUP7 ADD PUSH2 0x2D55 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x16B8 JUMPI DUP4 PUSH2 0x16BA JUMP JUMPDEST GAS JUMPDEST PUSH2 0x16C7 PUSH1 0xA0 DUP8 ADD DUP8 PUSH2 0x35EC JUMP JUMPDEST PUSH2 0x1E19 JUMP JUMPDEST SWAP1 POP PUSH2 0x170E JUMP JUMPDEST PUSH2 0x170B PUSH2 0x16E6 PUSH1 0x80 DUP6 ADD PUSH1 0x60 DUP7 ADD PUSH2 0x2D55 JUMP JUMPDEST PUSH1 0x80 DUP6 ADD CALLDATALOAD DUP5 ISZERO PUSH2 0x16F7 JUMPI DUP5 PUSH2 0x16F9 JUMP JUMPDEST GAS JUMPDEST PUSH2 0x1706 PUSH1 0xA0 DUP9 ADD DUP9 PUSH2 0x35EC JUMP JUMPDEST PUSH2 0x1E34 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x1753 JUMPI DUP8 PUSH32 0x5C4EEB02DABF8976016AB414D617F9A162936DCACE3CDEF8C69EF6E262AD5AE7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1746 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0x1775 PUSH2 0x1766 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x35D1 JUMP JUMPDEST DUP10 DUP7 PUSH2 0x1770 PUSH2 0x1E51 JUMP JUMPDEST PUSH2 0x1E70 JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x1603 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SWAP1 SHR PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 PUSH2 0x17A6 DUP4 PUSH2 0xF06 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x9B6514F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x7FF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x1 DUP4 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x1F180C27086C7A39EA2A7B25239D1AB92348F07CA7BB59D1438FCF527568F881 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x189F DUP8 PUSH2 0x189A DUP8 PUSH1 0x6 DUP2 DUP12 PUSH2 0x3651 JUMP JUMPDEST PUSH2 0x1EBE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP8 CALLDATALOAD PUSH1 0xF0 SHR PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP11 ADD CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 SWAP1 MSTORE SWAP9 SWAP1 SWAP2 KECCAK256 SWAP1 SWAP10 SWAP2 SWAP9 POP SWAP7 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x18F0 DUP8 PUSH2 0x18EB DUP8 PUSH1 0x1 DUP2 DUP12 PUSH2 0x3651 JUMP JUMPDEST PUSH2 0x1884 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x22 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 ADDRESS PUSH1 0x60 SHL AND PUSH1 0x42 DUP4 ADD MSTORE PUSH1 0x56 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x76 ADD PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 PUSH1 0x4 PUSH1 0x1 DUP9 ADD CALLDATALOAD PUSH1 0xE8 SHR DUP3 PUSH2 0x1989 DUP4 DUP4 PUSH2 0x36AA JUMP JUMPDEST SWAP1 POP PUSH2 0x199B DUP12 PUSH2 0x575 DUP4 DUP7 DUP14 DUP16 PUSH2 0x3651 JUMP JUMPDEST SWAP4 SWAP12 POP SWAP2 SWAP10 POP SWAP8 POP SWAP6 POP SWAP4 POP DUP8 DUP8 LT ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x19BB DUP2 DUP5 DUP12 DUP14 PUSH2 0x3651 JUMP JUMPDEST DUP10 DUP10 PUSH1 0x40 MLOAD PUSH32 0xB006ABA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36BD JUMP JUMPDEST DUP1 SWAP3 POP JUMPDEST DUP9 DUP4 LT ISZERO PUSH2 0x1ADD JUMPI PUSH1 0x3 DUP4 ADD SWAP3 DUP11 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP2 POP PUSH2 0x1A16 DUP4 DUP4 PUSH2 0x36AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A38 PUSH2 0x1A26 DUP9 PUSH2 0x2354 JUMP JUMPDEST DUP13 DUP13 DUP8 SWAP1 DUP7 SWAP3 PUSH2 0x575 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3651 JUMP JUMPDEST SWAP4 SWAP13 POP SWAP2 SWAP11 POP SWAP9 POP SWAP1 SWAP2 POP POP DUP9 DUP9 LT ISZERO PUSH2 0x1A90 JUMPI PUSH2 0x1A58 DUP3 DUP6 DUP13 DUP15 PUSH2 0x3651 JUMP JUMPDEST DUP11 DUP11 PUSH1 0x40 MLOAD PUSH32 0xB006ABA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x36BD JUMP JUMPDEST DUP5 DUP2 LT PUSH2 0x1AD3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x37DAF62B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7FF JUMP JUMPDEST SWAP4 POP SWAP2 POP DUP2 PUSH2 0x19F7 JUMP JUMPDEST POP POP POP SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x3 DUP2 SWAP1 SHL PUSH1 0x0 PUSH1 0x5 PUSH1 0x4 DUP4 ADD DIV PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B16 JUMPI PUSH2 0x1B16 PUSH2 0x308C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1B40 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1C54 JUMPI DUP9 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1B64 JUMPI PUSH2 0x1B64 PUSH2 0x32F2 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x8 SWAP5 DUP6 ADD SWAP5 SWAP4 SWAP1 SWAP4 SHL PUSH1 0xF8 SWAP4 SWAP1 SWAP4 SHR SWAP3 SWAP1 SWAP3 OR SWAP2 JUMPDEST PUSH1 0x5 DUP5 LT PUSH2 0x1C4C JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 DUP4 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB SWAP1 SWAP6 ADD SWAP5 PUSH1 0x1F DUP6 DUP8 SHR AND SWAP1 DUP2 LT PUSH2 0x1BF5 JUMPI PUSH2 0x1BF5 PUSH2 0x32F2 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1C12 JUMPI PUSH2 0x1C12 PUSH2 0x32F2 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1B7F JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1B4A JUMP JUMPDEST POP DUP3 ISZERO PUSH2 0x1CF8 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 MSTORE POP DUP4 PUSH1 0x5 SUB DUP4 SWAP1 SHL PUSH1 0x1F AND DUP2 MLOAD DUP2 LT PUSH2 0x1CAB JUMPI PUSH2 0x1CAB PUSH2 0x32F2 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1CC8 JUMPI PUSH2 0x1CC8 PUSH2 0x32F2 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1D17 SWAP2 SWAP1 PUSH2 0x36E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D56 PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x20D3EF1B5738A9F6D7BEAE515432206E7A8E2740CA6DCF46A952190AD01BCB51 SWAP1 PUSH1 0x20 ADD PUSH2 0x13B5 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 PUSH32 0x849E7BDC245DB17E50B9F43086F1914D70EB4DAB6DD89AF4D541D53353AD97DE DUP4 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FFBD45100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x1E05 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B1 DUP3 PUSH2 0x2388 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B1 DUP3 PUSH2 0x24C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 DUP10 DUP10 DELEGATECALL SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 DUP10 DUP12 DUP11 CALL SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 RETURNDATASIZE PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP4 MSTORE DUP2 PUSH1 0x0 DUP3 RETURNDATACOPY POP POP SWAP1 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1E7E JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP3 PUSH32 0xAB46C69F7F32E1BF09B0725853DA82A211E5402A0600296AB499A2FB5EA3B419 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1EB0 SWAP3 SWAP2 SWAP1 PUSH2 0x3729 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x234B JUMPI PUSH1 0x1 DUP2 ADD SWAP1 DUP6 ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD PUSH2 0x1F65 JUMPI PUSH1 0x15 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0x58 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH21 0xFF0000000000000000000000000000000000000000 AND DUP2 OR DUP6 PUSH2 0x1F4B JUMPI DUP1 PUSH2 0x1F5A JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP6 POP POP POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST DUP1 PUSH2 0x1FFB JUMPI PUSH1 0x1 DUP3 ADD SWAP2 DUP7 DUP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP1 PUSH1 0x43 ADD PUSH1 0x0 PUSH2 0x1F91 DUP11 PUSH2 0x1F8C DUP5 DUP9 DUP13 DUP15 PUSH2 0x3651 JUMP JUMPDEST PUSH2 0x25F7 JUMP JUMPDEST PUSH1 0xFF DUP5 AND SWAP8 SWAP1 SWAP8 ADD SWAP7 SWAP2 SWAP5 POP DUP5 SWAP2 SWAP1 POP PUSH1 0xA0 DUP4 SWAP1 SHL PUSH21 0xFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND OR DUP7 PUSH2 0x1FE0 JUMPI DUP1 PUSH2 0x1FEF JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP7 POP POP POP POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x2123 JUMPI PUSH1 0x0 DUP1 DUP8 DUP5 ADD CALLDATALOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0x58 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x15 DUP7 ADD SWAP6 POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP9 DUP6 ADD CALLDATALOAD PUSH1 0xE8 SHR PUSH1 0x3 DUP7 ADD DUP2 PUSH3 0xFFFFFF AND SWAP2 POP DUP1 SWAP7 POP DUP2 SWAP3 POP POP POP PUSH1 0x0 DUP2 DUP7 ADD SWAP1 POP PUSH2 0x2074 DUP12 DUP5 DUP13 DUP13 DUP11 SWAP1 DUP7 SWAP3 PUSH2 0x206F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3651 JUMP JUMPDEST PUSH2 0x28BA JUMP JUMPDEST PUSH2 0x20BC JUMPI DUP11 DUP4 PUSH2 0x2086 DUP4 DUP10 DUP14 DUP16 PUSH2 0x3651 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9A94623200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3742 JUMP JUMPDEST PUSH1 0xFF DUP5 AND SWAP8 SWAP1 SWAP8 ADD SWAP7 SWAP5 POP DUP5 PUSH1 0xA0 DUP5 SWAP1 SHL PUSH21 0xFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR DUP8 PUSH2 0x2107 JUMPI DUP1 PUSH2 0x2116 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP8 POP POP POP POP POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x2156 JUMPI PUSH1 0x20 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD DUP4 PUSH2 0x213E JUMPI DUP1 PUSH2 0x214D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x4 DUP2 SUB PUSH2 0x21A2 JUMPI PUSH1 0x3 DUP1 DUP4 ADD SWAP3 DUP8 DUP2 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP2 SWAP1 DUP3 ADD ADD PUSH1 0x0 DUP1 PUSH2 0x2183 DUP12 PUSH2 0x189A DUP6 DUP10 DUP14 DUP16 PUSH2 0x3651 JUMP JUMPDEST PUSH1 0x0 SWAP9 DUP10 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP8 KECCAK256 SWAP7 SWAP1 SWAP8 ADD SWAP7 POP SWAP1 SWAP4 POP PUSH2 0x1EC4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 SUB PUSH2 0x22AA JUMPI PUSH1 0x0 DUP3 DUP8 ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP8 DUP5 ADD CALLDATALOAD PUSH1 0xF0 SHR PUSH1 0x2 DUP6 ADD SWAP5 POP PUSH2 0xFFFF AND SWAP1 POP PUSH1 0x0 DUP9 DUP6 ADD CALLDATALOAD PUSH1 0xE8 SHR PUSH1 0x3 DUP7 ADD DUP2 PUSH3 0xFFFFFF AND SWAP2 POP DUP1 SWAP7 POP DUP2 SWAP3 POP POP POP PUSH1 0x0 DUP2 DUP7 ADD SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x2210 DUP14 DUP14 DUP14 DUP12 SWAP1 DUP8 SWAP3 PUSH2 0x189A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3651 JUMP JUMPDEST SWAP4 SWAP9 POP DUP9 SWAP4 SWAP1 SWAP3 POP SWAP1 POP DUP5 DUP3 LT PUSH2 0x2226 JUMPI SWAP9 DUP6 ADD SWAP9 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x53657175656E6365206E657374656420636F6E6669673A0A0000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x38 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x58 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x78 DUP1 DUP4 ADD DUP11 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x98 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 DUP10 PUSH2 0x228C JUMPI DUP1 PUSH2 0x229B JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x5 DUP2 SUB PUSH2 0x2316 JUMPI PUSH1 0x20 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD DUP8 DUP2 SUB PUSH2 0x22E5 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 POP JUMPDEST PUSH1 0x0 PUSH2 0x22F0 DUP3 PUSH2 0x2AA1 JUMP JUMPDEST SWAP1 POP DUP5 PUSH2 0x22FD JUMPI DUP1 PUSH2 0x230C JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP5 POP POP POP POP PUSH2 0x1EC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xB2505F7C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7FF JUMP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xEC6ABA5000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x241B JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x2467 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x24B3 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xC0EE0B8A00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x24C0 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B1 DUP3 PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25CB DUP3 PUSH1 0x40 MLOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 PUSH32 0x0 PUSH1 0x60 SHL AND PUSH1 0x21 DUP3 ADD MSTORE PUSH1 0x35 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x55 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 ADDRESS SWAP1 PUSH1 0x75 ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST ISZERO PUSH2 0x25D8 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25E3 DUP4 PUSH2 0x1D86 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x965 JUMPI POP TIMESTAMP LT SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x42 DUP3 EQ PUSH2 0x2637 JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x2EE17A3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP3 SWAP2 SWAP1 PUSH2 0x3782 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2650 PUSH2 0x2647 PUSH1 0x1 DUP6 PUSH2 0x3796 JUMP JUMPDEST DUP6 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0xF8 SHR DUP5 CALLDATALOAD PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP2 GT ISZERO PUSH2 0x26C4 JUMPI DUP7 DUP7 DUP3 PUSH1 0x40 MLOAD PUSH32 0xAD4AAC7600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37A9 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x26DC JUMPI POP DUP3 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x2719 JUMPI DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE578897E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37CD JUMP JUMPDEST PUSH1 0x1 DUP5 SUB PUSH2 0x2786 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2775 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP5 POP PUSH2 0x285E JUMP JUMPDEST PUSH1 0x2 DUP5 SUB PUSH2 0x2823 JUMPI PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE MSTORE PUSH1 0xFF DUP7 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH2 0x2753 JUMP JUMPDEST DUP7 DUP7 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH32 0x9DFBA85200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x28AF JUMPI DUP7 DUP7 PUSH1 0x40 MLOAD PUSH32 0x6C1719D200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP3 SWAP2 SWAP1 PUSH2 0x3782 JUMP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB PUSH2 0x28F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xAC241E1100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH2 0x2904 PUSH1 0x1 DUP3 PUSH2 0x3796 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x2913 JUMPI PUSH2 0x2913 PUSH2 0x32F2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP2 POP POP PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x292D JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST ISZERO PUSH2 0x2972 JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2954 DUP8 DUP7 DUP7 PUSH2 0x25F7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP PUSH2 0x2A98 JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x2A5D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH4 0x1626BA7E DUP8 DUP7 PUSH1 0x0 DUP8 PUSH2 0x29A6 PUSH1 0x1 DUP3 PUSH2 0x3796 JUMP JUMPDEST SWAP3 PUSH2 0x29B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3651 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29D1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3534 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29EE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A12 SWAP2 SWAP1 PUSH2 0x3820 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP PUSH2 0x2A98 JUMP JUMPDEST DUP4 DUP4 DUP3 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x9DFBA85200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x37F4 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x53657175656E636520737461746963206469676573743A0A0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x38 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x58 ADD PUSH2 0x15E2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xE4A77BBC00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x2B2F JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B1 DUP3 PUSH1 0x0 PUSH32 0x1CBEC62500000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x2B86 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B1 DUP3 PUSH1 0x0 PUSH2 0x7B1 DUP3 PUSH1 0x0 PUSH32 0xFDA4DD4400000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x2BE3 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B1 DUP3 PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xAC6A444E00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2C7A JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x36E7817500000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x2C87 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x7B1 JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x811 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x965 DUP2 PUSH2 0x2CE1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2D50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x965 DUP3 PUSH2 0x2D2C JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2D82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2DB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2DCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2DF2 DUP6 DUP3 DUP7 ADD PUSH2 0x2D70 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2E10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2DB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2E58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E61 DUP7 PUSH2 0x2D2C JUMP JUMPDEST SWAP5 POP PUSH2 0x2E6F PUSH1 0x20 DUP8 ADD PUSH2 0x2D2C JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2E9E DUP9 DUP3 DUP10 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2EC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2EE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2EEE DUP7 DUP3 DUP8 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2F11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2F29 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2F35 DUP9 DUP4 DUP10 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2F4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5B DUP8 DUP3 DUP9 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2F79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2FBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2FD2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FDE DUP10 DUP4 DUP11 ADD PUSH2 0x2D70 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2FFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E9E DUP9 DUP3 DUP10 ADD PUSH2 0x2DFE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3026 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x300E JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x3047 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x300B JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x965 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x302F JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x30E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x30F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x310B JUMPI PUSH2 0x310B PUSH2 0x308C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x3151 JUMPI PUSH2 0x3151 PUSH2 0x308C JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x316A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x319D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x31A8 DUP2 PUSH2 0x2CE1 JUMP JUMPDEST SWAP2 POP PUSH2 0x31B6 PUSH1 0x20 DUP5 ADD PUSH2 0x2D2C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x31DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x31E4 DUP10 PUSH2 0x2D2C JUMP JUMPDEST SWAP8 POP PUSH2 0x31F2 PUSH1 0x20 DUP11 ADD PUSH2 0x2D2C JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x320F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x321B DUP13 DUP4 DUP14 ADD PUSH2 0x2D70 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3234 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3240 DUP13 DUP4 DUP14 ADD PUSH2 0x2D70 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3266 DUP12 DUP3 DUP13 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x329C DUP8 PUSH2 0x2D2C JUMP JUMPDEST SWAP6 POP PUSH2 0x32AA PUSH1 0x20 DUP9 ADD PUSH2 0x2D2C JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x32D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x32E0 DUP10 DUP3 DUP11 ADD PUSH2 0x2DFE JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2D50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP6 PUSH1 0x5 SHL DUP2 ADD SWAP2 POP DUP5 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x34BC JUMPI DUP3 DUP5 SUB DUP10 MSTORE DUP2 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41 DUP9 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x33D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0xC0 PUSH2 0x33E0 DUP3 PUSH2 0x3321 JUMP JUMPDEST ISZERO ISZERO DUP7 MSTORE PUSH2 0x33EF DUP8 DUP4 ADD PUSH2 0x3321 JUMP JUMPDEST ISZERO ISZERO DUP7 DUP9 ADD MSTORE PUSH1 0x40 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x60 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x3421 DUP3 DUP6 ADD PUSH2 0x2D2C JUMP JUMPDEST AND SWAP1 DUP8 ADD MSTORE PUSH1 0x80 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP8 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD CALLDATALOAD CALLDATASIZE DUP5 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 ADD DUP2 SLT PUSH2 0x3467 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 ADD DUP8 DUP2 ADD SWAP3 SWAP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP5 SGT ISZERO PUSH2 0x3494 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 DUP10 ADD MSTORE PUSH2 0x34A6 DUP4 DUP10 ADD DUP3 DUP7 PUSH2 0x3331 JUMP JUMPDEST SWAP13 DUP10 ADD SWAP13 SWAP8 POP POP POP SWAP3 DUP7 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x3394 JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x73656C663A000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x9D4 PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x337A JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x352B PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x337A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x352B PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x3331 JUMP JUMPDEST PUSH32 0x697066733A2F2F00000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x3586 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x300B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41 DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x35C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x35E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x965 DUP3 PUSH2 0x3321 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x363C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x2DB5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x3661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x366E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x7B1 JUMPI PUSH2 0x7B1 PUSH2 0x367B JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x36D1 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x3331 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6200000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x371C DUP2 PUSH1 0x1 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x300B JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x9D4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x302F JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3778 PUSH1 0x60 DUP4 ADD DUP5 DUP7 PUSH2 0x3331 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x9D4 PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x3331 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7B1 JUMPI PUSH2 0x7B1 PUSH2 0x367B JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x37BD PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x3331 JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x37E1 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x3331 JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3808 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x3331 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3832 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x965 DUP2 PUSH2 0x2CE1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY DUP14 MLOAD SWAP10 RETURN 0xC SLT RETURNDATASIZE SELFDESTRUCT SWAP8 GT 0xC1 RETURNDATACOPY PUSH14 0x1AF00442C59755D475D5781636AA 0xBA 0xB6 0x2D 0xB3 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "593:963:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3935:1:14;3916:8;:20;3912:373;;3946:14;3963:18;3973:7;;;;3963:9;:18::i;:::-;3946:35;-1:-1:-1;3993:20:14;;;;3989:290;;4026:12;4040:19;4063:6;:19;;4083:8;;4063:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4025:67;;;;4133:7;4123:86;;4189:6;4183:13;4176:4;4168:6;4164:17;4157:40;4123:86;4253:6;4247:13;4240:4;4232:6;4228:17;4221:40;3989:290;3938:347;3912:373;593:963:5;1281:273;;;;;;;;;;-1:-1:-1;1281:273:5;;;;;:::i;:::-;;:::i;:::-;;;887:14:37;;880:22;862:41;;850:2;835:18;1281:273:5;;;;;;;;615:139:20;;;;;;;;;;-1:-1:-1;615:139:20;;;;;:::i;:::-;;:::i;1652:371:13:-;;;;;;;;;;-1:-1:-1;1652:371:13;;;;;:::i;:::-;;:::i;3646:167:14:-;;;;;;;;;;-1:-1:-1;3646:167:14;;;;;:::i;:::-;3771:37;3646:167;;;;;;;;;;;3277:66:37;3265:79;;;3247:98;;3235:2;3220:18;3646:167:14;3103:248:37;5489:316:7;;;;;;;;;;-1:-1:-1;5489:316:7;;;;;:::i;:::-;;:::i;861:125:14:-;;;;;;;;;;-1:-1:-1;861:125:14;;;;;:::i;:::-;;:::i;:::-;;;4014:42:37;4002:55;;;3984:74;;3972:2;3957:18;861:125:14;3838:226:37;4525:332:7;;;;;;;;;;-1:-1:-1;4525:332:7;;;;;:::i;:::-;;:::i;536:39:9:-;;;;;;;;;;;;;;;;;;4937:25:37;;;4925:2;4910:18;536:39:9;4791:177:37;6456:119:7;;;;;;;;;;-1:-1:-1;6456:119:7;;;;;:::i;:::-;;:::i;579:32:9:-;;;;;;;;;;;;;;;1444:204:13;;;;;;;;;;-1:-1:-1;1444:204:13;;;;;:::i;:::-;;:::i;1740:201:14:-;;;;;;;;;;-1:-1:-1;1740:201:14;;;;;:::i;:::-;;:::i;811:95:27:-;;;;;;;;;;;;862:44;811:95;;1702:304:10;;;;;;;;;;-1:-1:-1;1702:304:10;;;;;:::i;:::-;;:::i;994:568::-;;;;;;;;;;-1:-1:-1;994:568:10;;;;;:::i;:::-;;:::i;1675:1486:7:-;;;;;;;;;;-1:-1:-1;1675:1486:7;;;;;:::i;:::-;;:::i;:::-;;;;6992:25:37;;;7048:2;7033:18;;7026:34;;;;7076:18;;;7069:34;;;;7134:2;7119:18;;7112:34;7177:3;7162:19;;7155:35;6979:3;6964:19;1675:1486:7;6733:463:37;615:51:9;;;;;;;;;;;;;;;938:156:16;;;;;;;;;;-1:-1:-1;938:156:16;;;;;:::i;:::-;;:::i;562:332:15:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;456:276:11:-;;;;;;:::i;:::-;;:::i;898:90:15:-;;;;;;;;;;-1:-1:-1;898:90:15;;;;;:::i;:::-;;:::i;1309:131:13:-;;;;;;;;;;-1:-1:-1;1309:131:13;;;;;:::i;:::-;;:::i;670:87:16:-;;;;;;;;;;;;;:::i;1272:229:14:-;;;;;;;;;;-1:-1:-1;1272:229:14;;;;;:::i;:::-;;:::i;3254:234::-;;;;;;;;;;-1:-1:-1;3254:234:14;;;;;:::i;:::-;3440:43;3254:234;;;;;;;;;;;443:115:15;;;;;;;;;;;;;:::i;659:172:8:-;;;;;;;;;;-1:-1:-1;659:172:8;;;;;:::i;:::-;;:::i;2869:202:14:-;;;;;;;;;;-1:-1:-1;2869:202:14;;;;;:::i;:::-;3028:38;2869:202;;;;;;;;;2128:165;2188:7;2234:51;606:66;2234:51;;;:28;:51::i;:::-;2226:60;2128:165;-1:-1:-1;;2128:165:14:o;1281:273:5:-;1493:4;1512:37;1536:12;1512:23;:37::i;615:139:20:-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;12284:34:37;255:4:18;12334:18:37;;;12327:43;12196:18;;222:39:18;;;;;;;;174:94;711:38:20::1;733:15;711:21;:38::i;:::-;615:139:::0;:::o;1652:371:13:-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;12284:34:37;255:4:18;12334:18:37;;;12327:43;12196:18;;222:39:18;12049:327:37;174:94:18;1786:12:13;1758:25:::1;1813:200;1837:17;1833:1;:21;1813:200;;;1871:17;1891:12;;1904:1;1891:15;;;;;;;:::i;:::-;;;;;;;1871:35;;1916:42;1945:9;1956:1;420:25:19::0;;;434:66:13;420:25:19;;;;18127::37;;;;18168:18;;;18161:34;;;420:25:19;;;;;;;;;18100:18:37;;;;420:25:19;;;410:36;;;;;463:17;;;1272:229:14;;;1916:42:13::1;1991:9;1973:31;2002:1;1973:31;;;;4937:25:37::0;;4925:2;4910:18;;4791:177;1973:31:13::1;;;;;;;;-1:-1:-1::0;1856:3:13::1;;1813:200;;;;1740:279;1652:371:::0;;:::o;5489:316:7:-;5608:6;5650:12;5667:40;5688:5;5695:11;;5667:20;:40::i;:::-;5649:58;;;5717:7;5713:65;;;-1:-1:-1;5741:30:7;;-1:-1:-1;5734:37:7;;5713:65;-1:-1:-1;5798:1:7;;-1:-1:-1;5489:316:7;;;;;;:::o;861:125:14:-;938:7;960:21;970:10;960:9;:21::i;4525:332:7:-;4651:6;4693:12;4710:51;4741:5;;4731:16;;;;;;;:::i;:::-;;;;;;;;4749:11;;4710:20;:51::i;:::-;4692:69;;;4771:7;4767:63;;;-1:-1:-1;4795:28:7;;-1:-1:-1;4788:35:7;;4767:63;-1:-1:-1;4850:1:7;;-1:-1:-1;4525:332:7;;;;;;;:::o;6456:119::-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;12284:34:37;255:4:18;12334:18:37;;;12327:43;12196:18;;222:39:18;12049:327:37;174:94:18;6542:28:7::1;6559:10;6542:16;:28::i;1444:204:13:-:0;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;12284:34:37;255:4:18;12334:18:37;;;12327:43;12196:18;;222:39:18;12049:327:37;174:94:18;420:25:19;;;434:66:13;420:25:19;;;;18127::37;;;;18168:18;;;18161:34;;;420:25:19;;;;;;;;;18100:18:37;;;420:25:19;;;;410:36;;;;;463:17;;;4937:25:37;;;;18161:34;;1601:42:13::1;::::0;4910:18:37;;1601:42:13::1;;;;;;;1444:204:::0;;:::o;1740:201:14:-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;12284:34:37;255:4:18;12334:18:37;;;12327:43;12196:18;;222:39:18;12049:327:37;174:94:18;1857:1:14::1;1824:21;1834:10:::0;1824:9:::1;:21::i;:::-;:35;;::::0;1820:76:::1;;1868:28;::::0;::::1;::::0;;3277:66:37;3265:79;;1868:28:14::1;::::0;::::1;3247:98:37::0;3220:18;;1868:28:14::1;3103:248:37::0;1820:76:14::1;1902:34;1913:10;1933:1;1902:10;:34::i;1702:304:10:-:0;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;12284:34:37;255:4:18;12334:18:37;;;12327:43;12196:18;;222:39:18;12049:327:37;174:94:18;1832:14:10::1;1849:91;1921:4;;1901:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1882:52;;;;;;1849:25;:91::i;:::-;1832:108;;1979:22;1988:6;1996:4;;1979:8;:22::i;:::-;1795:211;1702:304:::0;;:::o;994:568::-;344:21:17;361:4;344:21;352:4;344:21;340:67;;382:18;;;;;;;;;;;;;;340:67;1181:22:10::1;1196:6;1181:14;:22::i;:::-;1253:12;1267:14:::0;1285:133:::1;1354:6;1372:4;;1332:54;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1313:81;;;;;;1402:10;;1285:20;:133::i;:::-;1252:166;;;;1430:7;1425:72;;1471:6;1479:10;;1454:36;;;;;;;;;;;;;:::i;1425:72::-;1535:22;1544:6;1552:4;;1535:8;:22::i;:::-;1142:420;;994:568:::0;;;;;:::o;1675:1486:7:-;1801:17;1824:14;1844:17;1867;1890:18;1919:20;1942:10;;1953:1;1942:13;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1942:13:7;;-1:-1:-1;1962:303:7;;2057:34;2083:7;2057:25;:34::i;:::-;2045:46;;2144;2168:9;2179:10;;2144:23;:46::i;:::-;2099:91;;-1:-1:-1;2099:91:7;;-1:-1:-1;2099:91:7;-1:-1:-1;2099:91:7;-1:-1:-1;2198:60:7;;-1:-1:-1;2198:60:7;1962:303;2275:29;;;;;2271:310;;2370:34;2396:7;2370:25;:34::i;:::-;2358:46;;2457:49;2484:9;2495:10;;2457:26;:49::i;2271:310::-;2591:33;;;;;2587:319;;2690:39;2721:7;2690:30;:39::i;2587:319::-;2916:29;;;;;2912:196;;3066:35;3081:7;3090:10;;3066:14;:35::i;:::-;3059:42;;;;;;;;;;;;;2912:196;3121:35;;;;;16825:66:37;16813:79;;3121:35:7;;;16795:98:37;16768:18;;3121:35:7;16651:248:37;1675:1486:7;;;;;;;;;;:::o;938:156:16:-;1002:7;1032:56;453:66;1080:6;1032:28;:56::i;562:332:15:-;603:13;690:185;724:141;822:17;:15;:17::i;:::-;761:92;;17146:66:37;761:92:15;;;17134:79:37;17229:11;;;17222:27;;;;17265:12;;761:92:15;;;;;;;;;;;;724:23;:141::i;:::-;690:22;:185::i;:::-;645:238;;;;;;;;:::i;:::-;;;;;;;;;;;;;624:265;;562:332;:::o;456:276:11:-;550:12;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;12284:34:37;255:4:18;12334:18:37;;;12327:43;12196:18;;222:39:18;12049:327:37;174:94:18;631:5:11::1;625:12;620:2;613:5;609:14;596:11;589:49;581:57:::0;-1:-1:-1;649:18:11::1;::::0;::::1;645:50;;689:5;676:19;;;;;;;;;;;:::i;645:50::-;706:21;::::0;4014:42:37;4002:55;;3984:74;;706:21:11::1;::::0;3972:2:37;3957:18;706:21:11::1;;;;;;;456:276:::0;;;:::o;898:90:15:-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;12284:34:37;255:4:18;12334:18:37;;;12327:43;12196:18;;222:39:18;12049:327:37;174:94:18;961:22:15::1;977:5;961:15;:22::i;1309:131:13:-:0;1374:7;1396:39;1424:10;1396:27;:39::i;670:87:16:-;718:7;740:12;750:1;740:9;:12::i;:::-;733:19;;670:87;:::o;1272:229:14:-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;12284:34:37;255:4:18;12334:18:37;;;12327:43;12196:18;;222:39:18;12049:327:37;174:94:18;1411:1:14::1;1378:21;1388:10:::0;1378:9:::1;:21::i;:::-;:35;;;1374:77;;1422:29;::::0;::::1;::::0;;3277:66:37;3265:79;;1422:29:14::1;::::0;::::1;3247:98:37::0;3220:18;;1422:29:14::1;3103:248:37::0;1374:77:14::1;1457:39;1468:10;1480:15;1457:10;:39::i;:::-;1272:229:::0;;:::o;443:115:15:-;491:7;513:40;371:66;290:11:19;;195:112;659:172:8;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;12284:34:37;255:4:18;12334:18:37;;;12327:43;12196:18;;222:39:18;12049:327:37;174:94:18;766:28:8::1;783:10;766:16;:28::i;:::-;800:26;816:9;800:15;:26::i;490:187:19:-:0;568:11;587;622:4;628:7;611:25;;;;;;;;18127::37;;;18183:2;18168:18;;18161:34;18115:2;18100:18;;17953:248;611:25:19;;;;;;;;;;;;;;601:36;;611:25;601:36;;;;661:10;;490:187;-1:-1:-1;;;;490:187:19:o;1041:279:8:-;1166:4;1182:55;;;;;1178:87;;-1:-1:-1;1254:4:8;;1041:279;-1:-1:-1;1041:279:8:o;1178:87::-;1278:37;1302:12;1278:23;:37::i;973:263:20:-;1066:26;;;537:20:31;1061:80:20;;1103:38;;;;;4014:42:37;4002:55;;1103:38:20;;;3984:74:37;3957:18;;1103:38:20;3838:226:37;1061:80:20;1147:35;1166:15;586:9:6;579:23;505:107;1147:35:20;1193:38;;4014:42:37;4002:55;;3984:74;;1193:38:20;;3972:2:37;3957:18;1193:38:20;;;;;;;;973:263;:::o;3480:386:7:-;3611:12;3629:17;3657;3676:14;3692:17;3760:38;3778:7;3787:10;;3760:17;:38::i;:::-;-1:-1:-1;3715:83:7;-1:-1:-1;3715:83:7;;-1:-1:-1;3715:83:7;-1:-1:-1;3715:83:7;-1:-1:-1;3814:19:7;;;;;;:47;;;3837:24;3851:9;3837:13;:24::i;:::-;3804:57;;3651:215;;;3480:386;;;;;;:::o;1370:388:9:-;1487:10;1483:54;;1520:17;;;;;;;;;;;;;;1483:54;1543;256:66:21;1586:10:9;167:18:19;;91:100;1543:54:9;1608:28;;4937:25:37;;;1608:28:9;;4925:2:37;4910:18;1608:28:9;;;;;;;1704:49;1726:26;1704:21;:49::i;2466:230:14:-;420:25:19;;;606:66:14;420:25:19;;;;18127::37;;;;2544:96:14;;;18168:18:37;;;18161:34;;;420:25:19;;;;;;;;;18100:18:37;;;420:25:19;;;410:36;;;;;;;2605:33:14;;;463:17:19;;;;18378:98:37;;18492:18;;;18485:83;2651:40:14;;;;;;;18351:18:37;2651:40:14;;;2466:230;;:::o;1173:224:26:-;1279:107;;18877:66:37;1279:107:26;;;18865:79:37;1325:13:26;18960:11:37;;;18953:27;19031:66;1356:4:26;19018:2:37;19014:15;19010:88;18996:12;;;18989:110;19115:12;;;19108:28;;;1240:7:26;;19152:12:37;;1279:107:26;;;;;;;;;;;;;1262:130;;;;;;1255:137;;1173:224;;;:::o;2164:1144:10:-;2316:4;2301:12;2335:963;2359:4;2355:1;:8;2335:963;;;2380:32;2415:4;;2420:1;2415:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2380:42;-1:-1:-1;2451:20:10;;;;;2486:9;:20;2482:69;;;2528:1;2531:8;2541:9;2515:36;;;;;;;;19769:25:37;;;;19810:18;;;19803:34;;;;19853:18;;;19846:34;19742:18;;2515:36:10;19567:319:37;2482:69:10;2562:12;2588:24;;;;:11;:24;:::i;:::-;2584:415;;;2636:145;2671:18;;;;;;;;:::i;:::-;2703:13;;:36;;2731:8;2703:36;;;2719:9;2703:36;2753:16;;;;:11;:16;:::i;:::-;2636:21;:145::i;:::-;2626:155;;2584:415;;;2820:168;2847:18;;;;;;;;:::i;:::-;2879:17;;;;2910:13;;:36;;2938:8;2910:36;;;2926:9;2910:36;2960:16;;;;:11;:16;:::i;:::-;2820:13;:168::i;:::-;2810:178;;2584:415;3013:7;3009:281;;;3050:7;3039:22;3059:1;3039:22;;;;4937:25:37;;4925:2;4910:18;;4791:177;3039:22:10;;;;;;;;3009:281;;;3145:134;3171:25;;;;;;;;:::i;:::-;3210:7;3231:1;3246:21;:19;:21::i;:::-;3145:12;:134::i;:::-;-1:-1:-1;;;2365:3:10;;2335:963;;;;2254:1050;2164:1144;;;:::o;1568:506:16:-;187:2:30;658:23;;;248:16;706:31;;1681:13:16;1788:16;658:23:30;1788:9:16;:16::i;:::-;1765:39;;1830:13;1814:12;:29;1810:101;;1860:44;;;;;;;;19769:25:37;;;19810:18;;;19803:34;;;19853:18;;;19846:34;;;19742:18;;1860:44:16;19567:319:37;1810:101:16;420:25:19;;;453:66:16;420:25:19;;;;18127::37;;;;18168:18;;;18161:34;;;420:25:19;;;;;;;;;18100:18:37;;;;420:25:19;;;410:36;;;;;1970:1:16;1954:17;;463::19;;;;2021:28:16;;;18127:25:37;;;18183:2;18168:18;;18161:34;;;2021:28:16;;18100:18:37;2021:28:16;;;;;;;2057:7;;;;1568:506;:::o;8892:642:26:-;8996:17;;;;9131:41;9145:10;9157:14;:10;9168:1;9157:10;;:14;:::i;:::-;9131:13;:41::i;:::-;622:9:34;656:13;;;1585:25:32;;1626:3;1622:14;683:2:34;676:14;;;715:2;702:16;;;656:13;;9379:1:26;2034:23:32;;;2021:37;2074:3;2070:14;676::34;;;;702:16;;;;1622:14:32;;9109:63:26;;-1:-1:-1;702:16:34;2070:14:32;-1:-1:-1;8892:642:26;-1:-1:-1;;;;8892:642:26:o;648:262:28:-;752:17;;;;854:51;878:10;890:14;:10;901:1;890:10;;:14;:::i;:::-;854:23;:51::i;:::-;847:58;;;;;;;;648:262;;;;;;;:::o;404:213:29:-;502:104;;18877:66:37;502:104:29;;;18865:79:37;463:7:29;18960:11:37;;;18953:27;;;19031:66;576:4:29;19018:2:37;19014:15;19010:88;18996:12;;;18989:110;19115:12;;;19108:28;;;463:7:29;19152:12:37;;502:104:29;18579:591:37;2320:2059:27;2428:17;;;;;3378:14:33;2563:1:27;3290:25:33;;3277:39;3336:3;3332:14;2428:17:27;2768:16;3378:14:33;3332;2768:16:27;:::i;:::-;2750:34;-1:-1:-1;2883:72:27;2908:7;2923:26;2750:34;2934:6;2923:10;;:26;:::i;2883:72::-;2791:164;;-1:-1:-1;2791:164:27;;-1:-1:-1;2791:164:27;-1:-1:-1;2791:164:27;-1:-1:-1;2791:164:27;-1:-1:-1;2966:18:27;;;2962:118;;;3027:26;3045:7;3038:6;3027:10;;:26;:::i;:::-;3055:9;3066:6;3001:72;;;;;;;;;;;;;;:::i;2962:118::-;3095:7;3086:16;;3283:1092;3290:26;;;3283:1092;;;3390:1:33;3378:14;;;3290:25;;3277:39;3336:3;3332:14;;-1:-1:-1;3444:16:27;3378:14:33;3332;3444:16:27;:::i;:::-;3434:26;;3469:22;3687:105;3714:34;3738:9;3714:23;:34::i;:::-;3758:10;;3769:6;3758:26;3776:7;3758:26;;;;;;;:::i;3687:105::-;3500:292;;-1:-1:-1;3500:292:27;;-1:-1:-1;3500:292:27;-1:-1:-1;3500:292:27;;-1:-1:-1;;3833:18:27;;;3829:122;;;3896:26;3914:7;3907:6;3896:10;;:26;:::i;:::-;3924:9;3935:6;3870:72;;;;;;;;;;;;;;:::i;3829:122::-;4216:10;4198:14;:28;4194:115;;4245:55;;;;;;;;18127:25:37;;;18168:18;;;18161:34;;;18100:18;;4245:55:27;17953:248:37;4194:115:27;4330:14;-1:-1:-1;4361:7:27;-1:-1:-1;4361:7:27;3283:1092;;;2540:1839;;;2320:2059;;;;;;;;;:::o;1792:810:35:-;1902:13;;1859;;1950:1;1935:16;;;1880:19;2076:1;2071;2066:6;;2065:12;2055:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2055:23:35;;2029:49;;2087:12;2111:14;2137:15;2170:9;2165:280;2189:11;2185:1;:15;2165:280;;;2248:6;2255:1;2248:9;;;;;;;;:::i;:::-;;;;;2237:1;2268:9;;;;2227:11;;;;2248:9;;;;;2226:32;;;;;2288:149;2303:1;2295:4;:9;2288:149;;2368:11;;;;;;;;;;;;;;;;;;2318:9;;;;;2399:4;2381:14;;;2380:23;;2368:36;;;;;;:::i;:::-;;;;;;;;;2339:10;2350:7;2339:19;;;;;;;;:::i;:::-;;;;:66;;;;;;;;;;-1:-1:-1;2417:9:35;;;;;2288:149;;;2202:3;;2165:280;;;-1:-1:-1;2457:8:35;;2453:105;;2506:11;;;;;;;;;;;;;;;;;2534:4;2530:1;:8;2519:6;:20;;2543:4;2518:29;2506:42;;;;;;;;:::i;:::-;;;;;;;;;2477:10;2488:7;2477:19;;;;;;;;:::i;:::-;;;;:72;;;;;;;;;;;2453:105;-1:-1:-1;2580:10:35;;1792:810;-1:-1:-1;;;;;;1792:810:35:o;823:139::-;891:13;948:7;926:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;912:45;;823:139;;;:::o;992:141:15:-;1047:48;371:66;1089:5;167:18:19;;91:100;1047:48:15;1106:22;;4937:25:37;;;1106:22:15;;4925:2:37;4910:18;1106:22:15;4791:177:37;771:190:13;851:19;893:62;434:66;944:10;893:28;:62::i;942:233:11:-;1028:4;1044:48;;;;;1040:80;;-1:-1:-1;1109:4:11;;942:233;-1:-1:-1;942:233:11:o;1040:80::-;1133:37;1157:12;1133:23;:37::i;870:201:5:-;1016:4;1035:31;1055:10;1035:19;:31::i;2248:337:34:-;2353:6;2401:4;2395:11;2445:12;2431;2426:3;2413:45;2566:1;2555;2533:12;2520:3;2507;2493:4;2471:104;2466:109;2248:337;-1:-1:-1;;;;;;2248:337:34:o;1525:353::-;1640:6;1688:4;1682:11;1732:12;1718;1713:3;1700:45;1859:1;1848;1826:12;1813:3;1799:4;1786:3;1772:4;1758:110;1753:115;1525:353;-1:-1:-1;;;;;;;1525:353:34:o;852:271::-;897:14;948:16;982:4;976:11;971:16;;1014:2;1011:1;1007:10;1048:4;1041:5;1037:16;1031:4;1024:30;1071:4;1068:1;1061:15;1108:4;1105:1;1098:5;1083:30;;;852:271;:::o;3644:286:10:-;3781:14;3777:149;;;3849:7;3843:14;3836:4;3827:7;3823:18;3816:42;3777:149;3894:7;3885:34;3903:6;3911:7;3885:34;;;;;;;:::i;:::-;;;;;;;;3644:286;;;;:::o;3525:4708:26:-;3635:14;3655:12;3696:14;3765:4458;3772:26;;;3765:4458;;;1475:1:33;1463:14;;;1390:25;;1377:39;1432:3;1428:14;3923:20:26;;;3919:402;;2205:2:33;2193:15;;;2046:25;;2033:39;2088:3;2084:14;;;;2118:2;2114:13;2129:42;2110:62;;;1873:23:26;;:49;;4231:4;:59;;4286:4;4231:59;;;622:9:34;656:13;;;683:2;676:14;;;715:2;702:16;;4252:31:26;4224:66;;4302:8;;;;;;3919:402;4335:4;4331:679;;1475:1:33;1463:14;;;1390:25;;;1377:39;1432:3;1428:14;;4560:11:26;;4396:16;4598:72;4631:10;4643:26;4560:11;1463:14:33;4643:10:26;1390:25:33;4643:26:26;:::i;:::-;4598:32;:72::i;:::-;4764:20;;;;;;;;4691:7;;-1:-1:-1;4691:7:26;;4764:20;-1:-1:-1;1893:3:26;1873:23;;;;;1899;;;1873:49;4920:4;:59;;4975:4;4920:59;;;622:9:34;656:13;;;683:2;676:14;;;715:2;702:16;;4941:31:26;4913:66;;4991:8;;;;;;;4331:679;625:1;5024:4;:30;5020:932;;5104:16;;2046:25:33;;;2033:39;2088:3;2084:14;;;;2118:2;2114:13;2129:42;2110:62;2205:2;2193:15;;5146:64:26;-1:-1:-1;5146:64:26;;-1:-1:-1;5146:64:26;-1:-1:-1;5256:12:26;3290:25:33;;;3277:39;3336:3;3332:14;3390:1;3378:14;;5280:46:26;;;;;;;;;;;;;5380:15;5407:4;5398:6;:13;5380:31;;5428:81;5464:10;5476:4;5482:10;;5493:6;5482:26;5500:7;5482:26;;;;;;;:::i;:::-;5428:35;:81::i;:::-;5423:190;;5555:10;5567:4;5573:26;5591:7;5584:6;5573:10;;:26;:::i;:::-;5532:68;;;;;;;;;;;;;;:::i;5423:190::-;5706:20;;;;;;;;;-1:-1:-1;5706:20:26;1893:3;1873:23;;;;;1899;;;1873:49;5862:4;:59;;5917:4;5862:59;;;622:9:34;656:13;;;683:2;676:14;;;715:2;702:16;;5883:31:26;5855:66;;5933:8;;;;;;;;5020:932;667:1;5966:4;:17;5962:243;;4550:2:33;4536:17;;;4487:27;;4474:41;6115:4:26;:59;;6170:4;6115:59;;;622:9:34;656:13;;;683:2;676:14;;;715:2;702:16;;6136:31:26;6108:66;;6186:8;;;;5962:243;711:1;6219:4;:19;6215:472;;3390:1:33;3378:14;;;;3290:25;;;3277:39;3336:3;3332:14;;6409:13:26;;;;6309:12;;6494:53;6508:10;6520:26;6409:13;3378:14:33;6520:10:26;3290:25:33;6520:26:26;:::i;6494:53::-;622:9:34;656:13;;;683:2;676:14;715:2;702:16;;;6560:17:26;;;;;-1:-1:-1;6649:7:26;;-1:-1:-1;6668:8:26;;-1:-1:-1;;;6668:8:26;6215:472;802:1;6701:4;:19;6697:979;;6864:22;1390:25:33;;;1377:39;1432:3;1428:14;1475:1;1463:14;;6898:55:26;-1:-1:-1;6898:55:26;;;-1:-1:-1;6966:25:26;2699::33;;;2686:39;2745:3;2741:14;2797:1;2785:14;;7003:59:26;-1:-1:-1;7003:59:26;;;-1:-1:-1;7075:12:26;3290:25:33;;;3277:39;3336:3;3332:14;3390:1;3378:14;;7099:46:26;;;;;;;;;;;;;7157:15;7184:4;7175:6;:13;7157:31;;7201:22;7225:20;7290:53;7304:10;7316;;7327:6;7316:26;7334:7;7316:26;;;;;;;:::i;7290:53::-;7364:7;;-1:-1:-1;7364:7:26;;7257:86;;-1:-1:-1;7257:86:26;-1:-1:-1;7388:35:26;;;7384:92;;7439:24;;;;7384:92;2976:73;;;26429:66:37;2976:73:26;;;;26417:79:37;;;;26512:12;;;26505:28;;;26549:12;;;26542:28;;;26586:12;;;;26579:28;;;2976:73:26;;;;;;;;;;26623:13:37;;;;2976:73:26;;;2966:84;;;;;7585:4;:59;;7640:4;7585:59;;;622:9:34;656:13;;;683:2;676:14;;;715:2;702:16;;7606:31:26;7578:66;;7657:8;;;;;;;;;;6697:979;758:1;7690:4;:22;7686:485;;4550:2:33;4536:17;;;4487:27;;4474:41;7920:23:26;;;7916:82;;7968:17;7959:26;;7916:82;8010:12;8025:37;8052:9;8025:26;:37::i;:::-;8010:52;-1:-1:-1;8081:4:26;:59;;8136:4;8081:59;;;622:9:34;656:13;;;683:2;676:14;;;715:2;702:16;;8102:31:26;8074:66;;8152:8;;;;;7686:485;8188:26;;;;;;;;4937:25:37;;;4910:18;;8188:26:26;4791:177:37;3765:4458:26;3678:4551;3525:4708;;;;;;:::o;1296:160:27:-;862:44;1372:7;656:13:34;;;683:2;676:14;;;715:2;702:16;;1394:57:27;543:185:34;4591:421:14;4677:4;4700:46;;;4716:30;4700:46;;:106;;-1:-1:-1;4756:50:14;;;4772:34;4756:50;4700:106;:165;;;-1:-1:-1;4816:49:14;;;4832:33;4816:49;4700:165;:224;;;-1:-1:-1;4875:49:14;;;4891:33;4875:49;4700:224;4689:268;;;-1:-1:-1;4946:4:14;;4591:421;-1:-1:-1;4591:421:14:o;4689:268::-;4970:37;4994:12;4970:23;:37::i;965:340:13:-;1048:4;1064:31;1084:10;2132:132:9;;27330:66:37;2132:132:9;;;27318:79:37;27447:66;2187:7:9;27434:2:37;27430:15;27426:88;27413:11;;;27406:109;27531:12;;;27524:28;;;2236:14:9;27568:12:37;;;27561:28;2039:4:9;;2312;;27605:12:37;;2132:132:9;;;;;;;;;;;;;2109:167;;2132:132;2109:167;;;;2058:259;;;;1956:366;-1:-1:-1;;1956:366:9;1064:31:13;1060:63;;;-1:-1:-1;1112:4:13;;965:340;-1:-1:-1;965:340:13:o;1060:63::-;1129:18;1150:39;1178:10;1150:27;:39::i;:::-;1129:60;-1:-1:-1;1253:15:13;;;;;:47;;-1:-1:-1;1285:15:13;-1:-1:-1;1272:28:13;1246:54;-1:-1:-1;;965:340:13:o;1767:2316:36:-;1867:14;1914:2;1893:23;;1889:70;;1948:10;;1925:34;;;;;;;;;;;;:::i;1889:70::-;1965:21;1989:43;2010:21;2030:1;2010:10;:21;:::i;:::-;1226:23:32;;1213:37;1266:3;1262:14;;1071:215;1989:43:36;1965:67;;;-1:-1:-1;2115:2:36;1226:23:32;;1213:37;1266:3;1262:14;795:37;;2202:2:36;808:23:32;;795:37;3209:66:36;3196:79;;3192:135;;;3306:10;;3318:1;3292:28;;;;;;;;;;;;;:::i;3192:135::-;3337:1;:7;;3342:2;3337:7;;:18;;;;;3348:1;:7;;3353:2;3348:7;;3337:18;3333:74;;;3386:10;;3398:1;3372:28;;;;;;;;;;;;;:::i;3333:74::-;1253:1;3447:13;:32;3443:509;;3498:25;;;;;;;;;;;;24589::37;;;24662:4;24650:17;;24630:18;;;24623:45;;;;24684:18;;;24677:34;;;24727:18;;;24720:34;;;3498:25:36;;24561:19:37;;3498:25:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3489:34;;3443:509;;;1303:1;3608:13;:34;3604:348;;3690:59;;25007:66:37;3690:59:36;;;24995:79:37;25090:12;;;25083:28;;;3661:130:36;;25127:12:37;;3690:59:36;;;;;;;;;;;;;3680:70;;3690:59;3680:70;;;;3661:130;;;;;;;;;24589:25:37;24662:4;24650:17;;24630:18;;;24623:45;24684:18;;;24677:34;;;24727:18;;;24720:34;;;24561:19;;3661:130:36;24362:398:37;3604:348:36;3913:10;;3925:13;3940:4;3888:57;;;;;;;;;;;;;;:::i;3604:348::-;3999:22;;;3995:63;;4047:10;;4030:28;;;;;;;;;;;;:::i;3995:63::-;4065:13;;;;1767:2316;;;;;:::o;4411:951::-;4535:10;4557:22;;;4553:66;;4596:16;;;;;;;;;;;;;;4553:66;4625:21;4655:10;;4666:21;4686:1;4655:10;4666:21;:::i;:::-;4655:33;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;1253:1:36;4699:32;;;:70;;;1303:1;4735:13;:34;4699:70;4695:663;;;4873:7;4837:43;;:32;4851:5;4858:10;;4837:13;:32::i;:::-;:43;;;4829:51;;4695:663;;;1359:1;4898:13;:40;4894:464;;5060:40;;;;5101:5;5108:10;5119:1;5108:10;5121:21;5141:1;5108:10;5121:21;:::i;:::-;5108:35;;;;;;;:::i;:::-;5060:84;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5030:114;;:26;:114;;-1:-1:-1;4894:464:36;;;5318:10;;5330:13;5345:5;5293:58;;;;;;;;;;;;;;:::i;4894:464::-;4547:815;4411:951;;;;;;:::o;2227:182:26:-;2346:57;;26889:66:37;2346:57:26;;;26877:79:37;26972:12;;;26965:28;;;2314:7:26;;27009:12:37;;2346:57:26;26647:380:37;4140:231:10;4226:4;4242:46;;;;;4238:78;;-1:-1:-1;4305:4:10;;4140:231;-1:-1:-1;4140:231:10:o;4238:78::-;4329:37;4353:12;2358:4:13;2374:49;;;;;2370:81;;-1:-1:-1;2440:4:13;;2233:273;-1:-1:-1;2233:273:13:o;2370:81::-;2464:37;2488:12;2644:4:9;2663:37;2687:12;1532:4:20;1548:47;;;;;1544:79;;-1:-1:-1;1612:4:20;;1446:232;-1:-1:-1;1446:232:20:o;1544:79::-;1636:37;1660:12;6101:4:7;6124:45;;;6140:29;6124:45;;:103;;-1:-1:-1;6179:48:7;;;6195:32;6179:48;6124:103;6113:147;;;-1:-1:-1;6249:4:7;;6015:300;-1:-1:-1;6015:300:7:o;6113:147::-;725:31:12;709:47;;;;6273:37:7;613:148:12;14:271:37;197:6;189;184:3;171:33;153:3;223:16;;248:13;;;223:16;14:271;-1:-1:-1;14:271:37:o;290:177::-;375:66;368:5;364:78;357:5;354:89;344:117;;457:1;454;447:12;472:245;530:6;583:2;571:9;562:7;558:23;554:32;551:52;;;599:1;596;589:12;551:52;638:9;625:23;657:30;681:5;657:30;:::i;914:196::-;982:20;;1042:42;1031:54;;1021:65;;1011:93;;1100:1;1097;1090:12;1011:93;914:196;;;:::o;1115:186::-;1174:6;1227:2;1215:9;1206:7;1202:23;1198:32;1195:52;;;1243:1;1240;1233:12;1195:52;1266:29;1285:9;1266:29;:::i;1306:367::-;1369:8;1379:6;1433:3;1426:4;1418:6;1414:17;1410:27;1400:55;;1451:1;1448;1441:12;1400:55;-1:-1:-1;1474:20:37;;1517:18;1506:30;;1503:50;;;1549:1;1546;1539:12;1503:50;1586:4;1578:6;1574:17;1562:29;;1646:3;1639:4;1629:6;1626:1;1622:14;1614:6;1610:27;1606:38;1603:47;1600:67;;;1663:1;1660;1653:12;1600:67;1306:367;;;;;:::o;1678:437::-;1764:6;1772;1825:2;1813:9;1804:7;1800:23;1796:32;1793:52;;;1841:1;1838;1831:12;1793:52;1881:9;1868:23;1914:18;1906:6;1903:30;1900:50;;;1946:1;1943;1936:12;1900:50;1985:70;2047:7;2038:6;2027:9;2023:22;1985:70;:::i;:::-;2074:8;;1959:96;;-1:-1:-1;1678:437:37;-1:-1:-1;;;;1678:437:37:o;2120:347::-;2171:8;2181:6;2235:3;2228:4;2220:6;2216:17;2212:27;2202:55;;2253:1;2250;2243:12;2202:55;-1:-1:-1;2276:20:37;;2319:18;2308:30;;2305:50;;;2351:1;2348;2341:12;2305:50;2388:4;2380:6;2376:17;2364:29;;2440:3;2433:4;2424:6;2416;2412:19;2408:30;2405:39;2402:59;;;2457:1;2454;2447:12;2472:626;2569:6;2577;2585;2593;2601;2654:3;2642:9;2633:7;2629:23;2625:33;2622:53;;;2671:1;2668;2661:12;2622:53;2694:29;2713:9;2694:29;:::i;:::-;2684:39;;2742:38;2776:2;2765:9;2761:18;2742:38;:::i;:::-;2732:48;;2827:2;2816:9;2812:18;2799:32;2789:42;;2882:2;2871:9;2867:18;2854:32;2909:18;2901:6;2898:30;2895:50;;;2941:1;2938;2931:12;2895:50;2980:58;3030:7;3021:6;3010:9;3006:22;2980:58;:::i;:::-;2472:626;;;;-1:-1:-1;2472:626:37;;-1:-1:-1;3057:8:37;;2954:84;2472:626;-1:-1:-1;;;2472:626:37:o;3356:477::-;3435:6;3443;3451;3504:2;3492:9;3483:7;3479:23;3475:32;3472:52;;;3520:1;3517;3510:12;3472:52;3556:9;3543:23;3533:33;;3617:2;3606:9;3602:18;3589:32;3644:18;3636:6;3633:30;3630:50;;;3676:1;3673;3666:12;3630:50;3715:58;3765:7;3756:6;3745:9;3741:22;3715:58;:::i;:::-;3356:477;;3792:8;;-1:-1:-1;3689:84:37;;-1:-1:-1;;;;3356:477:37:o;4069:717::-;4159:6;4167;4175;4183;4236:2;4224:9;4215:7;4211:23;4207:32;4204:52;;;4252:1;4249;4242:12;4204:52;4292:9;4279:23;4321:18;4362:2;4354:6;4351:14;4348:34;;;4378:1;4375;4368:12;4348:34;4417:58;4467:7;4458:6;4447:9;4443:22;4417:58;:::i;:::-;4494:8;;-1:-1:-1;4391:84:37;-1:-1:-1;4582:2:37;4567:18;;4554:32;;-1:-1:-1;4598:16:37;;;4595:36;;;4627:1;4624;4617:12;4595:36;;4666:60;4718:7;4707:8;4696:9;4692:24;4666:60;:::i;:::-;4069:717;;;;-1:-1:-1;4745:8:37;-1:-1:-1;;;;4069:717:37:o;4973:180::-;5032:6;5085:2;5073:9;5064:7;5060:23;5056:32;5053:52;;;5101:1;5098;5091:12;5053:52;-1:-1:-1;5124:23:37;;4973:180;-1:-1:-1;4973:180:37:o;5158:248::-;5226:6;5234;5287:2;5275:9;5266:7;5262:23;5258:32;5255:52;;;5303:1;5300;5293:12;5255:52;-1:-1:-1;;5326:23:37;;;5396:2;5381:18;;;5368:32;;-1:-1:-1;5158:248:37:o;5884:844::-;6030:6;6038;6046;6054;6062;6115:2;6103:9;6094:7;6090:23;6086:32;6083:52;;;6131:1;6128;6121:12;6083:52;6171:9;6158:23;6200:18;6241:2;6233:6;6230:14;6227:34;;;6257:1;6254;6247:12;6227:34;6296:70;6358:7;6349:6;6338:9;6334:22;6296:70;:::i;:::-;6385:8;;-1:-1:-1;6270:96:37;-1:-1:-1;6467:2:37;6452:18;;6439:32;;-1:-1:-1;6524:2:37;6509:18;;6496:32;;-1:-1:-1;6540:16:37;;;6537:36;;;6569:1;6566;6559:12;6537:36;;6608:60;6660:7;6649:8;6638:9;6634:24;6608:60;:::i;7568:250::-;7653:1;7663:113;7677:6;7674:1;7671:13;7663:113;;;7753:11;;;7747:18;7734:11;;;7727:39;7699:2;7692:10;7663:113;;;-1:-1:-1;;7810:1:37;7792:16;;7785:27;7568:250::o;7823:330::-;7865:3;7903:5;7897:12;7930:6;7925:3;7918:19;7946:76;8015:6;8008:4;8003:3;7999:14;7992:4;7985:5;7981:16;7946:76;:::i;:::-;8067:2;8055:15;8072:66;8051:88;8042:98;;;;8142:4;8038:109;;7823:330;-1:-1:-1;;7823:330:37:o;8158:220::-;8307:2;8296:9;8289:21;8270:4;8327:45;8368:2;8357:9;8353:18;8345:6;8327:45;:::i;8383:184::-;8435:77;8432:1;8425:88;8532:4;8529:1;8522:15;8556:4;8553:1;8546:15;8572:980;8640:6;8693:2;8681:9;8672:7;8668:23;8664:32;8661:52;;;8709:1;8706;8699:12;8661:52;8749:9;8736:23;8778:18;8819:2;8811:6;8808:14;8805:34;;;8835:1;8832;8825:12;8805:34;8873:6;8862:9;8858:22;8848:32;;8918:7;8911:4;8907:2;8903:13;8899:27;8889:55;;8940:1;8937;8930:12;8889:55;8976:2;8963:16;8998:2;8994;8991:10;8988:36;;;9004:18;;:::i;:::-;9138:2;9132:9;9200:4;9192:13;;9043:66;9188:22;;;9212:2;9184:31;9180:40;9168:53;;;9236:18;;;9256:22;;;9233:46;9230:72;;;9282:18;;:::i;:::-;9322:10;9318:2;9311:22;9357:2;9349:6;9342:18;9397:7;9392:2;9387;9383;9379:11;9375:20;9372:33;9369:53;;;9418:1;9415;9408:12;9369:53;9474:2;9469;9465;9461:11;9456:2;9448:6;9444:15;9431:46;9519:1;9497:15;;;9514:2;9493:24;9486:35;;;;-1:-1:-1;9501:6:37;8572:980;-1:-1:-1;;;;;8572:980:37:o;9557:319::-;9624:6;9632;9685:2;9673:9;9664:7;9660:23;9656:32;9653:52;;;9701:1;9698;9691:12;9653:52;9740:9;9727:23;9759:30;9783:5;9759:30;:::i;:::-;9808:5;-1:-1:-1;9832:38:37;9866:2;9851:18;;9832:38;:::i;:::-;9822:48;;9557:319;;;;;:::o;9881:1210::-;10041:6;10049;10057;10065;10073;10081;10089;10097;10150:3;10138:9;10129:7;10125:23;10121:33;10118:53;;;10167:1;10164;10157:12;10118:53;10190:29;10209:9;10190:29;:::i;:::-;10180:39;;10238:38;10272:2;10261:9;10257:18;10238:38;:::i;:::-;10228:48;;10327:2;10316:9;10312:18;10299:32;10350:18;10391:2;10383:6;10380:14;10377:34;;;10407:1;10404;10397:12;10377:34;10446:70;10508:7;10499:6;10488:9;10484:22;10446:70;:::i;:::-;10535:8;;-1:-1:-1;10420:96:37;-1:-1:-1;10623:2:37;10608:18;;10595:32;;-1:-1:-1;10639:16:37;;;10636:36;;;10668:1;10665;10658:12;10636:36;10707:72;10771:7;10760:8;10749:9;10745:24;10707:72;:::i;:::-;10798:8;;-1:-1:-1;10681:98:37;-1:-1:-1;10886:3:37;10871:19;;10858:33;;-1:-1:-1;10903:16:37;;;10900:36;;;10932:1;10929;10922:12;10900:36;;10971:60;11023:7;11012:8;11001:9;10997:24;10971:60;:::i;:::-;9881:1210;;;;-1:-1:-1;9881:1210:37;;-1:-1:-1;9881:1210:37;;;;;;11050:8;-1:-1:-1;;;9881:1210:37:o;11349:695::-;11455:6;11463;11471;11479;11487;11495;11548:3;11536:9;11527:7;11523:23;11519:33;11516:53;;;11565:1;11562;11555:12;11516:53;11588:29;11607:9;11588:29;:::i;:::-;11578:39;;11636:38;11670:2;11659:9;11655:18;11636:38;:::i;:::-;11626:48;;11721:2;11710:9;11706:18;11693:32;11683:42;;11772:2;11761:9;11757:18;11744:32;11734:42;;11827:3;11816:9;11812:19;11799:33;11855:18;11847:6;11844:30;11841:50;;;11887:1;11884;11877:12;11841:50;11926:58;11976:7;11967:6;11956:9;11952:22;11926:58;:::i;:::-;11349:695;;;;-1:-1:-1;11349:695:37;;-1:-1:-1;11349:695:37;;12003:8;;11349:695;-1:-1:-1;;;11349:695:37:o;12381:184::-;12433:77;12430:1;12423:88;12530:4;12527:1;12520:15;12554:4;12551:1;12544:15;12760:160;12825:20;;12881:13;;12874:21;12864:32;;12854:60;;12910:1;12907;12900:12;12925:325;13013:6;13008:3;13001:19;13065:6;13058:5;13051:4;13046:3;13042:14;13029:43;;13117:1;13110:4;13101:6;13096:3;13092:16;13088:27;13081:38;12983:3;13239:4;13169:66;13164:2;13156:6;13152:15;13148:88;13143:3;13139:98;13135:109;13128:116;;12925:325;;;;:::o;13255:2028::-;13375:6;13370:3;13363:19;13345:3;13401:4;13442:2;13437:3;13433:12;13467:11;13494;13487:18;;13544:6;13541:1;13537:14;13530:5;13526:26;13514:38;;13575:5;13598:1;13608:1649;13622:6;13619:1;13616:13;13608:1649;;;13693:5;13687:4;13683:16;13678:3;13671:29;13752:6;13739:20;13838:66;13830:5;13814:14;13810:26;13806:99;13786:18;13782:124;13772:152;;13920:1;13917;13910:12;13772:152;13952:30;;14005:4;14049:24;13952:30;14049:24;:::i;:::-;14042:32;14035:40;14029:4;14022:54;14125:33;14154:2;14145:7;14141:16;14125:33;:::i;:::-;14118:41;14111:49;14096:13;;;14089:72;14184:4;14236:16;;;14223:30;14208:13;;;14201:53;14277:4;14358:42;14320:36;14339:16;;;14320:36;:::i;:::-;14316:85;14301:13;;;14294:108;14425:4;14477:16;;;14464:30;14449:13;;;14442:53;14518:4;14576:16;;;14563:30;14650:14;14646:28;;;14676:66;14642:101;14616:128;;14606:156;;14758:1;14755;14748:12;14606:156;14790:34;;;14902:16;;;;-1:-1:-1;14853:21:37;14947:18;14934:32;;14931:52;;;14979:1;14976;14969:12;14931:52;15032:8;15016:14;15012:29;15003:7;14999:43;14996:63;;;15055:1;15052;15045:12;14996:63;15094:2;15089;15083:4;15079:13;15072:25;15118:59;15173:2;15167:4;15163:13;15153:8;15144:7;15118:59;:::i;:::-;15235:12;;;;15110:67;-1:-1:-1;;;15200:15:37;;;;-1:-1:-1;;13644:1:37;13637:9;13608:1649;;;-1:-1:-1;15273:4:37;;13255:2028;-1:-1:-1;;;;;;;13255:2028:37:o;15288:594::-;15638:2;15627:9;15620:21;15677:1;15672:2;15661:9;15657:18;15650:29;15715:7;15710:2;15699:9;15695:18;15688:35;15761:3;15754:4;15743:9;15739:20;15732:33;15601:4;15782:94;15871:3;15860:9;15856:19;15848:6;15840;15782:94;:::i;15887:439::-;16164:6;16153:9;16146:25;16207:2;16202;16191:9;16187:18;16180:30;16127:4;16227:93;16316:2;16305:9;16301:18;16293:6;16285;16227:93;:::i;:::-;16219:101;15887:439;-1:-1:-1;;;;;15887:439:37:o;16331:315::-;16516:6;16505:9;16498:25;16559:2;16554;16543:9;16539:18;16532:30;16479:4;16579:61;16636:2;16625:9;16621:18;16613:6;16605;16579:61;:::i;17288:437::-;17550:9;17545:3;17538:22;17520:3;17589:6;17583:13;17605:74;17672:6;17668:1;17663:3;17659:11;17652:4;17644:6;17640:17;17605:74;:::i;:::-;17699:16;;;;17717:1;17695:24;;17288:437;-1:-1:-1;;17288:437:37:o;19175:387::-;19272:4;19330:11;19317:25;19420:66;19409:8;19393:14;19389:29;19385:102;19365:18;19361:127;19351:155;;19502:1;19499;19492:12;19351:155;19523:33;;;;;19175:387;-1:-1:-1;;19175:387:37:o;19891:180::-;19947:6;20000:2;19988:9;19979:7;19975:23;19971:32;19968:52;;;20016:1;20013;20006:12;19968:52;20039:26;20055:9;20039:26;:::i;20076:580::-;20153:4;20159:6;20219:11;20206:25;20309:66;20298:8;20282:14;20278:29;20274:102;20254:18;20250:127;20240:155;;20391:1;20388;20381:12;20240:155;20418:33;;20470:20;;;-1:-1:-1;20513:18:37;20502:30;;20499:50;;;20545:1;20542;20535:12;20499:50;20578:4;20566:17;;-1:-1:-1;20609:14:37;20605:27;;;20595:38;;20592:58;;;20646:1;20643;20636:12;20914:331;21019:9;21030;21072:8;21060:10;21057:24;21054:44;;;21094:1;21091;21084:12;21054:44;21123:6;21113:8;21110:20;21107:40;;;21143:1;21140;21133:12;21107:40;-1:-1:-1;;21169:23:37;;;21214:25;;;;;-1:-1:-1;20914:331:37:o;21250:184::-;21302:77;21299:1;21292:88;21399:4;21396:1;21389:15;21423:4;21420:1;21413:15;21439:125;21504:9;;;21525:10;;;21522:36;;;21538:18;;:::i;21569:392::-;21788:2;21777:9;21770:21;21751:4;21808:61;21865:2;21854:9;21850:18;21842:6;21834;21808:61;:::i;:::-;21900:2;21885:18;;21878:34;;;;-1:-1:-1;21943:2:37;21928:18;21921:34;21800:69;21569:392;-1:-1:-1;;21569:392:37:o;22155:431::-;22417:3;22412;22405:16;22387:3;22450:6;22444:13;22466:74;22533:6;22529:1;22524:3;22520:11;22513:4;22505:6;22501:17;22466:74;:::i;:::-;22560:16;;;;22578:1;22556:24;;22155:431;-1:-1:-1;;22155:431:37:o;22591:289::-;22766:6;22755:9;22748:25;22809:2;22804;22793:9;22789:18;22782:30;22729:4;22829:45;22870:2;22859:9;22855:18;22847:6;22829:45;:::i;22885:441::-;23104:6;23093:9;23086:25;23159:42;23151:6;23147:55;23142:2;23131:9;23127:18;23120:83;23239:2;23234;23223:9;23219:18;23212:30;23067:4;23259:61;23316:2;23305:9;23301:18;23293:6;23285;23259:61;:::i;:::-;23251:69;22885:441;-1:-1:-1;;;;;;22885:441:37:o;23331:244::-;23488:2;23477:9;23470:21;23451:4;23508:61;23565:2;23554:9;23550:18;23542:6;23534;23508:61;:::i;23580:128::-;23647:9;;;23668:11;;;23665:37;;;23682:18;;:::i;23713:315::-;23898:2;23887:9;23880:21;23861:4;23918:61;23975:2;23964:9;23960:18;23952:6;23944;23918:61;:::i;:::-;23910:69;;24015:6;24010:2;23999:9;23995:18;23988:34;23713:315;;;;;;:::o;24033:324::-;24216:2;24205:9;24198:21;24179:4;24236:61;24293:2;24282:9;24278:18;24270:6;24262;24236:61;:::i;:::-;24228:69;;24345:4;24337:6;24333:17;24328:2;24317:9;24313:18;24306:45;24033:324;;;;;;:::o;25150:396::-;25357:2;25346:9;25339:21;25320:4;25377:61;25434:2;25423:9;25419:18;25411:6;25403;25377:61;:::i;:::-;25469:2;25454:18;;25447:34;;;;-1:-1:-1;25524:14:37;;25517:22;25512:2;25497:18;;;25490:50;25369:69;25150:396;-1:-1:-1;;25150:396:37:o;25877:249::-;25946:6;25999:2;25987:9;25978:7;25974:23;25970:32;25967:52;;;26015:1;26012;26005:12;25967:52;26047:9;26041:16;26066:30;26090:5;26066:30;:::i"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_mainModuleUpgradable\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"}],\"name\":\"BadNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"CreateFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"HookAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"HookDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_available\",\"type\":\"uint256\"}],\"name\":\"NotEnoughGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"CreatedContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"DefinedHook\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"IPFSRootUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"}],\"name\":\"SetExtraImageHash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"TxExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"TxFailed\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INIT_CODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADEABLE_IMPLEMENTATION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"addHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_imageHashes\",\"type\":\"bytes32[]\"}],\"name\":\"clearExtraImageHashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"createContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"extraImageHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsRootBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"readHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"}],\"name\":\"readNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"removeHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"selfExecute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"}],\"name\":\"setExtraImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"updateIPFSRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_ipfsRoot\",\"type\":\"bytes32\"}],\"name\":\"updateImageHashAndIPFS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"updateImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"If using a new main module, developers must ensure that all inherited      contracts by the main module don't conflict and are accounted for to be      supported by the supportsInterface method.\",\"kind\":\"dev\",\"methods\":{\"addHook(bytes4,address)\":{\"details\":\"Can't overwrite hooks that are part of the main module (those defined below)\",\"params\":{\"_implementation\":\"Hook implementation contract\",\"_signature\":\"Signature function linked to the hook\"}},\"createContract(bytes)\":{\"params\":{\"_code\":\"Creation code of the contract\"},\"returns\":{\"addr\":\"The address of the created contract\"}},\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"details\":\"Relayers must ensure that the gasLimit specified for each transaction      is acceptable to them. A user could specify large enough that it could      consume all the gas available.\",\"params\":{\"_nonce\":\"Signature nonce (may contain an encoded space)\",\"_signature\":\"Encoded signature\",\"_txs\":\"Transactions to process\"}},\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"nonce()\":{\"details\":\"The default nonce space is 0x00\",\"returns\":{\"_0\":\"The next nonce\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\"}},\"readHook(bytes4)\":{\"params\":{\"_signature\":\"Signature function\"},\"returns\":{\"_0\":\"The address of the implementation hook, address(0) if none\"}},\"readNonce(uint256)\":{\"params\":{\"_space\":\"Nonce space, each space keeps an independent nonce count\"},\"returns\":{\"_0\":\"The next nonce\"}},\"removeHook(bytes4)\":{\"details\":\"Can't remove hooks that are part of the main module (those defined below)      without upgrading the wallet\",\"params\":{\"_signature\":\"Signature function linked to the hook\"}},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"params\":{\"_txs\":\"Transactions to execute\"}},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}},\"updateImageHashAndIPFS(bytes32,bytes32)\":{\"details\":\"These two operations are often performed together, so this function      allows to save some gas by performing them in a single step.\",\"params\":{\"_imageHash\":\"The new image hash to be set.\",\"_ipfsRoot\":\"The new IPFS root to be set.\"}},\"updateImplementation(address)\":{\"details\":\"WARNING Updating the implementation can brick the wallet\",\"params\":{\"_implementation\":\"New main module implementation\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addHook(bytes4,address)\":{\"notice\":\"Adds a new hook to handle a given function selector\"},\"createContract(bytes)\":{\"notice\":\"Creates a contract forwarding eth value\"},\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"notice\":\"Allow wallet owner to execute an action\"},\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"nonce()\":{\"notice\":\"Returns the next nonce of the default nonce space\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Handle the receipt of multiple ERC1155 token types.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"notice\":\"Handle the receipt of a single ERC1155 token type.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of a single ERC721 token.\"},\"readHook(bytes4)\":{\"notice\":\"Reads the implementation hook of a signature\"},\"readNonce(uint256)\":{\"notice\":\"Returns the next nonce of the given nonce space\"},\"removeHook(bytes4)\":{\"notice\":\"Removes a registered hook\"},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"notice\":\"Allow wallet to execute an action   without signing the message\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"},\"updateImageHashAndIPFS(bytes32,bytes32)\":{\"notice\":\"Updates the image hash and the IPFS root in a single operation.\"},\"updateImplementation(address)\":{\"notice\":\"Updates the implementation of the base wallet\"}},\"notice\":\"Contains the core functionality Sequence wallets will inherit.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/MainModule.sol\":\"MainModule\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/Wallet.sol\":{\"keccak256\":\"0xb7bfad3219a2517d12ef08c0f992cca708fa765f1e2115e05617ca89f170ea92\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a566c143b3230da770140a82d44ae50cfb21fd64ead9a6f19193bbbed3698fd4\",\"dweb:/ipfs/QmSsyNk5WLBFTfoebQWhLLzzjzEcbfcWRJAsJznEnemP5B\"]},\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/interfaces/receivers/IERC1155Receiver.sol\":{\"keccak256\":\"0x934ce83f4abb6e487c5092af8ff0b6ef5ca697b893fa4d24b3d63b994441bf62\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2fef087d5a188a3b96a3bf0ddae611a802dfd6b72dbf92895e9d3512c77b70ff\",\"dweb:/ipfs/QmTsvU6DDK7dJAddyVCMe81oa2bCgmcz4dibbnwGQdmKDt\"]},\"contracts/interfaces/receivers/IERC223Receiver.sol\":{\"keccak256\":\"0x27f58bb8b5a9b976b39a92c9c989a7d76476a121ca60827ff01d4c69c3839f32\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://83af2e3d4e7f42aab73a7ed8f02b9830817f6f621ac17dc9d09d3cccbf2b769f\",\"dweb:/ipfs/QmaBecBuHUtskh5hoKf76wu5wf8aW2rX7oxCtpbLid8vRV\"]},\"contracts/interfaces/receivers/IERC721Receiver.sol\":{\"keccak256\":\"0x20623593e9b812c4ff01da0d9abf3540986f3ce8c4a19137ed42d8d9ee7ec5d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da617c8301ba39ac038d62fd7ae25a8b5e1a076924ef843e55c912ac5677b9f4\",\"dweb:/ipfs/Qmf71tpo1CkuZL5pHXD4TtAxiCeHiDJ3hK5hM7WDEKUzds\"]},\"contracts/modules/MainModule.sol\":{\"keccak256\":\"0x298ac3af404fda12f3a0fd17faf944dbc054c4c512989739e120ce1a38dec886\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad65c03d5c84cf65181d683c83a702d535969448a153b28dc5fca993db9f6679\",\"dweb:/ipfs/QmYPjPZxBy57P4xFT251M4b3JuU9N33L6SvbKwjpdpyJF6\"]},\"contracts/modules/commons/Implementation.sol\":{\"keccak256\":\"0xdebdf1fc930b1ba8248030b07fa1c2c46564962073e49818c672f8ac5b9239b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://687378a78702ab03e0a3ae3160e2ebec734235c220d9522b7dc33cb592734159\",\"dweb:/ipfs/QmTUJjNPHcLbm2KipYof3gyxkpdHS1ivTGMem1qmXnxfg8\"]},\"contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0x58c028f02e3517de6c39584bcf1cedd4e7b23f575c24b363cbad4960a74f8a0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9652fead22c9fe8510de8427e2db354ed145ff30f49f85d1c717e293e5df665\",\"dweb:/ipfs/QmSJPFQxRE5n17DNB5Bu2jwRo17yLS7igMQGt3bvKkdLAP\"]},\"contracts/modules/commons/ModuleAuthConvenience.sol\":{\"keccak256\":\"0x21e304888fa137fad3b1825e2e4763578cf074e214f88852c34df1e6fd3010b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://971a64410251bd8cbd0aa0191fcff8b6e758d9c359488927d4d8d992ed66ff8f\",\"dweb:/ipfs/QmWbtAJ5fKtGxr8AbhAi4mjNuT4sjvTipDpZ78XgKgGN29\"]},\"contracts/modules/commons/ModuleAuthFixed.sol\":{\"keccak256\":\"0x1f30bf3695c4bbd1ddc502bdcdc8ea4e6d7cf8ab526e147d8a2922a13fbb2598\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a73e1869b56b624cbbc3fcd8e04ff958752f9fa4a3311d14787c35f154678d14\",\"dweb:/ipfs/QmaTsWNGLxV5oep6EKAV7wP8FDLvpoRtMBWqEgSTGhzJ1W\"]},\"contracts/modules/commons/ModuleCalls.sol\":{\"keccak256\":\"0x80c0151dbd444f96c2f935e70a6d3cc57e307588fa21d7eace67e568dd3d35c1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39a856555a5eb900e67d351e667135f245ccebd304d692b35fc8bdc83aec1b53\",\"dweb:/ipfs/QmUdWfa7GcTGM5gk7qYbNCHtsxF4o8dXHzr6HbdFng5sQm\"]},\"contracts/modules/commons/ModuleCreator.sol\":{\"keccak256\":\"0x16b1400988f6b7bd4d32bdcb36ee2fbd644fb2c8ca571becc0c32e03602bd303\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8bd4681fb4cff10f4e98e45618fbc52ed0a4c7d4fcf614f34a587ad20cd16855\",\"dweb:/ipfs/QmbA2LYBH1x8WX8CaeiFYMU5rjyLGgNCF32r9fQbXuoqwJ\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleExtraAuth.sol\":{\"keccak256\":\"0x793e557314c05e0b88855bd38f481156994dccdd41a7eb5dc483f2529e0af2fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8424ace720f2be4c0097c94168bb813a9c6767d6a7ffeb3c83a071fc8307c022\",\"dweb:/ipfs/QmRAfrpve92zUTFMzRKxGxksu1bpD9VVpUyyLxUbgFoeXi\"]},\"contracts/modules/commons/ModuleHooks.sol\":{\"keccak256\":\"0xdb8a6a41212d49fc5d8b28ed8e6aebebffed0025ebfc6d712513d49b9c027821\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8d68ef6487f687183d0f0ca8c93c72a1444bffc530a56cc558d4c3f5a4dff852\",\"dweb:/ipfs/QmWNfkgJAAXrV3VkoenNv5PaSoZonWz4kDZR8nP24rXFsb\"]},\"contracts/modules/commons/ModuleIPFS.sol\":{\"keccak256\":\"0xecb4e3d42517d00de4520d8285a5d70babf208ecb78623dbbecf77dff672d225\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://021147a411bb34b171621d0d1d3cf050852a3a4290c6ade44cca9fba795f5b15\",\"dweb:/ipfs/QmWqDWoc3CsTh5ktsAqn6fBK18RctAVp1SfZsSGWvkACDa\"]},\"contracts/modules/commons/ModuleNonce.sol\":{\"keccak256\":\"0x3b5388842f763a5347d632a0e0e8499a54b6f0b0a6eb7f7d3d848319defa042d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b36fa5a88a4e174967f850bf2bb78c787d8016ef7b5eee3e2f883fbfe9b87a7d\",\"dweb:/ipfs/QmTDZiPiQGe1fmTKKzdwzBE1xjkh8apTotW1SQRUCFXf4q\"]},\"contracts/modules/commons/ModuleOnlyDelegatecall.sol\":{\"keccak256\":\"0x32bdb1d343eee2e32fd9d0f1d6dc0e265411d0821bd908881822f0f26f0887f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1537c4f60a609751013bdc69eb1c6e6218982d91013115bc4e28cb84f816cd91\",\"dweb:/ipfs/QmSjkSTrrB4vuxECcm5cRG7YmraF53QWRgftxS827KcQLW\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/ModuleUpdate.sol\":{\"keccak256\":\"0x610c2ab830a0e1e33c6c4d0d079360224f7f83913adfc19a4ea529821d71f400\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c0f4f0a4a87b3a9ee2305ea54a38d431f9ab2dc2cff95785c27cd763116fdd09\",\"dweb:/ipfs/QmWdFMwNKaPdNzVCk8v5Eo23NbEmc8CzGPAAz6NLRZfhZp\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/interfaces/IModuleCalls.sol\":{\"keccak256\":\"0xde065c15e38eb009c3dc8f99dfefdd1d6d244dd12a889a8b57edd90d32fb4395\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://23608955786060457f79267795a61eb89b3910b683fc136c749548369425088f\",\"dweb:/ipfs/QmXNorcQBF1Qk21y3aEJRiiHVtwm61zP4ttA1ZzmRjyHnz\"]},\"contracts/modules/commons/interfaces/IModuleCreator.sol\":{\"keccak256\":\"0xa206dd3d424b8cd1c4f1400aa344cbc974480fea02f0fb371b872558e5ff4e6d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ea14c75f43a0008c582dcbae3ba3c900e446e28039dfdbb059d326ec5cc6a2d2\",\"dweb:/ipfs/QmRfF6BmUWiFkCgzVFbLcHsUCNz5q2XkkcwXPX57ViTK4D\"]},\"contracts/modules/commons/interfaces/IModuleHooks.sol\":{\"keccak256\":\"0x12a20e1fd2840bac0efd8bd43de7bb22053d53c7dc770b9c4c4fcdfdcca35185\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b93da40ad8403203e47f995dc23762706515dc5e41bdb6a6a82747bd378294dc\",\"dweb:/ipfs/QmU1KvoVpWbDLnaK18H9NJ799qTJrFTktXc3vkTpd39X9W\"]},\"contracts/modules/commons/interfaces/IModuleUpdate.sol\":{\"keccak256\":\"0xaa8268ffcc4ba2c2436ace94fe8ad263d5c254d21ac5ef08ce890cbc38fe3d91\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://30c3766118e63207f47b417a7635879246b5ce87d7c7139fe55cb9033ded8b2c\",\"dweb:/ipfs/QmPyzSpYpNeaD5y8ZUR7dXGowKxfqFwipNt7pVScL9sECV\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]},\"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":{\"keccak256\":\"0x98520e740b0822ec053d21f376b8be8a58e93228f3758f9228a7d00e1f60950f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://31226706c004f1a4315d6b8d37621b46f4d5807c16e1ce72675c1431ed9006a2\",\"dweb:/ipfs/QmdSSyCuPex2E2VTd6UMYy9WAq9eJNZ6vHSUomntNknzXE\"]},\"contracts/utils/LibAddress.sol\":{\"keccak256\":\"0x24b886c1b175b785bf06476bf1900c9b335fa4b40841f4b948e31abb0a402dc8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6d9dbe6caa08fb93d758dd71f6afbee35b7eb655a368a60449a2a91ee231593\",\"dweb:/ipfs/QmXzyqBMojdg4C1QvoaLxf4QDeBfkvTkUPmdk1xKUt3tqi\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/LibString.sol\":{\"keccak256\":\"0x18662322f6ce8c4aea601ec11fc7631c843f9bf59dd2526d27db0fef3b2d81b1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://77cc33818f1bbda0d42588d0dd4959a2db288cb1a934d7e710a2923da55cf21e\",\"dweb:/ipfs/QmNR1U27FdvRQGZvrx3hMJqCUsF6NYqziemsVvZEjk767t\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"addHook(bytes4,address)": {
								"notice": "Adds a new hook to handle a given function selector"
							},
							"createContract(bytes)": {
								"notice": "Creates a contract forwarding eth value"
							},
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"notice": "Allow wallet owner to execute an action"
							},
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							},
							"nonce()": {
								"notice": "Returns the next nonce of the default nonce space"
							},
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"notice": "Handle the receipt of multiple ERC1155 token types."
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"notice": "Handle the receipt of a single ERC1155 token type."
							},
							"onERC721Received(address,address,uint256,bytes)": {
								"notice": "Handle the receipt of a single ERC721 token."
							},
							"readHook(bytes4)": {
								"notice": "Reads the implementation hook of a signature"
							},
							"readNonce(uint256)": {
								"notice": "Returns the next nonce of the given nonce space"
							},
							"removeHook(bytes4)": {
								"notice": "Removes a registered hook"
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"notice": "Allow wallet to execute an action   without signing the message"
							},
							"signatureRecovery(bytes32,bytes)": {
								"notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							},
							"updateImageHashAndIPFS(bytes32,bytes32)": {
								"notice": "Updates the image hash and the IPFS root in a single operation."
							},
							"updateImplementation(address)": {
								"notice": "Updates the implementation of the base wallet"
							}
						},
						"notice": "Contains the core functionality Sequence wallets will inherit.",
						"version": 1
					}
				}
			},
			"contracts/modules/commons/Implementation.sol": {
				"Implementation": {
					"abi": [],
					"devdoc": {
						"details": "Allows modules to access the implementation slot",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203b7171d353041344d97bfa62976322ade9881839c8d8fc0a436ff620f6adfa2164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE PUSH18 0x71D353041344D97BFA62976322ADE9881839 0xC8 0xD8 0xFC EXP NUMBER PUSH16 0xF620F6ADFA2164736F6C634300081200 CALLER ",
							"sourceMap": "129:739:6:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212203b7171d353041344d97bfa62976322ade9881839c8d8fc0a436ff620f6adfa2164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE PUSH18 0x71D353041344D97BFA62976322ADE9881839 0xC8 0xD8 0xFC EXP NUMBER PUSH16 0xF620F6ADFA2164736F6C634300081200 CALLER ",
							"sourceMap": "129:739:6:-:0;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Allows modules to access the implementation slot\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/Implementation.sol\":\"Implementation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/Implementation.sol\":{\"keccak256\":\"0xdebdf1fc930b1ba8248030b07fa1c2c46564962073e49818c672f8ac5b9239b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://687378a78702ab03e0a3ae3160e2ebec734235c220d9522b7dc33cb592734159\",\"dweb:/ipfs/QmTUJjNPHcLbm2KipYof3gyxkpdHS1ivTGMem1qmXnxfg8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleAuth.sol": {
				"ModuleAuth": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
								}
							},
							"signatureRecovery(bytes32,bytes)": {
								"details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
								"params": {
									"_digest": "Digest of the signed data.",
									"_signature": "A Sequence signature."
								},
								"returns": {
									"checkpoint": "A nonce that is incremented every time a new configuration is set.",
									"imageHash": "The imageHash of the configuration that signed the message.",
									"subdigest": "A modified version of the original digest, unique for each wallet/network.",
									"threshold": "The required number of signatures needed to consider the signature valid.",
									"weight": "The actual number of signatures collected in the signature."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleAuth.sol\":\"ModuleAuth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0x58c028f02e3517de6c39584bcf1cedd4e7b23f575c24b363cbad4960a74f8a0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9652fead22c9fe8510de8427e2db354ed145ff30f49f85d1c717e293e5df665\",\"dweb:/ipfs/QmSJPFQxRE5n17DNB5Bu2jwRo17yLS7igMQGt3bvKkdLAP\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							},
							"signatureRecovery(bytes32,bytes)": {
								"notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleAuthConvenience.sol": {
				"ModuleAuthConvenience": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "IPFSRootUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ipfsRoot",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ipfsRootBytes32",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "updateIPFSRoot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_ipfsRoot",
									"type": "bytes32"
								}
							],
							"name": "updateImageHashAndIPFS",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
								}
							},
							"signatureRecovery(bytes32,bytes)": {
								"details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
								"params": {
									"_digest": "Digest of the signed data.",
									"_signature": "A Sequence signature."
								},
								"returns": {
									"checkpoint": "A nonce that is incremented every time a new configuration is set.",
									"imageHash": "The imageHash of the configuration that signed the message.",
									"subdigest": "A modified version of the original digest, unique for each wallet/network.",
									"threshold": "The required number of signatures needed to consider the signature valid.",
									"weight": "The actual number of signatures collected in the signature."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							},
							"updateImageHashAndIPFS(bytes32,bytes32)": {
								"details": "These two operations are often performed together, so this function      allows to save some gas by performing them in a single step.",
								"params": {
									"_imageHash": "The new image hash to be set.",
									"_ipfsRoot": "The new IPFS root to be set."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"IPFSRootUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsRootBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"updateIPFSRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_ipfsRoot\",\"type\":\"bytes32\"}],\"name\":\"updateImageHashAndIPFS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}},\"updateImageHashAndIPFS(bytes32,bytes32)\":{\"details\":\"These two operations are often performed together, so this function      allows to save some gas by performing them in a single step.\",\"params\":{\"_imageHash\":\"The new image hash to be set.\",\"_ipfsRoot\":\"The new IPFS root to be set.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"},\"updateImageHashAndIPFS(bytes32,bytes32)\":{\"notice\":\"Updates the image hash and the IPFS root in a single operation.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleAuthConvenience.sol\":\"ModuleAuthConvenience\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0x58c028f02e3517de6c39584bcf1cedd4e7b23f575c24b363cbad4960a74f8a0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9652fead22c9fe8510de8427e2db354ed145ff30f49f85d1c717e293e5df665\",\"dweb:/ipfs/QmSJPFQxRE5n17DNB5Bu2jwRo17yLS7igMQGt3bvKkdLAP\"]},\"contracts/modules/commons/ModuleAuthConvenience.sol\":{\"keccak256\":\"0x21e304888fa137fad3b1825e2e4763578cf074e214f88852c34df1e6fd3010b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://971a64410251bd8cbd0aa0191fcff8b6e758d9c359488927d4d8d992ed66ff8f\",\"dweb:/ipfs/QmWbtAJ5fKtGxr8AbhAi4mjNuT4sjvTipDpZ78XgKgGN29\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleIPFS.sol\":{\"keccak256\":\"0xecb4e3d42517d00de4520d8285a5d70babf208ecb78623dbbecf77dff672d225\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://021147a411bb34b171621d0d1d3cf050852a3a4290c6ade44cca9fba795f5b15\",\"dweb:/ipfs/QmWqDWoc3CsTh5ktsAqn6fBK18RctAVp1SfZsSGWvkACDa\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/LibString.sol\":{\"keccak256\":\"0x18662322f6ce8c4aea601ec11fc7631c843f9bf59dd2526d27db0fef3b2d81b1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://77cc33818f1bbda0d42588d0dd4959a2db288cb1a934d7e710a2923da55cf21e\",\"dweb:/ipfs/QmNR1U27FdvRQGZvrx3hMJqCUsF6NYqziemsVvZEjk767t\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							},
							"signatureRecovery(bytes32,bytes)": {
								"notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							},
							"updateImageHashAndIPFS(bytes32,bytes32)": {
								"notice": "Updates the image hash and the IPFS root in a single operation."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleAuthFixed.sol": {
				"ModuleAuthFixed": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "ImplementationUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "FACTORY",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "INIT_CODE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADEABLE_IMPLEMENTATION",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "updateImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
								}
							},
							"signatureRecovery(bytes32,bytes)": {
								"details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
								"params": {
									"_digest": "Digest of the signed data.",
									"_signature": "A Sequence signature."
								},
								"returns": {
									"checkpoint": "A nonce that is incremented every time a new configuration is set.",
									"imageHash": "The imageHash of the configuration that signed the message.",
									"subdigest": "A modified version of the original digest, unique for each wallet/network.",
									"threshold": "The required number of signatures needed to consider the signature valid.",
									"weight": "The actual number of signatures collected in the signature."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							},
							"updateImplementation(address)": {
								"details": "WARNING Updating the implementation can brick the wallet",
								"params": {
									"_implementation": "New main module implementation"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"FACTORY\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"INIT_CODE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADEABLE_IMPLEMENTATION\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"updateImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}},\"updateImplementation(address)\":{\"details\":\"WARNING Updating the implementation can brick the wallet\",\"params\":{\"_implementation\":\"New main module implementation\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"},\"updateImplementation(address)\":{\"notice\":\"Updates the implementation of the base wallet\"}},\"notice\":\"Implements ModuleAuth by validating the signature image against  the salt used to deploy the contract  This module allows wallets to be deployed with a default configuration  without using any aditional contract storage\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleAuthFixed.sol\":\"ModuleAuthFixed\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/Wallet.sol\":{\"keccak256\":\"0xb7bfad3219a2517d12ef08c0f992cca708fa765f1e2115e05617ca89f170ea92\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a566c143b3230da770140a82d44ae50cfb21fd64ead9a6f19193bbbed3698fd4\",\"dweb:/ipfs/QmSsyNk5WLBFTfoebQWhLLzzjzEcbfcWRJAsJznEnemP5B\"]},\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/Implementation.sol\":{\"keccak256\":\"0xdebdf1fc930b1ba8248030b07fa1c2c46564962073e49818c672f8ac5b9239b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://687378a78702ab03e0a3ae3160e2ebec734235c220d9522b7dc33cb592734159\",\"dweb:/ipfs/QmTUJjNPHcLbm2KipYof3gyxkpdHS1ivTGMem1qmXnxfg8\"]},\"contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0x58c028f02e3517de6c39584bcf1cedd4e7b23f575c24b363cbad4960a74f8a0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9652fead22c9fe8510de8427e2db354ed145ff30f49f85d1c717e293e5df665\",\"dweb:/ipfs/QmSJPFQxRE5n17DNB5Bu2jwRo17yLS7igMQGt3bvKkdLAP\"]},\"contracts/modules/commons/ModuleAuthFixed.sol\":{\"keccak256\":\"0x1f30bf3695c4bbd1ddc502bdcdc8ea4e6d7cf8ab526e147d8a2922a13fbb2598\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a73e1869b56b624cbbc3fcd8e04ff958752f9fa4a3311d14787c35f154678d14\",\"dweb:/ipfs/QmaTsWNGLxV5oep6EKAV7wP8FDLvpoRtMBWqEgSTGhzJ1W\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/ModuleUpdate.sol\":{\"keccak256\":\"0x610c2ab830a0e1e33c6c4d0d079360224f7f83913adfc19a4ea529821d71f400\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c0f4f0a4a87b3a9ee2305ea54a38d431f9ab2dc2cff95785c27cd763116fdd09\",\"dweb:/ipfs/QmWdFMwNKaPdNzVCk8v5Eo23NbEmc8CzGPAAz6NLRZfhZp\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/interfaces/IModuleUpdate.sol\":{\"keccak256\":\"0xaa8268ffcc4ba2c2436ace94fe8ad263d5c254d21ac5ef08ce890cbc38fe3d91\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://30c3766118e63207f47b417a7635879246b5ce87d7c7139fe55cb9033ded8b2c\",\"dweb:/ipfs/QmPyzSpYpNeaD5y8ZUR7dXGowKxfqFwipNt7pVScL9sECV\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]},\"contracts/utils/LibAddress.sol\":{\"keccak256\":\"0x24b886c1b175b785bf06476bf1900c9b335fa4b40841f4b948e31abb0a402dc8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6d9dbe6caa08fb93d758dd71f6afbee35b7eb655a368a60449a2a91ee231593\",\"dweb:/ipfs/QmXzyqBMojdg4C1QvoaLxf4QDeBfkvTkUPmdk1xKUt3tqi\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							},
							"signatureRecovery(bytes32,bytes)": {
								"notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							},
							"updateImplementation(address)": {
								"notice": "Updates the implementation of the base wallet"
							}
						},
						"notice": "Implements ModuleAuth by validating the signature image against  the salt used to deploy the contract  This module allows wallets to be deployed with a default configuration  without using any aditional contract storage",
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleCalls.sol": {
				"ModuleCalls": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_provided",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								}
							],
							"name": "BadNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_requested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_available",
									"type": "uint256"
								}
							],
							"name": "NotEnoughGas",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OnlyDelegatecall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newNonce",
									"type": "uint256"
								}
							],
							"name": "NonceChange",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "TxExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_reason",
									"type": "bytes"
								}
							],
							"name": "TxFailed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								}
							],
							"name": "readNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								}
							],
							"name": "selfExecute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"details": "Relayers must ensure that the gasLimit specified for each transaction      is acceptable to them. A user could specify large enough that it could      consume all the gas available.",
								"params": {
									"_nonce": "Signature nonce (may contain an encoded space)",
									"_signature": "Encoded signature",
									"_txs": "Transactions to process"
								}
							},
							"nonce()": {
								"details": "The default nonce space is 0x00",
								"returns": {
									"_0": "The next nonce"
								}
							},
							"readNonce(uint256)": {
								"params": {
									"_space": "Nonce space, each space keeps an independent nonce count"
								},
								"returns": {
									"_0": "The next nonce"
								}
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"params": {
									"_txs": "Transactions to execute"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"}],\"name\":\"BadNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_available\",\"type\":\"uint256\"}],\"name\":\"NotEnoughGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"TxExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"TxFailed\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"}],\"name\":\"readNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"selfExecute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"details\":\"Relayers must ensure that the gasLimit specified for each transaction      is acceptable to them. A user could specify large enough that it could      consume all the gas available.\",\"params\":{\"_nonce\":\"Signature nonce (may contain an encoded space)\",\"_signature\":\"Encoded signature\",\"_txs\":\"Transactions to process\"}},\"nonce()\":{\"details\":\"The default nonce space is 0x00\",\"returns\":{\"_0\":\"The next nonce\"}},\"readNonce(uint256)\":{\"params\":{\"_space\":\"Nonce space, each space keeps an independent nonce count\"},\"returns\":{\"_0\":\"The next nonce\"}},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"params\":{\"_txs\":\"Transactions to execute\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"notice\":\"Allow wallet owner to execute an action\"},\"nonce()\":{\"notice\":\"Returns the next nonce of the default nonce space\"},\"readNonce(uint256)\":{\"notice\":\"Returns the next nonce of the given nonce space\"},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"notice\":\"Allow wallet to execute an action   without signing the message\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleCalls.sol\":\"ModuleCalls\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/ModuleCalls.sol\":{\"keccak256\":\"0x80c0151dbd444f96c2f935e70a6d3cc57e307588fa21d7eace67e568dd3d35c1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39a856555a5eb900e67d351e667135f245ccebd304d692b35fc8bdc83aec1b53\",\"dweb:/ipfs/QmUdWfa7GcTGM5gk7qYbNCHtsxF4o8dXHzr6HbdFng5sQm\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleNonce.sol\":{\"keccak256\":\"0x3b5388842f763a5347d632a0e0e8499a54b6f0b0a6eb7f7d3d848319defa042d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b36fa5a88a4e174967f850bf2bb78c787d8016ef7b5eee3e2f883fbfe9b87a7d\",\"dweb:/ipfs/QmTDZiPiQGe1fmTKKzdwzBE1xjkh8apTotW1SQRUCFXf4q\"]},\"contracts/modules/commons/ModuleOnlyDelegatecall.sol\":{\"keccak256\":\"0x32bdb1d343eee2e32fd9d0f1d6dc0e265411d0821bd908881822f0f26f0887f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1537c4f60a609751013bdc69eb1c6e6218982d91013115bc4e28cb84f816cd91\",\"dweb:/ipfs/QmSjkSTrrB4vuxECcm5cRG7YmraF53QWRgftxS827KcQLW\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/interfaces/IModuleCalls.sol\":{\"keccak256\":\"0xde065c15e38eb009c3dc8f99dfefdd1d6d244dd12a889a8b57edd90d32fb4395\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://23608955786060457f79267795a61eb89b3910b683fc136c749548369425088f\",\"dweb:/ipfs/QmXNorcQBF1Qk21y3aEJRiiHVtwm61zP4ttA1ZzmRjyHnz\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":{\"keccak256\":\"0x98520e740b0822ec053d21f376b8be8a58e93228f3758f9228a7d00e1f60950f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://31226706c004f1a4315d6b8d37621b46f4d5807c16e1ce72675c1431ed9006a2\",\"dweb:/ipfs/QmdSSyCuPex2E2VTd6UMYy9WAq9eJNZ6vHSUomntNknzXE\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"notice": "Allow wallet owner to execute an action"
							},
							"nonce()": {
								"notice": "Returns the next nonce of the default nonce space"
							},
							"readNonce(uint256)": {
								"notice": "Returns the next nonce of the given nonce space"
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"notice": "Allow wallet to execute an action   without signing the message"
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleCreator.sol": {
				"ModuleCreator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "CreateFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_contract",
									"type": "address"
								}
							],
							"name": "CreatedContract",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "createContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createContract(bytes)": {
								"params": {
									"_code": "Creation code of the contract"
								},
								"returns": {
									"addr": "The address of the created contract"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061040e806100206000396000f3fe6080604052600436106100295760003560e01c806301ffc9a71461002e57806390042baf14610063575b600080fd5b34801561003a57600080fd5b5061004e610049366004610225565b61009b565b60405190151581526020015b60405180910390f35b61007661007136600461029d565b610136565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161005a565b60007f6ffbd451000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016100ee57506001919050565b507fffffffff00000000000000000000000000000000000000000000000000000000167f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b600033301461017e576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b81516020830134f0905073ffffffffffffffffffffffffffffffffffffffff81166101d757816040517f0d257191000000000000000000000000000000000000000000000000000000008152600401610175919061036c565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c9060200160405180910390a1919050565b60006020828403121561023757600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461026757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156102af57600080fd5b813567ffffffffffffffff808211156102c757600080fd5b818401915084601f8301126102db57600080fd5b8135818111156102ed576102ed61026e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156103335761033361026e565b8160405282815287602084870101111561034c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103995785810183015185820160400152820161037d565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050509291505056fea264697066735822122006e03e11c82eb5f10f2958bbc903f4d28121cd3900c5cc87b7e12d422460190264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x225 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x29D JUMP JUMPDEST PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5A JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FFBD45100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0xEE JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1D7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xD25719100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2ED PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x333 JUMPI PUSH2 0x333 PUSH2 0x26E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x399 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x37D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xE0 RETURNDATACOPY GT 0xC8 0x2E 0xB5 CALL 0xF 0x29 PC 0xBB 0xC9 SUB DELEGATECALL 0xD2 DUP2 0x21 0xCD CODECOPY STOP 0xC5 0xCC DUP8 0xB7 0xE1 0x2D TIMESTAMP 0x24 PUSH1 0x19 MUL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "169:1008:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@createContract_1026": {
									"entryPoint": 310,
									"id": 1026,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1051": {
									"entryPoint": 155,
									"id": 1051,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1069": {
									"entryPoint": null,
									"id": 1069,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 622,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2887:37",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:37",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:263:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:37"
															},
															"nodeType": "YulIf",
															"src": "93:52:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:37"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "300:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "309:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "312:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "302:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "302:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "302:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:37"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "230:66:37",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:78:37"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:89:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:97:37"
															},
															"nodeType": "YulIf",
															"src": "199:117:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "325:15:37",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "335:5:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "325:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:37",
														"type": ""
													}
												],
												"src": "14:332:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "446:92:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "456:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "468:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "479:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "464:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "456:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "523:6:37"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "516:6:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "516:14:37"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "509:6:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "509:22:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "491:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "491:41:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "491:41:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "415:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "426:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "437:4:37",
														"type": ""
													}
												],
												"src": "351:187:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "575:152:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "592:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "595:77:37",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "585:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "585:88:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "585:88:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "689:1:37",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "692:4:37",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "682:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "682:15:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "713:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "716:4:37",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "706:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "706:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "706:15:37"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "543:184:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "811:901:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "857:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "866:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "869:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "859:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "859:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "859:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "832:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "841:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "828:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "828:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "853:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:32:37"
															},
															"nodeType": "YulIf",
															"src": "821:52:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "882:37:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "909:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "896:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:23:37"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "886:6:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "928:28:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "938:18:37",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "932:2:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "983:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "992:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "995:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "985:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "985:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "985:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "971:6:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "979:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "968:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:14:37"
															},
															"nodeType": "YulIf",
															"src": "965:34:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1008:32:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1022:9:37"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1033:6:37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1018:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1018:22:37"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1012:2:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1088:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1097:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1100:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1090:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1090:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1090:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1067:2:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1071:4:37",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1063:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1063:13:37"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1078:7:37"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1059:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1059:27:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1052:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1052:35:37"
															},
															"nodeType": "YulIf",
															"src": "1049:55:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1113:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1136:2:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:16:37"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1117:2:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1162:22:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1164:16:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1164:18:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1164:18:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1154:2:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1158:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1151:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1151:10:37"
															},
															"nodeType": "YulIf",
															"src": "1148:36:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1193:76:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1203:66:37",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1197:2:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1278:23:37",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1298:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1292:5:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:9:37"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1282:6:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1310:71:37",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:37"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1356:2:37"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1360:4:37",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1352:3:37"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1352:13:37"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1367:2:37"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1348:3:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1348:22:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1372:2:37",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1344:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1344:31:37"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1377:2:37"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1340:40:37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1328:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:53:37"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1314:10:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1440:22:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1442:16:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1442:18:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1442:18:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1399:10:37"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1411:2:37"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1396:2:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1396:18:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1419:10:37"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1431:6:37"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1416:2:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1416:22:37"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1393:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:46:37"
															},
															"nodeType": "YulIf",
															"src": "1390:72:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1478:2:37",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1482:10:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1471:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:22:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1471:22:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1509:6:37"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1517:2:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1502:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1502:18:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1502:18:37"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1566:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1575:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1578:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1568:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1568:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1568:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1543:2:37"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1547:2:37"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1539:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1539:11:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1552:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1535:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:20:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1557:7:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1532:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1532:33:37"
															},
															"nodeType": "YulIf",
															"src": "1529:53:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1608:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1616:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1604:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1604:15:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1625:2:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1629:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1621:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1621:11:37"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1634:2:37"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1591:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1591:46:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1591:46:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1661:6:37"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1669:2:37"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1657:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1657:15:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1674:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1653:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1653:24:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1679:1:37",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1646:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:35:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1646:35:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1690:16:37",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1700:6:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "777:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "788:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "800:6:37",
														"type": ""
													}
												],
												"src": "732:980:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1818:125:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1828:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1840:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1836:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1828:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1870:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1885:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1893:42:37",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1881:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1881:55:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1863:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:74:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1863:74:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1787:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1798:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1809:4:37",
														"type": ""
													}
												],
												"src": "1717:226:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2077:198:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2087:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2099:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2110:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2095:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2095:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2087:4:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2122:52:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2132:42:37",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2126:2:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2190:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2205:6:37"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2213:2:37"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2201:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2201:15:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2183:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2183:34:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2237:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2248:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2233:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2233:18:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2257:6:37"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2265:2:37"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2253:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2253:15:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2226:43:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2226:43:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2038:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2049:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2057:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2068:4:37",
														"type": ""
													}
												],
												"src": "1948:327:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2399:486:37",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2409:12:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2419:2:37",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2413:2:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2448:2:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:21:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2430:21:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2460:27:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:37"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2474:5:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2474:13:37"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2464:6:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2507:9:37"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2518:2:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2503:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2503:18:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2523:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2496:34:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2539:10:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2548:1:37",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2543:1:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2608:90:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2637:9:37"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2648:1:37"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2633:3:37"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2633:17:37"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:2:37",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2629:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2629:26:37"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2671:6:37"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2679:1:37"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2667:3:37"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2667:14:37"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2683:2:37"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2663:3:37"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2663:23:37"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2657:5:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2657:30:37"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2622:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2622:66:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2622:66:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2569:1:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2572:6:37"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2566:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:13:37"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2580:19:37",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2582:15:37",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2591:1:37"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2594:2:37"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2587:3:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2587:10:37"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2582:1:37"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2562:3:37",
																"statements": []
															},
															"src": "2558:140:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2722:9:37"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2733:6:37"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2718:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2718:22:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2742:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2714:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2714:31:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2747:1:37",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2707:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2707:42:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2707:42:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2758:121:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2774:9:37"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2793:6:37"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2801:2:37",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2789:3:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2789:15:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2806:66:37",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2785:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2785:88:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:104:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2876:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2766:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:113:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2758:4:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2368:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2379:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2390:4:37",
														"type": ""
													}
												],
												"src": "2280:605:37"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n}",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c806301ffc9a71461002e57806390042baf14610063575b600080fd5b34801561003a57600080fd5b5061004e610049366004610225565b61009b565b60405190151581526020015b60405180910390f35b61007661007136600461029d565b610136565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161005a565b60007f6ffbd451000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016100ee57506001919050565b507fffffffff00000000000000000000000000000000000000000000000000000000167f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b600033301461017e576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b81516020830134f0905073ffffffffffffffffffffffffffffffffffffffff81166101d757816040517f0d257191000000000000000000000000000000000000000000000000000000008152600401610175919061036c565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c9060200160405180910390a1919050565b60006020828403121561023757600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461026757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156102af57600080fd5b813567ffffffffffffffff808211156102c757600080fd5b818401915084601f8301126102db57600080fd5b8135818111156102ed576102ed61026e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156103335761033361026e565b8160405282815287602084870101111561034c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103995785810183015185820160400152820161037d565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050509291505056fea264697066735822122006e03e11c82eb5f10f2958bbc903f4d28121cd3900c5cc87b7e12d422460190264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x225 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x29D JUMP JUMPDEST PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5A JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FFBD45100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0xEE JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1D7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xD25719100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2ED PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x333 JUMPI PUSH2 0x333 PUSH2 0x26E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x399 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x37D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xE0 RETURNDATACOPY GT 0xC8 0x2E 0xB5 CALL 0xF 0x29 PC 0xBB 0xC9 SUB DELEGATECALL 0xD2 DUP2 0x21 0xCD CODECOPY STOP 0xC5 0xCC DUP8 0xB7 0xE1 0x2D TIMESTAMP 0x24 PUSH1 0x19 MUL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "169:1008:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;942:233;;;;;;;;;;-1:-1:-1;942:233:11;;;;;:::i;:::-;;:::i;:::-;;;516:14:37;;509:22;491:41;;479:2;464:18;942:233:11;;;;;;;;456:276;;;;;;:::i;:::-;;:::i;:::-;;;1893:42:37;1881:55;;;1863:74;;1851:2;1836:18;456:276:11;1717:226:37;942:233:11;1028:4;1044:48;;;;;1040:80;;-1:-1:-1;1109:4:11;;942:233;-1:-1:-1;942:233:11:o;1040:80::-;-1:-1:-1;709:47:12;;725:31;709:47;;942:233:11:o;456:276::-;550:12;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;2183:34:37;255:4:18;2233:18:37;;;2226:43;2095:18;;222:39:18;;;;;;;;174:94;631:5:11::1;625:12;620:2;613:5;609:14;596:11;589:49;581:57:::0;-1:-1:-1;649:18:11::1;::::0;::::1;645:50;;689:5;676:19;;;;;;;;;;;:::i;645:50::-;706:21;::::0;1893:42:37;1881:55;;1863:74;;706:21:11::1;::::0;1851:2:37;1836:18;706:21:11::1;;;;;;;456:276:::0;;;:::o;14:332:37:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:37:o;543:184::-;595:77;592:1;585:88;692:4;689:1;682:15;716:4;713:1;706:15;732:980;800:6;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;909:9;896:23;938:18;979:2;971:6;968:14;965:34;;;995:1;992;985:12;965:34;1033:6;1022:9;1018:22;1008:32;;1078:7;1071:4;1067:2;1063:13;1059:27;1049:55;;1100:1;1097;1090:12;1049:55;1136:2;1123:16;1158:2;1154;1151:10;1148:36;;;1164:18;;:::i;:::-;1298:2;1292:9;1360:4;1352:13;;1203:66;1348:22;;;1372:2;1344:31;1340:40;1328:53;;;1396:18;;;1416:22;;;1393:46;1390:72;;;1442:18;;:::i;:::-;1482:10;1478:2;1471:22;1517:2;1509:6;1502:18;1557:7;1552:2;1547;1543;1539:11;1535:20;1532:33;1529:53;;;1578:1;1575;1568:12;1529:53;1634:2;1629;1625;1621:11;1616:2;1608:6;1604:15;1591:46;1679:1;1657:15;;;1674:2;1653:24;1646:35;;;;-1:-1:-1;1661:6:37;732:980;-1:-1:-1;;;;;732:980:37:o;2280:605::-;2390:4;2419:2;2448;2437:9;2430:21;2480:6;2474:13;2523:6;2518:2;2507:9;2503:18;2496:34;2548:1;2558:140;2572:6;2569:1;2566:13;2558:140;;;2667:14;;;2663:23;;2657:30;2633:17;;;2652:2;2629:26;2622:66;2587:10;;2558:140;;;2562:3;2747:1;2742:2;2733:6;2722:9;2718:22;2714:31;2707:42;2876:2;2806:66;2801:2;2793:6;2789:15;2785:88;2774:9;2770:104;2766:113;2758:121;;;;2280:605;;;;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"CreateFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"CreatedContract\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"createContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createContract(bytes)\":{\"params\":{\"_code\":\"Creation code of the contract\"},\"returns\":{\"addr\":\"The address of the created contract\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createContract(bytes)\":{\"notice\":\"Creates a contract forwarding eth value\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleCreator.sol\":\"ModuleCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleCreator.sol\":{\"keccak256\":\"0x16b1400988f6b7bd4d32bdcb36ee2fbd644fb2c8ca571becc0c32e03602bd303\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8bd4681fb4cff10f4e98e45618fbc52ed0a4c7d4fcf614f34a587ad20cd16855\",\"dweb:/ipfs/QmbA2LYBH1x8WX8CaeiFYMU5rjyLGgNCF32r9fQbXuoqwJ\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/interfaces/IModuleCreator.sol\":{\"keccak256\":\"0xa206dd3d424b8cd1c4f1400aa344cbc974480fea02f0fb371b872558e5ff4e6d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ea14c75f43a0008c582dcbae3ba3c900e446e28039dfdbb059d326ec5cc6a2d2\",\"dweb:/ipfs/QmRfF6BmUWiFkCgzVFbLcHsUCNz5q2XkkcwXPX57ViTK4D\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"createContract(bytes)": {
								"notice": "Creates a contract forwarding eth value"
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleERC165.sol": {
				"ModuleERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Adding new hooks will not lead to them being reported by this function      without upgrading the wallet. In addition, developers must ensure that      all inherited contracts by the main module don't conflict and are accounted      to be supported by the supportsInterface method.",
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Adding new hooks will not lead to them being reported by this function      without upgrading the wallet. In addition, developers must ensure that      all inherited contracts by the main module don't conflict and are accounted      to be supported by the supportsInterface method.\",\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleERC165.sol\":\"ModuleERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleExtraAuth.sol": {
				"ModuleExtraAuth": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_expiration",
									"type": "uint256"
								}
							],
							"name": "SetExtraImageHash",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "_imageHashes",
									"type": "bytes32[]"
								}
							],
							"name": "clearExtraImageHashes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "extraImageHash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_expiration",
									"type": "uint256"
								}
							],
							"name": "setExtraImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
								}
							},
							"signatureRecovery(bytes32,bytes)": {
								"details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
								"params": {
									"_digest": "Digest of the signed data.",
									"_signature": "A Sequence signature."
								},
								"returns": {
									"checkpoint": "A nonce that is incremented every time a new configuration is set.",
									"imageHash": "The imageHash of the configuration that signed the message.",
									"subdigest": "A modified version of the original digest, unique for each wallet/network.",
									"threshold": "The required number of signatures needed to consider the signature valid.",
									"weight": "The actual number of signatures collected in the signature."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"}],\"name\":\"SetExtraImageHash\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_imageHashes\",\"type\":\"bytes32[]\"}],\"name\":\"clearExtraImageHashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"extraImageHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"}],\"name\":\"setExtraImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleExtraAuth.sol\":\"ModuleExtraAuth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0x58c028f02e3517de6c39584bcf1cedd4e7b23f575c24b363cbad4960a74f8a0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9652fead22c9fe8510de8427e2db354ed145ff30f49f85d1c717e293e5df665\",\"dweb:/ipfs/QmSJPFQxRE5n17DNB5Bu2jwRo17yLS7igMQGt3bvKkdLAP\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleExtraAuth.sol\":{\"keccak256\":\"0x793e557314c05e0b88855bd38f481156994dccdd41a7eb5dc483f2529e0af2fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8424ace720f2be4c0097c94168bb813a9c6767d6a7ffeb3c83a071fc8307c022\",\"dweb:/ipfs/QmRAfrpve92zUTFMzRKxGxksu1bpD9VVpUyyLxUbgFoeXi\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							},
							"signatureRecovery(bytes32,bytes)": {
								"notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleHooks.sol": {
				"ModuleHooks": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "HookAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "HookDoesNotExist",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "DefinedHook",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "addHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "readHook",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "removeHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addHook(bytes4,address)": {
								"details": "Can't overwrite hooks that are part of the main module (those defined below)",
								"params": {
									"_implementation": "Hook implementation contract",
									"_signature": "Signature function linked to the hook"
								}
							},
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`"
								}
							},
							"onERC721Received(address,address,uint256,bytes)": {
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`"
								}
							},
							"readHook(bytes4)": {
								"params": {
									"_signature": "Signature function"
								},
								"returns": {
									"_0": "The address of the implementation hook, address(0) if none"
								}
							},
							"removeHook(bytes4)": {
								"details": "Can't remove hooks that are part of the main module (those defined below)      without upgrading the wallet",
								"params": {
									"_signature": "Signature function linked to the hook"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610ad5806100206000396000f3fe6080604052600436106100745760003560e01c80634fcf3eca1161004e5780634fcf3eca14610249578063b93ea7ad14610269578063bc197c8114610289578063f23a6e61146102d15761007b565b806301ffc9a714610159578063150b7a021461018e5780631a9b2337146102045761007b565b3661007b57005b600436106101575760006100b26000357fffffffff0000000000000000000000000000000000000000000000000000000016610317565b905073ffffffffffffffffffffffffffffffffffffffff811615610155576000808273ffffffffffffffffffffffffffffffffffffffff166000366040516100fb9291906107b1565b600060405180830381855af49150503d8060008114610136576040519150601f19603f3d011682016040523d82523d6000602084013e61013b565b606091505b50915091508161014d57805160208201fd5b805160208201f35b505b005b34801561016557600080fd5b506101796101743660046107f6565b61036b565b60405190151581526020015b60405180910390f35b34801561019a57600080fd5b506101d36101a9366004610885565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610185565b34801561021057600080fd5b5061022461021f3660046107f6565b6104ed565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610185565b34801561025557600080fd5b506101576102643660046107f6565b6104f8565b34801561027557600080fd5b506101576102843660046108f4565b6105c8565b34801561029557600080fd5b506101d36102a436600461096c565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b3480156102dd57600080fd5b506101d36102ec366004610a27565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60006103657fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1207fffffffff000000000000000000000000000000000000000000000000000000008416610693565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fec6aba500000000000000000000000000000000000000000000000000000000014806103fe57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061044a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061049657507fffffffff0000000000000000000000000000000000000000000000000000000082167fc0ee0b8a00000000000000000000000000000000000000000000000000000000145b156104a357506001919050565b7f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610365565b600061036582610317565b33301461053e576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b600061054982610317565b73ffffffffffffffffffffffffffffffffffffffff16036105ba576040517f1c3812cc0000000000000000000000000000000000000000000000000000000081527fffffffff0000000000000000000000000000000000000000000000000000000082166004820152602401610535565b6105c58160006106f1565b50565b333014610609576040517fe1258894000000000000000000000000000000000000000000000000000000008152336004820152306024820152604401610535565b600061061483610317565b73ffffffffffffffffffffffffffffffffffffffff1614610685576040517f5b4d6d6a0000000000000000000000000000000000000000000000000000000081527fffffffff0000000000000000000000000000000000000000000000000000000083166004820152602401610535565b61068f82826106f1565b5050565b60008083836040516020016106b2929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b604080517fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1206020808301919091527fffffffff000000000000000000000000000000000000000000000000000000008516828401819052835180840385018152606084018086528151919093012073ffffffffffffffffffffffffffffffffffffffff8616908190559152608082015290517f0d7fc113eaf016db4681a1ba86d083ce3e0961f321062a75ac2b0aeb33deeed19181900360a00190a15050565b8183823760009101908152919050565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146107f157600080fd5b919050565b60006020828403121561080857600080fd5b610811826107c1565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146107f157600080fd5b60008083601f84011261084e57600080fd5b50813567ffffffffffffffff81111561086657600080fd5b60208301915083602082850101111561087e57600080fd5b9250929050565b60008060008060006080868803121561089d57600080fd5b6108a686610818565b94506108b460208701610818565b935060408601359250606086013567ffffffffffffffff8111156108d757600080fd5b6108e38882890161083c565b969995985093965092949392505050565b6000806040838503121561090757600080fd5b610910836107c1565b915061091e60208401610818565b90509250929050565b60008083601f84011261093957600080fd5b50813567ffffffffffffffff81111561095157600080fd5b6020830191508360208260051b850101111561087e57600080fd5b60008060008060008060008060a0898b03121561098857600080fd5b61099189610818565b975061099f60208a01610818565b9650604089013567ffffffffffffffff808211156109bc57600080fd5b6109c88c838d01610927565b909850965060608b01359150808211156109e157600080fd5b6109ed8c838d01610927565b909650945060808b0135915080821115610a0657600080fd5b50610a138b828c0161083c565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215610a4057600080fd5b610a4987610818565b9550610a5760208801610818565b94506040870135935060608701359250608087013567ffffffffffffffff811115610a8157600080fd5b610a8d89828a0161083c565b979a969950949750929593949250505056fea2646970667358221220e41b3c8b71dc52acf394b069c7c5362791390cf20814c0f6c9e7e28ff9b832d964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAD5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4FCF3ECA GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x4FCF3ECA EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB93EA7AD EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x2D1 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x1A9B2337 EQ PUSH2 0x204 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x157 JUMPI PUSH1 0x0 PUSH2 0xB2 PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x317 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0xFB SWAP3 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x14D JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD RETURN JUMPDEST POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x885 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x96C JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0xA27 JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 AND PUSH2 0x693 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xEC6ABA5000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3FE JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x44A JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x496 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xC0EE0B8A00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x4A3 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x365 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 DUP3 PUSH2 0x317 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x549 DUP3 PUSH2 0x317 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x1C3812CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x535 JUMP JUMPDEST PUSH2 0x5C5 DUP2 PUSH1 0x0 PUSH2 0x6F1 JUMP JUMPDEST POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x614 DUP4 PUSH2 0x317 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5B4D6D6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x535 JUMP JUMPDEST PUSH2 0x68F DUP3 DUP3 PUSH2 0x6F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6B2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND DUP3 DUP5 ADD DUP2 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP6 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP4 ADD KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP2 SWAP1 SSTORE SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xD7FC113EAF016DB4681A1BA86D083CE3E0961F321062A75AC2B0AEB33DEEED1 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x811 DUP3 PUSH2 0x7C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A6 DUP7 PUSH2 0x818 JUMP JUMPDEST SWAP5 POP PUSH2 0x8B4 PUSH1 0x20 DUP8 ADD PUSH2 0x818 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E3 DUP9 DUP3 DUP10 ADD PUSH2 0x83C JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x910 DUP4 PUSH2 0x7C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x91E PUSH1 0x20 DUP5 ADD PUSH2 0x818 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x991 DUP10 PUSH2 0x818 JUMP JUMPDEST SWAP8 POP PUSH2 0x99F PUSH1 0x20 DUP11 ADD PUSH2 0x818 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C8 DUP13 DUP4 DUP14 ADD PUSH2 0x927 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9ED DUP13 DUP4 DUP14 ADD PUSH2 0x927 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xA06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA13 DUP12 DUP3 DUP13 ADD PUSH2 0x83C JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA49 DUP8 PUSH2 0x818 JUMP JUMPDEST SWAP6 POP PUSH2 0xA57 PUSH1 0x20 DUP9 ADD PUSH2 0x818 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8D DUP10 DUP3 DUP11 ADD PUSH2 0x83C JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SHL EXTCODECOPY DUP12 PUSH18 0xDC52ACF394B069C7C5362791390CF20814C0 0xF6 0xC9 0xE7 0xE2 DUP16 0xF9 0xB8 ORIGIN 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "370:4644:14:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1524": {
									"entryPoint": null,
									"id": 1524,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1529": {
									"entryPoint": null,
									"id": 1529,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_readHook_1389": {
									"entryPoint": 791,
									"id": 1389,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_writeHook_1420": {
									"entryPoint": 1777,
									"id": 1420,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addHook_1334": {
									"entryPoint": 1480,
									"id": 1334,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_1466": {
									"entryPoint": null,
									"id": 1466,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"@onERC1155Received_1442": {
									"entryPoint": null,
									"id": 1442,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@onERC721Received_1486": {
									"entryPoint": null,
									"id": 1486,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@readBytes32Map_1918": {
									"entryPoint": 1683,
									"id": 1918,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readHook_1304": {
									"entryPoint": 1261,
									"id": 1304,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@removeHook_1365": {
									"entryPoint": 1272,
									"id": 1365,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1069": {
									"entryPoint": null,
									"id": 1069,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1575": {
									"entryPoint": 875,
									"id": 1575,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@writeBytes32Map_1897": {
									"entryPoint": null,
									"id": 1897,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn_calldata": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bytes4": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 2108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 2181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4t_address": {
									"entryPoint": 2292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4_t_address__to_t_bytes4_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6068:37",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:37",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "161:124:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "184:3:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "189:6:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:37"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "171:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "171:33:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "171:33:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "227:3:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "232:6:37"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "223:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:16:37"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "217:2:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "255:2:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:1:37",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "248:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:13:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "248:13:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "270:9:37",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "277:2:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "270:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "129:3:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "134:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "142:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "153:3:37",
														"type": ""
													}
												],
												"src": "14:271:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "338:171:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "348:29:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "370:6:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "357:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "357:20:37"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "348:5:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "487:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "496:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "499:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "489:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "489:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "489:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "399:5:37"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "410:5:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "417:66:37",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "406:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "406:78:37"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "396:2:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "396:89:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "389:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "389:97:37"
															},
															"nodeType": "YulIf",
															"src": "386:117:37"
														}
													]
												},
												"name": "abi_decode_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "317:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "328:5:37",
														"type": ""
													}
												],
												"src": "290:219:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "583:115:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "629:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "638:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "641:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "631:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "631:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "631:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "604:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "600:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "600:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "596:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:32:37"
															},
															"nodeType": "YulIf",
															"src": "593:52:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "654:38:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "682:9:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "664:17:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "664:28:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "654:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "549:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "560:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "572:6:37",
														"type": ""
													}
												],
												"src": "514:184:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "798:92:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "808:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "820:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "831:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "816:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "808:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "850:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "875:6:37"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "868:6:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "868:14:37"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "861:6:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "861:22:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "843:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:41:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "843:41:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "767:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "778:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "789:4:37",
														"type": ""
													}
												],
												"src": "703:187:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "944:147:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "954:29:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "963:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "963:20:37"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "954:5:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1069:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1078:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1081:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1071:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1071:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1071:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1005:5:37"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1016:5:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1023:42:37",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1012:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1012:54:37"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1002:2:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1002:65:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "995:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "995:73:37"
															},
															"nodeType": "YulIf",
															"src": "992:93:37"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "923:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "934:5:37",
														"type": ""
													}
												],
												"src": "895:196:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1168:275:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1217:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1226:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1229:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1219:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1219:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1219:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1204:4:37",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1192:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1192:17:37"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1211:3:37"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1188:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1188:27:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1181:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:35:37"
															},
															"nodeType": "YulIf",
															"src": "1178:55:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1242:30:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1265:6:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1252:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:20:37"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1315:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1324:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1327:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1317:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1317:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1317:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1287:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1295:18:37",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1284:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1284:30:37"
															},
															"nodeType": "YulIf",
															"src": "1281:50:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1340:29:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1356:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1364:4:37",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1352:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1352:17:37"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1340:8:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1421:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1430:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1433:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1423:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1423:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1423:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1392:6:37"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1400:6:37"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1388:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1388:19:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1409:4:37",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1384:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1384:30:37"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1416:3:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1381:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1381:39:37"
															},
															"nodeType": "YulIf",
															"src": "1378:59:37"
														}
													]
												},
												"name": "abi_decode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1131:6:37",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1139:3:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1147:8:37",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1157:6:37",
														"type": ""
													}
												],
												"src": "1096:347:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1588:486:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1635:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1644:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1647:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1637:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1637:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1637:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1609:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1618:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1605:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1630:3:37",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:33:37"
															},
															"nodeType": "YulIf",
															"src": "1598:53:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1660:39:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1689:9:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1670:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1670:29:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1708:48:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1741:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1752:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1737:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1737:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1718:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1718:38:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1765:42:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1792:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1803:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1788:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1788:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1775:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:32:37"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1765:6:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1816:46:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1847:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1858:2:37",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1843:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1830:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1830:32:37"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1820:6:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1905:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1877:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1885:18:37",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1874:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:30:37"
															},
															"nodeType": "YulIf",
															"src": "1871:50:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1930:84:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1986:9:37"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1997:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1982:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1982:22:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2006:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "1956:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1956:58:37"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "1934:8:37",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "1944:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2023:18:37",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "2033:8:37"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2050:18:37",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "2060:8:37"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1533:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1545:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1553:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1561:6:37",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1569:6:37",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1577:6:37",
														"type": ""
													}
												],
												"src": "1448:626:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:149:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2188:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2200:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2196:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2196:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2188:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2230:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2245:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2253:66:37",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2241:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2241:79:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2223:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:98:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2223:98:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2147:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2158:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2169:4:37",
														"type": ""
													}
												],
												"src": "2079:248:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2433:125:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2443:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2455:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2466:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2451:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2443:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2485:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2500:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2508:42:37",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2496:55:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2478:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:74:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2478:74:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2402:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2413:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2424:4:37",
														"type": ""
													}
												],
												"src": "2332:226:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2649:172:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2695:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2704:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2707:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2697:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2697:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2697:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2670:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2679:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2666:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2666:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2691:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2662:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:32:37"
															},
															"nodeType": "YulIf",
															"src": "2659:52:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2720:38:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2748:9:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2730:17:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:28:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2720:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2767:48:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2800:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2811:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2796:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2796:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2777:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:38:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2767:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2607:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2618:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2630:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2638:6:37",
														"type": ""
													}
												],
												"src": "2563:258:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2910:283:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2959:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2968:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2971:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2961:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2961:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2961:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2938:6:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2946:4:37",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2934:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2934:17:37"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2953:3:37"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2930:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2930:27:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2923:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:35:37"
															},
															"nodeType": "YulIf",
															"src": "2920:55:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2984:30:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:20:37"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2984:6:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3057:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3066:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3069:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3059:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3059:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3059:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3029:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3037:18:37",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3026:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3026:30:37"
															},
															"nodeType": "YulIf",
															"src": "3023:50:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3082:29:37",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3098:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3106:4:37",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3094:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:17:37"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "3082:8:37"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3171:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3180:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3183:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3173:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3173:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3173:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3134:6:37"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3146:1:37",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3149:6:37"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3142:3:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3142:14:37"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3130:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3130:27:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3159:4:37",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3126:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3126:38:37"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3166:3:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3123:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3123:47:37"
															},
															"nodeType": "YulIf",
															"src": "3120:67:37"
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2873:6:37",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2881:3:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "2889:8:37",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2899:6:37",
														"type": ""
													}
												],
												"src": "2826:367:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3425:983:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3472:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3481:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3484:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3474:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3474:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3474:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3446:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3455:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3442:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3442:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3467:3:37",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3438:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3438:33:37"
															},
															"nodeType": "YulIf",
															"src": "3435:53:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:39:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3526:9:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3507:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:29:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3545:48:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3578:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3589:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3574:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3574:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3555:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3555:38:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3602:46:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3633:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3644:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3629:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:32:37"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3606:6:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3657:28:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3667:18:37",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3661:2:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3712:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3721:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3724:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3714:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3714:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3714:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3700:6:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3708:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3697:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3697:14:37"
															},
															"nodeType": "YulIf",
															"src": "3694:34:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3737:96:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3805:9:37"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3816:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3801:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3801:22:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3825:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3763:37:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:70:37"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "3741:8:37",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "3751:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3842:18:37",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "3852:8:37"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3869:18:37",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "3879:8:37"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3896:48:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3929:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3940:2:37",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3925:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3925:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3912:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:32:37"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3900:8:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3973:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3982:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3985:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3975:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3975:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3975:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3959:8:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3969:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3956:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3956:16:37"
															},
															"nodeType": "YulIf",
															"src": "3953:36:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3998:98:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4066:9:37"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4077:8:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4062:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4062:24:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4088:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4024:37:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:72:37"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "4002:8:37",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "4012:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4105:18:37",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "4115:8:37"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4105:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4132:18:37",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "4142:8:37"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "4132:6:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4159:49:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4192:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4203:3:37",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4188:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4188:19:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4175:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4175:33:37"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4163:8:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4223:8:37"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4233:2:37"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4220:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:16:37"
															},
															"nodeType": "YulIf",
															"src": "4217:36:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4262:86:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4318:9:37"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4329:8:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4314:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4314:24:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4340:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4288:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:60:37"
															},
															"variables": [
																{
																	"name": "value6_1",
																	"nodeType": "YulTypedName",
																	"src": "4266:8:37",
																	"type": ""
																},
																{
																	"name": "value7_1",
																	"nodeType": "YulTypedName",
																	"src": "4276:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4357:18:37",
															"value": {
																"name": "value6_1",
																"nodeType": "YulIdentifier",
																"src": "4367:8:37"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "4357:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4384:18:37",
															"value": {
																"name": "value7_1",
																"nodeType": "YulIdentifier",
																"src": "4394:8:37"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "4384:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3335:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3346:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3358:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3366:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3374:6:37",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3382:6:37",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3390:6:37",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3398:6:37",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "3406:6:37",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "3414:6:37",
														"type": ""
													}
												],
												"src": "3198:1210:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4570:538:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4617:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4626:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4629:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4619:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4619:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4619:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4591:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4600:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4587:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4587:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4612:3:37",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4583:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4583:33:37"
															},
															"nodeType": "YulIf",
															"src": "4580:53:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4642:39:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4671:9:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4652:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:29:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4642:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4690:48:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4723:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4734:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4719:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4719:18:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4700:18:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4700:38:37"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4747:42:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4774:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4785:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4770:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4770:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4757:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4757:32:37"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4747:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4798:42:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4825:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4836:2:37",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4821:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4821:18:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4808:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4808:32:37"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4849:47:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4880:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4891:3:37",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4876:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4876:19:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4863:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:33:37"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4853:6:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4939:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4948:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4951:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4941:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4941:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4941:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4911:6:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:18:37",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4908:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4908:30:37"
															},
															"nodeType": "YulIf",
															"src": "4905:50:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4964:84:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:37"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5031:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5016:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5016:22:37"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5040:7:37"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4990:25:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "4990:58:37"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "4968:8:37",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "4978:8:37",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5057:18:37",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "5067:8:37"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5057:6:37"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5084:18:37",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "5094:8:37"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "5084:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4496:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4507:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4519:6:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4527:6:37",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4535:6:37",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4543:6:37",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4551:6:37",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4559:6:37",
														"type": ""
													}
												],
												"src": "4413:695:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:198:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5252:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5264:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5275:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5260:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5260:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5252:4:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5287:52:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5297:42:37",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5291:2:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5355:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5370:6:37"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5378:2:37"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5366:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5366:15:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5348:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5348:34:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5402:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5413:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5398:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5398:18:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5422:6:37"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5430:2:37"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5418:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5418:15:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5391:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5391:43:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5391:43:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5203:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5214:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5222:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5233:4:37",
														"type": ""
													}
												],
												"src": "5113:327:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5574:119:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5584:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5596:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5607:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5592:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5592:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5584:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5626:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5637:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5619:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5619:25:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5664:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5675:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5660:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5660:18:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5680:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5653:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5653:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5653:34:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5535:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5546:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5554:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5565:4:37",
														"type": ""
													}
												],
												"src": "5445:248:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5825:241:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5835:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5847:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5858:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5843:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5835:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5877:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5892:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5900:66:37",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5888:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5888:79:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5870:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5870:98:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5870:98:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5999:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5984:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5984:18:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6008:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6016:42:37",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6004:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6004:55:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5977:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:83:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5977:83:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4_t_address__to_t_bytes4_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5786:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5797:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5805:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5816:4:37",
														"type": ""
													}
												],
												"src": "5698:368:37"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_decode_bytes4(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes4t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_array_uint256_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes4_t_address__to_t_bytes4_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100745760003560e01c80634fcf3eca1161004e5780634fcf3eca14610249578063b93ea7ad14610269578063bc197c8114610289578063f23a6e61146102d15761007b565b806301ffc9a714610159578063150b7a021461018e5780631a9b2337146102045761007b565b3661007b57005b600436106101575760006100b26000357fffffffff0000000000000000000000000000000000000000000000000000000016610317565b905073ffffffffffffffffffffffffffffffffffffffff811615610155576000808273ffffffffffffffffffffffffffffffffffffffff166000366040516100fb9291906107b1565b600060405180830381855af49150503d8060008114610136576040519150601f19603f3d011682016040523d82523d6000602084013e61013b565b606091505b50915091508161014d57805160208201fd5b805160208201f35b505b005b34801561016557600080fd5b506101796101743660046107f6565b61036b565b60405190151581526020015b60405180910390f35b34801561019a57600080fd5b506101d36101a9366004610885565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610185565b34801561021057600080fd5b5061022461021f3660046107f6565b6104ed565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610185565b34801561025557600080fd5b506101576102643660046107f6565b6104f8565b34801561027557600080fd5b506101576102843660046108f4565b6105c8565b34801561029557600080fd5b506101d36102a436600461096c565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b3480156102dd57600080fd5b506101d36102ec366004610a27565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60006103657fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1207fffffffff000000000000000000000000000000000000000000000000000000008416610693565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fec6aba500000000000000000000000000000000000000000000000000000000014806103fe57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061044a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061049657507fffffffff0000000000000000000000000000000000000000000000000000000082167fc0ee0b8a00000000000000000000000000000000000000000000000000000000145b156104a357506001919050565b7f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610365565b600061036582610317565b33301461053e576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b600061054982610317565b73ffffffffffffffffffffffffffffffffffffffff16036105ba576040517f1c3812cc0000000000000000000000000000000000000000000000000000000081527fffffffff0000000000000000000000000000000000000000000000000000000082166004820152602401610535565b6105c58160006106f1565b50565b333014610609576040517fe1258894000000000000000000000000000000000000000000000000000000008152336004820152306024820152604401610535565b600061061483610317565b73ffffffffffffffffffffffffffffffffffffffff1614610685576040517f5b4d6d6a0000000000000000000000000000000000000000000000000000000081527fffffffff0000000000000000000000000000000000000000000000000000000083166004820152602401610535565b61068f82826106f1565b5050565b60008083836040516020016106b2929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b604080517fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1206020808301919091527fffffffff000000000000000000000000000000000000000000000000000000008516828401819052835180840385018152606084018086528151919093012073ffffffffffffffffffffffffffffffffffffffff8616908190559152608082015290517f0d7fc113eaf016db4681a1ba86d083ce3e0961f321062a75ac2b0aeb33deeed19181900360a00190a15050565b8183823760009101908152919050565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146107f157600080fd5b919050565b60006020828403121561080857600080fd5b610811826107c1565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146107f157600080fd5b60008083601f84011261084e57600080fd5b50813567ffffffffffffffff81111561086657600080fd5b60208301915083602082850101111561087e57600080fd5b9250929050565b60008060008060006080868803121561089d57600080fd5b6108a686610818565b94506108b460208701610818565b935060408601359250606086013567ffffffffffffffff8111156108d757600080fd5b6108e38882890161083c565b969995985093965092949392505050565b6000806040838503121561090757600080fd5b610910836107c1565b915061091e60208401610818565b90509250929050565b60008083601f84011261093957600080fd5b50813567ffffffffffffffff81111561095157600080fd5b6020830191508360208260051b850101111561087e57600080fd5b60008060008060008060008060a0898b03121561098857600080fd5b61099189610818565b975061099f60208a01610818565b9650604089013567ffffffffffffffff808211156109bc57600080fd5b6109c88c838d01610927565b909850965060608b01359150808211156109e157600080fd5b6109ed8c838d01610927565b909650945060808b0135915080821115610a0657600080fd5b50610a138b828c0161083c565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215610a4057600080fd5b610a4987610818565b9550610a5760208801610818565b94506040870135935060608701359250608087013567ffffffffffffffff811115610a8157600080fd5b610a8d89828a0161083c565b979a969950949750929593949250505056fea2646970667358221220e41b3c8b71dc52acf394b069c7c5362791390cf20814c0f6c9e7e28ff9b832d964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4FCF3ECA GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x4FCF3ECA EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB93EA7AD EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x2D1 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x1A9B2337 EQ PUSH2 0x204 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x157 JUMPI PUSH1 0x0 PUSH2 0xB2 PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x317 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0xFB SWAP3 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x14D JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD RETURN JUMPDEST POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x885 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x96C JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0xA27 JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 AND PUSH2 0x693 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xEC6ABA5000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3FE JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x44A JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x496 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xC0EE0B8A00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x4A3 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x365 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 DUP3 PUSH2 0x317 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x549 DUP3 PUSH2 0x317 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x1C3812CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x535 JUMP JUMPDEST PUSH2 0x5C5 DUP2 PUSH1 0x0 PUSH2 0x6F1 JUMP JUMPDEST POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x614 DUP4 PUSH2 0x317 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5B4D6D6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x535 JUMP JUMPDEST PUSH2 0x68F DUP3 DUP3 PUSH2 0x6F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6B2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND DUP3 DUP5 ADD DUP2 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP6 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP4 ADD KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP2 SWAP1 SSTORE SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xD7FC113EAF016DB4681A1BA86D083CE3E0961F321062A75AC2B0AEB33DEEED1 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x811 DUP3 PUSH2 0x7C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A6 DUP7 PUSH2 0x818 JUMP JUMPDEST SWAP5 POP PUSH2 0x8B4 PUSH1 0x20 DUP8 ADD PUSH2 0x818 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E3 DUP9 DUP3 DUP10 ADD PUSH2 0x83C JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x910 DUP4 PUSH2 0x7C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x91E PUSH1 0x20 DUP5 ADD PUSH2 0x818 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x991 DUP10 PUSH2 0x818 JUMP JUMPDEST SWAP8 POP PUSH2 0x99F PUSH1 0x20 DUP11 ADD PUSH2 0x818 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C8 DUP13 DUP4 DUP14 ADD PUSH2 0x927 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9ED DUP13 DUP4 DUP14 ADD PUSH2 0x927 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xA06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA13 DUP12 DUP3 DUP13 ADD PUSH2 0x83C JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA49 DUP8 PUSH2 0x818 JUMP JUMPDEST SWAP6 POP PUSH2 0xA57 PUSH1 0x20 DUP9 ADD PUSH2 0x818 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8D DUP10 DUP3 DUP11 ADD PUSH2 0x83C JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SHL EXTCODECOPY DUP12 PUSH18 0xDC52ACF394B069C7C5362791390CF20814C0 0xF6 0xC9 0xE7 0xE2 DUP16 0xF9 0xB8 ORIGIN 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "370:4644:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3935:1;3916:8;:20;3912:373;;3946:14;3963:18;3973:7;;;;3963:9;:18::i;:::-;3946:35;-1:-1:-1;3993:20:14;;;;3989:290;;4026:12;4040:19;4063:6;:19;;4083:8;;4063:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4025:67;;;;4133:7;4123:86;;4189:6;4183:13;4176:4;4168:6;4164:17;4157:40;4123:86;4253:6;4247:13;4240:4;4232:6;4228:17;4221:40;3989:290;3938:347;3912:373;370:4644;4591:421;;;;;;;;;;-1:-1:-1;4591:421:14;;;;;:::i;:::-;;:::i;:::-;;;868:14:37;;861:22;843:41;;831:2;816:18;4591:421:14;;;;;;;;3646:167;;;;;;;;;;-1:-1:-1;3646:167:14;;;;;:::i;:::-;3771:37;3646:167;;;;;;;;;;;2253:66:37;2241:79;;;2223:98;;2211:2;2196:18;3646:167:14;2079:248:37;861:125:14;;;;;;;;;;-1:-1:-1;861:125:14;;;;;:::i;:::-;;:::i;:::-;;;2508:42:37;2496:55;;;2478:74;;2466:2;2451:18;861:125:14;2332:226:37;1740:201:14;;;;;;;;;;-1:-1:-1;1740:201:14;;;;;:::i;:::-;;:::i;1272:229::-;;;;;;;;;;-1:-1:-1;1272:229:14;;;;;:::i;:::-;;:::i;3254:234::-;;;;;;;;;;-1:-1:-1;3254:234:14;;;;;:::i;:::-;3440:43;3254:234;;;;;;;;;;;2869:202;;;;;;;;;;-1:-1:-1;2869:202:14;;;;;:::i;:::-;3028:38;2869:202;;;;;;;;;2128:165;2188:7;2234:51;606:66;2234:51;;;:28;:51::i;:::-;2226:60;2128:165;-1:-1:-1;;2128:165:14:o;4591:421::-;4677:4;4700:46;;;4716:30;4700:46;;:106;;-1:-1:-1;4756:50:14;;;4772:34;4756:50;4700:106;:165;;;-1:-1:-1;4816:49:14;;;4832:33;4816:49;4700:165;:224;;;-1:-1:-1;4875:49:14;;;4891:33;4875:49;4700:224;4689:268;;;-1:-1:-1;4946:4:14;;4591:421;-1:-1:-1;4591:421:14:o;4689:268::-;725:31:12;709:47;;;;4970:37:14;613:148:12;861:125:14;938:7;960:21;970:10;960:9;:21::i;1740:201::-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;5348:34:37;255:4:18;5398:18:37;;;5391:43;5260:18;;222:39:18;;;;;;;;174:94;1857:1:14::1;1824:21;1834:10:::0;1824:9:::1;:21::i;:::-;:35;;::::0;1820:76:::1;;1868:28;::::0;::::1;::::0;;2253:66:37;2241:79;;1868:28:14::1;::::0;::::1;2223:98:37::0;2196:18;;1868:28:14::1;2079:248:37::0;1820:76:14::1;1902:34;1913:10;1933:1;1902:10;:34::i;:::-;1740:201:::0;:::o;1272:229::-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;5348:34:37;255:4:18;5398:18:37;;;5391:43;5260:18;;222:39:18;5113:327:37;174:94:18;1411:1:14::1;1378:21;1388:10:::0;1378:9:::1;:21::i;:::-;:35;;;1374:77;;1422:29;::::0;::::1;::::0;;2253:66:37;2241:79;;1422:29:14::1;::::0;::::1;2223:98:37::0;2196:18;;1422:29:14::1;2079:248:37::0;1374:77:14::1;1457:39;1468:10;1480:15;1457:10;:39::i;:::-;1272:229:::0;;:::o;490:187:19:-;568:11;587;622:4;628:7;611:25;;;;;;;;5619::37;;;5675:2;5660:18;;5653:34;5607:2;5592:18;;5445:248;611:25:19;;;;;;;;;;;;;;601:36;;611:25;601:36;;;;661:10;;490:187;-1:-1:-1;;;;490:187:19:o;2466:230:14:-;420:25:19;;;606:66:14;420:25:19;;;;5619::37;;;;2544:96:14;;;5660:18:37;;;5653:34;;;420:25:19;;;;;;;;;5592:18:37;;;420:25:19;;;410:36;;;;;;;2605:33:14;;;463:17:19;;;;5870:98:37;;5984:18;;;5977:83;2651:40:14;;;;;;;5843:18:37;2651:40:14;;;2466:230;;:::o;14:271:37:-;197:6;189;184:3;171:33;153:3;223:16;;248:13;;;223:16;14:271;-1:-1:-1;14:271:37:o;290:219::-;357:20;;417:66;406:78;;396:89;;386:117;;499:1;496;489:12;386:117;290:219;;;:::o;514:184::-;572:6;625:2;613:9;604:7;600:23;596:32;593:52;;;641:1;638;631:12;593:52;664:28;682:9;664:28;:::i;:::-;654:38;514:184;-1:-1:-1;;;514:184:37:o;895:196::-;963:20;;1023:42;1012:54;;1002:65;;992:93;;1081:1;1078;1071:12;1096:347;1147:8;1157:6;1211:3;1204:4;1196:6;1192:17;1188:27;1178:55;;1229:1;1226;1219:12;1178:55;-1:-1:-1;1252:20:37;;1295:18;1284:30;;1281:50;;;1327:1;1324;1317:12;1281:50;1364:4;1356:6;1352:17;1340:29;;1416:3;1409:4;1400:6;1392;1388:19;1384:30;1381:39;1378:59;;;1433:1;1430;1423:12;1378:59;1096:347;;;;;:::o;1448:626::-;1545:6;1553;1561;1569;1577;1630:3;1618:9;1609:7;1605:23;1601:33;1598:53;;;1647:1;1644;1637:12;1598:53;1670:29;1689:9;1670:29;:::i;:::-;1660:39;;1718:38;1752:2;1741:9;1737:18;1718:38;:::i;:::-;1708:48;;1803:2;1792:9;1788:18;1775:32;1765:42;;1858:2;1847:9;1843:18;1830:32;1885:18;1877:6;1874:30;1871:50;;;1917:1;1914;1907:12;1871:50;1956:58;2006:7;1997:6;1986:9;1982:22;1956:58;:::i;:::-;1448:626;;;;-1:-1:-1;1448:626:37;;-1:-1:-1;2033:8:37;;1930:84;1448:626;-1:-1:-1;;;1448:626:37:o;2563:258::-;2630:6;2638;2691:2;2679:9;2670:7;2666:23;2662:32;2659:52;;;2707:1;2704;2697:12;2659:52;2730:28;2748:9;2730:28;:::i;:::-;2720:38;;2777;2811:2;2800:9;2796:18;2777:38;:::i;:::-;2767:48;;2563:258;;;;;:::o;2826:367::-;2889:8;2899:6;2953:3;2946:4;2938:6;2934:17;2930:27;2920:55;;2971:1;2968;2961:12;2920:55;-1:-1:-1;2994:20:37;;3037:18;3026:30;;3023:50;;;3069:1;3066;3059:12;3023:50;3106:4;3098:6;3094:17;3082:29;;3166:3;3159:4;3149:6;3146:1;3142:14;3134:6;3130:27;3126:38;3123:47;3120:67;;;3183:1;3180;3173:12;3198:1210;3358:6;3366;3374;3382;3390;3398;3406;3414;3467:3;3455:9;3446:7;3442:23;3438:33;3435:53;;;3484:1;3481;3474:12;3435:53;3507:29;3526:9;3507:29;:::i;:::-;3497:39;;3555:38;3589:2;3578:9;3574:18;3555:38;:::i;:::-;3545:48;;3644:2;3633:9;3629:18;3616:32;3667:18;3708:2;3700:6;3697:14;3694:34;;;3724:1;3721;3714:12;3694:34;3763:70;3825:7;3816:6;3805:9;3801:22;3763:70;:::i;:::-;3852:8;;-1:-1:-1;3737:96:37;-1:-1:-1;3940:2:37;3925:18;;3912:32;;-1:-1:-1;3956:16:37;;;3953:36;;;3985:1;3982;3975:12;3953:36;4024:72;4088:7;4077:8;4066:9;4062:24;4024:72;:::i;:::-;4115:8;;-1:-1:-1;3998:98:37;-1:-1:-1;4203:3:37;4188:19;;4175:33;;-1:-1:-1;4220:16:37;;;4217:36;;;4249:1;4246;4239:12;4217:36;;4288:60;4340:7;4329:8;4318:9;4314:24;4288:60;:::i;:::-;3198:1210;;;;-1:-1:-1;3198:1210:37;;-1:-1:-1;3198:1210:37;;;;;;4367:8;-1:-1:-1;;;3198:1210:37:o;4413:695::-;4519:6;4527;4535;4543;4551;4559;4612:3;4600:9;4591:7;4587:23;4583:33;4580:53;;;4629:1;4626;4619:12;4580:53;4652:29;4671:9;4652:29;:::i;:::-;4642:39;;4700:38;4734:2;4723:9;4719:18;4700:38;:::i;:::-;4690:48;;4785:2;4774:9;4770:18;4757:32;4747:42;;4836:2;4825:9;4821:18;4808:32;4798:42;;4891:3;4880:9;4876:19;4863:33;4919:18;4911:6;4908:30;4905:50;;;4951:1;4948;4941:12;4905:50;4990:58;5040:7;5031:6;5020:9;5016:22;4990:58;:::i;:::-;4413:695;;;;-1:-1:-1;4413:695:37;;-1:-1:-1;4413:695:37;;5067:8;;4413:695;-1:-1:-1;;;4413:695:37:o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"HookAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"HookDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"DefinedHook\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"addHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"readHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"removeHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addHook(bytes4,address)\":{\"details\":\"Can't overwrite hooks that are part of the main module (those defined below)\",\"params\":{\"_implementation\":\"Hook implementation contract\",\"_signature\":\"Signature function linked to the hook\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\"}},\"readHook(bytes4)\":{\"params\":{\"_signature\":\"Signature function\"},\"returns\":{\"_0\":\"The address of the implementation hook, address(0) if none\"}},\"removeHook(bytes4)\":{\"details\":\"Can't remove hooks that are part of the main module (those defined below)      without upgrading the wallet\",\"params\":{\"_signature\":\"Signature function linked to the hook\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addHook(bytes4,address)\":{\"notice\":\"Adds a new hook to handle a given function selector\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Handle the receipt of multiple ERC1155 token types.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"notice\":\"Handle the receipt of a single ERC1155 token type.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of a single ERC721 token.\"},\"readHook(bytes4)\":{\"notice\":\"Reads the implementation hook of a signature\"},\"removeHook(bytes4)\":{\"notice\":\"Removes a registered hook\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleHooks.sol\":\"ModuleHooks\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/receivers/IERC1155Receiver.sol\":{\"keccak256\":\"0x934ce83f4abb6e487c5092af8ff0b6ef5ca697b893fa4d24b3d63b994441bf62\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2fef087d5a188a3b96a3bf0ddae611a802dfd6b72dbf92895e9d3512c77b70ff\",\"dweb:/ipfs/QmTsvU6DDK7dJAddyVCMe81oa2bCgmcz4dibbnwGQdmKDt\"]},\"contracts/interfaces/receivers/IERC223Receiver.sol\":{\"keccak256\":\"0x27f58bb8b5a9b976b39a92c9c989a7d76476a121ca60827ff01d4c69c3839f32\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://83af2e3d4e7f42aab73a7ed8f02b9830817f6f621ac17dc9d09d3cccbf2b769f\",\"dweb:/ipfs/QmaBecBuHUtskh5hoKf76wu5wf8aW2rX7oxCtpbLid8vRV\"]},\"contracts/interfaces/receivers/IERC721Receiver.sol\":{\"keccak256\":\"0x20623593e9b812c4ff01da0d9abf3540986f3ce8c4a19137ed42d8d9ee7ec5d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da617c8301ba39ac038d62fd7ae25a8b5e1a076924ef843e55c912ac5677b9f4\",\"dweb:/ipfs/Qmf71tpo1CkuZL5pHXD4TtAxiCeHiDJ3hK5hM7WDEKUzds\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleHooks.sol\":{\"keccak256\":\"0xdb8a6a41212d49fc5d8b28ed8e6aebebffed0025ebfc6d712513d49b9c027821\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8d68ef6487f687183d0f0ca8c93c72a1444bffc530a56cc558d4c3f5a4dff852\",\"dweb:/ipfs/QmWNfkgJAAXrV3VkoenNv5PaSoZonWz4kDZR8nP24rXFsb\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleHooks.sol\":{\"keccak256\":\"0x12a20e1fd2840bac0efd8bd43de7bb22053d53c7dc770b9c4c4fcdfdcca35185\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b93da40ad8403203e47f995dc23762706515dc5e41bdb6a6a82747bd378294dc\",\"dweb:/ipfs/QmU1KvoVpWbDLnaK18H9NJ799qTJrFTktXc3vkTpd39X9W\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"addHook(bytes4,address)": {
								"notice": "Adds a new hook to handle a given function selector"
							},
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"notice": "Handle the receipt of multiple ERC1155 token types."
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"notice": "Handle the receipt of a single ERC1155 token type."
							},
							"onERC721Received(address,address,uint256,bytes)": {
								"notice": "Handle the receipt of a single ERC721 token."
							},
							"readHook(bytes4)": {
								"notice": "Reads the implementation hook of a signature"
							},
							"removeHook(bytes4)": {
								"notice": "Removes a registered hook"
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleIPFS.sol": {
				"ModuleIPFS": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "IPFSRootUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ipfsRoot",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ipfsRootBytes32",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "updateIPFSRoot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506105dd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638efa644114610046578063a38cef1914610064578063c71f1f9614610079575b600080fd5b61004e61008f565b60405161005b9190610455565b60405180910390f35b6100776100723660046104a6565b610110565b005b610081610161565b60405190815260200161005b565b60606100ec6100e761009f610161565b6040517f017012200000000000000000000000000000000000000000000000000000000060208201526024810191909152604401604051602081830303815290604052610190565b6103a9565b6040516020016100fc91906104bf565b604051602081830303815290604052905090565b333014610155576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440160405180910390fd5b61015e816103d2565b50565b600061018b7f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d0335490565b905090565b8051606090600381901b60006005600483010467ffffffffffffffff8111156101bb576101bb610504565b6040519080825280601f01601f1916602001820160405280156101e5576020820181803683370190505b5090506000806000805b868110156102f95788818151811061020957610209610533565b01602001516008948501949390931b60f89390931c92909217915b600584106102f1576040805180820190915260208082527f6162636465666768696a6b6c6d6e6f707172737475767778797a323334353637818301527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb90950194601f85871c1690811061029a5761029a610533565b602001015160f81c60f81b8583815181106102b7576102b7610533565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600190910190610224565b6001016101ef565b50821561039d576040518060400160405280602081526020017f6162636465666768696a6b6c6d6e6f707172737475767778797a3233343536378152508360050383901b601f168151811061035057610350610533565b602001015160f81c60f81b84828151811061036d5761036d610533565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b50919695505050505050565b6060816040516020016103bc9190610562565b6040516020818303038152906040529050919050565b6103fb7f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d033829055565b6040518181527f20d3ef1b5738a9f6d7beae515432206e7a8e2740ca6dcf46a952190ad01bcb519060200160405180910390a150565b60005b8381101561044c578181015183820152602001610434565b50506000910152565b6020815260008251806020840152610474816040850160208701610431565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156104b857600080fd5b5035919050565b7f697066733a2f2f000000000000000000000000000000000000000000000000008152600082516104f7816007850160208701610431565b9190910160070192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f620000000000000000000000000000000000000000000000000000000000000081526000825161059a816001850160208701610431565b919091016001019291505056fea264697066735822122007fbc61b6942848fa0f0028e8ac2153229352d4ab3513be6a00a23642513613764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EFA6441 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA38CEF19 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xC71F1F96 EQ PUSH2 0x79 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x81 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5B JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEC PUSH2 0xE7 PUSH2 0x9F PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x170122000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x190 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x155 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E DUP2 PUSH2 0x3D2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x3 DUP2 SWAP1 SHL PUSH1 0x0 PUSH1 0x5 PUSH1 0x4 DUP4 ADD DIV PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB JUMPI PUSH2 0x1BB PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI DUP9 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x209 JUMPI PUSH2 0x209 PUSH2 0x533 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x8 SWAP5 DUP6 ADD SWAP5 SWAP4 SWAP1 SWAP4 SHL PUSH1 0xF8 SWAP4 SWAP1 SWAP4 SHR SWAP3 SWAP1 SWAP3 OR SWAP2 JUMPDEST PUSH1 0x5 DUP5 LT PUSH2 0x2F1 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 DUP4 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB SWAP1 SWAP6 ADD SWAP5 PUSH1 0x1F DUP6 DUP8 SHR AND SWAP1 DUP2 LT PUSH2 0x29A JUMPI PUSH2 0x29A PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2B7 JUMPI PUSH2 0x2B7 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1EF JUMP JUMPDEST POP DUP3 ISZERO PUSH2 0x39D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 MSTORE POP DUP4 PUSH1 0x5 SUB DUP4 SWAP1 SHL PUSH1 0x1F AND DUP2 MLOAD DUP2 LT PUSH2 0x350 JUMPI PUSH2 0x350 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x36D JUMPI PUSH2 0x36D PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FB PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x20D3EF1B5738A9F6D7BEAE515432206E7A8E2740CA6DCF46A952190AD01BCB51 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x44C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x434 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x474 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x697066733A2F2F00000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x4F7 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x431 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x6200000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x59A DUP2 PUSH1 0x1 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x431 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xFB 0xC6 SHL PUSH10 0x42848FA0F0028E8AC215 ORIGIN 0x29 CALLDATALOAD 0x2D 0x4A 0xB3 MLOAD EXTCODESIZE 0xE6 LOG0 EXP 0x23 PUSH5 0x2513613764 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "164:971:15:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_updateIPFSRoot_1659": {
									"entryPoint": 978,
									"id": 1659,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bytesToBase32_3696": {
									"entryPoint": 400,
									"id": 3696,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ipfsRootBytes32_1604": {
									"entryPoint": 353,
									"id": 1604,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ipfsRoot_1630": {
									"entryPoint": 143,
									"id": 1630,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@prefixBase32_3480": {
									"entryPoint": 937,
									"id": 3480,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@readBytes32_1876": {
									"entryPoint": null,
									"id": 1876,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateIPFSRoot_1642": {
									"entryPoint": 272,
									"id": 1642,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@writeBytes32_1867": {
									"entryPoint": null,
									"id": 1867,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_26b70929d2fa0780c1c1464bfedd403dbaa218f98edb5cf8a3ef7b664ee22408_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3254:37",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:37",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:184:37",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "90:10:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "99:1:37",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "94:1:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "159:63:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "184:3:37"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "189:1:37"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "180:3:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "180:11:37"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "203:3:37"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "208:1:37"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "199:3:37"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "199:11:37"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "193:5:37"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "193:18:37"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:39:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:39:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "120:1:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "123:6:37"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "117:2:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:13:37"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "131:19:37",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "133:15:37",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "142:1:37"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "145:2:37",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "138:3:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "138:10:37"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "133:1:37"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "113:3:37",
																"statements": []
															},
															"src": "109:113:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:37"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "238:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "238:16:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:37",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:27:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "231:27:37"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "58:3:37",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "63:3:37",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:37",
														"type": ""
													}
												],
												"src": "14:250:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "390:334:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "407:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:21:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "400:21:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "430:27:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "450:6:37"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "444:5:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "444:13:37"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "434:6:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "477:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "488:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "473:18:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "466:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "466:34:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "548:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "556:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "544:15:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "565:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "576:2:37",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "561:18:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "581:6:37"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "509:34:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:79:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:79:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "597:121:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:37"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "632:6:37"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "640:2:37",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "628:3:37"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "628:15:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "645:66:37",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "624:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "624:88:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:104:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:113:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "597:4:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "359:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "370:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "381:4:37",
														"type": ""
													}
												],
												"src": "269:455:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "799:110:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "845:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "854:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "847:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "847:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "847:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "820:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "829:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "841:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "812:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "812:32:37"
															},
															"nodeType": "YulIf",
															"src": "809:52:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "870:33:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "893:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "880:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "880:23:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "870:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "765:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "776:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "788:6:37",
														"type": ""
													}
												],
												"src": "729:180:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1015:76:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1025:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1078:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1060:25:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "984:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "995:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1006:4:37",
														"type": ""
													}
												],
												"src": "914:177:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1316:159:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1333:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:66:37",
																		"type": "",
																		"value": "0x0170122000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1326:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:79:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1326:79:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1425:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1430:1:37",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:11:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1434:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1414:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1414:27:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1414:27:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1450:19:37",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1461:3:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1466:2:37",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1457:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:12:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1450:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_26b70929d2fa0780c1c1464bfedd403dbaa218f98edb5cf8a3ef7b664ee22408_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1292:3:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1297:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1308:3:37",
														"type": ""
													}
												],
												"src": "1096:379:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1720:197:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1737:3:37"
																	},
																	{
																		"hexValue": "697066733a2f2f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1742:9:37",
																		"type": "",
																		"value": "ipfs://"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1730:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1730:22:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1730:22:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1761:27:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1781:6:37"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1775:5:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:13:37"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1765:6:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1836:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1844:4:37",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1832:17:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1855:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1860:1:37",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1851:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1851:11:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1864:6:37"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1797:34:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:74:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1797:74:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1880:31:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1895:3:37"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1891:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1891:16:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1909:1:37",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1887:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:24:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1880:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1696:3:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1701:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1712:3:37",
														"type": ""
													}
												],
												"src": "1480:437:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2051:198:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2061:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2073:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2084:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2069:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2069:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2061:4:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2096:52:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2106:42:37",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2100:2:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2164:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2179:6:37"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2187:2:37"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2175:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2175:15:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2157:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2157:34:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2211:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2222:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2207:18:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2231:6:37"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2239:2:37"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:15:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2200:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2200:43:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2200:43:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2012:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2023:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2031:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2042:4:37",
														"type": ""
													}
												],
												"src": "1922:327:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2286:152:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2303:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2306:77:37",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2296:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:88:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2296:88:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2400:1:37",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2403:4:37",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2393:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2393:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2393:15:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2424:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2427:4:37",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2417:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2417:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2417:15:37"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2254:184:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2475:152:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2492:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2495:77:37",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2485:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2485:88:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2485:88:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2589:1:37",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:4:37",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2582:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2582:15:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2616:4:37",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2606:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2606:15:37"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2443:184:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2664:152:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2681:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2684:77:37",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2674:88:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2674:88:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2778:1:37",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2781:4:37",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2771:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2771:15:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2802:1:37",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:4:37",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "2795:15:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2795:15:37"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2632:184:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:191:37",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3078:3:37"
																	},
																	{
																		"hexValue": "62",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3083:3:37",
																		"type": "",
																		"value": "b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3071:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3071:16:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3071:16:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3096:27:37",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3116:6:37"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3110:5:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:13:37"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3100:6:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3171:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3179:4:37",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3167:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3167:17:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3190:3:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3195:1:37",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3186:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3186:11:37"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:37"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3132:34:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3132:74:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3132:74:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3215:31:37",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3230:3:37"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3235:6:37"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3226:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3226:16:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3244:1:37",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3222:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "3222:24:37"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3215:3:37"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3037:3:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3042:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3053:3:37",
														"type": ""
													}
												],
												"src": "2821:431:37"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_26b70929d2fa0780c1c1464bfedd403dbaa218f98edb5cf8a3ef7b664ee22408_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x0170122000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 4), value0)\n        end := add(pos, 36)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"ipfs://\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 7), length)\n        end := add(add(pos, length), 7)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"b\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 1), length)\n        end := add(add(pos, length), 1)\n    }\n}",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80638efa644114610046578063a38cef1914610064578063c71f1f9614610079575b600080fd5b61004e61008f565b60405161005b9190610455565b60405180910390f35b6100776100723660046104a6565b610110565b005b610081610161565b60405190815260200161005b565b60606100ec6100e761009f610161565b6040517f017012200000000000000000000000000000000000000000000000000000000060208201526024810191909152604401604051602081830303815290604052610190565b6103a9565b6040516020016100fc91906104bf565b604051602081830303815290604052905090565b333014610155576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440160405180910390fd5b61015e816103d2565b50565b600061018b7f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d0335490565b905090565b8051606090600381901b60006005600483010467ffffffffffffffff8111156101bb576101bb610504565b6040519080825280601f01601f1916602001820160405280156101e5576020820181803683370190505b5090506000806000805b868110156102f95788818151811061020957610209610533565b01602001516008948501949390931b60f89390931c92909217915b600584106102f1576040805180820190915260208082527f6162636465666768696a6b6c6d6e6f707172737475767778797a323334353637818301527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb90950194601f85871c1690811061029a5761029a610533565b602001015160f81c60f81b8583815181106102b7576102b7610533565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600190910190610224565b6001016101ef565b50821561039d576040518060400160405280602081526020017f6162636465666768696a6b6c6d6e6f707172737475767778797a3233343536378152508360050383901b601f168151811061035057610350610533565b602001015160f81c60f81b84828151811061036d5761036d610533565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b50919695505050505050565b6060816040516020016103bc9190610562565b6040516020818303038152906040529050919050565b6103fb7f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d033829055565b6040518181527f20d3ef1b5738a9f6d7beae515432206e7a8e2740ca6dcf46a952190ad01bcb519060200160405180910390a150565b60005b8381101561044c578181015183820152602001610434565b50506000910152565b6020815260008251806020840152610474816040850160208701610431565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156104b857600080fd5b5035919050565b7f697066733a2f2f000000000000000000000000000000000000000000000000008152600082516104f7816007850160208701610431565b9190910160070192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f620000000000000000000000000000000000000000000000000000000000000081526000825161059a816001850160208701610431565b919091016001019291505056fea264697066735822122007fbc61b6942848fa0f0028e8ac2153229352d4ab3513be6a00a23642513613764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EFA6441 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA38CEF19 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xC71F1F96 EQ PUSH2 0x79 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x81 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5B JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEC PUSH2 0xE7 PUSH2 0x9F PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x170122000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x190 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x155 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E DUP2 PUSH2 0x3D2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x3 DUP2 SWAP1 SHL PUSH1 0x0 PUSH1 0x5 PUSH1 0x4 DUP4 ADD DIV PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB JUMPI PUSH2 0x1BB PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI DUP9 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x209 JUMPI PUSH2 0x209 PUSH2 0x533 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x8 SWAP5 DUP6 ADD SWAP5 SWAP4 SWAP1 SWAP4 SHL PUSH1 0xF8 SWAP4 SWAP1 SWAP4 SHR SWAP3 SWAP1 SWAP3 OR SWAP2 JUMPDEST PUSH1 0x5 DUP5 LT PUSH2 0x2F1 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 DUP4 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB SWAP1 SWAP6 ADD SWAP5 PUSH1 0x1F DUP6 DUP8 SHR AND SWAP1 DUP2 LT PUSH2 0x29A JUMPI PUSH2 0x29A PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2B7 JUMPI PUSH2 0x2B7 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1EF JUMP JUMPDEST POP DUP3 ISZERO PUSH2 0x39D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 MSTORE POP DUP4 PUSH1 0x5 SUB DUP4 SWAP1 SHL PUSH1 0x1F AND DUP2 MLOAD DUP2 LT PUSH2 0x350 JUMPI PUSH2 0x350 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x36D JUMPI PUSH2 0x36D PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FB PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x20D3EF1B5738A9F6D7BEAE515432206E7A8E2740CA6DCF46A952190AD01BCB51 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x44C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x434 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x474 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x697066733A2F2F00000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x4F7 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x431 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x6200000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x59A DUP2 PUSH1 0x1 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x431 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xFB 0xC6 SHL PUSH10 0x42848FA0F0028E8AC215 ORIGIN 0x29 CALLDATALOAD 0x2D 0x4A 0xB3 MLOAD EXTCODESIZE 0xE6 LOG0 EXP 0x23 PUSH5 0x2513613764 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "164:971:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;562:332;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;898:90;;;;;;:::i;:::-;;:::i;:::-;;443:115;;;:::i;:::-;;;1060:25:37;;;1048:2;1033:18;443:115:15;914:177:37;562:332:15;603:13;690:185;724:141;822:17;:15;:17::i;:::-;761:92;;1338:66:37;761:92:15;;;1326:79:37;1421:11;;;1414:27;;;;1457:12;;761:92:15;;;;;;;;;;;;724:23;:141::i;:::-;690:22;:185::i;:::-;645:238;;;;;;;;:::i;:::-;;;;;;;;;;;;;624:265;;562:332;:::o;898:90::-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;2157:34:37;255:4:18;2207:18:37;;;2200:43;2069:18;;222:39:18;;;;;;;174:94;961:22:15::1;977:5;961:15;:22::i;:::-;898:90:::0;:::o;443:115::-;491:7;513:40;371:66;290:11:19;;195:112;513:40:15;506:47;;443:115;:::o;1792:810:35:-;1902:13;;1859;;1950:1;1935:16;;;1880:19;2076:1;2071;2066:6;;2065:12;2055:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2055:23:35;;2029:49;;2087:12;2111:14;2137:15;2170:9;2165:280;2189:11;2185:1;:15;2165:280;;;2248:6;2255:1;2248:9;;;;;;;;:::i;:::-;;;;;2237:1;2268:9;;;;2227:11;;;;2248:9;;;;;2226:32;;;;;2288:149;2303:1;2295:4;:9;2288:149;;2368:11;;;;;;;;;;;;;;;;;;2318:9;;;;;2399:4;2381:14;;;2380:23;;2368:36;;;;;;:::i;:::-;;;;;;;;;2339:10;2350:7;2339:19;;;;;;;;:::i;:::-;;;;:66;;;;;;;;;;-1:-1:-1;2417:9:35;;;;;2288:149;;;2202:3;;2165:280;;;-1:-1:-1;2457:8:35;;2453:105;;2506:11;;;;;;;;;;;;;;;;;2534:4;2530:1;:8;2519:6;:20;;2543:4;2518:29;2506:42;;;;;;;;:::i;:::-;;;;;;;;;2477:10;2488:7;2477:19;;;;;;;;:::i;:::-;;;;:72;;;;;;;;;;;2453:105;-1:-1:-1;2580:10:35;;1792:810;-1:-1:-1;;;;;;1792:810:35:o;823:139::-;891:13;948:7;926:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;912:45;;823:139;;;:::o;992:141:15:-;1047:48;371:66;1089:5;167:18:19;;91:100;1047:48:15;1106:22;;1060:25:37;;;1106:22:15;;1048:2:37;1033:18;1106:22:15;;;;;;;992:141;:::o;14:250:37:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:37;238:16;;231:27;14:250::o;269:455::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;640:2;628:15;645:66;624:88;609:104;;;;715:2;605:113;;269:455;-1:-1:-1;;269:455:37:o;729:180::-;788:6;841:2;829:9;820:7;816:23;812:32;809:52;;;857:1;854;847:12;809:52;-1:-1:-1;880:23:37;;729:180;-1:-1:-1;729:180:37:o;1480:437::-;1742:9;1737:3;1730:22;1712:3;1781:6;1775:13;1797:74;1864:6;1860:1;1855:3;1851:11;1844:4;1836:6;1832:17;1797:74;:::i;:::-;1891:16;;;;1909:1;1887:24;;1480:437;-1:-1:-1;;1480:437:37:o;2443:184::-;2495:77;2492:1;2485:88;2592:4;2589:1;2582:15;2616:4;2613:1;2606:15;2632:184;2684:77;2681:1;2674:88;2781:4;2778:1;2771:15;2805:4;2802:1;2795:15;2821:431;3083:3;3078;3071:16;3053:3;3116:6;3110:13;3132:74;3199:6;3195:1;3190:3;3186:11;3179:4;3171:6;3167:17;3132:74;:::i;:::-;3226:16;;;;3244:1;3222:24;;2821:431;-1:-1:-1;;2821:431:37:o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"IPFSRootUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ipfsRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsRootBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"updateIPFSRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleIPFS.sol\":\"ModuleIPFS\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleIPFS.sol\":{\"keccak256\":\"0xecb4e3d42517d00de4520d8285a5d70babf208ecb78623dbbecf77dff672d225\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://021147a411bb34b171621d0d1d3cf050852a3a4290c6ade44cca9fba795f5b15\",\"dweb:/ipfs/QmWqDWoc3CsTh5ktsAqn6fBK18RctAVp1SfZsSGWvkACDa\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/utils/LibString.sol\":{\"keccak256\":\"0x18662322f6ce8c4aea601ec11fc7631c843f9bf59dd2526d27db0fef3b2d81b1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://77cc33818f1bbda0d42588d0dd4959a2db288cb1a934d7e710a2923da55cf21e\",\"dweb:/ipfs/QmNR1U27FdvRQGZvrx3hMJqCUsF6NYqziemsVvZEjk767t\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleNonce.sol": {
				"ModuleNonce": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_provided",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								}
							],
							"name": "BadNonce",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newNonce",
									"type": "uint256"
								}
							],
							"name": "NonceChange",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								}
							],
							"name": "readNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"nonce()": {
								"details": "The default nonce space is 0x00",
								"returns": {
									"_0": "The next nonce"
								}
							},
							"readNonce(uint256)": {
								"params": {
									"_space": "Nonce space, each space keeps an independent nonce count"
								},
								"returns": {
									"_0": "The next nonce"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610158806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638c3f55631461003b578063affed0e014610060575b600080fd5b61004e610049366004610109565b610068565b60405190815260200160405180910390f35b61004e61009a565b60006100947f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e836100ab565b92915050565b60006100a66000610068565b905090565b60008083836040516020016100ca929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b60006020828403121561011b57600080fd5b503591905056fea26469706673582212206e5fd9e5cfc12ecf5317977f97e2dad5498ba71fc8a71a481f25e825689a9d1364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x60 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x109 JUMP JUMPDEST PUSH2 0x68 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94 PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0xAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6 PUSH1 0x0 PUSH2 0x68 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x5FD9E5CFC12ECF5317977F97E2DAD5 0x49 DUP12 0xA7 0x1F 0xC8 0xA7 BYTE BASEFEE 0x1F 0x25 0xE8 0x25 PUSH9 0x9A9D1364736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "145:1931:16:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@nonce_1695": {
									"entryPoint": 154,
									"id": 1695,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@readBytes32Map_1918": {
									"entryPoint": 171,
									"id": 1918,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readNonce_1716": {
									"entryPoint": 104,
									"id": 1716,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:631:37",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:37",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:37"
															},
															"nodeType": "YulIf",
															"src": "94:52:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:37",
														"type": ""
													}
												],
												"src": "14:180:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:76:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:25:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:37",
														"type": ""
													}
												],
												"src": "199:177:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "510:119:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "520:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "532:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "543:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "528:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "528:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "520:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "562:9:37"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "573:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:25:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "555:25:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "600:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "611:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "596:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "596:18:37"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "616:6:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "589:34:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "471:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "490:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "501:4:37",
														"type": ""
													}
												],
												"src": "381:248:37"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638c3f55631461003b578063affed0e014610060575b600080fd5b61004e610049366004610109565b610068565b60405190815260200160405180910390f35b61004e61009a565b60006100947f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e836100ab565b92915050565b60006100a66000610068565b905090565b60008083836040516020016100ca929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b60006020828403121561011b57600080fd5b503591905056fea26469706673582212206e5fd9e5cfc12ecf5317977f97e2dad5498ba71fc8a71a481f25e825689a9d1364736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x60 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x109 JUMP JUMPDEST PUSH2 0x68 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94 PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0xAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6 PUSH1 0x0 PUSH2 0x68 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x5FD9E5CFC12ECF5317977F97E2DAD5 0x49 DUP12 0xA7 0x1F 0xC8 0xA7 BYTE BASEFEE 0x1F 0x25 0xE8 0x25 PUSH9 0x9A9D1364736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "145:1931:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:156;;;;;;:::i;:::-;;:::i;:::-;;;345:25:37;;;333:2;318:18;938:156:16;;;;;;;670:87;;;:::i;938:156::-;1002:7;1032:56;453:66;1080:6;1032:28;:56::i;:::-;1024:65;938:156;-1:-1:-1;;938:156:16:o;670:87::-;718:7;740:12;750:1;740:9;:12::i;:::-;733:19;;670:87;:::o;490:187:19:-;568:11;587;622:4;628:7;611:25;;;;;;;;555::37;;;611:2;596:18;;589:34;543:2;528:18;;381:248;611:25:19;;;;;;;;;;;;;;601:36;;611:25;601:36;;;;661:10;;490:187;-1:-1:-1;;;;490:187:19:o;14:180:37:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:37;;14:180;-1:-1:-1;14:180:37:o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"}],\"name\":\"BadNonce\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"}],\"name\":\"readNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"nonce()\":{\"details\":\"The default nonce space is 0x00\",\"returns\":{\"_0\":\"The next nonce\"}},\"readNonce(uint256)\":{\"params\":{\"_space\":\"Nonce space, each space keeps an independent nonce count\"},\"returns\":{\"_0\":\"The next nonce\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"nonce()\":{\"notice\":\"Returns the next nonce of the default nonce space\"},\"readNonce(uint256)\":{\"notice\":\"Returns the next nonce of the given nonce space\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleNonce.sol\":\"ModuleNonce\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleNonce.sol\":{\"keccak256\":\"0x3b5388842f763a5347d632a0e0e8499a54b6f0b0a6eb7f7d3d848319defa042d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b36fa5a88a4e174967f850bf2bb78c787d8016ef7b5eee3e2f883fbfe9b87a7d\",\"dweb:/ipfs/QmTDZiPiQGe1fmTKKzdwzBE1xjkh8apTotW1SQRUCFXf4q\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":{\"keccak256\":\"0x98520e740b0822ec053d21f376b8be8a58e93228f3758f9228a7d00e1f60950f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://31226706c004f1a4315d6b8d37621b46f4d5807c16e1ce72675c1431ed9006a2\",\"dweb:/ipfs/QmdSSyCuPex2E2VTd6UMYy9WAq9eJNZ6vHSUomntNknzXE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"nonce()": {
								"notice": "Returns the next nonce of the default nonce space"
							},
							"readNonce(uint256)": {
								"notice": "Returns the next nonce of the given nonce space"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleOnlyDelegatecall.sol": {
				"ModuleOnlyDelegatecall": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "OnlyDelegatecall",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"@_1808": {
									"entryPoint": null,
									"id": 1808,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0604052348015600f57600080fd5b5030608052608051603f602960003960005050603f6000f3fe6080604052600080fdfea2646970667358221220cd5d7c7953e9f62653360defd85ac5914fc196d6fccccfa76107635e1a607ca764736f6c63430008120033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADDRESS PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH1 0x3F PUSH1 0x29 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x3F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0x5D PUSH29 0x7953E9F62653360DEFD85AC5914FC196D6FCCCCFA76107635E1A607CA7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:355:17:-:0;;;165:45;;;;;;;;;-1:-1:-1;200:4:17;185:20;;65:355;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220cd5d7c7953e9f62653360defd85ac5914fc196d6fccccfa76107635e1a607ca764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0x5D PUSH29 0x7953E9F62653360DEFD85AC5914FC196D6FCCCCFA76107635E1A607CA7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:355:17:-:0;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OnlyDelegatecall\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleOnlyDelegatecall.sol\":\"ModuleOnlyDelegatecall\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleOnlyDelegatecall.sol\":{\"keccak256\":\"0x32bdb1d343eee2e32fd9d0f1d6dc0e265411d0821bd908881822f0f26f0887f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1537c4f60a609751013bdc69eb1c6e6218982d91013115bc4e28cb84f816cd91\",\"dweb:/ipfs/QmSjkSTrrB4vuxECcm5cRG7YmraF53QWRgftxS827KcQLW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleSelfAuth.sol": {
				"ModuleSelfAuth": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220caabd715757d0c669e6583be5fe5d515ba9d8cde71ce64e3022d9c4df0d4213764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xAB 0xD7 ISZERO PUSH22 0x7D0C669E6583BE5FE5D515BA9D8CDE71CE64E3022D9C 0x4D CREATE 0xD4 0x21 CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:216:18:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220caabd715757d0c669e6583be5fe5d515ba9d8cde71ce64e3022d9c4df0d4213764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xAB 0xD7 ISZERO PUSH22 0x7D0C669E6583BE5FE5D515BA9D8CDE71CE64E3022D9C 0x4D CREATE 0xD4 0x21 CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:216:18:-:0;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleSelfAuth.sol\":\"ModuleSelfAuth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleStorage.sol": {
				"ModuleStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dd1498f556efd32c9f0f12272ba7f5e32975f772be1a52c8342d2d2ba6ff94b664736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD EQ SWAP9 CREATE2 JUMP 0xEF 0xD3 0x2C SWAP16 0xF SLT 0x27 0x2B 0xA7 CREATE2 0xE3 0x29 PUSH22 0xF772BE1A52C8342D2D2BA6FF94B664736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "65:614:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;65:614:19;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dd1498f556efd32c9f0f12272ba7f5e32975f772be1a52c8342d2d2ba6ff94b664736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD EQ SWAP9 CREATE2 JUMP 0xEF 0xD3 0x2C SWAP16 0xF SLT 0x27 0x2B 0xA7 CREATE2 0xE3 0x29 PUSH22 0xF772BE1A52C8342D2D2BA6FF94B664736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "65:614:19:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleStorage.sol\":\"ModuleStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleUpdate.sol": {
				"ModuleUpdate": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "ImplementationUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "updateImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImplementation(address)": {
								"details": "WARNING Updating the implementation can brick the wallet",
								"params": {
									"_implementation": "New main module implementation"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102d3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063025b22bc14610062575b600080fd5b61004e61004936600461021e565b610077565b604051901515815260200160405180910390f35b610075610070366004610267565b610112565b005b60007ffda4dd44000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016100ca57506001919050565b507fffffffff00000000000000000000000000000000000000000000000000000000167f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b333014610158576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b61016181610164565b50565b73ffffffffffffffffffffffffffffffffffffffff81163b6101ca576040517f0c76093700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240161014f565b6101d2813055565b60405173ffffffffffffffffffffffffffffffffffffffff821681527f310ba5f1d2ed074b51e2eccd052a47ae9ab7c6b800d1fca3db3999d6a592ca039060200160405180910390a150565b60006020828403121561023057600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461026057600080fd5b9392505050565b60006020828403121561027957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461026057600080fdfea2646970667358221220ea980305b334e6dd53f09021ac261c4ea9ab2346a0642943d337daf2461d2e5064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x25B22BC EQ PUSH2 0x62 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E JUMP JUMPDEST PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH2 0x70 CALLDATASIZE PUSH1 0x4 PUSH2 0x267 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0xFDA4DD4400000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0xCA JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x158 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x161 DUP2 PUSH2 0x164 JUMP JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x1CA JUMPI PUSH1 0x40 MLOAD PUSH32 0xC76093700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x14F JUMP JUMPDEST PUSH2 0x1D2 DUP2 ADDRESS SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0x310BA5F1D2ED074B51E2ECCD052A47AE9AB7C6B800D1FCA3DB3999D6A592CA03 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA SWAP9 SUB SDIV 0xB3 CALLVALUE 0xE6 0xDD MSTORE8 CREATE SWAP1 0x21 0xAC 0x26 SHR 0x4E 0xA9 0xAB 0x23 CHAINID LOG0 PUSH5 0x2943D337DA CALLCODE CHAINID SAR 0x2E POP PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "237:1443:20:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_setImplementation_175": {
									"entryPoint": null,
									"id": 175,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateImplementation_1980": {
									"entryPoint": 356,
									"id": 1980,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_3228": {
									"entryPoint": null,
									"id": 3228,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1069": {
									"entryPoint": null,
									"id": 1069,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2005": {
									"entryPoint": 119,
									"id": 2005,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateImplementation_1955": {
									"entryPoint": 274,
									"id": 1955,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1417:37",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:37",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:263:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:37"
															},
															"nodeType": "YulIf",
															"src": "93:52:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:37"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "300:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "309:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "312:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "302:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "302:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "302:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:37"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "230:66:37",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:78:37"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:89:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:97:37"
															},
															"nodeType": "YulIf",
															"src": "199:117:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "325:15:37",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "335:5:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "325:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:37",
														"type": ""
													}
												],
												"src": "14:332:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "446:92:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "456:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "468:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "479:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "464:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "456:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "523:6:37"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "516:6:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "516:14:37"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "509:6:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "509:22:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "491:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "491:41:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "491:41:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "415:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "426:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "437:4:37",
														"type": ""
													}
												],
												"src": "351:187:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "613:239:37",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "659:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "668:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "671:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "661:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "661:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "661:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "634:7:37"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "643:9:37"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "630:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "630:23:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "655:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "626:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:32:37"
															},
															"nodeType": "YulIf",
															"src": "623:52:37"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:36:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "710:9:37"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "697:12:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:23:37"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "688:5:37",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "806:16:37",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "815:1:37",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "818:1:37",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "808:6:37"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "808:12:37"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "808:12:37"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "742:5:37"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "753:5:37"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "760:42:37",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "749:3:37"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "749:54:37"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "739:2:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "739:65:37"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "732:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "732:73:37"
															},
															"nodeType": "YulIf",
															"src": "729:93:37"
														},
														{
															"nodeType": "YulAssignment",
															"src": "831:15:37",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "841:5:37"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "831:6:37"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "579:9:37",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "590:7:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "602:6:37",
														"type": ""
													}
												],
												"src": "543:309:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "986:198:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "996:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1008:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1019:2:37",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1004:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "996:4:37"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1031:52:37",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1041:42:37",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1035:2:37",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1099:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1114:6:37"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1122:2:37"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1110:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1110:15:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1092:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:34:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1092:34:37"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1146:9:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1157:2:37",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1142:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1142:18:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1166:6:37"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1174:2:37"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1162:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:15:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1135:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1135:43:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1135:43:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "947:9:37",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "958:6:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "966:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "977:4:37",
														"type": ""
													}
												],
												"src": "857:327:37"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1290:125:37",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1300:26:37",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1312:9:37"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:37",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1308:3:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:18:37"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1300:4:37"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1342:9:37"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:37"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1365:42:37",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:37"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:55:37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1335:6:37"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:74:37"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1335:74:37"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1259:9:37",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:37",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1281:4:37",
														"type": ""
													}
												],
												"src": "1189:226:37"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}",
									"id": 37,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063025b22bc14610062575b600080fd5b61004e61004936600461021e565b610077565b604051901515815260200160405180910390f35b610075610070366004610267565b610112565b005b60007ffda4dd44000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016100ca57506001919050565b507fffffffff00000000000000000000000000000000000000000000000000000000167f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b333014610158576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b61016181610164565b50565b73ffffffffffffffffffffffffffffffffffffffff81163b6101ca576040517f0c76093700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240161014f565b6101d2813055565b60405173ffffffffffffffffffffffffffffffffffffffff821681527f310ba5f1d2ed074b51e2eccd052a47ae9ab7c6b800d1fca3db3999d6a592ca039060200160405180910390a150565b60006020828403121561023057600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461026057600080fd5b9392505050565b60006020828403121561027957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461026057600080fdfea2646970667358221220ea980305b334e6dd53f09021ac261c4ea9ab2346a0642943d337daf2461d2e5064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x25B22BC EQ PUSH2 0x62 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E JUMP JUMPDEST PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH2 0x70 CALLDATASIZE PUSH1 0x4 PUSH2 0x267 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0xFDA4DD4400000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0xCA JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x158 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x161 DUP2 PUSH2 0x164 JUMP JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x1CA JUMPI PUSH1 0x40 MLOAD PUSH32 0xC76093700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x14F JUMP JUMPDEST PUSH2 0x1D2 DUP2 ADDRESS SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0x310BA5F1D2ED074B51E2ECCD052A47AE9AB7C6B800D1FCA3DB3999D6A592CA03 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA SWAP9 SUB SDIV 0xB3 CALLVALUE 0xE6 0xDD MSTORE8 CREATE SWAP1 0x21 0xAC 0x26 SHR 0x4E 0xA9 0xAB 0x23 CHAINID LOG0 PUSH5 0x2943D337DA CALLCODE CHAINID SAR 0x2E POP PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "237:1443:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1446:232;;;;;;:::i;:::-;;:::i;:::-;;;516:14:37;;509:22;491:41;;479:2;464:18;1446:232:20;;;;;;;615:139;;;;;;:::i;:::-;;:::i;:::-;;1446:232;1532:4;1548:47;;;;;1544:79;;-1:-1:-1;1612:4:20;;1446:232;-1:-1:-1;1446:232:20:o;1544:79::-;-1:-1:-1;709:47:12;;725:31;709:47;;1446:232:20:o;615:139::-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;1092:34:37;255:4:18;1142:18:37;;;1135:43;1004:18;;222:39:18;;;;;;;;174:94;711:38:20::1;733:15;711:21;:38::i;:::-;615:139:::0;:::o;973:263::-;1066:26;;;537:20:31;1061:80:20;;1103:38;;;;;1365:42:37;1353:55;;1103:38:20;;;1335:74:37;1308:18;;1103:38:20;1189:226:37;1061:80:20;1147:35;1166:15;586:9:6;579:23;505:107;1147:35:20;1193:38;;1365:42:37;1353:55;;1335:74;;1193:38:20;;1323:2:37;1308:18;1193:38:20;;;;;;;973:263;:::o;14:332:37:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:37:o;543:309::-;602:6;655:2;643:9;634:7;630:23;626:32;623:52;;;671:1;668;661:12;623:52;710:9;697:23;760:42;753:5;749:54;742:5;739:65;729:93;;818:1;815;808:12"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"updateImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImplementation(address)\":{\"details\":\"WARNING Updating the implementation can brick the wallet\",\"params\":{\"_implementation\":\"New main module implementation\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImplementation(address)\":{\"notice\":\"Updates the implementation of the base wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleUpdate.sol\":\"ModuleUpdate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/Implementation.sol\":{\"keccak256\":\"0xdebdf1fc930b1ba8248030b07fa1c2c46564962073e49818c672f8ac5b9239b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://687378a78702ab03e0a3ae3160e2ebec734235c220d9522b7dc33cb592734159\",\"dweb:/ipfs/QmTUJjNPHcLbm2KipYof3gyxkpdHS1ivTGMem1qmXnxfg8\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleUpdate.sol\":{\"keccak256\":\"0x610c2ab830a0e1e33c6c4d0d079360224f7f83913adfc19a4ea529821d71f400\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c0f4f0a4a87b3a9ee2305ea54a38d431f9ab2dc2cff95785c27cd763116fdd09\",\"dweb:/ipfs/QmWdFMwNKaPdNzVCk8v5Eo23NbEmc8CzGPAAz6NLRZfhZp\"]},\"contracts/modules/commons/interfaces/IModuleUpdate.sol\":{\"keccak256\":\"0xaa8268ffcc4ba2c2436ace94fe8ad263d5c254d21ac5ef08ce890cbc38fe3d91\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://30c3766118e63207f47b417a7635879246b5ce87d7c7139fe55cb9033ded8b2c\",\"dweb:/ipfs/QmPyzSpYpNeaD5y8ZUR7dXGowKxfqFwipNt7pVScL9sECV\"]},\"contracts/utils/LibAddress.sol\":{\"keccak256\":\"0x24b886c1b175b785bf06476bf1900c9b335fa4b40841f4b948e31abb0a402dc8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6d9dbe6caa08fb93d758dd71f6afbee35b7eb655a368a60449a2a91ee231593\",\"dweb:/ipfs/QmXzyqBMojdg4C1QvoaLxf4QDeBfkvTkUPmdk1xKUt3tqi\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImplementation(address)": {
								"notice": "Updates the implementation of the base wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleAuth.sol": {
				"IModuleAuth": {
					"abi": [
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/interfaces/IModuleAuth.sol\":\"IModuleAuth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleCalls.sol": {
				"IModuleCalls": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_requested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_available",
									"type": "uint256"
								}
							],
							"name": "NotEnoughGas",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "TxExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_reason",
									"type": "bytes"
								}
							],
							"name": "TxFailed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								}
							],
							"name": "selfExecute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"params": {
									"_nonce": "Signature nonce (may contain an encoded space)",
									"_signature": "Encoded signature",
									"_txs": "Transactions to process"
								}
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"params": {
									"_txs": "Transactions to execute"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_available\",\"type\":\"uint256\"}],\"name\":\"NotEnoughGas\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"TxExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"TxFailed\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"selfExecute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"params\":{\"_nonce\":\"Signature nonce (may contain an encoded space)\",\"_signature\":\"Encoded signature\",\"_txs\":\"Transactions to process\"}},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"params\":{\"_txs\":\"Transactions to execute\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"notice\":\"Allow wallet owner to execute an action\"},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"notice\":\"Allow wallet to execute an action   without signing the message\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/interfaces/IModuleCalls.sol\":\"IModuleCalls\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/interfaces/IModuleCalls.sol\":{\"keccak256\":\"0xde065c15e38eb009c3dc8f99dfefdd1d6d244dd12a889a8b57edd90d32fb4395\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://23608955786060457f79267795a61eb89b3910b683fc136c749548369425088f\",\"dweb:/ipfs/QmXNorcQBF1Qk21y3aEJRiiHVtwm61zP4ttA1ZzmRjyHnz\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"notice": "Allow wallet owner to execute an action"
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"notice": "Allow wallet to execute an action   without signing the message"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleCreator.sol": {
				"IModuleCreator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "CreateFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "createContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createContract(bytes)": {
								"params": {
									"_code": "Creation code of the contract"
								},
								"returns": {
									"addr": "The address of the created contract"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"CreateFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"createContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createContract(bytes)\":{\"params\":{\"_code\":\"Creation code of the contract\"},\"returns\":{\"addr\":\"The address of the created contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createContract(bytes)\":{\"notice\":\"Creates a contract forwarding eth value\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/interfaces/IModuleCreator.sol\":\"IModuleCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/interfaces/IModuleCreator.sol\":{\"keccak256\":\"0xa206dd3d424b8cd1c4f1400aa344cbc974480fea02f0fb371b872558e5ff4e6d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ea14c75f43a0008c582dcbae3ba3c900e446e28039dfdbb059d326ec5cc6a2d2\",\"dweb:/ipfs/QmRfF6BmUWiFkCgzVFbLcHsUCNz5q2XkkcwXPX57ViTK4D\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"createContract(bytes)": {
								"notice": "Creates a contract forwarding eth value"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleHooks.sol": {
				"IModuleHooks": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "HookAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "HookDoesNotExist",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "DefinedHook",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "addHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "readHook",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "removeHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addHook(bytes4,address)": {
								"params": {
									"_implementation": "Hook implementation contract",
									"_signature": "Signature function linked to the hook"
								}
							},
							"readHook(bytes4)": {
								"params": {
									"_signature": "Signature function"
								},
								"returns": {
									"_0": "The address of the implementation hook, address(0) if none"
								}
							},
							"removeHook(bytes4)": {
								"params": {
									"_signature": "Signature function linked to the hook"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"HookAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"HookDoesNotExist\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"DefinedHook\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"addHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"readHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"removeHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addHook(bytes4,address)\":{\"params\":{\"_implementation\":\"Hook implementation contract\",\"_signature\":\"Signature function linked to the hook\"}},\"readHook(bytes4)\":{\"params\":{\"_signature\":\"Signature function\"},\"returns\":{\"_0\":\"The address of the implementation hook, address(0) if none\"}},\"removeHook(bytes4)\":{\"params\":{\"_signature\":\"Signature function linked to the hook\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addHook(bytes4,address)\":{\"notice\":\"Adds a new hook to handle a given function selector\"},\"readHook(bytes4)\":{\"notice\":\"Reads the implementation hook of a signature\"},\"removeHook(bytes4)\":{\"notice\":\"Removes a registered hook\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/interfaces/IModuleHooks.sol\":\"IModuleHooks\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/interfaces/IModuleHooks.sol\":{\"keccak256\":\"0x12a20e1fd2840bac0efd8bd43de7bb22053d53c7dc770b9c4c4fcdfdcca35185\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b93da40ad8403203e47f995dc23762706515dc5e41bdb6a6a82747bd378294dc\",\"dweb:/ipfs/QmU1KvoVpWbDLnaK18H9NJ799qTJrFTktXc3vkTpd39X9W\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"addHook(bytes4,address)": {
								"notice": "Adds a new hook to handle a given function selector"
							},
							"readHook(bytes4)": {
								"notice": "Reads the implementation hook of a signature"
							},
							"removeHook(bytes4)": {
								"notice": "Removes a registered hook"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleUpdate.sol": {
				"IModuleUpdate": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "updateImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"updateImplementation(address)": {
								"details": "WARNING Updating the implementation can brick the wallet",
								"params": {
									"_implementation": "New main module implementation"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"updateImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"updateImplementation(address)\":{\"details\":\"WARNING Updating the implementation can brick the wallet\",\"params\":{\"_implementation\":\"New main module implementation\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateImplementation(address)\":{\"notice\":\"Updates the implementation of the base wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/interfaces/IModuleUpdate.sol\":\"IModuleUpdate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/interfaces/IModuleUpdate.sol\":{\"keccak256\":\"0xaa8268ffcc4ba2c2436ace94fe8ad263d5c254d21ac5ef08ce890cbc38fe3d91\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://30c3766118e63207f47b417a7635879246b5ce87d7c7139fe55cb9033ded8b2c\",\"dweb:/ipfs/QmPyzSpYpNeaD5y8ZUR7dXGowKxfqFwipNt7pVScL9sECV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"updateImplementation(address)": {
								"notice": "Updates the implementation of the base wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol": {
				"SequenceBaseSig": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"kind": "dev",
						"methods": {},
						"title": "SequenceBaseSig Library",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122051d050e151e43f14b224bdac8815469e77826b24b4321fea4ed098a089dd534364736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xD0 POP 0xE1 MLOAD 0xE4 EXTCODEHASH EQ 0xB2 0x24 0xBD 0xAC DUP9 ISZERO CHAINID SWAP15 PUSH24 0x826B24B4321FEA4ED098A089DD534364736F6C6343000812 STOP CALLER ",
							"sourceMap": "419:9117:26:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;419:9117:26;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122051d050e151e43f14b224bdac8815469e77826b24b4321fea4ed098a089dd534364736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xD0 POP 0xE1 MLOAD 0xE4 EXTCODEHASH EQ 0xB2 0x24 0xBD 0xAC DUP9 ISZERO CHAINID SWAP15 PUSH24 0x826B24B4321FEA4ED098A089DD534364736F6C6343000812 STOP CALLER ",
							"sourceMap": "419:9117:26:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SequenceBaseSig Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A Solidity implementation for handling signatures in the Sequence protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":\"SequenceBaseSig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A Solidity implementation for handling signatures in the Sequence protocol.",
						"version": 1
					}
				}
			},
			"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol": {
				"SequenceChainedSig": {
					"abi": [
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"details": "The delegations can be chained together, the first signature is the one that is used to validate      the message, the last signature must match the current on-chain configuration of the wallet.",
						"kind": "dev",
						"methods": {
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"title": "Sequence chained auth recovery submodule",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"details\":\"The delegations can be chained together, the first signature is the one that is used to validate      the message, the last signature must match the current on-chain configuration of the wallet.\",\"kind\":\"dev\",\"methods\":{\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"title\":\"Sequence chained auth recovery submodule\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"notice\":\"Defines Sequence signatures that work by delegating control to new configurations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":\"SequenceChainedSig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"notice": "Defines Sequence signatures that work by delegating control to new configurations.",
						"version": 1
					}
				}
			},
			"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol": {
				"SequenceDynamicSig": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209121e54161aa9502d59f3aa7ebd924de709bd7c9c3ccf52f54af93435adfe1f264736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0x21 0xE5 COINBASE PUSH2 0xAA95 MUL 0xD5 SWAP16 GASPRICE 0xA7 0xEB 0xD9 0x24 0xDE PUSH17 0x9BD7C9C3CCF52F54AF93435ADFE1F26473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "98:814:28:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;98:814:28;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209121e54161aa9502d59f3aa7ebd924de709bd7c9c3ccf52f54af93435adfe1f264736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP2 0x21 0xE5 COINBASE PUSH2 0xAA95 MUL 0xD5 SWAP16 GASPRICE 0xA7 0xEB 0xD9 0x24 0xDE PUSH17 0x9BD7C9C3CCF52F54AF93435ADFE1F26473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "98:814:28:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":\"SequenceDynamicSig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0xe0565e24e94204d4b254ace42d124d3279256090921a4818cbbf9747cbb14e04\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4293a4762b0816738511f697efd04a0e881d4c409bd15ac1c4e7261fe5e482a2\",\"dweb:/ipfs/QmcHbEBne4fvpcD7RTJHCL6q9czoLa7KHneaCeYfXuWiGu\"]},\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol": {
				"SequenceNoChainIdSig": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dcb6ad84adca1faf6759f58ec948b1faad096f2b6d8f3ba540ffd3996b9344c064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xB6 0xAD DUP5 0xAD 0xCA 0x1F 0xAF PUSH8 0x59F58EC948B1FAAD MULMOD PUSH16 0x2B6D8F3BA540FFD3996B9344C064736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "65:554:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;65:554:29;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dcb6ad84adca1faf6759f58ec948b1faad096f2b6d8f3ba540ffd3996b9344c064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xB6 0xAD DUP5 0xAD 0xCA 0x1F 0xAF PUSH8 0x59F58EC948B1FAAD MULMOD PUSH16 0x2B6D8F3BA540FFD3996B9344C064736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "65:554:29:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":\"SequenceNoChainIdSig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol": {
				"SubModuleNonce": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e631adfe43742d6e5857bfae44f6da7f61ae58f22bbf524bd6e831a1c960de1b64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 BALANCE 0xAD INVALID NUMBER PUSH21 0x2D6E5857BFAE44F6DA7F61AE58F22BBF524BD6E831 LOG1 0xC9 PUSH1 0xDE SHL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:686:30:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;65:686:30;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e631adfe43742d6e5857bfae44f6da7f61ae58f22bbf524bd6e831a1c960de1b64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 BALANCE 0xAD INVALID NUMBER PUSH21 0x2D6E5857BFAE44F6DA7F61AE58F22BBF524BD6E831 LOG1 0xC9 PUSH1 0xDE SHL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:686:30:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":\"SubModuleNonce\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":{\"keccak256\":\"0x98520e740b0822ec053d21f376b8be8a58e93228f3758f9228a7d00e1f60950f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://31226706c004f1a4315d6b8d37621b46f4d5807c16e1ce72675c1431ed9006a2\",\"dweb:/ipfs/QmdSSyCuPex2E2VTd6UMYy9WAq9eJNZ6vHSUomntNknzXE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/LibAddress.sol": {
				"LibAddress": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098bd9e2ee7c83a96d44eaaab9e475ab57bc2edd54b5997adf8f8975261f9f4ee64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xBD SWAP15 0x2E 0xE7 0xC8 GASPRICE SWAP7 0xD4 0x4E 0xAA 0xAB SWAP15 SELFBALANCE GAS 0xB5 PUSH28 0xC2EDD54B5997ADF8F8975261F9F4EE64736F6C634300081200330000 ",
							"sourceMap": "65:523:31:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;65:523:31;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098bd9e2ee7c83a96d44eaaab9e475ab57bc2edd54b5997adf8f8975261f9f4ee64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xBD SWAP15 0x2E 0xE7 0xC8 GASPRICE SWAP7 0xD4 0x4E 0xAA 0xAB SWAP15 SELFBALANCE GAS 0xB5 PUSH28 0xC2EDD54B5997ADF8F8975261F9F4EE64736F6C634300081200330000 ",
							"sourceMap": "65:523:31:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/LibAddress.sol\":\"LibAddress\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/utils/LibAddress.sol\":{\"keccak256\":\"0x24b886c1b175b785bf06476bf1900c9b335fa4b40841f4b948e31abb0a402dc8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6d9dbe6caa08fb93d758dd71f6afbee35b7eb655a368a60449a2a91ee231593\",\"dweb:/ipfs/QmXzyqBMojdg4C1QvoaLxf4QDeBfkvTkUPmdk1xKUt3tqi\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/LibBytes.sol": {
				"LibBytes": {
					"abi": [],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"details": "These functions do not check if the input index is within the bounds of the data array.         Reading out of bounds may return dirty values.",
						"kind": "dev",
						"methods": {},
						"title": "Library for reading data from bytes arrays",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d66340f8534de5aeb4eb756f1ec6be295d9a723ac17083ae0789724b3893860e64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH4 0x40F8534D 0xE5 0xAE 0xB4 0xEB PUSH22 0x6F1EC6BE295D9A723AC17083AE0789724B3893860E64 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "405:1691:32:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;405:1691:32;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d66340f8534de5aeb4eb756f1ec6be295d9a723ac17083ae0789724b3893860e64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 PUSH4 0x40F8534D 0xE5 0xAE 0xB4 0xEB PUSH22 0x6F1EC6BE295D9A723AC17083AE0789724B3893860E64 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "405:1691:32:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"details\":\"These functions do not check if the input index is within the bounds of the data array.         Reading out of bounds may return dirty values.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for reading data from bytes arrays\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library contains functions for reading data from bytes arrays.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/LibBytes.sol\":\"LibBytes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library contains functions for reading data from bytes arrays.",
						"version": 1
					}
				}
			},
			"contracts/utils/LibBytesPointer.sol": {
				"LibBytesPointer": {
					"abi": [],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"details": "These functions do not check if the input index is within the bounds of the data array.         Reading out of bounds may return dirty values.",
						"kind": "dev",
						"methods": {},
						"title": "Library for reading data from bytes arrays with a pointer",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207655e7e5b89018e1c3d02bc296dc70602f25136e6daddc3f1d8e9cf465d61ac664736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x55E7E5B89018E1C3D02BC296DC70602F25136E6DADDC3F SAR DUP15 SWAP13 DELEGATECALL PUSH6 0xD61AC664736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "435:4130:33:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;435:4130:33;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207655e7e5b89018e1c3d02bc296dc70602f25136e6daddc3f1d8e9cf465d61ac664736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x55E7E5B89018E1C3D02BC296DC70602F25136E6DADDC3F SAR DUP15 SWAP13 DELEGATECALL PUSH6 0xD61AC664736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "435:4130:33:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"details\":\"These functions do not check if the input index is within the bounds of the data array.         Reading out of bounds may return dirty values.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for reading data from bytes arrays with a pointer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library contains functions for reading data from bytes arrays with a pointer.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/LibBytesPointer.sol\":\"LibBytesPointer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0xbda56396592db18a248d4062cd36abd586a11d92a2d25483d8c597f890859b15\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6ee93bcb7ccd1d1b8979c9530b1ca452d0757794995b62793b6e197670b9f25\",\"dweb:/ipfs/QmbNkhTPzF1YgU4Qgu4SRFXZ8AwFjyG18EzuMZ32anrQ4Y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library contains functions for reading data from bytes arrays with a pointer.",
						"version": 1
					}
				}
			},
			"contracts/utils/LibOptim.sol": {
				"LibOptim": {
					"abi": [],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"kind": "dev",
						"methods": {},
						"title": "Library for optimized EVM operations",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f3b52a0cb2eb660b4e44b6cceeeac3523ec653c2cc825d4e6c36962e51d2f81d64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB5 0x2A 0xC 0xB2 0xEB PUSH7 0xB4E44B6CCEEEA 0xC3 MSTORE RETURNDATACOPY 0xC6 MSTORE8 0xC2 0xCC DUP3 0x5D 0x4E PUSH13 0x36962E51D2F81D64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "244:2343:34:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;244:2343:34;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f3b52a0cb2eb660b4e44b6cceeeac3523ec653c2cc825d4e6c36962e51d2f81d64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB5 0x2A 0xC 0xB2 0xEB PUSH7 0xB4E44B6CCEEEA 0xC3 MSTORE RETURNDATACOPY 0xC6 MSTORE8 0xC2 0xCC DUP3 0x5D 0x4E PUSH13 0x36962E51D2F81D64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "244:2343:34:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for optimized EVM operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library contains functions for optimizing certain EVM operations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/LibOptim.sol\":\"LibOptim\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library contains functions for optimizing certain EVM operations.",
						"version": 1
					}
				}
			},
			"contracts/utils/LibString.sol": {
				"LibString": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Library for string manipulation operations",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209a3f2ae38a7b8d3d5f9889e283b454eb49aa128e329c19c4cce3ff8a80211acb64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 EXTCODEHASH 0x2A 0xE3 DUP11 PUSH28 0x8D3D5F9889E283B454EB49AA128E329C19C4CCE3FF8A80211ACB6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "206:2398:35:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;206:2398:35;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209a3f2ae38a7b8d3d5f9889e283b454eb49aa128e329c19c4cce3ff8a80211acb64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 EXTCODEHASH 0x2A 0xE3 DUP11 PUSH28 0x8D3D5F9889E283B454EB49AA128E329C19C4CCE3FF8A80211ACB6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "206:2398:35:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for string manipulation operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library contains functions for manipulating strings in Solidity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/LibString.sol\":\"LibString\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/utils/LibString.sol\":{\"keccak256\":\"0x18662322f6ce8c4aea601ec11fc7631c843f9bf59dd2526d27db0fef3b2d81b1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://77cc33818f1bbda0d42588d0dd4959a2db288cb1a934d7e710a2923da55cf21e\",\"dweb:/ipfs/QmNR1U27FdvRQGZvrx3hMJqCUsF6NYqziemsVvZEjk767t\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library contains functions for manipulating strings in Solidity.",
						"version": 1
					}
				}
			},
			"contracts/utils/SignatureValidator.sol": {
				"SignatureValidator": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contains logic for signature validation. Signatures from wallet contracts assume ERC-1271 support (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1271.md) Notes: Methods are strongly inspired by contracts in https://github.com/0xProject/0x-monorepo/blob/development/",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f107e932ba7bf1aaf33dfac83df6cd83089ca20bb3709794136e6428c3e4ea0164736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL SMOD 0xE9 ORIGIN 0xBA PUSH28 0xF1AAF33DFAC83DF6CD83089CA20BB3709794136E6428C3E4EA016473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "430:4934:36:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;430:4934:36;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f107e932ba7bf1aaf33dfac83df6cd83089ca20bb3709794136e6428c3e4ea0164736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL SMOD 0xE9 ORIGIN 0xBA PUSH28 0xF1AAF33DFAC83DF6CD83089CA20BB3709794136E6428C3E4EA016473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "430:4934:36:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contains logic for signature validation. Signatures from wallet contracts assume ERC-1271 support (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1271.md) Notes: Methods are strongly inspired by contracts in https://github.com/0xProject/0x-monorepo/blob/development/\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/SignatureValidator.sol\":\"SignatureValidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0xd780faf34527a323c96577c57370d175a2b6149db7ebea0937592eb389e52805\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7a41a47e72f5761d912367c041ddab41620175d63059ad71ff681a87d8cf0e98\",\"dweb:/ipfs/QmfEFuLaVyx9vQc83dS48wTcLtbBiWTNMdHSi5hAWA379i\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Wallet.sol": {
				"id": 0
			},
			"contracts/interfaces/IERC1271Wallet.sol": {
				"id": 1
			},
			"contracts/interfaces/receivers/IERC1155Receiver.sol": {
				"id": 2
			},
			"contracts/interfaces/receivers/IERC223Receiver.sol": {
				"id": 3
			},
			"contracts/interfaces/receivers/IERC721Receiver.sol": {
				"id": 4
			},
			"contracts/modules/MainModule.sol": {
				"id": 5
			},
			"contracts/modules/commons/Implementation.sol": {
				"id": 6
			},
			"contracts/modules/commons/ModuleAuth.sol": {
				"id": 7
			},
			"contracts/modules/commons/ModuleAuthConvenience.sol": {
				"id": 8
			},
			"contracts/modules/commons/ModuleAuthFixed.sol": {
				"id": 9
			},
			"contracts/modules/commons/ModuleCalls.sol": {
				"id": 10
			},
			"contracts/modules/commons/ModuleCreator.sol": {
				"id": 11
			},
			"contracts/modules/commons/ModuleERC165.sol": {
				"id": 12
			},
			"contracts/modules/commons/ModuleExtraAuth.sol": {
				"id": 13
			},
			"contracts/modules/commons/ModuleHooks.sol": {
				"id": 14
			},
			"contracts/modules/commons/ModuleIPFS.sol": {
				"id": 15
			},
			"contracts/modules/commons/ModuleNonce.sol": {
				"id": 16
			},
			"contracts/modules/commons/ModuleOnlyDelegatecall.sol": {
				"id": 17
			},
			"contracts/modules/commons/ModuleSelfAuth.sol": {
				"id": 18
			},
			"contracts/modules/commons/ModuleStorage.sol": {
				"id": 19
			},
			"contracts/modules/commons/ModuleUpdate.sol": {
				"id": 20
			},
			"contracts/modules/commons/interfaces/IModuleAuth.sol": {
				"id": 21
			},
			"contracts/modules/commons/interfaces/IModuleCalls.sol": {
				"id": 22
			},
			"contracts/modules/commons/interfaces/IModuleCreator.sol": {
				"id": 23
			},
			"contracts/modules/commons/interfaces/IModuleHooks.sol": {
				"id": 24
			},
			"contracts/modules/commons/interfaces/IModuleUpdate.sol": {
				"id": 25
			},
			"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol": {
				"id": 26
			},
			"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol": {
				"id": 27
			},
			"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol": {
				"id": 28
			},
			"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol": {
				"id": 29
			},
			"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol": {
				"id": 30
			},
			"contracts/utils/LibAddress.sol": {
				"id": 31
			},
			"contracts/utils/LibBytes.sol": {
				"id": 32
			},
			"contracts/utils/LibBytesPointer.sol": {
				"id": 33
			},
			"contracts/utils/LibOptim.sol": {
				"id": 34
			},
			"contracts/utils/LibString.sol": {
				"id": 35
			},
			"contracts/utils/SignatureValidator.sol": {
				"id": 36
			}
		}
	}
}