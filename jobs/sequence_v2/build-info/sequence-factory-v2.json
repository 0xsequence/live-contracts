{
	"id": "075d0d983b4d3d8159b6f20abd45dcdc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 500000
			},
			"outputSelection": {
				"*": {
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"devdoc",
						"userdoc",
						"metadata",
						"abi"
					]
				}
			},
			"libraries": {},
			"remappings": []
		},
		"sources": {
			"contracts/Factory.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./Wallet.sol\";\n\n\ncontract Factory {\n  error DeployFailed(address _mainModule, bytes32 _salt);\n\n  /**\n   * @notice Will deploy a new wallet instance\n   * @param _mainModule Address of the main module to be used by the wallet\n   * @param _salt Salt used to generate the wallet, which is the imageHash\n   *       of the wallet's configuration.\n   * @dev It is recommended to not have more than 200 signers as opcode repricing\n   *      could make transactions impossible to execute as all the signers must be\n   *      passed for each transaction.\n   */\n  function deploy(address _mainModule, bytes32 _salt) public payable returns (address _contract) {\n    bytes memory code = abi.encodePacked(Wallet.creationCode, uint256(uint160(_mainModule)));\n    assembly { _contract := create2(callvalue(), add(code, 32), mload(code), _salt) }\n    if (_contract == address(0)) revert DeployFailed(_mainModule, _salt);\n  }\n}\n"
			},
			"contracts/Wallet.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n/**\n    Minimal upgradeable proxy implementation, delegates all calls to the address\n    defined by the storage slot matching the wallet address.\n\n    Inspired by EIP-1167 Implementation (https://eips.ethereum.org/EIPS/eip-1167)\n\n    deployed code:\n\n        0x00    0x36         0x36      CALLDATASIZE      cds\n        0x01    0x3d         0x3d      RETURNDATASIZE    0 cds\n        0x02    0x3d         0x3d      RETURNDATASIZE    0 0 cds\n        0x03    0x37         0x37      CALLDATACOPY\n        0x04    0x3d         0x3d      RETURNDATASIZE    0\n        0x05    0x3d         0x3d      RETURNDATASIZE    0 0\n        0x06    0x3d         0x3d      RETURNDATASIZE    0 0 0\n        0x07    0x36         0x36      CALLDATASIZE      cds 0 0 0\n        0x08    0x3d         0x3d      RETURNDATASIZE    0 cds 0 0 0\n        0x09    0x30         0x30      ADDRESS           addr 0 cds 0 0 0\n        0x0A    0x54         0x54      SLOAD             imp 0 cds 0 0 0\n        0x0B    0x5a         0x5a      GAS               gas imp 0 cds 0 0 0\n        0x0C    0xf4         0xf4      DELEGATECALL      suc 0\n        0x0D    0x3d         0x3d      RETURNDATASIZE    rds suc 0\n        0x0E    0x82         0x82      DUP3              0 rds suc 0\n        0x0F    0x80         0x80      DUP1              0 0 rds suc 0\n        0x10    0x3e         0x3e      RETURNDATACOPY    suc 0\n        0x11    0x90         0x90      SWAP1             0 suc\n        0x12    0x3d         0x3d      RETURNDATASIZE    rds 0 suc\n        0x13    0x91         0x91      SWAP2             suc 0 rds\n        0x14    0x60 0x18    0x6018    PUSH1             0x18 suc 0 rds\n    /-- 0x16    0x57         0x57      JUMPI             0 rds\n    |   0x17    0xfd         0xfd      REVERT\n    \\-> 0x18    0x5b         0x5b      JUMPDEST          0 rds\n        0x19    0xf3         0xf3      RETURN\n\n    flat deployed code: 0x363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3\n\n    deploy function:\n\n        0x00    0x60 0x3a    0x603a    PUSH1             0x3a\n        0x02    0x60 0x0e    0x600e    PUSH1             0x0e 0x3a\n        0x04    0x3d         0x3d      RETURNDATASIZE    0 0x0e 0x3a\n        0x05    0x39         0x39      CODECOPY\n        0x06    0x60 0x1a    0x601a    PUSH1             0x1a\n        0x08    0x80         0x80      DUP1              0x1a 0x1a\n        0x09    0x51         0x51      MLOAD             imp 0x1a\n        0x0A    0x30         0x30      ADDRESS           addr imp 0x1a\n        0x0B    0x55         0x55      SSTORE            0x1a\n        0x0C    0x3d         0x3d      RETURNDATASIZE    0 0x1a\n        0x0D    0xf3         0xf3      RETURN\n        [...deployed code]\n\n    flat deploy function: 0x603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3\n*/\nlibrary Wallet {\n  bytes internal constant creationCode = hex\"603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3\";\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Factory.sol": {
				"Factory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_mainModule",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_salt",
									"type": "bytes32"
								}
							],
							"name": "DeployFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_mainModule",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "_salt",
									"type": "bytes32"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "_contract",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"deploy(address,bytes32)": {
								"details": "It is recommended to not have more than 200 signers as opcode repricing      could make transactions impossible to execute as all the signers must be      passed for each transaction.",
								"params": {
									"_mainModule": "Address of the main module to be used by the wallet",
									"_salt": "Salt used to generate the wallet, which is the imageHash       of the wallet's configuration."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061020b806100206000396000f3fe60806040526004361061001e5760003560e01c806332c02a1414610023575b600080fd5b610036610031366004610136565b61005f565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000806040518060600160405280602881526020016101ae602891398473ffffffffffffffffffffffffffffffffffffffff166040516020016100a392919061017b565b60405160208183030381529060405290508281516020830134f5915073ffffffffffffffffffffffffffffffffffffffff821661012f576040517f8caac80500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024810184905260440160405180910390fd5b5092915050565b6000806040838503121561014957600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461016d57600080fd5b946020939093013593505050565b6000835160005b8181101561019c5760208187018101518583015201610182565b50919091019182525060200191905056fe603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3a26469706673582212203e46c5b0f3a6bebab844eb5e4594ebb07eac1ae451f779e533ead5e744b1a2a664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x20B DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x32C02A14 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x31 CALLDATASIZE PUSH1 0x4 PUSH2 0x136 JUMP JUMPDEST PUSH2 0x5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AE PUSH1 0x28 SWAP2 CODECOPY DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA3 SWAP3 SWAP2 SWAP1 PUSH2 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP3 DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE2 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x12F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8CAAC80500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19C JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x182 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x3A PUSH1 0xE RETURNDATASIZE CODECOPY PUSH1 0x1A DUP1 MLOAD ADDRESS SSTORE RETURNDATASIZE RETURN CALLDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATACOPY RETURNDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATASIZE RETURNDATASIZE ADDRESS SLOAD GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY SWAP1 RETURNDATASIZE SWAP2 PUSH1 0x18 JUMPI REVERT JUMPDEST RETURN LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CHAINID 0xC5 0xB0 RETURN 0xA6 0xBE 0xBA 0xB8 PREVRANDAO 0xEB 0x5E GASLIMIT SWAP5 0xEB 0xB0 PUSH31 0xAC1AE451F779E533EAD5E744B1A2A664736F6C634300081200330000000000 ",
							"sourceMap": "89:892:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@deploy_47": {
									"entryPoint": 95,
									"id": 47,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes32": {
									"entryPoint": 310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 379,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1387:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "101:290:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "147:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "156:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "159:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "149:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "149:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "149:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "122:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "131:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "118:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "118:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "143:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "114:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:32:2"
															},
															"nodeType": "YulIf",
															"src": "111:52:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "172:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "198:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "185:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "185:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "176:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "294:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "303:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "306:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "296:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "296:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "296:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "230:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "241:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "248:42:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "237:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "237:54:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "227:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "227:65:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "220:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "220:73:2"
															},
															"nodeType": "YulIf",
															"src": "217:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "319:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "329:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "319:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "343:42:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "370:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "381:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "366:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "366:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "353:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "353:32:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "343:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "59:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "70:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "82:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "90:6:2",
														"type": ""
													}
												],
												"src": "14:377:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "497:125:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "507:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "519:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "530:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "515:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "515:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "507:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "549:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "564:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "572:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "560:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "560:55:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "542:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "542:74:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "542:74:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "466:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "477:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "488:4:2",
														"type": ""
													}
												],
												"src": "396:226:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "792:291:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "802:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "822:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "816:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "806:6:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "838:10:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "847:1:2",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "842:1:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "909:77:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "934:3:2"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "939:1:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "930:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "930:11:2"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "957:6:2"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "965:1:2"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "953:3:2"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "953:14:2"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "969:4:2",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "949:3:2"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "949:25:2"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "943:5:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "943:32:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "923:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "923:53:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "923:53:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "868:1:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "871:6:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "865:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "865:13:2"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "879:21:2",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "881:17:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "890:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:4:2",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "886:3:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:2"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "881:1:2"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "861:3:2",
																"statements": []
															},
															"src": "857:129:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "995:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1009:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1014:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1005:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1005:16:2"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "999:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1037:2:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1041:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1030:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1030:18:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1030:18:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1057:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1068:2:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1072:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1064:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:13:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1057:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "760:3:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "765:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "773:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "784:3:2",
														"type": ""
													}
												],
												"src": "627:456:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1217:168:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1227:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1239:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1250:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1235:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1235:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1227:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1269:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1284:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1292:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1280:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1280:55:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1262:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1262:74:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1262:74:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1356:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1367:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1352:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1352:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1372:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1345:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1345:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1178:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1189:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1197:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1208:4:2",
														"type": ""
													}
												],
												"src": "1088:297:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, value1)\n        end := add(_1, 0x20)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061001e5760003560e01c806332c02a1414610023575b600080fd5b610036610031366004610136565b61005f565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6000806040518060600160405280602881526020016101ae602891398473ffffffffffffffffffffffffffffffffffffffff166040516020016100a392919061017b565b60405160208183030381529060405290508281516020830134f5915073ffffffffffffffffffffffffffffffffffffffff821661012f576040517f8caac80500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff851660048201526024810184905260440160405180910390fd5b5092915050565b6000806040838503121561014957600080fd5b823573ffffffffffffffffffffffffffffffffffffffff8116811461016d57600080fd5b946020939093013593505050565b6000835160005b8181101561019c5760208187018101518583015201610182565b50919091019182525060200191905056fe603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3a26469706673582212203e46c5b0f3a6bebab844eb5e4594ebb07eac1ae451f779e533ead5e744b1a2a664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x32C02A14 EQ PUSH2 0x23 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x36 PUSH2 0x31 CALLDATASIZE PUSH1 0x4 PUSH2 0x136 JUMP JUMPDEST PUSH2 0x5F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1AE PUSH1 0x28 SWAP2 CODECOPY DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA3 SWAP3 SWAP2 SWAP1 PUSH2 0x17B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP DUP3 DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE2 SWAP2 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x12F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8CAAC80500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x16D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19C JUMPI PUSH1 0x20 DUP2 DUP8 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x182 JUMP JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP INVALID PUSH1 0x3A PUSH1 0xE RETURNDATASIZE CODECOPY PUSH1 0x1A DUP1 MLOAD ADDRESS SSTORE RETURNDATASIZE RETURN CALLDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATACOPY RETURNDATASIZE RETURNDATASIZE RETURNDATASIZE CALLDATASIZE RETURNDATASIZE ADDRESS SLOAD GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY SWAP1 RETURNDATASIZE SWAP2 PUSH1 0x18 JUMPI REVERT JUMPDEST RETURN LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY CHAINID 0xC5 0xB0 RETURN 0xA6 0xBE 0xBA 0xB8 PREVRANDAO 0xEB 0x5E GASLIMIT SWAP5 0xEB 0xB0 PUSH31 0xAC1AE451F779E533EAD5E744B1A2A664736F6C634300081200330000000000 ",
							"sourceMap": "89:892:0:-:0;;;;;;;;;;;;;;;;;;;;;625:354;;;;;;:::i;:::-;;:::i;:::-;;;572:42:2;560:55;;;542:74;;530:2;515:18;625:354:0;;;;;;;;701:17;726;763:19;;;;;;;;;;;;;;;;;800:11;784:29;;746:68;;;;;;;;;:::i;:::-;;;;;;;;;;;;;726:88;;893:5;886:4;880:11;875:2;869:4;865:13;852:11;844:55;831:68;-1:-1:-1;910:23:0;;;906:68;;942:32;;;;;1292:42:2;1280:55;;942:32:0;;;1262:74:2;1352:18;;;1345:34;;;1235:18;;942:32:0;;;;;;;906:68;720:259;625:354;;;;:::o;14:377:2:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;198:9;185:23;248:42;241:5;237:54;230:5;227:65;217:93;;306:1;303;296:12;217:93;329:5;381:2;366:18;;;;353:32;;-1:-1:-1;;;14:377:2:o;627:456::-;784:3;822:6;816:13;847:1;857:129;871:6;868:1;865:13;857:129;;;969:4;953:14;;;949:25;;943:32;930:11;;;923:53;886:12;857:129;;;-1:-1:-1;1005:16:2;;;;1030:18;;;-1:-1:-1;1072:4:2;1064:13;;627:456;-1:-1:-1;627:456:2:o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mainModule\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"DeployFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mainModule\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_salt\",\"type\":\"bytes32\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deploy(address,bytes32)\":{\"details\":\"It is recommended to not have more than 200 signers as opcode repricing      could make transactions impossible to execute as all the signers must be      passed for each transaction.\",\"params\":{\"_mainModule\":\"Address of the main module to be used by the wallet\",\"_salt\":\"Salt used to generate the wallet, which is the imageHash       of the wallet's configuration.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy(address,bytes32)\":{\"notice\":\"Will deploy a new wallet instance\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Factory.sol\":\"Factory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/Factory.sol\":{\"keccak256\":\"0x0e452a773c933056388f559d7bde6a51e0306d28e5495e8ead0acb3d1839d81b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://38cc293bdfdbf498b5ce5c92730c8c9b404f5b8aa065d9d288f2b05e5b0dda08\",\"dweb:/ipfs/QmW4cS4SkhPspRW3fG2nYZe7cKtz27XkA27GiJjs1QQfDf\"]},\"contracts/Wallet.sol\":{\"keccak256\":\"0xb7bfad3219a2517d12ef08c0f992cca708fa765f1e2115e05617ca89f170ea92\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a566c143b3230da770140a82d44ae50cfb21fd64ead9a6f19193bbbed3698fd4\",\"dweb:/ipfs/QmSsyNk5WLBFTfoebQWhLLzzjzEcbfcWRJAsJznEnemP5B\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"deploy(address,bytes32)": {
								"notice": "Will deploy a new wallet instance"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/Wallet.sol": {
				"Wallet": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052bfa58d46a4be200bab062b01124719353438ddddea437973ed824200e2df4664736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xBF 0xA5 DUP14 CHAINID LOG4 0xBE KECCAK256 SIGNEXTEND 0xAB MOD 0x2B ADD SLT SELFBALANCE NOT CALLDATALOAD CALLVALUE CODESIZE 0xDD 0xDD 0xEA NUMBER PUSH26 0x73ED824200E2DF4664736F6C6343000812003300000000000000 ",
							"sourceMap": "2845:146:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;2845:146:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122052bfa58d46a4be200bab062b01124719353438ddddea437973ed824200e2df4664736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE 0xBF 0xA5 DUP14 CHAINID LOG4 0xBE KECCAK256 SIGNEXTEND 0xAB MOD 0x2B ADD SLT SELFBALANCE NOT CALLDATALOAD CALLVALUE CODESIZE 0xDD 0xDD 0xEA NUMBER PUSH26 0x73ED824200E2DF4664736F6C6343000812003300000000000000 ",
							"sourceMap": "2845:146:1:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Minimal upgradeable proxy implementation, delegates all calls to the address defined by the storage slot matching the wallet address. Inspired by EIP-1167 Implementation (https://eips.ethereum.org/EIPS/eip-1167) deployed code: 0x00    0x36         0x36      CALLDATASIZE      cds 0x01    0x3d         0x3d      RETURNDATASIZE    0 cds 0x02    0x3d         0x3d      RETURNDATASIZE    0 0 cds 0x03    0x37         0x37      CALLDATACOPY 0x04    0x3d         0x3d      RETURNDATASIZE    0 0x05    0x3d         0x3d      RETURNDATASIZE    0 0 0x06    0x3d         0x3d      RETURNDATASIZE    0 0 0 0x07    0x36         0x36      CALLDATASIZE      cds 0 0 0 0x08    0x3d         0x3d      RETURNDATASIZE    0 cds 0 0 0 0x09    0x30         0x30      ADDRESS           addr 0 cds 0 0 0 0x0A    0x54         0x54      SLOAD             imp 0 cds 0 0 0 0x0B    0x5a         0x5a      GAS               gas imp 0 cds 0 0 0 0x0C    0xf4         0xf4      DELEGATECALL      suc 0 0x0D    0x3d         0x3d      RETURNDATASIZE    rds suc 0 0x0E    0x82         0x82      DUP3              0 rds suc 0 0x0F    0x80         0x80      DUP1              0 0 rds suc 0 0x10    0x3e         0x3e      RETURNDATACOPY    suc 0 0x11    0x90         0x90      SWAP1             0 suc 0x12    0x3d         0x3d      RETURNDATASIZE    rds 0 suc 0x13    0x91         0x91      SWAP2             suc 0 rds 0x14    0x60 0x18    0x6018    PUSH1             0x18 suc 0 rds /-- 0x16    0x57         0x57      JUMPI             0 rds |   0x17    0xfd         0xfd      REVERT \\\\-> 0x18    0x5b         0x5b      JUMPDEST          0 rds 0x19    0xf3         0xf3      RETURN flat deployed code: 0x363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3 deploy function: 0x00    0x60 0x3a    0x603a    PUSH1             0x3a 0x02    0x60 0x0e    0x600e    PUSH1             0x0e 0x3a 0x04    0x3d         0x3d      RETURNDATASIZE    0 0x0e 0x3a 0x05    0x39         0x39      CODECOPY 0x06    0x60 0x1a    0x601a    PUSH1             0x1a 0x08    0x80         0x80      DUP1              0x1a 0x1a 0x09    0x51         0x51      MLOAD             imp 0x1a 0x0A    0x30         0x30      ADDRESS           addr imp 0x1a 0x0B    0x55         0x55      SSTORE            0x1a 0x0C    0x3d         0x3d      RETURNDATASIZE    0 0x1a 0x0D    0xf3         0xf3      RETURN [...deployed code] flat deploy function: 0x603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Wallet.sol\":\"Wallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/Wallet.sol\":{\"keccak256\":\"0xb7bfad3219a2517d12ef08c0f992cca708fa765f1e2115e05617ca89f170ea92\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a566c143b3230da770140a82d44ae50cfb21fd64ead9a6f19193bbbed3698fd4\",\"dweb:/ipfs/QmSsyNk5WLBFTfoebQWhLLzzjzEcbfcWRJAsJznEnemP5B\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Minimal upgradeable proxy implementation, delegates all calls to the address defined by the storage slot matching the wallet address. Inspired by EIP-1167 Implementation (https://eips.ethereum.org/EIPS/eip-1167) deployed code: 0x00    0x36         0x36      CALLDATASIZE      cds 0x01    0x3d         0x3d      RETURNDATASIZE    0 cds 0x02    0x3d         0x3d      RETURNDATASIZE    0 0 cds 0x03    0x37         0x37      CALLDATACOPY 0x04    0x3d         0x3d      RETURNDATASIZE    0 0x05    0x3d         0x3d      RETURNDATASIZE    0 0 0x06    0x3d         0x3d      RETURNDATASIZE    0 0 0 0x07    0x36         0x36      CALLDATASIZE      cds 0 0 0 0x08    0x3d         0x3d      RETURNDATASIZE    0 cds 0 0 0 0x09    0x30         0x30      ADDRESS           addr 0 cds 0 0 0 0x0A    0x54         0x54      SLOAD             imp 0 cds 0 0 0 0x0B    0x5a         0x5a      GAS               gas imp 0 cds 0 0 0 0x0C    0xf4         0xf4      DELEGATECALL      suc 0 0x0D    0x3d         0x3d      RETURNDATASIZE    rds suc 0 0x0E    0x82         0x82      DUP3              0 rds suc 0 0x0F    0x80         0x80      DUP1              0 0 rds suc 0 0x10    0x3e         0x3e      RETURNDATACOPY    suc 0 0x11    0x90         0x90      SWAP1             0 suc 0x12    0x3d         0x3d      RETURNDATASIZE    rds 0 suc 0x13    0x91         0x91      SWAP2             suc 0 rds 0x14    0x60 0x18    0x6018    PUSH1             0x18 suc 0 rds /-- 0x16    0x57         0x57      JUMPI             0 rds |   0x17    0xfd         0xfd      REVERT \\-> 0x18    0x5b         0x5b      JUMPDEST          0 rds 0x19    0xf3         0xf3      RETURN flat deployed code: 0x363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3 deploy function: 0x00    0x60 0x3a    0x603a    PUSH1             0x3a 0x02    0x60 0x0e    0x600e    PUSH1             0x0e 0x3a 0x04    0x3d         0x3d      RETURNDATASIZE    0 0x0e 0x3a 0x05    0x39         0x39      CODECOPY 0x06    0x60 0x1a    0x601a    PUSH1             0x1a 0x08    0x80         0x80      DUP1              0x1a 0x1a 0x09    0x51         0x51      MLOAD             imp 0x1a 0x0A    0x30         0x30      ADDRESS           addr imp 0x1a 0x0B    0x55         0x55      SSTORE            0x1a 0x0C    0x3d         0x3d      RETURNDATASIZE    0 0x1a 0x0D    0xf3         0xf3      RETURN [...deployed code] flat deploy function: 0x603a600e3d39601a805130553df3363d3d373d3d3d363d30545af43d82803e903d91601857fd5bf3",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Factory.sol": {
				"id": 0
			},
			"contracts/Wallet.sol": {
				"id": 1
			}
		}
	}
}