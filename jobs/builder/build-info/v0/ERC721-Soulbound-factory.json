{
	"id": "45f81a56249f0160f04201115a64c47c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"settings": {
			"evmVersion": "paris",
			"libraries": {},
			"metadata": {
				"useLiteralContent": false,
				"bytecodeHash": "ipfs",
				"appendCBOR": true
			},
			"optimizer": {
				"enabled": true,
				"runs": 20000
			},
			"remappings": [
				"@0xsequence/contracts-library/=src/",
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"forge-std/=lib/forge-std/src/",
				"murky/=lib/murky/src/",
				"@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/",
				"@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/",
				"erc721a/=lib/chiru-labs/erc721a/",
				"erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/",
				"@openzeppelin/=lib/openzeppelin/",
				"@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
				"solady/=lib/solady/src/",
				"0xsequence/=lib/0xsequence/",
				"chiru-labs/=lib/chiru-labs/",
				"openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
				"openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
				"openzeppelin/=lib/openzeppelin/"
			],
			"viaIR": true,
			"outputSelection": {
				"*": {
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"devdoc",
						"userdoc",
						"metadata",
						"abi"
					]
				}
			}
		},
		"sources": {
			"src/tokens/ERC721/presets/soulbound/ERC721SoulboundFactory.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {IERC721SoulboundFactory, IERC721SoulboundFactoryFunctions} from\n    \"@0xsequence/contracts-library/tokens/ERC721/presets/soulbound/IERC721SoulboundFactory.sol\";\nimport {ERC721Soulbound} from \"@0xsequence/contracts-library/tokens/ERC721/presets/soulbound/ERC721Soulbound.sol\";\nimport {SequenceProxyFactory} from \"@0xsequence/contracts-library/proxies/SequenceProxyFactory.sol\";\n\n/**\n * Deployer of ERC-721 Soulbound proxies.\n */\ncontract ERC721SoulboundFactory is IERC721SoulboundFactory, SequenceProxyFactory {\n    /**\n     * Creates an ERC-721 Soulbound Factory.\n     * @param factoryOwner The owner of the ERC-721 Soulbound Factory\n     */\n    constructor(address factoryOwner) {\n        ERC721Soulbound impl = new ERC721Soulbound();\n        SequenceProxyFactory._initialize(address(impl), factoryOwner);\n    }\n\n    /// @inheritdoc IERC721SoulboundFactoryFunctions\n    function deploy(\n        address proxyOwner,\n        address tokenOwner,\n        string memory name,\n        string memory symbol,\n        string memory baseURI,\n        string memory contractURI,\n        address royaltyReceiver,\n        uint96 royaltyFeeNumerator\n    )\n        external\n        returns (address proxyAddr)\n    {\n        bytes32 salt =\n            keccak256(abi.encode(tokenOwner, name, symbol, baseURI, contractURI, royaltyReceiver, royaltyFeeNumerator));\n        proxyAddr = _createProxy(salt, proxyOwner, \"\");\n        ERC721Soulbound(proxyAddr).initialize(tokenOwner, name, symbol, baseURI, contractURI, royaltyReceiver, royaltyFeeNumerator);\n        emit ERC721SoulboundDeployed(proxyAddr);\n        return proxyAddr;\n    }\n\n    /// @inheritdoc IERC721SoulboundFactoryFunctions\n    function determineAddress(\n        address proxyOwner,\n        address tokenOwner,\n        string memory name,\n        string memory symbol,\n        string memory baseURI,\n        string memory contractURI,\n        address royaltyReceiver,\n        uint96 royaltyFeeNumerator\n    ) external view returns (address proxyAddr)\n    {\n        bytes32 salt =\n            keccak256(abi.encode(tokenOwner, name, symbol, baseURI, contractURI, royaltyReceiver, royaltyFeeNumerator));\n        return _computeProxyAddress(salt, proxyOwner, \"\");\n    }\n}\n"
			},
			"src/proxies/SequenceProxyFactory.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {\n    TransparentUpgradeableBeaconProxy,\n    ITransparentUpgradeableBeaconProxy\n} from \"./TransparentUpgradeableBeaconProxy.sol\";\n\nimport {Create2} from \"@openzeppelin/contracts/utils/Create2.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {UpgradeableBeacon} from \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\n\n/**\n * An proxy factory that deploys upgradeable beacon proxies.\n * @dev The factory owner is able to upgrade the beacon implementation.\n * @dev Proxy deployers are able to override the beacon reference with their own.\n */\nabstract contract SequenceProxyFactory is Ownable {\n    UpgradeableBeacon public beacon;\n\n    /**\n     * Initialize a Sequence Proxy Factory.\n     * @param implementation The initial beacon implementation.\n     * @param factoryOwner The owner of the factory.\n     */\n    function _initialize(address implementation, address factoryOwner) internal {\n        beacon = new UpgradeableBeacon(implementation);\n        Ownable._transferOwnership(factoryOwner);\n    }\n\n    /**\n     * Deploys and initializes a new proxy instance.\n     * @param _salt The deployment salt.\n     * @param _proxyOwner The owner of the proxy.\n     * @param _data The initialization data.\n     * @return proxyAddress The address of the deployed proxy.\n     */\n    function _createProxy(bytes32 _salt, address _proxyOwner, bytes memory _data)\n        internal\n        returns (address proxyAddress)\n    {\n        bytes32 saltedHash = keccak256(abi.encodePacked(_salt, _proxyOwner, address(beacon), _data));\n        bytes memory bytecode = type(TransparentUpgradeableBeaconProxy).creationCode;\n\n        proxyAddress = Create2.deploy(0, saltedHash, bytecode);\n        ITransparentUpgradeableBeaconProxy(payable(proxyAddress)).initialize(_proxyOwner, address(beacon), _data);\n    }\n\n    /**\n     * Computes the address of a proxy instance.\n     * @param _salt The deployment salt.\n     * @param _proxyOwner The owner of the proxy.\n     * @return proxy The expected address of the deployed proxy.\n     */\n    function _computeProxyAddress(bytes32 _salt, address _proxyOwner, bytes memory _data)\n        internal\n        view\n        returns (address)\n    {\n        bytes32 saltedHash = keccak256(abi.encodePacked(_salt, _proxyOwner, address(beacon), _data));\n        bytes32 bytecodeHash = keccak256(type(TransparentUpgradeableBeaconProxy).creationCode);\n\n        return Create2.computeAddress(saltedHash, bytecodeHash);\n    }\n\n    /**\n     * Upgrades the beacon implementation.\n     * @param implementation The new beacon implementation.\n     */\n    function upgradeBeacon(address implementation) public onlyOwner {\n        beacon.upgradeTo(implementation);\n    }\n}\n"
			},
			"src/tokens/ERC721/presets/soulbound/ERC721Soulbound.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {ERC721Items} from \"@0xsequence/contracts-library/tokens/ERC721/presets/items/ERC721Items.sol\";\nimport {\n    IERC721Soulbound,\n    IERC721SoulboundFunctions\n} from \"@0xsequence/contracts-library/tokens/ERC721/presets/soulbound/IERC721Soulbound.sol\";\n\n/**\n * An implementation of ERC-721 that prevents transfers.\n */\ncontract ERC721Soulbound is ERC721Items, IERC721Soulbound {\n    bytes32 public constant TRANSFER_ADMIN_ROLE = keccak256(\"TRANSFER_ADMIN_ROLE\");\n\n    bool internal _transferLocked;\n\n    constructor() ERC721Items() {}\n\n    /// @inheritdoc ERC721Items\n    function initialize(\n        address owner,\n        string memory tokenName,\n        string memory tokenSymbol,\n        string memory tokenBaseURI,\n        string memory tokenContractURI,\n        address royaltyReceiver,\n        uint96 royaltyFeeNumerator\n    ) public virtual override {\n        _transferLocked = true;\n        _grantRole(TRANSFER_ADMIN_ROLE, owner);\n        super.initialize(\n            owner, tokenName, tokenSymbol, tokenBaseURI, tokenContractURI, royaltyReceiver, royaltyFeeNumerator\n        );\n    }\n\n    /// @inheritdoc IERC721SoulboundFunctions\n    function setTransferLocked(bool locked) external override onlyRole(TRANSFER_ADMIN_ROLE) {\n        _transferLocked = locked;\n    }\n\n    /// @inheritdoc IERC721SoulboundFunctions\n    function getTransferLocked() external view override returns (bool) {\n        return _transferLocked;\n    }\n\n    function _beforeTokenTransfers(address from, address to, uint256 startTokenId, uint256 quantity)\n        internal\n        virtual\n        override\n    {\n        // Mint transactions allowed\n        if (_transferLocked && from != address(0)) {\n            revert TransfersLocked();\n        }\n        super._beforeTokenTransfers(from, to, startTokenId, quantity);\n    }\n\n    function supportsInterface(bytes4 interfaceId) public view override returns (bool) {\n        return type(IERC721SoulboundFunctions).interfaceId == interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"src/tokens/ERC721/presets/soulbound/IERC721SoulboundFactory.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\ninterface IERC721SoulboundFactoryFunctions {\n    /**\n     * Creates an ERC-721 Soulbound proxy.\n     * @param proxyOwner The owner of the ERC-721 Soulbound proxy\n     * @param tokenOwner The owner of the ERC-721 Soulbound implementation\n     * @param name The name of the ERC-721 Soulbound proxy\n     * @param symbol The symbol of the ERC-721 Soulbound proxy\n     * @param baseURI The base URI of the ERC-721 Soulbound proxy\n     * @param contractURI The contract URI of the ERC-721 Soulbound proxy\n     * @param royaltyReceiver Address of who should be sent the royalty payment\n     * @param royaltyFeeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\n     * @return proxyAddr The address of the ERC-721 Soulbound Proxy\n     */\n    function deploy(\n        address proxyOwner,\n        address tokenOwner,\n        string memory name,\n        string memory symbol,\n        string memory baseURI,\n        string memory contractURI,\n        address royaltyReceiver,\n        uint96 royaltyFeeNumerator\n    )\n        external\n        returns (address proxyAddr);\n\n    /**\n     * Computes the address of a proxy instance.\n     * @param proxyOwner The owner of the ERC-721 Soulbound proxy\n     * @param tokenOwner The owner of the ERC-721 Soulbound implementation\n     * @param name The name of the ERC-721 Soulbound proxy\n     * @param symbol The symbol of the ERC-721 Soulbound proxy\n     * @param baseURI The base URI of the ERC-721 Soulbound proxy\n     * @param contractURI The contract URI of the ERC-721 Soulbound proxy\n     * @param royaltyReceiver Address of who should be sent the royalty payment\n     * @param royaltyFeeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\n     * @return proxyAddr The address of the ERC-721 Soulbound Proxy\n     */\n    function determineAddress(\n        address proxyOwner,\n        address tokenOwner,\n        string memory name,\n        string memory symbol,\n        string memory baseURI,\n        string memory contractURI,\n        address royaltyReceiver,\n        uint96 royaltyFeeNumerator\n    )\n        external\n        returns (address proxyAddr);\n}\n\ninterface IERC721SoulboundFactorySignals {\n    /**\n     * Event emitted when a new ERC-721 Soulbound proxy contract is deployed.\n     * @param proxyAddr The address of the deployed proxy.\n     */\n    event ERC721SoulboundDeployed(address proxyAddr);\n}\n\ninterface IERC721SoulboundFactory is IERC721SoulboundFactoryFunctions, IERC721SoulboundFactorySignals {}\n"
			},
			"src/tokens/ERC721/presets/soulbound/IERC721Soulbound.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\ninterface IERC721SoulboundFunctions {\n    /**\n     * Sets the transfer lock.\n     * @param locked Whether or not transfers are locked.\n     */\n    function setTransferLocked(bool locked) external;\n\n    /**\n     * Gets the transfer lock.\n     * @return Whether or not transfers are locked.\n     */\n    function getTransferLocked() external view returns (bool);\n}\n\ninterface IERC721SoulboundSignals {\n    /**\n     * Transfers locked.\n     */\n    error TransfersLocked();\n}\n\ninterface IERC721Soulbound is IERC721SoulboundFunctions, IERC721SoulboundSignals {}\n"
			},
			"src/tokens/ERC721/presets/items/ERC721Items.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {ERC721BaseToken} from \"@0xsequence/contracts-library/tokens/ERC721/ERC721BaseToken.sol\";\nimport {\n    IERC721Items,\n    IERC721ItemsFunctions\n} from \"@0xsequence/contracts-library/tokens/ERC721/presets/items/IERC721Items.sol\";\n\n/**\n * An implementation of ERC-721 capable of minting when role provided.\n */\ncontract ERC721Items is ERC721BaseToken, IERC721Items {\n    bytes32 internal constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    address private immutable _initializer;\n    bool private _initialized;\n\n    /**\n     * Deploy contract.\n     */\n    constructor() ERC721BaseToken() {\n        _initializer = msg.sender;\n    }\n\n    /**\n     * Initialize contract.\n     * @param owner The owner of the contract\n     * @param tokenName Name of the token\n     * @param tokenSymbol Symbol of the token\n     * @param tokenBaseURI Base URI of the token\n     * @param tokenContractURI Contract URI of the token\n     * @param royaltyReceiver Address of who should be sent the royalty payment\n     * @param royaltyFeeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\n     * @dev This should be called immediately after deployment.\n     */\n    function initialize(\n        address owner,\n        string memory tokenName,\n        string memory tokenSymbol,\n        string memory tokenBaseURI,\n        string memory tokenContractURI,\n        address royaltyReceiver,\n        uint96 royaltyFeeNumerator\n    )\n        public\n        virtual\n    {\n        if (msg.sender != _initializer || _initialized) {\n            revert InvalidInitialization();\n        }\n\n        ERC721BaseToken._initialize(owner, tokenName, tokenSymbol, tokenBaseURI, tokenContractURI);\n        _setDefaultRoyalty(royaltyReceiver, royaltyFeeNumerator);\n\n        _grantRole(MINTER_ROLE, owner);\n\n        _initialized = true;\n    }\n\n    //\n    // Minting\n    //\n\n    /**\n     * Mint tokens.\n     * @param to Address to mint tokens to.\n     * @param amount Amount of tokens to mint.\n     */\n    function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    //\n    // Views\n    //\n\n    /**\n     * Check interface support.\n     * @param interfaceId Interface id\n     * @return True if supported\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return type(IERC721ItemsFunctions).interfaceId == interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/UpgradeableBeacon.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../../access/Ownable.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n * implementation contract, which is where they will delegate all function calls.\n *\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\n */\ncontract UpgradeableBeacon is IBeacon, Ownable {\n    address private _implementation;\n\n    /**\n     * @dev Emitted when the implementation returned by the beacon is changed.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n     * beacon.\n     */\n    constructor(address implementation_) {\n        _setImplementation(implementation_);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function implementation() public view virtual override returns (address) {\n        return _implementation;\n    }\n\n    /**\n     * @dev Upgrades the beacon to a new implementation.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * Requirements:\n     *\n     * - msg.sender must be the owner of the contract.\n     * - `newImplementation` must be a contract.\n     */\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Sets the implementation contract address for this beacon\n     *\n     * Requirements:\n     *\n     * - `newImplementation` must be a contract.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"UpgradeableBeacon: implementation is not a contract\");\n        _implementation = newImplementation;\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/utils/Create2.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        require(address(this).balance >= amount, \"Create2: insufficient balance\");\n        require(bytecode.length != 0, \"Create2: bytecode length is zero\");\n        /// @solidity memory-safe-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        require(addr != address(0), \"Create2: Failed on deploy\");\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := keccak256(start, 85)\n        }\n    }\n}\n"
			},
			"src/proxies/TransparentUpgradeableBeaconProxy.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {BeaconProxy, Proxy} from \"./openzeppelin/BeaconProxy.sol\";\nimport {TransparentUpgradeableProxy, ERC1967Proxy} from \"./openzeppelin/TransparentUpgradeableProxy.sol\";\n\ninterface ITransparentUpgradeableBeaconProxy {\n    function initialize(address admin, address beacon, bytes memory data) external;\n}\n\nerror InvalidInitialization();\n\n/**\n * @dev As the underlying proxy implementation (TransparentUpgradeableProxy) allows the admin to call the implementation,\n * care must be taken to avoid proxy selector collisions. Implementation selectors must not conflict with the proxy selectors.\n * See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing].\n * The proxy selectors are:\n * - 0xcf7a1d77: initialize\n * - 0x3659cfe6: upgradeTo (from TransparentUpgradeableProxy)\n * - 0x4f1ef286: upgradeToAndCall (from TransparentUpgradeableProxy)\n * - 0x8f283970: changeAdmin (from TransparentUpgradeableProxy)\n * - 0xf851a440: admin (from TransparentUpgradeableProxy)\n * - 0x5c60da1b: implementation (from TransparentUpgradeableProxy)\n */\ncontract TransparentUpgradeableBeaconProxy is TransparentUpgradeableProxy, BeaconProxy {\n    /**\n     * Decode the initialization data from the msg.data and call the initialize function.\n     */\n    function _dispatchInitialize() private returns (bytes memory) {\n        _requireZeroValue();\n\n        (address admin, address beacon, bytes memory data) = abi.decode(msg.data[4:], (address, address, bytes));\n        initialize(admin, beacon, data);\n\n        return \"\";\n    }\n\n    function initialize(address admin, address beacon, bytes memory data) internal {\n        if (_admin() != address(0)) {\n            // Redundant call. This function can only be called when the admin is not set.\n            revert InvalidInitialization();\n        }\n        _changeAdmin(admin);\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n\n    /**\n     * @dev If the admin is not set, the fallback function is used to initialize the proxy.\n     * @dev If the admin is set, the fallback function is used to delegatecall the implementation.\n     */\n    function _fallback() internal override (TransparentUpgradeableProxy, Proxy) {\n        if (_getAdmin() == address(0)) {\n            bytes memory ret;\n            bytes4 selector = msg.sig;\n            if (selector == ITransparentUpgradeableBeaconProxy.initialize.selector) {\n                ret = _dispatchInitialize();\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    return(add(ret, 0x20), mload(ret))\n                }\n            }\n            // When the admin is not set, the fallback function is used to initialize the proxy.\n            revert InvalidInitialization();\n        }\n        TransparentUpgradeableProxy._fallback();\n    }\n\n    /**\n     * Returns the current implementation address.\n     * @dev This is the implementation address set by the admin, or the beacon implementation.\n     */\n    function _implementation() internal view override (ERC1967Proxy, BeaconProxy) returns (address) {\n        address implementation = ERC1967Proxy._implementation();\n        if (implementation != address(0)) {\n            return implementation;\n        }\n        return BeaconProxy._implementation();\n    }\n}\n"
			},
			"src/tokens/ERC721/presets/items/IERC721Items.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\ninterface IERC721ItemsFunctions {\n    /**\n     * Mint tokens.\n     * @param to Address to mint tokens to.\n     * @param amount Amount of tokens to mint.\n     */\n    function mint(address to, uint256 amount) external;\n}\n\ninterface IERC721ItemsSignals {\n    /**\n     * Invalid initialization error.\n     */\n    error InvalidInitialization();\n}\n\ninterface IERC721Items is IERC721ItemsFunctions, IERC721ItemsSignals {}\n"
			},
			"src/tokens/ERC721/ERC721BaseToken.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {\n    ERC721AQueryable, IERC721AQueryable, ERC721A, IERC721A\n} from \"erc721a/contracts/extensions/ERC721AQueryable.sol\";\nimport {ERC2981Controlled} from \"@0xsequence/contracts-library/tokens/common/ERC2981Controlled.sol\";\n\nerror InvalidInitialization();\n\n/**\n * A standard base implementation of ERC-721 for use in Sequence library contracts.\n */\nabstract contract ERC721BaseToken is ERC721AQueryable, ERC2981Controlled {\n    bytes32 internal constant METADATA_ADMIN_ROLE = keccak256(\"METADATA_ADMIN_ROLE\");\n\n    string private _tokenBaseURI;\n    string private _tokenName;\n    string private _tokenSymbol;\n    string private _contractURI;\n\n    /**\n     * Deploy contract.\n     */\n    constructor() ERC721A(\"\", \"\") {}\n\n    /**\n     * Initialize contract.\n     * @param owner The owner of the contract\n     * @param tokenName Name of the token\n     * @param tokenSymbol Symbol of the token\n     * @param tokenBaseURI Base URI of the token\n     * @param tokenContractURI Contract URI of the token\n     * @dev This should be called immediately after deployment.\n     */\n    function _initialize(\n        address owner,\n        string memory tokenName,\n        string memory tokenSymbol,\n        string memory tokenBaseURI,\n        string memory tokenContractURI\n    )\n        internal\n    {\n        _tokenName = tokenName;\n        _tokenSymbol = tokenSymbol;\n        _tokenBaseURI = tokenBaseURI;\n        _contractURI = tokenContractURI;\n\n        _grantRole(DEFAULT_ADMIN_ROLE, owner);\n        _grantRole(METADATA_ADMIN_ROLE, owner);\n        _grantRole(ROYALTY_ADMIN_ROLE, owner);\n    }\n\n    //\n    // Metadata\n    //\n\n    /**\n     * Set name and symbol of token.\n     * @param tokenName Name of token.\n     * @param tokenSymbol Symbol of token.\n     */\n    function setNameAndSymbol(string memory tokenName, string memory tokenSymbol)\n        external\n        onlyRole(METADATA_ADMIN_ROLE)\n    {\n        _tokenName = tokenName;\n        _tokenSymbol = tokenSymbol;\n    }\n\n    /**\n     * Update the base URI of token's URI.\n     * @param tokenBaseURI New base URI of token's URI\n     */\n    function setBaseMetadataURI(string memory tokenBaseURI) external onlyRole(METADATA_ADMIN_ROLE) {\n        _tokenBaseURI = tokenBaseURI;\n    }\n\n    /**\n     * Update the contract URI of token's URI.\n     * @param tokenContractURI New contract URI of token's URI\n     * @notice Refer to https://docs.opensea.io/docs/contract-level-metadata\n     */\n    function setContractURI(string memory tokenContractURI) external onlyRole(METADATA_ADMIN_ROLE) {\n        _contractURI = tokenContractURI;\n    }\n\n    //\n    // Burn\n    //\n\n    /**\n     * Allows the owner of the token to burn their token.\n     * @param tokenId Id of token to burn\n     */\n    function burn(uint256 tokenId) public virtual {\n        _burn(tokenId, true);\n    }\n\n    /**\n     * Allows the owner of the tokens to burn their tokens.\n     * @param tokenIds Array of token ids to burn\n     */\n    function batchBurn(uint256[] memory tokenIds) public virtual {\n        uint256 nBurn = tokenIds.length;\n        for (uint256 i = 0; i < nBurn; i++) {\n            _burn(tokenIds[i], true);\n        }\n    }\n\n    //\n    // Views\n    //\n\n    /**\n     * Get the contract URI of token's URI.\n     * @return Contract URI of token's URI\n     * @notice Refer to https://docs.opensea.io/docs/contract-level-metadata\n     */\n    function contractURI() public view returns (string memory) {\n        return _contractURI;\n    }\n\n    /**\n     * Check interface support.\n     * @param interfaceId Interface id\n     * @return True if supported\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override (ERC721A, IERC721A, ERC2981Controlled)\n        returns (bool)\n    {\n        return interfaceId == type(IERC721A).interfaceId || interfaceId == type(IERC721AQueryable).interfaceId\n            || ERC721A.supportsInterface(interfaceId) || ERC2981Controlled.supportsInterface(interfaceId)\n            || super.supportsInterface(interfaceId);\n    }\n\n    //\n    // ERC721A Overrides\n    //\n\n    /**\n     * Override the ERC721A baseURI function.\n     */\n    function _baseURI() internal view override returns (string memory) {\n        return _tokenBaseURI;\n    }\n\n    /**\n     * Override the ERC721A name function.\n     */\n    function name() public view override (ERC721A, IERC721A) returns (string memory) {\n        return _tokenName;\n    }\n\n    /**\n     * Override the ERC721A symbol function.\n     */\n    function symbol() public view override (ERC721A, IERC721A) returns (string memory) {\n        return _tokenSymbol;\n    }\n}\n"
			},
			"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\n\n/// @notice This implementation is a copy of OpenZeppelin's with the following changes:\n/// - Pragma updated\n/// - Imports updated\n/// - Constructor removed\n/// - Allows admin to call implementation\n\npragma solidity ^0.8.19;\n\nimport \"./ERC1967Proxy.sol\";\n\n/**\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n * include them in the ABI so this interface must be used to interact with it.\n */\ninterface ITransparentUpgradeableProxy is IERC1967 {\n    function admin() external view returns (address);\n\n    function implementation() external view returns (address);\n\n    function changeAdmin(address) external;\n\n    function upgradeTo(address) external;\n\n    function upgradeToAndCall(address, bytes memory) external payable;\n}\n\n/**\n * @dev This contract implements a proxy that is upgradeable by an admin.\n *\n * Unlike the original OpenZeppelin implementation, this contract does not prevent the admin from calling the implementation.\n * This potentially exposes the admin to a proxy selector attack. See\n * https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing].\n * When using this contract, you must ensure that the implementation function selectors do not clash with the proxy selectors.\n * The proxy selectors are:\n * - 0x3659cfe6: upgradeTo\n * - 0x4f1ef286: upgradeToAndCall\n * - 0x8f283970: changeAdmin\n * - 0xf851a440: admin\n * - 0x5c60da1b: implementation\n *\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n * implementation.\n *\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    /**\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n     *\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\n     * implementation provides a function with the same selector.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _getAdmin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\n     */\n    function _fallback() internal virtual override {\n        if (msg.sender == _getAdmin()) {\n            bytes memory ret;\n            bytes4 selector = msg.sig;\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\n                ret = _dispatchUpgradeTo();\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\n                ret = _dispatchUpgradeToAndCall();\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\n                ret = _dispatchChangeAdmin();\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\n                ret = _dispatchAdmin();\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\n                ret = _dispatchImplementation();\n            } else {\n                // Call implementation\n                return super._fallback();\n            }\n            assembly {\n                return(add(ret, 0x20), mload(ret))\n            }\n        } else {\n            super._fallback();\n        }\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function _dispatchAdmin() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address admin = _getAdmin();\n        return abi.encode(admin);\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _dispatchImplementation() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address implementation = _implementation();\n        return abi.encode(implementation);\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _dispatchChangeAdmin() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address newAdmin = abi.decode(msg.data[4:], (address));\n        _changeAdmin(newAdmin);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy.\n     */\n    function _dispatchUpgradeTo() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address newImplementation = abi.decode(msg.data[4:], (address));\n        _upgradeToAndCall(newImplementation, bytes(\"\"), false);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n     * proxied contract.\n     */\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\n        _upgradeToAndCall(newImplementation, data, true);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\n     */\n    function _admin() internal view virtual returns (address) {\n        return _getAdmin();\n    }\n\n    /**\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\n     */\n    function _requireZeroValue() internal {\n        require(msg.value == 0);\n    }\n}\n"
			},
			"src/proxies/openzeppelin/BeaconProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/beacon/BeaconProxy.sol)\n\n// Note: This implementation is an exact copy with the constructor removed, and pragma and imports updated.\n\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\";\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n *\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n * conflict with the storage layout of the implementation behind the proxy.\n *\n * _Available since v3.4._\n */\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Returns the current beacon address.\n     */\n    function _beacon() internal view virtual returns (address) {\n        return _getBeacon();\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract.\n     * - The implementation returned by `beacon` must be a contract.\n     */\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"lib/openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"src/tokens/common/ERC2981Controlled.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {IERC2981Controlled} from \"@0xsequence/contracts-library/tokens/common/IERC2981Controlled.sol\";\nimport {ERC2981} from \"@openzeppelin/contracts/token/common/ERC2981.sol\";\nimport {AccessControlEnumerable} from \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\n\n/**\n * An implementation of ERC-2981 that allows updates by roles.\n */\nabstract contract ERC2981Controlled is ERC2981, AccessControlEnumerable, IERC2981Controlled {\n    bytes32 internal constant ROYALTY_ADMIN_ROLE = keccak256(\"ROYALTY_ADMIN_ROLE\");\n\n    //\n    // Royalty\n    //\n\n    /**\n     * Sets the royalty information that all ids in this contract will default to.\n     * @param receiver Address of who should be sent the royalty payment\n     * @param feeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\n     */\n    function setDefaultRoyalty(address receiver, uint96 feeNumerator) external onlyRole(ROYALTY_ADMIN_ROLE) {\n        _setDefaultRoyalty(receiver, feeNumerator);\n    }\n\n    /**\n     * Sets the royalty information that a given token id in this contract will use.\n     * @param tokenId The token id to set the royalty information for\n     * @param receiver Address of who should be sent the royalty payment\n     * @param feeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\n     * @notice This overrides the default royalty information for this token id\n     */\n    function setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator)\n        external\n        onlyRole(ROYALTY_ADMIN_ROLE)\n    {\n        _setTokenRoyalty(tokenId, receiver, feeNumerator);\n    }\n\n    //\n    // Views\n    //\n\n    /**\n     * Check interface support.\n     * @param interfaceId Interface id\n     * @return True if supported\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override (ERC2981, AccessControlEnumerable)\n        returns (bool)\n    {\n        return ERC2981.supportsInterface(interfaceId) || AccessControlEnumerable.supportsInterface(interfaceId)\n            || type(IERC2981Controlled).interfaceId == interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"lib/chiru-labs/erc721a/contracts/extensions/ERC721AQueryable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721AQueryable.sol';\nimport '../ERC721A.sol';\n\n/**\n * @title ERC721AQueryable.\n *\n * @dev ERC721A subclass with convenience query functions.\n */\nabstract contract ERC721AQueryable is ERC721A, IERC721AQueryable {\n    /**\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n     *\n     * If the `tokenId` is out of bounds:\n     *\n     * - `addr = address(0)`\n     * - `startTimestamp = 0`\n     * - `burned = false`\n     * - `extraData = 0`\n     *\n     * If the `tokenId` is burned:\n     *\n     * - `addr = <Address of owner before token was burned>`\n     * - `startTimestamp = <Timestamp when token was burned>`\n     * - `burned = true`\n     * - `extraData = <Extra data when token was burned>`\n     *\n     * Otherwise:\n     *\n     * - `addr = <Address of owner>`\n     * - `startTimestamp = <Timestamp of start of ownership>`\n     * - `burned = false`\n     * - `extraData = <Extra data at start of ownership>`\n     */\n    function explicitOwnershipOf(uint256 tokenId)\n        public\n        view\n        virtual\n        override\n        returns (TokenOwnership memory ownership)\n    {\n        unchecked {\n            if (tokenId >= _startTokenId()) {\n                if (tokenId > _sequentialUpTo()) return _ownershipAt(tokenId);\n\n                if (tokenId < _nextTokenId()) {\n                    // If the `tokenId` is within bounds,\n                    // scan backwards for the initialized ownership slot.\n                    while (!_ownershipIsInitialized(tokenId)) --tokenId;\n                    return _ownershipAt(tokenId);\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n     * See {ERC721AQueryable-explicitOwnershipOf}\n     */\n    function explicitOwnershipsOf(uint256[] calldata tokenIds)\n        external\n        view\n        virtual\n        override\n        returns (TokenOwnership[] memory)\n    {\n        TokenOwnership[] memory ownerships;\n        uint256 i = tokenIds.length;\n        assembly {\n            // Grab the free memory pointer.\n            ownerships := mload(0x40)\n            // Store the length.\n            mstore(ownerships, i)\n            // Allocate one word for the length,\n            // `tokenIds.length` words for the pointers.\n            i := shl(5, i) // Multiply `i` by 32.\n            mstore(0x40, add(add(ownerships, 0x20), i))\n        }\n        while (i != 0) {\n            uint256 tokenId;\n            assembly {\n                i := sub(i, 0x20)\n                tokenId := calldataload(add(tokenIds.offset, i))\n            }\n            TokenOwnership memory ownership = explicitOwnershipOf(tokenId);\n            assembly {\n                // Store the pointer of `ownership` in the `ownerships` array.\n                mstore(add(add(ownerships, 0x20), i), ownership)\n            }\n        }\n        return ownerships;\n    }\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`,\n     * in the range [`start`, `stop`)\n     * (i.e. `start <= tokenId < stop`).\n     *\n     * This function allows for tokens to be queried if the collection\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n     *\n     * Requirements:\n     *\n     * - `start < stop`\n     */\n    function tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) external view virtual override returns (uint256[] memory) {\n        return _tokensOfOwnerIn(owner, start, stop);\n    }\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`.\n     *\n     * This function scans the ownership mapping and is O(`totalSupply`) in complexity.\n     * It is meant to be called off-chain.\n     *\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n     * multiple smaller scans if the collection is large enough to cause\n     * an out-of-gas error (10K collections should be fine).\n     */\n    function tokensOfOwner(address owner) external view virtual override returns (uint256[] memory) {\n        // If spot mints are enabled, full-range scan is disabled.\n        if (_sequentialUpTo() != type(uint256).max) _revert(NotCompatibleWithSpotMints.selector);\n        uint256 start = _startTokenId();\n        uint256 stop = _nextTokenId();\n        uint256[] memory tokenIds;\n        if (start != stop) tokenIds = _tokensOfOwnerIn(owner, start, stop);\n        return tokenIds;\n    }\n\n    /**\n     * @dev Helper function for returning an array of token IDs owned by `owner`.\n     *\n     * Note that this function is optimized for smaller bytecode size over runtime gas,\n     * since it is meant to be called off-chain.\n     */\n    function _tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) private view returns (uint256[] memory tokenIds) {\n        unchecked {\n            if (start >= stop) _revert(InvalidQueryRange.selector);\n            // Set `start = max(start, _startTokenId())`.\n            if (start < _startTokenId()) start = _startTokenId();\n            uint256 nextTokenId = _nextTokenId();\n            // If spot mints are enabled, scan all the way until the specified `stop`.\n            uint256 stopLimit = _sequentialUpTo() != type(uint256).max ? stop : nextTokenId;\n            // Set `stop = min(stop, stopLimit)`.\n            if (stop >= stopLimit) stop = stopLimit;\n            // Number of tokens to scan.\n            uint256 tokenIdsMaxLength = balanceOf(owner);\n            // Set `tokenIdsMaxLength` to zero if the range contains no tokens.\n            if (start >= stop) tokenIdsMaxLength = 0;\n            // If there are one or more tokens to scan.\n            if (tokenIdsMaxLength != 0) {\n                // Set `tokenIdsMaxLength = min(balanceOf(owner), tokenIdsMaxLength)`.\n                if (stop - start <= tokenIdsMaxLength) tokenIdsMaxLength = stop - start;\n                uint256 m; // Start of available memory.\n                assembly {\n                    // Grab the free memory pointer.\n                    tokenIds := mload(0x40)\n                    // Allocate one word for the length, and `tokenIdsMaxLength` words\n                    // for the data. `shl(5, x)` is equivalent to `mul(32, x)`.\n                    m := add(tokenIds, shl(5, add(tokenIdsMaxLength, 1)))\n                    mstore(0x40, m)\n                }\n                // We need to call `explicitOwnershipOf(start)`,\n                // because the slot at `start` may not be initialized.\n                TokenOwnership memory ownership = explicitOwnershipOf(start);\n                address currOwnershipAddr;\n                // If the starting slot exists (i.e. not burned),\n                // initialize `currOwnershipAddr`.\n                // `ownership.address` will not be zero,\n                // as `start` is clamped to the valid token ID range.\n                if (!ownership.burned) currOwnershipAddr = ownership.addr;\n                uint256 tokenIdsIdx;\n                // Use a do-while, which is slightly more efficient for this case,\n                // as the array will at least contain one element.\n                do {\n                    if (_sequentialUpTo() != type(uint256).max) {\n                        // Skip the remaining unused sequential slots.\n                        if (start == nextTokenId) start = _sequentialUpTo() + 1;\n                        // Reset `currOwnershipAddr`, as each spot-minted token is a batch of one.\n                        if (start > _sequentialUpTo()) currOwnershipAddr = address(0);\n                    }\n                    ownership = _ownershipAt(start); // This implicitly allocates memory.\n                    assembly {\n                        switch mload(add(ownership, 0x40))\n                        // if `ownership.burned == false`.\n                        case 0 {\n                            // if `ownership.addr != address(0)`.\n                            // The `addr` already has it's upper 96 bits clearned,\n                            // since it is written to memory with regular Solidity.\n                            if mload(ownership) {\n                                currOwnershipAddr := mload(ownership)\n                            }\n                            // if `currOwnershipAddr == owner`.\n                            // The `shl(96, x)` is to make the comparison agnostic to any\n                            // dirty upper 96 bits in `owner`.\n                            if iszero(shl(96, xor(currOwnershipAddr, owner))) {\n                                tokenIdsIdx := add(tokenIdsIdx, 1)\n                                mstore(add(tokenIds, shl(5, tokenIdsIdx)), start)\n                            }\n                        }\n                        // Otherwise, reset `currOwnershipAddr`.\n                        // This handles the case of batch burned tokens\n                        // (burned bit of first slot set, remaining slots left uninitialized).\n                        default {\n                            currOwnershipAddr := 0\n                        }\n                        start := add(start, 1)\n                        // Free temporary memory implicitly allocated for ownership\n                        // to avoid quadratic memory expansion costs.\n                        mstore(0x40, m)\n                    }\n                } while (!(start == stop || tokenIdsIdx == tokenIdsMaxLength));\n                // Store the length of the array.\n                assembly {\n                    mstore(tokenIds, tokenIdsIdx)\n                }\n            }\n        }\n    }\n}\n"
			},
			"src/proxies/openzeppelin/ERC1967Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\n// Note: This implementation is an exact copy with the constructor removed, and pragma and imports updated.\n\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"
			},
			"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControl.sol\";\nimport \"../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/token/common/ERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/common/ERC2981.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/IERC2981.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n *\n * _Available since v4.5._\n */\nabstract contract ERC2981 is IERC2981, ERC165 {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    RoyaltyInfo private _defaultRoyaltyInfo;\n    mapping(uint256 => RoyaltyInfo) private _tokenRoyaltyInfo;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @inheritdoc IERC2981\n     */\n    function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual override returns (address, uint256) {\n        RoyaltyInfo memory royalty = _tokenRoyaltyInfo[tokenId];\n\n        if (royalty.receiver == address(0)) {\n            royalty = _defaultRoyaltyInfo;\n        }\n\n        uint256 royaltyAmount = (salePrice * royalty.royaltyFraction) / _feeDenominator();\n\n        return (royalty.receiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 10000;\n    }\n\n    /**\n     * @dev Sets the royalty information that all ids in this contract will default to.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\n        require(feeNumerator <= _feeDenominator(), \"ERC2981: royalty fee will exceed salePrice\");\n        require(receiver != address(0), \"ERC2981: invalid receiver\");\n\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Removes default royalty information.\n     */\n    function _deleteDefaultRoyalty() internal virtual {\n        delete _defaultRoyaltyInfo;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\n        require(feeNumerator <= _feeDenominator(), \"ERC2981: royalty fee will exceed salePrice\");\n        require(receiver != address(0), \"ERC2981: Invalid parameters\");\n\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        delete _tokenRoyaltyInfo[tokenId];\n    }\n}\n"
			},
			"src/tokens/common/IERC2981Controlled.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\ninterface IERC2981ControlledFunctions {\n    /**\n     * Sets the royalty information that all ids in this contract will default to.\n     * @param receiver Address of who should be sent the royalty payment\n     * @param feeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\n     */\n    function setDefaultRoyalty(address receiver, uint96 feeNumerator) external;\n\n    /**\n     * Sets the royalty information that a given token id in this contract will use.\n     * @param tokenId The token id to set the royalty information for\n     * @param receiver Address of who should be sent the royalty payment\n     * @param feeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\n     * @notice This overrides the default royalty information for this token id\n     */\n    function setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) external;\n}\n\ninterface IERC2981Controlled is IERC2981ControlledFunctions {}\n"
			},
			"lib/openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"lib/openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"lib/chiru-labs/erc721a/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * The `_sequentialUpTo()` function can be overriden to enable spot mints\n * (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // The amount of tokens minted above `_sequentialUpTo()`.\n    // We call these spot mints (i.e. non-sequential mints).\n    uint256 private _spotMinted;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n\n        if (_sequentialUpTo() < _startTokenId()) _revert(SequentialUpToTooSmall.selector);\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID for sequential mints.\n     *\n     * Override this function to change the starting token ID for sequential mints.\n     *\n     * Note: The value returned must never change after any tokens have been minted.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the maximum token ID (inclusive) for sequential mints.\n     *\n     * Override this function to return a value less than 2**256 - 1,\n     * but greater than `_startTokenId()`, to enable spot (non-sequential) mints.\n     *\n     * Note: The value returned must never change after any tokens have been minted.\n     */\n    function _sequentialUpTo() internal view virtual returns (uint256) {\n        return type(uint256).max;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256 result) {\n        // Counter underflow is impossible as `_burnCounter` cannot be incremented\n        // more than `_currentIndex + _spotMinted - _startTokenId()` times.\n        unchecked {\n            // With spot minting, the intermediate `result` can be temporarily negative,\n            // and the computation must be unchecked.\n            result = _currentIndex - _burnCounter - _startTokenId();\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256 result) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            result = _currentIndex - _startTokenId();\n            if (_sequentialUpTo() != type(uint256).max) result += _spotMinted;\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    /**\n     * @dev Returns the total number of tokens that are spot-minted.\n     */\n    function _totalSpotMinted() internal view virtual returns (uint256) {\n        return _spotMinted;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Returns whether the ownership slot at `index` is initialized.\n     * An uninitialized slot does not necessarily mean that the slot has no owner.\n     */\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\n        return _packedOwnerships[index] != 0;\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * @dev Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\n        if (_startTokenId() <= tokenId) {\n            packed = _packedOwnerships[tokenId];\n\n            if (tokenId > _sequentialUpTo()) {\n                if (_packedOwnershipExists(packed)) return packed;\n                _revert(OwnerQueryForNonexistentToken.selector);\n            }\n\n            // If the data at the starting slot does not exist, start the scan.\n            if (packed == 0) {\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\n                // Invariant:\n                // There will always be an initialized ownership slot\n                // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                // before an unintialized ownership slot\n                // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                // Hence, `tokenId` will not underflow.\n                //\n                // We can directly compare the packed value.\n                // If the address is zero, packed will be zero.\n                for (;;) {\n                    unchecked {\n                        packed = _packedOwnerships[--tokenId];\n                    }\n                    if (packed == 0) continue;\n                    if (packed & _BITMASK_BURNED == 0) return packed;\n                    // Otherwise, the token is burned, and we must revert.\n                    // This handles the case of batch burned tokens, where only the burned bit\n                    // of the starting slot is set, and remaining slots are left uninitialized.\n                    _revert(OwnerQueryForNonexistentToken.selector);\n                }\n            }\n            // Otherwise, the data exists and we can skip the scan.\n            // This is possible because we have already achieved the target condition.\n            // This saves 2143 gas on transfers of initialized tokens.\n            // If the token is not burned, return `packed`. Otherwise, revert.\n            if (packed & _BITMASK_BURNED == 0) return packed;\n        }\n        _revert(OwnerQueryForNonexistentToken.selector);\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        _approve(to, tokenId, true);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\n        if (_startTokenId() <= tokenId) {\n            if (tokenId > _sequentialUpTo()) return _packedOwnershipExists(_packedOwnerships[tokenId]);\n\n            if (tokenId < _currentIndex) {\n                uint256 packed;\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\n                result = packed & _BITMASK_BURNED == 0;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `packed` represents a token that exists.\n     */\n    function _packedOwnershipExists(uint256 packed) private pure returns (bool result) {\n        assembly {\n            // The following is equivalent to `owner != address(0) && burned == false`.\n            // Symbolically tested.\n            result := gt(and(packed, _BITMASK_ADDRESS), and(packed, _BITMASK_BURNED))\n        }\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\n\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n        assembly {\n            // Emit the `Transfer` event.\n            log4(\n                0, // Start of data (0, since no data).\n                0, // End of data (0, since no data).\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\n                from, // `from`.\n                toMasked, // `to`.\n                tokenId // `tokenId`.\n            )\n        }\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\n\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n            assembly {\n                revert(add(32, reason), mload(reason))\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            uint256 end = startTokenId + quantity;\n            uint256 tokenId = startTokenId;\n\n            if (end - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\n\n            do {\n                assembly {\n                    // Emit the `Transfer` event.\n                    log4(\n                        0, // Start of data (0, since no data).\n                        0, // End of data (0, since no data).\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\n                        0, // `address(0)`.\n                        toMasked, // `to`.\n                        tokenId // `tokenId`.\n                    )\n                }\n                // The `!=` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n            } while (++tokenId != end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            if (startTokenId + quantity - 1 > _sequentialUpTo()) _revert(SequentialMintExceedsLimit.selector);\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\n                    }\n                } while (index < end);\n                // This prevents reentrancy to `_safeMint`.\n                // It does not prevent reentrancy to `_safeMintSpot`.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    /**\n     * @dev Mints a single token at `tokenId`.\n     *\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\n     * - `tokenId` must not exist.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mintSpot(address to, uint256 tokenId) internal virtual {\n        if (tokenId <= _sequentialUpTo()) _revert(SpotMintTokenIdTooSmall.selector);\n        uint256 prevOwnershipPacked = _packedOwnerships[tokenId];\n        if (_packedOwnershipExists(prevOwnershipPacked)) _revert(TokenAlreadyExists.selector);\n\n        _beforeTokenTransfers(address(0), to, tokenId, 1);\n\n        // Overflows are incredibly unrealistic.\n        // The `numberMinted` for `to` is incremented by 1, and has a max limit of 2**64 - 1.\n        // `_spotMinted` is incremented by 1, and has a max limit of 2**256 - 1.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true` (as `quantity == 1`).\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(1) | _nextExtraData(address(0), to, prevOwnershipPacked)\n            );\n\n            // Updates:\n            // - `balance += 1`.\n            // - `numberMinted += 1`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += (1 << _BITPOS_NUMBER_MINTED) | 1;\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            assembly {\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    tokenId // `tokenId`.\n                )\n            }\n\n            ++_spotMinted;\n        }\n\n        _afterTokenTransfers(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Safely mints a single token at `tokenId`.\n     *\n     * Note: A spot-minted `tokenId` that has been burned can be re-minted again.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}.\n     * - `tokenId` must be greater than `_sequentialUpTo()`.\n     * - `tokenId` must not exist.\n     *\n     * See {_mintSpot}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMintSpot(\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) internal virtual {\n        _mintSpot(to, tokenId);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 currentSpotMinted = _spotMinted;\n                if (!_checkContractOnERC721Received(address(0), to, tokenId, _data)) {\n                    _revert(TransferToNonERC721ReceiverImplementer.selector);\n                }\n                // This prevents reentrancy to `_safeMintSpot`.\n                // It does not prevent reentrancy to `_safeMint`.\n                if (_spotMinted != currentSpotMinted) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMintSpot(to, tokenId, '')`.\n     */\n    function _safeMintSpot(address to, uint256 tokenId) internal virtual {\n        _safeMintSpot(to, tokenId, '');\n    }\n\n    // =============================================================\n    //                       APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _approve(to, tokenId, false);\n    }\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        bool approvalCheck\n    ) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        if (approvalCheck && _msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as `_burnCounter` cannot be exceed `_currentIndex + _spotMinted` times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n\n    /**\n     * @dev For more efficient reverts.\n     */\n    function _revert(bytes4 errorSelector) internal pure {\n        assembly {\n            mstore(0x00, errorSelector)\n            revert(0x00, 0x04)\n        }\n    }\n}\n"
			},
			"lib/chiru-labs/erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of ERC721AQueryable.\n */\ninterface IERC721AQueryable is IERC721A {\n    /**\n     * Invalid query range (`start` >= `stop`).\n     */\n    error InvalidQueryRange();\n\n    /**\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n     *\n     * If the `tokenId` is out of bounds:\n     *\n     * - `addr = address(0)`\n     * - `startTimestamp = 0`\n     * - `burned = false`\n     * - `extraData = 0`\n     *\n     * If the `tokenId` is burned:\n     *\n     * - `addr = <Address of owner before token was burned>`\n     * - `startTimestamp = <Timestamp when token was burned>`\n     * - `burned = true`\n     * - `extraData = <Extra data when token was burned>`\n     *\n     * Otherwise:\n     *\n     * - `addr = <Address of owner>`\n     * - `startTimestamp = <Timestamp of start of ownership>`\n     * - `burned = false`\n     * - `extraData = <Extra data at start of ownership>`\n     */\n    function explicitOwnershipOf(uint256 tokenId) external view returns (TokenOwnership memory);\n\n    /**\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n     * See {ERC721AQueryable-explicitOwnershipOf}\n     */\n    function explicitOwnershipsOf(uint256[] memory tokenIds) external view returns (TokenOwnership[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`,\n     * in the range [`start`, `stop`)\n     * (i.e. `start <= tokenId < stop`).\n     *\n     * This function allows for tokens to be queried if the collection\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n     *\n     * Requirements:\n     *\n     * - `start < stop`\n     */\n    function tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`.\n     *\n     * This function scans the ownership mapping and is O(`totalSupply`) in complexity.\n     * It is meant to be called off-chain.\n     *\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n     * multiple smaller scans if the collection is large enough to cause\n     * an out-of-gas error (10K collections should be fine).\n     */\n    function tokensOfOwner(address owner) external view returns (uint256[] memory);\n}\n"
			},
			"lib/openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/interfaces/IERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n *\n * _Available since v4.5._\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"
			},
			"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"
			},
			"lib/chiru-labs/erc721a/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.3.0\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    /**\n     * `_sequentialUpTo()` must be greater than `_startTokenId()`.\n     */\n    error SequentialUpToTooSmall();\n\n    /**\n     * The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\n     */\n    error SequentialMintExceedsLimit();\n\n    /**\n     * Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\n     */\n    error SpotMintTokenIdTooSmall();\n\n    /**\n     * Cannot mint over a token that already exists.\n     */\n    error TokenAlreadyExists();\n\n    /**\n     * The feature is not compatible with spot mints.\n     */\n    error NotCompatibleWithSpotMints();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			},
			"lib/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"lib/openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"lib/openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"lib/chiru-labs/erc721a/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. The `_sequentialUpTo()` function can be overriden to enable spot mints (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"abi_decode_string_fromMemory": {
									"entryPoint": 446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_string_storage_1049": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 710,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"clean_up_bytearray_end_slots_string_storage_1048": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_string_to_string": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 560,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 386,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052346200017d576200154d803803806200001d8162000198565b92833981016040828203126200017d5781516001600160401b03908181116200017d57826200004e918501620001be565b92602092838201518381116200017d576200006a9201620001be565b91835191821162000177576200008d826200008760025462000230565b6200026d565b80601f8311600114620000e657508190620000c694600092620000da575b50508160011b916000199060031b1c1916176002556200031f565b6000805560405161113a9081620004138239f35b015190503880620000ab565b60026000529193601f1985167f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace936000905b8282106200015e575050916001939186620000c697941062000144575b505050811b016002556200031f565b015160001960f88460031b161c1916905538808062000135565b8060018697829497870151815501960194019062000118565b62000182565b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b038111838210176200017757604052565b919080601f840112156200017d5782516001600160401b0381116200017757602090620001f4601f8201601f1916830162000198565b928184528282870101116200017d5760005b8181106200021c57508260009394955001015290565b858101830151848201840152820162000206565b90600182811c9216801562000262575b60208310146200024c57565b634e487b7160e01b600052602260045260246000fd5b91607f169162000240565b601f81116200027a575050565b6000906002825260208220906020601f850160051c83019410620002bb575b601f0160051c01915b828110620002af57505050565b818155600101620002a2565b909250829062000299565b601f8111620002d3575050565b6000906003825260208220906020601f850160051c8301941062000314575b601f0160051c01915b8281106200030857505050565b818155600101620002fb565b9092508290620002f2565b80519091906001600160401b03811162000177576200034b816200034560035462000230565b620002c6565b602080601f83116001146200038a57508192936000926200037e575b50508160011b916000199060031b1c191617600355565b01519050388062000367565b6003600052601f198316949091907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b926000905b878210620003f9575050836001959610620003df575b505050811b01600355565b015160001960f88460031b161c19169055388080620003d4565b80600185968294968601518155019501930190620003be56fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100f757806306fdde03146100f2578063081812fc146100ed578063095ea7b3146100e857806318160ddd146100e357806323b872dd146100de57806342842e0e146100d95780636352211e146100d457806370a08231146100cf57806395d89b41146100ca578063a22cb465146100c5578063b88d4fde146100c0578063c87b56dd146100bb5763e985e9c5146100b657600080fd5b610a37565b6109b6565b610932565b610798565b6106d5565b610654565b610618565b6105f5565b6105e1565b61057c565b610472565b6103b2565b61026f565b61012b565b7fffffffff0000000000000000000000000000000000000000000000000000000081160361012657565b600080fd5b346101265760206003193601126101265760207fffffffff0000000000000000000000000000000000000000000000000000000060043561016b816100fc565b167f01ffc9a70000000000000000000000000000000000000000000000000000000081149081156101d3575b81156101a9575b506040519015158152f35b7f5b5e139f000000000000000000000000000000000000000000000000000000009150143861019e565b7f80ac58cd0000000000000000000000000000000000000000000000000000000081149150610197565b919082519283825260005b8481106102475750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610208565b90602061026c9281815201906101fd565b90565b34610126576000806003193601126103af5760405190806002549060019180831c928082169283156103a5575b602092838610851461037857858852602088019490811561033957506001146102e0575b6102dc876102d0818903826108b7565b6040519182918261025b565b0390f35b600260005294509192917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b83861061032857505050910190506102d0826102dc38806102c0565b80548587015294820194810161030c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685525050505090151560051b0190506102d0826102dc38806102c0565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b93607f169361029c565b80fd5b34610126576020600319360112610126576004356103cf81610be8565b15610402576000526006602052602073ffffffffffffffffffffffffffffffffffffffff60406000205416604051908152f35b7fcf4700e40000000000000000000000000000000000000000000000000000000060005260046000fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361012657565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361012657565b60406003193601126101265761048661042c565b60243573ffffffffffffffffffffffffffffffffffffffff91826104a983610ab3565b16803303610513575b600093838552600660205260408520921691827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b80600052600760205260ff61054c3360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166104b2577fcfb3b9420000000000000000000000000000000000000000000000000000000060005260046000fd5b346101265760006003193601126101265760206000546001549003604051908152f35b60031960609101126101265773ffffffffffffffffffffffffffffffffffffffff90600435828116810361012657916024359081168103610126579060443590565b6105f36105ed3661059f565b91610c93565b005b6105f36106013661059f565b906040519261060f84610896565b60008452610ec4565b3461012657602060031936011261012657602073ffffffffffffffffffffffffffffffffffffffff61064b600435610ab3565b16604051908152f35b346101265760206003193601126101265773ffffffffffffffffffffffffffffffffffffffff61068261042c565b1680156106ab576000526005602052602067ffffffffffffffff60406000205416604051908152f35b7f8f4eb6040000000000000000000000000000000000000000000000000000000060005260046000fd5b34610126576000806003193601126103af5760405190806003549060019180831c9280821692831561078e575b60209283861085146103785785885260208801949081156103395750600114610735576102dc876102d0818903826108b7565b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83861061077d57505050910190506102d0826102dc38806102c0565b805485870152948201948101610761565b93607f1693610702565b34610126576040600319360112610126576107b161042c565b602435908115158092036101265773ffffffffffffffffffffffffffffffffffffffff9033600052600760205261080c8160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176108b257604052565b610867565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176108b257604052565b67ffffffffffffffff81116108b257601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60806003193601126101265761094661042c565b61094e61044f565b6064359167ffffffffffffffff831161012657366023840112156101265782600401359161097b836108f8565b9261098960405194856108b7565b80845236602482870101116101265760208160009260246105f39801838801378501015260443591610ec4565b34610126576020600319360112610126576109d2600435610be8565b15610a0d5760006040516109e581610896565b526102dc6040516109f581610896565b600081526040519182916020835260208301906101fd565b7fa14c4b500000000000000000000000000000000000000000000000000000000060005260046000fd5b3461012657604060031936011261012657602060ff610aa7610a5761042c565b73ffffffffffffffffffffffffffffffffffffffff610a7461044f565b91166000526007845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b610ac7816000526004602052604060002090565b54908115610af757507c0100000000000000000000000000000000000000000000000000000000811661105c5790565b90506000908154811015610bc0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905b01610b3d816000526004602052604060002090565b54908115610b9857507c0100000000000000000000000000000000000000000000000000000000811615610b93576004827fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b905090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9150610b28565b6004827fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b90600091600080548210610bfa575050565b9192505b808252600480602052604083205480610c6c57508115610c4057507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610bfe565b8260116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b7c010000000000000000000000000000000000000000000000000000000016159392505050565b919091610c9f82610ab3565b9073ffffffffffffffffffffffffffffffffffffffff809116938482841603610ebf5760008481526006602052604090208054610cfc73ffffffffffffffffffffffffffffffffffffffff881633908114908314171590565b1590565b610e55575b610e4b575b50610d318573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055610d818173ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b80546001019055169283917c0200000000000000000000000000000000000000000000000000000000804260a01b851717610dc6866000526004602052604060002090565b55811615610e01575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a415610dfc57565b6110da565b60018401610e19816000526004602052604060002090565b5415610e26575b50610dcf565b6000548114610e2057610e43906000526004602052604060002090565b553880610e20565b6000905538610d06565b610eb5610cf8610eae33610e898b73ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b15610d01576110b0565b611086565b929190610ed2828286610c93565b803b610edf575b50505050565b610ee893610f65565b15610ef65738808080610ed9565b7fd1a57ed60000000000000000000000000000000000000000000000000000000060005260046000fd5b90816020910312610126575161026c816100fc565b3d15610f60573d90610f46826108f8565b91610f5460405193846108b7565b82523d6000602084013e565b606090565b9192602091610fd79160006040519586809581947f150b7a02000000000000000000000000000000000000000000000000000000009a8b845233600485015273ffffffffffffffffffffffffffffffffffffffff809516602485015260448401526080606484015260848301906101fd565b0393165af16000918161102c575b5061100657610ff2610f35565b80511561100157805190602001fd5b610ef6565b7fffffffff00000000000000000000000000000000000000000000000000000000161490565b61104e91925060203d8111611055575b61104681836108b7565b810190610f20565b9038610fe5565b503d61103c565b7fdf2d9b420000000000000000000000000000000000000000000000000000000060005260046000fd5b7fa11481000000000000000000000000000000000000000000000000000000000060005260046000fd5b7f59c896be0000000000000000000000000000000000000000000000000000000060005260046000fd5b7fea553b340000000000000000000000000000000000000000000000000000000060005260046000fdfea2646970667358221220e69b6f8ec7982ca71176772421424f16d7ad6ee464bf476a561ce78e7266e47264736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x17D JUMPI PUSH3 0x154D DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x198 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP3 DUP3 SUB SLT PUSH3 0x17D JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x17D JUMPI DUP3 PUSH3 0x4E SWAP2 DUP6 ADD PUSH3 0x1BE JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP3 DUP4 DUP3 ADD MLOAD DUP4 DUP2 GT PUSH3 0x17D JUMPI PUSH3 0x6A SWAP3 ADD PUSH3 0x1BE JUMP JUMPDEST SWAP2 DUP4 MLOAD SWAP2 DUP3 GT PUSH3 0x177 JUMPI PUSH3 0x8D DUP3 PUSH3 0x87 PUSH1 0x2 SLOAD PUSH3 0x230 JUMP JUMPDEST PUSH3 0x26D JUMP JUMPDEST DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0xE6 JUMPI POP DUP2 SWAP1 PUSH3 0xC6 SWAP5 PUSH1 0x0 SWAP3 PUSH3 0xDA JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 SSTORE PUSH3 0x31F JUMP JUMPDEST PUSH1 0x0 DUP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x113A SWAP1 DUP2 PUSH3 0x413 DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xAB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP2 SWAP4 PUSH1 0x1F NOT DUP6 AND PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x15E JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH3 0xC6 SWAP8 SWAP5 LT PUSH3 0x144 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0x31F JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x135 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH3 0x118 JUMP JUMPDEST PUSH3 0x182 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x177 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x17D JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x177 JUMPI PUSH1 0x20 SWAP1 PUSH3 0x1F4 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x198 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x17D JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x21C JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x206 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x262 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x24C JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x240 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x27A JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x2BB JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2AF JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2A2 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x299 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x2D3 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x314 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x308 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2FB JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x2F2 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x177 JUMPI PUSH3 0x34B DUP2 PUSH3 0x345 PUSH1 0x3 SLOAD PUSH3 0x230 JUMP JUMPDEST PUSH3 0x2C6 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x38A JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x37E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x367 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x3F9 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x3DF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x3D4 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x3BE JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xBB JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA37 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x126 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 CALLDATALOAD PUSH2 0x16B DUP2 PUSH2 0xFC JUMP JUMPDEST AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1D3 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1A9 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x19E JUMP JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x197 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x247 JUMPI POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x208 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x26C SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1FD JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x3A5 JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x378 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x339 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2E0 JUMPI JUMPDEST PUSH2 0x2DC DUP8 PUSH2 0x2D0 DUP2 DUP10 SUB DUP3 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x25B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP4 DUP7 LT PUSH2 0x328 JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x2D0 DUP3 PUSH2 0x2DC CODESIZE DUP1 PUSH2 0x2C0 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x30C JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 MSTORE POP POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP PUSH2 0x2D0 DUP3 PUSH2 0x2DC CODESIZE DUP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x29C JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3CF DUP2 PUSH2 0xBE8 JUMP JUMPDEST ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x126 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x126 JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x486 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH2 0x4A9 DUP4 PUSH2 0xAB3 JUMP JUMPDEST AND DUP1 CALLER SUB PUSH2 0x513 JUMPI JUMPDEST PUSH1 0x0 SWAP4 DUP4 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP3 AND SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x54C CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x4B2 JUMPI PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x126 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x126 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x126 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x5F3 PUSH2 0x5ED CALLDATASIZE PUSH2 0x59F JUMP JUMPDEST SWAP2 PUSH2 0xC93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F3 PUSH2 0x601 CALLDATASIZE PUSH2 0x59F JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x60F DUP5 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0xEC4 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x64B PUSH1 0x4 CALLDATALOAD PUSH2 0xAB3 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x682 PUSH2 0x42C JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x78E JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x378 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x339 JUMPI POP PUSH1 0x1 EQ PUSH2 0x735 JUMPI PUSH2 0x2DC DUP8 PUSH2 0x2D0 DUP2 DUP10 SUB DUP3 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP7 LT PUSH2 0x77D JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x2D0 DUP3 PUSH2 0x2DC CODESIZE DUP1 PUSH2 0x2C0 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x761 JUMP JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x702 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x7B1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x126 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x80C DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8B2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8B2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8B2 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x946 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x94E PUSH2 0x44F JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x126 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x126 JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x97B DUP4 PUSH2 0x8F8 JUMP JUMPDEST SWAP3 PUSH2 0x989 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x8B7 JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP8 ADD ADD GT PUSH2 0x126 JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x5F3 SWAP9 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0xEC4 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x9D2 PUSH1 0x4 CALLDATALOAD PUSH2 0xBE8 JUMP JUMPDEST ISZERO PUSH2 0xA0D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x9E5 DUP2 PUSH2 0x896 JUMP JUMPDEST MSTORE PUSH2 0x2DC PUSH1 0x40 MLOAD PUSH2 0x9F5 DUP2 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1FD JUMP JUMPDEST PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xAA7 PUSH2 0xA57 PUSH2 0x42C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA74 PUSH2 0x44F JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH2 0xAC7 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0xAF7 JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH2 0x105C JUMPI SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0xBC0 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 JUMPDEST ADD PUSH2 0xB3D DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0xB98 JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0xB93 JUMPI PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0xBFA JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP1 PUSH2 0xC6C JUMPI POP DUP2 ISZERO PUSH2 0xC40 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH2 0xBFE JUMP JUMPDEST DUP3 PUSH1 0x11 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xC9F DUP3 PUSH2 0xAB3 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP4 DUP5 DUP3 DUP5 AND SUB PUSH2 0xEBF JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xCFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP4 EQ OR ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xE55 JUMPI JUMPDEST PUSH2 0xE4B JUMPI JUMPDEST POP PUSH2 0xD31 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE PUSH2 0xD81 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE AND SWAP3 DUP4 SWAP2 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0xDC6 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0xE01 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 ISZERO PUSH2 0xDFC JUMPI JUMP JUMPDEST PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0xE19 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0xE26 JUMPI JUMPDEST POP PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0xE20 JUMPI PUSH2 0xE43 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0xD06 JUMP JUMPDEST PUSH2 0xEB5 PUSH2 0xCF8 PUSH2 0xEAE CALLER PUSH2 0xE89 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xD01 JUMPI PUSH2 0x10B0 JUMP JUMPDEST PUSH2 0x1086 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0xED2 DUP3 DUP3 DUP7 PUSH2 0xC93 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0xEDF JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xEE8 SWAP4 PUSH2 0xF65 JUMP JUMPDEST ISZERO PUSH2 0xEF6 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0xED9 JUMP JUMPDEST PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x126 JUMPI MLOAD PUSH2 0x26C DUP2 PUSH2 0xFC JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xF60 JUMPI RETURNDATASIZE SWAP1 PUSH2 0xF46 DUP3 PUSH2 0x8F8 JUMP JUMPDEST SWAP2 PUSH2 0xF54 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x8B7 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 SWAP2 PUSH2 0xFD7 SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP6 DUP2 SWAP5 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP11 DUP12 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP6 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x1FD JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x102C JUMPI JUMPDEST POP PUSH2 0x1006 JUMPI PUSH2 0xFF2 PUSH2 0xF35 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1001 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x104E SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1055 JUMPI JUMPDEST PUSH2 0x1046 DUP2 DUP4 PUSH2 0x8B7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF20 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xFE5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x103C JUMP JUMPDEST PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 SWAP12 PUSH16 0x8EC7982CA71176772421424F16D7AD6E 0xE4 PUSH5 0xBF476A561C 0xE7 DUP15 PUSH19 0x66E47264736F6C634300081300330000000000 ",
							"sourceMap": "1053:48812:0:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;1053:48812:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;5327:13;1053:48812;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:13;1053:48812;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;1053:48812:0;;;;;5327:13;1053:48812;;;;-1:-1:-1;;1053:48812:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:13;1053:48812;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1053:48812:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:0;;;-1:-1:-1;;;;;1053:48812:0;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1053:48812:0;;;;;;;;;;-1:-1:-1;;1053:48812:0;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1053:48812:0;;;;;;;;-1:-1:-1;1053:48812:0;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1053:48812:0;5327:13;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;1053:48812:0;;;;;;;;;;;;:::o;:::-;-1:-1:-1;1053:48812:0;5350:17;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;1053:48812:0;;;;;;;;;;-1:-1:-1;;;;;1053:48812:0;;;;;;;5350:17;1053:48812;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:17;1053:48812;;;;;5350:17;1053:48812;:::o;:::-;;;;-1:-1:-1;1053:48812:0;;;;;5350:17;1053:48812;;-1:-1:-1;;1053:48812:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:17;1053:48812;:::o;:::-;;;;;;;5350:17;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_4362": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_addresst_uint256": {
									"entryPoint": 1439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_bytes4_fromMemory": {
									"entryPoint": 3872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_to_string": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 2296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_string_storage_4360": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_string": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_wrapping_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"external_fun_approve": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_balanceOf": {
									"entryPoint": 1620,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getApproved": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_isApprovedForAll": {
									"entryPoint": 2615,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_name": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_ownerOf": {
									"entryPoint": 1560,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_safeTransferFrom": {
									"entryPoint": 1525,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_safeTransferFrom_1145": {
									"entryPoint": 2354,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setApprovalForAll": {
									"entryPoint": 1944,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_supportsInterface": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_symbol": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_tokenURI": {
									"entryPoint": 2486,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_totalSupply": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_transferFrom": {
									"entryPoint": 1505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"extract_returndata": {
									"entryPoint": 3893,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_6587": {
									"entryPoint": 2198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkContractOnERC721Received": {
									"entryPoint": 3941,
									"id": 1227,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"fun_exists": {
									"entryPoint": 3048,
									"id": 870,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_getApprovedSlotAndAddress": {
									"entryPoint": null,
									"id": 913,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"fun_isSenderApprovedOrOwner": {
									"entryPoint": null,
									"id": 894,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_packedOwnershipOf": {
									"entryPoint": 2739,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_revert": {
									"entryPoint": 4314,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_4386": {
									"entryPoint": 4188,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_4392": {
									"entryPoint": 4230,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_4394": {
									"entryPoint": 4272,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_4402": {
									"entryPoint": null,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_safeTransferFrom": {
									"entryPoint": 3780,
									"id": 1145,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_transferFrom": {
									"entryPoint": 3219,
									"id": 1086,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_wrapping_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address_4393": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address_4395": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_uint256_uint256_of_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"read_from_storage_split_offset_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100f757806306fdde03146100f2578063081812fc146100ed578063095ea7b3146100e857806318160ddd146100e357806323b872dd146100de57806342842e0e146100d95780636352211e146100d457806370a08231146100cf57806395d89b41146100ca578063a22cb465146100c5578063b88d4fde146100c0578063c87b56dd146100bb5763e985e9c5146100b657600080fd5b610a37565b6109b6565b610932565b610798565b6106d5565b610654565b610618565b6105f5565b6105e1565b61057c565b610472565b6103b2565b61026f565b61012b565b7fffffffff0000000000000000000000000000000000000000000000000000000081160361012657565b600080fd5b346101265760206003193601126101265760207fffffffff0000000000000000000000000000000000000000000000000000000060043561016b816100fc565b167f01ffc9a70000000000000000000000000000000000000000000000000000000081149081156101d3575b81156101a9575b506040519015158152f35b7f5b5e139f000000000000000000000000000000000000000000000000000000009150143861019e565b7f80ac58cd0000000000000000000000000000000000000000000000000000000081149150610197565b919082519283825260005b8481106102475750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610208565b90602061026c9281815201906101fd565b90565b34610126576000806003193601126103af5760405190806002549060019180831c928082169283156103a5575b602092838610851461037857858852602088019490811561033957506001146102e0575b6102dc876102d0818903826108b7565b6040519182918261025b565b0390f35b600260005294509192917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b83861061032857505050910190506102d0826102dc38806102c0565b80548587015294820194810161030c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685525050505090151560051b0190506102d0826102dc38806102c0565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b93607f169361029c565b80fd5b34610126576020600319360112610126576004356103cf81610be8565b15610402576000526006602052602073ffffffffffffffffffffffffffffffffffffffff60406000205416604051908152f35b7fcf4700e40000000000000000000000000000000000000000000000000000000060005260046000fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361012657565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361012657565b60406003193601126101265761048661042c565b60243573ffffffffffffffffffffffffffffffffffffffff91826104a983610ab3565b16803303610513575b600093838552600660205260408520921691827fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b80600052600760205260ff61054c3360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166104b2577fcfb3b9420000000000000000000000000000000000000000000000000000000060005260046000fd5b346101265760006003193601126101265760206000546001549003604051908152f35b60031960609101126101265773ffffffffffffffffffffffffffffffffffffffff90600435828116810361012657916024359081168103610126579060443590565b6105f36105ed3661059f565b91610c93565b005b6105f36106013661059f565b906040519261060f84610896565b60008452610ec4565b3461012657602060031936011261012657602073ffffffffffffffffffffffffffffffffffffffff61064b600435610ab3565b16604051908152f35b346101265760206003193601126101265773ffffffffffffffffffffffffffffffffffffffff61068261042c565b1680156106ab576000526005602052602067ffffffffffffffff60406000205416604051908152f35b7f8f4eb6040000000000000000000000000000000000000000000000000000000060005260046000fd5b34610126576000806003193601126103af5760405190806003549060019180831c9280821692831561078e575b60209283861085146103785785885260208801949081156103395750600114610735576102dc876102d0818903826108b7565b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83861061077d57505050910190506102d0826102dc38806102c0565b805485870152948201948101610761565b93607f1693610702565b34610126576040600319360112610126576107b161042c565b602435908115158092036101265773ffffffffffffffffffffffffffffffffffffffff9033600052600760205261080c8160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176108b257604052565b610867565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176108b257604052565b67ffffffffffffffff81116108b257601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60806003193601126101265761094661042c565b61094e61044f565b6064359167ffffffffffffffff831161012657366023840112156101265782600401359161097b836108f8565b9261098960405194856108b7565b80845236602482870101116101265760208160009260246105f39801838801378501015260443591610ec4565b34610126576020600319360112610126576109d2600435610be8565b15610a0d5760006040516109e581610896565b526102dc6040516109f581610896565b600081526040519182916020835260208301906101fd565b7fa14c4b500000000000000000000000000000000000000000000000000000000060005260046000fd5b3461012657604060031936011261012657602060ff610aa7610a5761042c565b73ffffffffffffffffffffffffffffffffffffffff610a7461044f565b91166000526007845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b610ac7816000526004602052604060002090565b54908115610af757507c0100000000000000000000000000000000000000000000000000000000811661105c5790565b90506000908154811015610bc0577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff905b01610b3d816000526004602052604060002090565b54908115610b9857507c0100000000000000000000000000000000000000000000000000000000811615610b93576004827fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b905090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9150610b28565b6004827fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b90600091600080548210610bfa575050565b9192505b808252600480602052604083205480610c6c57508115610c4057507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01610bfe565b8260116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b7c010000000000000000000000000000000000000000000000000000000016159392505050565b919091610c9f82610ab3565b9073ffffffffffffffffffffffffffffffffffffffff809116938482841603610ebf5760008481526006602052604090208054610cfc73ffffffffffffffffffffffffffffffffffffffff881633908114908314171590565b1590565b610e55575b610e4b575b50610d318573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055610d818173ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b80546001019055169283917c0200000000000000000000000000000000000000000000000000000000804260a01b851717610dc6866000526004602052604060002090565b55811615610e01575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a415610dfc57565b6110da565b60018401610e19816000526004602052604060002090565b5415610e26575b50610dcf565b6000548114610e2057610e43906000526004602052604060002090565b553880610e20565b6000905538610d06565b610eb5610cf8610eae33610e898b73ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b15610d01576110b0565b611086565b929190610ed2828286610c93565b803b610edf575b50505050565b610ee893610f65565b15610ef65738808080610ed9565b7fd1a57ed60000000000000000000000000000000000000000000000000000000060005260046000fd5b90816020910312610126575161026c816100fc565b3d15610f60573d90610f46826108f8565b91610f5460405193846108b7565b82523d6000602084013e565b606090565b9192602091610fd79160006040519586809581947f150b7a02000000000000000000000000000000000000000000000000000000009a8b845233600485015273ffffffffffffffffffffffffffffffffffffffff809516602485015260448401526080606484015260848301906101fd565b0393165af16000918161102c575b5061100657610ff2610f35565b80511561100157805190602001fd5b610ef6565b7fffffffff00000000000000000000000000000000000000000000000000000000161490565b61104e91925060203d8111611055575b61104681836108b7565b810190610f20565b9038610fe5565b503d61103c565b7fdf2d9b420000000000000000000000000000000000000000000000000000000060005260046000fd5b7fa11481000000000000000000000000000000000000000000000000000000000060005260046000fd5b7f59c896be0000000000000000000000000000000000000000000000000000000060005260046000fd5b7fea553b340000000000000000000000000000000000000000000000000000000060005260046000fdfea2646970667358221220e69b6f8ec7982ca71176772421424f16d7ad6ee464bf476a561ce78e7266e47264736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xBB JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA37 JUMP JUMPDEST PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0x932 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST PUSH2 0x6D5 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH2 0x618 JUMP JUMPDEST PUSH2 0x5F5 JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x126 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 CALLDATALOAD PUSH2 0x16B DUP2 PUSH2 0xFC JUMP JUMPDEST AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1D3 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1A9 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x19E JUMP JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x197 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x247 JUMPI POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x208 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x26C SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1FD JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x3A5 JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x378 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x339 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2E0 JUMPI JUMPDEST PUSH2 0x2DC DUP8 PUSH2 0x2D0 DUP2 DUP10 SUB DUP3 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x25B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP4 DUP7 LT PUSH2 0x328 JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x2D0 DUP3 PUSH2 0x2DC CODESIZE DUP1 PUSH2 0x2C0 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x30C JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 MSTORE POP POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP PUSH2 0x2D0 DUP3 PUSH2 0x2DC CODESIZE DUP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x29C JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3CF DUP2 PUSH2 0xBE8 JUMP JUMPDEST ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x126 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x126 JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x486 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 PUSH2 0x4A9 DUP4 PUSH2 0xAB3 JUMP JUMPDEST AND DUP1 CALLER SUB PUSH2 0x513 JUMPI JUMPDEST PUSH1 0x0 SWAP4 DUP4 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 SWAP3 AND SWAP2 DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x54C CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x4B2 JUMPI PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x126 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x126 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x126 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x5F3 PUSH2 0x5ED CALLDATASIZE PUSH2 0x59F JUMP JUMPDEST SWAP2 PUSH2 0xC93 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5F3 PUSH2 0x601 CALLDATASIZE PUSH2 0x59F JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x60F DUP5 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0xEC4 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x64B PUSH1 0x4 CALLDATALOAD PUSH2 0xAB3 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x682 PUSH2 0x42C JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x6AB JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x78E JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x378 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x339 JUMPI POP PUSH1 0x1 EQ PUSH2 0x735 JUMPI PUSH2 0x2DC DUP8 PUSH2 0x2D0 DUP2 DUP10 SUB DUP3 PUSH2 0x8B7 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP7 LT PUSH2 0x77D JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x2D0 DUP3 PUSH2 0x2DC CODESIZE DUP1 PUSH2 0x2C0 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x761 JUMP JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x702 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x7B1 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x126 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x80C DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8B2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8B2 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8B2 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x946 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x94E PUSH2 0x44F JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x126 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x126 JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x97B DUP4 PUSH2 0x8F8 JUMP JUMPDEST SWAP3 PUSH2 0x989 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x8B7 JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP8 ADD ADD GT PUSH2 0x126 JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x5F3 SWAP9 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0xEC4 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x9D2 PUSH1 0x4 CALLDATALOAD PUSH2 0xBE8 JUMP JUMPDEST ISZERO PUSH2 0xA0D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x9E5 DUP2 PUSH2 0x896 JUMP JUMPDEST MSTORE PUSH2 0x2DC PUSH1 0x40 MLOAD PUSH2 0x9F5 DUP2 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1FD JUMP JUMPDEST PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xAA7 PUSH2 0xA57 PUSH2 0x42C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA74 PUSH2 0x44F JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH2 0xAC7 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0xAF7 JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH2 0x105C JUMPI SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0xBC0 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 JUMPDEST ADD PUSH2 0xB3D DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0xB98 JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0xB93 JUMPI PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP PUSH2 0xB28 JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0xBFA JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 SLOAD DUP1 PUSH2 0xC6C JUMPI POP DUP2 ISZERO PUSH2 0xC40 JUMPI POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH2 0xBFE JUMP JUMPDEST DUP3 PUSH1 0x11 PUSH1 0x24 SWAP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP4 MSTORE MSTORE REVERT JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP4 SWAP3 POP POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0xC9F DUP3 PUSH2 0xAB3 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP4 DUP5 DUP3 DUP5 AND SUB PUSH2 0xEBF JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xCFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP4 EQ OR ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xE55 JUMPI JUMPDEST PUSH2 0xE4B JUMPI JUMPDEST POP PUSH2 0xD31 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE PUSH2 0xD81 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE AND SWAP3 DUP4 SWAP2 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0xDC6 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0xE01 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 ISZERO PUSH2 0xDFC JUMPI JUMP JUMPDEST PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0xE19 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0xE26 JUMPI JUMPDEST POP PUSH2 0xDCF JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0xE20 JUMPI PUSH2 0xE43 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0xE20 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0xD06 JUMP JUMPDEST PUSH2 0xEB5 PUSH2 0xCF8 PUSH2 0xEAE CALLER PUSH2 0xE89 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xD01 JUMPI PUSH2 0x10B0 JUMP JUMPDEST PUSH2 0x1086 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0xED2 DUP3 DUP3 DUP7 PUSH2 0xC93 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0xEDF JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xEE8 SWAP4 PUSH2 0xF65 JUMP JUMPDEST ISZERO PUSH2 0xEF6 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0xED9 JUMP JUMPDEST PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x126 JUMPI MLOAD PUSH2 0x26C DUP2 PUSH2 0xFC JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xF60 JUMPI RETURNDATASIZE SWAP1 PUSH2 0xF46 DUP3 PUSH2 0x8F8 JUMP JUMPDEST SWAP2 PUSH2 0xF54 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x8B7 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 SWAP2 PUSH2 0xFD7 SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP6 DUP2 SWAP5 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP11 DUP12 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP6 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x1FD JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x102C JUMPI JUMPDEST POP PUSH2 0x1006 JUMPI PUSH2 0xFF2 PUSH2 0xF35 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1001 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0xEF6 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x104E SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1055 JUMPI JUMPDEST PUSH2 0x1046 DUP2 DUP4 PUSH2 0x8B7 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xF20 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xFE5 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x103C JUMP JUMPDEST PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE6 SWAP12 PUSH16 0x8EC7982CA71176772421424F16D7AD6E 0xE4 PUSH5 0xBF476A561C 0xE7 DUP15 PUSH19 0x66E47264736F6C634300081300330000000000 ",
							"sourceMap": "1053:48812:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;1053:48812:0;;;;;;;;;;;;:::i;:::-;;;11092:25;;:101;;;;;1053:48812;11092:177;;;;1053:48812;;;;;;;;;;11092:177;1053:48812;11244:25;;;11092:177;;;:101;1053:48812;11168:25;;;-1:-1:-1;11092:101:0;;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;1053:48812:0;;;;;;;;;11659:5;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;11659:5;1053:48812;;;-1:-1:-1;1053:48812:0;;;;;;;;;;-1:-1:-1;;;1053:48812:0;;;-1:-1:-1;1053:48812:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1053:48812:0;;;;;;;-1:-1:-1;1053:48812:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:0;;;;;;;18736:16;;;:::i;:::-;18735:17;18731:73;;-1:-1:-1;1053:48812:0;18822:15;1053:48812;;;;;-1:-1:-1;1053:48812:0;;;;;;;;;18731:73;18762:41;-1:-1:-1;49766:91:0;1053:48812;-1:-1:-1;49766:91:0;1053:48812;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;1053:48812:0;;;;;;;:::i;:::-;;;;13048:27;;;;;:::i;:::-;1053:48812;47819:10;;41521:28;41500:198;;1053:48812;-1:-1:-1;1053:48812:0;;;;41708:15;1053:48812;;;;;;;;;;;;;;;;41758:28;;;;1053:48812;;41500:198;1053:48812;-1:-1:-1;1053:48812:0;19687:18;1053:48812;;;19687:35;47819:10;1053:48812;-1:-1:-1;1053:48812:0;;;;;;;;;;;;;19687:35;1053:48812;;41500:198;41563:135;41640:42;-1:-1:-1;49766:91:0;;-1:-1:-1;49766:91:0;1053:48812;;;;;-1:-1:-1;;1053:48812:0;;;;;;;;7328:12;1053:48812;;;;;;;;;;-1:-1:-1;;1053:48812:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;26475:39;1053:48812;;;:::i;:::-;;;;;;;;:::i;:::-;;;;26475:39;:::i;1053:48812::-;;;;;-1:-1:-1;;1053:48812:0;;;;;;;13048:27;1053:48812;;13048:27;:::i;:::-;1053:48812;;;;;;;;;;;;-1:-1:-1;;1053:48812:0;;;;;;;;:::i;:::-;;8665:19;;8661:69;;-1:-1:-1;1053:48812:0;8747:18;1053:48812;;;1518:13;1053:48812;-1:-1:-1;1053:48812:0;;8747:55;1053:48812;;;;;;8661:69;8694:35;-1:-1:-1;49766:91:0;1053:48812;-1:-1:-1;49766:91:0;1053:48812;;;;;;-1:-1:-1;;1053:48812:0;;;;;;;;;11830:7;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11830:7;1053:48812;;;-1:-1:-1;1053:48812:0;;;;;;;;;;-1:-1:-1;;;1053:48812:0;;;-1:-1:-1;1053:48812:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1053:48812:0;;;;;;;:::i;:::-;;;;;;;;;;;;;47819:10;;-1:-1:-1;1053:48812:0;19280:18;1053:48812;;19280:49;1053:48812;;-1:-1:-1;1053:48812:0;;;;;;;;;;;;;19280:49;1053:48812;;;;;;;;;;;;;;;;47819:10;19355:55;1053:48812;47819:10;19355:55;;1053:48812;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;1053:48812:0;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;1053:48812:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;1053:48812:0;;;;;12048:16;1053:48812;;12048:16;:::i;:::-;12047:17;12043:68;;-1:-1:-1;1053:48812:0;;;;;:::i;:::-;;;;;;;;:::i;:::-;-1:-1:-1;1053:48812:0;;;;;;;;;;;;;;;:::i;12043:68::-;12074:36;-1:-1:-1;49766:91:0;1053:48812;-1:-1:-1;49766:91:0;1053:48812;;;;;-1:-1:-1;;1053:48812:0;;;;;;;19687:35;1053:48812;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;1053:48812:0;19687:18;1053:48812;;;-1:-1:-1;1053:48812:0;;;;;;;;;;;;;19687:35;1053:48812;;;;;;;;;;14380:2173;14528:26;;1053:48812;;14528:17;1053:48812;;;;;;;14528:26;1053:48812;14847:11;;;14843:1270;;16435:24;2276:8;16435:24;;16507:38;16431:48;16466:13;:::o;14843:1270::-;1053:48812;;;;;;14882:24;;;14878:77;;6488:17;15502:597;;1053:48812;15578:28;;1053:48812;;14528:17;1053:48812;;;;;;;15578:28;1053:48812;15654:11;;;15650:25;;15701:24;2276:8;15701:24;;:29;15697:48;;49766:91;;14916:38;49766:91;;;15697:48;15732:13;;;:::o;15650:25::-;6488:17;;-1:-1:-1;15502:597:0;;14878:77;49766:91;;14916:38;49766:91;;;19978:465;;1053:48812;20043:11;1053:48812;;;20221:23;;20217:210;;19978:465;;:::o;20217:210::-;20264:14;;-1:-1:-1;20296:60:0;1053:48812;;;20313:17;1053:48812;;;;;;;20303:42;;;1053:48812;;;;;;;;20296:60;;1053:48812;;;;;;;;;;20303:42;2276:8;20383:24;:29;;20217:210;-1:-1:-1;;;19978:465:0:o;22796:3447::-;;;;22963:27;;;:::i;:::-;1053:48812;;;;;;;;;;23173:45;23169:95;;-1:-1:-1;1053:48812:0;;;21929:15;1053:48812;;;;;22057:132;;23463:69;21135:472;;;47819:10;21135:472;;;;;;;23463:69;;1053:48812;23464:68;23463:69;;1053:48812;23463:69;23459:188;;22796:3447;23764:190;;22796:3447;24316:24;;;1053:48812;;;;24316:18;1053:48812;;;;;;;24316:24;1053:48812;;;;2943:14;;24384:22;;1053:48812;;;;24316:18;1053:48812;;;;;;;24384:22;1053:48812;;2943:14;;;;17192:331;24755:73;;;;17192:331;;;;;;;24670:26;;1053:48812;;14528:17;1053:48812;;;;;;;24670:26;2943:14;24959:47;;:52;24955:617;;22796:3447;25749:367;;-1:-1:-1;25749:367:0;;26129:13;26125:58;;22796:3447::o;26125:58::-;26152:30;:::i;24955:617::-;25063:1;1053:48812;;25184:30;;1053:48812;;14528:17;1053:48812;;;;;;;25184:30;1053:48812;25184:35;25180:378;;24955:617;;;;25180:378;-1:-1:-1;1053:48812:0;25301:239;;25180:378;25301:239;25465:30;;1053:48812;;14528:17;1053:48812;;;;;;;25465:30;2943:14;25301:239;;25180:378;;23764:190;;;;;;;23459:188;23550:44;19687:35;;47819:10;19687:25;;1053:48812;;;;19687:18;1053:48812;;;;;;;19687:25;1053:48812;;;;;;;;;;;;19687:35;1053:48812;;;;;23550:44;23546:101;23459:188;23546:101;23604:42;:::i;23169:95::-;23228:35;:::i;27102:405::-;;;;27294:7;;;;;:::i;:::-;27316:14;;27312:189;;27102:405;;;;;:::o;27312:189::-;27354:56;;;:::i;:::-;27353:57;27349:152;;27312:189;;;;;;27349:152;27438:47;27334:1;49766:91;;27334:1;49766:91;1053:48812;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;1053:48812:0;;;;:::o;:::-;;;:::o;29533:673::-;;;29711:88;29533:673;1053:48812;29533:673;1053:48812;;;;;;;;;;29711:88;;;;47819:10;29711:88;;;1053:48812;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29711:88;1053:48812;;29711:88;;1053:48812;;29711:88;;;29533:673;-1:-1:-1;29707:493:0;;29943:257;;:::i;:::-;1053:48812;;29989:18;29985:113;;30111:79;;;29711:88;30111:79;;29985:113;30035:47;:::i;29707:493::-;1053:48812;;29867:64;29860:71;:::o;29711:88::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;49703:160;14916:38;49766:91;;;;;49703:160;23228:35;49766:91;;;;;49703:160;23604:42;49766:91;;;;;49703:160;26152:30;49766:91;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. The `_sequentialUpTo()` function can be overriden to enable spot mints (i.e. non-consecutive mints) for `tokenId`s greater than `_sequentialUpTo()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chiru-labs/erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/chiru-labs/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"lib/chiru-labs/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chiru-labs/erc721a/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/chiru-labs/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"lib/chiru-labs/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/chiru-labs/erc721a/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chiru-labs/erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/chiru-labs/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/chiru-labs/erc721a/contracts/extensions/ERC721AQueryable.sol": {
				"ERC721AQueryable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "ownership",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721A subclass with convenience query functions.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721AQueryable.",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721A subclass with convenience query functions.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721AQueryable.\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chiru-labs/erc721a/contracts/extensions/ERC721AQueryable.sol\":\"ERC721AQueryable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/chiru-labs/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"lib/chiru-labs/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]},\"lib/chiru-labs/erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xfa5590db00a9bf0f85d2c10f2c901d5a3d49ecb1e64e5b6afe9a771496a41698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42616f12c7956e0ccefb690bf2a503986710c54544a36898b1ecc5d226373c4d\",\"dweb:/ipfs/QmU6vn637MDzUjsGih3fnWYf5CjcMknQUDXQwYjLNPX8ig\"]},\"lib/chiru-labs/erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x56fa15ba9a351f0be2728ff2569c8ce6bc187cbf2c027fece17442a682f49079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e424f0290d7ba66e451b3d8e490f5bac0bf0105b2af467513b2ffecb7065a9\",\"dweb:/ipfs/QmbCvzT7vep5gyBNqkHrD46pxZVUHHzaCZUpgwgWkBw78Y\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/chiru-labs/erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"IERC721AQueryable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721AQueryable.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721AQueryable.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chiru-labs/erc721a/contracts/extensions/IERC721AQueryable.sol\":\"IERC721AQueryable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/chiru-labs/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]},\"lib/chiru-labs/erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x56fa15ba9a351f0be2728ff2569c8ce6bc187cbf2c027fece17442a682f49079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e424f0290d7ba66e451b3d8e490f5bac0bf0105b2af467513b2ffecb7065a9\",\"dweb:/ipfs/QmbCvzT7vep5gyBNqkHrD46pxZVUHHzaCZUpgwgWkBw78Y\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol": {
				"AccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {AccessControl} that allows enumerating the members of each role.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"IAccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControlEnumerable declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/interfaces/IERC2981.sol": {
				"IERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"UpgradeableBeacon": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.",
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation returned by the beacon is changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon."
							},
							"implementation()": {
								"details": "Returns the current implementation address."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeTo(address)": {
								"details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60803461011a57601f6105ee38819003918201601f19168301916001600160401b0383118484101761011f5780849260209460405283398101031261011a57516001600160a01b03808216919082820361011a576000549160018060a01b0319923384821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a33b156100b2575060015416176001556040516104b890816101368239f35b62461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146102ce5780635c60da1b1461027c578063715018a6146101e05780638da5cb5b1461018f5763f2fde38b1461005457600080fd5b3461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff808216809203610188576100ad610403565b8115610104578254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b80fd5b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57610217610403565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b503461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff81169081810361018857610328610403565b3b1561037f57807fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361042457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212201342d7da4ff651b86bceb8a63d98cff68dd07c475146281deaa480413570ea7564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x1F PUSH2 0x5EE CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x11F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x11A JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP3 SUB PUSH2 0x11A JUMPI PUSH1 0x0 SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP3 CALLER DUP5 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 EXTCODESIZE ISZERO PUSH2 0xB2 JUMPI POP PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP1 DUP2 PUSH2 0x136 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x188 JUMPI PUSH2 0xAD PUSH2 0x403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x104 JUMPI DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH2 0x217 PUSH2 0x403 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x188 JUMPI PUSH2 0x328 PUSH2 0x403 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x37F JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x424 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT TIMESTAMP 0xD7 0xDA 0x4F 0xF6 MLOAD 0xB8 PUSH12 0xCEB8A63D98CFF68DD07C4751 CHAINID 0x28 SAR 0xEA LOG4 DUP1 COINBASE CALLDATALOAD PUSH17 0xEA7564736F6C6343000813003300000000 ",
							"sourceMap": "543:1496:15:-:0;;;;;;;;;;;;;-1:-1:-1;;543:1496:15;;;;-1:-1:-1;;;;;543:1496:15;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;543:1496:15;;;;;;;;;;-1:-1:-1;543:1496:15;;;;;;;;719:10:18;;543:1496:15;;;;-1:-1:-1;543:1496:15;;;719:10:18;;543:1496:15;;2566:40:8;-1:-1:-1;2566:40:8;;1702:19:17;:23;543:1496:15;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:1496:15;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;543:1496:15;;;;;;-1:-1:-1;543:1496:15;;;;;-1:-1:-1;543:1496:15"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"fun_checkOwner": {
									"entryPoint": 1027,
									"id": 3311,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146102ce5780635c60da1b1461027c578063715018a6146101e05780638da5cb5b1461018f5763f2fde38b1461005457600080fd5b3461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff808216809203610188576100ad610403565b8115610104578254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b80fd5b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57610217610403565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b503461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff81169081810361018857610328610403565b3b1561037f57807fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361042457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea26469706673582212201342d7da4ff651b86bceb8a63d98cff68dd07c475146281deaa480413570ea7564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x188 JUMPI PUSH2 0xAD PUSH2 0x403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x104 JUMPI DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH2 0x217 PUSH2 0x403 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x188 JUMPI PUSH2 0x328 PUSH2 0x403 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x37F JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x424 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT TIMESTAMP 0xD7 0xDA 0x4F 0xF6 MLOAD 0xB8 PUSH12 0xCEB8A63D98CFF68DD07C4751 CHAINID 0x28 SAR 0xEA LOG4 DUP1 COINBASE CALLDATALOAD PUSH17 0xEA7564736F6C6343000813003300000000 ",
							"sourceMap": "543:1496:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:8;;:::i;:::-;2162:22;;543:1496:15;;;;;;;;;;;;2566:40:8;;;;543:1496:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:8;;:::i;:::-;543:1496:15;;;;;;;;;;2566:40:8;;;;543:1496:15;;;;;;;;;;;;;;;;1188:15;543:1496;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:8;;:::i;:::-;1702:19:17;:23;543:1496:15;;;;1995:35;543:1496;;;1995:35;543:1496;1602:27;;;;543:1496;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:130:8;543:1496:15;1273:6:8;543:1496:15;;719:10:18;1422:23:8;543:1496:15;;1359:130:8:o;543:1496:15:-;;;;;;;;;;;;;;;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation returned by the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon.\"},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":\"UpgradeableBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362f12aebd1022d643235e6a7fa6ccfb38c13f3a0d1b006d5d1aea51af4bb852\",\"dweb:/ipfs/QmSUQ7pM4UnBawMfP2Di8EqawxaoU195DgsSLxHejvSpPz\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/token/common/ERC2981.sol": {
				"ERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported. _Available since v4.5._",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/token/common/ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"lib/openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220f246e2b6c67bb43f478781eb9a00e7af0ecbc77c27713d6f471e24ccb7717a9a64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE CHAINID 0xE2 0xB6 0xC6 PUSH28 0xB43F478781EB9A00E7AF0ECBC77C27713D6F471E24CCB7717A9A6473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "194:9169:17:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220f246e2b6c67bb43f478781eb9a00e7af0ecbc77c27713d6f471e24ccb7717a9a64736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE CHAINID 0xE2 0xB6 0xC6 PUSH28 0xB43F478781EB9A00E7AF0ECBC77C27713D6F471E24CCB7717A9A6473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "194:9169:17:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/Create2.sol": {
				"Create2": {
					"abi": [],
					"devdoc": {
						"details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212208c66348d70c75aa37968294dca2aab232ce18fcd3519bb34b2b6b1b5d0d628e564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 PUSH7 0x348D70C75AA379 PUSH9 0x294DCA2AAB232CE18F 0xCD CALLDATALOAD NOT 0xBB CALLVALUE 0xB2 0xB6 0xB1 0xB5 0xD0 0xD6 0x28 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "494:3457:19:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212208c66348d70c75aa37968294dca2aab232ce18fcd3519bb34b2b6b1b5d0d628e564736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 PUSH7 0x348D70C75AA379 PUSH9 0x294DCA2AAB232CE18F 0xCD CALLDATALOAD NOT 0xBB CALLVALUE 0xB2 0xB6 0xB1 0xB5 0xD0 0xD6 0x28 0xE5 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "494:3457:19:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220969fad863c988109692dde42de25629855bddad4fa64383852ec60db3d8a2b9b64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SWAP16 0xAD DUP7 EXTCODECOPY SWAP9 DUP2 MULMOD PUSH10 0x2DDE42DE25629855BDDA 0xD4 STATICCALL PUSH5 0x383852EC60 0xDB RETURNDATASIZE DUP11 0x2B SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1420:2685:20:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220969fad863c988109692dde42de25629855bddad4fa64383852ec60db3d8a2b9b64736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 SWAP16 0xAD DUP7 EXTCODECOPY SWAP9 DUP2 MULMOD PUSH10 0x2DDE42DE25629855BDDA 0xD4 STATICCALL PUSH5 0x383852EC60 0xDB RETURNDATASIZE DUP11 0x2B SWAP12 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1420:2685:20:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212209dab5ff643e79c11da6476ffe8c4ccf10804df0ff7c50c8ca94170710c57747664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xAB 0x5F 0xF6 NUMBER 0xE7 SWAP13 GT 0xDA PUSH5 0x76FFE8C4CC CALL ADDMOD DIV 0xDF 0xF 0xF7 0xC5 0xC DUP13 0xA9 COINBASE PUSH17 0x710C57747664736F6C6343000813003300 ",
							"sourceMap": "220:2559:21:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212209dab5ff643e79c11da6476ffe8c4ccf10804df0ff7c50c8ca94170710c57747664736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xAB 0x5F 0xF6 NUMBER 0xE7 SWAP13 GT 0xDA PUSH5 0x76FFE8C4CC CALL ADDMOD DIV 0xDF 0xF 0xF7 0xC5 0xC DUP13 0xA9 COINBASE PUSH17 0x710C57747664736F6C6343000813003300 ",
							"sourceMap": "220:2559:21:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212205944efefb37203abde92014a8ac2c1117134f09beb5af18b3b05cedf10a92e7d64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE PREVRANDAO 0xEF 0xEF 0xB3 PUSH19 0x3ABDE92014A8AC2C1117134F09BEB5AF18B3B SDIV 0xCE 0xDF LT 0xA9 0x2E PUSH30 0x64736F6C6343000813003300000000000000000000000000000000000000 ",
							"sourceMap": "202:12582:24:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212205944efefb37203abde92014a8ac2c1117134f09beb5af18b3b05cedf10a92e7d64736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE PREVRANDAO 0xEF 0xEF 0xB3 PUSH19 0x3ABDE92014A8AC2C1117134F09BEB5AF18B3B SDIV 0xCE 0xDF LT 0xA9 0x2E PUSH30 0x64736F6C6343000813003300000000000000000000000000000000000000 ",
							"sourceMap": "202:12582:24:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207870595242f90f1baff17c65866c8c9d64676b158b20d61eed7e0b9e6f29edf564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x70595242F90F1BAFF17C65866C8C9D64676B158B20D61EED7E SIGNEXTEND SWAP15 PUSH16 0x29EDF564736F6C634300081300330000 ",
							"sourceMap": "215:1047:25:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212207870595242f90f1baff17c65866c8c9d64676b158b20d61eed7e0b9e6f29edf564736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH25 0x70595242F90F1BAFF17C65866C8C9D64676B158B20D61EED7E SIGNEXTEND SWAP15 PUSH16 0x29EDF564736F6C634300081300330000 ",
							"sourceMap": "215:1047:25:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122029a54cd8fa148b7e2234103703511defffb953d2eb9c12ff351418ac474e03b764736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xA5 0x4C 0xD8 STATICCALL EQ DUP12 PUSH31 0x2234103703511DEFFFB953D2EB9C12FF351418AC474E03B764736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "1329:11630:26:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea264697066735822122029a54cd8fa148b7e2234103703511defffb953d2eb9c12ff351418ac474e03b764736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x29 0xA5 0x4C 0xD8 STATICCALL EQ DUP12 PUSH31 0x2234103703511DEFFFB953D2EB9C12FF351418AC474E03B764736F6C634300 ADDMOD SGT STOP CALLER ",
							"sourceMap": "1329:11630:26:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/SequenceProxyFactory.sol": {
				"SequenceProxyFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beacon",
							"outputs": [
								{
									"internalType": "contract UpgradeableBeacon",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "upgradeBeacon",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The factory owner is able to upgrade the beacon implementation.Proxy deployers are able to override the beacon reference with their own.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeBeacon(address)": {
								"params": {
									"implementation": "The new beacon implementation."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beacon\",\"outputs\":[{\"internalType\":\"contract UpgradeableBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgradeBeacon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The factory owner is able to upgrade the beacon implementation.Proxy deployers are able to override the beacon reference with their own.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeBeacon(address)\":{\"params\":{\"implementation\":\"The new beacon implementation.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"upgradeBeacon(address)\":{\"notice\":\"Upgrades the beacon implementation.\"}},\"notice\":\"An proxy factory that deploys upgradeable beacon proxies.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/SequenceProxyFactory.sol\":\"SequenceProxyFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362f12aebd1022d643235e6a7fa6ccfb38c13f3a0d1b006d5d1aea51af4bb852\",\"dweb:/ipfs/QmSUQ7pM4UnBawMfP2Di8EqawxaoU195DgsSLxHejvSpPz\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/SequenceProxyFactory.sol\":{\"keccak256\":\"0x263347655a632136e3dabcc6e49da7fb9fa5b62a4f1e9eeed3cdd74234c81c53\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f41dc2c95c5d793105ed53f9ae9adea5a00264be78d86bf4f26cca6d33b7141\",\"dweb:/ipfs/QmfP1T4HDdDWYNFxMGHMeaq6owWmNdGjDMrh6hN3in2GVW\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0x366f201163ff5b941a61d5d2cd5966f25e332f52b197335cb68670c5fc83ba12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://485725a0c56e49d07de7233293e85fe1a586ddd70b07f1b14af5819874819da9\",\"dweb:/ipfs/QmRgQV9yzosT37zGpg6wb6Ff7q8Ux4Ttryo1RdPWaAfAED\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"upgradeBeacon(address)": {
								"notice": "Upgrades the beacon implementation."
							}
						},
						"notice": "An proxy factory that deploys upgradeable beacon proxies.",
						"version": 1
					}
				}
			},
			"src/proxies/TransparentUpgradeableBeaconProxy.sol": {
				"ITransparentUpgradeableBeaconProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":\"ITransparentUpgradeableBeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0x366f201163ff5b941a61d5d2cd5966f25e332f52b197335cb68670c5fc83ba12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://485725a0c56e49d07de7233293e85fe1a586ddd70b07f1b14af5819874819da9\",\"dweb:/ipfs/QmRgQV9yzosT37zGpg6wb6Ff7q8Ux4Ttryo1RdPWaAfAED\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TransparentUpgradeableBeaconProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "As the underlying proxy implementation (TransparentUpgradeableProxy) allows the admin to call the implementation, care must be taken to avoid proxy selector collisions. Implementation selectors must not conflict with the proxy selectors. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. The proxy selectors are: - 0xcf7a1d77: initialize - 0x3659cfe6: upgradeTo (from TransparentUpgradeableProxy) - 0x4f1ef286: upgradeToAndCall (from TransparentUpgradeableProxy) - 0x8f283970: changeAdmin (from TransparentUpgradeableProxy) - 0xf851a440: admin (from TransparentUpgradeableProxy) - 0x5c60da1b: implementation (from TransparentUpgradeableProxy)",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234610016576111cf908161001c8239f35b600080fdfe604060808152366103825773ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000917fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000843516146100c057600484517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b6100c8611192565b60049136831161037e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037e578235916101088361067f565b602435926101158461067f565b60443567ffffffffffffffff811161037a57610135839136908801610789565b941692156103525761014791166107e3565b803b156102cf578451907f5c60da1b000000000000000000000000000000000000000000000000000000009384835260209687848381865afa9384156102a657889461019d9189916102b2575b503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790555194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab575b610242575b8361023c6107d0565b80519101f35b8592839182525afa9182156102a65761026a9392610277575b506102646109b1565b91610a21565b5038808083818080610233565b610298919250843d861161029f575b610290818361070e565b810190610902565b903861025b565b503d610286565b61091a565b508661022e565b6102c99150863d881161029f57610290818361070e565b38610194565b60848360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b8487517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b8380fd5b73ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000907fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000833516146104395760046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b610441611192565b60049236841161067b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067b5783356104808161067f565b6024359161048d8361067f565b60443567ffffffffffffffff8111610677576104ad829136908901610789565b9316931561064e576104bf91166107e3565b813b156105ca576040517f5c60da1b000000000000000000000000000000000000000000000000000000009283825260209586838281855afa9283156102a65787936105149188916105b357503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617905560405194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab57610242578361023c6107d0565b6102c99150853d871161029f57610290818361070e565b6084846020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b856040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b8280fd5b73ffffffffffffffffffffffffffffffffffffffff81160361069d57565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106ed57604052565b6106a2565b6040810190811067ffffffffffffffff8211176106ed57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106ed57604052565b67ffffffffffffffff81116106ed57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561069d578035906107a08261074f565b926107ae604051948561070e565b8284526020838301011161069d57816000926020809301838601378301015290565b604051906107dd826106d1565b60008252565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61039081547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604080519373ffffffffffffffffffffffffffffffffffffffff9081851686521693846020820152a1811561087e577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b9081602091031261069d57516109178161067f565b90565b6040513d6000823e3d90fd5b1561092d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201527f73206e6f74206120636f6e7472616374000000000000000000000000000000006064820152fd5b604051906060820182811067ffffffffffffffff8211176106ed57604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806109179493602081519101845af43d15610a60573d91610a438361074f565b92610a51604051948561070e565b83523d6000602085013e610acd565b606091610acd565b15610a6f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b91929015610aed5750815115610ae1575090565b610917903b1515610a68565b825190915015610b005750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610b7d575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610b3c565b610bee610bd57fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b3303610d14576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe6000000000000000000000000000000000000000000000000000000008103610c515750610c49610f0f565b602081519101f35b7f4f1ef286000000000000000000000000000000000000000000000000000000008103610c865750610c81611083565b610c49565b7f8f283970000000000000000000000000000000000000000000000000000000008103610cb65750610c81610ec5565b7ff851a440000000000000000000000000000000000000000000000000000000008103610ce65750610c81610dfd565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610d1457610c81610e53565b610d1c610d3b565b6000808092368280378136915af43d82803e15610d37573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541680610df8575060206004917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156102a657600091610de0575090565b610917915060203d811161029f57610290818361070e565b905090565b610e05611192565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103541660405190602082015260208152610917816106f2565b610e5b611192565b610e63610d3b565b73ffffffffffffffffffffffffffffffffffffffff6040519116602082015260208152610917816106f2565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261069d576004356109178161067f565b610ecd611192565b3660041161069d57610efc73ffffffffffffffffffffffffffffffffffffffff610ef636610e8f565b166107e3565b604051610f08816106d1565b6000815290565b610f17611192565b3660041161069d5773ffffffffffffffffffffffffffffffffffffffff610f3d36610e8f565b1660405190610f4b826106d1565b60008252803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610ff7575b610fe3575b5050604051610f08816106d1565b610fef916102646109b1565b503880610fd5565b506000610fd0565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b3660041161069d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069d576004356110c18161067f565b60243567ffffffffffffffff811161069d576110f673ffffffffffffffffffffffffffffffffffffffff913690600401610789565b9116803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061118a57610fe3575050604051610f08816106d1565b506001610fd0565b3461069d5756fea264697066735822122045004168ba82273e43eeb6c01989363db864f4e92bc6bcc90fadfdb4a6c90d8564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x11CF SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT STOP COINBASE PUSH9 0xBA82273E43EEB6C019 DUP10 CALLDATASIZE RETURNDATASIZE 0xB8 PUSH5 0xF4E92BC6BC 0xC9 0xF 0xAD REVERT 0xB4 0xA6 0xC9 0xD DUP6 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1159:2219:28:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_payable": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 1929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory_array_string": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_6570": {
									"entryPoint": 1745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_6573": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun__fallback": {
									"entryPoint": 898,
									"id": 6750,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_changeAdmin": {
									"entryPoint": 2019,
									"id": 3631,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_dispatchAdmin": {
									"entryPoint": 3581,
									"id": 7020,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchChangeAdmin": {
									"entryPoint": 3781,
									"id": 7069,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchImplementation": {
									"entryPoint": 3667,
									"id": 7040,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeTo": {
									"entryPoint": 3855,
									"id": 7103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeToAndCall": {
									"entryPoint": 4227,
									"id": 7135,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_fallback": {
									"entryPoint": 2964,
									"id": 7000,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_fallback_3753": {
									"entryPoint": null,
									"id": 3753,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_functionDelegateCall": {
									"entryPoint": 2593,
									"id": 4304,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_implementation": {
									"entryPoint": 3387,
									"id": 6780,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_requireZeroValue": {
									"entryPoint": 4498,
									"id": 7157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 2765,
									"id": 4343,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"require_helper_stringliteral_cc2e": {
									"entryPoint": 2664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_f95f": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"revert_forward": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"update_storage_value_offsett_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_address_payable": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT STOP COINBASE PUSH9 0xBA82273E43EEB6C019 DUP10 CALLDATASIZE RETURNDATASIZE 0xB8 PUSH5 0xF4E92BC6BC 0xC9 0xF 0xAD REVERT 0xB4 0xA6 0xC9 0xD DUP6 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1159:2219:28:-:0;;;;;2629:64:13;1159:2219:28;;3656:66:12;;;1159:2219:28;2293:25;2289:561;;;;-1:-1:-1;2382:7:28;2419:54;2382:7;;;;2407:66;2403:296;;2816:23;1159:2219;;2816:23;;;;2403:296;1406:12;;:::i;:::-;1533:1;1159:2219;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;1731:22;;1727:174;;1923:5;;1159:2219;1923:5;:::i;:::-;1702:19:17;;:23;1159:2219:28;;;;;;5240:35:12;;;;1159:2219:28;5240:35:12;;;;;;;;;;;;;;;5200:150;5240:35;;;;;2403:296:28;1702:19:17;;:23;;5200:150:12;:::i;:::-;4719:66;1159:2219:28;;;;;;;;;;;5870:25:12;;;;;;1159:2219:28;;5909:15:12;;;:28;;;2403:296:28;5905:130:12;;2403:296:28;1159:2219;;;:::i;:::-;2602:83;;;;;5905:130:12;5982:35;;;;;;;;;;;;;6788:77:17;5982:35:12;;;;5905:130;1159:2219:28;;;:::i;:::-;6788:77:17;;:::i;:::-;;5905:130:12;;;;;;;;;5982:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;5909:28::-;;;;;5240:35;;;;;;;;;;;;;;:::i;:::-;;;;1159:2219:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:174;1159:2219;;;1867:23;;;;1159:2219;;;;;;;;2203:702;1159:2219;3656:66:12;;;1159:2219:28;2293:25;2289:561;;;;-1:-1:-1;2382:7:28;2419:54;2382:7;;;;2407:66;2403:296;;2816:23;1159:2219;;2816:23;;;;2403:296;1406:12;;:::i;:::-;1533:1;1524:8;;1159:2219;;;;;;1524:8;1159:2219;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1524:8;;;1159:2219;;;;:::i;:::-;;;1731:22;;1727:174;;1923:5;1159:2219;;1923:5;:::i;:::-;1702:19:17;;:23;1159:2219:28;;;;;5240:35:12;;;;1159:2219:28;5240:35:12;;;;;;;;;;;;;;;5200:150;5240:35;;;;;1702:19:17;;:23;;5200:150:12;:::i;:::-;4719:66;1159:2219:28;;;;;;;;;;;;5870:25:12;;;;;;1159:2219:28;;5909:15:12;;;:28;;;5905:130;;1159:2219:28;;;:::i;5240:35:12:-;;;;;;;;;;;;;;:::i;1159:2219:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:174;1159:2219;;;1867:23;;;;1159:2219;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1159:2219:28;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;2316:1;1159:2219;;:::o;4300:135:12:-;3656:66;;;;4364:35;1159:2219:28;;;;;;;;;;;;;;;;;;4364:35:12;4051:22;;1159:2219:28;;;;;;;4300:135:12:o;1159:2219:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7058:325:17:-;7265:25;7058:325;7307:69;7058:325;;7265:25;;;;;;;;1159:2219:28;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;7265:25:17;;1159:2219:28;;;7307:69:17;:::i;1159:2219:28:-;;;7307:69:17;:::i;1159:2219:28:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;7671:628:17;;;;7875:418;;;1159:2219:28;;;7906:22:17;7902:286;;8201:17;;:::o;7902:286::-;8113:60;1702:19;;:23;;8113:60;:::i;7875:418::-;1159:2219:28;;;;-1:-1:-1;8980:21:17;:17;;9152:142;;;;;;;8976:379;1159:2219:28;;9324:20:17;;;;1159:2219:28;;9324:20:17;;;;1159:2219:28;;;;;;;;;9000:1:17;1159:2219:28;;;;;;;;;;;;9000:1:17;1159:2219:28;;;;;;;;;;;9324:20:17;;;;1159:2219:28;;;;;;;;;;;;;;;-1:-1:-1;1159:2219:28;;;;3487:1089:31;3548:25;3656:66:12;;;1159:2219:28;;;;3656:66:12;1159:2219:28;;;;3548:25:31;:10;:25;3656:66:12;;-1:-1:-1;3637:7:31;;;3674:47;3662:59;;3674:47;;3747:20;;;:::i;:::-;4437:75;;;;;;3658:766;3804:54;3792:66;;3804:54;;3884:27;;;:::i;:::-;3658:766;;3788:636;3948:49;3936:61;;3948:49;;4023:22;;;:::i;3932:492::-;4082:43;4070:55;;4082:43;;4151:16;;;:::i;4066:358::-;4204:52;4192:64;4204:52;;4282:25;;:::i;4188:236::-;2407:17:13;;:::i;:::-;1018:819;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:303:28;1159:2219;3656:66:12;1030;3656;1159:2219:28;3248:28;3244:80;;3656:66:12;1186:38:29;;3656:66:12;4719;3656;1159:2219:28;;;1186:38:29;;;;1159:2219:28;1186:38:29;;;;;;;;;-1:-1:-1;1186:38:29;;;3333:36:28;3073:303;:::o;1186:38:29:-;;;;;;;;;;;;;;:::i;3244:80:28:-;3292:21;;;:::o;4927:165:31:-;4970:12;;:::i;:::-;1159:2219:28;3656:66:12;;1159:2219:28;;;5068:17:31;;;;1159:2219:28;5068:17:31;;;;;;:::i;5452:198::-;5504:12;;:::i;:::-;5583:17;;:::i;:::-;1159:2219:28;;;;;5617:26:31;;;1159:2219:28;5617:26:31;;;;;;:::i;1159:2219:28:-;;;;;;;;;;;;;:::i;5761:216:31:-;5810:12;;:::i;:::-;5894:8;5903:1;1159:2219:28;;;5941:8:31;1159:2219:28;5883:35:31;5894:8;5883:35;:::i;:::-;1159:2219:28;5941:8:31;:::i;:::-;1159:2219:28;;;;;:::i;:::-;5894:8:31;1159:2219:28;;5761:216:31;:::o;6052:255::-;6099:12;;:::i;:::-;6192:8;6201:1;1159:2219:28;;;;6181:35:31;6192:8;6181:35;:::i;:::-;1159:2219:28;;;;;;;:::i;:::-;6192:8:31;1159:2219:28;;1702:19:17;;:23;1159:2219:28;;1030:66:12;1159:2219:28;;;;;;;;1889:27:12;;6192:8:31;1889:27:12;;1159:2219:28;;2208:15:12;;;:28;;;6052:255:31;2204:112:12;;6052:255:31;1159:2219:28;;;;;;;:::i;2204:112:12:-;6788:77:17;1159:2219:28;;;:::i;6788:77:17:-;;2204:112:12;;;;2208:28;;6192:8:31;2208:28:12;;1159:2219:28;;;;;;;;6201:1:31;1159:2219:28;;;;;;;;;;;;;;;;;;;6591:254:31;6729:8;6738:1;1159:2219:28;;;;;6729:8:31;1159:2219:28;;;;6738:1:31;1159:2219:28;;;;:::i;:::-;;;;;;;;;;6729:8:31;;1159:2219:28;6738:1:31;1159:2219:28;;:::i;:::-;;;1702:19:17;;:23;1159:2219:28;;1030:66:12;1159:2219:28;;;;;;;;1889:27:12;;-1:-1:-1;1889:27:12;;1159:2219:28;;2208:15:12;;;:28;;;2204:112;;1159:2219:28;;;;;;;:::i;2208:28:12:-;;6813:4:31;2208:28:12;;7328:78:31;7384:9;1159:2219:28;;7328:78:31:o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"As the underlying proxy implementation (TransparentUpgradeableProxy) allows the admin to call the implementation, care must be taken to avoid proxy selector collisions. Implementation selectors must not conflict with the proxy selectors. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. The proxy selectors are: - 0xcf7a1d77: initialize - 0x3659cfe6: upgradeTo (from TransparentUpgradeableProxy) - 0x4f1ef286: upgradeToAndCall (from TransparentUpgradeableProxy) - 0x8f283970: changeAdmin (from TransparentUpgradeableProxy) - 0xf851a440: admin (from TransparentUpgradeableProxy) - 0x5c60da1b: implementation (from TransparentUpgradeableProxy)\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":\"TransparentUpgradeableBeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0x366f201163ff5b941a61d5d2cd5966f25e332f52b197335cb68670c5fc83ba12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://485725a0c56e49d07de7233293e85fe1a586ddd70b07f1b14af5819874819da9\",\"dweb:/ipfs/QmRgQV9yzosT37zGpg6wb6Ff7q8Ux4Ttryo1RdPWaAfAED\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/openzeppelin/BeaconProxy.sol": {
				"BeaconProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234610016576102c8908161001c8239f35b600080fdfe6080806040523661011d5760208160048173ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054167f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa90811561011157600091610082575b506101f5565b6020903d8211610109575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff8211176100dc576100d6935060405201610214565b3861007c565b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b3d915061008d565b6040513d6000823e3d90fd5b6004602073ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156101115760009161019957506101f5565b60203d81116101ee575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f820116820182811067ffffffffffffffff8211176100dc576100d69350604052810190610266565b503d6101a3565b6000808092368280378136915af43d82803e15610210573d90f35b3d90fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060209101126102615760805173ffffffffffffffffffffffffffffffffffffffff811681036102615790565b600080fd5b90816020910312610261575173ffffffffffffffffffffffffffffffffffffffff81168103610261579056fea264697066735822122039bf2e94b736b3d248e391bed996284c97ca30fa437e5be767e9a2684ce77ee064736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x2C8 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x11D JUMPI PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x82 JUMPI JUMPDEST POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 SWAP1 RETURNDATASIZE DUP3 GT PUSH2 0x109 JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE ADD PUSH2 0x214 JUMP JUMPDEST CODESIZE PUSH2 0x7C JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x199 JUMPI POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1EE JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x266 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x210 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x261 JUMPI PUSH1 0x80 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x261 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xBF 0x2E SWAP5 0xB7 CALLDATASIZE 0xB3 0xD2 BASEFEE 0xE3 SWAP2 0xBE 0xD9 SWAP7 0x28 0x4C SWAP8 0xCA ADDRESS STATICCALL NUMBER PUSH31 0x5BE767E9A2684CE77EE064736F6C6343000813003300000000000000000000 ",
							"sourceMap": "779:965:29:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory_676": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_delegate": {
									"entryPoint": 501,
									"id": 3734,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_fallback": {
									"entryPoint": 285,
									"id": 3753,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040523661011d5760208160048173ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054167f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa90811561011157600091610082575b506101f5565b6020903d8211610109575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff8211176100dc576100d6935060405201610214565b3861007c565b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b3d915061008d565b6040513d6000823e3d90fd5b6004602073ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156101115760009161019957506101f5565b60203d81116101ee575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f820116820182811067ffffffffffffffff8211176100dc576100d69350604052810190610266565b503d6101a3565b6000808092368280378136915af43d82803e15610210573d90f35b3d90fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060209101126102615760805173ffffffffffffffffffffffffffffffffffffffff811681036102615790565b600080fd5b90816020910312610261575173ffffffffffffffffffffffffffffffffffffffff81168103610261579056fea264697066735822122039bf2e94b736b3d248e391bed996284c97ca30fa437e5be767e9a2684ce77ee064736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x11D JUMPI PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x82 JUMPI JUMPDEST POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 SWAP1 RETURNDATASIZE DUP3 GT PUSH2 0x109 JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE ADD PUSH2 0x214 JUMP JUMPDEST CODESIZE PUSH2 0x7C JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x199 JUMPI POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1EE JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x266 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x210 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x261 JUMPI PUSH1 0x80 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x261 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xBF 0x2E SWAP5 0xB7 CALLDATASIZE 0xB3 0xD2 BASEFEE 0xE3 SWAP2 0xBE 0xD9 SWAP7 0x28 0x4C SWAP8 0xCA ADDRESS STATICCALL NUMBER PUSH31 0x5BE767E9A2684CE77EE064736F6C6343000813003300000000000000000000 ",
							"sourceMap": "779:965:29:-:0;;;;;2629:64:13;779:965:29;1186:38;4719:66:12;1186:38:29;4719:66:12;779:965:29;4719:66:12;;779:965:29;;1186:38;;;;;;;;;-1:-1:-1;1186:38:29;;;779:965;2407:17:13;;:::i;1186:38:29:-;;;;;;;;;779:965;;;;;;;;;;;;;;;;1186:38;779:965;;;;1186:38;;:::i;:::-;;;;779:965;;;;;;;1186:38;779:965;;1186:38;;;-1:-1:-1;1186:38:29;;;779:965;;;-1:-1:-1;779:965:29;;;;;2322:110:13;1186:38:29;;779:965;4719:66:12;;779:965:29;;;1186:38;;;;779:965;1186:38;;;;;;;;;-1:-1:-1;1186:38:29;;;2407:17:13;;:::i;1186:38:29:-;;;;;;;;779:965;;;;;;;;;;;;;;;;1186:38;779:965;;;;1186:38;;;;:::i;:::-;;;;;948:895:13;1018:819;;;;;;;;;;;;;;;;;;;;;;;;;;;779:965:29;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;779:965:29;;;;;;;;;;;;;;;;;;;;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/openzeppelin/ERC1967Proxy.sol": {
				"ERC1967Proxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460145760e7908161001a8239f35b600080fdfe60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea2646970667358221220355c45fadb1c32413d2874fdd891b72fcabdc373b997372fb1727324569cc6fa64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x14 JUMPI PUSH1 0xE7 SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x5F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0x5C GASLIMIT STATICCALL 0xDB SHR ORIGIN COINBASE RETURNDATASIZE 0x28 PUSH21 0xFDD891B72FCABDC373B997372FB1727324569CC6FA PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "740:267:30:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea2646970667358221220355c45fadb1c32413d2874fdd891b72fcabdc373b997372fb1727324569cc6fa64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x5F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD 0x5C GASLIMIT STATICCALL 0xDB SHR ORIGIN COINBASE RETURNDATASIZE 0x28 PUSH21 0xFDD891B72FCABDC373B997372FB1727324569CC6FA PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "740:267:30:-:0;;;;;;;1030:66:12;;;;-1:-1:-1;740:267:30;;;;1018:819:13;;;740:267:30;;1018:819:13;;;;;;;;;;;;;;;;;740:267:30;1030:66:12;;;;-1:-1:-1;740:267:30;;;;1018:819:13;;;740:267:30;;1018:819:13;;;;;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol": {
				"ITransparentUpgradeableProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and some of its functions are implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and some of its functions are implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":\"ITransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TransparentUpgradeableProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that is upgradeable by an admin. Unlike the original OpenZeppelin implementation, this contract does not prevent the admin from calling the implementation. This potentially exposes the admin to a proxy selector attack. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. When using this contract, you must ensure that the implementation function selectors do not clash with the proxy selectors. The proxy selectors are: - 0x3659cfe6: upgradeTo - 0x4f1ef286: upgradeToAndCall - 0x8f283970: changeAdmin - 0xf851a440: admin - 0x5c60da1b: implementation NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523461001657610ac4908161001c8239f35b600080fdfe60806040523661016c577fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163303610167576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b602081519101f35b7f4f1ef2860000000000000000000000000000000000000000000000000000000081036100d957506100d46109cb565b61009c565b7f8f28397000000000000000000000000000000000000000000000000000000000810361010957506100d4610474565b7ff851a44000000000000000000000000000000000000000000000000000000000810361013957506100d4610303565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610167576100d461035c565b6101ff565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1633036101ff576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15610252573d90f35b3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176102a157604052565b610256565b6020810190811067ffffffffffffffff8211176102a157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176102a157604052565b61030b610a87565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354166040519060208201526020815261035981610285565b90565b610364610a87565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166040519060208201526020815261035981610285565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103d557565b600080fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60209101126103d55760043573ffffffffffffffffffffffffffffffffffffffff811681036103d55790565b67ffffffffffffffff81116102a157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6040519061046e826102a6565b60008252565b61047c610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff806104a3366103da565b167fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519084168152846020820152a1811561052d577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055610359610461565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b6105b9610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff6105df366103da565b16604051906105ed826102a6565b60008252803b156106ae577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906106a6575b61068c575b5050604051610685816102a6565b6000815290565b61069e916106986107e8565b91610858565b503880610677565b506000610672565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b803b156106ae5773ffffffffffffffffffffffffffffffffffffffff81167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906107e0575b6107d1575050565b6107dd916106986107e8565b50565b5060016107c9565b604051906060820182811067ffffffffffffffff8211176102a157604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806103599493602081519101845af43d15610897573d9161087a83610427565b9261088860405194856102c2565b83523d6000602085013e610904565b606091610904565b156108a657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156109245750815115610918575090565b610359903b151561089f565b8251909150156109375750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106109b4575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610973565b366004116103d55760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d557610a056103b2565b6024359067ffffffffffffffff82116103d557366023830112156103d557816004013591610a3283610427565b91610a4060405193846102c2565b83835236602485840101116103d5576000602085610a7f96602473ffffffffffffffffffffffffffffffffffffffff9601838801378501015216610732565b610359610461565b346103d55756fea2646970667358221220f115ae5cf0d671011819cd6f6a56e6c13f6d28173d31f9f4fe3ebd8c73e0864f64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0xAC4 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x16C JUMPI PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x167 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xD9 JUMPI POP PUSH2 0xD4 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x109 JUMPI POP PUSH2 0xD4 PUSH2 0x474 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x139 JUMPI POP PUSH2 0xD4 PUSH2 0x303 JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0x167 JUMPI PUSH2 0xD4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x1FF JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x252 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x30B PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x364 PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3D5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x3D5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x3D5 JUMPI SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2A1 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x46E DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x47C PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x4A3 CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP2 PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP5 SLOAD SWAP3 DUP2 MLOAD SWAP1 DUP5 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x52D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x5B9 PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5DF CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0x5ED DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6A6 JUMPI JUMPDEST PUSH2 0x68C JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x685 DUP2 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x69E SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST SWAP2 PUSH2 0x858 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x677 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x7E0 JUMPI JUMPDEST PUSH2 0x7D1 JUMPI POP POP JUMP JUMPDEST PUSH2 0x7DD SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x359 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x87A DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP3 PUSH2 0x888 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2C2 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x904 JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x904 JUMP JUMPDEST ISZERO PUSH2 0x8A6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x924 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x918 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x359 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x89F JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x937 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0x973 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3D5 JUMPI PUSH2 0xA05 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3D5 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3D5 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0xA32 DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP2 PUSH2 0xA40 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2C2 JUMP JUMPDEST DUP4 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP6 DUP5 ADD ADD GT PUSH2 0x3D5 JUMPI PUSH1 0x0 PUSH1 0x20 DUP6 PUSH2 0xA7F SWAP7 PUSH1 0x24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE AND PUSH2 0x732 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST CALLVALUE PUSH2 0x3D5 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL ISZERO 0xAE 0x5C CREATE 0xD6 PUSH18 0x11819CD6F6A56E6C13F6D28173D31F9F4FE RETURNDATACOPY 0xBD DUP13 PUSH20 0xE0864F64736F6C63430008130033000000000000 ",
							"sourceMap": "2827:4581:31:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_payable": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_address_payable": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_array_string": {
									"entryPoint": 1121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_string": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_3829": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_3831": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun__fallback": {
									"entryPoint": null,
									"id": 3753,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_dispatchAdmin": {
									"entryPoint": 771,
									"id": 7020,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchChangeAdmin": {
									"entryPoint": 1140,
									"id": 7069,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchImplementation": {
									"entryPoint": 860,
									"id": 7040,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeTo": {
									"entryPoint": 1457,
									"id": 7103,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeToAndCall": {
									"entryPoint": 2507,
									"id": 7135,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_fallback": {
									"entryPoint": 364,
									"id": 7000,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_functionDelegateCall": {
									"entryPoint": 2136,
									"id": 4304,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_requireZeroValue": {
									"entryPoint": 2695,
									"id": 7157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_upgradeToAndCall": {
									"entryPoint": 1842,
									"id": 3518,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 2308,
									"id": 4343,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"require_helper_stringliteral_cc2e": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523661016c577fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163303610167576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b602081519101f35b7f4f1ef2860000000000000000000000000000000000000000000000000000000081036100d957506100d46109cb565b61009c565b7f8f28397000000000000000000000000000000000000000000000000000000000810361010957506100d4610474565b7ff851a44000000000000000000000000000000000000000000000000000000000810361013957506100d4610303565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610167576100d461035c565b6101ff565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1633036101ff576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15610252573d90f35b3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176102a157604052565b610256565b6020810190811067ffffffffffffffff8211176102a157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176102a157604052565b61030b610a87565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354166040519060208201526020815261035981610285565b90565b610364610a87565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166040519060208201526020815261035981610285565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103d557565b600080fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60209101126103d55760043573ffffffffffffffffffffffffffffffffffffffff811681036103d55790565b67ffffffffffffffff81116102a157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6040519061046e826102a6565b60008252565b61047c610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff806104a3366103da565b167fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519084168152846020820152a1811561052d577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055610359610461565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b6105b9610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff6105df366103da565b16604051906105ed826102a6565b60008252803b156106ae577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906106a6575b61068c575b5050604051610685816102a6565b6000815290565b61069e916106986107e8565b91610858565b503880610677565b506000610672565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b803b156106ae5773ffffffffffffffffffffffffffffffffffffffff81167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906107e0575b6107d1575050565b6107dd916106986107e8565b50565b5060016107c9565b604051906060820182811067ffffffffffffffff8211176102a157604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806103599493602081519101845af43d15610897573d9161087a83610427565b9261088860405194856102c2565b83523d6000602085013e610904565b606091610904565b156108a657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156109245750815115610918575090565b610359903b151561089f565b8251909150156109375750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106109b4575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610973565b366004116103d55760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d557610a056103b2565b6024359067ffffffffffffffff82116103d557366023830112156103d557816004013591610a3283610427565b91610a4060405193846102c2565b83835236602485840101116103d5576000602085610a7f96602473ffffffffffffffffffffffffffffffffffffffff9601838801378501015216610732565b610359610461565b346103d55756fea2646970667358221220f115ae5cf0d671011819cd6f6a56e6c13f6d28173d31f9f4fe3ebd8c73e0864f64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x16C JUMPI PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x167 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xD9 JUMPI POP PUSH2 0xD4 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x109 JUMPI POP PUSH2 0xD4 PUSH2 0x474 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x139 JUMPI POP PUSH2 0xD4 PUSH2 0x303 JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0x167 JUMPI PUSH2 0xD4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x1FF JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x252 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x30B PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x364 PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3D5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x3D5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x3D5 JUMPI SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2A1 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x46E DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x47C PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x4A3 CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP2 PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP5 SLOAD SWAP3 DUP2 MLOAD SWAP1 DUP5 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x52D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x5B9 PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5DF CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0x5ED DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6A6 JUMPI JUMPDEST PUSH2 0x68C JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x685 DUP2 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x69E SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST SWAP2 PUSH2 0x858 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x677 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x7E0 JUMPI JUMPDEST PUSH2 0x7D1 JUMPI POP POP JUMP JUMPDEST PUSH2 0x7DD SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x359 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x87A DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP3 PUSH2 0x888 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2C2 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x904 JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x904 JUMP JUMPDEST ISZERO PUSH2 0x8A6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x924 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x918 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x359 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x89F JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x937 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0x973 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3D5 JUMPI PUSH2 0xA05 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3D5 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3D5 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0xA32 DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP2 PUSH2 0xA40 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2C2 JUMP JUMPDEST DUP4 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP6 DUP5 ADD ADD GT PUSH2 0x3D5 JUMPI PUSH1 0x0 PUSH1 0x20 DUP6 PUSH2 0xA7F SWAP7 PUSH1 0x24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE AND PUSH2 0x732 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST CALLVALUE PUSH2 0x3D5 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL ISZERO 0xAE 0x5C CREATE 0xD6 PUSH18 0x11819CD6F6A56E6C13F6D28173D31F9F4FE RETURNDATACOPY 0xBD DUP13 PUSH20 0xE0864F64736F6C63430008130033000000000000 ",
							"sourceMap": "2827:4581:31:-:0;;;;2629:64:13;2827:4581:31;3656:66:12;;2827:4581:31;;3548:10;:25;2827:4581;;-1:-1:-1;3637:7:31;;;3674:47;3662:59;;3674:47;;3747:20;;;:::i;:::-;4437:75;;;;;;3658:766;3804:54;3792:66;;3804:54;;3884:27;;;:::i;:::-;3658:766;;3788:636;3948:49;3936:61;;3948:49;;4023:22;;;:::i;3932:492::-;4082:43;4070:55;;4082:43;;4151:16;;;:::i;4066:358::-;4204:52;4192:64;4204:52;;4282:25;;:::i;4188:236::-;;:::i;3487:1089::-;3656:66:12;;2827:4581:31;;3548:10;:25;2827:4581;;-1:-1:-1;3637:7:31;;;3674:47;3662:59;;3674:47;;3747:20;;;:::i;3544:1026::-;2827:4581;1030:66:12;3656;2827:4581:31;-1:-1:-1;1018:819:13;;;;;;;;;;;;;;;;;;;;;;;;;;2827:4581:31;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;4927:165::-;4970:12;;:::i;:::-;2827:4581;3656:66:12;;2827:4581:31;;;5068:17;;;;2827:4581;5068:17;;;;;;:::i;:::-;4927:165;:::o;5452:198::-;5504:12;;:::i;:::-;2827:4581;1030:66:12;3656;2827:4581:31;;;5617:26;;;;2827:4581;5617:26;;;;;;:::i;2827:4581::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;5894:8;2827:4581;;:::o;5761:216::-;5810:12;;:::i;:::-;5894:8;5903:1;2827:4581;;;;5894:8;5883:35;5894:8;5883:35;:::i;:::-;2827:4581;3656:66:12;;4364:35;2827:4581:31;3656:66:12;;2827:4581:31;;;;;;;;;;;;;4364:35:12;4051:22;;2827:4581:31;;;;;;;;;:::i;:::-;;;;;;;;5903:1;2827:4581;;;;;;;;;;;;;;;;;;;6052:255;6099:12;;:::i;:::-;6192:8;6201:1;2827:4581;;;;6181:35;6192:8;6181:35;:::i;:::-;2827:4581;;;;;;;:::i;:::-;6192:8;2827:4581;;1702:19:17;;:23;2827:4581:31;;1030:66:12;2827:4581:31;;;;;;;;1889:27:12;;6192:8:31;1889:27:12;;2827:4581:31;;2208:15:12;;;:28;;;6052:255:31;2204:112:12;;6052:255:31;2827:4581;;;;;;;:::i;:::-;6192:8;2827:4581;;6052:255;:::o;2204:112:12:-;6788:77:17;2827:4581:31;;;:::i;:::-;6788:77:17;;:::i;:::-;;2204:112:12;;;;2208:28;;6192:8:31;2208:28:12;;2827:4581:31;;;;;;;;6201:1;2827:4581;;;;;;;;;;;;;;;;;;;2057:265:12;1702:19:17;;:23;2827:4581:31;;;;;1030:66:12;2827:4581:31;;;;;;;;1889:27:12;-1:-1:-1;1889:27:12;;2827:4581:31;;2208:15:12;;;:28;;;2057:265;2204:112;;2057:265;;:::o;2204:112::-;6788:77:17;2827:4581:31;;;:::i;6788:77:17:-;;2057:265:12:o;2208:28::-;;6813:4:31;2208:28:12;;2827:4581:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7058:325:17:-;7265:25;7058:325;7307:69;7058:325;;7265:25;;;;;;;;2827:4581:31;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;7265:25:17;;2827:4581:31;;;7307:69:17;:::i;2827:4581:31:-;;;7307:69:17;:::i;2827:4581:31:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;7671:628:17;;;;7875:418;;;2827:4581:31;;;7906:22:17;7902:286;;8201:17;;:::o;7902:286::-;8113:60;1702:19;;:23;;8113:60;:::i;7875:418::-;2827:4581:31;;;;-1:-1:-1;8980:21:17;:17;;9152:142;;;;;;;8976:379;2827:4581:31;;9324:20:17;;;;2827:4581:31;;9324:20:17;;;;2827:4581:31;;;;;;;;;9000:1:17;2827:4581:31;;;;;;;;;;;;9000:1:17;2827:4581:31;;;;;;;;;;;9324:20:17;;;;2827:4581:31;;;;;;;;;;;;;;;-1:-1:-1;2827:4581:31;;;;6591:254;6729:8;6738:1;2827:4581;;;;;6729:8;2827:4581;;;;;;:::i;:::-;;;;;;;;;6729:8;2827:4581;;;;;;;;6738:1;2827:4581;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;6729:8;2827:4581;;;;;;;;6729:8;2827:4581;;6813:4;2827:4581;;;;;;;;;;;;;;6813:4;:::i;:::-;2827:4581;;:::i;7328:78::-;7384:9;2827:4581;;7328:78::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. Unlike the original OpenZeppelin implementation, this contract does not prevent the admin from calling the implementation. This potentially exposes the admin to a proxy selector attack. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. When using this contract, you must ensure that the implementation function selectors do not clash with the proxy selectors. The proxy selectors are: - 0x3659cfe6: upgradeTo - 0x4f1ef286: upgradeToAndCall - 0x8f283970: changeAdmin - 0xf851a440: admin - 0x5c60da1b: implementation NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/ERC721/ERC721BaseToken.sol": {
				"ERC721BaseToken": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "batchBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "ownership",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenBaseURI",
									"type": "string"
								}
							],
							"name": "setBaseMetadataURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenContractURI",
									"type": "string"
								}
							],
							"name": "setContractURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setDefaultRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"name": "setNameAndSymbol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setTokenRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"batchBurn(uint256[])": {
								"params": {
									"tokenIds": "Array of token ids to burn"
								}
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "Id of token to burn"
								}
							},
							"contractURI()": {
								"returns": {
									"_0": "Contract URI of token's URI"
								}
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"setBaseMetadataURI(string)": {
								"params": {
									"tokenBaseURI": "New base URI of token's URI"
								}
							},
							"setContractURI(string)": {
								"params": {
									"tokenContractURI": "New contract URI of token's URI"
								}
							},
							"setDefaultRoyalty(address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment"
								}
							},
							"setNameAndSymbol(string,string)": {
								"params": {
									"tokenName": "Name of token.",
									"tokenSymbol": "Symbol of token."
								}
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment",
									"tokenId": "The token id to set the royalty information for"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "Interface id"
								},
								"returns": {
									"_0": "True if supported"
								}
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"batchBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenContractURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"setNameAndSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setTokenRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"batchBurn(uint256[])\":{\"params\":{\"tokenIds\":\"Array of token ids to burn\"}},\"burn(uint256)\":{\"params\":{\"tokenId\":\"Id of token to burn\"}},\"contractURI()\":{\"returns\":{\"_0\":\"Contract URI of token's URI\"}},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setBaseMetadataURI(string)\":{\"params\":{\"tokenBaseURI\":\"New base URI of token's URI\"}},\"setContractURI(string)\":{\"params\":{\"tokenContractURI\":\"New contract URI of token's URI\"}},\"setDefaultRoyalty(address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\"}},\"setNameAndSymbol(string,string)\":{\"params\":{\"tokenName\":\"Name of token.\",\"tokenSymbol\":\"Symbol of token.\"}},\"setTokenRoyalty(uint256,address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\",\"tokenId\":\"The token id to set the royalty information for\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface id\"},\"returns\":{\"_0\":\"True if supported\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"batchBurn(uint256[])\":{\"notice\":\"Allows the owner of the tokens to burn their tokens.\"},\"burn(uint256)\":{\"notice\":\"Allows the owner of the token to burn their token.\"},\"constructor\":{\"notice\":\"Deploy contract.\"},\"contractURI()\":{\"notice\":\"Get the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata\"},\"name()\":{\"notice\":\"Override the ERC721A name function.\"},\"setBaseMetadataURI(string)\":{\"notice\":\"Update the base URI of token's URI.\"},\"setContractURI(string)\":{\"notice\":\"Update the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata\"},\"setDefaultRoyalty(address,uint96)\":{\"notice\":\"Sets the royalty information that all ids in this contract will default to.\"},\"setNameAndSymbol(string,string)\":{\"notice\":\"Set name and symbol of token.\"},\"setTokenRoyalty(uint256,address,uint96)\":{\"notice\":\"Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check interface support.\"},\"symbol()\":{\"notice\":\"Override the ERC721A symbol function.\"}},\"notice\":\"A standard base implementation of ERC-721 for use in Sequence library contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/ERC721BaseToken.sol\":\"ERC721BaseToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/chiru-labs/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"lib/chiru-labs/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]},\"lib/chiru-labs/erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xfa5590db00a9bf0f85d2c10f2c901d5a3d49ecb1e64e5b6afe9a771496a41698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42616f12c7956e0ccefb690bf2a503986710c54544a36898b1ecc5d226373c4d\",\"dweb:/ipfs/QmU6vn637MDzUjsGih3fnWYf5CjcMknQUDXQwYjLNPX8ig\"]},\"lib/chiru-labs/erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x56fa15ba9a351f0be2728ff2569c8ce6bc187cbf2c027fece17442a682f49079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e424f0290d7ba66e451b3d8e490f5bac0bf0105b2af467513b2ffecb7065a9\",\"dweb:/ipfs/QmbCvzT7vep5gyBNqkHrD46pxZVUHHzaCZUpgwgWkBw78Y\"]},\"lib/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"lib/openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/tokens/ERC721/ERC721BaseToken.sol\":{\"keccak256\":\"0xa58147a7928fa565edf8b84c20295042d392e8533f08909b9d0491cd21737c36\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9a675234058bd9e6f7155bbd12c2a624413a352fd3417b5fc851ca4dcf3fcfb\",\"dweb:/ipfs/QmWECr1hVYjob6vGctmVTR5dWYD58gxfG2btPfc833L4bM\"]},\"src/tokens/common/ERC2981Controlled.sol\":{\"keccak256\":\"0x4ed96fc921b717206c4d0b3ca82e46a852ff7873f93fe1db44593ae55b6ea41a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://136802a1cb1615af11f766782fcb01144f9bf8c124b86e1f66e876bb3be326c7\",\"dweb:/ipfs/QmYQJ1Em4XBaLe6xChrgB2TLJW1V2nbRJp1JMCTDuEjr62\"]},\"src/tokens/common/IERC2981Controlled.sol\":{\"keccak256\":\"0x27ed5643239353cebed9cc45d42d086a8e270f9f647fa6cd3a9315515319fa5a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://634b240b478d0a2d7d22ebe8f2850b6f3547ab4c5675bc17ac10c3e978730f67\",\"dweb:/ipfs/QmYH6fimhwEv7ZTER1MHdiWFcu4cKkskdSbgFawJqTmP85\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {
							"batchBurn(uint256[])": {
								"notice": "Allows the owner of the tokens to burn their tokens."
							},
							"burn(uint256)": {
								"notice": "Allows the owner of the token to burn their token."
							},
							"constructor": {
								"notice": "Deploy contract."
							},
							"contractURI()": {
								"notice": "Get the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata"
							},
							"name()": {
								"notice": "Override the ERC721A name function."
							},
							"setBaseMetadataURI(string)": {
								"notice": "Update the base URI of token's URI."
							},
							"setContractURI(string)": {
								"notice": "Update the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata"
							},
							"setDefaultRoyalty(address,uint96)": {
								"notice": "Sets the royalty information that all ids in this contract will default to."
							},
							"setNameAndSymbol(string,string)": {
								"notice": "Set name and symbol of token."
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"notice": "Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id"
							},
							"supportsInterface(bytes4)": {
								"notice": "Check interface support."
							},
							"symbol()": {
								"notice": "Override the ERC721A symbol function."
							}
						},
						"notice": "A standard base implementation of ERC-721 for use in Sequence library contracts.",
						"version": 1
					}
				}
			},
			"src/tokens/ERC721/presets/items/ERC721Items.sol": {
				"ERC721Items": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "batchBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "ownership",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenBaseURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenContractURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "royaltyReceiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "royaltyFeeNumerator",
									"type": "uint96"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenBaseURI",
									"type": "string"
								}
							],
							"name": "setBaseMetadataURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenContractURI",
									"type": "string"
								}
							],
							"name": "setContractURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setDefaultRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"name": "setNameAndSymbol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setTokenRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"batchBurn(uint256[])": {
								"params": {
									"tokenIds": "Array of token ids to burn"
								}
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "Id of token to burn"
								}
							},
							"contractURI()": {
								"returns": {
									"_0": "Contract URI of token's URI"
								}
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"initialize(address,string,string,string,string,address,uint96)": {
								"details": "This should be called immediately after deployment.",
								"params": {
									"owner": "The owner of the contract",
									"royaltyFeeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"royaltyReceiver": "Address of who should be sent the royalty payment",
									"tokenBaseURI": "Base URI of the token",
									"tokenContractURI": "Contract URI of the token",
									"tokenName": "Name of the token",
									"tokenSymbol": "Symbol of the token"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"mint(address,uint256)": {
								"params": {
									"amount": "Amount of tokens to mint.",
									"to": "Address to mint tokens to."
								}
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"setBaseMetadataURI(string)": {
								"params": {
									"tokenBaseURI": "New base URI of token's URI"
								}
							},
							"setContractURI(string)": {
								"params": {
									"tokenContractURI": "New contract URI of token's URI"
								}
							},
							"setDefaultRoyalty(address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment"
								}
							},
							"setNameAndSymbol(string,string)": {
								"params": {
									"tokenName": "Name of token.",
									"tokenSymbol": "Symbol of token."
								}
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment",
									"tokenId": "The token id to set the royalty information for"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "Interface id"
								},
								"returns": {
									"_0": "True if supported"
								}
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"allocate_memory_array_string": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_string_storage_9740": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"clean_up_bytearray_end_slots_string_storage_3520": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_string_to_string": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523462000146576200001462000161565b6200001e62000161565b81516001600160401b038111620001405762000047816200004160025462000185565b620001c2565b602080601f8311600114620000af575081906200008294600092620000a3575b50508160011b916000199060031b1c19161760025562000274565b6000805533608052604051613eaa908162000368823960805181613a000152f35b01519050388062000067565b60026000529193601f1985167f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace936000905b82821062000127575050916001939186620000829794106200010d575b505050811b0160025562000274565b015160001960f88460031b161c19169055388080620000fe565b80600186978294978701518155019601940190620000e1565b6200014b565b600080fd5b634e487b7160e01b600052604160045260246000fd5b60405190602082016001600160401b03811183821017620001405760405260008252565b90600182811c92168015620001b7575b6020831014620001a157565b634e487b7160e01b600052602260045260246000fd5b91607f169162000195565b601f8111620001cf575050565b6000906002825260208220906020601f850160051c8301941062000210575b601f0160051c01915b8281106200020457505050565b818155600101620001f7565b9092508290620001ee565b601f811162000228575050565b6000906003825260208220906020601f850160051c8301941062000269575b601f0160051c01915b8281106200025d57505050565b81815560010162000250565b909250829062000247565b80519091906001600160401b0381116200014057620002a0816200029a60035462000185565b6200021b565b602080601f8311600114620002df5750819293600092620002d3575b50508160011b916000199060031b1c191617600355565b015190503880620002bc565b6003600052601f198316949091907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b926000905b8782106200034e57505083600195961062000334575b505050811b01600355565b015160001960f88460031b161c1916905538808062000329565b806001859682949686015181550195019301906200031356fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461026757806304634d8d1461026257806306fdde031461025d578063081812fc14610258578063095ea7b31461025357806318160ddd1461024e57806323b872dd14610249578063248a9ca3146102445780632a55205a1461023f5780632f2ff15d1461023a57806336568abe1461023557806340c10f191461023057806342842e0e1461022b57806342966c68146102265780635944c753146102215780635a4462151461021c5780635bbb2177146102175780636352211e1461021257806370a082311461020d5780637e518ec8146102085780638462151c146102035780639010d07c146101fe57806391d14854146101f9578063938e3d7b146101f457806395d89b41146101ef57806398dd69c8146101ea57806399a2557a146101e5578063a217fddf146101e0578063a22cb465146101db578063b88d4fde146101d6578063c23dc68f146101d1578063c87b56dd146101cc578063ca15c873146101c7578063d547741f146101c2578063dc8e92ea146101bd578063e8a3d485146101b85763e985e9c5146101b357600080fd5b611e3a565b611d93565b611d0c565b611ccd565b611ca1565b611b27565b611ab5565b611a5a565b61198b565b61196f565b6117df565b611741565b61169a565b61159b565b61153b565b6114e8565b61135c565b611222565b6111cc565b611190565b61112a565b610f60565b610cee565b610cd2565b610caf565b610b9f565b610ad9565b610996565b6108c5565b610896565b610884565b61081f565b610700565b610686565b610587565b6104e7565b61029b565b7fffffffff0000000000000000000000000000000000000000000000000000000081160361029657565b600080fd5b346102965760206003193601126102965761031d6004356102bb8161026c565b7fffffffff000000000000000000000000000000000000000000000000000000008116807f40c10f190000000000000000000000000000000000000000000000000000000014918215610321575b505060405190151581529081906020820190565b0390f35b7fc21b8f28000000000000000000000000000000000000000000000000000000008214925090821561041e575b821561038d575b50811561037c575b811561036c575b503880610309565b6103769150613d0e565b38610364565b905061038781613d0e565b9061035d565b9091507f01ffc9a70000000000000000000000000000000000000000000000000000000081149081156103f4575b81156103ca575b509038610355565b7f5b5e139f00000000000000000000000000000000000000000000000000000000915014386103c2565b7f80ac58cd00000000000000000000000000000000000000000000000000000000811491506103bb565b7f8446a79e000000000000000000000000000000000000000000000000000000008114925061034e565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361029657565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361029657565b60a4359073ffffffffffffffffffffffffffffffffffffffff8216820361029657565b604435906bffffffffffffffffffffffff8216820361029657565b60c435906bffffffffffffffffffffffff8216820361029657565b3461029657604060031936011261029657610500610448565b6024356bffffffffffffffffffffffff811681036102965761052991610524612731565b613c36565b005b60005b83811061053e5750506000910152565b818101518382015260200161052e565b90601f19601f60209361056c8151809281875287808801910161052b565b0116010190565b90602061058492818152019061054e565b90565b3461029657600080600319360112610683576040519080600e546105aa81613307565b8085529160019180831690811561063b57506001146105e0575b61031d856105d481870382610ec0565b60405191829182610573565b9250600e83527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd5b8284106106235750505081016020016105d48261031d6105c4565b80546020858701810191909152909301928101610608565b86955061031d969350602092506105d49491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b82010192936105c4565b80fd5b34610296576020600319360112610296576004356106a38161206f565b156106d6576000526006602052602073ffffffffffffffffffffffffffffffffffffffff60406000205416604051908152f35b7fcf4700e40000000000000000000000000000000000000000000000000000000060005260046000fd5b604060031936011261029657610714610448565b60243573ffffffffffffffffffffffffffffffffffffffff8061073683611f35565b16908133036107b6575b600083815260066020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790559316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b81600052600760205260ff6107ef3360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5416610740577fcfb3b9420000000000000000000000000000000000000000000000000000000060005260046000fd5b346102965760006003193601126102965760206000546001549003604051908152f35b60031960609101126102965773ffffffffffffffffffffffffffffffffffffffff90600435828116810361029657916024359081168103610296579060443590565b61052961089036610842565b916120d0565b3461029657602060031936011261029657600435600052600b6020526020600160406000200154604051908152f35b3461029657604060031936011261029657600435600052600a6020526040600020604051906108f382610e83565b549073ffffffffffffffffffffffffffffffffffffffff82169182825260a01c60208201529015610988575b61095f6127106109436bffffffffffffffffffffffff602085015116602435612dd8565b04915173ffffffffffffffffffffffffffffffffffffffff1690565b6040805173ffffffffffffffffffffffffffffffffffffffff9290921682526020820192909252f35b50610991612da5565b61091f565b3461029657604060031936011261029657600435610a3e6109b561046b565b73ffffffffffffffffffffffffffffffffffffffff610a36600094808652600b6020526109e860016040882001546128d5565b808652600b60205260ff610a1f85604089209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541615610a4257600052600c602052604060002090565b911690613183565b5080f35b808652600b602052610a7784604088209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533838516827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8980a4600052600c602052604060002090565b3461029657604060031936011261029657610af261046b565b3373ffffffffffffffffffffffffffffffffffffffff821603610b1b5761052990600435612cb1565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152fd5b3461029657604060031936011261029657610bb8610448565b60243590610bc461282b565b6000918254918115610caa57600191610c3673ffffffffffffffffffffffffffffffffffffffff83169284831460e11b4260a01b178417610c0f876000526004602052604060002090565b5573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b68010000000000000001820281540190558115610ca5578301929180805b610c60575b8585815580f35b15610c94575b84818484887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4610c54565b80920191838303610c665780610c59565b6124ea565b6124c0565b610529610cbb36610842565b9060405192610cc984610ea4565b600084526122df565b34610296576020600319360112610296576105296004356137cf565b3461029657606060031936011261029657610d0761046b565b610d0f6104b1565b90610d18612731565b610d346127106bffffffffffffffffffffffff84161115613bab565b73ffffffffffffffffffffffffffffffffffffffff811615610df657610d9361052992610d7e610d62610ee3565b73ffffffffffffffffffffffffffffffffffffffff9094168452565b6bffffffffffffffffffffffff166020830152565b610da9600435600052600a602052604060002090565b815160209092015160a01b7fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f455243323938313a20496e76616c696420706172616d657465727300000000006044820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610e9f57604052565b610e54565b6020810190811067ffffffffffffffff821117610e9f57604052565b90601f601f19910116810190811067ffffffffffffffff821117610e9f57604052565b60405190610ef082610e83565b565b67ffffffffffffffff8111610e9f57601f01601f191660200190565b929192610f1a82610ef2565b91610f286040519384610ec0565b829481845281830111610296578281602093846000960137010152565b9080601f830112156102965781602061058493359101610f0e565b346102965760406003193601126102965767ffffffffffffffff60043581811161029657610f92903690600401610f45565b9060243581811161029657610fab903690600401610f45565b90610fb4612880565b8251908111610e9f57610fd181610fcc600e54613307565b61335a565b602080601f83116001146110125750819061052994600092611007575b50506000198260011b9260031b1c191617600e5561351e565b015190503880610fee565b600e6000529193601f1985167fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd936000905b82821061108557505091600193918661052997941061106c575b505050811b01600e5561351e565b015160001960f88460031b161c1916905538808061105e565b80600186978294978701518155019601940190611044565b6020908160408183019282815285518094520193019160005b8281106110c4575050505090565b909192938260808261111e600194895162ffffff6060809273ffffffffffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152604081015115156040860152015116910152565b019501939291016110b6565b346102965760206003193601126102965767ffffffffffffffff6004358181116102965736602382011215610296578060040135918211610296573660248360051b830101116102965761031d91602461118492016126f1565b6040519182918261109d565b3461029657602060031936011261029657602073ffffffffffffffffffffffffffffffffffffffff6111c3600435611f35565b16604051908152f35b346102965760206003193601126102965760206111ef6111ea610448565b611eaa565b604051908152f35b6020600319820112610296576004359067ffffffffffffffff82116102965761058491600401610f45565b3461029657611230366111f7565b611238612880565b805167ffffffffffffffff8111610e9f5761125d81611258600d54613307565b6133cb565b602080601f831160011461129a5750819260009261128f575b50506000198260011b9260031b1c191617600d55600080f35b015190503880611276565b90601f198316936112cd600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb590565b926000905b86821061130957505083600195106112f0575b505050811b01600d55005b015160001960f88460031b161c191690553880806112e5565b806001859682949686015181550195019301906112d2565b6020908160408183019282815285518094520193019160005b828110611348575050505090565b83518552938101939281019260010161133a565b3461029657602060031936011261029657611375610448565b6000805490606080928015928315611396575b6040518061031d8782611321565b949193508392909185916114e3576113ad81611eaa565b95866113c7575b505050505061031d915038808080611388565b909192939450858411156114da575b60409283519560019384890160051b8801988987526113f361261c565b9084916114096114058a830151151590565b1590565b6114bb575b50849591959887805b611437575b5050505050505050505061031d9250815238808080806113b4565b1561149d575b859661144884612673565b808b0151156114655750508786935b0196888d8b52979397611417565b9390935180611495575b50848418861b15611482575b8890611457565b998801600581901b8c018b90529961147b565b93503861146f565b80831480156114b2575b1561143d578061141c565b50818a146114a7565b5173ffffffffffffffffffffffffffffffffffffffff1691503861140e565b945082946113d6565b6125bc565b3461029657604060031936011261029657600435600052600c602052602073ffffffffffffffffffffffffffffffffffffffff61152b602435604060002061314d565b9190546040519260031b1c168152f35b3461029657604060031936011261029657602060ff61158f61155b61046b565b600435600052600b845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b34610296576115a9366111f7565b6115b1612880565b805167ffffffffffffffff8111610e9f576115d6816115d1601054613307565b61343c565b602080601f831160011461161357508192600092611608575b50506000198260011b9260031b1c191617601055600080f35b0151905038806115ef565b90601f1983169361164660106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67290565b926000905b8682106116825750508360019510611669575b505050811b01601055005b015160001960f88460031b161c1916905538808061165e565b8060018596829496860151815501950193019061164b565b3461029657600080600319360112610683576040519080600f546116bd81613307565b8085529160019180831690811561063b57506001146116e65761031d856105d481870382610ec0565b9250600f83527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8025b8284106117295750505081016020016105d48261031d6105c4565b8054602085870181019190915290930192810161170e565b346102965760e06003193601126102965761175a610448565b67ffffffffffffffff906024358281116102965761177c903690600401610f45565b60443583811161029657611794903690600401610f45565b606435848111610296576117ac903690600401610f45565b608435948511610296576117c7610529953690600401610f45565b916117d061048e565b936117d96104cc565b956139e3565b3461029657606080600319360112610296576117f9610448565b6024359190604435838382808310156114e35760005480911015611967575b5061182284611eaa565b918387101561195e575b82611840575b6040518061031d8882611321565b90919293945085840383811115611956575b50604092835195600193600591611872868501841b8a019a8b895261265b565b936000946118856114058a830151151590565b611937575b5060009594959887805b6118b4575b5050505050505050505061031d925081523880808080611832565b15611919575b6000966118c687612673565b808b0151156118e35750508787965b0196888d8b52979697611894565b9690965180611911575b50838718851b15611900575b88906118d5565b99880180861b8c018b9052996118f9565b9650386118ed565b808614801561192e575b156118ba5780611899565b50818a14611923565b5173ffffffffffffffffffffffffffffffffffffffff1694503861188a565b925038611852565b6000925061182c565b925038611818565b3461029657600060031936011261029657602060405160008152f35b34610296576040600319360112610296576119a4610448565b602435908115158092036102965773ffffffffffffffffffffffffffffffffffffffff903360005260076020526119ff8160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b608060031936011261029657611a6e610448565b611a7661046b565b6064359167ffffffffffffffff8311610296573660238401121561029657611aab610529933690602481600401359101610f0e565b91604435916122df565b34610296576020600319360112610296576080611ad360043561265b565b611b25604051809262ffffff6060809273ffffffffffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152604081015115156040860152015116910152565bf35b346102965760208060031936011261029657600435611b458161206f565b15611c77576040519082826000600d54611b5e81613307565b80845290600190818116908115611c375750600114611bd8575b5050611b8692500383610ec0565b815115611bc55761031d92611bb7611ba06105d493612477565b611bb1604051958694850190611f1e565b90611f1e565b03601f198101835282610ec0565b50505061031d611bd3611f0b565b6105d4565b90939150600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5936000915b818310611c1f575087945050820101611b8638611b78565b85548884018501529485019487945091830191611c07565b9050611b869593507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b820101859238611b78565b7fa14c4b500000000000000000000000000000000000000000000000000000000060005260046000fd5b3461029657602060031936011261029657600435600052600c6020526020604060002054604051908152f35b3461029657604060031936011261029657610529600435611cec61046b565b9080600052600b602052611d076001604060002001546128d5565b612cb1565b34610296576020806003193601126102965767ffffffffffffffff6004358181116102965736602382011215610296578060040135918211610e9f578160051b60405192611d5c85830185610ec0565b83526024848401918301019136831161029657602401905b828210611d8457610529846139a5565b81358152908401908401611d74565b3461029657600080600319360112610683576040519080601054611db681613307565b8085529160019180831690811561063b5750600114611ddf5761031d856105d481870382610ec0565b9250601083527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6725b828410611e225750505081016020016105d48261031d6105c4565b80546020858701810191909152909301928101611e07565b3461029657604060031936011261029657602060ff61158f611e5a610448565b73ffffffffffffffffffffffffffffffffffffffff611e7761046b565b91166000526007845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b73ffffffffffffffffffffffffffffffffffffffff168015611ee157600052600560205267ffffffffffffffff6040600020541690565b7f8f4eb6040000000000000000000000000000000000000000000000000000000060005260046000fd5b60405190611f1882610ea4565b60008252565b90611f316020928281519485920161052b565b0190565b611f49816000526004602052604060002090565b54908115611f7957507c010000000000000000000000000000000000000000000000000000000081166125145790565b9050600090815481101561200657600019905b01611fa1816000526004602052604060002090565b54908115611ffc57507c0100000000000000000000000000000000000000000000000000000000811615611ff7576004827fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b905090565b6000199150611f8c565b6004827fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b801561206a576000190190565b61202e565b90600091600080548210612081575050565b9192505b80825260046020526040822054806120aa57506120a360409161205d565b9050612085565b7c0100000000000000000000000000000000000000000000000000000000161592915050565b9190916120dc82611f35565b9073ffffffffffffffffffffffffffffffffffffffff8091169384828416036122da576000848152600660205260409020805461213573ffffffffffffffffffffffffffffffffffffffff881633908114908314171590565b612270575b612266575b5061216a8573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b805460001901905561219c8173ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b80546001019055169283917c0200000000000000000000000000000000000000000000000000000000804260a01b8517176121e1866000526004602052604060002090565b5581161561221c575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a41561221757565b612592565b60018401612234816000526004602052604060002090565b5415612241575b506121ea565b600054811461223b5761225e906000526004602052604060002090565b55388061223b565b600090553861213f565b6122d06114056122c9336122a48b73ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b1561213a57612568565b61253e565b9291906122ed8282866120d0565b803b6122fa575b50505050565b61230393612380565b1561231157388080806122f4565b7fd1a57ed60000000000000000000000000000000000000000000000000000000060005260046000fd5b9081602091031261029657516105848161026c565b3d1561237b573d9061236182610ef2565b9161236f6040519384610ec0565b82523d6000602084013e565b606090565b91926020916123f29160006040519586809581947f150b7a02000000000000000000000000000000000000000000000000000000009a8b845233600485015273ffffffffffffffffffffffffffffffffffffffff8095166024850152604484015260806064840152608483019061054e565b0393165af160009181612447575b506124215761240d612350565b80511561241c57805190602001fd5b612311565b7fffffffff00000000000000000000000000000000000000000000000000000000161490565b61246991925060203d8111612470575b6124618183610ec0565b81019061233b565b9038612400565b503d612457565b9060405160a08101604052600019608082019360008552935b0192600a908181066030018553049283156124ae5760001990612490565b9250608083601f199203019201918252565b7fb562e8dd0000000000000000000000000000000000000000000000000000000060005260046000fd5b7f2e0763000000000000000000000000000000000000000000000000000000000060005260046000fd5b7fdf2d9b420000000000000000000000000000000000000000000000000000000060005260046000fd5b7fa11481000000000000000000000000000000000000000000000000000000000060005260046000fd5b7f59c896be0000000000000000000000000000000000000000000000000000000060005260046000fd5b7fea553b340000000000000000000000000000000000000000000000000000000060005260046000fd5b7f32c1995a0000000000000000000000000000000000000000000000000000000060005260046000fd5b604051906080820182811067ffffffffffffffff821117610e9f5760405260006060838281528260208201528260408201520152565b600090816126286125e6565b928054612633575050565b9192505b808252600460205260408220546126515760001901612637565b6105849150612673565b906126646125e6565b91600080548210612633575050565b61267b6125e6565b5060005260046020526040600020546126926125e6565b9073ffffffffffffffffffffffffffffffffffffffff8116825267ffffffffffffffff8160a01c1660208301527c010000000000000000000000000000000000000000000000000000000081161515604083015260e81c606082015290565b6040519180835260051b6020818401016040525b8081801561272a5761272190601f19809101938501013561265b565b90840152612705565b5050505090565b3360009081527f142ae0bd48b54fb380e908bf20fd1f4ea4f2b9a2663ca7698d91ef391575c621602052604090205460ff161561276a57565b61282760486127f561277b33612ed9565b611bb7612786612f76565b6040519485937f416363657373436f6e74726f6c3a206163636f756e742000000000000000000060208601526127c681518092602060378901910161052b565b84017f206973206d697373696e6720726f6c652000000000000000000000000000000060378201520190611f1e565b6040519182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301610573565b0390fd5b3360009081527ff70e363b3d7895af770c4a138460777d52eebd3cb9962ccc6b58721f6127bbc8602052604090205460ff161561286457565b61282760486127f561287533612ed9565b611bb7612786613013565b3360009081527fea6919ad9e84aa527aa2dffb6ac6f0a6af0387a080d10167acddf2a249a612dd602052604090205460ff16156128b957565b61282760486127f56128ca33612ed9565b611bb76127866130b0565b80600052600b60205260ff61290e3360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5416156129185750565b61292133612ed9565b612929612deb565b91603061293584612e46565b53607861294184612e53565b5360415b600181116129645761282760486127f585611bb7886127868815612e74565b90600f81169060108210156129b2577f30313233343536373839616263646566000000000000000000000000000000006129ad921a6129a38487612e63565b5360041c9161205d565b612945565b612e17565b73ffffffffffffffffffffffffffffffffffffffff81811660009081527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76602052604080822054612a1f9493929060ff1615612a22575b808052600c60205220911690613183565b50565b808052600b602052612a56848383209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533838516827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4612a0e565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527fea6919ad9e84aa527aa2dffb6ac6f0a6af0387a080d10167acddf2a249a612dd6020526040808220612a1f949392907fe02a0315b383857ac496e9d2b2546a699afaeb4e5e83a1fdef64376d0b74e5a59060ff905b541615612b38575b8152600c60205220911690613183565b808252600b602052612b6c858484209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533848616827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8580a4612b28565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527f142ae0bd48b54fb380e908bf20fd1f4ea4f2b9a2663ca7698d91ef391575c6216020526040808220612a1f949392907f6db4061a20ca83a3be756ee172bd37a029093ac5afe4ce968c6d5435b43cb0119060ff90612b20565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527ff70e363b3d7895af770c4a138460777d52eebd3cb9962ccc6b58721f6127bbc86020526040808220612a1f949392907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69060ff90612b20565b9073ffffffffffffffffffffffffffffffffffffffff6040612a1f93600090808252600b60205260ff612d06868585209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5416612d1d575b8152600c60205220911690613252565b808252600b602052612d51858484209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905533848616827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a4612d0d565b60405190612db282610e83565b60095473ffffffffffffffffffffffffffffffffffffffff8116835260a01c6020830152565b8181029291811591840414171561206a57565b604051906080820182811067ffffffffffffffff821117610e9f57604052604282526060366020840137565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8051156129b25760200190565b8051600110156129b25760210190565b9081518110156129b2570160200190565b15612e7b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b604051906060820182811067ffffffffffffffff821117610e9f57604052602a825260403660208401376030612f0e83612e46565b536078612f1a83612e53565b536029905b60018211612f3257610584915015612e74565b600f81169060108210156129b2577f3031323334353637383961626364656600000000000000000000000000000000612f70921a6129a38486612e63565b90612f1f565b7f6db4061a20ca83a3be756ee172bd37a029093ac5afe4ce968c6d5435b43cb011612f9f612deb565b906030612fab83612e46565b536078612fb783612e53565b536041905b60018211612fcf57610584915015612e74565b600f81169060108210156129b2577f303132333435363738396162636465660000000000000000000000000000000061300d921a6129a38486612e63565b90612fbc565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661303c612deb565b90603061304883612e46565b53607861305483612e53565b536041905b6001821161306c57610584915015612e74565b600f81169060108210156129b2577f30313233343536373839616263646566000000000000000000000000000000006130aa921a6129a38486612e63565b90613059565b7fe02a0315b383857ac496e9d2b2546a699afaeb4e5e83a1fdef64376d0b74e5a56130d9612deb565b9060306130e583612e46565b5360786130f183612e53565b536041905b6001821161310957610584915015612e74565b600f81169060108210156129b2577f3031323334353637383961626364656600000000000000000000000000000000613147921a6129a38486612e63565b906130f6565b80548210156129b25760005260206000200190600090565b9161317f918354906000199060031b92831b921b19161790565b9055565b60018101908260005281602052604060002054156000146131f157805468010000000000000000811015610e9f576131dc6131c582600187940185558461314d565b81939154906000199060031b92831b921b19161790565b90555491600052602052604060002055600190565b505050600090565b80549081156132235760001980920191613213838361314d565b909182549160031b1b1916905555565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60018101918060005282602052604060002054928315156000146132fe57600019928385019085821161206a57805494850194851161206a5760009585836132a6946132b598036132bb575b5050506131f9565b90600052602052604060002090565b55600190565b6132e56132df916132cf6132f5948761314d565b90549060031b1c9283918761314d565b90613165565b8590600052602052604060002090565b5538808061329e565b50505050600090565b90600182811c92168015613350575b602083101461332157565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691613316565b601f8111613366575050565b600090600e82527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd906020601f850160051c830194106133c1575b601f0160051c01915b8281106133b657505050565b8181556001016133aa565b90925082906133a1565b601f81116133d7575050565b600090600d82527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5906020601f850160051c83019410613432575b601f0160051c01915b82811061342757505050565b81815560010161341b565b9092508290613412565b601f8111613448575050565b600090601082527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672906020601f850160051c830194106134a3575b601f0160051c01915b82811061349857505050565b81815560010161348c565b9092508290613483565b601f81116134b9575050565b600090600f82527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802906020601f850160051c83019410613514575b601f0160051c01915b82811061350957505050565b8181556001016134fd565b90925082906134f4565b90815167ffffffffffffffff8111610e9f576135448161353f600f54613307565b6134ad565b602080601f831160011461357f5750819293600092613574575b50506000198260011b9260031b1c191617600f55565b01519050388061355e565b90601f198316946135b2600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290565b926000905b8782106135ef5750508360019596106135d6575b505050811b01600f55565b015160001960f88460031b161c191690553880806135cb565b806001859682949686015181550195019301906135b7565b90815167ffffffffffffffff8111610e9f5761362881611258600d54613307565b602080601f83116001146136635750819293600092613658575b50506000198260011b9260031b1c191617600d55565b015190503880613642565b90601f19831694613696600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb590565b926000905b8782106136d35750508360019596106136ba575b505050811b01600d55565b015160001960f88460031b161c191690553880806136af565b8060018596829496860151815501950193019061369b565b90815167ffffffffffffffff8111610e9f5761370c816115d1601054613307565b602080601f8311600114613747575081929360009261373c575b50506000198260011b9260031b1c191617601055565b015190503880613726565b90601f1983169461377a60106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67290565b926000905b8782106137b757505083600195961061379e575b505050811b01601055565b015160001960f88460031b161c19169055388080613793565b8060018596829496860151815501950193019061377f565b6137d881611f35565b73ffffffffffffffffffffffffffffffffffffffff8116613806836000526006602052604060002090815490565b929061382e73ffffffffffffffffffffffffffffffffffffffff841633908114908614171590565b613967575b60009361395e575b506138668273ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b6fffffffffffffffffffffffffffffffff81540190557c03000000000000000000000000000000000000000000000000000000004260a01b8317176138b5856000526004602052604060002090565b557c0200000000000000000000000000000000000000000000000000000000811615613915575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4610ef061391060015460010190565b600155565b6001840161392d816000526004602052604060002090565b541561393a575b506138dc565b8354811461393457613956906000526004602052604060002090565b553880613934565b8390553861383b565b61399b6114056122c9336122a48773ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b1561383357612568565b80519060005b8281106139b757505050565b81518110156129b2576139d260208260051b840101516137cf565b600019811461206a576001016139ab565b95949392919073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163314801590613b9f575b613b755780519067ffffffffffffffff8211610e9f57613a4f82610fcc600e54613307565b60209081601f8411600114613af2575093613a98613aa29484613ac29b9a9895613a9d95613abd9b996000926110075750506000198260011b9260031b1c191617600e5561351e565b613607565b6136eb565b613aab846129b7565b613ab484612aad565b61052484612bc3565b612c3a565b610ef060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006011541617601155565b600e6000529190601f1984167fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd936000905b828210613b5d57505094600185613a9d95613abd9b9995613a9895613ac29f9e9c99613aa29b1061106c57505050811b01600e5561351e565b80600186978294978701518155019601940190613b24565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b5060ff60115416613a2a565b15613bb257565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c2065786365656460448201527f2073616c655072696365000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff6bffffffffffffffffffffffff831691613c69612710841115613bab565b16918215613cb0577fffffffffffffffffffffffff0000000000000000000000000000000000000000916020604051613ca181610e83565b858152015260a01b1617600955565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152fd5b613d1781613dfd565b908115613d65575b8115613d3a575b8115613d30575090565b6105849150613d76565b7fffffffff000000000000000000000000000000000000000000000000000000008116159150613d26565b9050613d7081613d76565b90613d1f565b7fffffffff000000000000000000000000000000000000000000000000000000008116907f5a05180f000000000000000000000000000000000000000000000000000000008214918215613dc957505090565b7f7965db0b000000000000000000000000000000000000000000000000000000001491508115613df7575090565b61058491505b7fffffffff00000000000000000000000000000000000000000000000000000000167f2a55205a000000000000000000000000000000000000000000000000000000008114908115613e4d575090565b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150149056fea2646970667358221220ba78f6a4ec048d9fde4856030466d089c55330f2269434ca1574d835c628542a64736f6c63430008130033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x146 JUMPI PUSH3 0x14 PUSH3 0x161 JUMP JUMPDEST PUSH3 0x1E PUSH3 0x161 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x140 JUMPI PUSH3 0x47 DUP2 PUSH3 0x41 PUSH1 0x2 SLOAD PUSH3 0x185 JUMP JUMPDEST PUSH3 0x1C2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0xAF JUMPI POP DUP2 SWAP1 PUSH3 0x82 SWAP5 PUSH1 0x0 SWAP3 PUSH3 0xA3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 SSTORE PUSH3 0x274 JUMP JUMPDEST PUSH1 0x0 DUP1 SSTORE CALLER PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3EAA SWAP1 DUP2 PUSH3 0x368 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x3A00 ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x67 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP2 SWAP4 PUSH1 0x1F NOT DUP6 AND PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x127 JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH3 0x82 SWAP8 SWAP5 LT PUSH3 0x10D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0x274 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xFE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH3 0xE1 JUMP JUMPDEST PUSH3 0x14B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x140 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x1B7 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x1A1 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x195 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x1CF JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x210 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x204 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1F7 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x1EE JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x228 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x269 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x25D JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x250 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x247 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x140 JUMPI PUSH3 0x2A0 DUP2 PUSH3 0x29A PUSH1 0x3 SLOAD PUSH3 0x185 JUMP JUMPDEST PUSH3 0x21B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x2DF JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x2D3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x2BC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x34E JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x334 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x329 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x313 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x5944C753 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x5A446215 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x5BBB2177 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x7E518EC8 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x98DD69C8 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x99A2557A EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xC23DC68F EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xDC8E92EA EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x1B8 JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x1CCD JUMP JUMPDEST PUSH2 0x1CA1 JUMP JUMPDEST PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x1A5A JUMP JUMPDEST PUSH2 0x198B JUMP JUMPDEST PUSH2 0x196F JUMP JUMPDEST PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x169A JUMP JUMPDEST PUSH2 0x159B JUMP JUMPDEST PUSH2 0x153B JUMP JUMPDEST PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x135C JUMP JUMPDEST PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST PUSH2 0xF60 JUMP JUMPDEST PUSH2 0xCEE JUMP JUMPDEST PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0xCAF JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x996 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x700 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x31D PUSH1 0x4 CALLDATALOAD PUSH2 0x2BB DUP2 PUSH2 0x26C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 EQ SWAP2 DUP3 ISZERO PUSH2 0x321 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH32 0xC21B8F2800000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP3 POP SWAP1 DUP3 ISZERO PUSH2 0x41E JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x38D JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x37C JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x36C JUMPI JUMPDEST POP CODESIZE DUP1 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x376 SWAP2 POP PUSH2 0x3D0E JUMP JUMPDEST CODESIZE PUSH2 0x364 JUMP JUMPDEST SWAP1 POP PUSH2 0x387 DUP2 PUSH2 0x3D0E JUMP JUMPDEST SWAP1 PUSH2 0x35D JUMP JUMPDEST SWAP1 SWAP2 POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3CA JUMPI JUMPDEST POP SWAP1 CODESIZE PUSH2 0x355 JUMP JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x3C2 JUMP JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x3BB JUMP JUMPDEST PUSH32 0x8446A79E00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP3 POP PUSH2 0x34E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x500 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI PUSH2 0x529 SWAP2 PUSH2 0x524 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0x3C36 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x53E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x52E JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x56C DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x52B JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x584 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x54E JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xE SLOAD PUSH2 0x5AA DUP2 PUSH2 0x3307 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x5E0 JUMPI JUMPDEST PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEC0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x573 JUMP JUMPDEST SWAP3 POP PUSH1 0xE DUP4 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD JUMPDEST DUP3 DUP5 LT PUSH2 0x623 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x608 JUMP JUMPDEST DUP7 SWAP6 POP PUSH2 0x31D SWAP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x5D4 SWAP5 SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 SWAP4 PUSH2 0x5C4 JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6A3 DUP2 PUSH2 0x206F JUMP JUMPDEST ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x714 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x736 DUP4 PUSH2 0x1F35 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x7B6 JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x7EF CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x740 JUMPI PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x296 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x529 PUSH2 0x890 CALLDATASIZE PUSH2 0x842 JUMP JUMPDEST SWAP2 PUSH2 0x20D0 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x8F3 DUP3 PUSH2 0xE83 JUMP JUMPDEST SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO PUSH2 0x988 JUMPI JUMPDEST PUSH2 0x95F PUSH2 0x2710 PUSH2 0x943 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x2DD8 JUMP JUMPDEST DIV SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE RETURN JUMPDEST POP PUSH2 0x991 PUSH2 0x2DA5 JUMP JUMPDEST PUSH2 0x91F JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA3E PUSH2 0x9B5 PUSH2 0x46B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA36 PUSH1 0x0 SWAP5 DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x9E8 PUSH1 0x1 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD PUSH2 0x28D5 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0xA1F DUP6 PUSH1 0x40 DUP10 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 AND SWAP1 PUSH2 0x3183 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0xA77 DUP5 PUSH1 0x40 DUP9 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP10 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xAF2 PUSH2 0x46B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0xB1B JUMPI PUSH2 0x529 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xBB8 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xBC4 PUSH2 0x282B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SLOAD SWAP2 DUP2 ISZERO PUSH2 0xCAA JUMPI PUSH1 0x1 SWAP2 PUSH2 0xC36 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 DUP5 DUP4 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP5 OR PUSH2 0xC0F DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH9 0x10000000000000001 DUP3 MUL DUP2 SLOAD ADD SWAP1 SSTORE DUP2 ISZERO PUSH2 0xCA5 JUMPI DUP4 ADD SWAP3 SWAP2 DUP1 DUP1 JUMPDEST PUSH2 0xC60 JUMPI JUMPDEST DUP6 DUP6 DUP2 SSTORE DUP1 RETURN JUMPDEST ISZERO PUSH2 0xC94 JUMPI JUMPDEST DUP5 DUP2 DUP5 DUP5 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 PUSH2 0xC54 JUMP JUMPDEST DUP1 SWAP3 ADD SWAP2 DUP4 DUP4 SUB PUSH2 0xC66 JUMPI DUP1 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x24C0 JUMP JUMPDEST PUSH2 0x529 PUSH2 0xCBB CALLDATASIZE PUSH2 0x842 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xCC9 DUP5 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x22DF JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x529 PUSH1 0x4 CALLDATALOAD PUSH2 0x37CF JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xD07 PUSH2 0x46B JUMP JUMPDEST PUSH2 0xD0F PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH2 0xD18 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0xD34 PUSH2 0x2710 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND GT ISZERO PUSH2 0x3BAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0xDF6 JUMPI PUSH2 0xD93 PUSH2 0x529 SWAP3 PUSH2 0xD7E PUSH2 0xD62 PUSH2 0xEE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND DUP5 MSTORE JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xDA9 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH1 0xA0 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20496E76616C696420706172616D65746572730000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE9F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE9F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE9F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xEF0 DUP3 PUSH2 0xE83 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9F JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xF1A DUP3 PUSH2 0xEF2 JUMP JUMPDEST SWAP2 PUSH2 0xF28 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEC0 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x296 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP2 PUSH1 0x20 PUSH2 0x584 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xF0E JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0xF92 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0xFAB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST SWAP1 PUSH2 0xFB4 PUSH2 0x2880 JUMP JUMPDEST DUP3 MLOAD SWAP1 DUP2 GT PUSH2 0xE9F JUMPI PUSH2 0xFD1 DUP2 PUSH2 0xFCC PUSH1 0xE SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH2 0x335A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1012 JUMPI POP DUP2 SWAP1 PUSH2 0x529 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1007 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE PUSH2 0x351E JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xFEE JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE SWAP2 SWAP4 PUSH1 0x1F NOT DUP6 AND PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1085 JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH2 0x529 SWAP8 SWAP5 LT PUSH2 0x106C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE PUSH2 0x351E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x105E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x10C4 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH1 0x80 DUP3 PUSH2 0x111E PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x10B6 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x296 JUMPI PUSH2 0x31D SWAP2 PUSH1 0x24 PUSH2 0x1184 SWAP3 ADD PUSH2 0x26F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x109D JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x11C3 PUSH1 0x4 CALLDATALOAD PUSH2 0x1F35 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH2 0x11EF PUSH2 0x11EA PUSH2 0x448 JUMP JUMPDEST PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x296 JUMPI PUSH2 0x584 SWAP2 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x1230 CALLDATASIZE PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x1238 PUSH2 0x2880 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9F JUMPI PUSH2 0x125D DUP2 PUSH2 0x1258 PUSH1 0xD SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH2 0x33CB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x129A JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x128F JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1276 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x12CD PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1309 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x12F0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x12E5 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1348 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x133A JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1375 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH1 0x60 DUP1 SWAP3 DUP1 ISZERO SWAP3 DUP4 ISZERO PUSH2 0x1396 JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x31D DUP8 DUP3 PUSH2 0x1321 JUMP JUMPDEST SWAP5 SWAP2 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 DUP6 SWAP2 PUSH2 0x14E3 JUMPI PUSH2 0x13AD DUP2 PUSH2 0x1EAA JUMP JUMPDEST SWAP6 DUP7 PUSH2 0x13C7 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x31D SWAP2 POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1388 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP6 DUP5 GT ISZERO PUSH2 0x14DA JUMPI JUMPDEST PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 PUSH1 0x1 SWAP4 DUP5 DUP10 ADD PUSH1 0x5 SHL DUP9 ADD SWAP9 DUP10 DUP8 MSTORE PUSH2 0x13F3 PUSH2 0x261C JUMP JUMPDEST SWAP1 DUP5 SWAP2 PUSH2 0x1409 PUSH2 0x1405 DUP11 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x14BB JUMPI JUMPDEST POP DUP5 SWAP6 SWAP2 SWAP6 SWAP9 DUP8 DUP1 JUMPDEST PUSH2 0x1437 JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x31D SWAP3 POP DUP2 MSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x13B4 JUMP JUMPDEST ISZERO PUSH2 0x149D JUMPI JUMPDEST DUP6 SWAP7 PUSH2 0x1448 DUP5 PUSH2 0x2673 JUMP JUMPDEST DUP1 DUP12 ADD MLOAD ISZERO PUSH2 0x1465 JUMPI POP POP DUP8 DUP7 SWAP4 JUMPDEST ADD SWAP7 DUP9 DUP14 DUP12 MSTORE SWAP8 SWAP4 SWAP8 PUSH2 0x1417 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 MLOAD DUP1 PUSH2 0x1495 JUMPI JUMPDEST POP DUP5 DUP5 XOR DUP7 SHL ISZERO PUSH2 0x1482 JUMPI JUMPDEST DUP9 SWAP1 PUSH2 0x1457 JUMP JUMPDEST SWAP10 DUP9 ADD PUSH1 0x5 DUP2 SWAP1 SHL DUP13 ADD DUP12 SWAP1 MSTORE SWAP10 PUSH2 0x147B JUMP JUMPDEST SWAP4 POP CODESIZE PUSH2 0x146F JUMP JUMPDEST DUP1 DUP4 EQ DUP1 ISZERO PUSH2 0x14B2 JUMPI JUMPDEST ISZERO PUSH2 0x143D JUMPI DUP1 PUSH2 0x141C JUMP JUMPDEST POP DUP2 DUP11 EQ PUSH2 0x14A7 JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP CODESIZE PUSH2 0x140E JUMP JUMPDEST SWAP5 POP DUP3 SWAP5 PUSH2 0x13D6 JUMP JUMPDEST PUSH2 0x25BC JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x152B PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x314D JUMP JUMPDEST SWAP2 SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x158F PUSH2 0x155B PUSH2 0x46B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x15A9 CALLDATASIZE PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x15B1 PUSH2 0x2880 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9F JUMPI PUSH2 0x15D6 DUP2 PUSH2 0x15D1 PUSH1 0x10 SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH2 0x343C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1613 JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x1608 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x15EF JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x1646 PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1682 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x1669 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x165E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x164B JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xF SLOAD PUSH2 0x16BD DUP2 PUSH2 0x3307 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x16E6 JUMPI PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEC0 JUMP JUMPDEST SWAP3 POP PUSH1 0xF DUP4 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 JUMPDEST DUP3 DUP5 LT PUSH2 0x1729 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x170E JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x175A PUSH2 0x448 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x177C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x1794 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x17AC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x296 JUMPI PUSH2 0x17C7 PUSH2 0x529 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST SWAP2 PUSH2 0x17D0 PUSH2 0x48E JUMP JUMPDEST SWAP4 PUSH2 0x17D9 PUSH2 0x4CC JUMP JUMPDEST SWAP6 PUSH2 0x39E3 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x17F9 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x44 CALLDATALOAD DUP4 DUP4 DUP3 DUP1 DUP4 LT ISZERO PUSH2 0x14E3 JUMPI PUSH1 0x0 SLOAD DUP1 SWAP2 LT ISZERO PUSH2 0x1967 JUMPI JUMPDEST POP PUSH2 0x1822 DUP5 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 DUP4 DUP8 LT ISZERO PUSH2 0x195E JUMPI JUMPDEST DUP3 PUSH2 0x1840 JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x31D DUP9 DUP3 PUSH2 0x1321 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP6 DUP5 SUB DUP4 DUP2 GT ISZERO PUSH2 0x1956 JUMPI JUMPDEST POP PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 PUSH1 0x1 SWAP4 PUSH1 0x5 SWAP2 PUSH2 0x1872 DUP7 DUP6 ADD DUP5 SHL DUP11 ADD SWAP11 DUP12 DUP10 MSTORE PUSH2 0x265B JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x1885 PUSH2 0x1405 DUP11 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1937 JUMPI JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 SWAP6 SWAP9 DUP8 DUP1 JUMPDEST PUSH2 0x18B4 JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x31D SWAP3 POP DUP2 MSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1832 JUMP JUMPDEST ISZERO PUSH2 0x1919 JUMPI JUMPDEST PUSH1 0x0 SWAP7 PUSH2 0x18C6 DUP8 PUSH2 0x2673 JUMP JUMPDEST DUP1 DUP12 ADD MLOAD ISZERO PUSH2 0x18E3 JUMPI POP POP DUP8 DUP8 SWAP7 JUMPDEST ADD SWAP7 DUP9 DUP14 DUP12 MSTORE SWAP8 SWAP7 SWAP8 PUSH2 0x1894 JUMP JUMPDEST SWAP7 SWAP1 SWAP7 MLOAD DUP1 PUSH2 0x1911 JUMPI JUMPDEST POP DUP4 DUP8 XOR DUP6 SHL ISZERO PUSH2 0x1900 JUMPI JUMPDEST DUP9 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST SWAP10 DUP9 ADD DUP1 DUP7 SHL DUP13 ADD DUP12 SWAP1 MSTORE SWAP10 PUSH2 0x18F9 JUMP JUMPDEST SWAP7 POP CODESIZE PUSH2 0x18ED JUMP JUMPDEST DUP1 DUP7 EQ DUP1 ISZERO PUSH2 0x192E JUMPI JUMPDEST ISZERO PUSH2 0x18BA JUMPI DUP1 PUSH2 0x1899 JUMP JUMPDEST POP DUP2 DUP11 EQ PUSH2 0x1923 JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP CODESIZE PUSH2 0x188A JUMP JUMPDEST SWAP3 POP CODESIZE PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP PUSH2 0x182C JUMP JUMPDEST SWAP3 POP CODESIZE PUSH2 0x1818 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x19A4 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x296 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x19FF DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1A6E PUSH2 0x448 JUMP JUMPDEST PUSH2 0x1A76 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x296 JUMPI PUSH2 0x1AAB PUSH2 0x529 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xF0E JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x22DF JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x80 PUSH2 0x1AD3 PUSH1 0x4 CALLDATALOAD PUSH2 0x265B JUMP JUMPDEST PUSH2 0x1B25 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1B45 DUP2 PUSH2 0x206F JUMP JUMPDEST ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 PUSH1 0x0 PUSH1 0xD SLOAD PUSH2 0x1B5E DUP2 PUSH2 0x3307 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1C37 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1BD8 JUMPI JUMPDEST POP POP PUSH2 0x1B86 SWAP3 POP SUB DUP4 PUSH2 0xEC0 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1BC5 JUMPI PUSH2 0x31D SWAP3 PUSH2 0x1BB7 PUSH2 0x1BA0 PUSH2 0x5D4 SWAP4 PUSH2 0x2477 JUMP JUMPDEST PUSH2 0x1BB1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 ADD SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xEC0 JUMP JUMPDEST POP POP POP PUSH2 0x31D PUSH2 0x1BD3 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1C1F JUMPI POP DUP8 SWAP5 POP POP DUP3 ADD ADD PUSH2 0x1B86 CODESIZE PUSH2 0x1B78 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1C07 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B86 SWAP6 SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 SWAP3 CODESIZE PUSH2 0x1B78 JUMP JUMPDEST PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x529 PUSH1 0x4 CALLDATALOAD PUSH2 0x1CEC PUSH2 0x46B JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x1D07 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x28D5 JUMP JUMPDEST PUSH2 0x2CB1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xE9F JUMPI DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1D5C DUP6 DUP4 ADD DUP6 PUSH2 0xEC0 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x24 DUP5 DUP5 ADD SWAP2 DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x296 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1D84 JUMPI PUSH2 0x529 DUP5 PUSH2 0x39A5 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1D74 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x10 SLOAD PUSH2 0x1DB6 DUP2 PUSH2 0x3307 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DDF JUMPI PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEC0 JUMP JUMPDEST SWAP3 POP PUSH1 0x10 DUP4 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 JUMPDEST DUP3 DUP5 LT PUSH2 0x1E22 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1E07 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x158F PUSH2 0x1E5A PUSH2 0x448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1E77 PUSH2 0x46B JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x1EE1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F18 DUP3 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1F31 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x52B JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x1F49 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0x1F79 JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH2 0x2514 JUMPI SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x2006 JUMPI PUSH1 0x0 NOT SWAP1 JUMPDEST ADD PUSH2 0x1FA1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0x1FFC JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0x1FF7 JUMPI PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP2 POP PUSH2 0x1F8C JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x206A JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x202E JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0x2081 JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP1 PUSH2 0x20AA JUMPI POP PUSH2 0x20A3 PUSH1 0x40 SWAP2 PUSH2 0x205D JUMP JUMPDEST SWAP1 POP PUSH2 0x2085 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x20DC DUP3 PUSH2 0x1F35 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP4 DUP5 DUP3 DUP5 AND SUB PUSH2 0x22DA JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x2135 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP4 EQ OR ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2270 JUMPI JUMPDEST PUSH2 0x2266 JUMPI JUMPDEST POP PUSH2 0x216A DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x219C DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE AND SWAP3 DUP4 SWAP2 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0x21E1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0x221C JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 ISZERO PUSH2 0x2217 JUMPI JUMP JUMPDEST PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x2234 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x2241 JUMPI JUMPDEST POP PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x223B JUMPI PUSH2 0x225E SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x223B JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x213F JUMP JUMPDEST PUSH2 0x22D0 PUSH2 0x1405 PUSH2 0x22C9 CALLER PUSH2 0x22A4 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x213A JUMPI PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x253E JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x22ED DUP3 DUP3 DUP7 PUSH2 0x20D0 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x22FA JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2303 SWAP4 PUSH2 0x2380 JUMP JUMPDEST ISZERO PUSH2 0x2311 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x22F4 JUMP JUMPDEST PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x296 JUMPI MLOAD PUSH2 0x584 DUP2 PUSH2 0x26C JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x237B JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2361 DUP3 PUSH2 0xEF2 JUMP JUMPDEST SWAP2 PUSH2 0x236F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEC0 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 SWAP2 PUSH2 0x23F2 SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP6 DUP2 SWAP5 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP11 DUP12 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP6 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x54E JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2447 JUMPI JUMPDEST POP PUSH2 0x2421 JUMPI PUSH2 0x240D PUSH2 0x2350 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x241C JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x2311 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x2469 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2470 JUMPI JUMPDEST PUSH2 0x2461 DUP2 DUP4 PUSH2 0xEC0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x233B JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2400 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2457 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x0 NOT PUSH1 0x80 DUP3 ADD SWAP4 PUSH1 0x0 DUP6 MSTORE SWAP4 JUMPDEST ADD SWAP3 PUSH1 0xA SWAP1 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x24AE JUMPI PUSH1 0x0 NOT SWAP1 PUSH2 0x2490 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP4 PUSH1 0x1F NOT SWAP3 SUB ADD SWAP3 ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x32C1995A00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE9F JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 PUSH2 0x2628 PUSH2 0x25E6 JUMP JUMPDEST SWAP3 DUP1 SLOAD PUSH2 0x2633 JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH2 0x2651 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x2637 JUMP JUMPDEST PUSH2 0x584 SWAP2 POP PUSH2 0x2673 JUMP JUMPDEST SWAP1 PUSH2 0x2664 PUSH2 0x25E6 JUMP JUMPDEST SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0x2633 JUMPI POP POP JUMP JUMPDEST PUSH2 0x267B PUSH2 0x25E6 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2692 PUSH2 0x25E6 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0x20 DUP4 ADD MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xE8 SHR PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 SHL PUSH1 0x20 DUP2 DUP5 ADD ADD PUSH1 0x40 MSTORE JUMPDEST DUP1 DUP2 DUP1 ISZERO PUSH2 0x272A JUMPI PUSH2 0x2721 SWAP1 PUSH1 0x1F NOT DUP1 SWAP2 ADD SWAP4 DUP6 ADD ADD CALLDATALOAD PUSH2 0x265B JUMP JUMPDEST SWAP1 DUP5 ADD MSTORE PUSH2 0x2705 JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x142AE0BD48B54FB380E908BF20FD1F4EA4F2B9A2663CA7698D91EF391575C621 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x276A JUMPI JUMP JUMPDEST PUSH2 0x2827 PUSH1 0x48 PUSH2 0x27F5 PUSH2 0x277B CALLER PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x1BB7 PUSH2 0x2786 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x27C6 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x52B JUMP JUMPDEST DUP5 ADD PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x37 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1F1E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x573 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF70E363B3D7895AF770C4A138460777D52EEBD3CB9962CCC6B58721F6127BBC8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2864 JUMPI JUMP JUMPDEST PUSH2 0x2827 PUSH1 0x48 PUSH2 0x27F5 PUSH2 0x2875 CALLER PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x1BB7 PUSH2 0x2786 PUSH2 0x3013 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEA6919AD9E84AA527AA2DFFB6AC6F0A6AF0387A080D10167ACDDF2A249A612DD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x28B9 JUMPI JUMP JUMPDEST PUSH2 0x2827 PUSH1 0x48 PUSH2 0x27F5 PUSH2 0x28CA CALLER PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x1BB7 PUSH2 0x2786 PUSH2 0x30B0 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x290E CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x2918 JUMPI POP JUMP JUMPDEST PUSH2 0x2921 CALLER PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x2929 PUSH2 0x2DEB JUMP JUMPDEST SWAP2 PUSH1 0x30 PUSH2 0x2935 DUP5 PUSH2 0x2E46 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x2941 DUP5 PUSH2 0x2E53 JUMP JUMPDEST MSTORE8 PUSH1 0x41 JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x2964 JUMPI PUSH2 0x2827 PUSH1 0x48 PUSH2 0x27F5 DUP6 PUSH2 0x1BB7 DUP9 PUSH2 0x2786 DUP9 ISZERO PUSH2 0x2E74 JUMP JUMPDEST SWAP1 PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x29B2 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x29AD SWAP3 BYTE PUSH2 0x29A3 DUP5 DUP8 PUSH2 0x2E63 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP2 PUSH2 0x205D JUMP JUMPDEST PUSH2 0x2945 JUMP JUMPDEST PUSH2 0x2E17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xDF7DE25B7F1FD6D0B5205F0E18F1F35BD7B8D84CCE336588D184533CE43A6F76 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH2 0x2A1F SWAP5 SWAP4 SWAP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2A22 JUMPI JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x3183 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2A56 DUP5 DUP4 DUP4 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH2 0x2A0E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEA6919AD9E84AA527AA2DFFB6AC6F0A6AF0387A080D10167ACDDF2A249A612DD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2A1F SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0x2B38 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x3183 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2B6C DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP6 DUP1 LOG4 PUSH2 0x2B28 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x142AE0BD48B54FB380E908BF20FD1F4EA4F2B9A2663CA7698D91EF391575C621 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2A1F SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2B20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF70E363B3D7895AF770C4A138460777D52EEBD3CB9962CCC6B58721F6127BBC8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2A1F SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2B20 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH2 0x2A1F SWAP4 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x2D06 DUP7 DUP6 DUP6 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x2D1D JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x3252 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2D51 DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP1 LOG4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2DB2 DUP3 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x206A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE9F JUMPI PUSH1 0x40 MSTORE PUSH1 0x42 DUP3 MSTORE PUSH1 0x60 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x29B2 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x29B2 JUMPI PUSH1 0x21 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x29B2 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2E7B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE9F JUMPI PUSH1 0x40 MSTORE PUSH1 0x2A DUP3 MSTORE PUSH1 0x40 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x30 PUSH2 0x2F0E DUP4 PUSH2 0x2E46 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x2F1A DUP4 PUSH2 0x2E53 JUMP JUMPDEST MSTORE8 PUSH1 0x29 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x2F32 JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x2E74 JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x29B2 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x2F70 SWAP3 BYTE PUSH2 0x29A3 DUP5 DUP7 PUSH2 0x2E63 JUMP JUMPDEST SWAP1 PUSH2 0x2F1F JUMP JUMPDEST PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 PUSH2 0x2F9F PUSH2 0x2DEB JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x2FAB DUP4 PUSH2 0x2E46 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x2FB7 DUP4 PUSH2 0x2E53 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x2FCF JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x2E74 JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x29B2 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x300D SWAP3 BYTE PUSH2 0x29A3 DUP5 DUP7 PUSH2 0x2E63 JUMP JUMPDEST SWAP1 PUSH2 0x2FBC JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x303C PUSH2 0x2DEB JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x3048 DUP4 PUSH2 0x2E46 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x3054 DUP4 PUSH2 0x2E53 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x306C JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x2E74 JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x29B2 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x30AA SWAP3 BYTE PUSH2 0x29A3 DUP5 DUP7 PUSH2 0x2E63 JUMP JUMPDEST SWAP1 PUSH2 0x3059 JUMP JUMPDEST PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 PUSH2 0x30D9 PUSH2 0x2DEB JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x30E5 DUP4 PUSH2 0x2E46 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x30F1 DUP4 PUSH2 0x2E53 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x3109 JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x2E74 JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x29B2 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x3147 SWAP3 BYTE PUSH2 0x29A3 DUP5 DUP7 PUSH2 0x2E63 JUMP JUMPDEST SWAP1 PUSH2 0x30F6 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x29B2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x317F SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x31F1 JUMPI DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xE9F JUMPI PUSH2 0x31DC PUSH2 0x31C5 DUP3 PUSH1 0x1 DUP8 SWAP5 ADD DUP6 SSTORE DUP5 PUSH2 0x314D JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x3223 JUMPI PUSH1 0x0 NOT DUP1 SWAP3 ADD SWAP2 PUSH2 0x3213 DUP4 DUP4 PUSH2 0x314D JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SWAP2 DUP1 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP4 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x32FE JUMPI PUSH1 0x0 NOT SWAP3 DUP4 DUP6 ADD SWAP1 DUP6 DUP3 GT PUSH2 0x206A JUMPI DUP1 SLOAD SWAP5 DUP6 ADD SWAP5 DUP6 GT PUSH2 0x206A JUMPI PUSH1 0x0 SWAP6 DUP6 DUP4 PUSH2 0x32A6 SWAP5 PUSH2 0x32B5 SWAP9 SUB PUSH2 0x32BB JUMPI JUMPDEST POP POP POP PUSH2 0x31F9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x32E5 PUSH2 0x32DF SWAP2 PUSH2 0x32CF PUSH2 0x32F5 SWAP5 DUP8 PUSH2 0x314D JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP2 DUP8 PUSH2 0x314D JUMP JUMPDEST SWAP1 PUSH2 0x3165 JUMP JUMPDEST DUP6 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x329E JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3350 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3321 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3316 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3366 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xE DUP3 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x33C1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x33B6 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x33AA JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x33A1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x33D7 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3432 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3427 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x341B JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3412 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3448 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x34A3 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3498 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x348C JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3483 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x34B9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3514 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3509 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x34FD JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x34F4 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9F JUMPI PUSH2 0x3544 DUP2 PUSH2 0x353F PUSH1 0xF SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH2 0x34AD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x357F JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x3574 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x355E JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x35B2 PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x35EF JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x35D6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x35CB JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x35B7 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9F JUMPI PUSH2 0x3628 DUP2 PUSH2 0x1258 PUSH1 0xD SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3663 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x3658 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3642 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x3696 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x36D3 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x36BA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x36AF JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x369B JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9F JUMPI PUSH2 0x370C DUP2 PUSH2 0x15D1 PUSH1 0x10 SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3747 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x373C JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3726 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x377A PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x37B7 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x379E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3793 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x377F JUMP JUMPDEST PUSH2 0x37D8 DUP2 PUSH2 0x1F35 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3806 DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x382E PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP7 EQ OR ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x3967 JUMPI JUMPDEST PUSH1 0x0 SWAP4 PUSH2 0x395E JUMPI JUMPDEST POP PUSH2 0x3866 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD ADD SWAP1 SSTORE PUSH29 0x300000000000000000000000000000000000000000000000000000000 TIMESTAMP PUSH1 0xA0 SHL DUP4 OR OR PUSH2 0x38B5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0x3915 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP3 DUP1 LOG4 PUSH2 0xEF0 PUSH2 0x3910 PUSH1 0x1 SLOAD PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x392D DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x393A JUMPI JUMPDEST POP PUSH2 0x38DC JUMP JUMPDEST DUP4 SLOAD DUP2 EQ PUSH2 0x3934 JUMPI PUSH2 0x3956 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x3934 JUMP JUMPDEST DUP4 SWAP1 SSTORE CODESIZE PUSH2 0x383B JUMP JUMPDEST PUSH2 0x399B PUSH2 0x1405 PUSH2 0x22C9 CALLER PUSH2 0x22A4 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3833 JUMPI PUSH2 0x2568 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x39B7 JUMPI POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x29B2 JUMPI PUSH2 0x39D2 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD MLOAD PUSH2 0x37CF JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x206A JUMPI PUSH1 0x1 ADD PUSH2 0x39AB JUMP JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x3B9F JUMPI JUMPDEST PUSH2 0x3B75 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE9F JUMPI PUSH2 0x3A4F DUP3 PUSH2 0xFCC PUSH1 0xE SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x3AF2 JUMPI POP SWAP4 PUSH2 0x3A98 PUSH2 0x3AA2 SWAP5 DUP5 PUSH2 0x3AC2 SWAP12 SWAP11 SWAP9 SWAP6 PUSH2 0x3A9D SWAP6 PUSH2 0x3ABD SWAP12 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x1007 JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE PUSH2 0x351E JUMP JUMPDEST PUSH2 0x3607 JUMP JUMPDEST PUSH2 0x36EB JUMP JUMPDEST PUSH2 0x3AAB DUP5 PUSH2 0x29B7 JUMP JUMPDEST PUSH2 0x3AB4 DUP5 PUSH2 0x2AAD JUMP JUMPDEST PUSH2 0x524 DUP5 PUSH2 0x2BC3 JUMP JUMPDEST PUSH2 0x2C3A JUMP JUMPDEST PUSH2 0xEF0 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x11 SLOAD AND OR PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3B5D JUMPI POP POP SWAP5 PUSH1 0x1 DUP6 PUSH2 0x3A9D SWAP6 PUSH2 0x3ABD SWAP12 SWAP10 SWAP6 PUSH2 0x3A98 SWAP6 PUSH2 0x3AC2 SWAP16 SWAP15 SWAP13 SWAP10 PUSH2 0x3AA2 SWAP12 LT PUSH2 0x106C JUMPI POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE PUSH2 0x351E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x3B24 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH2 0x3A2A JUMP JUMPDEST ISZERO PUSH2 0x3BB2 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20726F79616C7479206665652077696C6C20657863656564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2073616C65507269636500000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH2 0x3C69 PUSH2 0x2710 DUP5 GT ISZERO PUSH2 0x3BAB JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x3CB0 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3CA1 DUP2 PUSH2 0xE83 JUMP JUMPDEST DUP6 DUP2 MSTORE ADD MSTORE PUSH1 0xA0 SHL AND OR PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20696E76616C696420726563656976657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x3D17 DUP2 PUSH2 0x3DFD JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3D65 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3D3A JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3D30 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x584 SWAP2 POP PUSH2 0x3D76 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO SWAP2 POP PUSH2 0x3D26 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D70 DUP2 PUSH2 0x3D76 JUMP JUMPDEST SWAP1 PUSH2 0x3D1F JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SWAP1 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x3DC9 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x3DF7 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x584 SWAP2 POP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3E4D JUMPI POP SWAP1 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA PUSH25 0xF6A4EC048D9FDE4856030466D089C55330F2269434CA1574D8 CALLDATALOAD 0xC6 0x28 SLOAD 0x2A PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "380:2145:33:-:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;380:2145:33;;;;;;;5327:13:0;380:2145:33;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:13:0;380:2145:33;;:::i;:::-;;;;684:10;669:25;;380:2145;;;;;;;;669:25;380:2145;;;;;;;;;;-1:-1:-1;380:2145:33;;;;;5327:13:0;380:2145:33;;;;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:13:0;380:2145:33;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;380:2145:33;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;380:2145:33;5327:13:0;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;380:2145:33;;;;;;;;;;;;:::o;:::-;-1:-1:-1;380:2145:33;5350:17:0;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;380:2145:33;;;;;;;;;;-1:-1:-1;;;;;380:2145:33;;;;;;;5350:17:0;380:2145:33;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:17:0;380:2145:33;;;;;5350:17:0;380:2145:33;:::o;:::-;;;;-1:-1:-1;380:2145:33;;;;;5350:17:0;380:2145:33;;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:17:0;380:2145:33;:::o;:::-;;;;;;;5350:17:0;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_14304": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_14318": {
									"entryPoint": 1131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_addresst_uint256": {
									"entryPoint": 2114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_available_length_string": {
									"entryPoint": 3854,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes4_fromMemory": {
									"entryPoint": 9019,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 4599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_memory_ptr": {
									"entryPoint": 3909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint96": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint96_14363": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_array_struct_TokenOwnership_dyn": {
									"entryPoint": 4253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 4897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 7966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_to_string": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_TokenOwnership": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"allocate_and_zero_memory_array_bytes": {
									"entryPoint": 11755,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_and_zero_memory_struct_struct_TokenOwnership": {
									"entryPoint": 9702,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3811,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_array_string": {
									"entryPoint": 7947,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_string": {
									"entryPoint": 3826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_array_bytes32_dyn_storage_ptr": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_array_bytes32_dyn_storage_ptr_14343": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_array_bytes32_dyn_storage_ptr_14350": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_array_bytes32_dyn_storage_ptr_14360": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_pop_array_bytes32_dyn_storage_ptr": {
									"entryPoint": 12793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"checked_mul_uint256": {
									"entryPoint": 11736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 13372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"clean_up_bytearray_end_slots_string_storage_14342": {
									"entryPoint": 13146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"clean_up_bytearray_end_slots_string_storage_14349": {
									"entryPoint": 13259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"clean_up_bytearray_end_slots_string_storage_29888": {
									"entryPoint": 13485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_string_to_string": {
									"entryPoint": 13598,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_string_to_string_14465": {
									"entryPoint": 13831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_string_to_string_14466": {
									"entryPoint": 14059,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_struct_to_storage_from_struct_RoyaltyInfo_to_struct_RoyaltyInfo": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"decrement_uint256": {
									"entryPoint": 8285,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_wrapping_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"external_fun_DEFAULT_ADMIN_ROLE": {
									"entryPoint": 6511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_approve": {
									"entryPoint": 1792,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_balanceOf": {
									"entryPoint": 4556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_batchBurn": {
									"entryPoint": 7436,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_burn": {
									"entryPoint": 3282,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_contractURI": {
									"entryPoint": 7571,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_explicitOwnershipOf": {
									"entryPoint": 6837,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_explicitOwnershipsOf": {
									"entryPoint": 4394,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getApproved": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getRoleAdmin": {
									"entryPoint": 2198,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getRoleMember": {
									"entryPoint": 5352,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getRoleMemberCount": {
									"entryPoint": 7329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_grantRole": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_hasRole": {
									"entryPoint": 5435,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_initialize": {
									"entryPoint": 5953,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_isApprovedForAll": {
									"entryPoint": 7738,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_mint": {
									"entryPoint": 2975,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_name": {
									"entryPoint": 1415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_ownerOf": {
									"entryPoint": 4496,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_renounceRole": {
									"entryPoint": 2777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_revokeRole": {
									"entryPoint": 7373,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_royaltyInfo": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_safeTransferFrom": {
									"entryPoint": 3247,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_safeTransferFrom_1145": {
									"entryPoint": 6746,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setApprovalForAll": {
									"entryPoint": 6539,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setBaseMetadataURI": {
									"entryPoint": 4642,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setContractURI": {
									"entryPoint": 5531,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setDefaultRoyalty": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setNameAndSymbol": {
									"entryPoint": 3936,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setTokenRoyalty": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_supportsInterface": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_symbol": {
									"entryPoint": 5786,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_tokenURI": {
									"entryPoint": 6951,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_tokensOfOwner": {
									"entryPoint": 4956,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_tokensOfOwnerIn": {
									"entryPoint": 6111,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_totalSupply": {
									"entryPoint": 2079,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_transferFrom": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 13063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_returndata": {
									"entryPoint": 9040,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_14409": {
									"entryPoint": 3715,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_29871": {
									"entryPoint": 3748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_add": {
									"entryPoint": 12675,
									"id": 5890,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_balanceOf": {
									"entryPoint": 7850,
									"id": 286,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_batchBurn": {
									"entryPoint": 14757,
									"id": 7334,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_burn": {
									"entryPoint": 14287,
									"id": 1978,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkContractOnERC721Received": {
									"entryPoint": 9088,
									"id": 1227,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"fun_checkRole": {
									"entryPoint": 10453,
									"id": 2810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_14306": {
									"entryPoint": 10033,
									"id": 2810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_checkRole_14323": {
									"entryPoint": 10283,
									"id": 2810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_checkRole_14341": {
									"entryPoint": 10368,
									"id": 2810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_exists": {
									"entryPoint": 8303,
									"id": 870,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_explicitOwnershipOf": {
									"entryPoint": 9819,
									"id": 2374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_explicitOwnershipOf_29874": {
									"entryPoint": 9756,
									"id": 2374,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_explicitOwnershipsOf": {
									"entryPoint": 9969,
									"id": 2418,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_getApprovedSlotAndAddress": {
									"entryPoint": null,
									"id": 913,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"fun_grantRole": {
									"entryPoint": 10679,
									"id": 3133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_grantRole_14468": {
									"entryPoint": 10925,
									"id": 3133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_grantRole_14469": {
									"entryPoint": 11203,
									"id": 3133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_grantRole_14470": {
									"entryPoint": 11322,
									"id": 3133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_initialize": {
									"entryPoint": 14819,
									"id": 7507,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"fun_isSenderApprovedOrOwner": {
									"entryPoint": null,
									"id": 894,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_ownershipAt": {
									"entryPoint": 9843,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_packedOwnershipOf": {
									"entryPoint": 7989,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_remove": {
									"entryPoint": 12882,
									"id": 5974,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_revert": {
									"entryPoint": 9660,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_14324": {
									"entryPoint": 9408,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_14328": {
									"entryPoint": 9450,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_14382": {
									"entryPoint": 9492,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_14388": {
									"entryPoint": 9534,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_14390": {
									"entryPoint": 9576,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_14396": {
									"entryPoint": 9618,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_14398": {
									"entryPoint": null,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revokeRole": {
									"entryPoint": 11441,
									"id": 3157,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_safeTransferFrom": {
									"entryPoint": 8927,
									"id": 1145,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_setDefaultRoyalty": {
									"entryPoint": 15414,
									"id": 3999,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_supportsInterface": {
									"entryPoint": 15734,
									"id": 3074,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_supportsInterface_3906": {
									"entryPoint": 15869,
									"id": 3906,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_supportsInterface_8037": {
									"entryPoint": 15630,
									"id": 8037,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_toHexString": {
									"entryPoint": 11993,
									"id": 4784,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_toHexString_29878": {
									"entryPoint": 12150,
									"id": 4784,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_toHexString_29879": {
									"entryPoint": 12307,
									"id": 4784,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_toHexString_29881": {
									"entryPoint": 12464,
									"id": 4784,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_toString": {
									"entryPoint": 9335,
									"id": 2090,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_transferFrom": {
									"entryPoint": 8400,
									"id": 1086,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_wrapping_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address_14327": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address_14389": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_uint256_uint256_of_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_uint256_uint256_of_uint256_14326": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_uint256_uint256_of_uint256_14340": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_uint256_uint256_of_uint256_14408": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_bytes": {
									"entryPoint": 11875,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"memory_array_index_access_bytes_14413": {
									"entryPoint": 11846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_bytes_14414": {
									"entryPoint": 11859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8238,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11799,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3668,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"read_from_storage_reference_type_struct_RoyaltyInfo": {
									"entryPoint": 11685,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"read_from_storage_split_offset_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"require_helper_stringliteral_04fc": {
									"entryPoint": 11892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_dcda": {
									"entryPoint": 15275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_bytes32_dyn_ptr": {
									"entryPoint": 12621,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_bytes32_to_bytes32": {
									"entryPoint": 12645,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"update_storage_value_offsett_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_offsett_bool_to_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"update_storage_value_offsett_uint256_to_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"write_to_memory_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"write_to_memory_uint96": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"7439": [
									{
										"length": 32,
										"start": 14848
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x5944C753 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x5A446215 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x5BBB2177 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x7E518EC8 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x98DD69C8 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x99A2557A EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xC23DC68F EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xDC8E92EA EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x1B8 JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E3A JUMP JUMPDEST PUSH2 0x1D93 JUMP JUMPDEST PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x1CCD JUMP JUMPDEST PUSH2 0x1CA1 JUMP JUMPDEST PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x1AB5 JUMP JUMPDEST PUSH2 0x1A5A JUMP JUMPDEST PUSH2 0x198B JUMP JUMPDEST PUSH2 0x196F JUMP JUMPDEST PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x1741 JUMP JUMPDEST PUSH2 0x169A JUMP JUMPDEST PUSH2 0x159B JUMP JUMPDEST PUSH2 0x153B JUMP JUMPDEST PUSH2 0x14E8 JUMP JUMPDEST PUSH2 0x135C JUMP JUMPDEST PUSH2 0x1222 JUMP JUMPDEST PUSH2 0x11CC JUMP JUMPDEST PUSH2 0x1190 JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST PUSH2 0xF60 JUMP JUMPDEST PUSH2 0xCEE JUMP JUMPDEST PUSH2 0xCD2 JUMP JUMPDEST PUSH2 0xCAF JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x996 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x700 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x31D PUSH1 0x4 CALLDATALOAD PUSH2 0x2BB DUP2 PUSH2 0x26C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 EQ SWAP2 DUP3 ISZERO PUSH2 0x321 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH32 0xC21B8F2800000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP3 POP SWAP1 DUP3 ISZERO PUSH2 0x41E JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x38D JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x37C JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x36C JUMPI JUMPDEST POP CODESIZE DUP1 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x376 SWAP2 POP PUSH2 0x3D0E JUMP JUMPDEST CODESIZE PUSH2 0x364 JUMP JUMPDEST SWAP1 POP PUSH2 0x387 DUP2 PUSH2 0x3D0E JUMP JUMPDEST SWAP1 PUSH2 0x35D JUMP JUMPDEST SWAP1 SWAP2 POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3CA JUMPI JUMPDEST POP SWAP1 CODESIZE PUSH2 0x355 JUMP JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x3C2 JUMP JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x3BB JUMP JUMPDEST PUSH32 0x8446A79E00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP3 POP PUSH2 0x34E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x500 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI PUSH2 0x529 SWAP2 PUSH2 0x524 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0x3C36 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x53E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x52E JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x56C DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x52B JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x584 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x54E JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xE SLOAD PUSH2 0x5AA DUP2 PUSH2 0x3307 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x5E0 JUMPI JUMPDEST PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEC0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x573 JUMP JUMPDEST SWAP3 POP PUSH1 0xE DUP4 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD JUMPDEST DUP3 DUP5 LT PUSH2 0x623 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x608 JUMP JUMPDEST DUP7 SWAP6 POP PUSH2 0x31D SWAP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x5D4 SWAP5 SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 SWAP4 PUSH2 0x5C4 JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6A3 DUP2 PUSH2 0x206F JUMP JUMPDEST ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x714 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x736 DUP4 PUSH2 0x1F35 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x7B6 JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x7EF CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x740 JUMPI PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x296 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x529 PUSH2 0x890 CALLDATASIZE PUSH2 0x842 JUMP JUMPDEST SWAP2 PUSH2 0x20D0 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x8F3 DUP3 PUSH2 0xE83 JUMP JUMPDEST SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO PUSH2 0x988 JUMPI JUMPDEST PUSH2 0x95F PUSH2 0x2710 PUSH2 0x943 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x2DD8 JUMP JUMPDEST DIV SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE RETURN JUMPDEST POP PUSH2 0x991 PUSH2 0x2DA5 JUMP JUMPDEST PUSH2 0x91F JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA3E PUSH2 0x9B5 PUSH2 0x46B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA36 PUSH1 0x0 SWAP5 DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x9E8 PUSH1 0x1 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD PUSH2 0x28D5 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0xA1F DUP6 PUSH1 0x40 DUP10 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 AND SWAP1 PUSH2 0x3183 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0xA77 DUP5 PUSH1 0x40 DUP9 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP10 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xAF2 PUSH2 0x46B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0xB1B JUMPI PUSH2 0x529 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2CB1 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xBB8 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xBC4 PUSH2 0x282B JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SLOAD SWAP2 DUP2 ISZERO PUSH2 0xCAA JUMPI PUSH1 0x1 SWAP2 PUSH2 0xC36 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 DUP5 DUP4 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP5 OR PUSH2 0xC0F DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH9 0x10000000000000001 DUP3 MUL DUP2 SLOAD ADD SWAP1 SSTORE DUP2 ISZERO PUSH2 0xCA5 JUMPI DUP4 ADD SWAP3 SWAP2 DUP1 DUP1 JUMPDEST PUSH2 0xC60 JUMPI JUMPDEST DUP6 DUP6 DUP2 SSTORE DUP1 RETURN JUMPDEST ISZERO PUSH2 0xC94 JUMPI JUMPDEST DUP5 DUP2 DUP5 DUP5 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 PUSH2 0xC54 JUMP JUMPDEST DUP1 SWAP3 ADD SWAP2 DUP4 DUP4 SUB PUSH2 0xC66 JUMPI DUP1 PUSH2 0xC59 JUMP JUMPDEST PUSH2 0x24EA JUMP JUMPDEST PUSH2 0x24C0 JUMP JUMPDEST PUSH2 0x529 PUSH2 0xCBB CALLDATASIZE PUSH2 0x842 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xCC9 DUP5 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x22DF JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x529 PUSH1 0x4 CALLDATALOAD PUSH2 0x37CF JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xD07 PUSH2 0x46B JUMP JUMPDEST PUSH2 0xD0F PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH2 0xD18 PUSH2 0x2731 JUMP JUMPDEST PUSH2 0xD34 PUSH2 0x2710 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND GT ISZERO PUSH2 0x3BAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0xDF6 JUMPI PUSH2 0xD93 PUSH2 0x529 SWAP3 PUSH2 0xD7E PUSH2 0xD62 PUSH2 0xEE3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND DUP5 MSTORE JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xDA9 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH1 0xA0 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20496E76616C696420706172616D65746572730000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE9F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE54 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE9F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE9F JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xEF0 DUP3 PUSH2 0xE83 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9F JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xF1A DUP3 PUSH2 0xEF2 JUMP JUMPDEST SWAP2 PUSH2 0xF28 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEC0 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x296 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP2 PUSH1 0x20 PUSH2 0x584 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xF0E JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0xF92 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0xFAB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST SWAP1 PUSH2 0xFB4 PUSH2 0x2880 JUMP JUMPDEST DUP3 MLOAD SWAP1 DUP2 GT PUSH2 0xE9F JUMPI PUSH2 0xFD1 DUP2 PUSH2 0xFCC PUSH1 0xE SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH2 0x335A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1012 JUMPI POP DUP2 SWAP1 PUSH2 0x529 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1007 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE PUSH2 0x351E JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xFEE JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE SWAP2 SWAP4 PUSH1 0x1F NOT DUP6 AND PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1085 JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH2 0x529 SWAP8 SWAP5 LT PUSH2 0x106C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE PUSH2 0x351E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x105E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x1044 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x10C4 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH1 0x80 DUP3 PUSH2 0x111E PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x10B6 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x296 JUMPI PUSH2 0x31D SWAP2 PUSH1 0x24 PUSH2 0x1184 SWAP3 ADD PUSH2 0x26F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x109D JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x11C3 PUSH1 0x4 CALLDATALOAD PUSH2 0x1F35 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH2 0x11EF PUSH2 0x11EA PUSH2 0x448 JUMP JUMPDEST PUSH2 0x1EAA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x296 JUMPI PUSH2 0x584 SWAP2 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x1230 CALLDATASIZE PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x1238 PUSH2 0x2880 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9F JUMPI PUSH2 0x125D DUP2 PUSH2 0x1258 PUSH1 0xD SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH2 0x33CB JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x129A JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x128F JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1276 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x12CD PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1309 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x12F0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x12E5 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x12D2 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1348 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x133A JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1375 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH1 0x60 DUP1 SWAP3 DUP1 ISZERO SWAP3 DUP4 ISZERO PUSH2 0x1396 JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x31D DUP8 DUP3 PUSH2 0x1321 JUMP JUMPDEST SWAP5 SWAP2 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 DUP6 SWAP2 PUSH2 0x14E3 JUMPI PUSH2 0x13AD DUP2 PUSH2 0x1EAA JUMP JUMPDEST SWAP6 DUP7 PUSH2 0x13C7 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x31D SWAP2 POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x1388 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP6 DUP5 GT ISZERO PUSH2 0x14DA JUMPI JUMPDEST PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 PUSH1 0x1 SWAP4 DUP5 DUP10 ADD PUSH1 0x5 SHL DUP9 ADD SWAP9 DUP10 DUP8 MSTORE PUSH2 0x13F3 PUSH2 0x261C JUMP JUMPDEST SWAP1 DUP5 SWAP2 PUSH2 0x1409 PUSH2 0x1405 DUP11 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x14BB JUMPI JUMPDEST POP DUP5 SWAP6 SWAP2 SWAP6 SWAP9 DUP8 DUP1 JUMPDEST PUSH2 0x1437 JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x31D SWAP3 POP DUP2 MSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x13B4 JUMP JUMPDEST ISZERO PUSH2 0x149D JUMPI JUMPDEST DUP6 SWAP7 PUSH2 0x1448 DUP5 PUSH2 0x2673 JUMP JUMPDEST DUP1 DUP12 ADD MLOAD ISZERO PUSH2 0x1465 JUMPI POP POP DUP8 DUP7 SWAP4 JUMPDEST ADD SWAP7 DUP9 DUP14 DUP12 MSTORE SWAP8 SWAP4 SWAP8 PUSH2 0x1417 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 MLOAD DUP1 PUSH2 0x1495 JUMPI JUMPDEST POP DUP5 DUP5 XOR DUP7 SHL ISZERO PUSH2 0x1482 JUMPI JUMPDEST DUP9 SWAP1 PUSH2 0x1457 JUMP JUMPDEST SWAP10 DUP9 ADD PUSH1 0x5 DUP2 SWAP1 SHL DUP13 ADD DUP12 SWAP1 MSTORE SWAP10 PUSH2 0x147B JUMP JUMPDEST SWAP4 POP CODESIZE PUSH2 0x146F JUMP JUMPDEST DUP1 DUP4 EQ DUP1 ISZERO PUSH2 0x14B2 JUMPI JUMPDEST ISZERO PUSH2 0x143D JUMPI DUP1 PUSH2 0x141C JUMP JUMPDEST POP DUP2 DUP11 EQ PUSH2 0x14A7 JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP CODESIZE PUSH2 0x140E JUMP JUMPDEST SWAP5 POP DUP3 SWAP5 PUSH2 0x13D6 JUMP JUMPDEST PUSH2 0x25BC JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x152B PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x314D JUMP JUMPDEST SWAP2 SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x158F PUSH2 0x155B PUSH2 0x46B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x15A9 CALLDATASIZE PUSH2 0x11F7 JUMP JUMPDEST PUSH2 0x15B1 PUSH2 0x2880 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9F JUMPI PUSH2 0x15D6 DUP2 PUSH2 0x15D1 PUSH1 0x10 SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH2 0x343C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1613 JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x1608 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x15EF JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x1646 PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1682 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x1669 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x165E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x164B JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xF SLOAD PUSH2 0x16BD DUP2 PUSH2 0x3307 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x16E6 JUMPI PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEC0 JUMP JUMPDEST SWAP3 POP PUSH1 0xF DUP4 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 JUMPDEST DUP3 DUP5 LT PUSH2 0x1729 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x170E JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x175A PUSH2 0x448 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x177C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x1794 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x17AC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x296 JUMPI PUSH2 0x17C7 PUSH2 0x529 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF45 JUMP JUMPDEST SWAP2 PUSH2 0x17D0 PUSH2 0x48E JUMP JUMPDEST SWAP4 PUSH2 0x17D9 PUSH2 0x4CC JUMP JUMPDEST SWAP6 PUSH2 0x39E3 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x17F9 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x44 CALLDATALOAD DUP4 DUP4 DUP3 DUP1 DUP4 LT ISZERO PUSH2 0x14E3 JUMPI PUSH1 0x0 SLOAD DUP1 SWAP2 LT ISZERO PUSH2 0x1967 JUMPI JUMPDEST POP PUSH2 0x1822 DUP5 PUSH2 0x1EAA JUMP JUMPDEST SWAP2 DUP4 DUP8 LT ISZERO PUSH2 0x195E JUMPI JUMPDEST DUP3 PUSH2 0x1840 JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x31D DUP9 DUP3 PUSH2 0x1321 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP6 DUP5 SUB DUP4 DUP2 GT ISZERO PUSH2 0x1956 JUMPI JUMPDEST POP PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 PUSH1 0x1 SWAP4 PUSH1 0x5 SWAP2 PUSH2 0x1872 DUP7 DUP6 ADD DUP5 SHL DUP11 ADD SWAP11 DUP12 DUP10 MSTORE PUSH2 0x265B JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x1885 PUSH2 0x1405 DUP11 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1937 JUMPI JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 SWAP6 SWAP9 DUP8 DUP1 JUMPDEST PUSH2 0x18B4 JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x31D SWAP3 POP DUP2 MSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1832 JUMP JUMPDEST ISZERO PUSH2 0x1919 JUMPI JUMPDEST PUSH1 0x0 SWAP7 PUSH2 0x18C6 DUP8 PUSH2 0x2673 JUMP JUMPDEST DUP1 DUP12 ADD MLOAD ISZERO PUSH2 0x18E3 JUMPI POP POP DUP8 DUP8 SWAP7 JUMPDEST ADD SWAP7 DUP9 DUP14 DUP12 MSTORE SWAP8 SWAP7 SWAP8 PUSH2 0x1894 JUMP JUMPDEST SWAP7 SWAP1 SWAP7 MLOAD DUP1 PUSH2 0x1911 JUMPI JUMPDEST POP DUP4 DUP8 XOR DUP6 SHL ISZERO PUSH2 0x1900 JUMPI JUMPDEST DUP9 SWAP1 PUSH2 0x18D5 JUMP JUMPDEST SWAP10 DUP9 ADD DUP1 DUP7 SHL DUP13 ADD DUP12 SWAP1 MSTORE SWAP10 PUSH2 0x18F9 JUMP JUMPDEST SWAP7 POP CODESIZE PUSH2 0x18ED JUMP JUMPDEST DUP1 DUP7 EQ DUP1 ISZERO PUSH2 0x192E JUMPI JUMPDEST ISZERO PUSH2 0x18BA JUMPI DUP1 PUSH2 0x1899 JUMP JUMPDEST POP DUP2 DUP11 EQ PUSH2 0x1923 JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP CODESIZE PUSH2 0x188A JUMP JUMPDEST SWAP3 POP CODESIZE PUSH2 0x1852 JUMP JUMPDEST PUSH1 0x0 SWAP3 POP PUSH2 0x182C JUMP JUMPDEST SWAP3 POP CODESIZE PUSH2 0x1818 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x19A4 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x296 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x19FF DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x1A6E PUSH2 0x448 JUMP JUMPDEST PUSH2 0x1A76 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x296 JUMPI PUSH2 0x1AAB PUSH2 0x529 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xF0E JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x22DF JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x80 PUSH2 0x1AD3 PUSH1 0x4 CALLDATALOAD PUSH2 0x265B JUMP JUMPDEST PUSH2 0x1B25 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1B45 DUP2 PUSH2 0x206F JUMP JUMPDEST ISZERO PUSH2 0x1C77 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 PUSH1 0x0 PUSH1 0xD SLOAD PUSH2 0x1B5E DUP2 PUSH2 0x3307 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1C37 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1BD8 JUMPI JUMPDEST POP POP PUSH2 0x1B86 SWAP3 POP SUB DUP4 PUSH2 0xEC0 JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1BC5 JUMPI PUSH2 0x31D SWAP3 PUSH2 0x1BB7 PUSH2 0x1BA0 PUSH2 0x5D4 SWAP4 PUSH2 0x2477 JUMP JUMPDEST PUSH2 0x1BB1 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 ADD SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SWAP1 PUSH2 0x1F1E JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xEC0 JUMP JUMPDEST POP POP POP PUSH2 0x31D PUSH2 0x1BD3 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1C1F JUMPI POP DUP8 SWAP5 POP POP DUP3 ADD ADD PUSH2 0x1B86 CODESIZE PUSH2 0x1B78 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1C07 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B86 SWAP6 SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 SWAP3 CODESIZE PUSH2 0x1B78 JUMP JUMPDEST PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x529 PUSH1 0x4 CALLDATALOAD PUSH2 0x1CEC PUSH2 0x46B JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x1D07 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x28D5 JUMP JUMPDEST PUSH2 0x2CB1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0xE9F JUMPI DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1D5C DUP6 DUP4 ADD DUP6 PUSH2 0xEC0 JUMP JUMPDEST DUP4 MSTORE PUSH1 0x24 DUP5 DUP5 ADD SWAP2 DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x296 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1D84 JUMPI PUSH2 0x529 DUP5 PUSH2 0x39A5 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1D74 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x10 SLOAD PUSH2 0x1DB6 DUP2 PUSH2 0x3307 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DDF JUMPI PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEC0 JUMP JUMPDEST SWAP3 POP PUSH1 0x10 DUP4 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 JUMPDEST DUP3 DUP5 LT PUSH2 0x1E22 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1E07 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x158F PUSH2 0x1E5A PUSH2 0x448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1E77 PUSH2 0x46B JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x1EE1 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x1F18 DUP3 PUSH2 0xEA4 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x1F31 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x52B JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x1F49 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0x1F79 JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH2 0x2514 JUMPI SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x2006 JUMPI PUSH1 0x0 NOT SWAP1 JUMPDEST ADD PUSH2 0x1FA1 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0x1FFC JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0x1FF7 JUMPI PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP2 POP PUSH2 0x1F8C JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x206A JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x202E JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0x2081 JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP1 PUSH2 0x20AA JUMPI POP PUSH2 0x20A3 PUSH1 0x40 SWAP2 PUSH2 0x205D JUMP JUMPDEST SWAP1 POP PUSH2 0x2085 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x20DC DUP3 PUSH2 0x1F35 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP4 DUP5 DUP3 DUP5 AND SUB PUSH2 0x22DA JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x2135 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP4 EQ OR ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2270 JUMPI JUMPDEST PUSH2 0x2266 JUMPI JUMPDEST POP PUSH2 0x216A DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x219C DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE AND SWAP3 DUP4 SWAP2 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0x21E1 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0x221C JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 ISZERO PUSH2 0x2217 JUMPI JUMP JUMPDEST PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x2234 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x2241 JUMPI JUMPDEST POP PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x223B JUMPI PUSH2 0x225E SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x223B JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x213F JUMP JUMPDEST PUSH2 0x22D0 PUSH2 0x1405 PUSH2 0x22C9 CALLER PUSH2 0x22A4 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x213A JUMPI PUSH2 0x2568 JUMP JUMPDEST PUSH2 0x253E JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x22ED DUP3 DUP3 DUP7 PUSH2 0x20D0 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x22FA JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2303 SWAP4 PUSH2 0x2380 JUMP JUMPDEST ISZERO PUSH2 0x2311 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x22F4 JUMP JUMPDEST PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x296 JUMPI MLOAD PUSH2 0x584 DUP2 PUSH2 0x26C JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x237B JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2361 DUP3 PUSH2 0xEF2 JUMP JUMPDEST SWAP2 PUSH2 0x236F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEC0 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 SWAP2 PUSH2 0x23F2 SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP6 DUP2 SWAP5 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP11 DUP12 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP6 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x54E JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2447 JUMPI JUMPDEST POP PUSH2 0x2421 JUMPI PUSH2 0x240D PUSH2 0x2350 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x241C JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x2311 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x2469 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2470 JUMPI JUMPDEST PUSH2 0x2461 DUP2 DUP4 PUSH2 0xEC0 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x233B JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2400 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2457 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x0 NOT PUSH1 0x80 DUP3 ADD SWAP4 PUSH1 0x0 DUP6 MSTORE SWAP4 JUMPDEST ADD SWAP3 PUSH1 0xA SWAP1 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x24AE JUMPI PUSH1 0x0 NOT SWAP1 PUSH2 0x2490 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP4 PUSH1 0x1F NOT SWAP3 SUB ADD SWAP3 ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x32C1995A00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE9F JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 PUSH2 0x2628 PUSH2 0x25E6 JUMP JUMPDEST SWAP3 DUP1 SLOAD PUSH2 0x2633 JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH2 0x2651 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x2637 JUMP JUMPDEST PUSH2 0x584 SWAP2 POP PUSH2 0x2673 JUMP JUMPDEST SWAP1 PUSH2 0x2664 PUSH2 0x25E6 JUMP JUMPDEST SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0x2633 JUMPI POP POP JUMP JUMPDEST PUSH2 0x267B PUSH2 0x25E6 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2692 PUSH2 0x25E6 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0x20 DUP4 ADD MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xE8 SHR PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 SHL PUSH1 0x20 DUP2 DUP5 ADD ADD PUSH1 0x40 MSTORE JUMPDEST DUP1 DUP2 DUP1 ISZERO PUSH2 0x272A JUMPI PUSH2 0x2721 SWAP1 PUSH1 0x1F NOT DUP1 SWAP2 ADD SWAP4 DUP6 ADD ADD CALLDATALOAD PUSH2 0x265B JUMP JUMPDEST SWAP1 DUP5 ADD MSTORE PUSH2 0x2705 JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x142AE0BD48B54FB380E908BF20FD1F4EA4F2B9A2663CA7698D91EF391575C621 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x276A JUMPI JUMP JUMPDEST PUSH2 0x2827 PUSH1 0x48 PUSH2 0x27F5 PUSH2 0x277B CALLER PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x1BB7 PUSH2 0x2786 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x27C6 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x52B JUMP JUMPDEST DUP5 ADD PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x37 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1F1E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x573 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF70E363B3D7895AF770C4A138460777D52EEBD3CB9962CCC6B58721F6127BBC8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2864 JUMPI JUMP JUMPDEST PUSH2 0x2827 PUSH1 0x48 PUSH2 0x27F5 PUSH2 0x2875 CALLER PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x1BB7 PUSH2 0x2786 PUSH2 0x3013 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEA6919AD9E84AA527AA2DFFB6AC6F0A6AF0387A080D10167ACDDF2A249A612DD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x28B9 JUMPI JUMP JUMPDEST PUSH2 0x2827 PUSH1 0x48 PUSH2 0x27F5 PUSH2 0x28CA CALLER PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x1BB7 PUSH2 0x2786 PUSH2 0x30B0 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x290E CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x2918 JUMPI POP JUMP JUMPDEST PUSH2 0x2921 CALLER PUSH2 0x2ED9 JUMP JUMPDEST PUSH2 0x2929 PUSH2 0x2DEB JUMP JUMPDEST SWAP2 PUSH1 0x30 PUSH2 0x2935 DUP5 PUSH2 0x2E46 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x2941 DUP5 PUSH2 0x2E53 JUMP JUMPDEST MSTORE8 PUSH1 0x41 JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x2964 JUMPI PUSH2 0x2827 PUSH1 0x48 PUSH2 0x27F5 DUP6 PUSH2 0x1BB7 DUP9 PUSH2 0x2786 DUP9 ISZERO PUSH2 0x2E74 JUMP JUMPDEST SWAP1 PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x29B2 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x29AD SWAP3 BYTE PUSH2 0x29A3 DUP5 DUP8 PUSH2 0x2E63 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP2 PUSH2 0x205D JUMP JUMPDEST PUSH2 0x2945 JUMP JUMPDEST PUSH2 0x2E17 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xDF7DE25B7F1FD6D0B5205F0E18F1F35BD7B8D84CCE336588D184533CE43A6F76 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH2 0x2A1F SWAP5 SWAP4 SWAP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2A22 JUMPI JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x3183 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2A56 DUP5 DUP4 DUP4 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH2 0x2A0E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEA6919AD9E84AA527AA2DFFB6AC6F0A6AF0387A080D10167ACDDF2A249A612DD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2A1F SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0x2B38 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x3183 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2B6C DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP6 DUP1 LOG4 PUSH2 0x2B28 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x142AE0BD48B54FB380E908BF20FD1F4EA4F2B9A2663CA7698D91EF391575C621 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2A1F SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2B20 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF70E363B3D7895AF770C4A138460777D52EEBD3CB9962CCC6B58721F6127BBC8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2A1F SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2B20 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH2 0x2A1F SWAP4 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x2D06 DUP7 DUP6 DUP6 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x2D1D JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x3252 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2D51 DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP1 LOG4 PUSH2 0x2D0D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2DB2 DUP3 PUSH2 0xE83 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x206A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE9F JUMPI PUSH1 0x40 MSTORE PUSH1 0x42 DUP3 MSTORE PUSH1 0x60 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x29B2 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x29B2 JUMPI PUSH1 0x21 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x29B2 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2E7B JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE9F JUMPI PUSH1 0x40 MSTORE PUSH1 0x2A DUP3 MSTORE PUSH1 0x40 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x30 PUSH2 0x2F0E DUP4 PUSH2 0x2E46 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x2F1A DUP4 PUSH2 0x2E53 JUMP JUMPDEST MSTORE8 PUSH1 0x29 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x2F32 JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x2E74 JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x29B2 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x2F70 SWAP3 BYTE PUSH2 0x29A3 DUP5 DUP7 PUSH2 0x2E63 JUMP JUMPDEST SWAP1 PUSH2 0x2F1F JUMP JUMPDEST PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 PUSH2 0x2F9F PUSH2 0x2DEB JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x2FAB DUP4 PUSH2 0x2E46 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x2FB7 DUP4 PUSH2 0x2E53 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x2FCF JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x2E74 JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x29B2 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x300D SWAP3 BYTE PUSH2 0x29A3 DUP5 DUP7 PUSH2 0x2E63 JUMP JUMPDEST SWAP1 PUSH2 0x2FBC JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x303C PUSH2 0x2DEB JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x3048 DUP4 PUSH2 0x2E46 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x3054 DUP4 PUSH2 0x2E53 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x306C JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x2E74 JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x29B2 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x30AA SWAP3 BYTE PUSH2 0x29A3 DUP5 DUP7 PUSH2 0x2E63 JUMP JUMPDEST SWAP1 PUSH2 0x3059 JUMP JUMPDEST PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 PUSH2 0x30D9 PUSH2 0x2DEB JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x30E5 DUP4 PUSH2 0x2E46 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x30F1 DUP4 PUSH2 0x2E53 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x3109 JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x2E74 JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x29B2 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x3147 SWAP3 BYTE PUSH2 0x29A3 DUP5 DUP7 PUSH2 0x2E63 JUMP JUMPDEST SWAP1 PUSH2 0x30F6 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x29B2 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x317F SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x31F1 JUMPI DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xE9F JUMPI PUSH2 0x31DC PUSH2 0x31C5 DUP3 PUSH1 0x1 DUP8 SWAP5 ADD DUP6 SSTORE DUP5 PUSH2 0x314D JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x3223 JUMPI PUSH1 0x0 NOT DUP1 SWAP3 ADD SWAP2 PUSH2 0x3213 DUP4 DUP4 PUSH2 0x314D JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SWAP2 DUP1 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP4 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x32FE JUMPI PUSH1 0x0 NOT SWAP3 DUP4 DUP6 ADD SWAP1 DUP6 DUP3 GT PUSH2 0x206A JUMPI DUP1 SLOAD SWAP5 DUP6 ADD SWAP5 DUP6 GT PUSH2 0x206A JUMPI PUSH1 0x0 SWAP6 DUP6 DUP4 PUSH2 0x32A6 SWAP5 PUSH2 0x32B5 SWAP9 SUB PUSH2 0x32BB JUMPI JUMPDEST POP POP POP PUSH2 0x31F9 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x32E5 PUSH2 0x32DF SWAP2 PUSH2 0x32CF PUSH2 0x32F5 SWAP5 DUP8 PUSH2 0x314D JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP2 DUP8 PUSH2 0x314D JUMP JUMPDEST SWAP1 PUSH2 0x3165 JUMP JUMPDEST DUP6 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x329E JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x3350 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3321 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3316 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3366 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xE DUP3 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x33C1 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x33B6 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x33AA JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x33A1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x33D7 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3432 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3427 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x341B JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3412 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3448 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x34A3 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3498 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x348C JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3483 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x34B9 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3514 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3509 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x34FD JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x34F4 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9F JUMPI PUSH2 0x3544 DUP2 PUSH2 0x353F PUSH1 0xF SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH2 0x34AD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x357F JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x3574 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x355E JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x35B2 PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x35EF JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x35D6 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x35CB JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x35B7 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9F JUMPI PUSH2 0x3628 DUP2 PUSH2 0x1258 PUSH1 0xD SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3663 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x3658 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3642 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x3696 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x36D3 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x36BA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x36AF JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x369B JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE9F JUMPI PUSH2 0x370C DUP2 PUSH2 0x15D1 PUSH1 0x10 SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3747 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x373C JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3726 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x377A PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x37B7 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x379E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3793 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x377F JUMP JUMPDEST PUSH2 0x37D8 DUP2 PUSH2 0x1F35 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3806 DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x382E PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP7 EQ OR ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x3967 JUMPI JUMPDEST PUSH1 0x0 SWAP4 PUSH2 0x395E JUMPI JUMPDEST POP PUSH2 0x3866 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD ADD SWAP1 SSTORE PUSH29 0x300000000000000000000000000000000000000000000000000000000 TIMESTAMP PUSH1 0xA0 SHL DUP4 OR OR PUSH2 0x38B5 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0x3915 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP3 DUP1 LOG4 PUSH2 0xEF0 PUSH2 0x3910 PUSH1 0x1 SLOAD PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x392D DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x393A JUMPI JUMPDEST POP PUSH2 0x38DC JUMP JUMPDEST DUP4 SLOAD DUP2 EQ PUSH2 0x3934 JUMPI PUSH2 0x3956 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x3934 JUMP JUMPDEST DUP4 SWAP1 SSTORE CODESIZE PUSH2 0x383B JUMP JUMPDEST PUSH2 0x399B PUSH2 0x1405 PUSH2 0x22C9 CALLER PUSH2 0x22A4 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3833 JUMPI PUSH2 0x2568 JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x39B7 JUMPI POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x29B2 JUMPI PUSH2 0x39D2 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD MLOAD PUSH2 0x37CF JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x206A JUMPI PUSH1 0x1 ADD PUSH2 0x39AB JUMP JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x3B9F JUMPI JUMPDEST PUSH2 0x3B75 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE9F JUMPI PUSH2 0x3A4F DUP3 PUSH2 0xFCC PUSH1 0xE SLOAD PUSH2 0x3307 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x3AF2 JUMPI POP SWAP4 PUSH2 0x3A98 PUSH2 0x3AA2 SWAP5 DUP5 PUSH2 0x3AC2 SWAP12 SWAP11 SWAP9 SWAP6 PUSH2 0x3A9D SWAP6 PUSH2 0x3ABD SWAP12 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x1007 JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE PUSH2 0x351E JUMP JUMPDEST PUSH2 0x3607 JUMP JUMPDEST PUSH2 0x36EB JUMP JUMPDEST PUSH2 0x3AAB DUP5 PUSH2 0x29B7 JUMP JUMPDEST PUSH2 0x3AB4 DUP5 PUSH2 0x2AAD JUMP JUMPDEST PUSH2 0x524 DUP5 PUSH2 0x2BC3 JUMP JUMPDEST PUSH2 0x2C3A JUMP JUMPDEST PUSH2 0xEF0 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x11 SLOAD AND OR PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3B5D JUMPI POP POP SWAP5 PUSH1 0x1 DUP6 PUSH2 0x3A9D SWAP6 PUSH2 0x3ABD SWAP12 SWAP10 SWAP6 PUSH2 0x3A98 SWAP6 PUSH2 0x3AC2 SWAP16 SWAP15 SWAP13 SWAP10 PUSH2 0x3AA2 SWAP12 LT PUSH2 0x106C JUMPI POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE PUSH2 0x351E JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x3B24 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH2 0x3A2A JUMP JUMPDEST ISZERO PUSH2 0x3BB2 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20726F79616C7479206665652077696C6C20657863656564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2073616C65507269636500000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH2 0x3C69 PUSH2 0x2710 DUP5 GT ISZERO PUSH2 0x3BAB JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x3CB0 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3CA1 DUP2 PUSH2 0xE83 JUMP JUMPDEST DUP6 DUP2 MSTORE ADD MSTORE PUSH1 0xA0 SHL AND OR PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20696E76616C696420726563656976657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x3D17 DUP2 PUSH2 0x3DFD JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3D65 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3D3A JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3D30 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x584 SWAP2 POP PUSH2 0x3D76 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO SWAP2 POP PUSH2 0x3D26 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D70 DUP2 PUSH2 0x3D76 JUMP JUMPDEST SWAP1 PUSH2 0x3D1F JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SWAP1 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x3DC9 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x3DF7 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x584 SWAP2 POP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3E4D JUMPI POP SWAP1 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA PUSH25 0xF6A4EC048D9FDE4856030466D089C55330F2269434CA1574D8 CALLDATALOAD 0xC6 0x28 SLOAD 0x2A PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "380:2145:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;;;;;:::i;:::-;;;;2422:54;:39;:54;:94;;;;;380:2145;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;;;;2422:94;3859:26:32;3844:41;;;-1:-1:-1;3844:41:32;:95;;;;2422:94:33;3844:149:32;;;;2422:94:33;3844:201:32;;;;;2422:94:33;3844:253:32;;;;2422:94:33;;;;;;3844:253:32;4061:36;;;;:::i;:::-;3844:253;;;:201;3997:48;;;;;:::i;:::-;3844:201;;;:149;11092:25:0;;;380:2145:33;11092:25:0;;:101;;;;;3844:149:32;11092:177:0;;;;3844:149:32;;;;;;11092:177:0;380:2145:33;11244:25:0;;;11092:177;;;:101;380:2145:33;11168:25:0;;;-1:-1:-1;11092:101:0;;3844:95:32;3904:35;3889:50;;;-1:-1:-1;3844:95:32;;380:2145:33;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;380:2145:33;;;;;;;:::i;:::-;;;;;;;;;;1036:12:39;2642:4:4;;;:::i;:::-;1036:12:39;:::i;:::-;380:2145:33;;;;;;;;;-1:-1:-1;;380:2145:33;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;380:2145:33;;;;;;;;;4479:10:32;380:2145:33;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;4479:10:32;380:2145:33;;;;;;;;;-1:-1:-1;;;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;18736:16:0;;;:::i;:::-;18735:17;18731:73;;-1:-1:-1;380:2145:33;18822:15:0;380:2145:33;;;;;-1:-1:-1;380:2145:33;;;;;;;;;18731:73:0;18762:41;-1:-1:-1;49766:91:0;380:2145:33;-1:-1:-1;49766:91:0;380:2145:33;;-1:-1:-1;;380:2145:33;;;;;;;:::i;:::-;;;;13048:27:0;;;;:::i;:::-;380:2145:33;47819:10:0;;;41521:28;41500:198;;380:2145:33;-1:-1:-1;380:2145:33;;;41708:15:0;380:2145:33;;;;;;;;;;;;;;;-1:-1:-1;380:2145:33;41758:28:0;;;;;380:2145:33;;41500:198:0;380:2145:33;-1:-1:-1;380:2145:33;19687:18:0;380:2145:33;;;19687:35:0;47819:10;380:2145:33;-1:-1:-1;380:2145:33;;;;;;;;;;;;;19687:35:0;380:2145:33;;41500:198:0;41563:135;41640:42;-1:-1:-1;49766:91:0;;-1:-1:-1;49766:91:0;380:2145:33;;;;;-1:-1:-1;;380:2145:33;;;;;;;;7328:12:0;380:2145:33;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;380:2145:33;;;;;;;-1:-1:-1;380:2145:33;4604:6:4;380:2145:33;;;4604:22:4;380:2145:33;-1:-1:-1;380:2145:33;4604:22:4;380:2145:33;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;-1:-1:-1;380:2145:33;1823:17:16;380:2145:33;;;-1:-1:-1;380:2145:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1864:30:16;;1860:90;;380:2145:33;;2457:5:16;1985:35;380:2145:33;;1997:23:16;;380:2145:33;;;;1985:35:16;:::i;:::-;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;1860:90:16;380:2145:33;;;:::i;:::-;1860:90:16;;380:2145:33;;;;;-1:-1:-1;;380:2145:33;;;;;;;8398:50:26;380:2145:33;;:::i;:::-;;2106:18:5;-1:-1:-1;380:2145:33;;;;4604:6:4;380:2145:33;;2642:4:4;4604:22;380:2145:33;;;4604:22:4;380:2145:33;2642:4:4;:::i;:::-;380:2145:33;;;4604:6:4;380:2145:33;;;3130:29:4;380:2145:33;;;;;;;;;;;;;;;;3130:29:4;380:2145:33;;7669:23:4;7665:149;;380:2145:33;;2106:12:5;380:2145:33;;;;;;;2106:18:5;380:2145:33;;8398:50:26;;:::i;:::-;;380:2145:33;;7665:149:4;380:2145:33;;;4604:6:4;380:2145:33;;7708:29:4;380:2145:33;;;;;;;;;;;;;;;;7708:29:4;4604:22;380:2145:33;;;;;;;47819:10:0;380:2145:33;;;7763:40:4;;;;;380:2145:33;;2106:12:5;380:2145:33;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;:::i;:::-;47819:10:0;380:2145:33;;;6133:23:4;380:2145:33;;6237:7:4;380:2145:33;;;6237:7:4;:::i;380:2145:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;:::i;:::-;;;2642:4:4;;;:::i;:::-;-1:-1:-1;380:2145:33;;;30774:13:0;;;30770:53;;17787:151;17192:331;31704:22;17192:331;;;17787:151;;;;;;17192:331;;;;;;31323:31;;380:2145:33;;;;;;;;;;31323:31:0;2943:14;380:2145:33;;;;31704:18:0;380:2145:33;;;;;;;31704:22:0;31742:32;1653:2;;380:2145:33;;;2943:14:0;;31960:13;;31956:54;;380:2145:33;;32076:30:0;32213:662;;;17787:151;;;32213:662;2943:14;;;;380:2145:33;;32213:662:0;;;;;32857:16;32234:450;;;;;;;;32213:662;;;2943:14;;;32857:16;;;;32213:662;32857:16;;;;31956:54;31983:26;:::i;30770:53::-;30797:25;:::i;380:2145:33:-;26475:39:0;380:2145:33;;;:::i;:::-;;;;;;;;:::i;:::-;;;;26475:39:0;:::i;380:2145:33:-;;;;;-1:-1:-1;;380:2145:33;;;;;2871:4:32;380:2145:33;;2871:4:32;:::i;380:2145:33:-;;;;;-1:-1:-1;;380:2145:33;;;;;;;:::i;:::-;;;:::i;:::-;2642:4:4;;;:::i;:::-;3600:88:16;2457:5;380:2145:33;;;3608:33:16;;3600:88;:::i;:::-;380:2145:33;;;3706:22:16;380:2145:33;;3800:35:16;380:2145:33;;3800:35:16;380:2145:33;;:::i;:::-;;;;;;;;3800:35:16;380:2145:33;;;3800:35:16;;380:2145:33;;3800:35:16;3771:26;380:2145:33;;;;3771:17:16;380:2145:33;;;;;;;3771:26:16;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;-1:-1:-1;;380:2145:33;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;380:2145:33;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;2642:4:4;;;:::i;:::-;380:2145:33;;;;;;;;;;1974:22:32;380:2145:33;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;380:2145:33;;;;;;-1:-1:-1;;380:2145:33;;;;;;2671:3:0;380:2145:33;;;1974:22:32;380:2145:33;;:::i;:::-;;;;-1:-1:-1;380:2145:33;;;;;1974:22:32;380:2145:33;;;;-1:-1:-1;;380:2145:33;;;;-1:-1:-1;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1974:22:32;380:2145:33;;:::i;:::-;;;-1:-1:-1;;380:2145:33;;;;;2671:3:0;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;380:2145:33;;;;;;;13048:27:0;380:2145:33;;13048:27:0;:::i;:::-;380:2145:33;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;2642:4:4;;:::i;:::-;380:2145:33;;;;;;;;;;2264:28:32;380:2145:33;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;2671:3:0;380:2145:33;;;2264:28:32;380:2145:33;;;;;;;;-1:-1:-1;380:2145:33;;;;;;-1:-1:-1;;380:2145:33;;;;2264:28:32;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;380:2145:33;;;2264:28:32;380:2145:33;;;;;-1:-1:-1;;380:2145:33;;;;;2671:3:0;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;:::i;:::-;-1:-1:-1;380:2145:33;;4390:25:2;380:2145:33;4390:25:2;4429:13;;;;;;4425:66;;380:2145:33;;;;;;;;:::i;4425:66:2:-;4455:36;;;-1:-1:-1;4455:36:2;;;;;;4954:54;;5548:16;;;:::i;:::-;5772:22;;5768:3893;;4425:66;4444:47;;;;;380:2145:33;4444:47:2;;4425:66;;;;;;5768:3893;5905:33;;;;;;;;;;5901:71;;5768:3893;6047:402;;;;5430:17;;6047:402;;;;;;;;;;;;6636:26;;:::i;:::-;6680:25;;6972:16;6971:17;380:2145:33;6972:16:2;;;380:2145:33;;;;;;6971:17:2;;380:2145:33;6971:17:2;6967:57;;5768:3893;7042:19;;;;;7229:2273;;;5430:17;;;7229:2273;9569:78;;;;;;;;;;380:2145:33;9569:78:2;;;;5768:3893;;;;;;;7229:2273;;;;;9448:52;7692:19;;;;:::i;:::-;7770:1652;;;;6047:402;;;7770:1652;;;;;;;;;;;;7229:2273;;;;;7770:1652;;;;;;;;;;;;;;;;;;;;;;;;;;;6047:402;7770:1652;;;;;;;;;;;;;-1:-1:-1;7770:1652:2;;;7229:2273;9450:13;;;:49;;;;7229:2273;9448:52;7229:2273;9448:52;;;;9450:49;9467:32;;;;9450:49;;6967:57;380:2145:33;;;;-1:-1:-1;6967:57:2;;;5901:71;5940:32;;;5901:71;;;4954:54;4981:26;:::i;380:2145:33:-;;;;;-1:-1:-1;;380:2145:33;;;;;;;-1:-1:-1;380:2145:33;1547:12:5;380:2145:33;;;;5005:18:26;380:2145:33;;;-1:-1:-1;380:2145:33;5005:18:26;:::i;:::-;380:2145:33;;;;;;;;2671:3:0;380:2145:33;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;3130:29:4;380:2145:33;;:::i;:::-;;;-1:-1:-1;380:2145:33;3130:6:4;380:2145:33;;;-1:-1:-1;380:2145:33;;;;;;;;;;;;;3130:29:4;380:2145:33;;;;;;;;;;;;;;;;;:::i;:::-;2642:4:4;;:::i;:::-;380:2145:33;;;;;;;;;;2613:31:32;380:2145:33;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;2671:3:0;380:2145:33;;;2613:31:32;380:2145:33;;;;;;;;-1:-1:-1;380:2145:33;;;;;;-1:-1:-1;;380:2145:33;;;;2613:31:32;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;380:2145:33;;;2613:31:32;380:2145:33;;;;;-1:-1:-1;;380:2145:33;;;;;2671:3:0;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;;;4663:12:32;380:2145:33;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4663:12:32;380:2145:33;;;;;;;;;-1:-1:-1;;;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;380:2145:33;;;;;;;:::i;:::-;;;;;;;;;;4958:13:2;;;;4954:54;;-1:-1:-1;380:2145:33;5430:17:2;;;;5426:39;;380:2145:33;5548:16:2;;;;:::i;:::-;5662:13;;;;;5658:40;;380:2145:33;5772:22:2;5768:3893;;380:2145:33;;;;;;;;:::i;5768:3893:2:-;380:2145:33;;;;;;;;;5905:33:2;;;;5901:71;;5768:3893;6047:402;;;;;5303:38;;6047:402;;;6636:26;6047:402;;;;;;;;;;;6636:26;:::i;:::-;6680:25;-1:-1:-1;6972:16:2;6971:17;380:2145:33;6972:16:2;;;380:2145:33;;;;;6971:17:2;6967:57;;5768:3893;7042:19;-1:-1:-1;7042:19:2;;;7229:2273;;;5303:38;;;7229:2273;9569:78;;;;;;;;;;380:2145:33;9569:78:2;;;;5768:3893;;;;;;;7229:2273;;;;;-1:-1:-1;7692:19:2;;;;:::i;:::-;7770:1652;;;;6047:402;;;7770:1652;;;;;;;;;;;;7229:2273;;;;;7770:1652;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7770:1652:2;;;7229:2273;9450:13;;;:49;;;;7229:2273;9448:52;7229:2273;9448:52;;;;9450:49;9467:32;;;;9450:49;;6967:57;380:2145:33;;;;-1:-1:-1;6967:57:2;;;5901:71;5940:32;-1:-1:-1;5901:71:2;;;5658:40;-1:-1:-1;;;5658:40:2;;5426:39;5449:16;-1:-1:-1;5426:39:2;;;380:2145:33;;;;;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;:::i;:::-;;;;;;;;;;;;;47819:10:0;;-1:-1:-1;380:2145:33;19280:18:0;380:2145:33;;19280:49:0;380:2145:33;;-1:-1:-1;380:2145:33;;;;;;;;;;;;;19280:49:0;380:2145:33;;;;;;;;;;;;;;;;47819:10:0;19355:55;380:2145:33;47819:10:0;19355:55;;380:2145:33;;;-1:-1:-1;;380:2145:33;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;-1:-1:-1;;380:2145:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;12048:16:0;;;:::i;:::-;12047:17;12043:68;;380:2145:33;;;;;-1:-1:-1;4296:13:32;380:2145:33;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12173:26:0;:87;;380:2145:33;12235:18:0;380:2145:33;12235:18:0;12209:45;12235:18;;:::i;:::-;380:2145:33;;;12209:45:0;;;;;380:2145:33;;:::i;:::-;;;:::i;:::-;12209:45:0;-1:-1:-1;;12209:45:0;;;;;;:::i;12173:87::-;380:2145:33;;;;;;:::i;:::-;12173:87:0;;380:2145:33;;;;;4296:13:32;-1:-1:-1;380:2145:33;;;-1:-1:-1;380:2145:33;;;;;;;-1:-1:-1;380:2145:33;;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12043:68:0;12074:36;-1:-1:-1;49766:91:0;380:2145:33;-1:-1:-1;49766:91:0;380:2145:33;;;;;-1:-1:-1;;380:2145:33;;;;;;;-1:-1:-1;380:2145:33;1856:12:5;380:2145:33;;;;-1:-1:-1;380:2145:33;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;5486:7:4;380:2145:33;;;;:::i;:::-;;;-1:-1:-1;380:2145:33;4604:6:4;380:2145:33;;2642:4:4;4604:22;380:2145:33;-1:-1:-1;380:2145:33;4604:22:4;380:2145:33;2642:4:4;:::i;:::-;5486:7;:::i;380:2145:33:-;;;;;;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;;;3508:12:32;380:2145:33;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3508:12:32;380:2145:33;;;;;;;;;-1:-1:-1;;;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;19687:35:0;380:2145:33;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;380:2145:33;19687:18:0;380:2145:33;;;-1:-1:-1;380:2145:33;;;;;;;;;;;;;8570:239:0;380:2145:33;;8665:19:0;;8661:69;;8682:1;380:2145:33;8747:18:0;380:2145:33;;1518:13:0;380:2145:33;8682:1:0;380:2145:33;;8747:55:0;8570:239;:::o;8661:69::-;8694:35;8682:1;49766:91;;8682:1;49766:91;380:2145:33;;;;;;;:::i;:::-;-1:-1:-1;380:2145:33;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::o;14380:2173:0:-;14528:26;;380:2145:33;;;;;;;;;;14528:26:0;380:2145:33;14847:11:0;;;14843:1270;;16435:24;2276:8;16435:24;;16507:38;16431:48;16466:13;:::o;14843:1270::-;380:2145:33;;;;;;14882:24:0;;;14878:77;;-1:-1:-1;;15502:597:0;;380:2145:33;15578:28:0;;380:2145:33;;;;;;;;;;15578:28:0;380:2145:33;15654:11:0;;;15650:25;;15701:24;2276:8;15701:24;;:29;15697:48;;49766:91;;14916:38;49766:91;;;15697:48;15732:13;;;:::o;15650:25::-;-1:-1:-1;;6488:17:0;-1:-1:-1;15502:597:0;;14878:77;49766:91;;14916:38;49766:91;;;380:2145:33;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;:::o;:::-;;:::i;19978:465:0:-;;380:2145:33;20043:11:0;380:2145:33;;;20221:23:0;;20217:210;;19978:465;;:::o;20217:210::-;20264:14;;-1:-1:-1;20296:60:0;380:2145:33;;;20313:17:0;380:2145:33;;;;;;20303:42:0;;;20347:9;;380:2145:33;20347:9:0;;:::i;:::-;20296:60;;;;20303:42;2276:8;20383:24;:29;;20217:210;-1:-1:-1;;19978:465:0:o;22796:3447::-;;;;22963:27;;;:::i;:::-;380:2145:33;;;;;;;;;;23173:45:0;23169:95;;-1:-1:-1;380:2145:33;;;21929:15:0;380:2145:33;;;;;22057:132:0;;23463:69;21135:472;;;47819:10;21135:472;;;;;;;6971:17:2;;380:2145:33;23463:69:0;23459:188;;22796:3447;23764:190;;22796:3447;24316:24;;;380:2145:33;;;;31704:18:0;380:2145:33;;;;;;;24316:24:0;380:2145:33;;-1:-1:-1;;380:2145:33;2943:14:0;;24384:22;;380:2145:33;;;;31704:18:0;380:2145:33;;;;;;;24384:22:0;380:2145:33;;2943:14:0;;;;17192:331;24755:73;;;;17192:331;;;;;;;24670:26;;380:2145:33;;;;;;;;;;24670:26:0;2943:14;24959:47;;:52;24955:617;;22796:3447;25749:367;;-1:-1:-1;25749:367:0;;26129:13;26125:58;;22796:3447::o;26125:58::-;26152:30;:::i;24955:617::-;25063:1;380:2145:33;;25184:30:0;;380:2145:33;;;;;;;;;;25184:30:0;380:2145:33;25184:35:0;25180:378;;24955:617;;;;25180:378;-1:-1:-1;380:2145:33;25301:239:0;;25180:378;25301:239;25465:30;;380:2145:33;;;;;;;;;;25465:30:0;2943:14;25301:239;;25180:378;;23764:190;;;;;;;23459:188;23550:44;19687:35;;47819:10;19687:25;;380:2145:33;;;;19687:18:0;380:2145:33;;;;;;;19687:25:0;380:2145:33;;;;;;;;;;;;19687:35:0;380:2145:33;;;;;23550:44:0;23546:101;23459:188;23546:101;23604:42;:::i;23169:95::-;23228:35;:::i;27102:405::-;;;;27294:7;;;;;:::i;:::-;27316:14;;27312:189;;27102:405;;;;;:::o;27312:189::-;27354:56;;;:::i;:::-;27353:57;27349:152;;27312:189;;;;;;27349:152;27438:47;27334:1;49766:91;;27334:1;49766:91;380:2145:33;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;380:2145:33;;;;:::o;:::-;;;:::o;29533:673:0:-;;;29711:88;29533:673;380:2145:33;29533:673:0;380:2145:33;;;;;;;;;;29711:88:0;;;;47819:10;29711:88;;;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29711:88:0;380:2145:33;;29711:88:0;;380:2145:33;;29711:88:0;;;29533:673;-1:-1:-1;29707:493:0;;29943:257;;:::i;:::-;380:2145:33;;29989:18:0;29985:113;;30111:79;;;29711:88;30111:79;;29985:113;30035:47;:::i;29707:493::-;380:2145:33;;29867:64:0;29860:71;:::o;29711:88::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;47933:1708;;48027:1608;;;;;;;-1:-1:-1;;48027:1608:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;48027:1608:0;;;;;;;;-1:-1:-1;;48027:1608:0;;;;;;;;47933:1708::o;49703:160::-;30797:25;49766:91;;;;;49703:160;31983:26;49766:91;;;;;49703:160;14916:38;49766:91;;;;;49703:160;23228:35;49766:91;;;;;49703:160;23604:42;49766:91;;;;;49703:160;26152:30;49766:91;;;;;49703:160;4981:26:2;49766:91:0;;;;;380:2145:33;;;;;;;;;;;;;;;;;;-1:-1:-1;380:2145:33;;;;;;;;;;;;;;;;;:::o;1070:659:2:-;-1:-1:-1;1070:659:2;;380:2145:33;;:::i;:::-;;;;1395:304:2;;1070:659;;:::o;1395:304::-;1579:51;;;;380:2145:33;;;13962:17:0;380:2145:33;;;;;;1586:33:2;;-1:-1:-1;;380:2145:33;1579:51:2;;1586:33;1659:21;1586:33;;1659:21;:::i;1070:659::-;;380:2145:33;;:::i;:::-;6048:1:0;;380:2145:33;;1399:24:2;;1395:304;;1070:659;;:::o;13522:159:0:-;380:2145:33;;:::i;:::-;;-1:-1:-1;380:2145:33;13649:17:0;380:2145:33;;;-1:-1:-1;380:2145:33;;;;:::i;:::-;;;;;;;;2671:3:0;2162;2671;380:2145:33;;16807:24:0;;2162:3;2276:8;16904:24;;:29;;380:2145:33;16885:16:0;;2162:3;2671;;16943:19;;;2162:3;13522:159;:::o;1882:1131:2:-;2141:382;;;;;;;;;;;;;;;2532:448;2539:1;;:6;;;;2760:28;2590:123;-1:-1:-1;;2590:123:2;;;;;;;;2760:28;:::i;:::-;2802:168;;;;2532:448;;2539:6;;;;;1882:1131;:::o;3460:103:4:-;47819:10:0;-1:-1:-1;380:2145:33;;;;;;;;;;;;3931:23:4;3927:390;;3460:103::o;3927:390::-;3970:336;380:2145:33;4022:252:4;2497:52:21;47819:10:0;2497:52:21;:::i;:::-;380:2145:33;4214:38:4;;:::i;:::-;380:2145:33;;4022:252:4;;;380:2145:33;;4022:252:4;;380:2145:33;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;4022:252:4:-;380:2145:33;;3970:336:4;;;;;;;;;;:::i;:::-;;;;3460:103;47819:10:0;-1:-1:-1;380:2145:33;;;;;;;;;;;;3931:23:4;3927:390;;3460:103::o;3927:390::-;3970:336;380:2145:33;4022:252:4;2497:52:21;47819:10:0;2497:52:21;:::i;:::-;380:2145:33;4214:38:4;;:::i;3460:103::-;47819:10:0;-1:-1:-1;380:2145:33;;;;;;;;;;;;3931:23:4;3927:390;;3460:103::o;3927:390::-;3970:336;380:2145:33;4022:252:4;2497:52:21;47819:10:0;2497:52:21;:::i;:::-;380:2145:33;4214:38:4;;:::i;3460:103::-;380:2145:33;-1:-1:-1;380:2145:33;3130:6:4;380:2145:33;;;3130:29:4;47819:10:0;380:2145:33;-1:-1:-1;380:2145:33;;;;;;;;;;;;;3130:29:4;380:2145:33;;3931:23:4;3927:390;;3460:103;:::o;3927:390::-;2497:52:21;47819:10:0;2497:52:21;:::i;:::-;1940:25;;:::i;:::-;1975:15;;;;;:::i;:::-;;2000;;;;:::i;:::-;;380:2145:33;2058:5:21;2007:1;2058:5;;;;3970:336:4;380:2145:33;4022:252:4;2170:10:21;380:2145:33;2170:10:21;2162:55;2170:10;;2162:55;:::i;2065:3::-;2105:11;2113:3;2105:11;;2096:21;;;;;;;380:2145:33;2065:3:21;2096:21;;2084:33;;;;:::i;:::-;;380:2145:33;2671:3:0;2065::21;;:::i;:::-;2030:26;;2096:21;;:::i;1978:166:5:-;380:2145:33;;;;;;;;;;;;;;;;8398:50:26;;380:2145:33;;;;;7669:23:4;7665:149;;1978:166:5;380:2145:33;;;2106:12:5;380:2145:33;;;;;8398:50:26;;:::i;:::-;;1978:166:5:o;7665:149:4:-;380:2145:33;;;3130:6:4;380:2145:33;;7708:29:4;380:2145:33;;;;;;;;;;;;;;;;7708:29:4;7740:4;380:2145:33;;;;;;;47819:10:0;380:2145:33;;;7763:40:4;;;;;7665:149;;1978:166:5;380:2145:33;;;;-1:-1:-1;380:2145:33;;;;;;;;;;8398:50:26;;1978:166:5;380:2145:33;-1:-1:-1;546:32:32;;380:2145:33;;3130:29:4;380:2145:33;;7669:23:4;7665:149;;1978:166:5;380:2145:33;;2106:12:5;380:2145:33;;;;;8398:50:26;;:::i;7665:149:4:-;380:2145:33;;;3130:6:4;380:2145:33;;7708:29:4;380:2145:33;;;;;;;;;;;;;;;;7708:29:4;7740:4;380:2145:33;;;;;;;47819:10:0;380:2145:33;;;7763:40:4;;;;;7665:149;;1978:166:5;380:2145:33;;;;-1:-1:-1;380:2145:33;;;;;;;;;;8398:50:26;;1978:166:5;380:2145:33;-1:-1:-1;559:31:39;;380:2145:33;;3130:29:4;380:2145:33;1978:166:5;380:2145:33;;;;-1:-1:-1;380:2145:33;;;;;;;;;;8398:50:26;;1978:166:5;380:2145:33;-1:-1:-1;480:24:33;;380:2145;;3130:29:4;380:2145:33;2233:171:5;;380:2145:33;;8719:53:26;2233:171:5;-1:-1:-1;380:2145:33;;;;3130:6:4;380:2145:33;;;3130:29:4;380:2145:33;;;;;;;;;;;;;;;;3130:29:4;380:2145:33;;8070:149:4;;2233:171:5;380:2145:33;;2363:12:5;380:2145:33;;;;;8719:53:26;;:::i;8070:149:4:-;380:2145:33;;;3130:6:4;380:2145:33;;8112:29:4;380:2145:33;;;;;;;;;;;;;;;;8112:29:4;380:2145:33;;;;;;47819:10:0;380:2145:33;;;8168:40:4;;;;;8070:149;;380:2145:33;;;;;;;:::i;:::-;1920:19:16;380:2145:33;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;2007:1:21;380:2145:33;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;278:18:21:-;;;;:::o;:::-;;380:2145:33;;278:18:21;;;;;;;;;;;;380:2145:33;278:18:21;380:2145:33;;;278:18:21;;1818:437;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;1975:15:21;;;;:::i;:::-;;2000;;;;:::i;:::-;;380:2145:33;2025:128:21;2058:5;2007:1;2058:5;;;;2162:55;2170:10;;;2162:55;:::i;2065:3::-;2113;2105:11;;2096:21;;;;;;;380:2145:33;2065:3:21;2096:21;;2084:33;;;;:::i;2065:3::-;2030:26;;;1818:437;559:31:39;1940:25:21;;:::i;:::-;1975:15;;;;;:::i;:::-;;2000;;;;:::i;:::-;;380:2145:33;2025:128:21;2058:5;2007:1;2058:5;;;;2162:55;2170:10;;;2162:55;:::i;2065:3::-;2113;2105:11;;2096:21;;;;;;;380:2145:33;2065:3:21;2096:21;;2084:33;;;;:::i;2065:3::-;2030:26;;;1818:437;480:24:33;1940:25:21;;:::i;:::-;1975:15;;;;;:::i;:::-;;2000;;;;:::i;:::-;;380:2145:33;2025:128:21;2058:5;2007:1;2058:5;;;;2162:55;2170:10;;;2162:55;:::i;2065:3::-;2113;2105:11;;2096:21;;;;;;;380:2145:33;2065:3:21;2096:21;;2084:33;;;;:::i;2065:3::-;2030:26;;;1818:437;546:32:32;1940:25:21;;:::i;:::-;1975:15;;;;;:::i;:::-;;2000;;;;:::i;:::-;;380:2145:33;2025:128:21;2058:5;2007:1;2058:5;;;;2162:55;2170:10;;;2162:55;:::i;2065:3::-;2113;2105:11;;2096:21;;;;;;;380:2145:33;2065:3:21;2096:21;;2084:33;;;;:::i;2065:3::-;2030:26;;;380:2145:33;;;;;;;;-1:-1:-1;380:2145:33;;-1:-1:-1;380:2145:33;;;-1:-1:-1;380:2145:33;:::o;:::-;;;;;;;-1:-1:-1;;380:2145:33;;;;;;2671:3:0;;380:2145:33;;;;;;;;:::o;2214:404:26:-;4351:12;;;380:2145:33;;-1:-1:-1;380:2145:33;;;;;-1:-1:-1;380:2145:33;;4351:24:26;2293:319;380:2145:33;;;;;;;;;;;;;;4351:12:26;380:2145:33;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;380:2145:33;;;;;;2671:3:0;;380:2145:33;;;;;;;;;;-1:-1:-1;380:2145:33;;;;-1:-1:-1;380:2145:33;2943:14:0;4351:12:26;2547:11;:::o;2293:319::-;2589:12;;;-1:-1:-1;2589:12:26;:::o;380:2145:33:-;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;;;:::i;:::-;;;;;;;;2671:3:0;380:2145:33;;;;;:::o;:::-;;;;;;;;;;2786:1388:26;2989:12;;;380:2145:33;;-1:-1:-1;380:2145:33;;;;;-1:-1:-1;380:2145:33;;3023:15:26;;;;3019:1149;3023:15;;;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3505:26:26;;;3977:15;3505:26;4069:19;3505:26;;3501:398;;3019:1149;3977:15;;;;:::i;:::-;380:2145:33;;;;;;;;;;4069:19:26;380:2145:33;2989:12:26;4103:11;:::o;3501:398::-;3693:38;:26;3571:22;;3805:23;3571:22;;;:::i;:::-;380:2145:33;;;;;2671:3:0;3693:26:26;;;;;:::i;:::-;:38;;:::i;:::-;3805:23;380:2145:33;;;;;;;;;;3805:23:26;2943:14:0;3501:398:26;;;;;3019:1149;4145:12;;;;-1:-1:-1;4145:12:26;:::o;380:2145:33:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;380:2145:33;1974:22:32;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;380:2145:33;;;;;;;;;;;;:::o;:::-;-1:-1:-1;380:2145:33;2264:28:32;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;380:2145:33;;;;;;;;;;;;:::o;:::-;-1:-1:-1;380:2145:33;2613:31:32;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;380:2145:33;;;;;;;;;;;;:::o;:::-;-1:-1:-1;380:2145:33;2006:26:32;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;380:2145:33;;;;;;;;;;;;;;;;2006:26:32;380:2145:33;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;2671:3:0;380:2145:33;;;2006:26:32;380:2145:33;:::o;:::-;;;;-1:-1:-1;380:2145:33;;;;;;-1:-1:-1;;380:2145:33;;;;2006:26:32;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2006:26:32;380:2145:33;:::o;:::-;;;-1:-1:-1;;380:2145:33;;;;;2671:3:0;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1436:28:32;380:2145:33;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;2671:3:0;380:2145:33;;;1436:28:32;380:2145:33;:::o;:::-;;;;-1:-1:-1;380:2145:33;;;;;;-1:-1:-1;;380:2145:33;;;;2264:28:32;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1436:28:32;380:2145:33;:::o;:::-;;;-1:-1:-1;;380:2145:33;;;;;2671:3:0;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:31:32;380:2145:33;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;2671:3:0;380:2145:33;;;1474:31:32;380:2145:33;:::o;:::-;;;;-1:-1:-1;380:2145:33;;;;;;-1:-1:-1;;380:2145:33;;;;2613:31:32;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:31:32;380:2145:33;:::o;:::-;;;-1:-1:-1;;380:2145:33;;;;;2671:3:0;380:2145:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42355:3042:0;42464:27;;;:::i;:::-;380:2145:33;;;42622:35:0;;-1:-1:-1;380:2145:33;21929:15:0;380:2145:33;;;-1:-1:-1;380:2145:33;22057:132:0;;;21721:474;;42622:35;47819:10;;42790:69;21135:472;;;47819:10;21135:472;;;;;;;6971:17:2;;380:2145:33;42790:69:0;42786:192;;42355:3042;380:2145:33;43113:190:0;;;42355:3042;43882:24;;;380:2145:33;;;;31704:18:0;380:2145:33;;;;;;;43882:24:0;380:2145:33;;;;2943:14:0;;44260:101;17192:331;;;;;;44173:26;;380:2145:33;;;;;;;;;;44173:26:0;2943:14;2550:8;44492:47;;:52;44488:617;;42355:3042;45130:35;;;;;45366:14;;2871:4:32;380:2145:33;2943:14:0;;;;45366;43911:1;2943:14;;44488:617;2871:4:32;380:2145:33;;44717:30:0;;380:2145:33;;;;;;;;;;44717:30:0;380:2145:33;44717:35:0;44713:378;;44488:617;;;;44713:378;380:2145:33;;44834:239:0;;44713:378;44834:239;44998:30;;380:2145:33;;;;;;;;;;44998:30:0;2943:14;44834:239;;44713:378;;43113:190;;;;;;;42786:192;42881:44;19687:35;;47819:10;19687:25;;380:2145:33;;;;19687:18:0;380:2145:33;;;;;;;42881:44:0;42877:101;42786:192;42877:101;42935:42;:::i;3015:203:32:-;380:2145:33;;3132:13:32;3144:1;3147:9;;;;;;3015:203;;;:::o;3158:3::-;380:2145:33;;;;;;;3196:4:32;380:2145:33;;;;;;;;3196:4:32;:::i;:::-;-1:-1:-1;;380:2145:33;;;;;;3132:13:32;;1236:654:33;;;;;;;380:2145;1561:12;380:2145;1547:10;:26;;;:42;;;1236:654;1543:103;;380:2145;;;;;;;;;;;1368:22:32;380:2145:33;;:::i;:::-;;;;;;;;;;;;;;;;;1847:5;380:2145;;;;;;1792:19;380:2145;;;;;;;;-1:-1:-1;;380:2145:33;;;;;;2671:3:0;380:2145:33;;;1368:22:32;380:2145:33;;:::i;:::-;;:::i;:::-;;:::i;:::-;1547:5:32;;;:::i;:::-;1595;;;:::i;:::-;1642;;;:::i;1792:19:33:-;1847:5;:::i;:::-;1864:19;1879:4;380:2145;1864:19;380:2145;;;1864:19;380:2145;;;1974:22:32;380:2145:33;;;;-1:-1:-1;;380:2145:33;;;;;;;;;;;;;;;;;;;1792:19;380:2145;;;;;1847:5;380:2145;;;;;;;;;;;;;;;1368:22:32;380:2145:33;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1543:103;1612:23;380:2145;;1612:23;;;;1547:42;380:2145;;1577:12;380:2145;;1547:42;;380:2145;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2730:327:16;380:2145:33;;;;2832:33:16;2824:88;2457:5;2832:33;;;2824:88;:::i;:::-;380:2145:33;2930:22:16;;;380:2145:33;;;;3015:35:16;380:2145:33;;;;;:::i;:::-;;;;3015:35:16;380:2145:33;;;;;2993:57:16;380:2145:33;2730:327:16:o;380:2145:33:-;;;;;;;;;;;;;;;;;;;;;;;1839:397:39;2026:38;;;:::i;:::-;:96;;;;;1839:397;2026:163;;;;1839:397;2026:203;;;;2019:210;1839:397;:::o;2026:203::-;2193:36;;;;:::i;2026:163::-;380:2145:33;;;2138:51:39;;-1:-1:-1;2026:163:39;;:96;2068:54;;;;;:::i;:::-;2026:96;;;634:212:5;380:2145:33;;;742:57:5;757:42;742:57;;:97;;;;;735:104;;634:212;:::o;742:97::-;2855:32:4;2840:47;;-1:-1:-1;2840:87:4;;;;742:97:5;634:212;:::o;2840:87:4:-;2891:36;;;1408:213:16;380:2145:33;;1548:26:16;1533:41;;:81;;;;;1526:88;1408:213;:::o;1533:81::-;952:25:22;937:40;;;1408:213:16;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"batchBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenBaseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenContractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyFeeNumerator\",\"type\":\"uint96\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenContractURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"setNameAndSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setTokenRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"batchBurn(uint256[])\":{\"params\":{\"tokenIds\":\"Array of token ids to burn\"}},\"burn(uint256)\":{\"params\":{\"tokenId\":\"Id of token to burn\"}},\"contractURI()\":{\"returns\":{\"_0\":\"Contract URI of token's URI\"}},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,string,string,string,string,address,uint96)\":{\"details\":\"This should be called immediately after deployment.\",\"params\":{\"owner\":\"The owner of the contract\",\"royaltyFeeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"royaltyReceiver\":\"Address of who should be sent the royalty payment\",\"tokenBaseURI\":\"Base URI of the token\",\"tokenContractURI\":\"Contract URI of the token\",\"tokenName\":\"Name of the token\",\"tokenSymbol\":\"Symbol of the token\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"mint(address,uint256)\":{\"params\":{\"amount\":\"Amount of tokens to mint.\",\"to\":\"Address to mint tokens to.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setBaseMetadataURI(string)\":{\"params\":{\"tokenBaseURI\":\"New base URI of token's URI\"}},\"setContractURI(string)\":{\"params\":{\"tokenContractURI\":\"New contract URI of token's URI\"}},\"setDefaultRoyalty(address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\"}},\"setNameAndSymbol(string,string)\":{\"params\":{\"tokenName\":\"Name of token.\",\"tokenSymbol\":\"Symbol of token.\"}},\"setTokenRoyalty(uint256,address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\",\"tokenId\":\"The token id to set the royalty information for\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface id\"},\"returns\":{\"_0\":\"True if supported\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidInitialization()\":[{\"notice\":\"Invalid initialization error.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"batchBurn(uint256[])\":{\"notice\":\"Allows the owner of the tokens to burn their tokens.\"},\"burn(uint256)\":{\"notice\":\"Allows the owner of the token to burn their token.\"},\"constructor\":{\"notice\":\"Deploy contract.\"},\"contractURI()\":{\"notice\":\"Get the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata\"},\"initialize(address,string,string,string,string,address,uint96)\":{\"notice\":\"Initialize contract.\"},\"mint(address,uint256)\":{\"notice\":\"Mint tokens.\"},\"name()\":{\"notice\":\"Override the ERC721A name function.\"},\"setBaseMetadataURI(string)\":{\"notice\":\"Update the base URI of token's URI.\"},\"setContractURI(string)\":{\"notice\":\"Update the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata\"},\"setDefaultRoyalty(address,uint96)\":{\"notice\":\"Sets the royalty information that all ids in this contract will default to.\"},\"setNameAndSymbol(string,string)\":{\"notice\":\"Set name and symbol of token.\"},\"setTokenRoyalty(uint256,address,uint96)\":{\"notice\":\"Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check interface support.\"},\"symbol()\":{\"notice\":\"Override the ERC721A symbol function.\"}},\"notice\":\"An implementation of ERC-721 capable of minting when role provided.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/items/ERC721Items.sol\":\"ERC721Items\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/chiru-labs/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"lib/chiru-labs/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]},\"lib/chiru-labs/erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xfa5590db00a9bf0f85d2c10f2c901d5a3d49ecb1e64e5b6afe9a771496a41698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42616f12c7956e0ccefb690bf2a503986710c54544a36898b1ecc5d226373c4d\",\"dweb:/ipfs/QmU6vn637MDzUjsGih3fnWYf5CjcMknQUDXQwYjLNPX8ig\"]},\"lib/chiru-labs/erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x56fa15ba9a351f0be2728ff2569c8ce6bc187cbf2c027fece17442a682f49079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e424f0290d7ba66e451b3d8e490f5bac0bf0105b2af467513b2ffecb7065a9\",\"dweb:/ipfs/QmbCvzT7vep5gyBNqkHrD46pxZVUHHzaCZUpgwgWkBw78Y\"]},\"lib/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"lib/openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/tokens/ERC721/ERC721BaseToken.sol\":{\"keccak256\":\"0xa58147a7928fa565edf8b84c20295042d392e8533f08909b9d0491cd21737c36\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9a675234058bd9e6f7155bbd12c2a624413a352fd3417b5fc851ca4dcf3fcfb\",\"dweb:/ipfs/QmWECr1hVYjob6vGctmVTR5dWYD58gxfG2btPfc833L4bM\"]},\"src/tokens/ERC721/presets/items/ERC721Items.sol\":{\"keccak256\":\"0x24a0da0a0eaf5a9c1af2af9accc0e43aa550ff86464fdd982dded108004e2b71\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a683ac382619a8dfa52ae675c24f3d359195bc99b5c792afbcb5823bef224a8b\",\"dweb:/ipfs/QmP6XD6CB2JU4gV7hgAfeehJ6FZX2cV4gdDPrDBdYkDS8s\"]},\"src/tokens/ERC721/presets/items/IERC721Items.sol\":{\"keccak256\":\"0xbc61c6e0addf7265274c8562c150e33e821aeb76324e2e43d17ca83df33f53f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0c7cfb1eaf71ee3bc3427c825ad7f392222584b834f3a13812b03099edff03d0\",\"dweb:/ipfs/QmSywRxqjNpesz6hsTJu555DJARVaPx3mG8Y3nxPCw3Jc3\"]},\"src/tokens/common/ERC2981Controlled.sol\":{\"keccak256\":\"0x4ed96fc921b717206c4d0b3ca82e46a852ff7873f93fe1db44593ae55b6ea41a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://136802a1cb1615af11f766782fcb01144f9bf8c124b86e1f66e876bb3be326c7\",\"dweb:/ipfs/QmYQJ1Em4XBaLe6xChrgB2TLJW1V2nbRJp1JMCTDuEjr62\"]},\"src/tokens/common/IERC2981Controlled.sol\":{\"keccak256\":\"0x27ed5643239353cebed9cc45d42d086a8e270f9f647fa6cd3a9315515319fa5a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://634b240b478d0a2d7d22ebe8f2850b6f3547ab4c5675bc17ac10c3e978730f67\",\"dweb:/ipfs/QmYH6fimhwEv7ZTER1MHdiWFcu4cKkskdSbgFawJqTmP85\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidInitialization()": [
								{
									"notice": "Invalid initialization error."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {
							"batchBurn(uint256[])": {
								"notice": "Allows the owner of the tokens to burn their tokens."
							},
							"burn(uint256)": {
								"notice": "Allows the owner of the token to burn their token."
							},
							"constructor": {
								"notice": "Deploy contract."
							},
							"contractURI()": {
								"notice": "Get the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata"
							},
							"initialize(address,string,string,string,string,address,uint96)": {
								"notice": "Initialize contract."
							},
							"mint(address,uint256)": {
								"notice": "Mint tokens."
							},
							"name()": {
								"notice": "Override the ERC721A name function."
							},
							"setBaseMetadataURI(string)": {
								"notice": "Update the base URI of token's URI."
							},
							"setContractURI(string)": {
								"notice": "Update the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata"
							},
							"setDefaultRoyalty(address,uint96)": {
								"notice": "Sets the royalty information that all ids in this contract will default to."
							},
							"setNameAndSymbol(string,string)": {
								"notice": "Set name and symbol of token."
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"notice": "Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id"
							},
							"supportsInterface(bytes4)": {
								"notice": "Check interface support."
							},
							"symbol()": {
								"notice": "Override the ERC721A symbol function."
							}
						},
						"notice": "An implementation of ERC-721 capable of minting when role provided.",
						"version": 1
					}
				}
			},
			"src/tokens/ERC721/presets/items/IERC721Items.sol": {
				"IERC721Items": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"mint(address,uint256)": {
								"params": {
									"amount": "Amount of tokens to mint.",
									"to": "Address to mint tokens to."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"mint(address,uint256)\":{\"params\":{\"amount\":\"Amount of tokens to mint.\",\"to\":\"Address to mint tokens to.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"notice\":\"Invalid initialization error.\"}]},\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Mint tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/items/IERC721Items.sol\":\"IERC721Items\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/items/IERC721Items.sol\":{\"keccak256\":\"0xbc61c6e0addf7265274c8562c150e33e821aeb76324e2e43d17ca83df33f53f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0c7cfb1eaf71ee3bc3427c825ad7f392222584b834f3a13812b03099edff03d0\",\"dweb:/ipfs/QmSywRxqjNpesz6hsTJu555DJARVaPx3mG8Y3nxPCw3Jc3\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"notice": "Invalid initialization error."
								}
							]
						},
						"kind": "user",
						"methods": {
							"mint(address,uint256)": {
								"notice": "Mint tokens."
							}
						},
						"version": 1
					}
				},
				"IERC721ItemsFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"mint(address,uint256)": {
								"params": {
									"amount": "Amount of tokens to mint.",
									"to": "Address to mint tokens to."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"mint(address,uint256)\":{\"params\":{\"amount\":\"Amount of tokens to mint.\",\"to\":\"Address to mint tokens to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Mint tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/items/IERC721Items.sol\":\"IERC721ItemsFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/items/IERC721Items.sol\":{\"keccak256\":\"0xbc61c6e0addf7265274c8562c150e33e821aeb76324e2e43d17ca83df33f53f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0c7cfb1eaf71ee3bc3427c825ad7f392222584b834f3a13812b03099edff03d0\",\"dweb:/ipfs/QmSywRxqjNpesz6hsTJu555DJARVaPx3mG8Y3nxPCw3Jc3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"mint(address,uint256)": {
								"notice": "Mint tokens."
							}
						},
						"version": 1
					}
				},
				"IERC721ItemsSignals": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"notice\":\"Invalid initialization error.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/items/IERC721Items.sol\":\"IERC721ItemsSignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/items/IERC721Items.sol\":{\"keccak256\":\"0xbc61c6e0addf7265274c8562c150e33e821aeb76324e2e43d17ca83df33f53f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0c7cfb1eaf71ee3bc3427c825ad7f392222584b834f3a13812b03099edff03d0\",\"dweb:/ipfs/QmSywRxqjNpesz6hsTJu555DJARVaPx3mG8Y3nxPCw3Jc3\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"notice": "Invalid initialization error."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/ERC721/presets/soulbound/ERC721Soulbound.sol": {
				"ERC721Soulbound": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotCompatibleWithSpotMints",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialMintExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SequentialUpToTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "SpotMintTokenIdTooSmall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TokenAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransfersLocked",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TRANSFER_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "batchBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "ownership",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTransferLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenBaseURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenContractURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "royaltyReceiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "royaltyFeeNumerator",
									"type": "uint96"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenBaseURI",
									"type": "string"
								}
							],
							"name": "setBaseMetadataURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenContractURI",
									"type": "string"
								}
							],
							"name": "setContractURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setDefaultRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"name": "setNameAndSymbol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setTokenRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "locked",
									"type": "bool"
								}
							],
							"name": "setTransferLocked",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "result",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"batchBurn(uint256[])": {
								"params": {
									"tokenIds": "Array of token ids to burn"
								}
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "Id of token to burn"
								}
							},
							"contractURI()": {
								"returns": {
									"_0": "Contract URI of token's URI"
								}
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"getTransferLocked()": {
								"returns": {
									"_0": "Whether or not transfers are locked."
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"initialize(address,string,string,string,string,address,uint96)": {
								"details": "This should be called immediately after deployment.",
								"params": {
									"owner": "The owner of the contract",
									"royaltyFeeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"royaltyReceiver": "Address of who should be sent the royalty payment",
									"tokenBaseURI": "Base URI of the token",
									"tokenContractURI": "Contract URI of the token",
									"tokenName": "Name of the token",
									"tokenSymbol": "Symbol of the token"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"mint(address,uint256)": {
								"params": {
									"amount": "Amount of tokens to mint.",
									"to": "Address to mint tokens to."
								}
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"setBaseMetadataURI(string)": {
								"params": {
									"tokenBaseURI": "New base URI of token's URI"
								}
							},
							"setContractURI(string)": {
								"params": {
									"tokenContractURI": "New contract URI of token's URI"
								}
							},
							"setDefaultRoyalty(address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment"
								}
							},
							"setNameAndSymbol(string,string)": {
								"params": {
									"tokenName": "Name of token.",
									"tokenSymbol": "Symbol of token."
								}
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment",
									"tokenId": "The token id to set the royalty information for"
								}
							},
							"setTransferLocked(bool)": {
								"params": {
									"locked": "Whether or not transfers are locked."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "Interface id"
								},
								"returns": {
									"_0": "True if supported"
								}
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"allocate_memory_array_string": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_string_storage_11664": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"clean_up_bytearray_end_slots_string_storage_4124": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_string_to_string": {
									"entryPoint": 628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 389,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523462000146576200001462000161565b6200001e62000161565b81516001600160401b038111620001405762000047816200004160025462000185565b620001c2565b602080601f8311600114620000af575081906200008294600092620000a3575b50508160011b916000199060031b1c19161760025562000274565b60008055336080526040516141fb908162000368823960805181613cd30152f35b01519050388062000067565b60026000529193601f1985167f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace936000905b82821062000127575050916001939186620000829794106200010d575b505050811b0160025562000274565b015160001960f88460031b161c19169055388080620000fe565b80600186978294978701518155019601940190620000e1565b6200014b565b600080fd5b634e487b7160e01b600052604160045260246000fd5b60405190602082016001600160401b03811183821017620001405760405260008252565b90600182811c92168015620001b7575b6020831014620001a157565b634e487b7160e01b600052602260045260246000fd5b91607f169162000195565b601f8111620001cf575050565b6000906002825260208220906020601f850160051c8301941062000210575b601f0160051c01915b8281106200020457505050565b818155600101620001f7565b9092508290620001ee565b601f811162000228575050565b6000906003825260208220906020601f850160051c8301941062000269575b601f0160051c01915b8281106200025d57505050565b81815560010162000250565b909250829062000247565b80519091906001600160401b0381116200014057620002a0816200029a60035462000185565b6200021b565b602080601f8311600114620002df5750819293600092620002d3575b50508160011b916000199060031b1c191617600355565b015190503880620002bc565b6003600052601f198316949091907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b926000905b8782106200034e57505083600195961062000334575b505050811b01600355565b015160001960f88460031b161c1916905538808062000329565b806001859682949686015181550195019301906200031356fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461029757806304634d8d1461029257806306fdde031461028d578063081812fc14610288578063095ea7b31461028357806318160ddd1461027e57806323b872dd14610279578063248a9ca3146102745780632a55205a1461026f5780632f2ff15d1461026a57806335e60bd41461026557806336568abe1461026057806340c10f191461025b57806342842e0e1461025657806342966c68146102515780635944c7531461024c5780635a446215146102475780635bbb2177146102425780636352211e1461023d57806368a37ae81461023857806370a08231146102335780637e518ec81461022e578063842f9b68146102295780638462151c146102245780639010d07c1461021f57806391d148541461021a578063938e3d7b1461021557806395d89b411461021057806398dd69c81461020b57806399a2557a14610206578063a217fddf14610201578063a22cb465146101fc578063b88d4fde146101f7578063c23dc68f146101f2578063c87b56dd146101ed578063ca15c873146101e8578063d547741f146101e3578063dc8e92ea146101de578063e8a3d485146101d95763e985e9c5146101d457600080fd5b612057565b611fb0565b611f29565b611eea565b611ebe565b611d52565b611ce0565b611c85565b611bb6565b611b9a565b611a0a565b61196c565b6118c5565b6117c6565b611766565b611713565b611587565b611526565b611427565b6113d1565b611396565b61135a565b6112f4565b61112a565b610eb8565b610e9c565b610e79565b610d61565b610c9b565b610b40565b6109fd565b61092c565b6108fd565b6108eb565b610886565b610767565b6106ed565b6105ee565b61054e565b6102cb565b7fffffffff000000000000000000000000000000000000000000000000000000008116036102c657565b600080fd5b346102c65760206003193601126102c65761034e6004356102eb8161029c565b7fffffffff00000000000000000000000000000000000000000000000000000000811690817fb1c990bc0000000000000000000000000000000000000000000000000000000014918215610352575b505060405190151581529081906020820190565b0390f35b7f40c10f190000000000000000000000000000000000000000000000000000000081149250908215610388575b5050388061033a565b7fc21b8f280000000000000000000000000000000000000000000000000000000082149250908215610485575b82156103f4575b5081156103e3575b81156103d3575b50388061037f565b6103dd915061405f565b386103cb565b90506103ee8161405f565b906103c4565b9091507f01ffc9a700000000000000000000000000000000000000000000000000000000811490811561045b575b8115610431575b5090386103bc565b7f5b5e139f0000000000000000000000000000000000000000000000000000000091501438610429565b7f80ac58cd0000000000000000000000000000000000000000000000000000000081149150610422565b7f8446a79e00000000000000000000000000000000000000000000000000000000811492506103b5565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036102c657565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036102c657565b60a4359073ffffffffffffffffffffffffffffffffffffffff821682036102c657565b604435906bffffffffffffffffffffffff821682036102c657565b60c435906bffffffffffffffffffffffff821682036102c657565b346102c65760406003193601126102c6576105676104af565b6024356bffffffffffffffffffffffff811681036102c6576105909161058b612957565b613f09565b005b60005b8381106105a55750506000910152565b8181015183820152602001610595565b90601f19601f6020936105d381518092818752878088019101610592565b0116010190565b9060206105eb9281815201906105b5565b90565b346102c6576000806003193601126106ea576040519080600e546106118161359c565b808552916001918083169081156106a25750600114610647575b61034e8561063b8187038261108a565b604051918291826105da565b9250600e83527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd5b82841061068a57505050810160200161063b8261034e61062b565b8054602085870181019190915290930192810161066f565b86955061034e9693506020925061063b9491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b820101929361062b565b80fd5b346102c65760206003193601126102c65760043561070a8161228c565b1561073d576000526006602052602073ffffffffffffffffffffffffffffffffffffffff60406000205416604051908152f35b7fcf4700e40000000000000000000000000000000000000000000000000000000060005260046000fd5b60406003193601126102c65761077b6104af565b60243573ffffffffffffffffffffffffffffffffffffffff8061079d83612152565b169081330361081d575b600083815260066020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790559316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b81600052600760205260ff6108563360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166107a7577fcfb3b9420000000000000000000000000000000000000000000000000000000060005260046000fd5b346102c65760006003193601126102c65760206000546001549003604051908152f35b60031960609101126102c65773ffffffffffffffffffffffffffffffffffffffff9060043582811681036102c6579160243590811681036102c6579060443590565b6105906108f7366108a9565b916122ed565b346102c65760206003193601126102c657600435600052600b6020526020600160406000200154604051908152f35b346102c65760406003193601126102c657600435600052600a60205260406000206040519061095a8261104d565b549073ffffffffffffffffffffffffffffffffffffffff82169182825260a01c602082015290156109ef575b6109c66127106109aa6bffffffffffffffffffffffff602085015116602435612fd0565b04915173ffffffffffffffffffffffffffffffffffffffff1690565b6040805173ffffffffffffffffffffffffffffffffffffffff9290921682526020820192909252f35b506109f8612f9d565b610986565b346102c65760406003193601126102c657600435610aa5610a1c6104d2565b73ffffffffffffffffffffffffffffffffffffffff610a9d600094808652600b602052610a4f6001604088200154612a56565b808652600b60205260ff610a8685604089209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541615610aa957600052600c602052604060002090565b911690613418565b5080f35b808652600b602052610ade84604088209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533838516827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8980a4600052600c602052604060002090565b346102c65760206003193601126102c6576004358015158091036102c6573360009081527f6937e6b1cde141aad05c7d03126a39eb070a9f0f221c44303558fa7a951a7435602052604090205460ff1615610bcc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff006011549260081b16911617601155600080f35b610c976048610c65610bdd336130d1565b610c57610be861316e565b6040519485937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000006020860152610c28815180926020603789019101610592565b84017f206973206d697373696e6720726f6c65200000000000000000000000000000006037820152019061213b565b03601f19810183528261108a565b6040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352600483016105da565b0390fd5b346102c65760406003193601126102c657610cb46104d2565b3373ffffffffffffffffffffffffffffffffffffffff821603610cdd5761059090600435612ea9565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152fd5b346102c65760406003193601126102c657610d7a6104af565b60243590610d866129ac565b6000918254918115610e7457610d9a613fe1565b600191610e0073ffffffffffffffffffffffffffffffffffffffff83169284831460e11b4260a01b178417610dd9876000526004602052604060002090565b5573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b68010000000000000001820281540190558115610e6f578301929180805b610e2a575b8585815580f35b15610e5e575b84818484887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4610e1e565b80920191838303610e305780610e23565b612710565b6126e6565b610590610e85366108a9565b9060405192610e938461106e565b60008452612505565b346102c65760206003193601126102c657610590600435613a64565b346102c65760606003193601126102c657610ed16104d2565b610ed9610518565b90610ee2612957565b610efe6127106bffffffffffffffffffffffff84161115613e7e565b73ffffffffffffffffffffffffffffffffffffffff811615610fc057610f5d61059092610f48610f2c6110ad565b73ffffffffffffffffffffffffffffffffffffffff9094168452565b6bffffffffffffffffffffffff166020830152565b610f73600435600052600a602052604060002090565b815160209092015160a01b7fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f455243323938313a20496e76616c696420706172616d657465727300000000006044820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761106957604052565b61101e565b6020810190811067ffffffffffffffff82111761106957604052565b90601f601f19910116810190811067ffffffffffffffff82111761106957604052565b604051906110ba8261104d565b565b67ffffffffffffffff811161106957601f01601f191660200190565b9291926110e4826110bc565b916110f2604051938461108a565b8294818452818301116102c6578281602093846000960137010152565b9080601f830112156102c6578160206105eb933591016110d8565b346102c65760406003193601126102c65767ffffffffffffffff6004358181116102c65761115c90369060040161110f565b906024358181116102c65761117590369060040161110f565b9061117e612a01565b82519081116110695761119b81611196600e5461359c565b6135ef565b602080601f83116001146111dc57508190610590946000926111d1575b50506000198260011b9260031b1c191617600e556137b3565b0151905038806111b8565b600e6000529193601f1985167fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd936000905b82821061124f575050916001939186610590979410611236575b505050811b01600e556137b3565b015160001960f88460031b161c19169055388080611228565b8060018697829497870151815501960194019061120e565b6020908160408183019282815285518094520193019160005b82811061128e575050505090565b90919293826080826112e8600194895162ffffff6060809273ffffffffffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152604081015115156040860152015116910152565b01950193929101611280565b346102c65760206003193601126102c65767ffffffffffffffff6004358181116102c657366023820112156102c65780600401359182116102c6573660248360051b830101116102c65761034e91602461134e9201612917565b60405191829182611267565b346102c65760206003193601126102c657602073ffffffffffffffffffffffffffffffffffffffff61138d600435612152565b16604051908152f35b346102c65760006003193601126102c65760206040517f915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c8152f35b346102c65760206003193601126102c65760206113f46113ef6104af565b6120c7565b604051908152f35b60206003198201126102c6576004359067ffffffffffffffff82116102c6576105eb9160040161110f565b346102c657611435366113fc565b61143d612a01565b805167ffffffffffffffff8111611069576114628161145d600d5461359c565b613660565b602080601f831160011461149f57508192600092611494575b50506000198260011b9260031b1c191617600d55600080f35b01519050388061147b565b90601f198316936114d2600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb590565b926000905b86821061150e57505083600195106114f5575b505050811b01600d55005b015160001960f88460031b161c191690553880806114ea565b806001859682949686015181550195019301906114d7565b346102c65760006003193601126102c657602060ff60115460081c166040519015158152f35b6020908160408183019282815285518094520193019160005b828110611573575050505090565b835185529381019392810192600101611565565b346102c65760206003193601126102c6576115a06104af565b60008054906060809280159283156115c1575b6040518061034e878261154c565b9491935083929091859161170e576115d8816120c7565b95866115f2575b505050505061034e9150388080806115b3565b90919293945085841115611705575b60409283519560019384890160051b88019889875261161e612842565b9084916116346116308a830151151590565b1590565b6116e6575b50849591959887805b611662575b5050505050505050505061034e9250815238808080806115df565b156116c8575b859661167384612899565b808b0151156116905750508786935b0196888d8b52979397611642565b93909351806116c0575b50848418861b156116ad575b8890611682565b998801600581901b8c018b9052996116a6565b93503861169a565b80831480156116dd575b156116685780611647565b50818a146116d2565b5173ffffffffffffffffffffffffffffffffffffffff16915038611639565b94508294611601565b6127e2565b346102c65760406003193601126102c657600435600052600c602052602073ffffffffffffffffffffffffffffffffffffffff61175660243560406000206133e2565b9190546040519260031b1c168152f35b346102c65760406003193601126102c657602060ff6117ba6117866104d2565b600435600052600b845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b346102c6576117d4366113fc565b6117dc612a01565b805167ffffffffffffffff811161106957611801816117fc60105461359c565b6136d1565b602080601f831160011461183e57508192600092611833575b50506000198260011b9260031b1c191617601055600080f35b01519050388061181a565b90601f1983169361187160106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67290565b926000905b8682106118ad5750508360019510611894575b505050811b01601055005b015160001960f88460031b161c19169055388080611889565b80600185968294968601518155019501930190611876565b346102c6576000806003193601126106ea576040519080600f546118e88161359c565b808552916001918083169081156106a257506001146119115761034e8561063b8187038261108a565b9250600f83527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8025b82841061195457505050810160200161063b8261034e61062b565b80546020858701810191909152909301928101611939565b346102c65760e06003193601126102c6576119856104af565b67ffffffffffffffff906024358281116102c6576119a790369060040161110f565b6044358381116102c6576119bf90369060040161110f565b6064358481116102c6576119d790369060040161110f565b6084359485116102c6576119f261059095369060040161110f565b916119fb6104f5565b93611a04610533565b95613c81565b346102c6576060806003193601126102c657611a246104af565b60243591906044358383828083101561170e5760005480911015611b92575b50611a4d846120c7565b9183871015611b89575b82611a6b575b6040518061034e888261154c565b90919293945085840383811115611b81575b50604092835195600193600591611a9d868501841b8a019a8b8952612881565b93600094611ab06116308a830151151590565b611b62575b5060009594959887805b611adf575b5050505050505050505061034e925081523880808080611a5d565b15611b44575b600096611af187612899565b808b015115611b0e5750508787965b0196888d8b52979697611abf565b9690965180611b3c575b50838718851b15611b2b575b8890611b00565b99880180861b8c018b905299611b24565b965038611b18565b8086148015611b59575b15611ae55780611ac4565b50818a14611b4e565b5173ffffffffffffffffffffffffffffffffffffffff16945038611ab5565b925038611a7d565b60009250611a57565b925038611a43565b346102c65760006003193601126102c657602060405160008152f35b346102c65760406003193601126102c657611bcf6104af565b602435908115158092036102c65773ffffffffffffffffffffffffffffffffffffffff90336000526007602052611c2a8160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60806003193601126102c657611c996104af565b611ca16104d2565b6064359167ffffffffffffffff83116102c657366023840112156102c657611cd66105909336906024816004013591016110d8565b9160443591612505565b346102c65760206003193601126102c6576080611cfe600435612881565b611d50604051809262ffffff6060809273ffffffffffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152604081015115156040860152015116910152565bf35b346102c6576020806003193601126102c657600435611d708161228c565b15611e94576040519082826000600d54611d898161359c565b80845290600190818116908115611e545750600114611df5575b5050611db19250038361108a565b815115611de25761034e92610c57611dcb61063b9361269d565b611ddc60405195869485019061213b565b9061213b565b50505061034e611df0612128565b61063b565b90939150600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5936000915b818310611e3c575087945050820101611db138611da3565b85548884018501529485019487945091830191611e24565b9050611db19593507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b820101859238611da3565b7fa14c4b500000000000000000000000000000000000000000000000000000000060005260046000fd5b346102c65760206003193601126102c657600435600052600c6020526020604060002054604051908152f35b346102c65760406003193601126102c657610590600435611f096104d2565b9080600052600b602052611f24600160406000200154612a56565b612ea9565b346102c6576020806003193601126102c65767ffffffffffffffff6004358181116102c657366023820112156102c6578060040135918211611069578160051b60405192611f798583018561108a565b8352602484840191830101913683116102c657602401905b828210611fa15761059084613c43565b81358152908401908401611f91565b346102c6576000806003193601126106ea576040519080601054611fd38161359c565b808552916001918083169081156106a25750600114611ffc5761034e8561063b8187038261108a565b9250601083527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6725b82841061203f57505050810160200161063b8261034e61062b565b80546020858701810191909152909301928101612024565b346102c65760406003193601126102c657602060ff6117ba6120776104af565b73ffffffffffffffffffffffffffffffffffffffff6120946104d2565b91166000526007845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b73ffffffffffffffffffffffffffffffffffffffff1680156120fe57600052600560205267ffffffffffffffff6040600020541690565b7f8f4eb6040000000000000000000000000000000000000000000000000000000060005260046000fd5b604051906121358261106e565b60008252565b9061214e60209282815194859201610592565b0190565b612166816000526004602052604060002090565b5490811561219657507c0100000000000000000000000000000000000000000000000000000000811661273a5790565b9050600090815481101561222357600019905b016121be816000526004602052604060002090565b5490811561221957507c0100000000000000000000000000000000000000000000000000000000811615612214576004827fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b905090565b60001991506121a9565b6004827fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8015612287576000190190565b61224b565b9060009160008054821061229e575050565b9192505b80825260046020526040822054806122c757506122c060409161227a565b90506122a2565b7c0100000000000000000000000000000000000000000000000000000000161592915050565b9190916122f982612152565b9073ffffffffffffffffffffffffffffffffffffffff809116938482841603612500576000848152600660205260409020805461235273ffffffffffffffffffffffffffffffffffffffff881633908114908314171590565b612496575b61236087614028565b61248c575b506123908573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b80546000190190556123c28173ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b80546001019055169283917c0200000000000000000000000000000000000000000000000000000000804260a01b851717612407866000526004602052604060002090565b55811615612442575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a41561243d57565b6127b8565b6001840161245a816000526004602052604060002090565b5415612467575b50612410565b600054811461246157612484906000526004602052604060002090565b553880612461565b6000905538612365565b6124f66116306124ef336124ca8b73ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b156123575761278e565b612764565b9291906125138282866122ed565b803b612520575b50505050565b612529936125a6565b15612537573880808061251a565b7fd1a57ed60000000000000000000000000000000000000000000000000000000060005260046000fd5b908160209103126102c657516105eb8161029c565b3d156125a1573d90612587826110bc565b91612595604051938461108a565b82523d6000602084013e565b606090565b91926020916126189160006040519586809581947f150b7a02000000000000000000000000000000000000000000000000000000009a8b845233600485015273ffffffffffffffffffffffffffffffffffffffff809516602485015260448401526080606484015260848301906105b5565b0393165af16000918161266d575b5061264757612633612576565b80511561264257805190602001fd5b612537565b7fffffffff00000000000000000000000000000000000000000000000000000000161490565b61268f91925060203d8111612696575b612687818361108a565b810190612561565b9038612626565b503d61267d565b9060405160a08101604052600019608082019360008552935b0192600a908181066030018553049283156126d457600019906126b6565b9250608083601f199203019201918252565b7fb562e8dd0000000000000000000000000000000000000000000000000000000060005260046000fd5b7f2e0763000000000000000000000000000000000000000000000000000000000060005260046000fd5b7fdf2d9b420000000000000000000000000000000000000000000000000000000060005260046000fd5b7fa11481000000000000000000000000000000000000000000000000000000000060005260046000fd5b7f59c896be0000000000000000000000000000000000000000000000000000000060005260046000fd5b7fea553b340000000000000000000000000000000000000000000000000000000060005260046000fd5b7f32c1995a0000000000000000000000000000000000000000000000000000000060005260046000fd5b604051906080820182811067ffffffffffffffff8211176110695760405260006060838281528260208201528260408201520152565b6000908161284e61280c565b928054612859575050565b9192505b80825260046020526040822054612877576000190161285d565b6105eb9150612899565b9061288a61280c565b91600080548210612859575050565b6128a161280c565b5060005260046020526040600020546128b861280c565b9073ffffffffffffffffffffffffffffffffffffffff8116825267ffffffffffffffff8160a01c1660208301527c010000000000000000000000000000000000000000000000000000000081161515604083015260e81c606082015290565b6040519180835260051b6020818401016040525b808180156129505761294790601f198091019385010135612881565b9084015261292b565b5050505090565b3360009081527f142ae0bd48b54fb380e908bf20fd1f4ea4f2b9a2663ca7698d91ef391575c621602052604090205460ff161561299057565b610c976048610c656129a1336130d1565b610c57610be861320b565b3360009081527ff70e363b3d7895af770c4a138460777d52eebd3cb9962ccc6b58721f6127bbc8602052604090205460ff16156129e557565b610c976048610c656129f6336130d1565b610c57610be86132a8565b3360009081527fea6919ad9e84aa527aa2dffb6ac6f0a6af0387a080d10167acddf2a249a612dd602052604090205460ff1615612a3a57565b610c976048610c65612a4b336130d1565b610c57610be8613345565b80600052600b60205260ff612a8f3360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541615612a995750565b612aa2336130d1565b612aaa612fe3565b916030612ab68461303e565b536078612ac28461304b565b5360415b60018111612ae557610c976048610c6585610c5788610be8881561306c565b90600f8116906010821015612b33577f3031323334353637383961626364656600000000000000000000000000000000612b2e921a612b24848761305b565b5360041c9161227a565b612ac6565b61300f565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527f6937e6b1cde141aad05c7d03126a39eb070a9f0f221c44303558fa7a951a74356020526040808220612bc3949392907f915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c9060ff905b541615612bc6575b8152600c60205220911690613418565b50565b808252600b602052612bfa858484209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533848616827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8580a4612bb3565b73ffffffffffffffffffffffffffffffffffffffff81811660009081527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76602052604080822054612bc39493929060ff1615612cb9575b808052600c60205220911690613418565b808052600b602052612ced848383209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533838516827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4612ca8565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527fea6919ad9e84aa527aa2dffb6ac6f0a6af0387a080d10167acddf2a249a612dd6020526040808220612bc3949392907fe02a0315b383857ac496e9d2b2546a699afaeb4e5e83a1fdef64376d0b74e5a59060ff90612bab565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527f142ae0bd48b54fb380e908bf20fd1f4ea4f2b9a2663ca7698d91ef391575c6216020526040808220612bc3949392907f6db4061a20ca83a3be756ee172bd37a029093ac5afe4ce968c6d5435b43cb0119060ff90612bab565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527ff70e363b3d7895af770c4a138460777d52eebd3cb9962ccc6b58721f6127bbc86020526040808220612bc3949392907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69060ff90612bab565b9073ffffffffffffffffffffffffffffffffffffffff6040612bc393600090808252600b60205260ff612efe868585209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5416612f15575b8152600c602052209116906134e7565b808252600b602052612f49858484209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905533848616827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a4612f05565b60405190612faa8261104d565b60095473ffffffffffffffffffffffffffffffffffffffff8116835260a01c6020830152565b8181029291811591840414171561228757565b604051906080820182811067ffffffffffffffff82111761106957604052604282526060366020840137565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b805115612b335760200190565b805160011015612b335760210190565b908151811015612b33570160200190565b1561307357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b604051906060820182811067ffffffffffffffff82111761106957604052602a8252604036602084013760306131068361303e565b5360786131128361304b565b536029905b6001821161312a576105eb91501561306c565b600f8116906010821015612b33577f3031323334353637383961626364656600000000000000000000000000000000613168921a612b24848661305b565b90613117565b7f915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c613197612fe3565b9060306131a38361303e565b5360786131af8361304b565b536041905b600182116131c7576105eb91501561306c565b600f8116906010821015612b33577f3031323334353637383961626364656600000000000000000000000000000000613205921a612b24848661305b565b906131b4565b7f6db4061a20ca83a3be756ee172bd37a029093ac5afe4ce968c6d5435b43cb011613234612fe3565b9060306132408361303e565b53607861324c8361304b565b536041905b60018211613264576105eb91501561306c565b600f8116906010821015612b33577f30313233343536373839616263646566000000000000000000000000000000006132a2921a612b24848661305b565b90613251565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66132d1612fe3565b9060306132dd8361303e565b5360786132e98361304b565b536041905b60018211613301576105eb91501561306c565b600f8116906010821015612b33577f303132333435363738396162636465660000000000000000000000000000000061333f921a612b24848661305b565b906132ee565b7fe02a0315b383857ac496e9d2b2546a699afaeb4e5e83a1fdef64376d0b74e5a561336e612fe3565b90603061337a8361303e565b5360786133868361304b565b536041905b6001821161339e576105eb91501561306c565b600f8116906010821015612b33577f30313233343536373839616263646566000000000000000000000000000000006133dc921a612b24848661305b565b9061338b565b8054821015612b335760005260206000200190600090565b91613414918354906000199060031b92831b921b19161790565b9055565b6001810190826000528160205260406000205415600014613486578054680100000000000000008110156110695761347161345a8260018794018555846133e2565b81939154906000199060031b92831b921b19161790565b90555491600052602052604060002055600190565b505050600090565b80549081156134b857600019809201916134a883836133e2565b909182549160031b1b1916905555565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600181019180600052826020526040600020549283151560001461359357600019928385019085821161228757805494850194851161228757600095858361353b9461354a9803613550575b50505061348e565b90600052602052604060002090565b55600190565b61357a6135749161356461358a94876133e2565b90549060031b1c928391876133e2565b906133fa565b8590600052602052604060002090565b55388080613533565b50505050600090565b90600182811c921680156135e5575b60208310146135b657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f16916135ab565b601f81116135fb575050565b600090600e82527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd906020601f850160051c83019410613656575b601f0160051c01915b82811061364b57505050565b81815560010161363f565b9092508290613636565b601f811161366c575050565b600090600d82527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5906020601f850160051c830194106136c7575b601f0160051c01915b8281106136bc57505050565b8181556001016136b0565b90925082906136a7565b601f81116136dd575050565b600090601082527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672906020601f850160051c83019410613738575b601f0160051c01915b82811061372d57505050565b818155600101613721565b9092508290613718565b601f811161374e575050565b600090600f82527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802906020601f850160051c830194106137a9575b601f0160051c01915b82811061379e57505050565b818155600101613792565b9092508290613789565b90815167ffffffffffffffff8111611069576137d9816137d4600f5461359c565b613742565b602080601f83116001146138145750819293600092613809575b50506000198260011b9260031b1c191617600f55565b0151905038806137f3565b90601f19831694613847600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290565b926000905b87821061388457505083600195961061386b575b505050811b01600f55565b015160001960f88460031b161c19169055388080613860565b8060018596829496860151815501950193019061384c565b90815167ffffffffffffffff8111611069576138bd8161145d600d5461359c565b602080601f83116001146138f857508192936000926138ed575b50506000198260011b9260031b1c191617600d55565b0151905038806138d7565b90601f1983169461392b600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb590565b926000905b87821061396857505083600195961061394f575b505050811b01600d55565b015160001960f88460031b161c19169055388080613944565b80600185968294968601518155019501930190613930565b90815167ffffffffffffffff8111611069576139a1816117fc60105461359c565b602080601f83116001146139dc57508192936000926139d1575b50506000198260011b9260031b1c191617601055565b0151905038806139bb565b90601f19831694613a0f60106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67290565b926000905b878210613a4c575050836001959610613a33575b505050811b01601055565b015160001960f88460031b161c19169055388080613a28565b80600185968294968601518155019501930190613a14565b613a6d81612152565b73ffffffffffffffffffffffffffffffffffffffff8116613a9b836000526006602052604060002090815490565b9290613ac373ffffffffffffffffffffffffffffffffffffffff841633908114908614171590565b613c05575b600093613ad484614028565b613bfc575b50613b048273ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b6fffffffffffffffffffffffffffffffff81540190557c03000000000000000000000000000000000000000000000000000000004260a01b831717613b53856000526004602052604060002090565b557c0200000000000000000000000000000000000000000000000000000000811615613bb3575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a46110ba613bae60015460010190565b600155565b60018401613bcb816000526004602052604060002090565b5415613bd8575b50613b7a565b83548114613bd257613bf4906000526004602052604060002090565b553880613bd2565b83905538613ad9565b613c396116306124ef336124ca8773ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b15613ac85761278e565b80519060005b828110613c5557505050565b8151811015612b3357613c7060208260051b84010151613a64565b600019811461228757600101613c49565b9594939291906101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6011541617601155613cbc87612b38565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163314801590613e72575b613e485780519067ffffffffffffffff821161106957613d2282611196600e5461359c565b60209081601f8411600114613dc5575093613d6b613d759484613d959b9a9895613d7095613d909b996000926111d15750506000198260011b9260031b1c191617600e556137b3565b61389c565b613980565b613d7e84612c51565b613d8784612d44565b61058b84612dbb565b612e32565b6110ba60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006011541617601155565b600e6000529190601f1984167fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd936000905b828210613e3057505094600185613d7095613d909b9995613d6b95613d959f9e9c99613d759b1061123657505050811b01600e556137b3565b80600186978294978701518155019601940190613df7565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b5060ff60115416613cfd565b15613e8557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c2065786365656460448201527f2073616c655072696365000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff6bffffffffffffffffffffffff831691613f3c612710841115613e7e565b16918215613f83577fffffffffffffffffffffffff0000000000000000000000000000000000000000916020604051613f748161104d565b858152015260a01b1617600955565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152fd5b60ff60115460081c1680614020575b613ff657565b60046040517fdb89e3f4000000000000000000000000000000000000000000000000000000008152fd5b506000613ff0565b60ff60115460081c16908161403f575b50613ff657565b73ffffffffffffffffffffffffffffffffffffffff915016151538614038565b6140688161414e565b9081156140b6575b811561408b575b8115614081575090565b6105eb91506140c7565b7fffffffff000000000000000000000000000000000000000000000000000000008116159150614077565b90506140c1816140c7565b90614070565b7fffffffff000000000000000000000000000000000000000000000000000000008116907f5a05180f00000000000000000000000000000000000000000000000000000000821491821561411a57505090565b7f7965db0b000000000000000000000000000000000000000000000000000000001491508115614148575090565b6105eb91505b7fffffffff00000000000000000000000000000000000000000000000000000000167f2a55205a00000000000000000000000000000000000000000000000000000000811490811561419e575090565b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150149056fea26469706673582212208cc38c1dc1c4ee2f4014fecf18b2fa82f3e8565c358f7a55501c9e6e8a901fd564736f6c63430008130033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x146 JUMPI PUSH3 0x14 PUSH3 0x161 JUMP JUMPDEST PUSH3 0x1E PUSH3 0x161 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x140 JUMPI PUSH3 0x47 DUP2 PUSH3 0x41 PUSH1 0x2 SLOAD PUSH3 0x185 JUMP JUMPDEST PUSH3 0x1C2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0xAF JUMPI POP DUP2 SWAP1 PUSH3 0x82 SWAP5 PUSH1 0x0 SWAP3 PUSH3 0xA3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 SSTORE PUSH3 0x274 JUMP JUMPDEST PUSH1 0x0 DUP1 SSTORE CALLER PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x41FB SWAP1 DUP2 PUSH3 0x368 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x3CD3 ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x67 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP2 SWAP4 PUSH1 0x1F NOT DUP6 AND PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x127 JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH3 0x82 SWAP8 SWAP5 LT PUSH3 0x10D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0x274 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xFE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH3 0xE1 JUMP JUMPDEST PUSH3 0x14B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x140 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x1B7 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x1A1 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x195 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x1CF JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x210 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x204 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1F7 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x1EE JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x228 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x269 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x25D JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x250 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x247 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x140 JUMPI PUSH3 0x2A0 DUP2 PUSH3 0x29A PUSH1 0x3 SLOAD PUSH3 0x185 JUMP JUMPDEST PUSH3 0x21B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x2DF JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x2D3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x2BC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x34E JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x334 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x329 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x313 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x35E60BD4 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x5944C753 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x5A446215 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x5BBB2177 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x68A37AE8 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x7E518EC8 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x842F9B68 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x98DD69C8 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x99A2557A EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xC23DC68F EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xDC8E92EA EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x1D9 JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x1FB0 JUMP JUMPDEST PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x1CE0 JUMP JUMPDEST PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x196C JUMP JUMPDEST PUSH2 0x18C5 JUMP JUMPDEST PUSH2 0x17C6 JUMP JUMPDEST PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x1713 JUMP JUMPDEST PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x1427 JUMP JUMPDEST PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x1396 JUMP JUMPDEST PUSH2 0x135A JUMP JUMPDEST PUSH2 0x12F4 JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST PUSH2 0xE79 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH2 0xC9B JUMP JUMPDEST PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x886 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH2 0x2CB JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x34E PUSH1 0x4 CALLDATALOAD PUSH2 0x2EB DUP2 PUSH2 0x29C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SWAP1 DUP2 PUSH32 0xB1C990BC00000000000000000000000000000000000000000000000000000000 EQ SWAP2 DUP3 ISZERO PUSH2 0x352 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP3 POP SWAP1 DUP3 ISZERO PUSH2 0x388 JUMPI JUMPDEST POP POP CODESIZE DUP1 PUSH2 0x33A JUMP JUMPDEST PUSH32 0xC21B8F2800000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP3 POP SWAP1 DUP3 ISZERO PUSH2 0x485 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x3F4 JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x3E3 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3D3 JUMPI JUMPDEST POP CODESIZE DUP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x3DD SWAP2 POP PUSH2 0x405F JUMP JUMPDEST CODESIZE PUSH2 0x3CB JUMP JUMPDEST SWAP1 POP PUSH2 0x3EE DUP2 PUSH2 0x405F JUMP JUMPDEST SWAP1 PUSH2 0x3C4 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x45B JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x431 JUMPI JUMPDEST POP SWAP1 CODESIZE PUSH2 0x3BC JUMP JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x429 JUMP JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x422 JUMP JUMPDEST PUSH32 0x8446A79E00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP3 POP PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x567 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x2C6 JUMPI PUSH2 0x590 SWAP2 PUSH2 0x58B PUSH2 0x2957 JUMP JUMPDEST PUSH2 0x3F09 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x5A5 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x595 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x5D3 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x592 JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x5EB SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x5B5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xE SLOAD PUSH2 0x611 DUP2 PUSH2 0x359C JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x6A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x647 JUMPI JUMPDEST PUSH2 0x34E DUP6 PUSH2 0x63B DUP2 DUP8 SUB DUP3 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x5DA JUMP JUMPDEST SWAP3 POP PUSH1 0xE DUP4 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD JUMPDEST DUP3 DUP5 LT PUSH2 0x68A JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x63B DUP3 PUSH2 0x34E PUSH2 0x62B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x66F JUMP JUMPDEST DUP7 SWAP6 POP PUSH2 0x34E SWAP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x63B SWAP5 SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 SWAP4 PUSH2 0x62B JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x70A DUP2 PUSH2 0x228C JUMP JUMPDEST ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x77B PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x79D DUP4 PUSH2 0x2152 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x81D JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x856 CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x7A7 JUMPI PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x2C6 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x2C6 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x2C6 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x590 PUSH2 0x8F7 CALLDATASIZE PUSH2 0x8A9 JUMP JUMPDEST SWAP2 PUSH2 0x22ED JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x95A DUP3 PUSH2 0x104D JUMP JUMPDEST SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO PUSH2 0x9EF JUMPI JUMPDEST PUSH2 0x9C6 PUSH2 0x2710 PUSH2 0x9AA PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x2FD0 JUMP JUMPDEST DIV SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE RETURN JUMPDEST POP PUSH2 0x9F8 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x986 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xAA5 PUSH2 0xA1C PUSH2 0x4D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA9D PUSH1 0x0 SWAP5 DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0xA4F PUSH1 0x1 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD PUSH2 0x2A56 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0xA86 DUP6 PUSH1 0x40 DUP10 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 AND SWAP1 PUSH2 0x3418 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0xADE DUP5 PUSH1 0x40 DUP9 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP10 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x2C6 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6937E6B1CDE141AAD05C7D03126A39EB070A9F0F221C44303558FA7A951A7435 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBCC JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH2 0xFF00 PUSH1 0x11 SLOAD SWAP3 PUSH1 0x8 SHL AND SWAP2 AND OR PUSH1 0x11 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 PUSH2 0xBDD CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xBE8 PUSH2 0x316E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xC28 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x592 JUMP JUMPDEST DUP5 ADD PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x37 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x213B JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x5DA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0xCB4 PUSH2 0x4D2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0xCDD JUMPI PUSH2 0x590 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2EA9 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0xD7A PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xD86 PUSH2 0x29AC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SLOAD SWAP2 DUP2 ISZERO PUSH2 0xE74 JUMPI PUSH2 0xD9A PUSH2 0x3FE1 JUMP JUMPDEST PUSH1 0x1 SWAP2 PUSH2 0xE00 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 DUP5 DUP4 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP5 OR PUSH2 0xDD9 DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH9 0x10000000000000001 DUP3 MUL DUP2 SLOAD ADD SWAP1 SSTORE DUP2 ISZERO PUSH2 0xE6F JUMPI DUP4 ADD SWAP3 SWAP2 DUP1 DUP1 JUMPDEST PUSH2 0xE2A JUMPI JUMPDEST DUP6 DUP6 DUP2 SSTORE DUP1 RETURN JUMPDEST ISZERO PUSH2 0xE5E JUMPI JUMPDEST DUP5 DUP2 DUP5 DUP5 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 PUSH2 0xE1E JUMP JUMPDEST DUP1 SWAP3 ADD SWAP2 DUP4 DUP4 SUB PUSH2 0xE30 JUMPI DUP1 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x2710 JUMP JUMPDEST PUSH2 0x26E6 JUMP JUMPDEST PUSH2 0x590 PUSH2 0xE85 CALLDATASIZE PUSH2 0x8A9 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xE93 DUP5 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x2505 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x590 PUSH1 0x4 CALLDATALOAD PUSH2 0x3A64 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0xED1 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0xED9 PUSH2 0x518 JUMP JUMPDEST SWAP1 PUSH2 0xEE2 PUSH2 0x2957 JUMP JUMPDEST PUSH2 0xEFE PUSH2 0x2710 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND GT ISZERO PUSH2 0x3E7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xF5D PUSH2 0x590 SWAP3 PUSH2 0xF48 PUSH2 0xF2C PUSH2 0x10AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND DUP5 MSTORE JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xF73 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH1 0xA0 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20496E76616C696420706172616D65746572730000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x101E JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x10BA DUP3 PUSH2 0x104D JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x10E4 DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 PUSH2 0x10F2 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x108A JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x2C6 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2C6 JUMPI DUP2 PUSH1 0x20 PUSH2 0x5EB SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x10D8 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x115C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x1175 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST SWAP1 PUSH2 0x117E PUSH2 0x2A01 JUMP JUMPDEST DUP3 MLOAD SWAP1 DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x119B DUP2 PUSH2 0x1196 PUSH1 0xE SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH2 0x35EF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x11DC JUMPI POP DUP2 SWAP1 PUSH2 0x590 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x11D1 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE PUSH2 0x37B3 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE SWAP2 SWAP4 PUSH1 0x1F NOT DUP6 AND PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x124F JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH2 0x590 SWAP8 SWAP5 LT PUSH2 0x1236 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE PUSH2 0x37B3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1228 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x128E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH1 0x80 DUP3 PUSH2 0x12E8 PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x1280 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C6 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2C6 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x2C6 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x2C6 JUMPI PUSH2 0x34E SWAP2 PUSH1 0x24 PUSH2 0x134E SWAP3 ADD PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1267 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x138D PUSH1 0x4 CALLDATALOAD PUSH2 0x2152 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH2 0x13F4 PUSH2 0x13EF PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2C6 JUMPI PUSH2 0x5EB SWAP2 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH2 0x1435 CALLDATASIZE PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x143D PUSH2 0x2A01 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x1462 DUP2 PUSH2 0x145D PUSH1 0xD SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH2 0x3660 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x149F JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x1494 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x147B JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x14D2 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x150E JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x14F5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x14EA JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x14D7 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x11 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1573 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1565 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x15A0 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH1 0x60 DUP1 SWAP3 DUP1 ISZERO SWAP3 DUP4 ISZERO PUSH2 0x15C1 JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x34E DUP8 DUP3 PUSH2 0x154C JUMP JUMPDEST SWAP5 SWAP2 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 DUP6 SWAP2 PUSH2 0x170E JUMPI PUSH2 0x15D8 DUP2 PUSH2 0x20C7 JUMP JUMPDEST SWAP6 DUP7 PUSH2 0x15F2 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x34E SWAP2 POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x15B3 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP6 DUP5 GT ISZERO PUSH2 0x1705 JUMPI JUMPDEST PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 PUSH1 0x1 SWAP4 DUP5 DUP10 ADD PUSH1 0x5 SHL DUP9 ADD SWAP9 DUP10 DUP8 MSTORE PUSH2 0x161E PUSH2 0x2842 JUMP JUMPDEST SWAP1 DUP5 SWAP2 PUSH2 0x1634 PUSH2 0x1630 DUP11 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x16E6 JUMPI JUMPDEST POP DUP5 SWAP6 SWAP2 SWAP6 SWAP9 DUP8 DUP1 JUMPDEST PUSH2 0x1662 JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x34E SWAP3 POP DUP2 MSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x15DF JUMP JUMPDEST ISZERO PUSH2 0x16C8 JUMPI JUMPDEST DUP6 SWAP7 PUSH2 0x1673 DUP5 PUSH2 0x2899 JUMP JUMPDEST DUP1 DUP12 ADD MLOAD ISZERO PUSH2 0x1690 JUMPI POP POP DUP8 DUP7 SWAP4 JUMPDEST ADD SWAP7 DUP9 DUP14 DUP12 MSTORE SWAP8 SWAP4 SWAP8 PUSH2 0x1642 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 MLOAD DUP1 PUSH2 0x16C0 JUMPI JUMPDEST POP DUP5 DUP5 XOR DUP7 SHL ISZERO PUSH2 0x16AD JUMPI JUMPDEST DUP9 SWAP1 PUSH2 0x1682 JUMP JUMPDEST SWAP10 DUP9 ADD PUSH1 0x5 DUP2 SWAP1 SHL DUP13 ADD DUP12 SWAP1 MSTORE SWAP10 PUSH2 0x16A6 JUMP JUMPDEST SWAP4 POP CODESIZE PUSH2 0x169A JUMP JUMPDEST DUP1 DUP4 EQ DUP1 ISZERO PUSH2 0x16DD JUMPI JUMPDEST ISZERO PUSH2 0x1668 JUMPI DUP1 PUSH2 0x1647 JUMP JUMPDEST POP DUP2 DUP11 EQ PUSH2 0x16D2 JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP CODESIZE PUSH2 0x1639 JUMP JUMPDEST SWAP5 POP DUP3 SWAP5 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x27E2 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1756 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x33E2 JUMP JUMPDEST SWAP2 SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x17BA PUSH2 0x1786 PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH2 0x17D4 CALLDATASIZE PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x17DC PUSH2 0x2A01 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x1801 DUP2 PUSH2 0x17FC PUSH1 0x10 SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH2 0x36D1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x183E JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x1833 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x181A JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x1871 PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x18AD JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x1894 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1889 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1876 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xF SLOAD PUSH2 0x18E8 DUP2 PUSH2 0x359C JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x6A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1911 JUMPI PUSH2 0x34E DUP6 PUSH2 0x63B DUP2 DUP8 SUB DUP3 PUSH2 0x108A JUMP JUMPDEST SWAP3 POP PUSH1 0xF DUP4 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 JUMPDEST DUP3 DUP5 LT PUSH2 0x1954 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x63B DUP3 PUSH2 0x34E PUSH2 0x62B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1939 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x1985 PUSH2 0x4AF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x19A7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x19BF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x19D7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x2C6 JUMPI PUSH2 0x19F2 PUSH2 0x590 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST SWAP2 PUSH2 0x19FB PUSH2 0x4F5 JUMP JUMPDEST SWAP4 PUSH2 0x1A04 PUSH2 0x533 JUMP JUMPDEST SWAP6 PUSH2 0x3C81 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x60 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x1A24 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x44 CALLDATALOAD DUP4 DUP4 DUP3 DUP1 DUP4 LT ISZERO PUSH2 0x170E JUMPI PUSH1 0x0 SLOAD DUP1 SWAP2 LT ISZERO PUSH2 0x1B92 JUMPI JUMPDEST POP PUSH2 0x1A4D DUP5 PUSH2 0x20C7 JUMP JUMPDEST SWAP2 DUP4 DUP8 LT ISZERO PUSH2 0x1B89 JUMPI JUMPDEST DUP3 PUSH2 0x1A6B JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x34E DUP9 DUP3 PUSH2 0x154C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP6 DUP5 SUB DUP4 DUP2 GT ISZERO PUSH2 0x1B81 JUMPI JUMPDEST POP PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 PUSH1 0x1 SWAP4 PUSH1 0x5 SWAP2 PUSH2 0x1A9D DUP7 DUP6 ADD DUP5 SHL DUP11 ADD SWAP11 DUP12 DUP10 MSTORE PUSH2 0x2881 JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x1AB0 PUSH2 0x1630 DUP11 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1B62 JUMPI JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 SWAP6 SWAP9 DUP8 DUP1 JUMPDEST PUSH2 0x1ADF JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x34E SWAP3 POP DUP2 MSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1A5D JUMP JUMPDEST ISZERO PUSH2 0x1B44 JUMPI JUMPDEST PUSH1 0x0 SWAP7 PUSH2 0x1AF1 DUP8 PUSH2 0x2899 JUMP JUMPDEST DUP1 DUP12 ADD MLOAD ISZERO PUSH2 0x1B0E JUMPI POP POP DUP8 DUP8 SWAP7 JUMPDEST ADD SWAP7 DUP9 DUP14 DUP12 MSTORE SWAP8 SWAP7 SWAP8 PUSH2 0x1ABF JUMP JUMPDEST SWAP7 SWAP1 SWAP7 MLOAD DUP1 PUSH2 0x1B3C JUMPI JUMPDEST POP DUP4 DUP8 XOR DUP6 SHL ISZERO PUSH2 0x1B2B JUMPI JUMPDEST DUP9 SWAP1 PUSH2 0x1B00 JUMP JUMPDEST SWAP10 DUP9 ADD DUP1 DUP7 SHL DUP13 ADD DUP12 SWAP1 MSTORE SWAP10 PUSH2 0x1B24 JUMP JUMPDEST SWAP7 POP CODESIZE PUSH2 0x1B18 JUMP JUMPDEST DUP1 DUP7 EQ DUP1 ISZERO PUSH2 0x1B59 JUMPI JUMPDEST ISZERO PUSH2 0x1AE5 JUMPI DUP1 PUSH2 0x1AC4 JUMP JUMPDEST POP DUP2 DUP11 EQ PUSH2 0x1B4E JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP CODESIZE PUSH2 0x1AB5 JUMP JUMPDEST SWAP3 POP CODESIZE PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x0 SWAP3 POP PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP CODESIZE PUSH2 0x1A43 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x1BCF PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x2C6 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x1C2A DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x1C99 PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x1CA1 PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x2C6 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x1CD6 PUSH2 0x590 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x10D8 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x2505 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x80 PUSH2 0x1CFE PUSH1 0x4 CALLDATALOAD PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x1D50 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1D70 DUP2 PUSH2 0x228C JUMP JUMPDEST ISZERO PUSH2 0x1E94 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 PUSH1 0x0 PUSH1 0xD SLOAD PUSH2 0x1D89 DUP2 PUSH2 0x359C JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1E54 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DF5 JUMPI JUMPDEST POP POP PUSH2 0x1DB1 SWAP3 POP SUB DUP4 PUSH2 0x108A JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1DE2 JUMPI PUSH2 0x34E SWAP3 PUSH2 0xC57 PUSH2 0x1DCB PUSH2 0x63B SWAP4 PUSH2 0x269D JUMP JUMPDEST PUSH2 0x1DDC PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 ADD SWAP1 PUSH2 0x213B JUMP JUMPDEST SWAP1 PUSH2 0x213B JUMP JUMPDEST POP POP POP PUSH2 0x34E PUSH2 0x1DF0 PUSH2 0x2128 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1E3C JUMPI POP DUP8 SWAP5 POP POP DUP3 ADD ADD PUSH2 0x1DB1 CODESIZE PUSH2 0x1DA3 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1E24 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB1 SWAP6 SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 SWAP3 CODESIZE PUSH2 0x1DA3 JUMP JUMPDEST PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x590 PUSH1 0x4 CALLDATALOAD PUSH2 0x1F09 PUSH2 0x4D2 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x1F24 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2A56 JUMP JUMPDEST PUSH2 0x2EA9 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C6 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2C6 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x1069 JUMPI DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1F79 DUP6 DUP4 ADD DUP6 PUSH2 0x108A JUMP JUMPDEST DUP4 MSTORE PUSH1 0x24 DUP5 DUP5 ADD SWAP2 DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x2C6 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1FA1 JUMPI PUSH2 0x590 DUP5 PUSH2 0x3C43 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1F91 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x10 SLOAD PUSH2 0x1FD3 DUP2 PUSH2 0x359C JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x6A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1FFC JUMPI PUSH2 0x34E DUP6 PUSH2 0x63B DUP2 DUP8 SUB DUP3 PUSH2 0x108A JUMP JUMPDEST SWAP3 POP PUSH1 0x10 DUP4 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 JUMPDEST DUP3 DUP5 LT PUSH2 0x203F JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x63B DUP3 PUSH2 0x34E PUSH2 0x62B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x2024 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x17BA PUSH2 0x2077 PUSH2 0x4AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2094 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x20FE JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2135 DUP3 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x214E PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x592 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x2166 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0x2196 JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH2 0x273A JUMPI SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x2223 JUMPI PUSH1 0x0 NOT SWAP1 JUMPDEST ADD PUSH2 0x21BE DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0x2219 JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0x2214 JUMPI PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP2 POP PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2287 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x224B JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0x229E JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP1 PUSH2 0x22C7 JUMPI POP PUSH2 0x22C0 PUSH1 0x40 SWAP2 PUSH2 0x227A JUMP JUMPDEST SWAP1 POP PUSH2 0x22A2 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x22F9 DUP3 PUSH2 0x2152 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP4 DUP5 DUP3 DUP5 AND SUB PUSH2 0x2500 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x2352 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP4 EQ OR ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2496 JUMPI JUMPDEST PUSH2 0x2360 DUP8 PUSH2 0x4028 JUMP JUMPDEST PUSH2 0x248C JUMPI JUMPDEST POP PUSH2 0x2390 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x23C2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE AND SWAP3 DUP4 SWAP2 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0x2407 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0x2442 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 ISZERO PUSH2 0x243D JUMPI JUMP JUMPDEST PUSH2 0x27B8 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x245A DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x2467 JUMPI JUMPDEST POP PUSH2 0x2410 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x2461 JUMPI PUSH2 0x2484 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x2461 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x2365 JUMP JUMPDEST PUSH2 0x24F6 PUSH2 0x1630 PUSH2 0x24EF CALLER PUSH2 0x24CA DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2357 JUMPI PUSH2 0x278E JUMP JUMPDEST PUSH2 0x2764 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x2513 DUP3 DUP3 DUP7 PUSH2 0x22ED JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x2520 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2529 SWAP4 PUSH2 0x25A6 JUMP JUMPDEST ISZERO PUSH2 0x2537 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x251A JUMP JUMPDEST PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2C6 JUMPI MLOAD PUSH2 0x5EB DUP2 PUSH2 0x29C JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x25A1 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2587 DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 PUSH2 0x2595 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x108A JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 SWAP2 PUSH2 0x2618 SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP6 DUP2 SWAP5 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP11 DUP12 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP6 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x5B5 JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x266D JUMPI JUMPDEST POP PUSH2 0x2647 JUMPI PUSH2 0x2633 PUSH2 0x2576 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2642 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x2537 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x268F SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2696 JUMPI JUMPDEST PUSH2 0x2687 DUP2 DUP4 PUSH2 0x108A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2626 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x267D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x0 NOT PUSH1 0x80 DUP3 ADD SWAP4 PUSH1 0x0 DUP6 MSTORE SWAP4 JUMPDEST ADD SWAP3 PUSH1 0xA SWAP1 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x26D4 JUMPI PUSH1 0x0 NOT SWAP1 PUSH2 0x26B6 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP4 PUSH1 0x1F NOT SWAP3 SUB ADD SWAP3 ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x32C1995A00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 PUSH2 0x284E PUSH2 0x280C JUMP JUMPDEST SWAP3 DUP1 SLOAD PUSH2 0x2859 JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH2 0x2877 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x285D JUMP JUMPDEST PUSH2 0x5EB SWAP2 POP PUSH2 0x2899 JUMP JUMPDEST SWAP1 PUSH2 0x288A PUSH2 0x280C JUMP JUMPDEST SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0x2859 JUMPI POP POP JUMP JUMPDEST PUSH2 0x28A1 PUSH2 0x280C JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x28B8 PUSH2 0x280C JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0x20 DUP4 ADD MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xE8 SHR PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 SHL PUSH1 0x20 DUP2 DUP5 ADD ADD PUSH1 0x40 MSTORE JUMPDEST DUP1 DUP2 DUP1 ISZERO PUSH2 0x2950 JUMPI PUSH2 0x2947 SWAP1 PUSH1 0x1F NOT DUP1 SWAP2 ADD SWAP4 DUP6 ADD ADD CALLDATALOAD PUSH2 0x2881 JUMP JUMPDEST SWAP1 DUP5 ADD MSTORE PUSH2 0x292B JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x142AE0BD48B54FB380E908BF20FD1F4EA4F2B9A2663CA7698D91EF391575C621 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2990 JUMPI JUMP JUMPDEST PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 PUSH2 0x29A1 CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xBE8 PUSH2 0x320B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF70E363B3D7895AF770C4A138460777D52EEBD3CB9962CCC6B58721F6127BBC8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x29E5 JUMPI JUMP JUMPDEST PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 PUSH2 0x29F6 CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xBE8 PUSH2 0x32A8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEA6919AD9E84AA527AA2DFFB6AC6F0A6AF0387A080D10167ACDDF2A249A612DD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2A3A JUMPI JUMP JUMPDEST PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 PUSH2 0x2A4B CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xBE8 PUSH2 0x3345 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x2A8F CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x2A99 JUMPI POP JUMP JUMPDEST PUSH2 0x2AA2 CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0x2AAA PUSH2 0x2FE3 JUMP JUMPDEST SWAP2 PUSH1 0x30 PUSH2 0x2AB6 DUP5 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x2AC2 DUP5 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x2AE5 JUMPI PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 DUP6 PUSH2 0xC57 DUP9 PUSH2 0xBE8 DUP9 ISZERO PUSH2 0x306C JUMP JUMPDEST SWAP1 PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x2B2E SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP8 PUSH2 0x305B JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP2 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x2AC6 JUMP JUMPDEST PUSH2 0x300F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6937E6B1CDE141AAD05C7D03126A39EB070A9F0F221C44303558FA7A951A7435 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0x2BC6 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x3418 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2BFA DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP6 DUP1 LOG4 PUSH2 0x2BB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xDF7DE25B7F1FD6D0B5205F0E18F1F35BD7B8D84CCE336588D184533CE43A6F76 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2CB9 JUMPI JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x3418 JUMP JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2CED DUP5 DUP4 DUP4 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH2 0x2CA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEA6919AD9E84AA527AA2DFFB6AC6F0A6AF0387A080D10167ACDDF2A249A612DD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x142AE0BD48B54FB380E908BF20FD1F4EA4F2B9A2663CA7698D91EF391575C621 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF70E363B3D7895AF770C4A138460777D52EEBD3CB9962CCC6B58721F6127BBC8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2BAB JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH2 0x2BC3 SWAP4 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x2EFE DUP7 DUP6 DUP6 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x2F15 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x34E7 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2F49 DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP1 LOG4 PUSH2 0x2F05 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2FAA DUP3 PUSH2 0x104D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2287 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE PUSH1 0x42 DUP3 MSTORE PUSH1 0x60 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2B33 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x2B33 JUMPI PUSH1 0x21 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2B33 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3073 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE PUSH1 0x2A DUP3 MSTORE PUSH1 0x40 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x30 PUSH2 0x3106 DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x3112 DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x29 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x312A JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x3168 SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x3117 JUMP JUMPDEST PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C PUSH2 0x3197 PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x31A3 DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x31AF DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x31C7 JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x3205 SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 PUSH2 0x3234 PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x3240 DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x324C DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x3264 JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x32A2 SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x32D1 PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x32DD DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x32E9 DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x3301 JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x333F SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 PUSH2 0x336E PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x337A DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x3386 DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x339E JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x33DC SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x338B JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x3414 SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x3486 JUMPI DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x1069 JUMPI PUSH2 0x3471 PUSH2 0x345A DUP3 PUSH1 0x1 DUP8 SWAP5 ADD DUP6 SSTORE DUP5 PUSH2 0x33E2 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x34B8 JUMPI PUSH1 0x0 NOT DUP1 SWAP3 ADD SWAP2 PUSH2 0x34A8 DUP4 DUP4 PUSH2 0x33E2 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SWAP2 DUP1 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP4 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x3593 JUMPI PUSH1 0x0 NOT SWAP3 DUP4 DUP6 ADD SWAP1 DUP6 DUP3 GT PUSH2 0x2287 JUMPI DUP1 SLOAD SWAP5 DUP6 ADD SWAP5 DUP6 GT PUSH2 0x2287 JUMPI PUSH1 0x0 SWAP6 DUP6 DUP4 PUSH2 0x353B SWAP5 PUSH2 0x354A SWAP9 SUB PUSH2 0x3550 JUMPI JUMPDEST POP POP POP PUSH2 0x348E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x357A PUSH2 0x3574 SWAP2 PUSH2 0x3564 PUSH2 0x358A SWAP5 DUP8 PUSH2 0x33E2 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP2 DUP8 PUSH2 0x33E2 JUMP JUMPDEST SWAP1 PUSH2 0x33FA JUMP JUMPDEST DUP6 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3533 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x35E5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x35B6 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x35FB JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xE DUP3 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3656 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x364B JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x363F JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3636 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x366C JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x36C7 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x36BC JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x36B0 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x36A7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x36DD JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3738 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x372D JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3721 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3718 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x374E JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x37A9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x379E JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3792 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3789 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x37D9 DUP2 PUSH2 0x37D4 PUSH1 0xF SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH2 0x3742 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3814 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x3809 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x37F3 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x3847 PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3884 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x386B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3860 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x384C JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x38BD DUP2 PUSH2 0x145D PUSH1 0xD SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x38F8 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x38ED JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x38D7 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x392B PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3968 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x394F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3944 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x3930 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x39A1 DUP2 PUSH2 0x17FC PUSH1 0x10 SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x39DC JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x39D1 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x39BB JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x3A0F PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3A4C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x3A33 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3A28 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x3A14 JUMP JUMPDEST PUSH2 0x3A6D DUP2 PUSH2 0x2152 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3A9B DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x3AC3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP7 EQ OR ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x3C05 JUMPI JUMPDEST PUSH1 0x0 SWAP4 PUSH2 0x3AD4 DUP5 PUSH2 0x4028 JUMP JUMPDEST PUSH2 0x3BFC JUMPI JUMPDEST POP PUSH2 0x3B04 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD ADD SWAP1 SSTORE PUSH29 0x300000000000000000000000000000000000000000000000000000000 TIMESTAMP PUSH1 0xA0 SHL DUP4 OR OR PUSH2 0x3B53 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0x3BB3 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP3 DUP1 LOG4 PUSH2 0x10BA PUSH2 0x3BAE PUSH1 0x1 SLOAD PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x3BCB DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x3BD8 JUMPI JUMPDEST POP PUSH2 0x3B7A JUMP JUMPDEST DUP4 SLOAD DUP2 EQ PUSH2 0x3BD2 JUMPI PUSH2 0x3BF4 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x3BD2 JUMP JUMPDEST DUP4 SWAP1 SSTORE CODESIZE PUSH2 0x3AD9 JUMP JUMPDEST PUSH2 0x3C39 PUSH2 0x1630 PUSH2 0x24EF CALLER PUSH2 0x24CA DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3AC8 JUMPI PUSH2 0x278E JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3C55 JUMPI POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2B33 JUMPI PUSH2 0x3C70 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD MLOAD PUSH2 0x3A64 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2287 JUMPI PUSH1 0x1 ADD PUSH2 0x3C49 JUMP JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH1 0x11 SLOAD AND OR PUSH1 0x11 SSTORE PUSH2 0x3CBC DUP8 PUSH2 0x2B38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x3E72 JUMPI JUMPDEST PUSH2 0x3E48 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1069 JUMPI PUSH2 0x3D22 DUP3 PUSH2 0x1196 PUSH1 0xE SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x3DC5 JUMPI POP SWAP4 PUSH2 0x3D6B PUSH2 0x3D75 SWAP5 DUP5 PUSH2 0x3D95 SWAP12 SWAP11 SWAP9 SWAP6 PUSH2 0x3D70 SWAP6 PUSH2 0x3D90 SWAP12 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x11D1 JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE PUSH2 0x37B3 JUMP JUMPDEST PUSH2 0x389C JUMP JUMPDEST PUSH2 0x3980 JUMP JUMPDEST PUSH2 0x3D7E DUP5 PUSH2 0x2C51 JUMP JUMPDEST PUSH2 0x3D87 DUP5 PUSH2 0x2D44 JUMP JUMPDEST PUSH2 0x58B DUP5 PUSH2 0x2DBB JUMP JUMPDEST PUSH2 0x2E32 JUMP JUMPDEST PUSH2 0x10BA PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x11 SLOAD AND OR PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3E30 JUMPI POP POP SWAP5 PUSH1 0x1 DUP6 PUSH2 0x3D70 SWAP6 PUSH2 0x3D90 SWAP12 SWAP10 SWAP6 PUSH2 0x3D6B SWAP6 PUSH2 0x3D95 SWAP16 SWAP15 SWAP13 SWAP10 PUSH2 0x3D75 SWAP12 LT PUSH2 0x1236 JUMPI POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE PUSH2 0x37B3 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x3DF7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH2 0x3CFD JUMP JUMPDEST ISZERO PUSH2 0x3E85 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20726F79616C7479206665652077696C6C20657863656564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2073616C65507269636500000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH2 0x3F3C PUSH2 0x2710 DUP5 GT ISZERO PUSH2 0x3E7E JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x3F83 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3F74 DUP2 PUSH2 0x104D JUMP JUMPDEST DUP6 DUP2 MSTORE ADD MSTORE PUSH1 0xA0 SHL AND OR PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20696E76616C696420726563656976657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH1 0x11 SLOAD PUSH1 0x8 SHR AND DUP1 PUSH2 0x4020 JUMPI JUMPDEST PUSH2 0x3FF6 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xDB89E3F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x11 SLOAD PUSH1 0x8 SHR AND SWAP1 DUP2 PUSH2 0x403F JUMPI JUMPDEST POP PUSH2 0x3FF6 JUMPI JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP AND ISZERO ISZERO CODESIZE PUSH2 0x4038 JUMP JUMPDEST PUSH2 0x4068 DUP2 PUSH2 0x414E JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x40B6 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x408B JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x4081 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x5EB SWAP2 POP PUSH2 0x40C7 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO SWAP2 POP PUSH2 0x4077 JUMP JUMPDEST SWAP1 POP PUSH2 0x40C1 DUP2 PUSH2 0x40C7 JUMP JUMPDEST SWAP1 PUSH2 0x4070 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SWAP1 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x411A JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x4148 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x5EB SWAP2 POP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x419E JUMPI POP SWAP1 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xC3 DUP13 SAR 0xC1 0xC4 0xEE 0x2F BLOCKHASH EQ INVALID 0xCF XOR 0xB2 STATICCALL DUP3 RETURN 0xE8 JUMP 0x5C CALLDATALOAD DUP16 PUSH27 0x55501C9E6E8A901FD564736F6C6343000813003300000000000000 ",
							"sourceMap": "388:1700:35:-:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;388:1700:35;;;;;;;5327:13:0;388:1700:35;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:13:0;388:1700:35;;:::i;:::-;;;;684:10:33;669:25;;388:1700:35;;;;;;;;669:25:33;388:1700:35;;;;;;;;;;-1:-1:-1;388:1700:35;;;;;5327:13:0;388:1700:35;;;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5327:13:0;388:1700:35;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;388:1700:35;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;388:1700:35;5327:13:0;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;388:1700:35;;;;;;;;;;;;:::o;:::-;-1:-1:-1;388:1700:35;5350:17:0;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;388:1700:35;;;;;;;;;;-1:-1:-1;;;;;388:1700:35;;;;;;;5350:17:0;388:1700:35;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:17:0;388:1700:35;;;;;5350:17:0;388:1700:35;:::o;:::-;;;;-1:-1:-1;388:1700:35;;;;;5350:17:0;388:1700:35;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5350:17:0;388:1700:35;:::o;:::-;;;;;;;5350:17:0;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1199,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_15059": {
									"entryPoint": 1234,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_15106": {
									"entryPoint": 1269,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_addresst_uint256": {
									"entryPoint": 2217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_available_length_string": {
									"entryPoint": 4312,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes4_fromMemory": {
									"entryPoint": 9569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 4367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string_15091": {
									"entryPoint": 5116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_uint96": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint96_15081": {
									"entryPoint": 1304,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_array_struct_TokenOwnership_dyn": {
									"entryPoint": 4711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 5452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 8507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_to_string": {
									"entryPoint": 1461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_TokenOwnership": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"allocate_and_zero_memory_array_bytes": {
									"entryPoint": 12259,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_and_zero_memory_struct_struct_TokenOwnership": {
									"entryPoint": 10252,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4269,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_array_string": {
									"entryPoint": 8488,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_string": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_array_bytes32_dyn_storage_ptr": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_array_bytes32_dyn_storage_ptr_15094": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_array_bytes32_dyn_storage_ptr_15104": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_array_bytes32_dyn_storage_ptr_32470": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_pop_array_bytes32_dyn_storage_ptr": {
									"entryPoint": 13454,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"checked_mul_uint256": {
									"entryPoint": 12240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 14146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"clean_up_bytearray_end_slots_string_storage_15086": {
									"entryPoint": 13807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"clean_up_bytearray_end_slots_string_storage_15093": {
									"entryPoint": 13920,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"clean_up_bytearray_end_slots_string_storage_15103": {
									"entryPoint": 14033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_string_to_string": {
									"entryPoint": 14492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_string_to_string_15088": {
									"entryPoint": 14259,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_string_to_string_15246": {
									"entryPoint": 14720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1426,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_struct_to_storage_from_struct_RoyaltyInfo_to_struct_RoyaltyInfo": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"decrement_uint256": {
									"entryPoint": 8826,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_wrapping_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"external_fun_DEFAULT_ADMIN_ROLE": {
									"entryPoint": 7066,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_TRANSFER_ADMIN_ROLE": {
									"entryPoint": 5014,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_approve": {
									"entryPoint": 1895,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_balanceOf": {
									"entryPoint": 5073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_batchBurn": {
									"entryPoint": 7977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_burn": {
									"entryPoint": 3740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_contractURI": {
									"entryPoint": 8112,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_explicitOwnershipOf": {
									"entryPoint": 7392,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_explicitOwnershipsOf": {
									"entryPoint": 4852,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getApproved": {
									"entryPoint": 1773,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getRoleAdmin": {
									"entryPoint": 2301,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getRoleMember": {
									"entryPoint": 5907,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getRoleMemberCount": {
									"entryPoint": 7870,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getTransferLocked": {
									"entryPoint": 5414,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_grantRole": {
									"entryPoint": 2557,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_hasRole": {
									"entryPoint": 5990,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_initialize": {
									"entryPoint": 6508,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_isApprovedForAll": {
									"entryPoint": 8279,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_mint": {
									"entryPoint": 3425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_name": {
									"entryPoint": 1518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_ownerOf": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_renounceRole": {
									"entryPoint": 3227,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_revokeRole": {
									"entryPoint": 7914,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_royaltyInfo": {
									"entryPoint": 2348,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_safeTransferFrom": {
									"entryPoint": 3705,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_safeTransferFrom_1145": {
									"entryPoint": 7301,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setApprovalForAll": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setBaseMetadataURI": {
									"entryPoint": 5159,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setContractURI": {
									"entryPoint": 6086,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setDefaultRoyalty": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setNameAndSymbol": {
									"entryPoint": 4394,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setTokenRoyalty": {
									"entryPoint": 3768,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setTransferLocked": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_supportsInterface": {
									"entryPoint": 715,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_symbol": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_tokenURI": {
									"entryPoint": 7506,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_tokensOfOwner": {
									"entryPoint": 5511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_tokensOfOwnerIn": {
									"entryPoint": 6666,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_totalSupply": {
									"entryPoint": 2182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_transferFrom": {
									"entryPoint": 2283,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 13724,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_returndata": {
									"entryPoint": 9590,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_15154": {
									"entryPoint": 4173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_32451": {
									"entryPoint": 4206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_add": {
									"entryPoint": 13336,
									"id": 5890,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_balanceOf": {
									"entryPoint": 8391,
									"id": 286,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_batchBurn": {
									"entryPoint": 15427,
									"id": 7334,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_beforeTokenTransfers": {
									"entryPoint": 16424,
									"id": 7693,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_beforeTokenTransfers_15068": {
									"entryPoint": 16353,
									"id": 7693,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_burn": {
									"entryPoint": 14948,
									"id": 1978,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkContractOnERC721Received": {
									"entryPoint": 9638,
									"id": 1227,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"fun_checkRole": {
									"entryPoint": 10838,
									"id": 2810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_15047": {
									"entryPoint": 10583,
									"id": 2810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_checkRole_15066": {
									"entryPoint": 10668,
									"id": 2810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_checkRole_15085": {
									"entryPoint": 10753,
									"id": 2810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_exists": {
									"entryPoint": 8844,
									"id": 870,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_explicitOwnershipOf": {
									"entryPoint": 10369,
									"id": 2374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_explicitOwnershipOf_32454": {
									"entryPoint": 10306,
									"id": 2374,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_explicitOwnershipsOf": {
									"entryPoint": 10519,
									"id": 2418,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_getApprovedSlotAndAddress": {
									"entryPoint": null,
									"id": 913,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"fun_grantRole": {
									"entryPoint": 11826,
									"id": 3133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_grantRole_15241": {
									"entryPoint": 11064,
									"id": 3133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_grantRole_15247": {
									"entryPoint": 11345,
									"id": 3133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_grantRole_15248": {
									"entryPoint": 11588,
									"id": 3133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_grantRole_15249": {
									"entryPoint": 11707,
									"id": 3133,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_initialize": {
									"entryPoint": 15489,
									"id": 7633,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"fun_isSenderApprovedOrOwner": {
									"entryPoint": null,
									"id": 894,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_ownershipAt": {
									"entryPoint": 10393,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_packedOwnershipOf": {
									"entryPoint": 8530,
									"id": 655,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_remove": {
									"entryPoint": 13543,
									"id": 5974,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_revert": {
									"entryPoint": 9958,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_15072": {
									"entryPoint": 10000,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_15127": {
									"entryPoint": 10042,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_15133": {
									"entryPoint": 10084,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_15135": {
									"entryPoint": 10126,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_15141": {
									"entryPoint": 10168,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_15143": {
									"entryPoint": null,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revert_15148": {
									"entryPoint": 10210,
									"id": 2098,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_revokeRole": {
									"entryPoint": 11945,
									"id": 3157,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_safeTransferFrom": {
									"entryPoint": 9477,
									"id": 1145,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_setDefaultRoyalty": {
									"entryPoint": 16137,
									"id": 3999,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_supportsInterface": {
									"entryPoint": 16583,
									"id": 3074,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_supportsInterface_3906": {
									"entryPoint": 16718,
									"id": 3906,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_supportsInterface_8037": {
									"entryPoint": 16479,
									"id": 8037,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_toHexString": {
									"entryPoint": 13125,
									"id": 4784,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_toHexString_15149": {
									"entryPoint": 12497,
									"id": 4784,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_toHexString_32450": {
									"entryPoint": 12654,
									"id": 4784,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_toHexString_32458": {
									"entryPoint": 12811,
									"id": 4784,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_toHexString_32460": {
									"entryPoint": 12968,
									"id": 4784,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_toString": {
									"entryPoint": 9885,
									"id": 2090,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_transferFrom": {
									"entryPoint": 8941,
									"id": 1086,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_wrapping_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address_15071": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address_15134": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_uint256_uint256_of_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_uint256_uint256_of_uint256_15070": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_uint256_uint256_of_uint256_15084": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_uint256_uint256_of_uint256_15153": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_bytes": {
									"entryPoint": 12379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"memory_array_index_access_bytes_15158": {
									"entryPoint": 12350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_bytes_15159": {
									"entryPoint": 12363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8779,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 12303,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"read_from_storage_reference_type_struct_RoyaltyInfo": {
									"entryPoint": 12189,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"read_from_storage_split_offset_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"require_helper_stringliteral_04fc": {
									"entryPoint": 12396,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_dcda": {
									"entryPoint": 15998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_bytes32_dyn_ptr": {
									"entryPoint": 13282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_bytes32_to_bytes32": {
									"entryPoint": 13306,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"update_storage_value_offsett_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_offsett_bool_to_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"update_storage_value_offsett_uint256_to_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"write_to_memory_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"write_to_memory_uint96": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"7439": [
									{
										"length": 32,
										"start": 15571
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461029757806304634d8d1461029257806306fdde031461028d578063081812fc14610288578063095ea7b31461028357806318160ddd1461027e57806323b872dd14610279578063248a9ca3146102745780632a55205a1461026f5780632f2ff15d1461026a57806335e60bd41461026557806336568abe1461026057806340c10f191461025b57806342842e0e1461025657806342966c68146102515780635944c7531461024c5780635a446215146102475780635bbb2177146102425780636352211e1461023d57806368a37ae81461023857806370a08231146102335780637e518ec81461022e578063842f9b68146102295780638462151c146102245780639010d07c1461021f57806391d148541461021a578063938e3d7b1461021557806395d89b411461021057806398dd69c81461020b57806399a2557a14610206578063a217fddf14610201578063a22cb465146101fc578063b88d4fde146101f7578063c23dc68f146101f2578063c87b56dd146101ed578063ca15c873146101e8578063d547741f146101e3578063dc8e92ea146101de578063e8a3d485146101d95763e985e9c5146101d457600080fd5b612057565b611fb0565b611f29565b611eea565b611ebe565b611d52565b611ce0565b611c85565b611bb6565b611b9a565b611a0a565b61196c565b6118c5565b6117c6565b611766565b611713565b611587565b611526565b611427565b6113d1565b611396565b61135a565b6112f4565b61112a565b610eb8565b610e9c565b610e79565b610d61565b610c9b565b610b40565b6109fd565b61092c565b6108fd565b6108eb565b610886565b610767565b6106ed565b6105ee565b61054e565b6102cb565b7fffffffff000000000000000000000000000000000000000000000000000000008116036102c657565b600080fd5b346102c65760206003193601126102c65761034e6004356102eb8161029c565b7fffffffff00000000000000000000000000000000000000000000000000000000811690817fb1c990bc0000000000000000000000000000000000000000000000000000000014918215610352575b505060405190151581529081906020820190565b0390f35b7f40c10f190000000000000000000000000000000000000000000000000000000081149250908215610388575b5050388061033a565b7fc21b8f280000000000000000000000000000000000000000000000000000000082149250908215610485575b82156103f4575b5081156103e3575b81156103d3575b50388061037f565b6103dd915061405f565b386103cb565b90506103ee8161405f565b906103c4565b9091507f01ffc9a700000000000000000000000000000000000000000000000000000000811490811561045b575b8115610431575b5090386103bc565b7f5b5e139f0000000000000000000000000000000000000000000000000000000091501438610429565b7f80ac58cd0000000000000000000000000000000000000000000000000000000081149150610422565b7f8446a79e00000000000000000000000000000000000000000000000000000000811492506103b5565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036102c657565b6024359073ffffffffffffffffffffffffffffffffffffffff821682036102c657565b60a4359073ffffffffffffffffffffffffffffffffffffffff821682036102c657565b604435906bffffffffffffffffffffffff821682036102c657565b60c435906bffffffffffffffffffffffff821682036102c657565b346102c65760406003193601126102c6576105676104af565b6024356bffffffffffffffffffffffff811681036102c6576105909161058b612957565b613f09565b005b60005b8381106105a55750506000910152565b8181015183820152602001610595565b90601f19601f6020936105d381518092818752878088019101610592565b0116010190565b9060206105eb9281815201906105b5565b90565b346102c6576000806003193601126106ea576040519080600e546106118161359c565b808552916001918083169081156106a25750600114610647575b61034e8561063b8187038261108a565b604051918291826105da565b9250600e83527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd5b82841061068a57505050810160200161063b8261034e61062b565b8054602085870181019190915290930192810161066f565b86955061034e9693506020925061063b9491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b820101929361062b565b80fd5b346102c65760206003193601126102c65760043561070a8161228c565b1561073d576000526006602052602073ffffffffffffffffffffffffffffffffffffffff60406000205416604051908152f35b7fcf4700e40000000000000000000000000000000000000000000000000000000060005260046000fd5b60406003193601126102c65761077b6104af565b60243573ffffffffffffffffffffffffffffffffffffffff8061079d83612152565b169081330361081d575b600083815260066020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790559316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b81600052600760205260ff6108563360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166107a7577fcfb3b9420000000000000000000000000000000000000000000000000000000060005260046000fd5b346102c65760006003193601126102c65760206000546001549003604051908152f35b60031960609101126102c65773ffffffffffffffffffffffffffffffffffffffff9060043582811681036102c6579160243590811681036102c6579060443590565b6105906108f7366108a9565b916122ed565b346102c65760206003193601126102c657600435600052600b6020526020600160406000200154604051908152f35b346102c65760406003193601126102c657600435600052600a60205260406000206040519061095a8261104d565b549073ffffffffffffffffffffffffffffffffffffffff82169182825260a01c602082015290156109ef575b6109c66127106109aa6bffffffffffffffffffffffff602085015116602435612fd0565b04915173ffffffffffffffffffffffffffffffffffffffff1690565b6040805173ffffffffffffffffffffffffffffffffffffffff9290921682526020820192909252f35b506109f8612f9d565b610986565b346102c65760406003193601126102c657600435610aa5610a1c6104d2565b73ffffffffffffffffffffffffffffffffffffffff610a9d600094808652600b602052610a4f6001604088200154612a56565b808652600b60205260ff610a8685604089209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541615610aa957600052600c602052604060002090565b911690613418565b5080f35b808652600b602052610ade84604088209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533838516827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8980a4600052600c602052604060002090565b346102c65760206003193601126102c6576004358015158091036102c6573360009081527f6937e6b1cde141aad05c7d03126a39eb070a9f0f221c44303558fa7a951a7435602052604090205460ff1615610bcc577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff61ff006011549260081b16911617601155600080f35b610c976048610c65610bdd336130d1565b610c57610be861316e565b6040519485937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000006020860152610c28815180926020603789019101610592565b84017f206973206d697373696e6720726f6c65200000000000000000000000000000006037820152019061213b565b03601f19810183528261108a565b6040519182917f08c379a0000000000000000000000000000000000000000000000000000000008352600483016105da565b0390fd5b346102c65760406003193601126102c657610cb46104d2565b3373ffffffffffffffffffffffffffffffffffffffff821603610cdd5761059090600435612ea9565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152fd5b346102c65760406003193601126102c657610d7a6104af565b60243590610d866129ac565b6000918254918115610e7457610d9a613fe1565b600191610e0073ffffffffffffffffffffffffffffffffffffffff83169284831460e11b4260a01b178417610dd9876000526004602052604060002090565b5573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b68010000000000000001820281540190558115610e6f578301929180805b610e2a575b8585815580f35b15610e5e575b84818484887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a4610e1e565b80920191838303610e305780610e23565b612710565b6126e6565b610590610e85366108a9565b9060405192610e938461106e565b60008452612505565b346102c65760206003193601126102c657610590600435613a64565b346102c65760606003193601126102c657610ed16104d2565b610ed9610518565b90610ee2612957565b610efe6127106bffffffffffffffffffffffff84161115613e7e565b73ffffffffffffffffffffffffffffffffffffffff811615610fc057610f5d61059092610f48610f2c6110ad565b73ffffffffffffffffffffffffffffffffffffffff9094168452565b6bffffffffffffffffffffffff166020830152565b610f73600435600052600a602052604060002090565b815160209092015160a01b7fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f455243323938313a20496e76616c696420706172616d657465727300000000006044820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761106957604052565b61101e565b6020810190811067ffffffffffffffff82111761106957604052565b90601f601f19910116810190811067ffffffffffffffff82111761106957604052565b604051906110ba8261104d565b565b67ffffffffffffffff811161106957601f01601f191660200190565b9291926110e4826110bc565b916110f2604051938461108a565b8294818452818301116102c6578281602093846000960137010152565b9080601f830112156102c6578160206105eb933591016110d8565b346102c65760406003193601126102c65767ffffffffffffffff6004358181116102c65761115c90369060040161110f565b906024358181116102c65761117590369060040161110f565b9061117e612a01565b82519081116110695761119b81611196600e5461359c565b6135ef565b602080601f83116001146111dc57508190610590946000926111d1575b50506000198260011b9260031b1c191617600e556137b3565b0151905038806111b8565b600e6000529193601f1985167fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd936000905b82821061124f575050916001939186610590979410611236575b505050811b01600e556137b3565b015160001960f88460031b161c19169055388080611228565b8060018697829497870151815501960194019061120e565b6020908160408183019282815285518094520193019160005b82811061128e575050505090565b90919293826080826112e8600194895162ffffff6060809273ffffffffffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152604081015115156040860152015116910152565b01950193929101611280565b346102c65760206003193601126102c65767ffffffffffffffff6004358181116102c657366023820112156102c65780600401359182116102c6573660248360051b830101116102c65761034e91602461134e9201612917565b60405191829182611267565b346102c65760206003193601126102c657602073ffffffffffffffffffffffffffffffffffffffff61138d600435612152565b16604051908152f35b346102c65760006003193601126102c65760206040517f915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c8152f35b346102c65760206003193601126102c65760206113f46113ef6104af565b6120c7565b604051908152f35b60206003198201126102c6576004359067ffffffffffffffff82116102c6576105eb9160040161110f565b346102c657611435366113fc565b61143d612a01565b805167ffffffffffffffff8111611069576114628161145d600d5461359c565b613660565b602080601f831160011461149f57508192600092611494575b50506000198260011b9260031b1c191617600d55600080f35b01519050388061147b565b90601f198316936114d2600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb590565b926000905b86821061150e57505083600195106114f5575b505050811b01600d55005b015160001960f88460031b161c191690553880806114ea565b806001859682949686015181550195019301906114d7565b346102c65760006003193601126102c657602060ff60115460081c166040519015158152f35b6020908160408183019282815285518094520193019160005b828110611573575050505090565b835185529381019392810192600101611565565b346102c65760206003193601126102c6576115a06104af565b60008054906060809280159283156115c1575b6040518061034e878261154c565b9491935083929091859161170e576115d8816120c7565b95866115f2575b505050505061034e9150388080806115b3565b90919293945085841115611705575b60409283519560019384890160051b88019889875261161e612842565b9084916116346116308a830151151590565b1590565b6116e6575b50849591959887805b611662575b5050505050505050505061034e9250815238808080806115df565b156116c8575b859661167384612899565b808b0151156116905750508786935b0196888d8b52979397611642565b93909351806116c0575b50848418861b156116ad575b8890611682565b998801600581901b8c018b9052996116a6565b93503861169a565b80831480156116dd575b156116685780611647565b50818a146116d2565b5173ffffffffffffffffffffffffffffffffffffffff16915038611639565b94508294611601565b6127e2565b346102c65760406003193601126102c657600435600052600c602052602073ffffffffffffffffffffffffffffffffffffffff61175660243560406000206133e2565b9190546040519260031b1c168152f35b346102c65760406003193601126102c657602060ff6117ba6117866104d2565b600435600052600b845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b346102c6576117d4366113fc565b6117dc612a01565b805167ffffffffffffffff811161106957611801816117fc60105461359c565b6136d1565b602080601f831160011461183e57508192600092611833575b50506000198260011b9260031b1c191617601055600080f35b01519050388061181a565b90601f1983169361187160106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67290565b926000905b8682106118ad5750508360019510611894575b505050811b01601055005b015160001960f88460031b161c19169055388080611889565b80600185968294968601518155019501930190611876565b346102c6576000806003193601126106ea576040519080600f546118e88161359c565b808552916001918083169081156106a257506001146119115761034e8561063b8187038261108a565b9250600f83527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8025b82841061195457505050810160200161063b8261034e61062b565b80546020858701810191909152909301928101611939565b346102c65760e06003193601126102c6576119856104af565b67ffffffffffffffff906024358281116102c6576119a790369060040161110f565b6044358381116102c6576119bf90369060040161110f565b6064358481116102c6576119d790369060040161110f565b6084359485116102c6576119f261059095369060040161110f565b916119fb6104f5565b93611a04610533565b95613c81565b346102c6576060806003193601126102c657611a246104af565b60243591906044358383828083101561170e5760005480911015611b92575b50611a4d846120c7565b9183871015611b89575b82611a6b575b6040518061034e888261154c565b90919293945085840383811115611b81575b50604092835195600193600591611a9d868501841b8a019a8b8952612881565b93600094611ab06116308a830151151590565b611b62575b5060009594959887805b611adf575b5050505050505050505061034e925081523880808080611a5d565b15611b44575b600096611af187612899565b808b015115611b0e5750508787965b0196888d8b52979697611abf565b9690965180611b3c575b50838718851b15611b2b575b8890611b00565b99880180861b8c018b905299611b24565b965038611b18565b8086148015611b59575b15611ae55780611ac4565b50818a14611b4e565b5173ffffffffffffffffffffffffffffffffffffffff16945038611ab5565b925038611a7d565b60009250611a57565b925038611a43565b346102c65760006003193601126102c657602060405160008152f35b346102c65760406003193601126102c657611bcf6104af565b602435908115158092036102c65773ffffffffffffffffffffffffffffffffffffffff90336000526007602052611c2a8160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60806003193601126102c657611c996104af565b611ca16104d2565b6064359167ffffffffffffffff83116102c657366023840112156102c657611cd66105909336906024816004013591016110d8565b9160443591612505565b346102c65760206003193601126102c6576080611cfe600435612881565b611d50604051809262ffffff6060809273ffffffffffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152604081015115156040860152015116910152565bf35b346102c6576020806003193601126102c657600435611d708161228c565b15611e94576040519082826000600d54611d898161359c565b80845290600190818116908115611e545750600114611df5575b5050611db19250038361108a565b815115611de25761034e92610c57611dcb61063b9361269d565b611ddc60405195869485019061213b565b9061213b565b50505061034e611df0612128565b61063b565b90939150600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5936000915b818310611e3c575087945050820101611db138611da3565b85548884018501529485019487945091830191611e24565b9050611db19593507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b820101859238611da3565b7fa14c4b500000000000000000000000000000000000000000000000000000000060005260046000fd5b346102c65760206003193601126102c657600435600052600c6020526020604060002054604051908152f35b346102c65760406003193601126102c657610590600435611f096104d2565b9080600052600b602052611f24600160406000200154612a56565b612ea9565b346102c6576020806003193601126102c65767ffffffffffffffff6004358181116102c657366023820112156102c6578060040135918211611069578160051b60405192611f798583018561108a565b8352602484840191830101913683116102c657602401905b828210611fa15761059084613c43565b81358152908401908401611f91565b346102c6576000806003193601126106ea576040519080601054611fd38161359c565b808552916001918083169081156106a25750600114611ffc5761034e8561063b8187038261108a565b9250601083527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6725b82841061203f57505050810160200161063b8261034e61062b565b80546020858701810191909152909301928101612024565b346102c65760406003193601126102c657602060ff6117ba6120776104af565b73ffffffffffffffffffffffffffffffffffffffff6120946104d2565b91166000526007845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b73ffffffffffffffffffffffffffffffffffffffff1680156120fe57600052600560205267ffffffffffffffff6040600020541690565b7f8f4eb6040000000000000000000000000000000000000000000000000000000060005260046000fd5b604051906121358261106e565b60008252565b9061214e60209282815194859201610592565b0190565b612166816000526004602052604060002090565b5490811561219657507c0100000000000000000000000000000000000000000000000000000000811661273a5790565b9050600090815481101561222357600019905b016121be816000526004602052604060002090565b5490811561221957507c0100000000000000000000000000000000000000000000000000000000811615612214576004827fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b905090565b60001991506121a9565b6004827fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8015612287576000190190565b61224b565b9060009160008054821061229e575050565b9192505b80825260046020526040822054806122c757506122c060409161227a565b90506122a2565b7c0100000000000000000000000000000000000000000000000000000000161592915050565b9190916122f982612152565b9073ffffffffffffffffffffffffffffffffffffffff809116938482841603612500576000848152600660205260409020805461235273ffffffffffffffffffffffffffffffffffffffff881633908114908314171590565b612496575b61236087614028565b61248c575b506123908573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b80546000190190556123c28173ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b80546001019055169283917c0200000000000000000000000000000000000000000000000000000000804260a01b851717612407866000526004602052604060002090565b55811615612442575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a41561243d57565b6127b8565b6001840161245a816000526004602052604060002090565b5415612467575b50612410565b600054811461246157612484906000526004602052604060002090565b553880612461565b6000905538612365565b6124f66116306124ef336124ca8b73ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b156123575761278e565b612764565b9291906125138282866122ed565b803b612520575b50505050565b612529936125a6565b15612537573880808061251a565b7fd1a57ed60000000000000000000000000000000000000000000000000000000060005260046000fd5b908160209103126102c657516105eb8161029c565b3d156125a1573d90612587826110bc565b91612595604051938461108a565b82523d6000602084013e565b606090565b91926020916126189160006040519586809581947f150b7a02000000000000000000000000000000000000000000000000000000009a8b845233600485015273ffffffffffffffffffffffffffffffffffffffff809516602485015260448401526080606484015260848301906105b5565b0393165af16000918161266d575b5061264757612633612576565b80511561264257805190602001fd5b612537565b7fffffffff00000000000000000000000000000000000000000000000000000000161490565b61268f91925060203d8111612696575b612687818361108a565b810190612561565b9038612626565b503d61267d565b9060405160a08101604052600019608082019360008552935b0192600a908181066030018553049283156126d457600019906126b6565b9250608083601f199203019201918252565b7fb562e8dd0000000000000000000000000000000000000000000000000000000060005260046000fd5b7f2e0763000000000000000000000000000000000000000000000000000000000060005260046000fd5b7fdf2d9b420000000000000000000000000000000000000000000000000000000060005260046000fd5b7fa11481000000000000000000000000000000000000000000000000000000000060005260046000fd5b7f59c896be0000000000000000000000000000000000000000000000000000000060005260046000fd5b7fea553b340000000000000000000000000000000000000000000000000000000060005260046000fd5b7f32c1995a0000000000000000000000000000000000000000000000000000000060005260046000fd5b604051906080820182811067ffffffffffffffff8211176110695760405260006060838281528260208201528260408201520152565b6000908161284e61280c565b928054612859575050565b9192505b80825260046020526040822054612877576000190161285d565b6105eb9150612899565b9061288a61280c565b91600080548210612859575050565b6128a161280c565b5060005260046020526040600020546128b861280c565b9073ffffffffffffffffffffffffffffffffffffffff8116825267ffffffffffffffff8160a01c1660208301527c010000000000000000000000000000000000000000000000000000000081161515604083015260e81c606082015290565b6040519180835260051b6020818401016040525b808180156129505761294790601f198091019385010135612881565b9084015261292b565b5050505090565b3360009081527f142ae0bd48b54fb380e908bf20fd1f4ea4f2b9a2663ca7698d91ef391575c621602052604090205460ff161561299057565b610c976048610c656129a1336130d1565b610c57610be861320b565b3360009081527ff70e363b3d7895af770c4a138460777d52eebd3cb9962ccc6b58721f6127bbc8602052604090205460ff16156129e557565b610c976048610c656129f6336130d1565b610c57610be86132a8565b3360009081527fea6919ad9e84aa527aa2dffb6ac6f0a6af0387a080d10167acddf2a249a612dd602052604090205460ff1615612a3a57565b610c976048610c65612a4b336130d1565b610c57610be8613345565b80600052600b60205260ff612a8f3360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541615612a995750565b612aa2336130d1565b612aaa612fe3565b916030612ab68461303e565b536078612ac28461304b565b5360415b60018111612ae557610c976048610c6585610c5788610be8881561306c565b90600f8116906010821015612b33577f3031323334353637383961626364656600000000000000000000000000000000612b2e921a612b24848761305b565b5360041c9161227a565b612ac6565b61300f565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527f6937e6b1cde141aad05c7d03126a39eb070a9f0f221c44303558fa7a951a74356020526040808220612bc3949392907f915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c9060ff905b541615612bc6575b8152600c60205220911690613418565b50565b808252600b602052612bfa858484209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533848616827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8580a4612bb3565b73ffffffffffffffffffffffffffffffffffffffff81811660009081527fdf7de25b7f1fd6d0b5205f0e18f1f35bd7b8d84cce336588d184533ce43a6f76602052604080822054612bc39493929060ff1615612cb9575b808052600c60205220911690613418565b808052600b602052612ced848383209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533838516827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4612ca8565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527fea6919ad9e84aa527aa2dffb6ac6f0a6af0387a080d10167acddf2a249a612dd6020526040808220612bc3949392907fe02a0315b383857ac496e9d2b2546a699afaeb4e5e83a1fdef64376d0b74e5a59060ff90612bab565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527f142ae0bd48b54fb380e908bf20fd1f4ea4f2b9a2663ca7698d91ef391575c6216020526040808220612bc3949392907f6db4061a20ca83a3be756ee172bd37a029093ac5afe4ce968c6d5435b43cb0119060ff90612bab565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527ff70e363b3d7895af770c4a138460777d52eebd3cb9962ccc6b58721f6127bbc86020526040808220612bc3949392907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69060ff90612bab565b9073ffffffffffffffffffffffffffffffffffffffff6040612bc393600090808252600b60205260ff612efe868585209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5416612f15575b8152600c602052209116906134e7565b808252600b602052612f49858484209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905533848616827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a4612f05565b60405190612faa8261104d565b60095473ffffffffffffffffffffffffffffffffffffffff8116835260a01c6020830152565b8181029291811591840414171561228757565b604051906080820182811067ffffffffffffffff82111761106957604052604282526060366020840137565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b805115612b335760200190565b805160011015612b335760210190565b908151811015612b33570160200190565b1561307357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b604051906060820182811067ffffffffffffffff82111761106957604052602a8252604036602084013760306131068361303e565b5360786131128361304b565b536029905b6001821161312a576105eb91501561306c565b600f8116906010821015612b33577f3031323334353637383961626364656600000000000000000000000000000000613168921a612b24848661305b565b90613117565b7f915327d54f2c758ad33c35b031b5e89868657ea971cda2b8103c502dc672509c613197612fe3565b9060306131a38361303e565b5360786131af8361304b565b536041905b600182116131c7576105eb91501561306c565b600f8116906010821015612b33577f3031323334353637383961626364656600000000000000000000000000000000613205921a612b24848661305b565b906131b4565b7f6db4061a20ca83a3be756ee172bd37a029093ac5afe4ce968c6d5435b43cb011613234612fe3565b9060306132408361303e565b53607861324c8361304b565b536041905b60018211613264576105eb91501561306c565b600f8116906010821015612b33577f30313233343536373839616263646566000000000000000000000000000000006132a2921a612b24848661305b565b90613251565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66132d1612fe3565b9060306132dd8361303e565b5360786132e98361304b565b536041905b60018211613301576105eb91501561306c565b600f8116906010821015612b33577f303132333435363738396162636465660000000000000000000000000000000061333f921a612b24848661305b565b906132ee565b7fe02a0315b383857ac496e9d2b2546a699afaeb4e5e83a1fdef64376d0b74e5a561336e612fe3565b90603061337a8361303e565b5360786133868361304b565b536041905b6001821161339e576105eb91501561306c565b600f8116906010821015612b33577f30313233343536373839616263646566000000000000000000000000000000006133dc921a612b24848661305b565b9061338b565b8054821015612b335760005260206000200190600090565b91613414918354906000199060031b92831b921b19161790565b9055565b6001810190826000528160205260406000205415600014613486578054680100000000000000008110156110695761347161345a8260018794018555846133e2565b81939154906000199060031b92831b921b19161790565b90555491600052602052604060002055600190565b505050600090565b80549081156134b857600019809201916134a883836133e2565b909182549160031b1b1916905555565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600181019180600052826020526040600020549283151560001461359357600019928385019085821161228757805494850194851161228757600095858361353b9461354a9803613550575b50505061348e565b90600052602052604060002090565b55600190565b61357a6135749161356461358a94876133e2565b90549060031b1c928391876133e2565b906133fa565b8590600052602052604060002090565b55388080613533565b50505050600090565b90600182811c921680156135e5575b60208310146135b657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f16916135ab565b601f81116135fb575050565b600090600e82527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd906020601f850160051c83019410613656575b601f0160051c01915b82811061364b57505050565b81815560010161363f565b9092508290613636565b601f811161366c575050565b600090600d82527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5906020601f850160051c830194106136c7575b601f0160051c01915b8281106136bc57505050565b8181556001016136b0565b90925082906136a7565b601f81116136dd575050565b600090601082527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672906020601f850160051c83019410613738575b601f0160051c01915b82811061372d57505050565b818155600101613721565b9092508290613718565b601f811161374e575050565b600090600f82527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802906020601f850160051c830194106137a9575b601f0160051c01915b82811061379e57505050565b818155600101613792565b9092508290613789565b90815167ffffffffffffffff8111611069576137d9816137d4600f5461359c565b613742565b602080601f83116001146138145750819293600092613809575b50506000198260011b9260031b1c191617600f55565b0151905038806137f3565b90601f19831694613847600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290565b926000905b87821061388457505083600195961061386b575b505050811b01600f55565b015160001960f88460031b161c19169055388080613860565b8060018596829496860151815501950193019061384c565b90815167ffffffffffffffff8111611069576138bd8161145d600d5461359c565b602080601f83116001146138f857508192936000926138ed575b50506000198260011b9260031b1c191617600d55565b0151905038806138d7565b90601f1983169461392b600d6000527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb590565b926000905b87821061396857505083600195961061394f575b505050811b01600d55565b015160001960f88460031b161c19169055388080613944565b80600185968294968601518155019501930190613930565b90815167ffffffffffffffff8111611069576139a1816117fc60105461359c565b602080601f83116001146139dc57508192936000926139d1575b50506000198260011b9260031b1c191617601055565b0151905038806139bb565b90601f19831694613a0f60106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67290565b926000905b878210613a4c575050836001959610613a33575b505050811b01601055565b015160001960f88460031b161c19169055388080613a28565b80600185968294968601518155019501930190613a14565b613a6d81612152565b73ffffffffffffffffffffffffffffffffffffffff8116613a9b836000526006602052604060002090815490565b9290613ac373ffffffffffffffffffffffffffffffffffffffff841633908114908614171590565b613c05575b600093613ad484614028565b613bfc575b50613b048273ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b6fffffffffffffffffffffffffffffffff81540190557c03000000000000000000000000000000000000000000000000000000004260a01b831717613b53856000526004602052604060002090565b557c0200000000000000000000000000000000000000000000000000000000811615613bb3575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a46110ba613bae60015460010190565b600155565b60018401613bcb816000526004602052604060002090565b5415613bd8575b50613b7a565b83548114613bd257613bf4906000526004602052604060002090565b553880613bd2565b83905538613ad9565b613c396116306124ef336124ca8773ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b15613ac85761278e565b80519060005b828110613c5557505050565b8151811015612b3357613c7060208260051b84010151613a64565b600019811461228757600101613c49565b9594939291906101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6011541617601155613cbc87612b38565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163314801590613e72575b613e485780519067ffffffffffffffff821161106957613d2282611196600e5461359c565b60209081601f8411600114613dc5575093613d6b613d759484613d959b9a9895613d7095613d909b996000926111d15750506000198260011b9260031b1c191617600e556137b3565b61389c565b613980565b613d7e84612c51565b613d8784612d44565b61058b84612dbb565b612e32565b6110ba60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006011541617601155565b600e6000529190601f1984167fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd936000905b828210613e3057505094600185613d7095613d909b9995613d6b95613d959f9e9c99613d759b1061123657505050811b01600e556137b3565b80600186978294978701518155019601940190613df7565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b5060ff60115416613cfd565b15613e8557565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c2065786365656460448201527f2073616c655072696365000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff6bffffffffffffffffffffffff831691613f3c612710841115613e7e565b16918215613f83577fffffffffffffffffffffffff0000000000000000000000000000000000000000916020604051613f748161104d565b858152015260a01b1617600955565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152fd5b60ff60115460081c1680614020575b613ff657565b60046040517fdb89e3f4000000000000000000000000000000000000000000000000000000008152fd5b506000613ff0565b60ff60115460081c16908161403f575b50613ff657565b73ffffffffffffffffffffffffffffffffffffffff915016151538614038565b6140688161414e565b9081156140b6575b811561408b575b8115614081575090565b6105eb91506140c7565b7fffffffff000000000000000000000000000000000000000000000000000000008116159150614077565b90506140c1816140c7565b90614070565b7fffffffff000000000000000000000000000000000000000000000000000000008116907f5a05180f00000000000000000000000000000000000000000000000000000000821491821561411a57505090565b7f7965db0b000000000000000000000000000000000000000000000000000000001491508115614148575090565b6105eb91505b7fffffffff00000000000000000000000000000000000000000000000000000000167f2a55205a00000000000000000000000000000000000000000000000000000000811490811561419e575090565b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150149056fea26469706673582212208cc38c1dc1c4ee2f4014fecf18b2fa82f3e8565c358f7a55501c9e6e8a901fd564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x35E60BD4 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x5944C753 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x5A446215 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x5BBB2177 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x68A37AE8 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x7E518EC8 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x842F9B68 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x98DD69C8 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x99A2557A EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xC23DC68F EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xDC8E92EA EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x1D9 JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x1FB0 JUMP JUMPDEST PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x1CE0 JUMP JUMPDEST PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x196C JUMP JUMPDEST PUSH2 0x18C5 JUMP JUMPDEST PUSH2 0x17C6 JUMP JUMPDEST PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x1713 JUMP JUMPDEST PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x1427 JUMP JUMPDEST PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x1396 JUMP JUMPDEST PUSH2 0x135A JUMP JUMPDEST PUSH2 0x12F4 JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST PUSH2 0xE79 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH2 0xC9B JUMP JUMPDEST PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x886 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH2 0x2CB JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x34E PUSH1 0x4 CALLDATALOAD PUSH2 0x2EB DUP2 PUSH2 0x29C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SWAP1 DUP2 PUSH32 0xB1C990BC00000000000000000000000000000000000000000000000000000000 EQ SWAP2 DUP3 ISZERO PUSH2 0x352 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP3 POP SWAP1 DUP3 ISZERO PUSH2 0x388 JUMPI JUMPDEST POP POP CODESIZE DUP1 PUSH2 0x33A JUMP JUMPDEST PUSH32 0xC21B8F2800000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP3 POP SWAP1 DUP3 ISZERO PUSH2 0x485 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x3F4 JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x3E3 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3D3 JUMPI JUMPDEST POP CODESIZE DUP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x3DD SWAP2 POP PUSH2 0x405F JUMP JUMPDEST CODESIZE PUSH2 0x3CB JUMP JUMPDEST SWAP1 POP PUSH2 0x3EE DUP2 PUSH2 0x405F JUMP JUMPDEST SWAP1 PUSH2 0x3C4 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x45B JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x431 JUMPI JUMPDEST POP SWAP1 CODESIZE PUSH2 0x3BC JUMP JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x429 JUMP JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x422 JUMP JUMPDEST PUSH32 0x8446A79E00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP3 POP PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x567 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x2C6 JUMPI PUSH2 0x590 SWAP2 PUSH2 0x58B PUSH2 0x2957 JUMP JUMPDEST PUSH2 0x3F09 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x5A5 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x595 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x5D3 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x592 JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x5EB SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x5B5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xE SLOAD PUSH2 0x611 DUP2 PUSH2 0x359C JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x6A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x647 JUMPI JUMPDEST PUSH2 0x34E DUP6 PUSH2 0x63B DUP2 DUP8 SUB DUP3 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x5DA JUMP JUMPDEST SWAP3 POP PUSH1 0xE DUP4 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD JUMPDEST DUP3 DUP5 LT PUSH2 0x68A JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x63B DUP3 PUSH2 0x34E PUSH2 0x62B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x66F JUMP JUMPDEST DUP7 SWAP6 POP PUSH2 0x34E SWAP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x63B SWAP5 SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 SWAP4 PUSH2 0x62B JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x70A DUP2 PUSH2 0x228C JUMP JUMPDEST ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x77B PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x79D DUP4 PUSH2 0x2152 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x81D JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x856 CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x7A7 JUMPI PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x2C6 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x2C6 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x2C6 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x590 PUSH2 0x8F7 CALLDATASIZE PUSH2 0x8A9 JUMP JUMPDEST SWAP2 PUSH2 0x22ED JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x95A DUP3 PUSH2 0x104D JUMP JUMPDEST SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO PUSH2 0x9EF JUMPI JUMPDEST PUSH2 0x9C6 PUSH2 0x2710 PUSH2 0x9AA PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x2FD0 JUMP JUMPDEST DIV SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE RETURN JUMPDEST POP PUSH2 0x9F8 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x986 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xAA5 PUSH2 0xA1C PUSH2 0x4D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA9D PUSH1 0x0 SWAP5 DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0xA4F PUSH1 0x1 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD PUSH2 0x2A56 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0xA86 DUP6 PUSH1 0x40 DUP10 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 AND SWAP1 PUSH2 0x3418 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0xADE DUP5 PUSH1 0x40 DUP9 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP10 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x2C6 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6937E6B1CDE141AAD05C7D03126A39EB070A9F0F221C44303558FA7A951A7435 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBCC JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH2 0xFF00 PUSH1 0x11 SLOAD SWAP3 PUSH1 0x8 SHL AND SWAP2 AND OR PUSH1 0x11 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 PUSH2 0xBDD CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xBE8 PUSH2 0x316E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xC28 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x592 JUMP JUMPDEST DUP5 ADD PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x37 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x213B JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x5DA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0xCB4 PUSH2 0x4D2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0xCDD JUMPI PUSH2 0x590 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2EA9 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0xD7A PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xD86 PUSH2 0x29AC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SLOAD SWAP2 DUP2 ISZERO PUSH2 0xE74 JUMPI PUSH2 0xD9A PUSH2 0x3FE1 JUMP JUMPDEST PUSH1 0x1 SWAP2 PUSH2 0xE00 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 DUP5 DUP4 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP5 OR PUSH2 0xDD9 DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH9 0x10000000000000001 DUP3 MUL DUP2 SLOAD ADD SWAP1 SSTORE DUP2 ISZERO PUSH2 0xE6F JUMPI DUP4 ADD SWAP3 SWAP2 DUP1 DUP1 JUMPDEST PUSH2 0xE2A JUMPI JUMPDEST DUP6 DUP6 DUP2 SSTORE DUP1 RETURN JUMPDEST ISZERO PUSH2 0xE5E JUMPI JUMPDEST DUP5 DUP2 DUP5 DUP5 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 PUSH2 0xE1E JUMP JUMPDEST DUP1 SWAP3 ADD SWAP2 DUP4 DUP4 SUB PUSH2 0xE30 JUMPI DUP1 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x2710 JUMP JUMPDEST PUSH2 0x26E6 JUMP JUMPDEST PUSH2 0x590 PUSH2 0xE85 CALLDATASIZE PUSH2 0x8A9 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xE93 DUP5 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x2505 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x590 PUSH1 0x4 CALLDATALOAD PUSH2 0x3A64 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0xED1 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0xED9 PUSH2 0x518 JUMP JUMPDEST SWAP1 PUSH2 0xEE2 PUSH2 0x2957 JUMP JUMPDEST PUSH2 0xEFE PUSH2 0x2710 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND GT ISZERO PUSH2 0x3E7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xF5D PUSH2 0x590 SWAP3 PUSH2 0xF48 PUSH2 0xF2C PUSH2 0x10AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND DUP5 MSTORE JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xF73 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH1 0xA0 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20496E76616C696420706172616D65746572730000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x101E JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x10BA DUP3 PUSH2 0x104D JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x10E4 DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 PUSH2 0x10F2 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x108A JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x2C6 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2C6 JUMPI DUP2 PUSH1 0x20 PUSH2 0x5EB SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x10D8 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x115C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x1175 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST SWAP1 PUSH2 0x117E PUSH2 0x2A01 JUMP JUMPDEST DUP3 MLOAD SWAP1 DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x119B DUP2 PUSH2 0x1196 PUSH1 0xE SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH2 0x35EF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x11DC JUMPI POP DUP2 SWAP1 PUSH2 0x590 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x11D1 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE PUSH2 0x37B3 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE SWAP2 SWAP4 PUSH1 0x1F NOT DUP6 AND PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x124F JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH2 0x590 SWAP8 SWAP5 LT PUSH2 0x1236 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE PUSH2 0x37B3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1228 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x128E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH1 0x80 DUP3 PUSH2 0x12E8 PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x1280 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C6 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2C6 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x2C6 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x2C6 JUMPI PUSH2 0x34E SWAP2 PUSH1 0x24 PUSH2 0x134E SWAP3 ADD PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1267 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x138D PUSH1 0x4 CALLDATALOAD PUSH2 0x2152 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH2 0x13F4 PUSH2 0x13EF PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2C6 JUMPI PUSH2 0x5EB SWAP2 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH2 0x1435 CALLDATASIZE PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x143D PUSH2 0x2A01 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x1462 DUP2 PUSH2 0x145D PUSH1 0xD SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH2 0x3660 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x149F JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x1494 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x147B JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x14D2 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x150E JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x14F5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x14EA JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x14D7 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x11 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1573 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1565 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x15A0 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH1 0x60 DUP1 SWAP3 DUP1 ISZERO SWAP3 DUP4 ISZERO PUSH2 0x15C1 JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x34E DUP8 DUP3 PUSH2 0x154C JUMP JUMPDEST SWAP5 SWAP2 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 DUP6 SWAP2 PUSH2 0x170E JUMPI PUSH2 0x15D8 DUP2 PUSH2 0x20C7 JUMP JUMPDEST SWAP6 DUP7 PUSH2 0x15F2 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x34E SWAP2 POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x15B3 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP6 DUP5 GT ISZERO PUSH2 0x1705 JUMPI JUMPDEST PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 PUSH1 0x1 SWAP4 DUP5 DUP10 ADD PUSH1 0x5 SHL DUP9 ADD SWAP9 DUP10 DUP8 MSTORE PUSH2 0x161E PUSH2 0x2842 JUMP JUMPDEST SWAP1 DUP5 SWAP2 PUSH2 0x1634 PUSH2 0x1630 DUP11 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x16E6 JUMPI JUMPDEST POP DUP5 SWAP6 SWAP2 SWAP6 SWAP9 DUP8 DUP1 JUMPDEST PUSH2 0x1662 JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x34E SWAP3 POP DUP2 MSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x15DF JUMP JUMPDEST ISZERO PUSH2 0x16C8 JUMPI JUMPDEST DUP6 SWAP7 PUSH2 0x1673 DUP5 PUSH2 0x2899 JUMP JUMPDEST DUP1 DUP12 ADD MLOAD ISZERO PUSH2 0x1690 JUMPI POP POP DUP8 DUP7 SWAP4 JUMPDEST ADD SWAP7 DUP9 DUP14 DUP12 MSTORE SWAP8 SWAP4 SWAP8 PUSH2 0x1642 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 MLOAD DUP1 PUSH2 0x16C0 JUMPI JUMPDEST POP DUP5 DUP5 XOR DUP7 SHL ISZERO PUSH2 0x16AD JUMPI JUMPDEST DUP9 SWAP1 PUSH2 0x1682 JUMP JUMPDEST SWAP10 DUP9 ADD PUSH1 0x5 DUP2 SWAP1 SHL DUP13 ADD DUP12 SWAP1 MSTORE SWAP10 PUSH2 0x16A6 JUMP JUMPDEST SWAP4 POP CODESIZE PUSH2 0x169A JUMP JUMPDEST DUP1 DUP4 EQ DUP1 ISZERO PUSH2 0x16DD JUMPI JUMPDEST ISZERO PUSH2 0x1668 JUMPI DUP1 PUSH2 0x1647 JUMP JUMPDEST POP DUP2 DUP11 EQ PUSH2 0x16D2 JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP CODESIZE PUSH2 0x1639 JUMP JUMPDEST SWAP5 POP DUP3 SWAP5 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x27E2 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1756 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x33E2 JUMP JUMPDEST SWAP2 SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x17BA PUSH2 0x1786 PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH2 0x17D4 CALLDATASIZE PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x17DC PUSH2 0x2A01 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x1801 DUP2 PUSH2 0x17FC PUSH1 0x10 SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH2 0x36D1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x183E JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x1833 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x181A JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x1871 PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x18AD JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x1894 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1889 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1876 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xF SLOAD PUSH2 0x18E8 DUP2 PUSH2 0x359C JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x6A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1911 JUMPI PUSH2 0x34E DUP6 PUSH2 0x63B DUP2 DUP8 SUB DUP3 PUSH2 0x108A JUMP JUMPDEST SWAP3 POP PUSH1 0xF DUP4 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 JUMPDEST DUP3 DUP5 LT PUSH2 0x1954 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x63B DUP3 PUSH2 0x34E PUSH2 0x62B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1939 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x1985 PUSH2 0x4AF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x19A7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x19BF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x19D7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x2C6 JUMPI PUSH2 0x19F2 PUSH2 0x590 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST SWAP2 PUSH2 0x19FB PUSH2 0x4F5 JUMP JUMPDEST SWAP4 PUSH2 0x1A04 PUSH2 0x533 JUMP JUMPDEST SWAP6 PUSH2 0x3C81 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x60 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x1A24 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x44 CALLDATALOAD DUP4 DUP4 DUP3 DUP1 DUP4 LT ISZERO PUSH2 0x170E JUMPI PUSH1 0x0 SLOAD DUP1 SWAP2 LT ISZERO PUSH2 0x1B92 JUMPI JUMPDEST POP PUSH2 0x1A4D DUP5 PUSH2 0x20C7 JUMP JUMPDEST SWAP2 DUP4 DUP8 LT ISZERO PUSH2 0x1B89 JUMPI JUMPDEST DUP3 PUSH2 0x1A6B JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x34E DUP9 DUP3 PUSH2 0x154C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP6 DUP5 SUB DUP4 DUP2 GT ISZERO PUSH2 0x1B81 JUMPI JUMPDEST POP PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 PUSH1 0x1 SWAP4 PUSH1 0x5 SWAP2 PUSH2 0x1A9D DUP7 DUP6 ADD DUP5 SHL DUP11 ADD SWAP11 DUP12 DUP10 MSTORE PUSH2 0x2881 JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x1AB0 PUSH2 0x1630 DUP11 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1B62 JUMPI JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 SWAP6 SWAP9 DUP8 DUP1 JUMPDEST PUSH2 0x1ADF JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x34E SWAP3 POP DUP2 MSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1A5D JUMP JUMPDEST ISZERO PUSH2 0x1B44 JUMPI JUMPDEST PUSH1 0x0 SWAP7 PUSH2 0x1AF1 DUP8 PUSH2 0x2899 JUMP JUMPDEST DUP1 DUP12 ADD MLOAD ISZERO PUSH2 0x1B0E JUMPI POP POP DUP8 DUP8 SWAP7 JUMPDEST ADD SWAP7 DUP9 DUP14 DUP12 MSTORE SWAP8 SWAP7 SWAP8 PUSH2 0x1ABF JUMP JUMPDEST SWAP7 SWAP1 SWAP7 MLOAD DUP1 PUSH2 0x1B3C JUMPI JUMPDEST POP DUP4 DUP8 XOR DUP6 SHL ISZERO PUSH2 0x1B2B JUMPI JUMPDEST DUP9 SWAP1 PUSH2 0x1B00 JUMP JUMPDEST SWAP10 DUP9 ADD DUP1 DUP7 SHL DUP13 ADD DUP12 SWAP1 MSTORE SWAP10 PUSH2 0x1B24 JUMP JUMPDEST SWAP7 POP CODESIZE PUSH2 0x1B18 JUMP JUMPDEST DUP1 DUP7 EQ DUP1 ISZERO PUSH2 0x1B59 JUMPI JUMPDEST ISZERO PUSH2 0x1AE5 JUMPI DUP1 PUSH2 0x1AC4 JUMP JUMPDEST POP DUP2 DUP11 EQ PUSH2 0x1B4E JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP CODESIZE PUSH2 0x1AB5 JUMP JUMPDEST SWAP3 POP CODESIZE PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x0 SWAP3 POP PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP CODESIZE PUSH2 0x1A43 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x1BCF PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x2C6 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x1C2A DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x1C99 PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x1CA1 PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x2C6 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x1CD6 PUSH2 0x590 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x10D8 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x2505 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x80 PUSH2 0x1CFE PUSH1 0x4 CALLDATALOAD PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x1D50 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1D70 DUP2 PUSH2 0x228C JUMP JUMPDEST ISZERO PUSH2 0x1E94 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 PUSH1 0x0 PUSH1 0xD SLOAD PUSH2 0x1D89 DUP2 PUSH2 0x359C JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1E54 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DF5 JUMPI JUMPDEST POP POP PUSH2 0x1DB1 SWAP3 POP SUB DUP4 PUSH2 0x108A JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1DE2 JUMPI PUSH2 0x34E SWAP3 PUSH2 0xC57 PUSH2 0x1DCB PUSH2 0x63B SWAP4 PUSH2 0x269D JUMP JUMPDEST PUSH2 0x1DDC PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 ADD SWAP1 PUSH2 0x213B JUMP JUMPDEST SWAP1 PUSH2 0x213B JUMP JUMPDEST POP POP POP PUSH2 0x34E PUSH2 0x1DF0 PUSH2 0x2128 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1E3C JUMPI POP DUP8 SWAP5 POP POP DUP3 ADD ADD PUSH2 0x1DB1 CODESIZE PUSH2 0x1DA3 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1E24 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB1 SWAP6 SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 SWAP3 CODESIZE PUSH2 0x1DA3 JUMP JUMPDEST PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x590 PUSH1 0x4 CALLDATALOAD PUSH2 0x1F09 PUSH2 0x4D2 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x1F24 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2A56 JUMP JUMPDEST PUSH2 0x2EA9 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C6 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2C6 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x1069 JUMPI DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1F79 DUP6 DUP4 ADD DUP6 PUSH2 0x108A JUMP JUMPDEST DUP4 MSTORE PUSH1 0x24 DUP5 DUP5 ADD SWAP2 DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x2C6 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1FA1 JUMPI PUSH2 0x590 DUP5 PUSH2 0x3C43 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1F91 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x10 SLOAD PUSH2 0x1FD3 DUP2 PUSH2 0x359C JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x6A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1FFC JUMPI PUSH2 0x34E DUP6 PUSH2 0x63B DUP2 DUP8 SUB DUP3 PUSH2 0x108A JUMP JUMPDEST SWAP3 POP PUSH1 0x10 DUP4 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 JUMPDEST DUP3 DUP5 LT PUSH2 0x203F JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x63B DUP3 PUSH2 0x34E PUSH2 0x62B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x2024 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x17BA PUSH2 0x2077 PUSH2 0x4AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2094 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x20FE JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2135 DUP3 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x214E PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x592 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x2166 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0x2196 JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH2 0x273A JUMPI SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x2223 JUMPI PUSH1 0x0 NOT SWAP1 JUMPDEST ADD PUSH2 0x21BE DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0x2219 JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0x2214 JUMPI PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP2 POP PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2287 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x224B JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0x229E JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP1 PUSH2 0x22C7 JUMPI POP PUSH2 0x22C0 PUSH1 0x40 SWAP2 PUSH2 0x227A JUMP JUMPDEST SWAP1 POP PUSH2 0x22A2 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x22F9 DUP3 PUSH2 0x2152 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP4 DUP5 DUP3 DUP5 AND SUB PUSH2 0x2500 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x2352 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP4 EQ OR ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2496 JUMPI JUMPDEST PUSH2 0x2360 DUP8 PUSH2 0x4028 JUMP JUMPDEST PUSH2 0x248C JUMPI JUMPDEST POP PUSH2 0x2390 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x23C2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE AND SWAP3 DUP4 SWAP2 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0x2407 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0x2442 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 ISZERO PUSH2 0x243D JUMPI JUMP JUMPDEST PUSH2 0x27B8 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x245A DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x2467 JUMPI JUMPDEST POP PUSH2 0x2410 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x2461 JUMPI PUSH2 0x2484 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x2461 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x2365 JUMP JUMPDEST PUSH2 0x24F6 PUSH2 0x1630 PUSH2 0x24EF CALLER PUSH2 0x24CA DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2357 JUMPI PUSH2 0x278E JUMP JUMPDEST PUSH2 0x2764 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x2513 DUP3 DUP3 DUP7 PUSH2 0x22ED JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x2520 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2529 SWAP4 PUSH2 0x25A6 JUMP JUMPDEST ISZERO PUSH2 0x2537 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x251A JUMP JUMPDEST PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2C6 JUMPI MLOAD PUSH2 0x5EB DUP2 PUSH2 0x29C JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x25A1 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2587 DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 PUSH2 0x2595 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x108A JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 SWAP2 PUSH2 0x2618 SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP6 DUP2 SWAP5 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP11 DUP12 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP6 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x5B5 JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x266D JUMPI JUMPDEST POP PUSH2 0x2647 JUMPI PUSH2 0x2633 PUSH2 0x2576 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2642 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x2537 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x268F SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2696 JUMPI JUMPDEST PUSH2 0x2687 DUP2 DUP4 PUSH2 0x108A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2626 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x267D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x0 NOT PUSH1 0x80 DUP3 ADD SWAP4 PUSH1 0x0 DUP6 MSTORE SWAP4 JUMPDEST ADD SWAP3 PUSH1 0xA SWAP1 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x26D4 JUMPI PUSH1 0x0 NOT SWAP1 PUSH2 0x26B6 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP4 PUSH1 0x1F NOT SWAP3 SUB ADD SWAP3 ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x32C1995A00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 PUSH2 0x284E PUSH2 0x280C JUMP JUMPDEST SWAP3 DUP1 SLOAD PUSH2 0x2859 JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH2 0x2877 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x285D JUMP JUMPDEST PUSH2 0x5EB SWAP2 POP PUSH2 0x2899 JUMP JUMPDEST SWAP1 PUSH2 0x288A PUSH2 0x280C JUMP JUMPDEST SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0x2859 JUMPI POP POP JUMP JUMPDEST PUSH2 0x28A1 PUSH2 0x280C JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x28B8 PUSH2 0x280C JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0x20 DUP4 ADD MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xE8 SHR PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 SHL PUSH1 0x20 DUP2 DUP5 ADD ADD PUSH1 0x40 MSTORE JUMPDEST DUP1 DUP2 DUP1 ISZERO PUSH2 0x2950 JUMPI PUSH2 0x2947 SWAP1 PUSH1 0x1F NOT DUP1 SWAP2 ADD SWAP4 DUP6 ADD ADD CALLDATALOAD PUSH2 0x2881 JUMP JUMPDEST SWAP1 DUP5 ADD MSTORE PUSH2 0x292B JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x142AE0BD48B54FB380E908BF20FD1F4EA4F2B9A2663CA7698D91EF391575C621 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2990 JUMPI JUMP JUMPDEST PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 PUSH2 0x29A1 CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xBE8 PUSH2 0x320B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF70E363B3D7895AF770C4A138460777D52EEBD3CB9962CCC6B58721F6127BBC8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x29E5 JUMPI JUMP JUMPDEST PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 PUSH2 0x29F6 CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xBE8 PUSH2 0x32A8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEA6919AD9E84AA527AA2DFFB6AC6F0A6AF0387A080D10167ACDDF2A249A612DD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2A3A JUMPI JUMP JUMPDEST PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 PUSH2 0x2A4B CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xBE8 PUSH2 0x3345 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x2A8F CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x2A99 JUMPI POP JUMP JUMPDEST PUSH2 0x2AA2 CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0x2AAA PUSH2 0x2FE3 JUMP JUMPDEST SWAP2 PUSH1 0x30 PUSH2 0x2AB6 DUP5 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x2AC2 DUP5 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x2AE5 JUMPI PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 DUP6 PUSH2 0xC57 DUP9 PUSH2 0xBE8 DUP9 ISZERO PUSH2 0x306C JUMP JUMPDEST SWAP1 PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x2B2E SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP8 PUSH2 0x305B JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP2 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x2AC6 JUMP JUMPDEST PUSH2 0x300F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6937E6B1CDE141AAD05C7D03126A39EB070A9F0F221C44303558FA7A951A7435 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0x2BC6 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x3418 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2BFA DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP6 DUP1 LOG4 PUSH2 0x2BB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xDF7DE25B7F1FD6D0B5205F0E18F1F35BD7B8D84CCE336588D184533CE43A6F76 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2CB9 JUMPI JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x3418 JUMP JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2CED DUP5 DUP4 DUP4 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH2 0x2CA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEA6919AD9E84AA527AA2DFFB6AC6F0A6AF0387A080D10167ACDDF2A249A612DD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x142AE0BD48B54FB380E908BF20FD1F4EA4F2B9A2663CA7698D91EF391575C621 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF70E363B3D7895AF770C4A138460777D52EEBD3CB9962CCC6B58721F6127BBC8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2BAB JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH2 0x2BC3 SWAP4 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x2EFE DUP7 DUP6 DUP6 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x2F15 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x34E7 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2F49 DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP1 LOG4 PUSH2 0x2F05 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2FAA DUP3 PUSH2 0x104D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2287 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE PUSH1 0x42 DUP3 MSTORE PUSH1 0x60 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2B33 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x2B33 JUMPI PUSH1 0x21 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2B33 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3073 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE PUSH1 0x2A DUP3 MSTORE PUSH1 0x40 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x30 PUSH2 0x3106 DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x3112 DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x29 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x312A JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x3168 SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x3117 JUMP JUMPDEST PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C PUSH2 0x3197 PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x31A3 DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x31AF DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x31C7 JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x3205 SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 PUSH2 0x3234 PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x3240 DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x324C DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x3264 JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x32A2 SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x32D1 PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x32DD DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x32E9 DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x3301 JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x333F SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 PUSH2 0x336E PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x337A DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x3386 DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x339E JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x33DC SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x338B JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x3414 SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x3486 JUMPI DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x1069 JUMPI PUSH2 0x3471 PUSH2 0x345A DUP3 PUSH1 0x1 DUP8 SWAP5 ADD DUP6 SSTORE DUP5 PUSH2 0x33E2 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x34B8 JUMPI PUSH1 0x0 NOT DUP1 SWAP3 ADD SWAP2 PUSH2 0x34A8 DUP4 DUP4 PUSH2 0x33E2 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SWAP2 DUP1 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP4 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x3593 JUMPI PUSH1 0x0 NOT SWAP3 DUP4 DUP6 ADD SWAP1 DUP6 DUP3 GT PUSH2 0x2287 JUMPI DUP1 SLOAD SWAP5 DUP6 ADD SWAP5 DUP6 GT PUSH2 0x2287 JUMPI PUSH1 0x0 SWAP6 DUP6 DUP4 PUSH2 0x353B SWAP5 PUSH2 0x354A SWAP9 SUB PUSH2 0x3550 JUMPI JUMPDEST POP POP POP PUSH2 0x348E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x357A PUSH2 0x3574 SWAP2 PUSH2 0x3564 PUSH2 0x358A SWAP5 DUP8 PUSH2 0x33E2 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP2 DUP8 PUSH2 0x33E2 JUMP JUMPDEST SWAP1 PUSH2 0x33FA JUMP JUMPDEST DUP6 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3533 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x35E5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x35B6 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x35FB JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xE DUP3 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3656 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x364B JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x363F JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3636 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x366C JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x36C7 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x36BC JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x36B0 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x36A7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x36DD JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3738 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x372D JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3721 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3718 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x374E JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x37A9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x379E JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3792 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3789 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x37D9 DUP2 PUSH2 0x37D4 PUSH1 0xF SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH2 0x3742 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3814 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x3809 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x37F3 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x3847 PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3884 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x386B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3860 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x384C JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x38BD DUP2 PUSH2 0x145D PUSH1 0xD SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x38F8 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x38ED JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x38D7 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x392B PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3968 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x394F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3944 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x3930 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x39A1 DUP2 PUSH2 0x17FC PUSH1 0x10 SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x39DC JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x39D1 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x39BB JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x3A0F PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3A4C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x3A33 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3A28 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x3A14 JUMP JUMPDEST PUSH2 0x3A6D DUP2 PUSH2 0x2152 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3A9B DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x3AC3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP7 EQ OR ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x3C05 JUMPI JUMPDEST PUSH1 0x0 SWAP4 PUSH2 0x3AD4 DUP5 PUSH2 0x4028 JUMP JUMPDEST PUSH2 0x3BFC JUMPI JUMPDEST POP PUSH2 0x3B04 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD ADD SWAP1 SSTORE PUSH29 0x300000000000000000000000000000000000000000000000000000000 TIMESTAMP PUSH1 0xA0 SHL DUP4 OR OR PUSH2 0x3B53 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0x3BB3 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP3 DUP1 LOG4 PUSH2 0x10BA PUSH2 0x3BAE PUSH1 0x1 SLOAD PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x3BCB DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x3BD8 JUMPI JUMPDEST POP PUSH2 0x3B7A JUMP JUMPDEST DUP4 SLOAD DUP2 EQ PUSH2 0x3BD2 JUMPI PUSH2 0x3BF4 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x3BD2 JUMP JUMPDEST DUP4 SWAP1 SSTORE CODESIZE PUSH2 0x3AD9 JUMP JUMPDEST PUSH2 0x3C39 PUSH2 0x1630 PUSH2 0x24EF CALLER PUSH2 0x24CA DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3AC8 JUMPI PUSH2 0x278E JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3C55 JUMPI POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2B33 JUMPI PUSH2 0x3C70 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD MLOAD PUSH2 0x3A64 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2287 JUMPI PUSH1 0x1 ADD PUSH2 0x3C49 JUMP JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH1 0x11 SLOAD AND OR PUSH1 0x11 SSTORE PUSH2 0x3CBC DUP8 PUSH2 0x2B38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x3E72 JUMPI JUMPDEST PUSH2 0x3E48 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1069 JUMPI PUSH2 0x3D22 DUP3 PUSH2 0x1196 PUSH1 0xE SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x3DC5 JUMPI POP SWAP4 PUSH2 0x3D6B PUSH2 0x3D75 SWAP5 DUP5 PUSH2 0x3D95 SWAP12 SWAP11 SWAP9 SWAP6 PUSH2 0x3D70 SWAP6 PUSH2 0x3D90 SWAP12 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x11D1 JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE PUSH2 0x37B3 JUMP JUMPDEST PUSH2 0x389C JUMP JUMPDEST PUSH2 0x3980 JUMP JUMPDEST PUSH2 0x3D7E DUP5 PUSH2 0x2C51 JUMP JUMPDEST PUSH2 0x3D87 DUP5 PUSH2 0x2D44 JUMP JUMPDEST PUSH2 0x58B DUP5 PUSH2 0x2DBB JUMP JUMPDEST PUSH2 0x2E32 JUMP JUMPDEST PUSH2 0x10BA PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x11 SLOAD AND OR PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3E30 JUMPI POP POP SWAP5 PUSH1 0x1 DUP6 PUSH2 0x3D70 SWAP6 PUSH2 0x3D90 SWAP12 SWAP10 SWAP6 PUSH2 0x3D6B SWAP6 PUSH2 0x3D95 SWAP16 SWAP15 SWAP13 SWAP10 PUSH2 0x3D75 SWAP12 LT PUSH2 0x1236 JUMPI POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE PUSH2 0x37B3 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x3DF7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH2 0x3CFD JUMP JUMPDEST ISZERO PUSH2 0x3E85 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20726F79616C7479206665652077696C6C20657863656564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2073616C65507269636500000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH2 0x3F3C PUSH2 0x2710 DUP5 GT ISZERO PUSH2 0x3E7E JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x3F83 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3F74 DUP2 PUSH2 0x104D JUMP JUMPDEST DUP6 DUP2 MSTORE ADD MSTORE PUSH1 0xA0 SHL AND OR PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20696E76616C696420726563656976657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH1 0x11 SLOAD PUSH1 0x8 SHR AND DUP1 PUSH2 0x4020 JUMPI JUMPDEST PUSH2 0x3FF6 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xDB89E3F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x11 SLOAD PUSH1 0x8 SHR AND SWAP1 DUP2 PUSH2 0x403F JUMPI JUMPDEST POP PUSH2 0x3FF6 JUMPI JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP AND ISZERO ISZERO CODESIZE PUSH2 0x4038 JUMP JUMPDEST PUSH2 0x4068 DUP2 PUSH2 0x414E JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x40B6 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x408B JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x4081 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x5EB SWAP2 POP PUSH2 0x40C7 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO SWAP2 POP PUSH2 0x4077 JUMP JUMPDEST SWAP1 POP PUSH2 0x40C1 DUP2 PUSH2 0x40C7 JUMP JUMPDEST SWAP1 PUSH2 0x4070 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SWAP1 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x411A JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x4148 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x5EB SWAP2 POP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x419E JUMPI POP SWAP1 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xC3 DUP13 SAR 0xC1 0xC4 0xEE 0x2F BLOCKHASH EQ INVALID 0xCF XOR 0xB2 STATICCALL DUP3 RETURN 0xE8 JUMP 0x5C CALLDATALOAD DUP16 PUSH27 0x55501C9E6E8A901FD564736F6C6343000813003300000000000000 ",
							"sourceMap": "388:1700:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;;;:::i;:::-;;;;1981:58;;:43;:58;:98;;;;;388:1700;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;;;;;1981:98;2422:39:33;:54;;;-1:-1:-1;2422:54:33;:94;;;;1981:98:35;;;;;;;2422:94:33;3859:26:32;3844:41;;;-1:-1:-1;3844:41:32;:95;;;;2422:94:33;3844:149:32;;;;2422:94:33;3844:201:32;;;;;2422:94:33;3844:253:32;;;;2422:94:33;;;;;;3844:253:32;4061:36;;;;:::i;:::-;3844:253;;;:201;3997:48;;;;;:::i;:::-;3844:201;;;:149;11092:25:0;;;388:1700:35;11092:25:0;;:101;;;;;3844:149:32;11092:177:0;;;;3844:149:32;;;;;;11092:177:0;388:1700:35;11244:25:0;;;11092:177;;;:101;388:1700:35;11168:25:0;;;-1:-1:-1;11092:101:0;;3844:95:32;3904:35;3889:50;;;-1:-1:-1;3844:95:32;;388:1700:35;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;388:1700:35;;;;;;;:::i;:::-;;;;;;;;;;1036:12:39;2642:4:4;;;:::i;:::-;1036:12:39;:::i;:::-;388:1700:35;;;;;;;;;-1:-1:-1;;388:1700:35;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;4479:10:32;388:1700:35;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;4479:10:32;388:1700:35;;;;;;;;;-1:-1:-1;;;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;18736:16:0;;;:::i;:::-;18735:17;18731:73;;-1:-1:-1;388:1700:35;18822:15:0;388:1700:35;;;;;-1:-1:-1;388:1700:35;;;;;;;;;18731:73:0;18762:41;-1:-1:-1;49766:91:0;388:1700:35;-1:-1:-1;49766:91:0;388:1700:35;;-1:-1:-1;;388:1700:35;;;;;;;:::i;:::-;;;;13048:27:0;;;;:::i;:::-;388:1700:35;47819:10:0;;;41521:28;41500:198;;388:1700:35;-1:-1:-1;388:1700:35;;;41708:15:0;388:1700:35;;;;;;;;;;;;;;;-1:-1:-1;388:1700:35;41758:28:0;;;;;388:1700:35;;41500:198:0;388:1700:35;-1:-1:-1;388:1700:35;19687:18:0;388:1700:35;;;19687:35:0;47819:10;388:1700:35;-1:-1:-1;388:1700:35;;;;;;;;;;;;;19687:35:0;388:1700:35;;41500:198:0;41563:135;41640:42;-1:-1:-1;49766:91:0;;-1:-1:-1;49766:91:0;388:1700:35;;;;;-1:-1:-1;;388:1700:35;;;;;;;;7328:12:0;388:1700:35;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;388:1700:35;;;;;;;-1:-1:-1;388:1700:35;4604:6:4;388:1700:35;;;4604:22:4;388:1700:35;-1:-1:-1;388:1700:35;4604:22:4;388:1700:35;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;-1:-1:-1;388:1700:35;1823:17:16;388:1700:35;;;-1:-1:-1;388:1700:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1864:30:16;;1860:90;;388:1700:35;;2457:5:16;1985:35;388:1700:35;;1997:23:16;;388:1700:35;;;;1985:35:16;:::i;:::-;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;1860:90:16;388:1700:35;;;:::i;:::-;1860:90:16;;388:1700:35;;;;;-1:-1:-1;;388:1700:35;;;;;;;8398:50:26;388:1700:35;;:::i;:::-;;2106:18:5;-1:-1:-1;388:1700:35;;;;4604:6:4;388:1700:35;;2642:4:4;4604:22;388:1700:35;;;4604:22:4;388:1700:35;2642:4:4;:::i;:::-;388:1700:35;;;4604:6:4;388:1700:35;;;3130:29:4;388:1700:35;;;;;;;;;;;;;;;;3130:29:4;388:1700:35;;7669:23:4;7665:149;;388:1700:35;;2106:12:5;388:1700:35;;;;;;;2106:18:5;388:1700:35;;8398:50:26;;:::i;:::-;;388:1700:35;;7665:149:4;388:1700:35;;;4604:6:4;388:1700:35;;7708:29:4;388:1700:35;;;;;;;;;;;;;;;;7708:29:4;4604:22;388:1700:35;;;;;;;47819:10:0;388:1700:35;;;7763:40:4;;;;;388:1700:35;;2106:12:5;388:1700:35;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;47819:10:0;-1:-1:-1;388:1700:35;;;;;;;;;;;;3931:23:4;3927:390;;388:1700:35;;1313:24;388:1700;;;;;;;;1313:24;388:1700;-1:-1:-1;388:1700:35;;3927:390:4;3970:336;388:1700:35;4022:252:4;2497:52:21;47819:10:0;2497:52:21;:::i;:::-;388:1700:35;4214:38:4;;:::i;:::-;388:1700:35;;4022:252:4;;;388:1700:35;;4022:252:4;;388:1700:35;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;4022:252:4;-1:-1:-1;;4022:252:4;;;;;;:::i;:::-;388:1700:35;;3970:336:4;;;;;;388:1700:35;3970:336:4;;;:::i;:::-;;;;388:1700:35;;;;;-1:-1:-1;;388:1700:35;;;;;;;:::i;:::-;47819:10:0;388:1700:35;;;6133:23:4;388:1700:35;;6237:7:4;388:1700:35;;;6237:7:4;:::i;388:1700:35:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;:::i;:::-;;;2642:4:4;;;:::i;:::-;-1:-1:-1;388:1700:35;;;30774:13:0;;;30770:53;;30797:25;;:::i;:::-;17787:151;17192:331;31704:22;17192:331;;;17787:151;;;;;;17192:331;;;;;;31323:31;;388:1700:35;;;;;;;;;;31323:31:0;2943:14;388:1700:35;;;;31704:18:0;388:1700:35;;;;;;;31704:22:0;31742:32;1653:2;;388:1700:35;;;2943:14:0;;31960:13;;31956:54;;388:1700:35;;32076:30:0;32213:662;;;17787:151;;;32213:662;2943:14;;;;388:1700:35;;32213:662:0;;;;;32857:16;32234:450;;;;;;;;32213:662;;;2943:14;;;32857:16;;;;32213:662;32857:16;;;;31956:54;31983:26;:::i;30770:53::-;30797:25;:::i;388:1700:35:-;26475:39:0;388:1700:35;;;:::i;:::-;;;;;;;;:::i;:::-;;;;26475:39:0;:::i;388:1700:35:-;;;;;-1:-1:-1;;388:1700:35;;;;;2871:4:32;388:1700:35;;2871:4:32;:::i;388:1700:35:-;;;;;-1:-1:-1;;388:1700:35;;;;;;;:::i;:::-;;;:::i;:::-;2642:4:4;;;:::i;:::-;3600:88:16;2457:5;388:1700:35;;;3608:33:16;;3600:88;:::i;:::-;388:1700:35;;;3706:22:16;388:1700:35;;3800:35:16;388:1700:35;;3800:35:16;388:1700:35;;:::i;:::-;;;;;;;;3800:35:16;388:1700:35;;;3800:35:16;;388:1700:35;;3800:35:16;3771:26;388:1700:35;;;;3771:17:16;388:1700:35;;;;;;;3771:26:16;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;-1:-1:-1;;388:1700:35;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;388:1700:35;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;2642:4:4;;;:::i;:::-;388:1700:35;;;;;;;;;;1974:22:32;388:1700:35;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;388:1700:35;;;;;;-1:-1:-1;;388:1700:35;;;;;;2671:3:0;388:1700:35;;;1974:22:32;388:1700:35;;:::i;:::-;;;;-1:-1:-1;388:1700:35;;;;;1974:22:32;388:1700:35;;;;-1:-1:-1;;388:1700:35;;;;-1:-1:-1;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;1974:22:32;388:1700:35;;:::i;:::-;;;-1:-1:-1;;388:1700:35;;;;;2671:3:0;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;388:1700:35;;;;;;;13048:27:0;388:1700:35;;13048:27:0;:::i;:::-;388:1700:35;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;;498:32;388:1700;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;2642:4:4;;:::i;:::-;388:1700:35;;;;;;;;;;2264:28:32;388:1700:35;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;2671:3:0;388:1700:35;;;2264:28:32;388:1700:35;;;;;;;;-1:-1:-1;388:1700:35;;;;;;-1:-1:-1;;388:1700:35;;;;2264:28:32;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;388:1700:35;;;2264:28:32;388:1700:35;;;;;-1:-1:-1;;388:1700:35;;;;;2671:3:0;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;1480:15;388:1700;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;:::i;:::-;-1:-1:-1;388:1700:35;;4390:25:2;388:1700:35;4390:25:2;4429:13;;;;;;4425:66;;388:1700:35;;;;;;;;:::i;4425:66:2:-;4455:36;;;-1:-1:-1;4455:36:2;;;;;;4954:54;;5548:16;;;:::i;:::-;5772:22;;5768:3893;;4425:66;4444:47;;;;;388:1700:35;4444:47:2;;4425:66;;;;;;5768:3893;5905:33;;;;;;;;;;5901:71;;5768:3893;6047:402;;;;5430:17;;6047:402;;;;;;;;;;;;6636:26;;:::i;:::-;6680:25;;6972:16;6971:17;388:1700:35;6972:16:2;;;388:1700:35;;;;;;6971:17:2;;388:1700:35;6971:17:2;6967:57;;5768:3893;7042:19;;;;;7229:2273;;;5430:17;;;7229:2273;9569:78;;;;;;;;;;388:1700:35;9569:78:2;;;;5768:3893;;;;;;;7229:2273;;;;;9448:52;7692:19;;;;:::i;:::-;7770:1652;;;;6047:402;;;7770:1652;;;;;;;;;;;;7229:2273;;;;;7770:1652;;;;;;;;;;;;;;;;;;;;;;;;;;;6047:402;7770:1652;;;;;;;;;;;;;-1:-1:-1;7770:1652:2;;;7229:2273;9450:13;;;:49;;;;7229:2273;9448:52;7229:2273;9448:52;;;;9450:49;9467:32;;;;9450:49;;6967:57;388:1700:35;;;;-1:-1:-1;6967:57:2;;;5901:71;5940:32;;;5901:71;;;4954:54;4981:26;:::i;388:1700:35:-;;;;;-1:-1:-1;;388:1700:35;;;;;;;-1:-1:-1;388:1700:35;1547:12:5;388:1700:35;;;;5005:18:26;388:1700:35;;;-1:-1:-1;388:1700:35;5005:18:26;:::i;:::-;388:1700:35;;;;;;;;2671:3:0;388:1700:35;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;3130:29:4;388:1700:35;;:::i;:::-;;;-1:-1:-1;388:1700:35;3130:6:4;388:1700:35;;;-1:-1:-1;388:1700:35;;;;;;;;;;;;;3130:29:4;388:1700:35;;;;;;;;;;;;;;;;;:::i;:::-;2642:4:4;;:::i;:::-;388:1700:35;;;;;;;;;;2613:31:32;388:1700:35;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;2671:3:0;388:1700:35;;;2613:31:32;388:1700:35;;;;;;;;-1:-1:-1;388:1700:35;;;;;;-1:-1:-1;;388:1700:35;;;;2613:31:32;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;388:1700:35;;;2613:31:32;388:1700:35;;;;;-1:-1:-1;;388:1700:35;;;;;2671:3:0;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;4663:12:32;388:1700:35;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4663:12:32;388:1700:35;;;;;;;;;-1:-1:-1;;;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;388:1700:35;;;;;;;:::i;:::-;;;;;;;;;;4958:13:2;;;;4954:54;;-1:-1:-1;388:1700:35;5430:17:2;;;;5426:39;;388:1700:35;5548:16:2;;;;:::i;:::-;5662:13;;;;;5658:40;;388:1700:35;5772:22:2;5768:3893;;388:1700:35;;;;;;;;:::i;5768:3893:2:-;388:1700:35;;;;;;;;;5905:33:2;;;;5901:71;;5768:3893;6047:402;;;;;5303:38;;6047:402;;;6636:26;6047:402;;;;;;;;;;;6636:26;:::i;:::-;6680:25;-1:-1:-1;6972:16:2;6971:17;388:1700:35;6972:16:2;;;388:1700:35;;;;;6971:17:2;6967:57;;5768:3893;7042:19;-1:-1:-1;7042:19:2;;;7229:2273;;;5303:38;;;7229:2273;9569:78;;;;;;;;;;388:1700:35;9569:78:2;;;;5768:3893;;;;;;;7229:2273;;;;;-1:-1:-1;7692:19:2;;;;:::i;:::-;7770:1652;;;;6047:402;;;7770:1652;;;;;;;;;;;;7229:2273;;;;;7770:1652;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7770:1652:2;;;7229:2273;9450:13;;;:49;;;;7229:2273;9448:52;7229:2273;9448:52;;;;9450:49;9467:32;;;;9450:49;;6967:57;388:1700:35;;;;-1:-1:-1;6967:57:2;;;5901:71;5940:32;-1:-1:-1;5901:71:2;;;5658:40;-1:-1:-1;;;5658:40:2;;5426:39;5449:16;-1:-1:-1;5426:39:2;;;388:1700:35;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;:::i;:::-;;;;;;;;;;;;;47819:10:0;;-1:-1:-1;388:1700:35;19280:18:0;388:1700:35;;19280:49:0;388:1700:35;;-1:-1:-1;388:1700:35;;;;;;;;;;;;;19280:49:0;388:1700:35;;;;;;;;;;;;;;;;47819:10:0;19355:55;388:1700:35;47819:10:0;19355:55;;388:1700:35;;;-1:-1:-1;;388:1700:35;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;12048:16:0;;;:::i;:::-;12047:17;12043:68;;388:1700:35;;;;;-1:-1:-1;4296:13:32;388:1700:35;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;12173:26:0;:87;;388:1700:35;12235:18:0;388:1700:35;12235:18:0;12209:45;12235:18;;:::i;:::-;388:1700:35;;;12209:45:0;;;;;388:1700:35;;:::i;:::-;;;:::i;12173:87:0:-;388:1700:35;;;;;;:::i;:::-;12173:87:0;;388:1700:35;;;;;4296:13:32;-1:-1:-1;388:1700:35;;;-1:-1:-1;388:1700:35;;;;;;;-1:-1:-1;388:1700:35;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12043:68:0;12074:36;-1:-1:-1;49766:91:0;388:1700:35;-1:-1:-1;49766:91:0;388:1700:35;;;;;-1:-1:-1;;388:1700:35;;;;;;;-1:-1:-1;388:1700:35;1856:12:5;388:1700:35;;;;-1:-1:-1;388:1700:35;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;5486:7:4;388:1700:35;;;;:::i;:::-;;;-1:-1:-1;388:1700:35;4604:6:4;388:1700:35;;2642:4:4;4604:22;388:1700:35;-1:-1:-1;388:1700:35;4604:22:4;388:1700:35;2642:4:4;:::i;:::-;5486:7;:::i;388:1700:35:-;;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;;;3508:12:32;388:1700:35;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3508:12:32;388:1700:35;;;;;;;;;-1:-1:-1;;;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;19687:35:0;388:1700:35;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;388:1700:35;19687:18:0;388:1700:35;;;-1:-1:-1;388:1700:35;;;;;;;;;;;;;8570:239:0;388:1700:35;;8665:19:0;;8661:69;;8682:1;388:1700:35;8747:18:0;388:1700:35;;1518:13:0;388:1700:35;8682:1:0;388:1700:35;;8747:55:0;8570:239;:::o;8661:69::-;8694:35;8682:1;49766:91;;8682:1;49766:91;388:1700:35;;;;;;;:::i;:::-;-1:-1:-1;388:1700:35;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;;;:::o;14380:2173:0:-;14528:26;;388:1700:35;;;;;;;;;;14528:26:0;388:1700:35;14847:11:0;;;14843:1270;;16435:24;2276:8;16435:24;;16507:38;16431:48;16466:13;:::o;14843:1270::-;388:1700:35;;;;;;14882:24:0;;;14878:77;;-1:-1:-1;;15502:597:0;;388:1700:35;15578:28:0;;388:1700:35;;;;;;;;;;15578:28:0;388:1700:35;15654:11:0;;;15650:25;;15701:24;2276:8;15701:24;;:29;15697:48;;49766:91;;14916:38;49766:91;;;15697:48;15732:13;;;:::o;15650:25::-;-1:-1:-1;;6488:17:0;-1:-1:-1;15502:597:0;;14878:77;49766:91;;14916:38;49766:91;;;388:1700:35;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;:::o;:::-;;:::i;19978:465:0:-;;388:1700:35;20043:11:0;388:1700:35;;;20221:23:0;;20217:210;;19978:465;;:::o;20217:210::-;20264:14;;-1:-1:-1;20296:60:0;388:1700:35;;;20313:17:0;388:1700:35;;;;;;20303:42:0;;;20347:9;;388:1700:35;20347:9:0;;:::i;:::-;20296:60;;;;20303:42;2276:8;20383:24;:29;;20217:210;-1:-1:-1;;19978:465:0:o;22796:3447::-;;;;22963:27;;;:::i;:::-;388:1700:35;;;;;;;;;;23173:45:0;23169:95;;-1:-1:-1;388:1700:35;;;21929:15:0;388:1700:35;;;;;22057:132:0;;23463:69;21135:472;;;47819:10;21135:472;;;;;;;6971:17:2;;388:1700:35;23463:69:0;23459:188;;22796:3447;23604:42;;;:::i;:::-;23764:190;;22796:3447;24316:24;;;388:1700:35;;;;31704:18:0;388:1700:35;;;;;;;24316:24:0;388:1700:35;;-1:-1:-1;;388:1700:35;2943:14:0;;24384:22;;388:1700:35;;;;31704:18:0;388:1700:35;;;;;;;24384:22:0;388:1700:35;;2943:14:0;;;;17192:331;24755:73;;;;17192:331;;;;;;;24670:26;;388:1700:35;;;;;;;;;;24670:26:0;2943:14;24959:47;;:52;24955:617;;22796:3447;25749:367;;-1:-1:-1;25749:367:0;;26129:13;26125:58;;22796:3447::o;26125:58::-;26152:30;:::i;24955:617::-;23699:1;388:1700:35;;25184:30:0;;388:1700:35;;;;;;;;;;25184:30:0;388:1700:35;25184:35:0;25180:378;;24955:617;;;;25180:378;-1:-1:-1;388:1700:35;25301:239:0;;25180:378;25301:239;25465:30;;388:1700:35;;;;;;;;;;25465:30:0;2943:14;25301:239;;25180:378;;23764:190;;;;;;;23459:188;23550:44;19687:35;;47819:10;19687:25;;388:1700:35;;;;19687:18:0;388:1700:35;;;;;;;19687:25:0;388:1700:35;;;;;;;;;;;;19687:35:0;388:1700:35;;;;;23550:44:0;23546:101;23459:188;23546:101;23604:42;:::i;23169:95::-;23228:35;:::i;27102:405::-;;;;27294:7;;;;;:::i;:::-;27316:14;;27312:189;;27102:405;;;;;:::o;27312:189::-;27354:56;;;:::i;:::-;27353:57;27349:152;;27312:189;;;;;;27349:152;27438:47;27334:1;49766:91;;27334:1;49766:91;388:1700:35;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;388:1700:35;;;;:::o;:::-;;;:::o;29533:673:0:-;;;29711:88;29533:673;388:1700:35;29533:673:0;388:1700:35;;;;;;;;;;29711:88:0;;;;47819:10;29711:88;;;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29711:88:0;388:1700:35;;29711:88:0;;388:1700:35;;29711:88:0;;;29533:673;-1:-1:-1;29707:493:0;;29943:257;;:::i;:::-;388:1700:35;;29989:18:0;29985:113;;30111:79;;;29711:88;30111:79;;29985:113;30035:47;:::i;29707:493::-;388:1700:35;;29867:64:0;29860:71;:::o;29711:88::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;47933:1708;;48027:1608;;;;;;;-1:-1:-1;;48027:1608:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;48027:1608:0;;;;;;;;-1:-1:-1;;48027:1608:0;;;;;;;;47933:1708::o;49703:160::-;30797:25;49766:91;;;;;49703:160;31983:26;49766:91;;;;;49703:160;14916:38;49766:91;;;;;49703:160;23228:35;49766:91;;;;;49703:160;23604:42;49766:91;;;;;49703:160;26152:30;49766:91;;;;;49703:160;4981:26:2;49766:91:0;;;;;388:1700:35;;;;;;;;;;;;;;;;;;-1:-1:-1;388:1700:35;;;;;;;;;;;;;;;;;:::o;1070:659:2:-;-1:-1:-1;1070:659:2;;388:1700:35;;:::i;:::-;;;;1395:304:2;;1070:659;;:::o;1395:304::-;1579:51;;;;388:1700:35;;;13962:17:0;388:1700:35;;;;;;1586:33:2;;-1:-1:-1;;388:1700:35;1579:51:2;;1586:33;1659:21;1586:33;;1659:21;:::i;1070:659::-;;388:1700:35;;:::i;:::-;6048:1:0;;388:1700:35;;1399:24:2;;1395:304;;1070:659;;:::o;13522:159:0:-;388:1700:35;;:::i;:::-;;-1:-1:-1;388:1700:35;13649:17:0;388:1700:35;;;-1:-1:-1;388:1700:35;;;;:::i;:::-;;;;;;;;2671:3:0;2162;2671;388:1700:35;;16807:24:0;;2162:3;2276:8;16904:24;;:29;;388:1700:35;16885:16:0;;2162:3;2671;;16943:19;;;2162:3;13522:159;:::o;1882:1131:2:-;2141:382;;;;;;;;;;;;;;;2532:448;2539:1;;:6;;;;2760:28;2590:123;-1:-1:-1;;2590:123:2;;;;;;;;2760:28;:::i;:::-;2802:168;;;;2532:448;;2539:6;;;;;1882:1131;:::o;3460:103:4:-;47819:10:0;-1:-1:-1;388:1700:35;;;;;;;;;;;;3931:23:4;3927:390;;3460:103::o;3927:390::-;3970:336;388:1700:35;4022:252:4;2497:52:21;47819:10:0;2497:52:21;:::i;:::-;388:1700:35;4214:38:4;;:::i;3460:103::-;47819:10:0;-1:-1:-1;388:1700:35;;;;;;;;;;;;3931:23:4;3927:390;;3460:103::o;3927:390::-;3970:336;388:1700:35;4022:252:4;2497:52:21;47819:10:0;2497:52:21;:::i;:::-;388:1700:35;4214:38:4;;:::i;3460:103::-;47819:10:0;-1:-1:-1;388:1700:35;;;;;;;;;;;;3931:23:4;3927:390;;3460:103::o;3927:390::-;3970:336;388:1700:35;4022:252:4;2497:52:21;47819:10:0;2497:52:21;:::i;:::-;388:1700:35;4214:38:4;;:::i;3460:103::-;388:1700:35;-1:-1:-1;388:1700:35;3130:6:4;388:1700:35;;;3130:29:4;47819:10:0;388:1700:35;-1:-1:-1;388:1700:35;;;;;;;;;;;;;3130:29:4;388:1700:35;;3931:23:4;3927:390;;3460:103;:::o;3927:390::-;2497:52:21;47819:10:0;2497:52:21;:::i;:::-;1940:25;;:::i;:::-;1975:15;;;;;:::i;:::-;;2000;;;;:::i;:::-;;388:1700:35;2058:5:21;2007:1;2058:5;;;;3970:336:4;388:1700:35;4022:252:4;2170:10:21;388:1700:35;2170:10:21;2162:55;2170:10;;2162:55;:::i;2065:3::-;2105:11;2113:3;2105:11;;2096:21;;;;;;;388:1700:35;2065:3:21;2096:21;;2084:33;;;;:::i;:::-;;388:1700:35;2671:3:0;2065::21;;:::i;:::-;2030:26;;2096:21;;:::i;1978:166:5:-;388:1700:35;;;;-1:-1:-1;388:1700:35;;;;;;;;;;8398:50:26;;1978:166:5;388:1700:35;-1:-1:-1;498:32:35;;388:1700;;3130:29:4;388:1700:35;;7669:23:4;7665:149;;1978:166:5;388:1700:35;;2106:12:5;388:1700:35;;;;;8398:50:26;;:::i;:::-;;1978:166:5:o;7665:149:4:-;388:1700:35;;;3130:6:4;388:1700:35;;7708:29:4;388:1700:35;;;;;;;;;;;;;;;;7708:29:4;7740:4;388:1700:35;;;;;;;47819:10:0;388:1700:35;;;7763:40:4;;;;;7665:149;;1978:166:5;388:1700:35;;;;;;;;;;;;;;;;8398:50:26;;388:1700:35;;;;;7669:23:4;7665:149;;1978:166:5;388:1700:35;;;2106:12:5;388:1700:35;;;;;8398:50:26;;:::i;7665:149:4:-;388:1700:35;;;3130:6:4;388:1700:35;;7708:29:4;388:1700:35;;;;;;;;;;;;;;;;7708:29:4;7740:4;388:1700:35;;;;;;;47819:10:0;388:1700:35;;;7763:40:4;;;;;7665:149;;1978:166:5;388:1700:35;;;;-1:-1:-1;388:1700:35;;;;;;;;;;8398:50:26;;1978:166:5;388:1700:35;-1:-1:-1;546:32:32;;388:1700:35;;3130:29:4;388:1700:35;1978:166:5;388:1700:35;;;;-1:-1:-1;388:1700:35;;;;;;;;;;8398:50:26;;1978:166:5;388:1700:35;-1:-1:-1;559:31:39;;388:1700:35;;3130:29:4;388:1700:35;1978:166:5;388:1700:35;;;;-1:-1:-1;388:1700:35;;;;;;;;;;8398:50:26;;1978:166:5;388:1700:35;-1:-1:-1;480:24:33;;388:1700:35;;3130:29:4;388:1700:35;2233:171:5;;388:1700:35;;8719:53:26;2233:171:5;-1:-1:-1;388:1700:35;;;;3130:6:4;388:1700:35;;;3130:29:4;388:1700:35;;;;;;;;;;;;;;;;3130:29:4;388:1700:35;;8070:149:4;;2233:171:5;388:1700:35;;2363:12:5;388:1700:35;;;;;8719:53:26;;:::i;8070:149:4:-;388:1700:35;;;3130:6:4;388:1700:35;;8112:29:4;388:1700:35;;;;;;;;;;;;;;;;8112:29:4;388:1700:35;;;;;;47819:10:0;388:1700:35;;;8168:40:4;;;;;8070:149;;388:1700:35;;;;;;;:::i;:::-;1920:19:16;388:1700:35;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;2007:1:21;388:1700:35;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;278:18:21:-;;;;:::o;:::-;;388:1700:35;;278:18:21;;;;;;;;;;;;388:1700:35;278:18:21;388:1700:35;;;278:18:21;;1818:437;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;1975:15:21;;;;:::i;:::-;;2000;;;;:::i;:::-;;388:1700:35;2025:128:21;2058:5;2007:1;2058:5;;;;2162:55;2170:10;;;2162:55;:::i;2065:3::-;2113;2105:11;;2096:21;;;;;;;388:1700:35;2065:3:21;2096:21;;2084:33;;;;:::i;2065:3::-;2030:26;;;1818:437;498:32:35;1940:25:21;;:::i;:::-;1975:15;;;;;:::i;:::-;;2000;;;;:::i;:::-;;388:1700:35;2025:128:21;2058:5;2007:1;2058:5;;;;2162:55;2170:10;;;2162:55;:::i;2065:3::-;2113;2105:11;;2096:21;;;;;;;388:1700:35;2065:3:21;2096:21;;2084:33;;;;:::i;2065:3::-;2030:26;;;1818:437;559:31:39;1940:25:21;;:::i;:::-;1975:15;;;;;:::i;:::-;;2000;;;;:::i;:::-;;388:1700:35;2025:128:21;2058:5;2007:1;2058:5;;;;2162:55;2170:10;;;2162:55;:::i;2065:3::-;2113;2105:11;;2096:21;;;;;;;388:1700:35;2065:3:21;2096:21;;2084:33;;;;:::i;2065:3::-;2030:26;;;1818:437;480:24:33;1940:25:21;;:::i;:::-;1975:15;;;;;:::i;:::-;;2000;;;;:::i;:::-;;388:1700:35;2025:128:21;2058:5;2007:1;2058:5;;;;2162:55;2170:10;;;2162:55;:::i;2065:3::-;2113;2105:11;;2096:21;;;;;;;388:1700:35;2065:3:21;2096:21;;2084:33;;;;:::i;2065:3::-;2030:26;;;1818:437;546:32:32;1940:25:21;;:::i;:::-;1975:15;;;;;:::i;:::-;;2000;;;;:::i;:::-;;388:1700:35;2025:128:21;2058:5;2007:1;2058:5;;;;2162:55;2170:10;;;2162:55;:::i;2065:3::-;2113;2105:11;;2096:21;;;;;;;388:1700:35;2065:3:21;2096:21;;2084:33;;;;:::i;2065:3::-;2030:26;;;388:1700:35;;;;;;;;-1:-1:-1;388:1700:35;;-1:-1:-1;388:1700:35;;;-1:-1:-1;388:1700:35;:::o;:::-;;;;;;;-1:-1:-1;;388:1700:35;;;;;;2671:3:0;;388:1700:35;;;;;;;;:::o;2214:404:26:-;4351:12;;;388:1700:35;;-1:-1:-1;388:1700:35;;;;;-1:-1:-1;388:1700:35;;4351:24:26;2293:319;388:1700:35;;;;;;;;;;;;;;4351:12:26;388:1700:35;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;388:1700:35;;;;;;2671:3:0;;388:1700:35;;;;;;;;;;-1:-1:-1;388:1700:35;;;;-1:-1:-1;388:1700:35;2943:14:0;4351:12:26;2547:11;:::o;2293:319::-;2589:12;;;-1:-1:-1;2589:12:26;:::o;388:1700:35:-;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;;;:::i;:::-;;;;;;;;2671:3:0;388:1700:35;;;;;:::o;:::-;;;;;;;;;;2786:1388:26;2989:12;;;388:1700:35;;-1:-1:-1;388:1700:35;;;;;-1:-1:-1;388:1700:35;;3023:15:26;;;;3019:1149;3023:15;;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3505:26:26;;;3977:15;3505:26;4069:19;3505:26;;3501:398;;3019:1149;3977:15;;;;:::i;:::-;388:1700:35;;;;;;;;;;4069:19:26;388:1700:35;2989:12:26;4103:11;:::o;3501:398::-;3693:38;:26;3571:22;;3805:23;3571:22;;;:::i;:::-;388:1700:35;;;;;2671:3:0;3693:26:26;;;;;:::i;:::-;:38;;:::i;:::-;3805:23;388:1700:35;;;;;;;;;;3805:23:26;2943:14:0;3501:398:26;;;;;3019:1149;4145:12;;;;-1:-1:-1;4145:12:26;:::o;388:1700:35:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;388:1700:35;1974:22:32;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;388:1700:35;;;;;;;;;;;;:::o;:::-;-1:-1:-1;388:1700:35;2264:28:32;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;388:1700:35;;;;;;;;;;;;:::o;:::-;-1:-1:-1;388:1700:35;2613:31:32;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;388:1700:35;;;;;;;;;;;;:::o;:::-;-1:-1:-1;388:1700:35;2006:26:32;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;388:1700:35;;;;;;;;;;;;;;;;2006:26:32;388:1700:35;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;2671:3:0;388:1700:35;;;2006:26:32;388:1700:35;:::o;:::-;;;;-1:-1:-1;388:1700:35;;;;;;-1:-1:-1;;388:1700:35;;;;2006:26:32;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2006:26:32;388:1700:35;:::o;:::-;;;-1:-1:-1;;388:1700:35;;;;;2671:3:0;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1436:28:32;388:1700:35;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;2671:3:0;388:1700:35;;;1436:28:32;388:1700:35;:::o;:::-;;;;-1:-1:-1;388:1700:35;;;;;;-1:-1:-1;;388:1700:35;;;;2264:28:32;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1436:28:32;388:1700:35;:::o;:::-;;;-1:-1:-1;;388:1700:35;;;;;2671:3:0;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:31:32;388:1700:35;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;2671:3:0;388:1700:35;;;1474:31:32;388:1700:35;:::o;:::-;;;;-1:-1:-1;388:1700:35;;;;;;-1:-1:-1;;388:1700:35;;;;2613:31:32;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:31:32;388:1700:35;:::o;:::-;;;-1:-1:-1;;388:1700:35;;;;;2671:3:0;388:1700:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42355:3042:0;42464:27;;;:::i;:::-;388:1700:35;;;42622:35:0;;-1:-1:-1;388:1700:35;21929:15:0;388:1700:35;;;-1:-1:-1;388:1700:35;22057:132:0;;;21721:474;;42622:35;47819:10;;42790:69;21135:472;;;47819:10;21135:472;;;;;;;6971:17:2;;388:1700:35;42790:69:0;42786:192;;42355:3042;388:1700:35;42935:42:0;;;;:::i;:::-;43113:190;;42355:3042;43882:24;;;388:1700:35;;;;31704:18:0;388:1700:35;;;;;;;43882:24:0;388:1700:35;;;;2943:14:0;;44260:101;17192:331;;;;;;44173:26;;388:1700:35;;;;;;;;;;44173:26:0;2943:14;2550:8;44492:47;;:52;44488:617;;42355:3042;45130:35;;;;;45366:14;;2871:4:32;388:1700:35;2943:14:0;;;;45366;43048:1;2943:14;;44488:617;2871:4:32;388:1700:35;;44717:30:0;;388:1700:35;;;;;;;;;;44717:30:0;388:1700:35;44717:35:0;44713:378;;44488:617;;;;44713:378;388:1700:35;;44834:239:0;;44713:378;44834:239;44998:30;;388:1700:35;;;;;;;;;;44998:30:0;2943:14;44834:239;;44713:378;;43113:190;;;;;;;42786:192;42881:44;19687:35;;47819:10;19687:25;;388:1700:35;;;;19687:18:0;388:1700:35;;;;;;;42881:44:0;42877:101;42786:192;42877:101;42935:42;:::i;3015:203:32:-;388:1700:35;;3132:13:32;3144:1;3147:9;;;;;;3015:203;;;:::o;3158:3::-;388:1700:35;;;;;;;3196:4:32;388:1700:35;;;;;;;;3196:4:32;:::i;:::-;-1:-1:-1;;388:1700:35;;;;;;3132:13:32;;641:522:35;;;;;;;388:1700;;937:22;388:1700;;;937:22;388:1700;1001:5;;;:::i;:::-;388:1700;1561:12:33;388:1700:35;1547:10:33;:26;;;:42;;;641:522:35;1543:103:33;;388:1700:35;;;;;;;;;;;1368:22:32;388:1700:35;;:::i;:::-;;;;;;;;;;;;;;;;;1847:5:33;388:1700:35;;;;;;1792:19:33;388:1700:35;;;;;;;;-1:-1:-1;;388:1700:35;;;;;;2671:3:0;388:1700:35;;;1368:22:32;388:1700:35;;:::i;:::-;;:::i;:::-;;:::i;:::-;1547:5:32;;;:::i;:::-;1595;;;:::i;:::-;1642;;;:::i;1792:19:33:-;1847:5;:::i;:::-;1864:19;955:4:35;388:1700;937:22;388:1700;;;937:22;388:1700;;;1974:22:32;388:1700:35;;;;-1:-1:-1;;388:1700:35;;;;;;;;;;;;;;;955:4;388:1700;;;1792:19:33;388:1700:35;;;;;1847:5:33;388:1700:35;;;;;;;;;;;;;;;1368:22:32;388:1700:35;;:::i;:::-;;955:4;388:1700;;;;;;;;;;;;;;;;;;1543:103:33;1612:23;388:1700:35;;1612:23:33;;;;1547:42;388:1700:35;;937:22;388:1700;;1547:42:33;;388:1700:35;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2730:327:16;388:1700:35;;;;2832:33:16;2824:88;2457:5;2832:33;;;2824:88;:::i;:::-;388:1700:35;2930:22:16;;;388:1700:35;;;;3015:35:16;388:1700:35;;;;;:::i;:::-;;;;3015:35:16;388:1700:35;;;;;2993:57:16;388:1700:35;2730:327:16:o;388:1700:35:-;;;;;;;;;;;;;;;;;;;;;;;1508:367;388:1700;1710:15;388:1700;;;;1710:37;;;1508:367;1706:92;;1508:367::o;1706:92::-;1770:17;388:1700;;1770:17;;;;1710:37;;388:1700;1710:37;;1508:367;388:1700;1710:15;388:1700;;;;1710:37;;;;1508:367;1706:92;;;1508:367::o;1710:37::-;388:1700;;;;1729:18;;1710:37;;;1839:397:39;2026:38;;;:::i;:::-;:96;;;;;1839:397;2026:163;;;;1839:397;2026:203;;;;2019:210;1839:397;:::o;2026:203::-;2193:36;;;;:::i;2026:163::-;388:1700:35;;;2138:51:39;;-1:-1:-1;2026:163:39;;:96;2068:54;;;;;:::i;:::-;2026:96;;;634:212:5;388:1700:35;;;742:57:5;757:42;742:57;;:97;;;;;735:104;;634:212;:::o;742:97::-;2855:32:4;2840:47;;-1:-1:-1;2840:87:4;;;;742:97:5;634:212;:::o;2840:87:4:-;2891:36;;;1408:213:16;388:1700:35;;1548:26:16;1533:41;;:81;;;;;1526:88;1408:213;:::o;1533:81::-;952:25:22;937:40;;;1408:213:16;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotCompatibleWithSpotMints\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialMintExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SequentialUpToTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SpotMintTokenIdTooSmall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TokenAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransfersLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"batchBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"ownership\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransferLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenBaseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenContractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyFeeNumerator\",\"type\":\"uint96\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenContractURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"setNameAndSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setTokenRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"setTransferLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"batchBurn(uint256[])\":{\"params\":{\"tokenIds\":\"Array of token ids to burn\"}},\"burn(uint256)\":{\"params\":{\"tokenId\":\"Id of token to burn\"}},\"contractURI()\":{\"returns\":{\"_0\":\"Contract URI of token's URI\"}},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"getTransferLocked()\":{\"returns\":{\"_0\":\"Whether or not transfers are locked.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,string,string,string,string,address,uint96)\":{\"details\":\"This should be called immediately after deployment.\",\"params\":{\"owner\":\"The owner of the contract\",\"royaltyFeeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"royaltyReceiver\":\"Address of who should be sent the royalty payment\",\"tokenBaseURI\":\"Base URI of the token\",\"tokenContractURI\":\"Contract URI of the token\",\"tokenName\":\"Name of the token\",\"tokenSymbol\":\"Symbol of the token\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"mint(address,uint256)\":{\"params\":{\"amount\":\"Amount of tokens to mint.\",\"to\":\"Address to mint tokens to.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setBaseMetadataURI(string)\":{\"params\":{\"tokenBaseURI\":\"New base URI of token's URI\"}},\"setContractURI(string)\":{\"params\":{\"tokenContractURI\":\"New contract URI of token's URI\"}},\"setDefaultRoyalty(address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\"}},\"setNameAndSymbol(string,string)\":{\"params\":{\"tokenName\":\"Name of token.\",\"tokenSymbol\":\"Symbol of token.\"}},\"setTokenRoyalty(uint256,address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\",\"tokenId\":\"The token id to set the royalty information for\"}},\"setTransferLocked(bool)\":{\"params\":{\"locked\":\"Whether or not transfers are locked.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface id\"},\"returns\":{\"_0\":\"True if supported\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidInitialization()\":[{\"notice\":\"Invalid initialization error.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"NotCompatibleWithSpotMints()\":[{\"notice\":\"The feature is not compatible with spot mints.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"SequentialMintExceedsLimit()\":[{\"notice\":\"The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`.\"}],\"SequentialUpToTooSmall()\":[{\"notice\":\"`_sequentialUpTo()` must be greater than `_startTokenId()`.\"}],\"SpotMintTokenIdTooSmall()\":[{\"notice\":\"Spot minting requires a `tokenId` greater than `_sequentialUpTo()`.\"}],\"TokenAlreadyExists()\":[{\"notice\":\"Cannot mint over a token that already exists.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"TransfersLocked()\":[{\"notice\":\"Transfers locked.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"batchBurn(uint256[])\":{\"notice\":\"Allows the owner of the tokens to burn their tokens.\"},\"burn(uint256)\":{\"notice\":\"Allows the owner of the token to burn their token.\"},\"contractURI()\":{\"notice\":\"Get the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata\"},\"getTransferLocked()\":{\"notice\":\"Gets the transfer lock.\"},\"initialize(address,string,string,string,string,address,uint96)\":{\"notice\":\"Initialize contract.\"},\"mint(address,uint256)\":{\"notice\":\"Mint tokens.\"},\"name()\":{\"notice\":\"Override the ERC721A name function.\"},\"setBaseMetadataURI(string)\":{\"notice\":\"Update the base URI of token's URI.\"},\"setContractURI(string)\":{\"notice\":\"Update the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata\"},\"setDefaultRoyalty(address,uint96)\":{\"notice\":\"Sets the royalty information that all ids in this contract will default to.\"},\"setNameAndSymbol(string,string)\":{\"notice\":\"Set name and symbol of token.\"},\"setTokenRoyalty(uint256,address,uint96)\":{\"notice\":\"Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id\"},\"setTransferLocked(bool)\":{\"notice\":\"Sets the transfer lock.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check interface support.\"},\"symbol()\":{\"notice\":\"Override the ERC721A symbol function.\"}},\"notice\":\"An implementation of ERC-721 that prevents transfers.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/soulbound/ERC721Soulbound.sol\":\"ERC721Soulbound\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/chiru-labs/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"lib/chiru-labs/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]},\"lib/chiru-labs/erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xfa5590db00a9bf0f85d2c10f2c901d5a3d49ecb1e64e5b6afe9a771496a41698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42616f12c7956e0ccefb690bf2a503986710c54544a36898b1ecc5d226373c4d\",\"dweb:/ipfs/QmU6vn637MDzUjsGih3fnWYf5CjcMknQUDXQwYjLNPX8ig\"]},\"lib/chiru-labs/erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x56fa15ba9a351f0be2728ff2569c8ce6bc187cbf2c027fece17442a682f49079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e424f0290d7ba66e451b3d8e490f5bac0bf0105b2af467513b2ffecb7065a9\",\"dweb:/ipfs/QmbCvzT7vep5gyBNqkHrD46pxZVUHHzaCZUpgwgWkBw78Y\"]},\"lib/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"lib/openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/tokens/ERC721/ERC721BaseToken.sol\":{\"keccak256\":\"0xa58147a7928fa565edf8b84c20295042d392e8533f08909b9d0491cd21737c36\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9a675234058bd9e6f7155bbd12c2a624413a352fd3417b5fc851ca4dcf3fcfb\",\"dweb:/ipfs/QmWECr1hVYjob6vGctmVTR5dWYD58gxfG2btPfc833L4bM\"]},\"src/tokens/ERC721/presets/items/ERC721Items.sol\":{\"keccak256\":\"0x24a0da0a0eaf5a9c1af2af9accc0e43aa550ff86464fdd982dded108004e2b71\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a683ac382619a8dfa52ae675c24f3d359195bc99b5c792afbcb5823bef224a8b\",\"dweb:/ipfs/QmP6XD6CB2JU4gV7hgAfeehJ6FZX2cV4gdDPrDBdYkDS8s\"]},\"src/tokens/ERC721/presets/items/IERC721Items.sol\":{\"keccak256\":\"0xbc61c6e0addf7265274c8562c150e33e821aeb76324e2e43d17ca83df33f53f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0c7cfb1eaf71ee3bc3427c825ad7f392222584b834f3a13812b03099edff03d0\",\"dweb:/ipfs/QmSywRxqjNpesz6hsTJu555DJARVaPx3mG8Y3nxPCw3Jc3\"]},\"src/tokens/ERC721/presets/soulbound/ERC721Soulbound.sol\":{\"keccak256\":\"0x90272996e89de2eb871d42f0cb13702f98047f077d0e9cfe659beb673c2d4139\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://43a3d7908909f466bee2ca8d248bd2d4da8e5f4331c262630cf155f285e459c7\",\"dweb:/ipfs/QmQdwTWdC6TG7WJ1WLoVDvWNWKiPDxVPAPub1MmJcfPg61\"]},\"src/tokens/ERC721/presets/soulbound/IERC721Soulbound.sol\":{\"keccak256\":\"0xd041a7ec9e9ddb1e5529a0ab930014d6d8b9394093d16f86e1280d910ebd14f5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://79caaadcb7815fa7045aacf460295f55c0f5913e80fa6ba6a657d74dea11e4ba\",\"dweb:/ipfs/Qmd4rPsymuwJ8KAMF5uscJGWUdewXNKuHWWw94av9gy19y\"]},\"src/tokens/common/ERC2981Controlled.sol\":{\"keccak256\":\"0x4ed96fc921b717206c4d0b3ca82e46a852ff7873f93fe1db44593ae55b6ea41a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://136802a1cb1615af11f766782fcb01144f9bf8c124b86e1f66e876bb3be326c7\",\"dweb:/ipfs/QmYQJ1Em4XBaLe6xChrgB2TLJW1V2nbRJp1JMCTDuEjr62\"]},\"src/tokens/common/IERC2981Controlled.sol\":{\"keccak256\":\"0x27ed5643239353cebed9cc45d42d086a8e270f9f647fa6cd3a9315515319fa5a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://634b240b478d0a2d7d22ebe8f2850b6f3547ab4c5675bc17ac10c3e978730f67\",\"dweb:/ipfs/QmYH6fimhwEv7ZTER1MHdiWFcu4cKkskdSbgFawJqTmP85\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidInitialization()": [
								{
									"notice": "Invalid initialization error."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"NotCompatibleWithSpotMints()": [
								{
									"notice": "The feature is not compatible with spot mints."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"SequentialMintExceedsLimit()": [
								{
									"notice": "The `tokenId` of a sequential mint exceeds `_sequentialUpTo()`."
								}
							],
							"SequentialUpToTooSmall()": [
								{
									"notice": "`_sequentialUpTo()` must be greater than `_startTokenId()`."
								}
							],
							"SpotMintTokenIdTooSmall()": [
								{
									"notice": "Spot minting requires a `tokenId` greater than `_sequentialUpTo()`."
								}
							],
							"TokenAlreadyExists()": [
								{
									"notice": "Cannot mint over a token that already exists."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"TransfersLocked()": [
								{
									"notice": "Transfers locked."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {
							"batchBurn(uint256[])": {
								"notice": "Allows the owner of the tokens to burn their tokens."
							},
							"burn(uint256)": {
								"notice": "Allows the owner of the token to burn their token."
							},
							"contractURI()": {
								"notice": "Get the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata"
							},
							"getTransferLocked()": {
								"notice": "Gets the transfer lock."
							},
							"initialize(address,string,string,string,string,address,uint96)": {
								"notice": "Initialize contract."
							},
							"mint(address,uint256)": {
								"notice": "Mint tokens."
							},
							"name()": {
								"notice": "Override the ERC721A name function."
							},
							"setBaseMetadataURI(string)": {
								"notice": "Update the base URI of token's URI."
							},
							"setContractURI(string)": {
								"notice": "Update the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata"
							},
							"setDefaultRoyalty(address,uint96)": {
								"notice": "Sets the royalty information that all ids in this contract will default to."
							},
							"setNameAndSymbol(string,string)": {
								"notice": "Set name and symbol of token."
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"notice": "Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id"
							},
							"setTransferLocked(bool)": {
								"notice": "Sets the transfer lock."
							},
							"supportsInterface(bytes4)": {
								"notice": "Check interface support."
							},
							"symbol()": {
								"notice": "Override the ERC721A symbol function."
							}
						},
						"notice": "An implementation of ERC-721 that prevents transfers.",
						"version": 1
					}
				}
			},
			"src/tokens/ERC721/presets/soulbound/ERC721SoulboundFactory.sol": {
				"ERC721SoulboundFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "ERC721SoulboundDeployed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beacon",
							"outputs": [
								{
									"internalType": "contract UpgradeableBeacon",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "contractURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "royaltyReceiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "royaltyFeeNumerator",
									"type": "uint96"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "contractURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "royaltyReceiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "royaltyFeeNumerator",
									"type": "uint96"
								}
							],
							"name": "determineAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "upgradeBeacon",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ERC721SoulboundDeployed(address)": {
								"params": {
									"proxyAddr": "The address of the deployed proxy."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"factoryOwner": "The owner of the ERC-721 Soulbound Factory"
								}
							},
							"deploy(address,address,string,string,string,string,address,uint96)": {
								"params": {
									"baseURI": "The base URI of the ERC-721 Soulbound proxy",
									"contractURI": "The contract URI of the ERC-721 Soulbound proxy",
									"name": "The name of the ERC-721 Soulbound proxy",
									"proxyOwner": "The owner of the ERC-721 Soulbound proxy",
									"royaltyFeeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"royaltyReceiver": "Address of who should be sent the royalty payment",
									"symbol": "The symbol of the ERC-721 Soulbound proxy",
									"tokenOwner": "The owner of the ERC-721 Soulbound implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-721 Soulbound Proxy"
								}
							},
							"determineAddress(address,address,string,string,string,string,address,uint96)": {
								"params": {
									"baseURI": "The base URI of the ERC-721 Soulbound proxy",
									"contractURI": "The contract URI of the ERC-721 Soulbound proxy",
									"name": "The name of the ERC-721 Soulbound proxy",
									"proxyOwner": "The owner of the ERC-721 Soulbound proxy",
									"royaltyFeeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"royaltyReceiver": "Address of who should be sent the royalty payment",
									"symbol": "The symbol of the ERC-721 Soulbound proxy",
									"tokenOwner": "The owner of the ERC-721 Soulbound implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-721 Soulbound Proxy"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeBeacon(address)": {
								"params": {
									"implementation": "The new beacon implementation."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"fun_transferOwnership": {
									"entryPoint": 298,
									"id": 3368,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x125 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x1F PUSH3 0x6A4C CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 DUP5 GT DUP4 DUP6 LT OR PUSH2 0x10F JUMPI DUP2 PUSH1 0x20 SWAP3 DUP5 SWAP3 PUSH1 0x40 SWAP7 DUP8 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x125 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x125 JUMPI PUSH2 0x60 CALLER PUSH2 0x12A JUMP JUMPDEST DUP3 MLOAD SWAP4 PUSH2 0x4563 SWAP5 DUP6 DUP2 ADD SWAP6 DUP2 DUP8 LT DUP4 DUP9 GT OR PUSH2 0x10F JUMPI PUSH3 0x24E9 DUP3 CODECOPY DUP1 PUSH1 0x0 SWAP7 SUB SWAP1 DUP7 CREATE SWAP1 DUP2 ISZERO PUSH2 0x105 JUMPI DUP5 MLOAD SWAP2 PUSH2 0x5EE DUP1 DUP5 ADD SWAP3 DUP4 GT DUP5 DUP5 LT OR PUSH2 0xF1 JUMPI SWAP2 DUP5 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH3 0x1EFB DUP6 CODECOPY AND DUP2 MSTORE SUB ADD SWAP1 DUP6 CREATE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH2 0xD6 SWAP4 SWAP5 POP AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH2 0x12A JUMP JUMPDEST MLOAD PUSH2 0x1D89 SWAP1 DUP2 PUSH3 0x172 DUP3 CODECOPY RETURN JUMPDEST POP POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BCE4583 EQ PUSH2 0x6BB JUMPI DUP1 PUSH4 0x25A570B8 EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x59659E90 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x64EFEE88 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A3 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A0 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A0 JUMPI PUSH2 0xA1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0xA9 PUSH2 0x9A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A0 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A0 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A0 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A0 JUMPI PUSH2 0x22B PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A0 JUMPI PUSH2 0x347 PUSH1 0x55 PUSH1 0xB PUSH2 0x2C7 PUSH2 0x2AA CALLDATASIZE PUSH2 0x8BB JUMP JUMPDEST SWAP2 PUSH1 0x40 SWAP13 SWAP8 SWAP12 SWAP7 SWAP6 SWAP13 SWAP9 SWAP4 SWAP9 MLOAD SWAP9 DUP10 SWAP6 PUSH1 0x20 SWAP15 DUP16 DUP9 ADD SWAP9 DUP10 PUSH2 0xA8C JUMP JUMPDEST SUB SWAP4 PUSH2 0x2F9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP6 DUP7 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x805 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x30A DUP5 PUSH2 0x7E9 JUMP JUMPDEST DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 PUSH2 0x33B DUP9 PUSH1 0x1 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP13 DUP6 ADD SWAP9 DUP10 PUSH2 0xB12 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x805 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x11EB PUSH1 0x40 MLOAD PUSH2 0x35C DUP8 DUP4 ADD DUP3 PUSH2 0x805 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 DUP2 ADD SWAP2 PUSH2 0xB69 DUP4 CODECOPY MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 ADD MSTORE DUP6 DUP3 ADD MSTORE ADDRESS DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A0 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A0 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A0 JUMPI PUSH2 0x43E PUSH2 0x412 PUSH2 0x3F2 CALLDATASIZE PUSH2 0x8BB JUMP JUMPDEST SWAP3 SWAP4 DUP3 SWAP10 DUP7 DUP3 SWAP11 DUP7 DUP6 DUP12 SWAP11 SWAP12 SWAP7 SWAP8 DUP11 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 PUSH1 0x20 DUP9 ADD SWAP11 DUP12 PUSH2 0xA8C JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x805 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP8 PUSH1 0x40 MLOAD PUSH2 0x44E DUP2 PUSH2 0x7E9 JUMP JUMPDEST DUP11 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP10 DUP11 PUSH1 0x1 SLOAD AND PUSH2 0x485 DUP11 PUSH2 0x412 DUP6 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP8 DUP9 PUSH2 0xB12 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x11EB SWAP1 PUSH1 0x40 MLOAD PUSH2 0x49C PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0x805 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 PUSH2 0xB69 DUP5 CODECOPY DUP1 MLOAD ISZERO PUSH2 0x65D JUMPI MLOAD DUP13 SWAP3 DUP15 CREATE2 AND SWAP10 DUP11 ISZERO PUSH2 0x5FF JUMPI DUP12 SWAP9 DUP2 PUSH1 0x1 SLOAD AND SWAP1 DUP13 EXTCODESIZE ISZERO PUSH2 0x5FB JUMPI DUP11 SWAP3 DUP4 DUP15 SWAP3 PUSH2 0x51D PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 DUP7 MSTORE AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0xA49 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5F0 JUMPI DUP9 SWAP2 PUSH2 0x5DC JUMPI JUMPDEST POP POP DUP9 EXTCODESIZE ISZERO PUSH2 0x5D8 JUMPI PUSH2 0x570 SWAP4 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP8 PUSH32 0x98DD69C800000000000000000000000000000000000000000000000000000000 DUP10 MSTORE PUSH1 0x4 DUP10 ADD PUSH2 0xA8C JUMP JUMPDEST SUB DUP2 DUP4 DUP7 GAS CALL DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH2 0x5B5 JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH32 0x47E27C5AB10C568FD18FF716738C5DD5257732E878DD2CA116C5B4AF900D9E3D DUP3 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x5BF DUP4 SWAP2 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x5C9 JUMPI DUP2 PUSH2 0x581 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH2 0x5E5 SWAP1 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x5D8 JUMPI DUP7 CODESIZE PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A204661696C6564206F6E206465706C6F7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A0 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A0 JUMPI PUSH2 0x6F3 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x6FB PUSH2 0x9A7 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x1 SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x77A JUMPI PUSH1 0x24 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x76F JUMPI PUSH2 0x763 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x76C SWAP1 PUSH2 0x7A6 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x7A1 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7BA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7BA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7BA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x7A1 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x7BA JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x899 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0x805 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x7A1 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP3 ADD SLT PUSH2 0x7A1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH1 0x4 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x7A1 JUMPI SWAP3 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x7A1 JUMPI SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x7A1 JUMPI DUP3 PUSH2 0x937 SWAP2 PUSH1 0x4 ADD PUSH2 0x846 JUMP JUMPDEST SWAP4 PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x7A1 JUMPI DUP4 PUSH2 0x94F SWAP2 PUSH1 0x4 ADD PUSH2 0x846 JUMP JUMPDEST SWAP4 PUSH1 0x84 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x7A1 JUMPI DUP5 PUSH2 0x967 SWAP2 PUSH1 0x4 ADD PUSH2 0x846 JUMP JUMPDEST SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x7A1 JUMPI PUSH2 0x97E SWAP2 PUSH1 0x4 ADD PUSH2 0x846 JUMP JUMPDEST SWAP2 PUSH1 0xC4 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x7A1 JUMPI SWAP1 PUSH1 0xE4 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x7A1 JUMPI SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x9C8 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xA39 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA29 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0xA85 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0xA26 JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP8 SWAP7 SWAP3 SWAP5 PUSH2 0xAF7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 PUSH2 0xAE9 PUSH1 0xC0 SWAP9 PUSH2 0xADB PUSH2 0xB05 SWAP7 SWAP8 PUSH1 0xE0 PUSH1 0x20 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP13 AND DUP2 MSTORE ADD MSTORE PUSH1 0xE0 DUP14 ADD SWAP1 PUSH2 0xA49 JUMP JUMPDEST SWAP1 DUP12 DUP3 SUB PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0xA49 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0xA49 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0xA49 JUMP JUMPDEST SWAP7 AND PUSH1 0xA0 DUP6 ADD MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x48 SWAP5 SWAP4 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP1 SWAP3 PUSH1 0x60 SHL AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH2 0xB63 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP7 DUP6 ADD SWAP2 ADD PUSH2 0xA26 JUMP JUMPDEST ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x11CF SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT STOP COINBASE PUSH9 0xBA82273E43EEB6C019 DUP10 CALLDATASIZE RETURNDATASIZE 0xB8 PUSH5 0xF4E92BC6BC 0xC9 0xF 0xAD REVERT 0xB4 0xA6 0xC9 0xD DUP6 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 PUSH27 0x7FC95409381C3F8E890CD4A9645C01CBD77EF2525ED0F7A2056EAB PUSH22 0xE3364736F6C6343000813003360803461011A57601F PUSH2 0x5EE CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x11F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x11A JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP3 SUB PUSH2 0x11A JUMPI PUSH1 0x0 SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP3 CALLER DUP5 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 EXTCODESIZE ISZERO PUSH2 0xB2 JUMPI POP PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP1 DUP2 PUSH2 0x136 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x188 JUMPI PUSH2 0xAD PUSH2 0x403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x104 JUMPI DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH2 0x217 PUSH2 0x403 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x188 JUMPI PUSH2 0x328 PUSH2 0x403 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x37F JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x424 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT TIMESTAMP 0xD7 0xDA 0x4F 0xF6 MLOAD 0xB8 PUSH12 0xCEB8A63D98CFF68DD07C4751 CHAINID 0x28 SAR 0xEA LOG4 DUP1 COINBASE CALLDATALOAD PUSH17 0xEA7564736F6C6343000813003360A06040 MSTORE CALLVALUE PUSH3 0x146 JUMPI PUSH3 0x14 PUSH3 0x161 JUMP JUMPDEST PUSH3 0x1E PUSH3 0x161 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x140 JUMPI PUSH3 0x47 DUP2 PUSH3 0x41 PUSH1 0x2 SLOAD PUSH3 0x185 JUMP JUMPDEST PUSH3 0x1C2 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0xAF JUMPI POP DUP2 SWAP1 PUSH3 0x82 SWAP5 PUSH1 0x0 SWAP3 PUSH3 0xA3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x2 SSTORE PUSH3 0x274 JUMP JUMPDEST PUSH1 0x0 DUP1 SSTORE CALLER PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x41FB SWAP1 DUP2 PUSH3 0x368 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x3CD3 ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x67 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP2 SWAP4 PUSH1 0x1F NOT DUP6 AND PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH3 0x127 JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH3 0x82 SWAP8 SWAP5 LT PUSH3 0x10D JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0x274 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0xFE JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH3 0xE1 JUMP JUMPDEST PUSH3 0x14B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x140 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH3 0x1B7 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH3 0x1A1 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH3 0x195 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x1CF JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x210 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x204 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1F7 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x1EE JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH3 0x228 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x3 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH3 0x269 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x25D JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x250 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH3 0x247 JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x140 JUMPI PUSH3 0x2A0 DUP2 PUSH3 0x29A PUSH1 0x3 SLOAD PUSH3 0x185 JUMP JUMPDEST PUSH3 0x21B JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH3 0x2DF JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH3 0x2D3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x2BC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH1 0x1F NOT DUP4 AND SWAP5 SWAP1 SWAP2 SWAP1 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH3 0x34E JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH3 0x334 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x329 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH3 0x313 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x297 JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x279 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x26F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x35E60BD4 EQ PUSH2 0x265 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x260 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x5944C753 EQ PUSH2 0x24C JUMPI DUP1 PUSH4 0x5A446215 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x5BBB2177 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x68A37AE8 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x7E518EC8 EQ PUSH2 0x22E JUMPI DUP1 PUSH4 0x842F9B68 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x98DD69C8 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x99A2557A EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0xC23DC68F EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1ED JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1E8 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0xDC8E92EA EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x1D9 JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2057 JUMP JUMPDEST PUSH2 0x1FB0 JUMP JUMPDEST PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x1EEA JUMP JUMPDEST PUSH2 0x1EBE JUMP JUMPDEST PUSH2 0x1D52 JUMP JUMPDEST PUSH2 0x1CE0 JUMP JUMPDEST PUSH2 0x1C85 JUMP JUMPDEST PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x1B9A JUMP JUMPDEST PUSH2 0x1A0A JUMP JUMPDEST PUSH2 0x196C JUMP JUMPDEST PUSH2 0x18C5 JUMP JUMPDEST PUSH2 0x17C6 JUMP JUMPDEST PUSH2 0x1766 JUMP JUMPDEST PUSH2 0x1713 JUMP JUMPDEST PUSH2 0x1587 JUMP JUMPDEST PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x1427 JUMP JUMPDEST PUSH2 0x13D1 JUMP JUMPDEST PUSH2 0x1396 JUMP JUMPDEST PUSH2 0x135A JUMP JUMPDEST PUSH2 0x12F4 JUMP JUMPDEST PUSH2 0x112A JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST PUSH2 0xE9C JUMP JUMPDEST PUSH2 0xE79 JUMP JUMPDEST PUSH2 0xD61 JUMP JUMPDEST PUSH2 0xC9B JUMP JUMPDEST PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x9FD JUMP JUMPDEST PUSH2 0x92C JUMP JUMPDEST PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x8EB JUMP JUMPDEST PUSH2 0x886 JUMP JUMPDEST PUSH2 0x767 JUMP JUMPDEST PUSH2 0x6ED JUMP JUMPDEST PUSH2 0x5EE JUMP JUMPDEST PUSH2 0x54E JUMP JUMPDEST PUSH2 0x2CB JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x34E PUSH1 0x4 CALLDATALOAD PUSH2 0x2EB DUP2 PUSH2 0x29C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SWAP1 DUP2 PUSH32 0xB1C990BC00000000000000000000000000000000000000000000000000000000 EQ SWAP2 DUP3 ISZERO PUSH2 0x352 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP3 POP SWAP1 DUP3 ISZERO PUSH2 0x388 JUMPI JUMPDEST POP POP CODESIZE DUP1 PUSH2 0x33A JUMP JUMPDEST PUSH32 0xC21B8F2800000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP3 POP SWAP1 DUP3 ISZERO PUSH2 0x485 JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x3F4 JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x3E3 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3D3 JUMPI JUMPDEST POP CODESIZE DUP1 PUSH2 0x37F JUMP JUMPDEST PUSH2 0x3DD SWAP2 POP PUSH2 0x405F JUMP JUMPDEST CODESIZE PUSH2 0x3CB JUMP JUMPDEST SWAP1 POP PUSH2 0x3EE DUP2 PUSH2 0x405F JUMP JUMPDEST SWAP1 PUSH2 0x3C4 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x45B JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x431 JUMPI JUMPDEST POP SWAP1 CODESIZE PUSH2 0x3BC JUMP JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x429 JUMP JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x422 JUMP JUMPDEST PUSH32 0x8446A79E00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP3 POP PUSH2 0x3B5 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x2C6 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x567 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x2C6 JUMPI PUSH2 0x590 SWAP2 PUSH2 0x58B PUSH2 0x2957 JUMP JUMPDEST PUSH2 0x3F09 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x5A5 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x595 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x5D3 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x592 JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x5EB SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x5B5 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xE SLOAD PUSH2 0x611 DUP2 PUSH2 0x359C JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x6A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x647 JUMPI JUMPDEST PUSH2 0x34E DUP6 PUSH2 0x63B DUP2 DUP8 SUB DUP3 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x5DA JUMP JUMPDEST SWAP3 POP PUSH1 0xE DUP4 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD JUMPDEST DUP3 DUP5 LT PUSH2 0x68A JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x63B DUP3 PUSH2 0x34E PUSH2 0x62B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x66F JUMP JUMPDEST DUP7 SWAP6 POP PUSH2 0x34E SWAP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x63B SWAP5 SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 SWAP4 PUSH2 0x62B JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x70A DUP2 PUSH2 0x228C JUMP JUMPDEST ISZERO PUSH2 0x73D JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x77B PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x79D DUP4 PUSH2 0x2152 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x81D JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x856 CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x7A7 JUMPI PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x2C6 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x2C6 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x2C6 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x590 PUSH2 0x8F7 CALLDATASIZE PUSH2 0x8A9 JUMP JUMPDEST SWAP2 PUSH2 0x22ED JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x95A DUP3 PUSH2 0x104D JUMP JUMPDEST SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO PUSH2 0x9EF JUMPI JUMPDEST PUSH2 0x9C6 PUSH2 0x2710 PUSH2 0x9AA PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x2FD0 JUMP JUMPDEST DIV SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE RETURN JUMPDEST POP PUSH2 0x9F8 PUSH2 0x2F9D JUMP JUMPDEST PUSH2 0x986 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xAA5 PUSH2 0xA1C PUSH2 0x4D2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA9D PUSH1 0x0 SWAP5 DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0xA4F PUSH1 0x1 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD PUSH2 0x2A56 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0xA86 DUP6 PUSH1 0x40 DUP10 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0xAA9 JUMPI PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 AND SWAP1 PUSH2 0x3418 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0xADE DUP5 PUSH1 0x40 DUP9 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP10 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x2C6 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6937E6B1CDE141AAD05C7D03126A39EB070A9F0F221C44303558FA7A951A7435 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xBCC JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH2 0xFF00 PUSH1 0x11 SLOAD SWAP3 PUSH1 0x8 SHL AND SWAP2 AND OR PUSH1 0x11 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 PUSH2 0xBDD CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xBE8 PUSH2 0x316E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0xC28 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x592 JUMP JUMPDEST DUP5 ADD PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x37 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x213B JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x108A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x5DA JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0xCB4 PUSH2 0x4D2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0xCDD JUMPI PUSH2 0x590 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2EA9 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0xD7A PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xD86 PUSH2 0x29AC JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SLOAD SWAP2 DUP2 ISZERO PUSH2 0xE74 JUMPI PUSH2 0xD9A PUSH2 0x3FE1 JUMP JUMPDEST PUSH1 0x1 SWAP2 PUSH2 0xE00 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 DUP5 DUP4 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP5 OR PUSH2 0xDD9 DUP8 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH9 0x10000000000000001 DUP3 MUL DUP2 SLOAD ADD SWAP1 SSTORE DUP2 ISZERO PUSH2 0xE6F JUMPI DUP4 ADD SWAP3 SWAP2 DUP1 DUP1 JUMPDEST PUSH2 0xE2A JUMPI JUMPDEST DUP6 DUP6 DUP2 SSTORE DUP1 RETURN JUMPDEST ISZERO PUSH2 0xE5E JUMPI JUMPDEST DUP5 DUP2 DUP5 DUP5 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP2 DUP1 LOG4 PUSH2 0xE1E JUMP JUMPDEST DUP1 SWAP3 ADD SWAP2 DUP4 DUP4 SUB PUSH2 0xE30 JUMPI DUP1 PUSH2 0xE23 JUMP JUMPDEST PUSH2 0x2710 JUMP JUMPDEST PUSH2 0x26E6 JUMP JUMPDEST PUSH2 0x590 PUSH2 0xE85 CALLDATASIZE PUSH2 0x8A9 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xE93 DUP5 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x2505 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x590 PUSH1 0x4 CALLDATALOAD PUSH2 0x3A64 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0xED1 PUSH2 0x4D2 JUMP JUMPDEST PUSH2 0xED9 PUSH2 0x518 JUMP JUMPDEST SWAP1 PUSH2 0xEE2 PUSH2 0x2957 JUMP JUMPDEST PUSH2 0xEFE PUSH2 0x2710 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND GT ISZERO PUSH2 0x3E7E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0xFC0 JUMPI PUSH2 0xF5D PUSH2 0x590 SWAP3 PUSH2 0xF48 PUSH2 0xF2C PUSH2 0x10AD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND DUP5 MSTORE JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xF73 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH1 0xA0 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20496E76616C696420706172616D65746572730000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x101E JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x10BA DUP3 PUSH2 0x104D JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0x10E4 DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 PUSH2 0x10F2 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x108A JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x2C6 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x2C6 JUMPI DUP2 PUSH1 0x20 PUSH2 0x5EB SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0x10D8 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x115C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x1175 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST SWAP1 PUSH2 0x117E PUSH2 0x2A01 JUMP JUMPDEST DUP3 MLOAD SWAP1 DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x119B DUP2 PUSH2 0x1196 PUSH1 0xE SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH2 0x35EF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x11DC JUMPI POP DUP2 SWAP1 PUSH2 0x590 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x11D1 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE PUSH2 0x37B3 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x11B8 JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE SWAP2 SWAP4 PUSH1 0x1F NOT DUP6 AND PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x124F JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH2 0x590 SWAP8 SWAP5 LT PUSH2 0x1236 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE PUSH2 0x37B3 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1228 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x128E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH1 0x80 DUP3 PUSH2 0x12E8 PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x1280 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C6 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2C6 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x2C6 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x2C6 JUMPI PUSH2 0x34E SWAP2 PUSH1 0x24 PUSH2 0x134E SWAP3 ADD PUSH2 0x2917 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1267 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x138D PUSH1 0x4 CALLDATALOAD PUSH2 0x2152 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH2 0x13F4 PUSH2 0x13EF PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x2C6 JUMPI PUSH2 0x5EB SWAP2 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH2 0x1435 CALLDATASIZE PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x143D PUSH2 0x2A01 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x1462 DUP2 PUSH2 0x145D PUSH1 0xD SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH2 0x3660 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x149F JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x1494 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x147B JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x14D2 PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x150E JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x14F5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x14EA JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x14D7 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x11 SLOAD PUSH1 0x8 SHR AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1573 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1565 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x15A0 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH1 0x60 DUP1 SWAP3 DUP1 ISZERO SWAP3 DUP4 ISZERO PUSH2 0x15C1 JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x34E DUP8 DUP3 PUSH2 0x154C JUMP JUMPDEST SWAP5 SWAP2 SWAP4 POP DUP4 SWAP3 SWAP1 SWAP2 DUP6 SWAP2 PUSH2 0x170E JUMPI PUSH2 0x15D8 DUP2 PUSH2 0x20C7 JUMP JUMPDEST SWAP6 DUP7 PUSH2 0x15F2 JUMPI JUMPDEST POP POP POP POP POP PUSH2 0x34E SWAP2 POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x15B3 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP6 DUP5 GT ISZERO PUSH2 0x1705 JUMPI JUMPDEST PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 PUSH1 0x1 SWAP4 DUP5 DUP10 ADD PUSH1 0x5 SHL DUP9 ADD SWAP9 DUP10 DUP8 MSTORE PUSH2 0x161E PUSH2 0x2842 JUMP JUMPDEST SWAP1 DUP5 SWAP2 PUSH2 0x1634 PUSH2 0x1630 DUP11 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x16E6 JUMPI JUMPDEST POP DUP5 SWAP6 SWAP2 SWAP6 SWAP9 DUP8 DUP1 JUMPDEST PUSH2 0x1662 JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x34E SWAP3 POP DUP2 MSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x15DF JUMP JUMPDEST ISZERO PUSH2 0x16C8 JUMPI JUMPDEST DUP6 SWAP7 PUSH2 0x1673 DUP5 PUSH2 0x2899 JUMP JUMPDEST DUP1 DUP12 ADD MLOAD ISZERO PUSH2 0x1690 JUMPI POP POP DUP8 DUP7 SWAP4 JUMPDEST ADD SWAP7 DUP9 DUP14 DUP12 MSTORE SWAP8 SWAP4 SWAP8 PUSH2 0x1642 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 MLOAD DUP1 PUSH2 0x16C0 JUMPI JUMPDEST POP DUP5 DUP5 XOR DUP7 SHL ISZERO PUSH2 0x16AD JUMPI JUMPDEST DUP9 SWAP1 PUSH2 0x1682 JUMP JUMPDEST SWAP10 DUP9 ADD PUSH1 0x5 DUP2 SWAP1 SHL DUP13 ADD DUP12 SWAP1 MSTORE SWAP10 PUSH2 0x16A6 JUMP JUMPDEST SWAP4 POP CODESIZE PUSH2 0x169A JUMP JUMPDEST DUP1 DUP4 EQ DUP1 ISZERO PUSH2 0x16DD JUMPI JUMPDEST ISZERO PUSH2 0x1668 JUMPI DUP1 PUSH2 0x1647 JUMP JUMPDEST POP DUP2 DUP11 EQ PUSH2 0x16D2 JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP CODESIZE PUSH2 0x1639 JUMP JUMPDEST SWAP5 POP DUP3 SWAP5 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x27E2 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1756 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x33E2 JUMP JUMPDEST SWAP2 SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x17BA PUSH2 0x1786 PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH2 0x17D4 CALLDATASIZE PUSH2 0x13FC JUMP JUMPDEST PUSH2 0x17DC PUSH2 0x2A01 JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x1801 DUP2 PUSH2 0x17FC PUSH1 0x10 SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH2 0x36D1 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x183E JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x1833 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x181A JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x1871 PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x18AD JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x1894 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1889 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1876 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xF SLOAD PUSH2 0x18E8 DUP2 PUSH2 0x359C JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x6A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1911 JUMPI PUSH2 0x34E DUP6 PUSH2 0x63B DUP2 DUP8 SUB DUP3 PUSH2 0x108A JUMP JUMPDEST SWAP3 POP PUSH1 0xF DUP4 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 JUMPDEST DUP3 DUP5 LT PUSH2 0x1954 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x63B DUP3 PUSH2 0x34E PUSH2 0x62B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1939 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x1985 PUSH2 0x4AF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x19A7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x19BF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x2C6 JUMPI PUSH2 0x19D7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x2C6 JUMPI PUSH2 0x19F2 PUSH2 0x590 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x110F JUMP JUMPDEST SWAP2 PUSH2 0x19FB PUSH2 0x4F5 JUMP JUMPDEST SWAP4 PUSH2 0x1A04 PUSH2 0x533 JUMP JUMPDEST SWAP6 PUSH2 0x3C81 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x60 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x1A24 PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 SWAP1 PUSH1 0x44 CALLDATALOAD DUP4 DUP4 DUP3 DUP1 DUP4 LT ISZERO PUSH2 0x170E JUMPI PUSH1 0x0 SLOAD DUP1 SWAP2 LT ISZERO PUSH2 0x1B92 JUMPI JUMPDEST POP PUSH2 0x1A4D DUP5 PUSH2 0x20C7 JUMP JUMPDEST SWAP2 DUP4 DUP8 LT ISZERO PUSH2 0x1B89 JUMPI JUMPDEST DUP3 PUSH2 0x1A6B JUMPI JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x34E DUP9 DUP3 PUSH2 0x154C JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 POP DUP6 DUP5 SUB DUP4 DUP2 GT ISZERO PUSH2 0x1B81 JUMPI JUMPDEST POP PUSH1 0x40 SWAP3 DUP4 MLOAD SWAP6 PUSH1 0x1 SWAP4 PUSH1 0x5 SWAP2 PUSH2 0x1A9D DUP7 DUP6 ADD DUP5 SHL DUP11 ADD SWAP11 DUP12 DUP10 MSTORE PUSH2 0x2881 JUMP JUMPDEST SWAP4 PUSH1 0x0 SWAP5 PUSH2 0x1AB0 PUSH2 0x1630 DUP11 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x1B62 JUMPI JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 SWAP6 SWAP9 DUP8 DUP1 JUMPDEST PUSH2 0x1ADF JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP POP PUSH2 0x34E SWAP3 POP DUP2 MSTORE CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x1A5D JUMP JUMPDEST ISZERO PUSH2 0x1B44 JUMPI JUMPDEST PUSH1 0x0 SWAP7 PUSH2 0x1AF1 DUP8 PUSH2 0x2899 JUMP JUMPDEST DUP1 DUP12 ADD MLOAD ISZERO PUSH2 0x1B0E JUMPI POP POP DUP8 DUP8 SWAP7 JUMPDEST ADD SWAP7 DUP9 DUP14 DUP12 MSTORE SWAP8 SWAP7 SWAP8 PUSH2 0x1ABF JUMP JUMPDEST SWAP7 SWAP1 SWAP7 MLOAD DUP1 PUSH2 0x1B3C JUMPI JUMPDEST POP DUP4 DUP8 XOR DUP6 SHL ISZERO PUSH2 0x1B2B JUMPI JUMPDEST DUP9 SWAP1 PUSH2 0x1B00 JUMP JUMPDEST SWAP10 DUP9 ADD DUP1 DUP7 SHL DUP13 ADD DUP12 SWAP1 MSTORE SWAP10 PUSH2 0x1B24 JUMP JUMPDEST SWAP7 POP CODESIZE PUSH2 0x1B18 JUMP JUMPDEST DUP1 DUP7 EQ DUP1 ISZERO PUSH2 0x1B59 JUMPI JUMPDEST ISZERO PUSH2 0x1AE5 JUMPI DUP1 PUSH2 0x1AC4 JUMP JUMPDEST POP DUP2 DUP11 EQ PUSH2 0x1B4E JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP5 POP CODESIZE PUSH2 0x1AB5 JUMP JUMPDEST SWAP3 POP CODESIZE PUSH2 0x1A7D JUMP JUMPDEST PUSH1 0x0 SWAP3 POP PUSH2 0x1A57 JUMP JUMPDEST SWAP3 POP CODESIZE PUSH2 0x1A43 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x1BCF PUSH2 0x4AF JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x2C6 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x1C2A DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x1C99 PUSH2 0x4AF JUMP JUMPDEST PUSH2 0x1CA1 PUSH2 0x4D2 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x2C6 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x2C6 JUMPI PUSH2 0x1CD6 PUSH2 0x590 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0x10D8 JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x2505 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x80 PUSH2 0x1CFE PUSH1 0x4 CALLDATALOAD PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x1D50 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1D70 DUP2 PUSH2 0x228C JUMP JUMPDEST ISZERO PUSH2 0x1E94 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 PUSH1 0x0 PUSH1 0xD SLOAD PUSH2 0x1D89 DUP2 PUSH2 0x359C JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1E54 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1DF5 JUMPI JUMPDEST POP POP PUSH2 0x1DB1 SWAP3 POP SUB DUP4 PUSH2 0x108A JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x1DE2 JUMPI PUSH2 0x34E SWAP3 PUSH2 0xC57 PUSH2 0x1DCB PUSH2 0x63B SWAP4 PUSH2 0x269D JUMP JUMPDEST PUSH2 0x1DDC PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 ADD SWAP1 PUSH2 0x213B JUMP JUMPDEST SWAP1 PUSH2 0x213B JUMP JUMPDEST POP POP POP PUSH2 0x34E PUSH2 0x1DF0 PUSH2 0x2128 JUMP JUMPDEST PUSH2 0x63B JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1E3C JUMPI POP DUP8 SWAP5 POP POP DUP3 ADD ADD PUSH2 0x1DB1 CODESIZE PUSH2 0x1DA3 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1E24 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DB1 SWAP6 SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 SWAP3 CODESIZE PUSH2 0x1DA3 JUMP JUMPDEST PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH2 0x590 PUSH1 0x4 CALLDATALOAD PUSH2 0x1F09 PUSH2 0x4D2 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x1F24 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x2A56 JUMP JUMPDEST PUSH2 0x2EA9 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2C6 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x2C6 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x1069 JUMPI DUP2 PUSH1 0x5 SHL PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1F79 DUP6 DUP4 ADD DUP6 PUSH2 0x108A JUMP JUMPDEST DUP4 MSTORE PUSH1 0x24 DUP5 DUP5 ADD SWAP2 DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x2C6 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1FA1 JUMPI PUSH2 0x590 DUP5 PUSH2 0x3C43 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1F91 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x6EA JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x10 SLOAD PUSH2 0x1FD3 DUP2 PUSH2 0x359C JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x6A2 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1FFC JUMPI PUSH2 0x34E DUP6 PUSH2 0x63B DUP2 DUP8 SUB DUP3 PUSH2 0x108A JUMP JUMPDEST SWAP3 POP PUSH1 0x10 DUP4 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 JUMPDEST DUP3 DUP5 LT PUSH2 0x203F JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x63B DUP3 PUSH2 0x34E PUSH2 0x62B JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x2024 JUMP JUMPDEST CALLVALUE PUSH2 0x2C6 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2C6 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x17BA PUSH2 0x2077 PUSH2 0x4AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x2094 PUSH2 0x4D2 JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x20FE JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2135 DUP3 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP1 PUSH2 0x214E PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x592 JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH2 0x2166 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0x2196 JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH2 0x273A JUMPI SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SWAP1 DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x2223 JUMPI PUSH1 0x0 NOT SWAP1 JUMPDEST ADD PUSH2 0x21BE DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD SWAP1 DUP2 ISZERO PUSH2 0x2219 JUMPI POP PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0x2214 JUMPI PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT SWAP2 POP PUSH2 0x21A9 JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 ISZERO PUSH2 0x2287 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH2 0x224B JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0x229E JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD DUP1 PUSH2 0x22C7 JUMPI POP PUSH2 0x22C0 PUSH1 0x40 SWAP2 PUSH2 0x227A JUMP JUMPDEST SWAP1 POP PUSH2 0x22A2 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH2 0x22F9 DUP3 PUSH2 0x2152 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP4 DUP5 DUP3 DUP5 AND SUB PUSH2 0x2500 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x2352 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP4 EQ OR ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2496 JUMPI JUMPDEST PUSH2 0x2360 DUP8 PUSH2 0x4028 JUMP JUMPDEST PUSH2 0x248C JUMPI JUMPDEST POP PUSH2 0x2390 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH2 0x23C2 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE AND SWAP3 DUP4 SWAP2 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0x2407 DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0x2442 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 ISZERO PUSH2 0x243D JUMPI JUMP JUMPDEST PUSH2 0x27B8 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x245A DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x2467 JUMPI JUMPDEST POP PUSH2 0x2410 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x2461 JUMPI PUSH2 0x2484 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x2461 JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x2365 JUMP JUMPDEST PUSH2 0x24F6 PUSH2 0x1630 PUSH2 0x24EF CALLER PUSH2 0x24CA DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2357 JUMPI PUSH2 0x278E JUMP JUMPDEST PUSH2 0x2764 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x2513 DUP3 DUP3 DUP7 PUSH2 0x22ED JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x2520 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2529 SWAP4 PUSH2 0x25A6 JUMP JUMPDEST ISZERO PUSH2 0x2537 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x251A JUMP JUMPDEST PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x2C6 JUMPI MLOAD PUSH2 0x5EB DUP2 PUSH2 0x29C JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x25A1 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2587 DUP3 PUSH2 0x10BC JUMP JUMPDEST SWAP2 PUSH2 0x2595 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x108A JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 SWAP2 PUSH2 0x2618 SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP6 DUP2 SWAP5 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP11 DUP12 DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP6 AND PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x5B5 JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x266D JUMPI JUMPDEST POP PUSH2 0x2647 JUMPI PUSH2 0x2633 PUSH2 0x2576 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2642 JUMPI DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0x2537 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x268F SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2696 JUMPI JUMPDEST PUSH2 0x2687 DUP2 DUP4 PUSH2 0x108A JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2561 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2626 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x267D JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x0 NOT PUSH1 0x80 DUP3 ADD SWAP4 PUSH1 0x0 DUP6 MSTORE SWAP4 JUMPDEST ADD SWAP3 PUSH1 0xA SWAP1 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x26D4 JUMPI PUSH1 0x0 NOT SWAP1 PUSH2 0x26B6 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP4 PUSH1 0x1F NOT SWAP3 SUB ADD SWAP3 ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x32C1995A00000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 PUSH2 0x284E PUSH2 0x280C JUMP JUMPDEST SWAP3 DUP1 SLOAD PUSH2 0x2859 JUMPI POP POP JUMP JUMPDEST SWAP2 SWAP3 POP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD PUSH2 0x2877 JUMPI PUSH1 0x0 NOT ADD PUSH2 0x285D JUMP JUMPDEST PUSH2 0x5EB SWAP2 POP PUSH2 0x2899 JUMP JUMPDEST SWAP1 PUSH2 0x288A PUSH2 0x280C JUMP JUMPDEST SWAP2 PUSH1 0x0 DUP1 SLOAD DUP3 LT PUSH2 0x2859 JUMPI POP POP JUMP JUMPDEST PUSH2 0x28A1 PUSH2 0x280C JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x28B8 PUSH2 0x280C JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP3 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0x20 DUP4 ADD MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xE8 SHR PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP1 DUP4 MSTORE PUSH1 0x5 SHL PUSH1 0x20 DUP2 DUP5 ADD ADD PUSH1 0x40 MSTORE JUMPDEST DUP1 DUP2 DUP1 ISZERO PUSH2 0x2950 JUMPI PUSH2 0x2947 SWAP1 PUSH1 0x1F NOT DUP1 SWAP2 ADD SWAP4 DUP6 ADD ADD CALLDATALOAD PUSH2 0x2881 JUMP JUMPDEST SWAP1 DUP5 ADD MSTORE PUSH2 0x292B JUMP JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x142AE0BD48B54FB380E908BF20FD1F4EA4F2B9A2663CA7698D91EF391575C621 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2990 JUMPI JUMP JUMPDEST PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 PUSH2 0x29A1 CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xBE8 PUSH2 0x320B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF70E363B3D7895AF770C4A138460777D52EEBD3CB9962CCC6B58721F6127BBC8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x29E5 JUMPI JUMP JUMPDEST PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 PUSH2 0x29F6 CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xBE8 PUSH2 0x32A8 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEA6919AD9E84AA527AA2DFFB6AC6F0A6AF0387A080D10167ACDDF2A249A612DD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2A3A JUMPI JUMP JUMPDEST PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 PUSH2 0x2A4B CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0xC57 PUSH2 0xBE8 PUSH2 0x3345 JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x2A8F CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x2A99 JUMPI POP JUMP JUMPDEST PUSH2 0x2AA2 CALLER PUSH2 0x30D1 JUMP JUMPDEST PUSH2 0x2AAA PUSH2 0x2FE3 JUMP JUMPDEST SWAP2 PUSH1 0x30 PUSH2 0x2AB6 DUP5 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x2AC2 DUP5 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x2AE5 JUMPI PUSH2 0xC97 PUSH1 0x48 PUSH2 0xC65 DUP6 PUSH2 0xC57 DUP9 PUSH2 0xBE8 DUP9 ISZERO PUSH2 0x306C JUMP JUMPDEST SWAP1 PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x2B2E SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP8 PUSH2 0x305B JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP2 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x2AC6 JUMP JUMPDEST PUSH2 0x300F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6937E6B1CDE141AAD05C7D03126A39EB070A9F0F221C44303558FA7A951A7435 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0x2BC6 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x3418 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2BFA DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP6 DUP1 LOG4 PUSH2 0x2BB3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xDF7DE25B7F1FD6D0B5205F0E18F1F35BD7B8D84CCE336588D184533CE43A6F76 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x2CB9 JUMPI JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x3418 JUMP JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2CED DUP5 DUP4 DUP4 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH2 0x2CA8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xEA6919AD9E84AA527AA2DFFB6AC6F0A6AF0387A080D10167ACDDF2A249A612DD PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x142AE0BD48B54FB380E908BF20FD1F4EA4F2B9A2663CA7698D91EF391575C621 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2BAB JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xF70E363B3D7895AF770C4A138460777D52EEBD3CB9962CCC6B58721F6127BBC8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x2BC3 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x2BAB JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH2 0x2BC3 SWAP4 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x2EFE DUP7 DUP6 DUP6 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x2F15 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x34E7 JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH2 0x2F49 DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP1 LOG4 PUSH2 0x2F05 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2FAA DUP3 PUSH2 0x104D JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x2287 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE PUSH1 0x42 DUP3 MSTORE PUSH1 0x60 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x2B33 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x2B33 JUMPI PUSH1 0x21 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2B33 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3073 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1069 JUMPI PUSH1 0x40 MSTORE PUSH1 0x2A DUP3 MSTORE PUSH1 0x40 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x30 PUSH2 0x3106 DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x3112 DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x29 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x312A JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x3168 SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x3117 JUMP JUMPDEST PUSH32 0x915327D54F2C758AD33C35B031B5E89868657EA971CDA2B8103C502DC672509C PUSH2 0x3197 PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x31A3 DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x31AF DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x31C7 JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x3205 SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x31B4 JUMP JUMPDEST PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 PUSH2 0x3234 PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x3240 DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x324C DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x3264 JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x32A2 SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x3251 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x32D1 PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x32DD DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x32E9 DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x3301 JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x333F SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x32EE JUMP JUMPDEST PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 PUSH2 0x336E PUSH2 0x2FE3 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x337A DUP4 PUSH2 0x303E JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x3386 DUP4 PUSH2 0x304B JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x339E JUMPI PUSH2 0x5EB SWAP2 POP ISZERO PUSH2 0x306C JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x33DC SWAP3 BYTE PUSH2 0x2B24 DUP5 DUP7 PUSH2 0x305B JUMP JUMPDEST SWAP1 PUSH2 0x338B JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2B33 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x3414 SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x3486 JUMPI DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x1069 JUMPI PUSH2 0x3471 PUSH2 0x345A DUP3 PUSH1 0x1 DUP8 SWAP5 ADD DUP6 SSTORE DUP5 PUSH2 0x33E2 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x34B8 JUMPI PUSH1 0x0 NOT DUP1 SWAP3 ADD SWAP2 PUSH2 0x34A8 DUP4 DUP4 PUSH2 0x33E2 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SWAP2 DUP1 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP4 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x3593 JUMPI PUSH1 0x0 NOT SWAP3 DUP4 DUP6 ADD SWAP1 DUP6 DUP3 GT PUSH2 0x2287 JUMPI DUP1 SLOAD SWAP5 DUP6 ADD SWAP5 DUP6 GT PUSH2 0x2287 JUMPI PUSH1 0x0 SWAP6 DUP6 DUP4 PUSH2 0x353B SWAP5 PUSH2 0x354A SWAP9 SUB PUSH2 0x3550 JUMPI JUMPDEST POP POP POP PUSH2 0x348E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x357A PUSH2 0x3574 SWAP2 PUSH2 0x3564 PUSH2 0x358A SWAP5 DUP8 PUSH2 0x33E2 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP2 DUP8 PUSH2 0x33E2 JUMP JUMPDEST SWAP1 PUSH2 0x33FA JUMP JUMPDEST DUP6 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3533 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x35E5 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x35B6 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x35AB JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x35FB JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xE DUP3 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3656 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x364B JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x363F JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3636 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x366C JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x36C7 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x36BC JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x36B0 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x36A7 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x36DD JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0x10 DUP3 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3738 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x372D JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3721 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3718 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x374E JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x37A9 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x379E JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3792 JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3789 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x37D9 DUP2 PUSH2 0x37D4 PUSH1 0xF SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH2 0x3742 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3814 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x3809 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x37F3 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x3847 PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3884 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x386B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3860 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x384C JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x38BD DUP2 PUSH2 0x145D PUSH1 0xD SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x38F8 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x38ED JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x38D7 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x392B PUSH1 0xD PUSH1 0x0 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3968 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x394F JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3944 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x3930 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1069 JUMPI PUSH2 0x39A1 DUP2 PUSH2 0x17FC PUSH1 0x10 SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x39DC JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x39D1 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x39BB JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x3A0F PUSH1 0x10 PUSH1 0x0 MSTORE PUSH32 0x1B6847DC741A1B0CD08D278845F9D819D87B734759AFB55FE2DE5CB82A9AE672 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3A4C JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x3A33 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x10 SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3A28 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x3A14 JUMP JUMPDEST PUSH2 0x3A6D DUP2 PUSH2 0x2152 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3A9B DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x3AC3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP7 EQ OR ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x3C05 JUMPI JUMPDEST PUSH1 0x0 SWAP4 PUSH2 0x3AD4 DUP5 PUSH2 0x4028 JUMP JUMPDEST PUSH2 0x3BFC JUMPI JUMPDEST POP PUSH2 0x3B04 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD ADD SWAP1 SSTORE PUSH29 0x300000000000000000000000000000000000000000000000000000000 TIMESTAMP PUSH1 0xA0 SHL DUP4 OR OR PUSH2 0x3B53 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0x3BB3 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP3 DUP1 LOG4 PUSH2 0x10BA PUSH2 0x3BAE PUSH1 0x1 SLOAD PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x3BCB DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x3BD8 JUMPI JUMPDEST POP PUSH2 0x3B7A JUMP JUMPDEST DUP4 SLOAD DUP2 EQ PUSH2 0x3BD2 JUMPI PUSH2 0x3BF4 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x3BD2 JUMP JUMPDEST DUP4 SWAP1 SSTORE CODESIZE PUSH2 0x3AD9 JUMP JUMPDEST PUSH2 0x3C39 PUSH2 0x1630 PUSH2 0x24EF CALLER PUSH2 0x24CA DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3AC8 JUMPI PUSH2 0x278E JUMP JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x3C55 JUMPI POP POP POP JUMP JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2B33 JUMPI PUSH2 0x3C70 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD MLOAD PUSH2 0x3A64 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x2287 JUMPI PUSH1 0x1 ADD PUSH2 0x3C49 JUMP JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF PUSH1 0x11 SLOAD AND OR PUSH1 0x11 SSTORE PUSH2 0x3CBC DUP8 PUSH2 0x2B38 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x3E72 JUMPI JUMPDEST PUSH2 0x3E48 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1069 JUMPI PUSH2 0x3D22 DUP3 PUSH2 0x1196 PUSH1 0xE SLOAD PUSH2 0x359C JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x3DC5 JUMPI POP SWAP4 PUSH2 0x3D6B PUSH2 0x3D75 SWAP5 DUP5 PUSH2 0x3D95 SWAP12 SWAP11 SWAP9 SWAP6 PUSH2 0x3D70 SWAP6 PUSH2 0x3D90 SWAP12 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x11D1 JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE PUSH2 0x37B3 JUMP JUMPDEST PUSH2 0x389C JUMP JUMPDEST PUSH2 0x3980 JUMP JUMPDEST PUSH2 0x3D7E DUP5 PUSH2 0x2C51 JUMP JUMPDEST PUSH2 0x3D87 DUP5 PUSH2 0x2D44 JUMP JUMPDEST PUSH2 0x58B DUP5 PUSH2 0x2DBB JUMP JUMPDEST PUSH2 0x2E32 JUMP JUMPDEST PUSH2 0x10BA PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x11 SLOAD AND OR PUSH1 0x11 SSTORE JUMP JUMPDEST PUSH1 0xE PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3E30 JUMPI POP POP SWAP5 PUSH1 0x1 DUP6 PUSH2 0x3D70 SWAP6 PUSH2 0x3D90 SWAP12 SWAP10 SWAP6 PUSH2 0x3D6B SWAP6 PUSH2 0x3D95 SWAP16 SWAP15 SWAP13 SWAP10 PUSH2 0x3D75 SWAP12 LT PUSH2 0x1236 JUMPI POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE PUSH2 0x37B3 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x3DF7 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x11 SLOAD AND PUSH2 0x3CFD JUMP JUMPDEST ISZERO PUSH2 0x3E85 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20726F79616C7479206665652077696C6C20657863656564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2073616C65507269636500000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH2 0x3F3C PUSH2 0x2710 DUP5 GT ISZERO PUSH2 0x3E7E JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x3F83 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3F74 DUP2 PUSH2 0x104D JUMP JUMPDEST DUP6 DUP2 MSTORE ADD MSTORE PUSH1 0xA0 SHL AND OR PUSH1 0x9 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20696E76616C696420726563656976657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0xFF PUSH1 0x11 SLOAD PUSH1 0x8 SHR AND DUP1 PUSH2 0x4020 JUMPI JUMPDEST PUSH2 0x3FF6 JUMPI JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xDB89E3F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0x0 PUSH2 0x3FF0 JUMP JUMPDEST PUSH1 0xFF PUSH1 0x11 SLOAD PUSH1 0x8 SHR AND SWAP1 DUP2 PUSH2 0x403F JUMPI JUMPDEST POP PUSH2 0x3FF6 JUMPI JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 POP AND ISZERO ISZERO CODESIZE PUSH2 0x4038 JUMP JUMPDEST PUSH2 0x4068 DUP2 PUSH2 0x414E JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x40B6 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x408B JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x4081 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x5EB SWAP2 POP PUSH2 0x40C7 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO SWAP2 POP PUSH2 0x4077 JUMP JUMPDEST SWAP1 POP PUSH2 0x40C1 DUP2 PUSH2 0x40C7 JUMP JUMPDEST SWAP1 PUSH2 0x4070 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SWAP1 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x411A JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x4148 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x5EB SWAP2 POP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x419E JUMPI POP SWAP1 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 0xC3 DUP13 SAR 0xC1 0xC4 0xEE 0x2F BLOCKHASH EQ INVALID 0xCF XOR 0xB2 STATICCALL DUP3 RETURN 0xE8 JUMP 0x5C CALLDATALOAD DUP16 PUSH27 0x55501C9E6E8A901FD564736F6C6343000813003300000000000000 ",
							"sourceMap": "501:1784:36:-:0;;;;-1:-1:-1;;;;;501:1784:36;;;;;;;;;;-1:-1:-1;;501:1784:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;501:1784:36;;;;;;;955:12:8;719:10:18;955:12:8;:::i;:::-;501:1784:36;;786:21;;;;;;;;;;;;;;;;;;;-1:-1:-1;;786:21:36;;;;;;;;;;501:1784;;;1022:37:27;;;;;;;;;;;;;;;;;501:1784:36;1022:37:27;;;;501:1784:36;;;1022:37:27;;;;;;;;;1096:12;501:1784:36;;;;;;;;;;;;;;;;1096:12:27;:::i;:::-;501:1784:36;;;;;;;;1022:37:27;501:1784:36;;;;;;;;;;;;1022:37:27;-1:-1:-1;;;501:1784:36;;;;;;;;786:21;501:1784;;;;;;;;;786:21;501:1784;;;-1:-1:-1;501:1784:36;;;;;-1:-1:-1;501:1784:36;;-1:-1:-1;501:1784:36;;2426:187:8;2518:6;501:1784:36;;-1:-1:-1;;;;;501:1784:36;;;-1:-1:-1;;;;;;501:1784:36;;;;;;;;;2566:40:8;;2518:6;2566:40;2426:187::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_addresst_stringt_stringt_stringt_stringt_addresst_uint96": {
									"entryPoint": 2235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 8
								},
								"abi_decode_string": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_string_string_string_string_address_uint96": {
									"entryPoint": 2700,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_packed_bytes32_address_address_bytes": {
									"entryPoint": 2834,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2598,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_4713": {
									"entryPoint": 1958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_6571": {
									"entryPoint": 2025,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 2471,
									"id": 3311,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436101561001257600080fd5b6000803560e01c80631bce4583146106bb57806325a570b8146103dd57806359659e901461038b57806364efee8814610291578063715018a6146101f45780638da5cb5b146101a35763f2fde38b1461006a57600080fd5b346101a05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a0576100a161077e565b6100a96109a7565b73ffffffffffffffffffffffffffffffffffffffff80911690811561011c57600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b80fd5b50346101a057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b50346101a057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a05761022b6109a7565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50346101a0576103476055600b6102c76102aa366108bb565b9160409c979b96959c9893985198899560209e8f88019889610a8c565b03936102f97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095868101835282610805565b519020926040519261030a846107e9565b835273ffffffffffffffffffffffffffffffffffffffff9661033b8860015416946040519586938c85019889610b12565b03908101835282610805565b5190206111eb60405161035c87830182610805565b81815286810191610b69833951902090604051916040830152858201523081520160ff81532060405191168152f35b50346101a057807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a057602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b50346101a05761043e6104126103f2366108bb565b9293829986829a86858b9a9b96978a604051978896602088019a8b610a8c565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610805565b5190209760405161044e816107e9565b8a815273ffffffffffffffffffffffffffffffffffffffff998a600154166104858a61041285604051948593602085019788610b12565b5190206111eb9060405161049c6020840182610805565b8281526020810192610b69843980511561065d57518c928ef516998a156105ff578b988160015416908c3b156105fb578a92838e9261051d604051978896879586947fcf7a1d770000000000000000000000000000000000000000000000000000000086521660048501526024840152606060448401526064830190610a49565b03925af19081156105f05788916105dc575b5050883b156105d8576105709360405198899788977f98dd69c800000000000000000000000000000000000000000000000000000000895260048901610a8c565b038183865af180156105cd576105b5575b6020827f47e27c5ab10c568fd18ff716738c5dd5257732e878dd2ca116c5b4af900d9e3d82604051838152a1604051908152f35b6105bf83916107a6565b6105c95781610581565b5080fd5b6040513d85823e3d90fd5b8680fd5b6105e5906107a6565b6105d857863861052f565b6040513d8a823e3d90fd5b8a80fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fd5b50346101a05760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a0576106f361077e565b6106fb6109a7565b8173ffffffffffffffffffffffffffffffffffffffff806001541692833b1561077a576024908360405195869485937f3659cfe60000000000000000000000000000000000000000000000000000000085521660048401525af1801561076f57610763575080f35b61076c906107a6565b80f35b6040513d84823e3d90fd5b8280fd5b6004359073ffffffffffffffffffffffffffffffffffffffff821682036107a157565b600080fd5b67ffffffffffffffff81116107ba57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176107ba57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176107ba57604052565b81601f820112156107a15780359067ffffffffffffffff82116107ba576040519261089960207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185610805565b828452602083830101116107a157816000926020809301838601378301015290565b6101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201126107a15773ffffffffffffffffffffffffffffffffffffffff9160043583811681036107a1579260243581811681036107a1579267ffffffffffffffff916044358381116107a1578261093791600401610846565b936064358481116107a1578361094f91600401610846565b936084358181116107a1578461096791600401610846565b9360a4359182116107a15761097e91600401610846565b9160c43590811681036107a1579060e4356bffffffffffffffffffffffff811681036107a15790565b73ffffffffffffffffffffffffffffffffffffffff6000541633036109c857565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60005b838110610a395750506000910152565b8181015183820152602001610a29565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093610a8581518092818752878088019101610a26565b0116010190565b9597969294610af76bffffffffffffffffffffffff95610ae960c098610adb610b05969760e060208e73ffffffffffffffffffffffffffffffffffffffff809c168152015260e08d0190610a49565b908b820360408d0152610a49565b9089820360608b0152610a49565b908782036080890152610a49565b961660a085015216910152565b9190926048949383527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809260601b16602084015260601b166034820152610b638251809360208685019101610a26565b01019056fe60808060405234610016576111cf908161001c8239f35b600080fdfe604060808152366103825773ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000917fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000843516146100c057600484517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b6100c8611192565b60049136831161037e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037e578235916101088361067f565b602435926101158461067f565b60443567ffffffffffffffff811161037a57610135839136908801610789565b941692156103525761014791166107e3565b803b156102cf578451907f5c60da1b000000000000000000000000000000000000000000000000000000009384835260209687848381865afa9384156102a657889461019d9189916102b2575b503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790555194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab575b610242575b8361023c6107d0565b80519101f35b8592839182525afa9182156102a65761026a9392610277575b506102646109b1565b91610a21565b5038808083818080610233565b610298919250843d861161029f575b610290818361070e565b810190610902565b903861025b565b503d610286565b61091a565b508661022e565b6102c99150863d881161029f57610290818361070e565b38610194565b60848360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b8487517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b8380fd5b73ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000907fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000833516146104395760046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b610441611192565b60049236841161067b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067b5783356104808161067f565b6024359161048d8361067f565b60443567ffffffffffffffff8111610677576104ad829136908901610789565b9316931561064e576104bf91166107e3565b813b156105ca576040517f5c60da1b000000000000000000000000000000000000000000000000000000009283825260209586838281855afa9283156102a65787936105149188916105b357503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617905560405194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab57610242578361023c6107d0565b6102c99150853d871161029f57610290818361070e565b6084846020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b856040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b8280fd5b73ffffffffffffffffffffffffffffffffffffffff81160361069d57565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106ed57604052565b6106a2565b6040810190811067ffffffffffffffff8211176106ed57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106ed57604052565b67ffffffffffffffff81116106ed57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561069d578035906107a08261074f565b926107ae604051948561070e565b8284526020838301011161069d57816000926020809301838601378301015290565b604051906107dd826106d1565b60008252565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61039081547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604080519373ffffffffffffffffffffffffffffffffffffffff9081851686521693846020820152a1811561087e577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b9081602091031261069d57516109178161067f565b90565b6040513d6000823e3d90fd5b1561092d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201527f73206e6f74206120636f6e7472616374000000000000000000000000000000006064820152fd5b604051906060820182811067ffffffffffffffff8211176106ed57604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806109179493602081519101845af43d15610a60573d91610a438361074f565b92610a51604051948561070e565b83523d6000602085013e610acd565b606091610acd565b15610a6f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b91929015610aed5750815115610ae1575090565b610917903b1515610a68565b825190915015610b005750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610b7d575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610b3c565b610bee610bd57fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b3303610d14576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe6000000000000000000000000000000000000000000000000000000008103610c515750610c49610f0f565b602081519101f35b7f4f1ef286000000000000000000000000000000000000000000000000000000008103610c865750610c81611083565b610c49565b7f8f283970000000000000000000000000000000000000000000000000000000008103610cb65750610c81610ec5565b7ff851a440000000000000000000000000000000000000000000000000000000008103610ce65750610c81610dfd565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610d1457610c81610e53565b610d1c610d3b565b6000808092368280378136915af43d82803e15610d37573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541680610df8575060206004917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156102a657600091610de0575090565b610917915060203d811161029f57610290818361070e565b905090565b610e05611192565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103541660405190602082015260208152610917816106f2565b610e5b611192565b610e63610d3b565b73ffffffffffffffffffffffffffffffffffffffff6040519116602082015260208152610917816106f2565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261069d576004356109178161067f565b610ecd611192565b3660041161069d57610efc73ffffffffffffffffffffffffffffffffffffffff610ef636610e8f565b166107e3565b604051610f08816106d1565b6000815290565b610f17611192565b3660041161069d5773ffffffffffffffffffffffffffffffffffffffff610f3d36610e8f565b1660405190610f4b826106d1565b60008252803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610ff7575b610fe3575b5050604051610f08816106d1565b610fef916102646109b1565b503880610fd5565b506000610fd0565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b3660041161069d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069d576004356110c18161067f565b60243567ffffffffffffffff811161069d576110f673ffffffffffffffffffffffffffffffffffffffff913690600401610789565b9116803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061118a57610fe3575050604051610f08816106d1565b506001610fd0565b3461069d5756fea264697066735822122045004168ba82273e43eeb6c01989363db864f4e92bc6bcc90fadfdb4a6c90d8564736f6c63430008130033a2646970667358221220c07a7fc95409381c3f8e890cd4a9645c01cbd77ef2525ed0f7a2056eab750e3364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BCE4583 EQ PUSH2 0x6BB JUMPI DUP1 PUSH4 0x25A570B8 EQ PUSH2 0x3DD JUMPI DUP1 PUSH4 0x59659E90 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x64EFEE88 EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A3 JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A0 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A0 JUMPI PUSH2 0xA1 PUSH2 0x77E JUMP JUMPDEST PUSH2 0xA9 PUSH2 0x9A7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND SWAP1 DUP2 ISZERO PUSH2 0x11C JUMPI PUSH1 0x0 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A0 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A0 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A0 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A0 JUMPI PUSH2 0x22B PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A0 JUMPI PUSH2 0x347 PUSH1 0x55 PUSH1 0xB PUSH2 0x2C7 PUSH2 0x2AA CALLDATASIZE PUSH2 0x8BB JUMP JUMPDEST SWAP2 PUSH1 0x40 SWAP13 SWAP8 SWAP12 SWAP7 SWAP6 SWAP13 SWAP9 SWAP4 SWAP9 MLOAD SWAP9 DUP10 SWAP6 PUSH1 0x20 SWAP15 DUP16 DUP9 ADD SWAP9 DUP10 PUSH2 0xA8C JUMP JUMPDEST SUB SWAP4 PUSH2 0x2F9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP6 DUP7 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x805 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP3 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x30A DUP5 PUSH2 0x7E9 JUMP JUMPDEST DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 PUSH2 0x33B DUP9 PUSH1 0x1 SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP13 DUP6 ADD SWAP9 DUP10 PUSH2 0xB12 JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x805 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x11EB PUSH1 0x40 MLOAD PUSH2 0x35C DUP8 DUP4 ADD DUP3 PUSH2 0x805 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 DUP2 ADD SWAP2 PUSH2 0xB69 DUP4 CODECOPY MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x40 DUP4 ADD MSTORE DUP6 DUP3 ADD MSTORE ADDRESS DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 PUSH1 0x40 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A0 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A0 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x1A0 JUMPI PUSH2 0x43E PUSH2 0x412 PUSH2 0x3F2 CALLDATASIZE PUSH2 0x8BB JUMP JUMPDEST SWAP3 SWAP4 DUP3 SWAP10 DUP7 DUP3 SWAP11 DUP7 DUP6 DUP12 SWAP11 SWAP12 SWAP7 SWAP8 DUP11 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 PUSH1 0x20 DUP9 ADD SWAP11 DUP12 PUSH2 0xA8C JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x805 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP8 PUSH1 0x40 MLOAD PUSH2 0x44E DUP2 PUSH2 0x7E9 JUMP JUMPDEST DUP11 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP10 DUP11 PUSH1 0x1 SLOAD AND PUSH2 0x485 DUP11 PUSH2 0x412 DUP6 PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH1 0x20 DUP6 ADD SWAP8 DUP9 PUSH2 0xB12 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x11EB SWAP1 PUSH1 0x40 MLOAD PUSH2 0x49C PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0x805 JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP3 PUSH2 0xB69 DUP5 CODECOPY DUP1 MLOAD ISZERO PUSH2 0x65D JUMPI MLOAD DUP13 SWAP3 DUP15 CREATE2 AND SWAP10 DUP11 ISZERO PUSH2 0x5FF JUMPI DUP12 SWAP9 DUP2 PUSH1 0x1 SLOAD AND SWAP1 DUP13 EXTCODESIZE ISZERO PUSH2 0x5FB JUMPI DUP11 SWAP3 DUP4 DUP15 SWAP3 PUSH2 0x51D PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 DUP7 MSTORE AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0xA49 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x5F0 JUMPI DUP9 SWAP2 PUSH2 0x5DC JUMPI JUMPDEST POP POP DUP9 EXTCODESIZE ISZERO PUSH2 0x5D8 JUMPI PUSH2 0x570 SWAP4 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP8 PUSH32 0x98DD69C800000000000000000000000000000000000000000000000000000000 DUP10 MSTORE PUSH1 0x4 DUP10 ADD PUSH2 0xA8C JUMP JUMPDEST SUB DUP2 DUP4 DUP7 GAS CALL DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH2 0x5B5 JUMPI JUMPDEST PUSH1 0x20 DUP3 PUSH32 0x47E27C5AB10C568FD18FF716738C5DD5257732E878DD2CA116C5B4AF900D9E3D DUP3 PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE LOG1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x5BF DUP4 SWAP2 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x5C9 JUMPI DUP2 PUSH2 0x581 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP6 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST PUSH2 0x5E5 SWAP1 PUSH2 0x7A6 JUMP JUMPDEST PUSH2 0x5D8 JUMPI DUP7 CODESIZE PUSH2 0x52F JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP11 DUP1 REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A204661696C6564206F6E206465706C6F7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP CALLVALUE PUSH2 0x1A0 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A0 JUMPI PUSH2 0x6F3 PUSH2 0x77E JUMP JUMPDEST PUSH2 0x6FB PUSH2 0x9A7 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH1 0x1 SLOAD AND SWAP3 DUP4 EXTCODESIZE ISZERO PUSH2 0x77A JUMPI PUSH1 0x24 SWAP1 DUP4 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP6 MSTORE AND PUSH1 0x4 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x76F JUMPI PUSH2 0x763 JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x76C SWAP1 PUSH2 0x7A6 JUMP JUMPDEST DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x7A1 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x7BA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7BA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x7BA JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x7A1 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x7BA JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x899 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0x805 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x7A1 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC DUP3 ADD SLT PUSH2 0x7A1 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 PUSH1 0x4 CALLDATALOAD DUP4 DUP2 AND DUP2 SUB PUSH2 0x7A1 JUMPI SWAP3 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 AND DUP2 SUB PUSH2 0x7A1 JUMPI SWAP3 PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x7A1 JUMPI DUP3 PUSH2 0x937 SWAP2 PUSH1 0x4 ADD PUSH2 0x846 JUMP JUMPDEST SWAP4 PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x7A1 JUMPI DUP4 PUSH2 0x94F SWAP2 PUSH1 0x4 ADD PUSH2 0x846 JUMP JUMPDEST SWAP4 PUSH1 0x84 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x7A1 JUMPI DUP5 PUSH2 0x967 SWAP2 PUSH1 0x4 ADD PUSH2 0x846 JUMP JUMPDEST SWAP4 PUSH1 0xA4 CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x7A1 JUMPI PUSH2 0x97E SWAP2 PUSH1 0x4 ADD PUSH2 0x846 JUMP JUMPDEST SWAP2 PUSH1 0xC4 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x7A1 JUMPI SWAP1 PUSH1 0xE4 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x7A1 JUMPI SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x9C8 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0xA39 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xA29 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0xA85 DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0xA26 JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP8 SWAP7 SWAP3 SWAP5 PUSH2 0xAF7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 PUSH2 0xAE9 PUSH1 0xC0 SWAP9 PUSH2 0xADB PUSH2 0xB05 SWAP7 SWAP8 PUSH1 0xE0 PUSH1 0x20 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP13 AND DUP2 MSTORE ADD MSTORE PUSH1 0xE0 DUP14 ADD SWAP1 PUSH2 0xA49 JUMP JUMPDEST SWAP1 DUP12 DUP3 SUB PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0xA49 JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0xA49 JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0xA49 JUMP JUMPDEST SWAP7 AND PUSH1 0xA0 DUP6 ADD MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x48 SWAP5 SWAP4 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP1 SWAP3 PUSH1 0x60 SHL AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH2 0xB63 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP7 DUP6 ADD SWAP2 ADD PUSH2 0xA26 JUMP JUMPDEST ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x11CF SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASLIMIT STOP COINBASE PUSH9 0xBA82273E43EEB6C019 DUP10 CALLDATASIZE RETURNDATASIZE 0xB8 PUSH5 0xF4E92BC6BC 0xC9 0xF 0xAD REVERT 0xB4 0xA6 0xC9 0xD DUP6 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 PUSH27 0x7FC95409381C3F8E890CD4A9645C01CBD77EF2525ED0F7A2056EAB PUSH22 0xE3364736F6C63430008130033000000000000000000 ",
							"sourceMap": "501:1784:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1319:96;501:1784;1319:96;;;501:1784;;;;;2120:96;501:1784;2120:96;;;501:1784;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:62:8;;:::i;:::-;501:1784:36;;;;2162:22:8;;;501:1784:36;;;;;;;;;;;;2566:40:8;501:1784:36;2566:40:8;;501:1784:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:8;;:::i;:::-;501:1784:36;;;;;;;;;;2566:40:8;;;;501:1784:36;;;;;;;2317:60:27;2345:1598:19;;2120:96:36;501:1784;;;:::i;:::-;;;;;;;;;;;;;2120:96;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;501:1784;2110:107;;501:1784;;;;;;;:::i;:::-;;;;;2317:60:27;501:1784:36;2362:6:27;501:1784:36;;;;;2317:60:27;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;501:1784:36;2307:71:27;;2421:52;501:1784:36;;;2421:52:27;;;501:1784:36;;:::i;:::-;2421:52:27;;;;;;;;;;501:1784:36;2411:63:27;;2345:1598:19;501:1784:36;2345:1598:19;;501:1784:36;2345:1598:19;;;;;;;1921:4;2345:1598;;;;;;;501:1784:36;;;;;;;;;;;;;;;;;;;;;712:31:27;501:1784:36;;;;;;;;;;;;;1319:96;;501:1784;;;:::i;:::-;;;;;;;;;;;;;;;;;;1319:96;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;501:1784;1309:107;;501:1784;;;;;;:::i;:::-;;;;;;;1614:6:27;501:1784:36;;1569:60:27;501:1784:36;1569:60:27;501:1784:36;;;1569:60:27;;;1319:96:36;1569:60:27;;;;;:::i;:::-;501:1784:36;1559:71:27;;1664:52;501:1784:36;;;;1319:96;1664:52:27;;501:1784:36;;:::i;:::-;1664:52:27;;;1319:96:36;1664:52:27;;;;;;501:1784:36;;1283:20:19;501:1784:36;;1393:100:19;;;;;501:1784:36;1510:18:19;;;501:1784:36;;;;;1614:6:27;501:1784:36;;1791:105:27;;;;;;501:1784:36;;;;;;;;1791:105:27;;;;;;;501:1784:36;1791:105:27;;501:1784:36;;1791:105:27;;501:1784:36;;;;;;;;;;;;;;;:::i;:::-;1791:105:27;;;;;;;;;;;;;501:1784:36;1482:123;;;;;;;;501:1784;;;1482:123;;;;;501:1784;1482:123;;501:1784;1482:123;;;:::i;:::-;;;;;;;;;;;;;501:1784;1319:96;501:1784;1620:34;501:1784;;;;;;1620:34;501:1784;;;;;;1482:123;;;;;:::i;:::-;501:1784;;1482:123;;;501:1784;;;;1482:123;501:1784;;;;;;;;;1482:123;501:1784;;;1791:105:27;;;;:::i;:::-;501:1784:36;;1791:105:27;;;;;501:1784:36;;;;;;;;;1791:105:27;501:1784:36;;;;;;;;;;1319:96;501:1784;;;;;;;;;;;;;;;;;;;;;;1319:96;501:1784;;;;1319:96;501:1784;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:62:8;;:::i;:::-;501:1784:36;;;2746:6:27;501:1784:36;;2746:32:27;;;;;;501:1784:36;;;;;2746:32:27;;;;;501:1784:36;2746:32:27;;501:1784:36;;2746:32:27;;501:1784:36;2746:32:27;;;;;;;;501:1784:36;;;2746:32:27;;;;:::i;:::-;501:1784:36;;2746:32:27;501:1784:36;;;;;;;;;2746:32:27;501:1784:36;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;1319:96;501:1784;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;501:1784:36;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;1359:130:8:-;501:1784:36;1273:6:8;501:1784:36;;719:10:18;1422:23:8;501:1784:36;;1359:130:8:o;501:1784:36:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;501:1784:36;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"ERC721SoulboundDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beacon\",\"outputs\":[{\"internalType\":\"contract UpgradeableBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyFeeNumerator\",\"type\":\"uint96\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyFeeNumerator\",\"type\":\"uint96\"}],\"name\":\"determineAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgradeBeacon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ERC721SoulboundDeployed(address)\":{\"params\":{\"proxyAddr\":\"The address of the deployed proxy.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"factoryOwner\":\"The owner of the ERC-721 Soulbound Factory\"}},\"deploy(address,address,string,string,string,string,address,uint96)\":{\"params\":{\"baseURI\":\"The base URI of the ERC-721 Soulbound proxy\",\"contractURI\":\"The contract URI of the ERC-721 Soulbound proxy\",\"name\":\"The name of the ERC-721 Soulbound proxy\",\"proxyOwner\":\"The owner of the ERC-721 Soulbound proxy\",\"royaltyFeeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"royaltyReceiver\":\"Address of who should be sent the royalty payment\",\"symbol\":\"The symbol of the ERC-721 Soulbound proxy\",\"tokenOwner\":\"The owner of the ERC-721 Soulbound implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-721 Soulbound Proxy\"}},\"determineAddress(address,address,string,string,string,string,address,uint96)\":{\"params\":{\"baseURI\":\"The base URI of the ERC-721 Soulbound proxy\",\"contractURI\":\"The contract URI of the ERC-721 Soulbound proxy\",\"name\":\"The name of the ERC-721 Soulbound proxy\",\"proxyOwner\":\"The owner of the ERC-721 Soulbound proxy\",\"royaltyFeeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"royaltyReceiver\":\"Address of who should be sent the royalty payment\",\"symbol\":\"The symbol of the ERC-721 Soulbound proxy\",\"tokenOwner\":\"The owner of the ERC-721 Soulbound implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-721 Soulbound Proxy\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeBeacon(address)\":{\"params\":{\"implementation\":\"The new beacon implementation.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ERC721SoulboundDeployed(address)\":{\"notice\":\"Event emitted when a new ERC-721 Soulbound proxy contract is deployed.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Creates an ERC-721 Soulbound Factory.\"},\"deploy(address,address,string,string,string,string,address,uint96)\":{\"notice\":\"Creates an ERC-721 Soulbound proxy.\"},\"determineAddress(address,address,string,string,string,string,address,uint96)\":{\"notice\":\"Computes the address of a proxy instance.\"},\"upgradeBeacon(address)\":{\"notice\":\"Upgrades the beacon implementation.\"}},\"notice\":\"Deployer of ERC-721 Soulbound proxies.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/soulbound/ERC721SoulboundFactory.sol\":\"ERC721SoulboundFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/chiru-labs/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0xede758d13ccce2f54a4bcd16816456109b290759d43988205539cf632f4c8a55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b63befef8f79ec44ebe5db096767cab6772485c2b01a431759e7fcdcf7fd0bb1\",\"dweb:/ipfs/QmV45KT2ai7PnVRhpJKjB29A15VGnhsvxxBFrrUSwhe2fr\"]},\"lib/chiru-labs/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xc9a2a00612e0d121aef3f716877ada17177d5b2d5a4c780d22cade46da2ff294\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1435542fc553d2fb9181191f126a1f97e2cc5570c2459c862f54ba415a22bf02\",\"dweb:/ipfs/QmaQJ14ajkHgymY5TtoxHnpiN5u4TpwXCqKr2B6DM8SHkn\"]},\"lib/chiru-labs/erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xfa5590db00a9bf0f85d2c10f2c901d5a3d49ecb1e64e5b6afe9a771496a41698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42616f12c7956e0ccefb690bf2a503986710c54544a36898b1ecc5d226373c4d\",\"dweb:/ipfs/QmU6vn637MDzUjsGih3fnWYf5CjcMknQUDXQwYjLNPX8ig\"]},\"lib/chiru-labs/erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0x56fa15ba9a351f0be2728ff2569c8ce6bc187cbf2c027fece17442a682f49079\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58e424f0290d7ba66e451b3d8e490f5bac0bf0105b2af467513b2ffecb7065a9\",\"dweb:/ipfs/QmbCvzT7vep5gyBNqkHrD46pxZVUHHzaCZUpgwgWkBw78Y\"]},\"lib/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362f12aebd1022d643235e6a7fa6ccfb38c13f3a0d1b006d5d1aea51af4bb852\",\"dweb:/ipfs/QmSUQ7pM4UnBawMfP2Di8EqawxaoU195DgsSLxHejvSpPz\"]},\"lib/openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/proxies/SequenceProxyFactory.sol\":{\"keccak256\":\"0x263347655a632136e3dabcc6e49da7fb9fa5b62a4f1e9eeed3cdd74234c81c53\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f41dc2c95c5d793105ed53f9ae9adea5a00264be78d86bf4f26cca6d33b7141\",\"dweb:/ipfs/QmfP1T4HDdDWYNFxMGHMeaq6owWmNdGjDMrh6hN3in2GVW\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0x366f201163ff5b941a61d5d2cd5966f25e332f52b197335cb68670c5fc83ba12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://485725a0c56e49d07de7233293e85fe1a586ddd70b07f1b14af5819874819da9\",\"dweb:/ipfs/QmRgQV9yzosT37zGpg6wb6Ff7q8Ux4Ttryo1RdPWaAfAED\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]},\"src/tokens/ERC721/ERC721BaseToken.sol\":{\"keccak256\":\"0xa58147a7928fa565edf8b84c20295042d392e8533f08909b9d0491cd21737c36\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9a675234058bd9e6f7155bbd12c2a624413a352fd3417b5fc851ca4dcf3fcfb\",\"dweb:/ipfs/QmWECr1hVYjob6vGctmVTR5dWYD58gxfG2btPfc833L4bM\"]},\"src/tokens/ERC721/presets/items/ERC721Items.sol\":{\"keccak256\":\"0x24a0da0a0eaf5a9c1af2af9accc0e43aa550ff86464fdd982dded108004e2b71\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a683ac382619a8dfa52ae675c24f3d359195bc99b5c792afbcb5823bef224a8b\",\"dweb:/ipfs/QmP6XD6CB2JU4gV7hgAfeehJ6FZX2cV4gdDPrDBdYkDS8s\"]},\"src/tokens/ERC721/presets/items/IERC721Items.sol\":{\"keccak256\":\"0xbc61c6e0addf7265274c8562c150e33e821aeb76324e2e43d17ca83df33f53f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://0c7cfb1eaf71ee3bc3427c825ad7f392222584b834f3a13812b03099edff03d0\",\"dweb:/ipfs/QmSywRxqjNpesz6hsTJu555DJARVaPx3mG8Y3nxPCw3Jc3\"]},\"src/tokens/ERC721/presets/soulbound/ERC721Soulbound.sol\":{\"keccak256\":\"0x90272996e89de2eb871d42f0cb13702f98047f077d0e9cfe659beb673c2d4139\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://43a3d7908909f466bee2ca8d248bd2d4da8e5f4331c262630cf155f285e459c7\",\"dweb:/ipfs/QmQdwTWdC6TG7WJ1WLoVDvWNWKiPDxVPAPub1MmJcfPg61\"]},\"src/tokens/ERC721/presets/soulbound/ERC721SoulboundFactory.sol\":{\"keccak256\":\"0x157924172236dd92e4aa10e0979af99f2b8a3a2d4c12d7dfcdc25c2f7b0766ed\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8e9880df2bd2ce5fa4d85c2bfc80c3fd9558a5b9dc83de3fa3ba140f61013a55\",\"dweb:/ipfs/QmcnME5eNUpY3YuLRvYirkzDteR9CvEZymuzoqm6Gxmr9y\"]},\"src/tokens/ERC721/presets/soulbound/IERC721Soulbound.sol\":{\"keccak256\":\"0xd041a7ec9e9ddb1e5529a0ab930014d6d8b9394093d16f86e1280d910ebd14f5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://79caaadcb7815fa7045aacf460295f55c0f5913e80fa6ba6a657d74dea11e4ba\",\"dweb:/ipfs/Qmd4rPsymuwJ8KAMF5uscJGWUdewXNKuHWWw94av9gy19y\"]},\"src/tokens/ERC721/presets/soulbound/IERC721SoulboundFactory.sol\":{\"keccak256\":\"0xa868d8890da4e08d8441fbffecd9f4045a7b4bfb21b4321147176e6673a248ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b39f51ee413607c488ef373ad1cca10552dcf2d80ff43487aed6dd608cc65785\",\"dweb:/ipfs/QmUzeEbET9hHmBiZCZMUaoW9fS5gemncdJFFwM5tfGvbTz\"]},\"src/tokens/common/ERC2981Controlled.sol\":{\"keccak256\":\"0x4ed96fc921b717206c4d0b3ca82e46a852ff7873f93fe1db44593ae55b6ea41a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://136802a1cb1615af11f766782fcb01144f9bf8c124b86e1f66e876bb3be326c7\",\"dweb:/ipfs/QmYQJ1Em4XBaLe6xChrgB2TLJW1V2nbRJp1JMCTDuEjr62\"]},\"src/tokens/common/IERC2981Controlled.sol\":{\"keccak256\":\"0x27ed5643239353cebed9cc45d42d086a8e270f9f647fa6cd3a9315515319fa5a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://634b240b478d0a2d7d22ebe8f2850b6f3547ab4c5675bc17ac10c3e978730f67\",\"dweb:/ipfs/QmYH6fimhwEv7ZTER1MHdiWFcu4cKkskdSbgFawJqTmP85\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"ERC721SoulboundDeployed(address)": {
								"notice": "Event emitted when a new ERC-721 Soulbound proxy contract is deployed."
							}
						},
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Creates an ERC-721 Soulbound Factory."
							},
							"deploy(address,address,string,string,string,string,address,uint96)": {
								"notice": "Creates an ERC-721 Soulbound proxy."
							},
							"determineAddress(address,address,string,string,string,string,address,uint96)": {
								"notice": "Computes the address of a proxy instance."
							},
							"upgradeBeacon(address)": {
								"notice": "Upgrades the beacon implementation."
							}
						},
						"notice": "Deployer of ERC-721 Soulbound proxies.",
						"version": 1
					}
				}
			},
			"src/tokens/ERC721/presets/soulbound/IERC721Soulbound.sol": {
				"IERC721Soulbound": {
					"abi": [
						{
							"inputs": [],
							"name": "TransfersLocked",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "getTransferLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "locked",
									"type": "bool"
								}
							],
							"name": "setTransferLocked",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getTransferLocked()": {
								"returns": {
									"_0": "Whether or not transfers are locked."
								}
							},
							"setTransferLocked(bool)": {
								"params": {
									"locked": "Whether or not transfers are locked."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"TransfersLocked\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"getTransferLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"setTransferLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getTransferLocked()\":{\"returns\":{\"_0\":\"Whether or not transfers are locked.\"}},\"setTransferLocked(bool)\":{\"params\":{\"locked\":\"Whether or not transfers are locked.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"TransfersLocked()\":[{\"notice\":\"Transfers locked.\"}]},\"kind\":\"user\",\"methods\":{\"getTransferLocked()\":{\"notice\":\"Gets the transfer lock.\"},\"setTransferLocked(bool)\":{\"notice\":\"Sets the transfer lock.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/soulbound/IERC721Soulbound.sol\":\"IERC721Soulbound\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/soulbound/IERC721Soulbound.sol\":{\"keccak256\":\"0xd041a7ec9e9ddb1e5529a0ab930014d6d8b9394093d16f86e1280d910ebd14f5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://79caaadcb7815fa7045aacf460295f55c0f5913e80fa6ba6a657d74dea11e4ba\",\"dweb:/ipfs/Qmd4rPsymuwJ8KAMF5uscJGWUdewXNKuHWWw94av9gy19y\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"TransfersLocked()": [
								{
									"notice": "Transfers locked."
								}
							]
						},
						"kind": "user",
						"methods": {
							"getTransferLocked()": {
								"notice": "Gets the transfer lock."
							},
							"setTransferLocked(bool)": {
								"notice": "Sets the transfer lock."
							}
						},
						"version": 1
					}
				},
				"IERC721SoulboundFunctions": {
					"abi": [
						{
							"inputs": [],
							"name": "getTransferLocked",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bool",
									"name": "locked",
									"type": "bool"
								}
							],
							"name": "setTransferLocked",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getTransferLocked()": {
								"returns": {
									"_0": "Whether or not transfers are locked."
								}
							},
							"setTransferLocked(bool)": {
								"params": {
									"locked": "Whether or not transfers are locked."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getTransferLocked\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"locked\",\"type\":\"bool\"}],\"name\":\"setTransferLocked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getTransferLocked()\":{\"returns\":{\"_0\":\"Whether or not transfers are locked.\"}},\"setTransferLocked(bool)\":{\"params\":{\"locked\":\"Whether or not transfers are locked.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTransferLocked()\":{\"notice\":\"Gets the transfer lock.\"},\"setTransferLocked(bool)\":{\"notice\":\"Sets the transfer lock.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/soulbound/IERC721Soulbound.sol\":\"IERC721SoulboundFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/soulbound/IERC721Soulbound.sol\":{\"keccak256\":\"0xd041a7ec9e9ddb1e5529a0ab930014d6d8b9394093d16f86e1280d910ebd14f5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://79caaadcb7815fa7045aacf460295f55c0f5913e80fa6ba6a657d74dea11e4ba\",\"dweb:/ipfs/Qmd4rPsymuwJ8KAMF5uscJGWUdewXNKuHWWw94av9gy19y\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"getTransferLocked()": {
								"notice": "Gets the transfer lock."
							},
							"setTransferLocked(bool)": {
								"notice": "Sets the transfer lock."
							}
						},
						"version": 1
					}
				},
				"IERC721SoulboundSignals": {
					"abi": [
						{
							"inputs": [],
							"name": "TransfersLocked",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"TransfersLocked\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"TransfersLocked()\":[{\"notice\":\"Transfers locked.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/soulbound/IERC721Soulbound.sol\":\"IERC721SoulboundSignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/soulbound/IERC721Soulbound.sol\":{\"keccak256\":\"0xd041a7ec9e9ddb1e5529a0ab930014d6d8b9394093d16f86e1280d910ebd14f5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://79caaadcb7815fa7045aacf460295f55c0f5913e80fa6ba6a657d74dea11e4ba\",\"dweb:/ipfs/Qmd4rPsymuwJ8KAMF5uscJGWUdewXNKuHWWw94av9gy19y\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"TransfersLocked()": [
								{
									"notice": "Transfers locked."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/ERC721/presets/soulbound/IERC721SoulboundFactory.sol": {
				"IERC721SoulboundFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "ERC721SoulboundDeployed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "contractURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "royaltyReceiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "royaltyFeeNumerator",
									"type": "uint96"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "contractURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "royaltyReceiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "royaltyFeeNumerator",
									"type": "uint96"
								}
							],
							"name": "determineAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ERC721SoulboundDeployed(address)": {
								"params": {
									"proxyAddr": "The address of the deployed proxy."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"deploy(address,address,string,string,string,string,address,uint96)": {
								"params": {
									"baseURI": "The base URI of the ERC-721 Soulbound proxy",
									"contractURI": "The contract URI of the ERC-721 Soulbound proxy",
									"name": "The name of the ERC-721 Soulbound proxy",
									"proxyOwner": "The owner of the ERC-721 Soulbound proxy",
									"royaltyFeeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"royaltyReceiver": "Address of who should be sent the royalty payment",
									"symbol": "The symbol of the ERC-721 Soulbound proxy",
									"tokenOwner": "The owner of the ERC-721 Soulbound implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-721 Soulbound Proxy"
								}
							},
							"determineAddress(address,address,string,string,string,string,address,uint96)": {
								"params": {
									"baseURI": "The base URI of the ERC-721 Soulbound proxy",
									"contractURI": "The contract URI of the ERC-721 Soulbound proxy",
									"name": "The name of the ERC-721 Soulbound proxy",
									"proxyOwner": "The owner of the ERC-721 Soulbound proxy",
									"royaltyFeeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"royaltyReceiver": "Address of who should be sent the royalty payment",
									"symbol": "The symbol of the ERC-721 Soulbound proxy",
									"tokenOwner": "The owner of the ERC-721 Soulbound implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-721 Soulbound Proxy"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"ERC721SoulboundDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyFeeNumerator\",\"type\":\"uint96\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyFeeNumerator\",\"type\":\"uint96\"}],\"name\":\"determineAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ERC721SoulboundDeployed(address)\":{\"params\":{\"proxyAddr\":\"The address of the deployed proxy.\"}}},\"kind\":\"dev\",\"methods\":{\"deploy(address,address,string,string,string,string,address,uint96)\":{\"params\":{\"baseURI\":\"The base URI of the ERC-721 Soulbound proxy\",\"contractURI\":\"The contract URI of the ERC-721 Soulbound proxy\",\"name\":\"The name of the ERC-721 Soulbound proxy\",\"proxyOwner\":\"The owner of the ERC-721 Soulbound proxy\",\"royaltyFeeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"royaltyReceiver\":\"Address of who should be sent the royalty payment\",\"symbol\":\"The symbol of the ERC-721 Soulbound proxy\",\"tokenOwner\":\"The owner of the ERC-721 Soulbound implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-721 Soulbound Proxy\"}},\"determineAddress(address,address,string,string,string,string,address,uint96)\":{\"params\":{\"baseURI\":\"The base URI of the ERC-721 Soulbound proxy\",\"contractURI\":\"The contract URI of the ERC-721 Soulbound proxy\",\"name\":\"The name of the ERC-721 Soulbound proxy\",\"proxyOwner\":\"The owner of the ERC-721 Soulbound proxy\",\"royaltyFeeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"royaltyReceiver\":\"Address of who should be sent the royalty payment\",\"symbol\":\"The symbol of the ERC-721 Soulbound proxy\",\"tokenOwner\":\"The owner of the ERC-721 Soulbound implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-721 Soulbound Proxy\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ERC721SoulboundDeployed(address)\":{\"notice\":\"Event emitted when a new ERC-721 Soulbound proxy contract is deployed.\"}},\"kind\":\"user\",\"methods\":{\"deploy(address,address,string,string,string,string,address,uint96)\":{\"notice\":\"Creates an ERC-721 Soulbound proxy.\"},\"determineAddress(address,address,string,string,string,string,address,uint96)\":{\"notice\":\"Computes the address of a proxy instance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/soulbound/IERC721SoulboundFactory.sol\":\"IERC721SoulboundFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/soulbound/IERC721SoulboundFactory.sol\":{\"keccak256\":\"0xa868d8890da4e08d8441fbffecd9f4045a7b4bfb21b4321147176e6673a248ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b39f51ee413607c488ef373ad1cca10552dcf2d80ff43487aed6dd608cc65785\",\"dweb:/ipfs/QmUzeEbET9hHmBiZCZMUaoW9fS5gemncdJFFwM5tfGvbTz\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"ERC721SoulboundDeployed(address)": {
								"notice": "Event emitted when a new ERC-721 Soulbound proxy contract is deployed."
							}
						},
						"kind": "user",
						"methods": {
							"deploy(address,address,string,string,string,string,address,uint96)": {
								"notice": "Creates an ERC-721 Soulbound proxy."
							},
							"determineAddress(address,address,string,string,string,string,address,uint96)": {
								"notice": "Computes the address of a proxy instance."
							}
						},
						"version": 1
					}
				},
				"IERC721SoulboundFactoryFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "contractURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "royaltyReceiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "royaltyFeeNumerator",
									"type": "uint96"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "contractURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "royaltyReceiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "royaltyFeeNumerator",
									"type": "uint96"
								}
							],
							"name": "determineAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"deploy(address,address,string,string,string,string,address,uint96)": {
								"params": {
									"baseURI": "The base URI of the ERC-721 Soulbound proxy",
									"contractURI": "The contract URI of the ERC-721 Soulbound proxy",
									"name": "The name of the ERC-721 Soulbound proxy",
									"proxyOwner": "The owner of the ERC-721 Soulbound proxy",
									"royaltyFeeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"royaltyReceiver": "Address of who should be sent the royalty payment",
									"symbol": "The symbol of the ERC-721 Soulbound proxy",
									"tokenOwner": "The owner of the ERC-721 Soulbound implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-721 Soulbound Proxy"
								}
							},
							"determineAddress(address,address,string,string,string,string,address,uint96)": {
								"params": {
									"baseURI": "The base URI of the ERC-721 Soulbound proxy",
									"contractURI": "The contract URI of the ERC-721 Soulbound proxy",
									"name": "The name of the ERC-721 Soulbound proxy",
									"proxyOwner": "The owner of the ERC-721 Soulbound proxy",
									"royaltyFeeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"royaltyReceiver": "Address of who should be sent the royalty payment",
									"symbol": "The symbol of the ERC-721 Soulbound proxy",
									"tokenOwner": "The owner of the ERC-721 Soulbound implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-721 Soulbound Proxy"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyFeeNumerator\",\"type\":\"uint96\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyFeeNumerator\",\"type\":\"uint96\"}],\"name\":\"determineAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deploy(address,address,string,string,string,string,address,uint96)\":{\"params\":{\"baseURI\":\"The base URI of the ERC-721 Soulbound proxy\",\"contractURI\":\"The contract URI of the ERC-721 Soulbound proxy\",\"name\":\"The name of the ERC-721 Soulbound proxy\",\"proxyOwner\":\"The owner of the ERC-721 Soulbound proxy\",\"royaltyFeeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"royaltyReceiver\":\"Address of who should be sent the royalty payment\",\"symbol\":\"The symbol of the ERC-721 Soulbound proxy\",\"tokenOwner\":\"The owner of the ERC-721 Soulbound implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-721 Soulbound Proxy\"}},\"determineAddress(address,address,string,string,string,string,address,uint96)\":{\"params\":{\"baseURI\":\"The base URI of the ERC-721 Soulbound proxy\",\"contractURI\":\"The contract URI of the ERC-721 Soulbound proxy\",\"name\":\"The name of the ERC-721 Soulbound proxy\",\"proxyOwner\":\"The owner of the ERC-721 Soulbound proxy\",\"royaltyFeeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"royaltyReceiver\":\"Address of who should be sent the royalty payment\",\"symbol\":\"The symbol of the ERC-721 Soulbound proxy\",\"tokenOwner\":\"The owner of the ERC-721 Soulbound implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-721 Soulbound Proxy\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy(address,address,string,string,string,string,address,uint96)\":{\"notice\":\"Creates an ERC-721 Soulbound proxy.\"},\"determineAddress(address,address,string,string,string,string,address,uint96)\":{\"notice\":\"Computes the address of a proxy instance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/soulbound/IERC721SoulboundFactory.sol\":\"IERC721SoulboundFactoryFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/soulbound/IERC721SoulboundFactory.sol\":{\"keccak256\":\"0xa868d8890da4e08d8441fbffecd9f4045a7b4bfb21b4321147176e6673a248ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b39f51ee413607c488ef373ad1cca10552dcf2d80ff43487aed6dd608cc65785\",\"dweb:/ipfs/QmUzeEbET9hHmBiZCZMUaoW9fS5gemncdJFFwM5tfGvbTz\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"deploy(address,address,string,string,string,string,address,uint96)": {
								"notice": "Creates an ERC-721 Soulbound proxy."
							},
							"determineAddress(address,address,string,string,string,string,address,uint96)": {
								"notice": "Computes the address of a proxy instance."
							}
						},
						"version": 1
					}
				},
				"IERC721SoulboundFactorySignals": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "ERC721SoulboundDeployed",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"ERC721SoulboundDeployed(address)": {
								"params": {
									"proxyAddr": "The address of the deployed proxy."
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"ERC721SoulboundDeployed\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"ERC721SoulboundDeployed(address)\":{\"params\":{\"proxyAddr\":\"The address of the deployed proxy.\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"ERC721SoulboundDeployed(address)\":{\"notice\":\"Event emitted when a new ERC-721 Soulbound proxy contract is deployed.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/soulbound/IERC721SoulboundFactory.sol\":\"IERC721SoulboundFactorySignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/soulbound/IERC721SoulboundFactory.sol\":{\"keccak256\":\"0xa868d8890da4e08d8441fbffecd9f4045a7b4bfb21b4321147176e6673a248ca\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b39f51ee413607c488ef373ad1cca10552dcf2d80ff43487aed6dd608cc65785\",\"dweb:/ipfs/QmUzeEbET9hHmBiZCZMUaoW9fS5gemncdJFFwM5tfGvbTz\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"ERC721SoulboundDeployed(address)": {
								"notice": "Event emitted when a new ERC-721 Soulbound proxy contract is deployed."
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/common/ERC2981Controlled.sol": {
				"ERC2981Controlled": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setDefaultRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setTokenRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"setDefaultRoyalty(address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment"
								}
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment",
									"tokenId": "The token id to set the royalty information for"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "Interface id"
								},
								"returns": {
									"_0": "True if supported"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setTokenRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"setDefaultRoyalty(address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\"}},\"setTokenRoyalty(uint256,address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\",\"tokenId\":\"The token id to set the royalty information for\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface id\"},\"returns\":{\"_0\":\"True if supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setDefaultRoyalty(address,uint96)\":{\"notice\":\"Sets the royalty information that all ids in this contract will default to.\"},\"setTokenRoyalty(uint256,address,uint96)\":{\"notice\":\"Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check interface support.\"}},\"notice\":\"An implementation of ERC-2981 that allows updates by roles.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/ERC2981Controlled.sol\":\"ERC2981Controlled\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"lib/openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/tokens/common/ERC2981Controlled.sol\":{\"keccak256\":\"0x4ed96fc921b717206c4d0b3ca82e46a852ff7873f93fe1db44593ae55b6ea41a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://136802a1cb1615af11f766782fcb01144f9bf8c124b86e1f66e876bb3be326c7\",\"dweb:/ipfs/QmYQJ1Em4XBaLe6xChrgB2TLJW1V2nbRJp1JMCTDuEjr62\"]},\"src/tokens/common/IERC2981Controlled.sol\":{\"keccak256\":\"0x27ed5643239353cebed9cc45d42d086a8e270f9f647fa6cd3a9315515319fa5a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://634b240b478d0a2d7d22ebe8f2850b6f3547ab4c5675bc17ac10c3e978730f67\",\"dweb:/ipfs/QmYH6fimhwEv7ZTER1MHdiWFcu4cKkskdSbgFawJqTmP85\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"setDefaultRoyalty(address,uint96)": {
								"notice": "Sets the royalty information that all ids in this contract will default to."
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"notice": "Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id"
							},
							"supportsInterface(bytes4)": {
								"notice": "Check interface support."
							}
						},
						"notice": "An implementation of ERC-2981 that allows updates by roles.",
						"version": 1
					}
				}
			},
			"src/tokens/common/IERC2981Controlled.sol": {
				"IERC2981Controlled": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setDefaultRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setTokenRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"setDefaultRoyalty(address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment"
								}
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment",
									"tokenId": "The token id to set the royalty information for"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setTokenRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setDefaultRoyalty(address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\"}},\"setTokenRoyalty(uint256,address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\",\"tokenId\":\"The token id to set the royalty information for\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setDefaultRoyalty(address,uint96)\":{\"notice\":\"Sets the royalty information that all ids in this contract will default to.\"},\"setTokenRoyalty(uint256,address,uint96)\":{\"notice\":\"Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/IERC2981Controlled.sol\":\"IERC2981Controlled\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/common/IERC2981Controlled.sol\":{\"keccak256\":\"0x27ed5643239353cebed9cc45d42d086a8e270f9f647fa6cd3a9315515319fa5a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://634b240b478d0a2d7d22ebe8f2850b6f3547ab4c5675bc17ac10c3e978730f67\",\"dweb:/ipfs/QmYH6fimhwEv7ZTER1MHdiWFcu4cKkskdSbgFawJqTmP85\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"setDefaultRoyalty(address,uint96)": {
								"notice": "Sets the royalty information that all ids in this contract will default to."
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"notice": "Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id"
							}
						},
						"version": 1
					}
				},
				"IERC2981ControlledFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setDefaultRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setTokenRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"setDefaultRoyalty(address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment"
								}
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment",
									"tokenId": "The token id to set the royalty information for"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setTokenRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setDefaultRoyalty(address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\"}},\"setTokenRoyalty(uint256,address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\",\"tokenId\":\"The token id to set the royalty information for\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setDefaultRoyalty(address,uint96)\":{\"notice\":\"Sets the royalty information that all ids in this contract will default to.\"},\"setTokenRoyalty(uint256,address,uint96)\":{\"notice\":\"Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/IERC2981Controlled.sol\":\"IERC2981ControlledFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/common/IERC2981Controlled.sol\":{\"keccak256\":\"0x27ed5643239353cebed9cc45d42d086a8e270f9f647fa6cd3a9315515319fa5a\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://634b240b478d0a2d7d22ebe8f2850b6f3547ab4c5675bc17ac10c3e978730f67\",\"dweb:/ipfs/QmYH6fimhwEv7ZTER1MHdiWFcu4cKkskdSbgFawJqTmP85\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"setDefaultRoyalty(address,uint96)": {
								"notice": "Sets the royalty information that all ids in this contract will default to."
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"notice": "Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"lib/chiru-labs/erc721a/contracts/ERC721A.sol": {
				"id": 0
			},
			"lib/chiru-labs/erc721a/contracts/IERC721A.sol": {
				"id": 1
			},
			"lib/chiru-labs/erc721a/contracts/extensions/ERC721AQueryable.sol": {
				"id": 2
			},
			"lib/chiru-labs/erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"id": 3
			},
			"lib/openzeppelin/contracts/access/AccessControl.sol": {
				"id": 4
			},
			"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol": {
				"id": 5
			},
			"lib/openzeppelin/contracts/access/IAccessControl.sol": {
				"id": 6
			},
			"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"id": 7
			},
			"lib/openzeppelin/contracts/access/Ownable.sol": {
				"id": 8
			},
			"lib/openzeppelin/contracts/interfaces/IERC1967.sol": {
				"id": 9
			},
			"lib/openzeppelin/contracts/interfaces/IERC2981.sol": {
				"id": 10
			},
			"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"id": 11
			},
			"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"id": 12
			},
			"lib/openzeppelin/contracts/proxy/Proxy.sol": {
				"id": 13
			},
			"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"id": 14
			},
			"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"id": 15
			},
			"lib/openzeppelin/contracts/token/common/ERC2981.sol": {
				"id": 16
			},
			"lib/openzeppelin/contracts/utils/Address.sol": {
				"id": 17
			},
			"lib/openzeppelin/contracts/utils/Context.sol": {
				"id": 18
			},
			"lib/openzeppelin/contracts/utils/Create2.sol": {
				"id": 19
			},
			"lib/openzeppelin/contracts/utils/StorageSlot.sol": {
				"id": 20
			},
			"lib/openzeppelin/contracts/utils/Strings.sol": {
				"id": 21
			},
			"lib/openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"id": 22
			},
			"lib/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"id": 23
			},
			"lib/openzeppelin/contracts/utils/math/Math.sol": {
				"id": 24
			},
			"lib/openzeppelin/contracts/utils/math/SignedMath.sol": {
				"id": 25
			},
			"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"id": 26
			},
			"src/proxies/SequenceProxyFactory.sol": {
				"id": 27
			},
			"src/proxies/TransparentUpgradeableBeaconProxy.sol": {
				"id": 28
			},
			"src/proxies/openzeppelin/BeaconProxy.sol": {
				"id": 29
			},
			"src/proxies/openzeppelin/ERC1967Proxy.sol": {
				"id": 30
			},
			"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol": {
				"id": 31
			},
			"src/tokens/ERC721/ERC721BaseToken.sol": {
				"id": 32
			},
			"src/tokens/ERC721/presets/items/ERC721Items.sol": {
				"id": 33
			},
			"src/tokens/ERC721/presets/items/IERC721Items.sol": {
				"id": 34
			},
			"src/tokens/ERC721/presets/soulbound/ERC721Soulbound.sol": {
				"id": 35
			},
			"src/tokens/ERC721/presets/soulbound/ERC721SoulboundFactory.sol": {
				"id": 36
			},
			"src/tokens/ERC721/presets/soulbound/IERC721Soulbound.sol": {
				"id": 37
			},
			"src/tokens/ERC721/presets/soulbound/IERC721SoulboundFactory.sol": {
				"id": 38
			},
			"src/tokens/common/ERC2981Controlled.sol": {
				"id": 39
			},
			"src/tokens/common/IERC2981Controlled.sol": {
				"id": 40
			}
		}
	}
}