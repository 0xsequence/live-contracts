{
	"id": "74bc213ed4d61edd1bb2197f958fc873",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"settings": {
			"evmVersion": "paris",
			"libraries": {},
			"metadata": {
				"bytecodeHash": "ipfs"
			},
			"optimizer": {
				"enabled": true,
				"runs": 20000
			},
			"remappings": [
				"0xsequence/=lib/0xsequence/",
				"@0xsequence/contracts-library/=src/",
				"@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/",
				"@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/",
				"@openzeppelin/=lib/openzeppelin/",
				"chiru-labs/=lib/chiru-labs/",
				"ds-test/=lib/forge-std/lib/ds-test/src/",
				"erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/",
				"erc721a/=lib/chiru-labs/erc721a/",
				"forge-std/=lib/forge-std/src/",
				"murky/=lib/murky/src/",
				"openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/",
				"openzeppelin/=lib/openzeppelin/",
				"solady/=lib/solady/src/"
			],
			"viaIR": true,
			"outputSelection": {
				"*": {
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"devdoc",
						"userdoc",
						"metadata",
						"abi"
					]
				}
			}
		},
		"sources": {
			"src/tokens/ERC1155/utility/sale/ERC1155SaleFactory.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {ERC1155Sale} from \"@0xsequence/contracts-library/tokens/ERC1155/utility/sale/ERC1155Sale.sol\";\nimport {IERC1155SaleFactory, IERC1155SaleFactoryFunctions} from \"@0xsequence/contracts-library/tokens/ERC1155/utility/sale/IERC1155SaleFactory.sol\";\nimport {SequenceProxyFactory} from \"@0xsequence/contracts-library/proxies/SequenceProxyFactory.sol\";\n\n/**\n * Deployer of ERC-1155 Sale proxies.\n */\ncontract ERC1155SaleFactory is IERC1155SaleFactory, SequenceProxyFactory {\n    /**\n     * Creates an ERC-1155 Sale Factory.\n     * @param factoryOwner The owner of the ERC-1155 Sale Factory\n     */\n    constructor(address factoryOwner) {\n        ERC1155Sale impl = new ERC1155Sale();\n        SequenceProxyFactory._initialize(address(impl), factoryOwner);\n    }\n\n    /// @inheritdoc IERC1155SaleFactoryFunctions\n    function deploy(address proxyOwner, address tokenOwner, address items) external returns (address proxyAddr) {\n        bytes32 salt = keccak256(abi.encode(tokenOwner, items));\n        proxyAddr = _createProxy(salt, proxyOwner, \"\");\n        ERC1155Sale(proxyAddr).initialize(tokenOwner, items);\n        emit ERC1155SaleDeployed(proxyAddr);\n        return proxyAddr;\n    }\n\n    /// @inheritdoc IERC1155SaleFactoryFunctions\n    function determineAddress(address proxyOwner, address tokenOwner, address items) external view returns (address proxyAddr) {\n        bytes32 salt = keccak256(abi.encode(tokenOwner, items));\n        return _computeProxyAddress(salt, proxyOwner, \"\");\n    }\n}\n"
			},
			"src/proxies/SequenceProxyFactory.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {\n    TransparentUpgradeableBeaconProxy,\n    ITransparentUpgradeableBeaconProxy\n} from \"./TransparentUpgradeableBeaconProxy.sol\";\n\nimport {Create2} from \"@openzeppelin/contracts/utils/Create2.sol\";\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\nimport {UpgradeableBeacon} from \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\n\n/**\n * An proxy factory that deploys upgradeable beacon proxies.\n * @dev The factory owner is able to upgrade the beacon implementation.\n * @dev Proxy deployers are able to override the beacon reference with their own.\n */\nabstract contract SequenceProxyFactory is Ownable {\n    UpgradeableBeacon public beacon;\n\n    /**\n     * Initialize a Sequence Proxy Factory.\n     * @param implementation The initial beacon implementation.\n     * @param factoryOwner The owner of the factory.\n     */\n    function _initialize(address implementation, address factoryOwner) internal {\n        beacon = new UpgradeableBeacon(implementation);\n        Ownable._transferOwnership(factoryOwner);\n    }\n\n    /**\n     * Deploys and initializes a new proxy instance.\n     * @param _salt The deployment salt.\n     * @param _proxyOwner The owner of the proxy.\n     * @param _data The initialization data.\n     * @return proxyAddress The address of the deployed proxy.\n     */\n    function _createProxy(bytes32 _salt, address _proxyOwner, bytes memory _data)\n        internal\n        returns (address proxyAddress)\n    {\n        bytes32 saltedHash = keccak256(abi.encodePacked(_salt, _proxyOwner, address(beacon), _data));\n        bytes memory bytecode = type(TransparentUpgradeableBeaconProxy).creationCode;\n\n        proxyAddress = Create2.deploy(0, saltedHash, bytecode);\n        ITransparentUpgradeableBeaconProxy(payable(proxyAddress)).initialize(_proxyOwner, address(beacon), _data);\n    }\n\n    /**\n     * Computes the address of a proxy instance.\n     * @param _salt The deployment salt.\n     * @param _proxyOwner The owner of the proxy.\n     * @return proxy The expected address of the deployed proxy.\n     */\n    function _computeProxyAddress(bytes32 _salt, address _proxyOwner, bytes memory _data)\n        internal\n        view\n        returns (address)\n    {\n        bytes32 saltedHash = keccak256(abi.encodePacked(_salt, _proxyOwner, address(beacon), _data));\n        bytes32 bytecodeHash = keccak256(type(TransparentUpgradeableBeaconProxy).creationCode);\n\n        return Create2.computeAddress(saltedHash, bytecodeHash);\n    }\n\n    /**\n     * Upgrades the beacon implementation.\n     * @param implementation The new beacon implementation.\n     */\n    function upgradeBeacon(address implementation) public onlyOwner {\n        beacon.upgradeTo(implementation);\n    }\n}\n"
			},
			"src/tokens/ERC1155/utility/sale/IERC1155SaleFactory.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\ninterface IERC1155SaleFactoryFunctions {\n    /**\n     * Creates an ERC-1155 Sale proxy contract\n     * @param proxyOwner The owner of the ERC-1155 Sale proxy\n     * @param tokenOwner The owner of the ERC-1155 Sale implementation\n     * @param items The ERC-1155 Items contract address\n     * @return proxyAddr The address of the ERC-1155 Sale Proxy\n     * @notice The deployed contract must be granted the MINTER_ROLE on the ERC-1155 Items contract.\n     */\n    function deploy(address proxyOwner, address tokenOwner, address items) external returns (address proxyAddr);\n\n    /**\n     * Computes the address of a proxy instance.\n     * @param proxyOwner The owner of the ERC-1155 Sale proxy\n     * @param tokenOwner The owner of the ERC-1155 Sale implementation\n     * @param items The ERC-1155 Items contract address\n     * @return proxyAddr The address of the ERC-1155 Sale Proxy\n     */\n    function determineAddress(address proxyOwner, address tokenOwner, address items) external returns (address proxyAddr);\n}\n\ninterface IERC1155SaleFactorySignals {\n    /**\n     * Event emitted when a new ERC-1155 Sale proxy contract is deployed.\n     * @param proxyAddr The address of the deployed proxy.\n     */\n    event ERC1155SaleDeployed(address proxyAddr);\n}\n\ninterface IERC1155SaleFactory is IERC1155SaleFactoryFunctions, IERC1155SaleFactorySignals {}\n"
			},
			"src/tokens/ERC1155/utility/sale/ERC1155Sale.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {\n    IERC1155Sale,\n    IERC1155SaleFunctions\n} from \"@0xsequence/contracts-library/tokens/ERC1155/utility/sale/IERC1155Sale.sol\";\nimport {ERC1155Supply} from \"@0xsequence/contracts-library/tokens/ERC1155/extensions/supply/ERC1155Supply.sol\";\nimport {\n    WithdrawControlled,\n    AccessControlEnumerable,\n    SafeERC20,\n    IERC20\n} from \"@0xsequence/contracts-library/tokens/common/WithdrawControlled.sol\";\nimport {MerkleProofSingleUse} from \"@0xsequence/contracts-library/tokens/common/MerkleProofSingleUse.sol\";\n\nimport {IERC1155} from \"@0xsequence/erc-1155/contracts/interfaces/IERC1155.sol\";\nimport {IERC1155SupplyFunctions} from\n    \"@0xsequence/contracts-library/tokens/ERC1155/extensions/supply/IERC1155Supply.sol\";\nimport {IERC1155ItemsFunctions} from \"@0xsequence/contracts-library/tokens/ERC1155/presets/items/IERC1155Items.sol\";\n\ncontract ERC1155Sale is IERC1155Sale, WithdrawControlled, MerkleProofSingleUse {\n    bytes32 internal constant MINT_ADMIN_ROLE = keccak256(\"MINT_ADMIN_ROLE\");\n\n    bool private _initialized;\n    address private _items;\n\n    // ERC20 token address for payment. address(0) indicated payment in ETH.\n    address private _paymentToken;\n\n    SaleDetails private _globalSaleDetails;\n    mapping(uint256 => SaleDetails) private _tokenSaleDetails;\n\n    /**\n     * Initialize the contract.\n     * @param owner Owner address\n     * @param items The ERC-1155 Items contract address\n     * @dev This should be called immediately after deployment.\n     */\n    function initialize(address owner, address items) public virtual {\n        if (_initialized) {\n            revert InvalidInitialization();\n        }\n\n        _items = items;\n\n        _grantRole(DEFAULT_ADMIN_ROLE, owner);\n        _grantRole(MINT_ADMIN_ROLE, owner);\n        _grantRole(WITHDRAW_ROLE, owner);\n\n        _initialized = true;\n    }\n\n    /**\n     * Checks if the current block.timestamp is out of the give timestamp range.\n     * @param _startTime Earliest acceptable timestamp (inclusive).\n     * @param _endTime Latest acceptable timestamp (exclusive).\n     * @dev A zero endTime value is always considered out of bounds.\n     */\n    function _blockTimeOutOfBounds(uint256 _startTime, uint256 _endTime) private view returns (bool) {\n        // 0 end time indicates inactive sale.\n        return _endTime == 0 || block.timestamp < _startTime || block.timestamp >= _endTime; // solhint-disable-line not-rely-on-time\n    }\n\n    /**\n     * Checks the sale is active and takes payment.\n     * @param _tokenIds Token IDs to mint.\n     * @param _amounts Amounts of tokens to mint.\n     * @param _expectedPaymentToken ERC20 token address to accept payment in. address(0) indicates ETH.\n     * @param _maxTotal Maximum amount of payment tokens.\n     * @param _proof Merkle proof for allowlist minting.\n     */\n    function _payForActiveMint(\n        uint256[] memory _tokenIds,\n        uint256[] memory _amounts,\n        address _expectedPaymentToken,\n        uint256 _maxTotal,\n        bytes32[] calldata _proof\n    )\n        private\n    {\n        uint256 lastTokenId;\n        uint256 totalCost;\n        uint256 totalAmount;\n\n        SaleDetails memory gSaleDetails = _globalSaleDetails;\n        bool globalSaleInactive = _blockTimeOutOfBounds(gSaleDetails.startTime, gSaleDetails.endTime);\n        bool globalMerkleCheckRequired = false;\n        for (uint256 i; i < _tokenIds.length; i++) {\n            uint256 tokenId = _tokenIds[i];\n            // Test tokenIds ordering\n            if (i != 0 && lastTokenId >= tokenId) {\n                revert InvalidTokenIds();\n            }\n            lastTokenId = tokenId;\n\n            uint256 amount = _amounts[i];\n\n            // Active sale test\n            SaleDetails memory saleDetails = _tokenSaleDetails[tokenId];\n            bool tokenSaleInactive = _blockTimeOutOfBounds(saleDetails.startTime, saleDetails.endTime);\n            if (tokenSaleInactive) {\n                // Prefer token sale\n                if (globalSaleInactive) {\n                    // Both sales inactive\n                    revert SaleInactive(tokenId);\n                }\n                // Use global sale details\n                globalMerkleCheckRequired = true;\n                totalCost += gSaleDetails.cost * amount;\n            } else {\n                // Use token sale details\n                requireMerkleProof(saleDetails.merkleRoot, _proof, msg.sender, bytes32(tokenId));\n                totalCost += saleDetails.cost * amount;\n            }\n            totalAmount += amount;\n        }\n\n        if (globalMerkleCheckRequired) {\n            // Check it once outside the loop only when required\n            requireMerkleProof(gSaleDetails.merkleRoot, _proof, msg.sender, bytes32(type(uint256).max));\n        }\n\n        if (_expectedPaymentToken != _paymentToken) {\n            // Caller expected different payment token\n            revert InsufficientPayment(_paymentToken, totalCost, 0);\n        }\n        if (_maxTotal < totalCost) {\n            // Caller expected to pay less\n            revert InsufficientPayment(_expectedPaymentToken, totalCost, _maxTotal);\n        }\n        if (_expectedPaymentToken == address(0)) {\n            // Paid in ETH\n            if (msg.value != totalCost) {\n                // We expect exact value match\n                revert InsufficientPayment(_expectedPaymentToken, totalCost, msg.value);\n            }\n        } else if (msg.value > 0) {\n            // Paid in ERC20, but sent ETH\n            revert InsufficientPayment(address(0), 0, msg.value);\n        } else {\n            // Paid in ERC20\n            SafeERC20.safeTransferFrom(IERC20(_expectedPaymentToken), msg.sender, address(this), totalCost);\n        }\n    }\n\n    //\n    // Minting\n    //\n\n    /**\n     * Mint tokens.\n     * @param to Address to mint tokens to.\n     * @param tokenIds Token IDs to mint.\n     * @param amounts Amounts of tokens to mint.\n     * @param data Data to pass if receiver is contract.\n     * @param expectedPaymentToken ERC20 token address to accept payment in. address(0) indicates ETH.\n     * @param maxTotal Maximum amount of payment tokens.\n     * @param proof Merkle proof for allowlist minting.\n     * @notice Sale must be active for all tokens.\n     * @dev tokenIds must be sorted ascending without duplicates.\n     * @dev An empty proof is supplied when no proof is required.\n     */\n    function mint(\n        address to,\n        uint256[] memory tokenIds,\n        uint256[] memory amounts,\n        bytes memory data,\n        address expectedPaymentToken,\n        uint256 maxTotal,\n        bytes32[] calldata proof\n    )\n        public\n        payable\n    {\n        _payForActiveMint(tokenIds, amounts, expectedPaymentToken, maxTotal, proof);\n\n        IERC1155SupplyFunctions items = IERC1155SupplyFunctions(_items);\n        uint256 totalAmount = 0;\n        uint256 nMint = tokenIds.length;\n        for (uint256 i = 0; i < nMint; i++) {\n            // Update storage balance\n            uint256 tokenSupplyCap = _tokenSaleDetails[tokenIds[i]].supplyCap;\n            if (\n                tokenSupplyCap > 0 && items.tokenSupply(tokenIds[i]) + amounts[i] > tokenSupplyCap\n            ) {\n                revert InsufficientSupply(items.tokenSupply(tokenIds[i]), amounts[i], tokenSupplyCap);\n            }\n            totalAmount += amounts[i];\n        }\n        uint256 totalSupplyCap = _globalSaleDetails.supplyCap;\n        if (totalSupplyCap > 0 && items.totalSupply() + totalAmount > totalSupplyCap) {\n            revert InsufficientSupply(items.totalSupply(), totalAmount, totalSupplyCap);\n        }\n\n        IERC1155ItemsFunctions(_items).batchMint(to, tokenIds, amounts, data);\n    }\n\n    //\n    // Admin\n    //\n\n    /**\n     * Set the payment token.\n     * @param paymentTokenAddr The ERC20 token address to accept payment in. address(0) indicates ETH.\n     * @dev This should be set before the sale starts.\n     */\n    function setPaymentToken(address paymentTokenAddr) public onlyRole(MINT_ADMIN_ROLE) {\n        _paymentToken = paymentTokenAddr;\n    }\n\n    /**\n     * Set the global sale details.\n     * @param cost The amount of payment tokens to accept for each token minted.\n     * @param supplyCap The maximum number of tokens that can be minted.\n     * @param startTime The start time of the sale. Tokens cannot be minted before this time.\n     * @param endTime The end time of the sale. Tokens cannot be minted after this time.\n     * @param merkleRoot The merkle root for allowlist minting.\n     * @dev A zero end time indicates an inactive sale.\n     * @notice The payment token is set globally.\n     */\n    function setGlobalSaleDetails(\n        uint256 cost,\n        uint256 supplyCap,\n        uint64 startTime,\n        uint64 endTime,\n        bytes32 merkleRoot\n    )\n        public\n        onlyRole(MINT_ADMIN_ROLE)\n    {\n        // solhint-disable-next-line not-rely-on-time\n        if (endTime < startTime || endTime <= block.timestamp) {\n            revert InvalidSaleDetails();\n        }\n        _globalSaleDetails = SaleDetails(cost, supplyCap, startTime, endTime, merkleRoot);\n        emit GlobalSaleDetailsUpdated(cost, supplyCap, startTime, endTime, merkleRoot);\n    }\n\n    /**\n     * Set the sale details for an individual token.\n     * @param tokenId The token ID to set the sale details for.\n     * @param cost The amount of payment tokens to accept for each token minted.\n     * @param supplyCap The maximum number of tokens that can be minted.\n     * @param startTime The start time of the sale. Tokens cannot be minted before this time.\n     * @param endTime The end time of the sale. Tokens cannot be minted after this time.\n     * @param merkleRoot The merkle root for allowlist minting.\n     * @dev A zero end time indicates an inactive sale.\n     * @notice The payment token is set globally.\n     */\n    function setTokenSaleDetails(\n        uint256 tokenId,\n        uint256 cost,\n        uint256 supplyCap,\n        uint64 startTime,\n        uint64 endTime,\n        bytes32 merkleRoot\n    )\n        public\n        onlyRole(MINT_ADMIN_ROLE)\n    {\n        // solhint-disable-next-line not-rely-on-time\n        if (endTime < startTime || endTime <= block.timestamp) {\n            revert InvalidSaleDetails();\n        }\n        _tokenSaleDetails[tokenId] = SaleDetails(cost, supplyCap, startTime, endTime, merkleRoot);\n        emit TokenSaleDetailsUpdated(tokenId, cost, supplyCap, startTime, endTime, merkleRoot);\n    }\n\n    //\n    // Views\n    //\n\n    /**\n     * Get global sales details.\n     * @return Sale details.\n     * @notice Global sales details apply to all tokens.\n     * @notice Global sales details are overriden when token sale is active.\n     */\n    function globalSaleDetails() external view returns (SaleDetails memory) {\n        return _globalSaleDetails;\n    }\n\n    /**\n     * Get token sale details.\n     * @param tokenId Token ID to get sale details for.\n     * @return Sale details.\n     * @notice Token sale details override global sale details.\n     */\n    function tokenSaleDetails(uint256 tokenId) external view returns (SaleDetails memory) {\n        return _tokenSaleDetails[tokenId];\n    }\n\n    /**\n     * Get payment token.\n     * @return Payment token address.\n     * @notice address(0) indicates payment in ETH.\n     */\n    function paymentToken() external view returns (address) {\n        return _paymentToken;\n    }\n\n    /**\n     * Check interface support.\n     * @param interfaceId Interface id\n     * @return True if supported\n     */\n    function supportsInterface(bytes4 interfaceId)\n        public\n        view\n        virtual\n        override (AccessControlEnumerable)\n        returns (bool)\n    {\n        return type(IERC1155SaleFunctions).interfaceId == interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"src/tokens/ERC1155/presets/items/IERC1155Items.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\ninterface IERC1155ItemsFunctions {\n    /**\n     * Mint tokens.\n     * @param to Address to mint tokens to.\n     * @param tokenId Token ID to mint.\n     * @param amount Amount of tokens to mint.\n     * @param data Data to pass if receiver is contract.\n     */\n    function mint(address to, uint256 tokenId, uint256 amount, bytes memory data) external;\n\n    /**\n     * Mint tokens.\n     * @param to Address to mint tokens to.\n     * @param tokenIds Token IDs to mint.\n     * @param amounts Amounts of tokens to mint.\n     * @param data Data to pass if receiver is contract.\n     */\n    function batchMint(address to, uint256[] memory tokenIds, uint256[] memory amounts, bytes memory data) external;\n}\n\ninterface IERC1155ItemsSignals {\n    /**\n     * Invalid initialization error.\n     */\n    error InvalidInitialization();\n}\n\ninterface IERC1155Items is IERC1155ItemsFunctions, IERC1155ItemsSignals {}\n"
			},
			"src/tokens/ERC1155/extensions/supply/IERC1155Supply.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\ninterface IERC1155SupplyFunctions {\n\n    /**\n     * Returns the total supply of ERC1155 tokens.\n     */\n    function totalSupply() external returns (uint256);\n\n    /**\n     * Returns the total supply of a given ERC1155 token.\n     * @param tokenId The ERC1155 token id.\n     */\n    function tokenSupply(uint256 tokenId) external returns (uint256);\n}\n\ninterface IERC1155SupplySignals {\n\n    /**\n     * Invalid array input length.\n     */\n    error InvalidArrayLength();\n}\n\ninterface IERC1155Supply is IERC1155SupplySignals {}\n"
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\nimport './IERC165.sol';\r\n\r\n\r\ninterface IERC1155 is IERC165 {\r\n\r\n  /****************************************|\r\n  |                 Events                 |\r\n  |_______________________________________*/\r\n\r\n  /**\r\n   * @dev Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning\r\n   *   Operator MUST be msg.sender\r\n   *   When minting/creating tokens, the `_from` field MUST be set to `0x0`\r\n   *   When burning/destroying tokens, the `_to` field MUST be set to `0x0`\r\n   *   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID\r\n   *   To broadcast the existence of a token ID with no initial balance, the contract SHOULD emit the TransferSingle event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\r\n   */\r\n  event TransferSingle(address indexed _operator, address indexed _from, address indexed _to, uint256 _id, uint256 _amount);\r\n\r\n  /**\r\n   * @dev Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning\r\n   *   Operator MUST be msg.sender\r\n   *   When minting/creating tokens, the `_from` field MUST be set to `0x0`\r\n   *   When burning/destroying tokens, the `_to` field MUST be set to `0x0`\r\n   *   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID\r\n   *   To broadcast the existence of multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\r\n   */\r\n  event TransferBatch(address indexed _operator, address indexed _from, address indexed _to, uint256[] _ids, uint256[] _amounts);\r\n\r\n  /**\r\n   * @dev MUST emit when an approval is updated\r\n   */\r\n  event ApprovalForAll(address indexed _owner, address indexed _operator, bool _approved);\r\n\r\n\r\n  /****************************************|\r\n  |                Functions               |\r\n  |_______________________________________*/\r\n\r\n  /**\r\n    * @notice Transfers amount of an _id from the _from address to the _to address specified\r\n    * @dev MUST emit TransferSingle event on success\r\n    * Caller must be approved to manage the _from account's tokens (see isApprovedForAll)\r\n    * MUST throw if `_to` is the zero address\r\n    * MUST throw if balance of sender for token `_id` is lower than the `_amount` sent\r\n    * MUST throw on any other error\r\n    * When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155Received` on `_to` and revert if the return amount is not `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n    * @param _from    Source address\r\n    * @param _to      Target address\r\n    * @param _id      ID of the token type\r\n    * @param _amount  Transfered amount\r\n    * @param _data    Additional data with no specified format, sent in call to `_to`\r\n    */\r\n  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _amount, bytes calldata _data) external;\r\n\r\n  /**\r\n    * @notice Send multiple types of Tokens from the _from address to the _to address (with safety call)\r\n    * @dev MUST emit TransferBatch event on success\r\n    * Caller must be approved to manage the _from account's tokens (see isApprovedForAll)\r\n    * MUST throw if `_to` is the zero address\r\n    * MUST throw if length of `_ids` is not the same as length of `_amounts`\r\n    * MUST throw if any of the balance of sender for token `_ids` is lower than the respective `_amounts` sent\r\n    * MUST throw on any other error\r\n    * When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155BatchReceived` on `_to` and revert if the return amount is not `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n    * Transfers and events MUST occur in the array order they were submitted (_ids[0] before _ids[1], etc)\r\n    * @param _from     Source addresses\r\n    * @param _to       Target addresses\r\n    * @param _ids      IDs of each token type\r\n    * @param _amounts  Transfer amounts per token type\r\n    * @param _data     Additional data with no specified format, sent in call to `_to`\r\n  */\r\n  function safeBatchTransferFrom(address _from, address _to, uint256[] calldata _ids, uint256[] calldata _amounts, bytes calldata _data) external;\r\n\r\n  /**\r\n   * @notice Get the balance of an account's Tokens\r\n   * @param _owner  The address of the token holder\r\n   * @param _id     ID of the Token\r\n   * @return        The _owner's balance of the Token type requested\r\n   */\r\n  function balanceOf(address _owner, uint256 _id) external view returns (uint256);\r\n\r\n  /**\r\n   * @notice Get the balance of multiple account/token pairs\r\n   * @param _owners The addresses of the token holders\r\n   * @param _ids    ID of the Tokens\r\n   * @return        The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\r\n   */\r\n  function balanceOfBatch(address[] calldata _owners, uint256[] calldata _ids) external view returns (uint256[] memory);\r\n\r\n  /**\r\n   * @notice Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens\r\n   * @dev MUST emit the ApprovalForAll event on success\r\n   * @param _operator  Address to add to the set of authorized operators\r\n   * @param _approved  True if the operator is approved, false to revoke approval\r\n   */\r\n  function setApprovalForAll(address _operator, bool _approved) external;\r\n\r\n  /**\r\n   * @notice Queries the approval status of an operator for a given owner\r\n   * @param _owner     The owner of the Tokens\r\n   * @param _operator  Address of authorized operator\r\n   * @return isOperator True if the operator is approved, false if not\r\n   */\r\n  function isApprovedForAll(address _owner, address _operator) external view returns (bool isOperator);\r\n}\r\n"
			},
			"src/tokens/common/MerkleProofSingleUse.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {IMerkleProofSingleUse} from \"@0xsequence/contracts-library/tokens/common/IMerkleProofSingleUse.sol\";\nimport {MerkleProof} from \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\n/**\n * Require single use merkle proofs per address.\n */\nabstract contract MerkleProofSingleUse is IMerkleProofSingleUse {\n    // Stores proofs used by an address\n    mapping(address => mapping(bytes32 => bool)) private _proofUsed;\n\n    /**\n     * Requires the given merkle proof to be valid.\n     * @param root Merkle root.\n     * @param proof Merkle proof.\n     * @param addr Address to check.\n     * @param salt Salt used to generate the merkle leaf.\n     * @notice Fails when the proof is invalid or the proof has already been claimed by this address.\n     * @dev This function reverts on failure.\n     */\n    function requireMerkleProof(bytes32 root, bytes32[] calldata proof, address addr, bytes32 salt) internal {\n        if (root != bytes32(0)) {\n            if (!checkMerkleProof(root, proof, addr, salt)) {\n                revert MerkleProofInvalid(root, proof, addr, salt);\n            }\n            _proofUsed[addr][root] = true;\n        }\n    }\n\n    /**\n     * Checks if the given merkle proof is valid.\n     * @param root Merkle root.\n     * @param proof Merkle proof.\n     * @param addr Address to check.\n     * @param salt Salt used to generate the merkle leaf.\n     * @return True if the proof is valid and has not yet been used by {addr}.\n     */\n    function checkMerkleProof(bytes32 root, bytes32[] calldata proof, address addr, bytes32 salt)\n        public\n        view\n        returns (bool)\n    {\n        return !_proofUsed[addr][root] && MerkleProof.verify(proof, root, keccak256(abi.encodePacked(addr, salt)));\n    }\n}\n"
			},
			"src/tokens/common/WithdrawControlled.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {IWithdrawControlled} from \"@0xsequence/contracts-library/tokens/common/IWithdrawControlled.sol\";\nimport {SafeERC20, IERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {AccessControlEnumerable} from \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\n\n/**\n * An abstract contract that allows ETH and ERC20 tokens stored in the contract to be withdrawn.\n */\nabstract contract WithdrawControlled is AccessControlEnumerable, IWithdrawControlled {\n    bytes32 internal constant WITHDRAW_ROLE = keccak256(\"WITHDRAW_ROLE\");\n\n    //\n    // Withdraw\n    //\n\n    /**\n     * Withdraws ERC20 tokens owned by this contract.\n     * @param token The ERC20 token address.\n     * @param to Address to withdraw to.\n     * @param value Amount to withdraw.\n     * @notice Only callable by an address with the withdraw role.\n     */\n    function withdrawERC20(address token, address to, uint256 value) public onlyRole(WITHDRAW_ROLE) {\n        SafeERC20.safeTransfer(IERC20(token), to, value);\n    }\n\n    /**\n     * Withdraws ETH owned by this sale contract.\n     * @param to Address to withdraw to.\n     * @param value Amount to withdraw.\n     * @notice Only callable by an address with the withdraw role.\n     */\n    function withdrawETH(address to, uint256 value) public onlyRole(WITHDRAW_ROLE) {\n        (bool success,) = to.call{value: value}(\"\");\n        if (!success) {\n            revert WithdrawFailed();\n        }\n    }\n}\n"
			},
			"src/tokens/ERC1155/extensions/supply/ERC1155Supply.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {ERC1155} from \"@0xsequence/erc-1155/contracts/tokens/ERC1155/ERC1155.sol\";\nimport {\n    IERC1155Supply,\n    IERC1155SupplyFunctions\n} from \"@0xsequence/contracts-library/tokens/ERC1155/extensions/supply/IERC1155Supply.sol\";\n\n/**\n * An ERC-1155 extension that tracks token supply.\n */\nabstract contract ERC1155Supply is ERC1155, IERC1155Supply {\n    // Current supply\n    uint256 public totalSupply;\n    mapping(uint256 => uint256) public tokenSupply;\n\n    /**\n     * Mint _amount of tokens of a given id\n     * @param _to The address to mint tokens to\n     * @param _id Token id to mint\n     * @param _amount The amount to be minted\n     * @param _data Data to pass if receiver is contract\n     */\n    function _mint(address _to, uint256 _id, uint256 _amount, bytes memory _data) internal virtual {\n        totalSupply += _amount;\n        tokenSupply[_id] += _amount;\n        balances[_to][_id] += _amount;\n\n        emit TransferSingle(msg.sender, address(0x0), _to, _id, _amount);\n\n        _callonERC1155Received(address(0x0), _to, _id, _amount, gasleft(), _data);\n    }\n\n    /**\n     * Mint tokens for each ids in _ids\n     * @param _to The address to mint tokens to\n     * @param _ids Array of ids to mint\n     * @param _amounts Array of amount of tokens to mint per id\n     * @param _data Data to pass if receiver is contract\n     */\n    function _batchMint(address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _data)\n        internal\n        virtual\n    {\n        uint256 nMint = _ids.length;\n        if (nMint != _amounts.length) {\n            revert InvalidArrayLength();\n        }\n\n        // Executing all minting\n        uint256 totalAmount = 0;\n        for (uint256 i = 0; i < nMint; i++) {\n            // Update storage balance\n            balances[_to][_ids[i]] += _amounts[i];\n            tokenSupply[_ids[i]] += _amounts[i];\n            totalAmount += _amounts[i];\n        }\n        totalSupply += totalAmount;\n\n        emit TransferBatch(msg.sender, address(0x0), _to, _ids, _amounts);\n\n        // Calling onReceive method if recipient is contract\n        _callonERC1155BatchReceived(address(0x0), _to, _ids, _amounts, gasleft(), _data);\n    }\n\n    /**\n     * Burn _amount of tokens of a given token id\n     * @param _from The address to burn tokens from\n     * @param _id Token id to burn\n     * @param _amount The amount to be burned\n     */\n    function _burn(address _from, uint256 _id, uint256 _amount) internal virtual {\n        // Supply\n        totalSupply -= _amount;\n        tokenSupply[_id] -= _amount;\n\n        // Balances\n        balances[_from][_id] -= _amount;\n\n        // Emit event\n        emit TransferSingle(msg.sender, _from, address(0x0), _id, _amount);\n    }\n\n    /**\n     * Burn tokens of given token id for each (_ids[i], _amounts[i]) pair\n     * @param _from The address to burn tokens from\n     * @param _ids Array of token ids to burn\n     * @param _amounts Array of the amount to be burned\n     */\n    function _batchBurn(address _from, uint256[] memory _ids, uint256[] memory _amounts) internal virtual {\n        uint256 nBurn = _ids.length;\n        if (nBurn != _amounts.length) {\n            revert InvalidArrayLength();\n        }\n\n        uint256 totalAmount = 0;\n        for (uint256 i = 0; i < nBurn; i++) {\n            // Update balances\n            balances[_from][_ids[i]] -= _amounts[i];\n            tokenSupply[_ids[i]] -= _amounts[i];\n            totalAmount += _amounts[i];\n        }\n        totalSupply -= totalAmount;\n\n        // Emit batch mint event\n        emit TransferBatch(msg.sender, _from, address(0x0), _ids, _amounts);\n    }\n\n    //\n    // Views\n    //\n\n    /**\n     * Check interface support.\n     * @param interfaceId Interface id\n     * @return True if supported\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override (ERC1155) returns (bool) {\n        return type(IERC1155SupplyFunctions).interfaceId == interfaceId || super.supportsInterface(interfaceId);\n    }\n}\n"
			},
			"src/tokens/ERC1155/utility/sale/IERC1155Sale.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\ninterface IERC1155SaleFunctions {\n\n    struct SaleDetails {\n        uint256 cost;\n        uint256 supplyCap; // 0 supply cap indicates unlimited supply\n        uint64 startTime;\n        uint64 endTime; // 0 end time indicates sale inactive\n        bytes32 merkleRoot; // Root of allowed addresses\n    }\n\n    /**\n     * Get global sales details.\n     * @return Sale details.\n     * @notice Global sales details apply to all tokens.\n     * @notice Global sales details are overriden when token sale is active.\n     */\n    function globalSaleDetails() external returns (SaleDetails memory);\n\n    /**\n     * Get token sale details.\n     * @param tokenId Token ID to get sale details for.\n     * @return Sale details.\n     * @notice Token sale details override global sale details.\n     */\n    function tokenSaleDetails(uint256 tokenId) external returns (SaleDetails memory);\n\n    /**\n     * Get payment token.\n     * @return Payment token address.\n     * @notice address(0) indicates payment in ETH.\n     */\n    function paymentToken() external returns (address);\n\n    /**\n     * Mint tokens.\n     * @param to Address to mint tokens to.\n     * @param tokenIds Token IDs to mint.\n     * @param amounts Amounts of tokens to mint.\n     * @param data Data to pass if receiver is contract.\n     * @param paymentToken ERC20 token address to accept payment in. address(0) indicates ETH.\n     * @param maxTotal Maximum amount of payment tokens.\n     * @param proof Merkle proof for allowlist minting.\n     * @notice Sale must be active for all tokens.\n     * @dev tokenIds must be sorted ascending without duplicates.\n     * @dev An empty proof is supplied when no proof is required.\n     */\n    function mint(\n        address to,\n        uint256[] memory tokenIds,\n        uint256[] memory amounts,\n        bytes memory data,\n        address paymentToken,\n        uint256 maxTotal,\n        bytes32[] calldata proof\n    )\n        external\n        payable;\n}\n\ninterface IERC1155SaleSignals {\n\n    event GlobalSaleDetailsUpdated(uint256 cost, uint256 supplyCap, uint64 startTime, uint64 endTime, bytes32 merkleRoot);\n    event TokenSaleDetailsUpdated(uint256 tokenId, uint256 cost, uint256 supplyCap, uint64 startTime, uint64 endTime, bytes32 merkleRoot);\n\n    /**\n     * Contract already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * Sale details supplied are invalid.\n     */\n    error InvalidSaleDetails();\n\n    /**\n     * Sale is not active globally.\n     */\n    error GlobalSaleInactive();\n\n    /**\n     * Sale is not active.\n     * @param tokenId Invalid Token ID.\n     */\n    error SaleInactive(uint256 tokenId);\n\n    /**\n     * Insufficient tokens for payment.\n     * @param currency Currency address. address(0) indicates ETH.\n     * @param expected Expected amount of tokens.\n     * @param actual Actual amount of tokens.\n     */\n    error InsufficientPayment(address currency, uint256 expected, uint256 actual);\n\n    /**\n     * Invalid token IDs.\n     */\n    error InvalidTokenIds();\n\n    /**\n     * Insufficient supply of tokens.\n     */\n    error InsufficientSupply(uint256 currentSupply, uint256 requestedAmount, uint256 maxSupply);\n}\n\ninterface IERC1155Sale is IERC1155SaleFunctions, IERC1155SaleSignals {}\n"
			},
			"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/UpgradeableBeacon.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IBeacon.sol\";\r\nimport \"../../access/Ownable.sol\";\r\nimport \"../../utils/Address.sol\";\r\n\r\n/**\r\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\r\n * implementation contract, which is where they will delegate all function calls.\r\n *\r\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\r\n */\r\ncontract UpgradeableBeacon is IBeacon, Ownable {\r\n    address private _implementation;\r\n\r\n    /**\r\n     * @dev Emitted when the implementation returned by the beacon is changed.\r\n     */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\r\n     * beacon.\r\n     */\r\n    constructor(address implementation_) {\r\n        _setImplementation(implementation_);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function implementation() public view virtual override returns (address) {\r\n        return _implementation;\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrades the beacon to a new implementation.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - msg.sender must be the owner of the contract.\r\n     * - `newImplementation` must be a contract.\r\n     */\r\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets the implementation contract address for this beacon\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `newImplementation` must be a contract.\r\n     */\r\n    function _setImplementation(address newImplementation) private {\r\n        require(Address.isContract(newImplementation), \"UpgradeableBeacon: implementation is not a contract\");\r\n        _implementation = newImplementation;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../utils/Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby disabling any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/utils/Create2.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\r\n * `CREATE2` can be used to compute in advance the address where a smart\r\n * contract will be deployed, which allows for interesting new mechanisms known\r\n * as 'counterfactual interactions'.\r\n *\r\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\r\n * information.\r\n */\r\nlibrary Create2 {\r\n    /**\r\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\r\n     * will be deployed can be known in advance via {computeAddress}.\r\n     *\r\n     * The bytecode for a contract can be obtained from Solidity with\r\n     * `type(contractName).creationCode`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `bytecode` must not be empty.\r\n     * - `salt` must have not been used for `bytecode` already.\r\n     * - the factory must have a balance of at least `amount`.\r\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\r\n     */\r\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\r\n        require(address(this).balance >= amount, \"Create2: insufficient balance\");\r\n        require(bytecode.length != 0, \"Create2: bytecode length is zero\");\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\r\n        }\r\n        require(addr != address(0), \"Create2: Failed on deploy\");\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\r\n     * `bytecodeHash` or `salt` will result in a new destination address.\r\n     */\r\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\r\n        return computeAddress(salt, bytecodeHash, address(this));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\r\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\r\n     */\r\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            let ptr := mload(0x40) // Get free memory pointer\r\n\r\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\r\n            // |-------------------|---------------------------------------------------------------------------|\r\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\r\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\r\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\r\n            // | 0xFF              |            FF                                                             |\r\n            // |-------------------|---------------------------------------------------------------------------|\r\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\r\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\r\n\r\n            mstore(add(ptr, 0x40), bytecodeHash)\r\n            mstore(add(ptr, 0x20), salt)\r\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\r\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\r\n            mstore8(start, 0xff)\r\n            addr := keccak256(start, 85)\r\n        }\r\n    }\r\n}\r\n"
			},
			"src/proxies/TransparentUpgradeableBeaconProxy.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\nimport {BeaconProxy, Proxy} from \"./openzeppelin/BeaconProxy.sol\";\nimport {TransparentUpgradeableProxy, ERC1967Proxy} from \"./openzeppelin/TransparentUpgradeableProxy.sol\";\n\ninterface ITransparentUpgradeableBeaconProxy {\n    function initialize(address admin, address beacon, bytes memory data) external;\n}\n\nerror InvalidInitialization();\n\n/**\n * @dev As the underlying proxy implementation (TransparentUpgradeableProxy) allows the admin to call the implementation,\n * care must be taken to avoid proxy selector collisions. Implementation selectors must not conflict with the proxy selectors.\n * See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing].\n * The proxy selectors are:\n * - 0xcf7a1d77: initialize\n * - 0x3659cfe6: upgradeTo (from TransparentUpgradeableProxy)\n * - 0x4f1ef286: upgradeToAndCall (from TransparentUpgradeableProxy)\n * - 0x8f283970: changeAdmin (from TransparentUpgradeableProxy)\n * - 0xf851a440: admin (from TransparentUpgradeableProxy)\n * - 0x5c60da1b: implementation (from TransparentUpgradeableProxy)\n */\ncontract TransparentUpgradeableBeaconProxy is TransparentUpgradeableProxy, BeaconProxy {\n    /**\n     * Decode the initialization data from the msg.data and call the initialize function.\n     */\n    function _dispatchInitialize() private returns (bytes memory) {\n        _requireZeroValue();\n\n        (address admin, address beacon, bytes memory data) = abi.decode(msg.data[4:], (address, address, bytes));\n        initialize(admin, beacon, data);\n\n        return \"\";\n    }\n\n    function initialize(address admin, address beacon, bytes memory data) internal {\n        if (_admin() != address(0)) {\n            // Redundant call. This function can only be called when the admin is not set.\n            revert InvalidInitialization();\n        }\n        _changeAdmin(admin);\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n\n    /**\n     * @dev If the admin is not set, the fallback function is used to initialize the proxy.\n     * @dev If the admin is set, the fallback function is used to delegatecall the implementation.\n     */\n    function _fallback() internal override (TransparentUpgradeableProxy, Proxy) {\n        if (_getAdmin() == address(0)) {\n            bytes memory ret;\n            bytes4 selector = msg.sig;\n            if (selector == ITransparentUpgradeableBeaconProxy.initialize.selector) {\n                ret = _dispatchInitialize();\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    return(add(ret, 0x20), mload(ret))\n                }\n            }\n            // When the admin is not set, the fallback function is used to initialize the proxy.\n            revert InvalidInitialization();\n        }\n        TransparentUpgradeableProxy._fallback();\n    }\n\n    /**\n     * Returns the current implementation address.\n     * @dev This is the implementation address set by the admin, or the beacon implementation.\n     */\n    function _implementation() internal view override (ERC1967Proxy, BeaconProxy) returns (address) {\n        address implementation = ERC1967Proxy._implementation();\n        if (implementation != address(0)) {\n            return implementation;\n        }\n        return BeaconProxy._implementation();\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IAccessControlEnumerable.sol\";\r\nimport \"./AccessControl.sol\";\r\nimport \"../utils/structs/EnumerableSet.sol\";\r\n\r\n/**\r\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\r\n */\r\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\r\n    using EnumerableSet for EnumerableSet.AddressSet;\r\n\r\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns one of the accounts that have `role`. `index` must be a\r\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\r\n     *\r\n     * Role bearers are not sorted in any particular way, and their ordering may\r\n     * change at any point.\r\n     *\r\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\r\n     * you perform all queries on the same block. See the following\r\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\r\n     * for more information.\r\n     */\r\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\r\n        return _roleMembers[role].at(index);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of accounts that have `role`. Can be used\r\n     * together with {getRoleMember} to enumerate all bearers of a role.\r\n     */\r\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\r\n        return _roleMembers[role].length();\r\n    }\r\n\r\n    /**\r\n     * @dev Overload {_grantRole} to track enumerable memberships\r\n     */\r\n    function _grantRole(bytes32 role, address account) internal virtual override {\r\n        super._grantRole(role, account);\r\n        _roleMembers[role].add(account);\r\n    }\r\n\r\n    /**\r\n     * @dev Overload {_revokeRole} to track enumerable memberships\r\n     */\r\n    function _revokeRole(bytes32 role, address account) internal virtual override {\r\n        super._revokeRole(role, account);\r\n        _roleMembers[role].remove(account);\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC20.sol\";\r\nimport \"../extensions/IERC20Permit.sol\";\r\nimport \"../../../utils/Address.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    /**\r\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\r\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        uint256 oldAllowance = token.allowance(address(this), spender);\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\r\n    }\r\n\r\n    /**\r\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful.\r\n     */\r\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\r\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\r\n     * to be set to zero before setting it to a non-zero value, such as USDT.\r\n     */\r\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\r\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\r\n\r\n        if (!_callOptionalReturnBool(token, approvalCall)) {\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\r\n            _callOptionalReturn(token, approvalCall);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\r\n     * Revert on invalid signature.\r\n     */\r\n    function safePermit(\r\n        IERC20Permit token,\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) internal {\r\n        uint256 nonceBefore = token.nonces(owner);\r\n        token.permit(owner, spender, value, deadline, v, r, s);\r\n        uint256 nonceAfter = token.nonces(owner);\r\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     *\r\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\r\n     */\r\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\r\n        // and not revert is the subcall reverts.\r\n\r\n        (bool success, bytes memory returndata) = address(token).call(data);\r\n        return\r\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\r\n    }\r\n}\r\n"
			},
			"src/tokens/common/IWithdrawControlled.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\ninterface IWithdrawControlledFunctions {\n\n    /**\n     * Withdraws ERC20 tokens owned by this contract.\n     * @param token The ERC20 token address.\n     * @param to Address to withdraw to.\n     * @param value Amount to withdraw.\n     */\n    function withdrawERC20(address token, address to, uint256 value) external;\n\n    /**\n     * Withdraws ETH owned by this sale contract.\n     * @param to Address to withdraw to.\n     * @param value Amount to withdraw.\n     */\n    function withdrawETH(address to, uint256 value) external;\n}\n\ninterface IWithdrawControlledSignals {\n\n    /**\n     * Withdraw failed error.\n     */\n    error WithdrawFailed();\n}\n\ninterface IWithdrawControlled is IWithdrawControlledFunctions, IWithdrawControlledSignals {}\n"
			},
			"lib/openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.2) (utils/cryptography/MerkleProof.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev These functions deal with verification of Merkle Tree proofs.\r\n *\r\n * The tree and the proofs can be generated using our\r\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\r\n * You will find a quickstart guide in the readme.\r\n *\r\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\r\n * hashing, or use a hash function other than keccak256 for hashing leaves.\r\n * This is because the concatenation of a sorted pair of internal nodes in\r\n * the merkle tree could be reinterpreted as a leaf value.\r\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\r\n * against this attack out of the box.\r\n */\r\nlibrary MerkleProof {\r\n    /**\r\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\r\n     * defined by `root`. For this, a `proof` must be provided, containing\r\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\r\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\r\n     */\r\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\r\n        return processProof(proof, leaf) == root;\r\n    }\r\n\r\n    /**\r\n     * @dev Calldata version of {verify}\r\n     *\r\n     * _Available since v4.7._\r\n     */\r\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\r\n        return processProofCalldata(proof, leaf) == root;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\r\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\r\n     * hash matches the root of the tree. When processing the proof, the pairs\r\n     * of leafs & pre-images are assumed to be sorted.\r\n     *\r\n     * _Available since v4.4._\r\n     */\r\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\r\n        bytes32 computedHash = leaf;\r\n        for (uint256 i = 0; i < proof.length; i++) {\r\n            computedHash = _hashPair(computedHash, proof[i]);\r\n        }\r\n        return computedHash;\r\n    }\r\n\r\n    /**\r\n     * @dev Calldata version of {processProof}\r\n     *\r\n     * _Available since v4.7._\r\n     */\r\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\r\n        bytes32 computedHash = leaf;\r\n        for (uint256 i = 0; i < proof.length; i++) {\r\n            computedHash = _hashPair(computedHash, proof[i]);\r\n        }\r\n        return computedHash;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\r\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\r\n     *\r\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\r\n     *\r\n     * _Available since v4.7._\r\n     */\r\n    function multiProofVerify(\r\n        bytes32[] memory proof,\r\n        bool[] memory proofFlags,\r\n        bytes32 root,\r\n        bytes32[] memory leaves\r\n    ) internal pure returns (bool) {\r\n        return processMultiProof(proof, proofFlags, leaves) == root;\r\n    }\r\n\r\n    /**\r\n     * @dev Calldata version of {multiProofVerify}\r\n     *\r\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\r\n     *\r\n     * _Available since v4.7._\r\n     */\r\n    function multiProofVerifyCalldata(\r\n        bytes32[] calldata proof,\r\n        bool[] calldata proofFlags,\r\n        bytes32 root,\r\n        bytes32[] memory leaves\r\n    ) internal pure returns (bool) {\r\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\r\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\r\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\r\n     * respectively.\r\n     *\r\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\r\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\r\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\r\n     *\r\n     * _Available since v4.7._\r\n     */\r\n    function processMultiProof(\r\n        bytes32[] memory proof,\r\n        bool[] memory proofFlags,\r\n        bytes32[] memory leaves\r\n    ) internal pure returns (bytes32 merkleRoot) {\r\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\r\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\r\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\r\n        // the merkle tree.\r\n        uint256 leavesLen = leaves.length;\r\n        uint256 proofLen = proof.length;\r\n        uint256 totalHashes = proofFlags.length;\r\n\r\n        // Check proof validity.\r\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\r\n\r\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\r\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\r\n        bytes32[] memory hashes = new bytes32[](totalHashes);\r\n        uint256 leafPos = 0;\r\n        uint256 hashPos = 0;\r\n        uint256 proofPos = 0;\r\n        // At each step, we compute the next hash using two values:\r\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\r\n        //   get the next hash.\r\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\r\n        //   `proof` array.\r\n        for (uint256 i = 0; i < totalHashes; i++) {\r\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\r\n            bytes32 b = proofFlags[i]\r\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\r\n                : proof[proofPos++];\r\n            hashes[i] = _hashPair(a, b);\r\n        }\r\n\r\n        if (totalHashes > 0) {\r\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\r\n            unchecked {\r\n                return hashes[totalHashes - 1];\r\n            }\r\n        } else if (leavesLen > 0) {\r\n            return leaves[0];\r\n        } else {\r\n            return proof[0];\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calldata version of {processMultiProof}.\r\n     *\r\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\r\n     *\r\n     * _Available since v4.7._\r\n     */\r\n    function processMultiProofCalldata(\r\n        bytes32[] calldata proof,\r\n        bool[] calldata proofFlags,\r\n        bytes32[] memory leaves\r\n    ) internal pure returns (bytes32 merkleRoot) {\r\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\r\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\r\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\r\n        // the merkle tree.\r\n        uint256 leavesLen = leaves.length;\r\n        uint256 proofLen = proof.length;\r\n        uint256 totalHashes = proofFlags.length;\r\n\r\n        // Check proof validity.\r\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\r\n\r\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\r\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\r\n        bytes32[] memory hashes = new bytes32[](totalHashes);\r\n        uint256 leafPos = 0;\r\n        uint256 hashPos = 0;\r\n        uint256 proofPos = 0;\r\n        // At each step, we compute the next hash using two values:\r\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\r\n        //   get the next hash.\r\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\r\n        //   `proof` array.\r\n        for (uint256 i = 0; i < totalHashes; i++) {\r\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\r\n            bytes32 b = proofFlags[i]\r\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\r\n                : proof[proofPos++];\r\n            hashes[i] = _hashPair(a, b);\r\n        }\r\n\r\n        if (totalHashes > 0) {\r\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\r\n            unchecked {\r\n                return hashes[totalHashes - 1];\r\n            }\r\n        } else if (leavesLen > 0) {\r\n            return leaves[0];\r\n        } else {\r\n            return proof[0];\r\n        }\r\n    }\r\n\r\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\r\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\r\n    }\r\n\r\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            mstore(0x00, a)\r\n            mstore(0x20, b)\r\n            value := keccak256(0x00, 0x40)\r\n        }\r\n    }\r\n}\r\n"
			},
			"src/tokens/common/IMerkleProofSingleUse.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.19;\n\ninterface IMerkleProofSingleUseFunctions {\n    /**\n     * Checks if the given merkle proof is valid.\n     * @param root Merkle root.\n     * @param proof Merkle proof.\n     * @param addr Address to check.\n     * @param salt Salt used to generate the merkle leaf.\n     * @return True if the proof is valid and has not yet been used by {addr}.\n     */\n    function checkMerkleProof(bytes32 root, bytes32[] calldata proof, address addr, bytes32 salt)\n        external\n        view\n        returns (bool);\n}\n\ninterface IMerkleProofSingleUseSignals {\n    /**\n     * Thrown when the merkle proof is invalid or has already been used.\n     * @param root Merkle root.\n     * @param proof Merkle proof.\n     * @param addr Address to check.\n     * @param salt Salt used to generate the merkle leaf.\n     */\n    error MerkleProofInvalid(bytes32 root, bytes32[] proof, address addr, bytes32 salt);\n}\n\ninterface IMerkleProofSingleUse is IMerkleProofSingleUseFunctions, IMerkleProofSingleUseSignals {}\n"
			},
			"lib/0xsequence/erc-1155/src/contracts/tokens/ERC1155/ERC1155.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../../interfaces/IERC1155TokenReceiver.sol\";\r\nimport \"../../interfaces/IERC1155.sol\";\r\nimport \"../../utils/Address.sol\";\r\nimport \"../../utils/ERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of Multi-Token Standard contract\r\n */\r\ncontract ERC1155 is IERC1155, ERC165 {\r\n  using Address for address;\r\n\r\n  /***********************************|\r\n  |        Variables and Events       |\r\n  |__________________________________*/\r\n\r\n  // onReceive function signatures\r\n  bytes4 constant internal ERC1155_RECEIVED_VALUE = 0xf23a6e61;\r\n  bytes4 constant internal ERC1155_BATCH_RECEIVED_VALUE = 0xbc197c81;\r\n\r\n  // Objects balances\r\n  mapping (address => mapping(uint256 => uint256)) internal balances;\r\n\r\n  // Operator Functions\r\n  mapping (address => mapping(address => bool)) internal operators;\r\n\r\n\r\n  /***********************************|\r\n  |     Public Transfer Functions     |\r\n  |__________________________________*/\r\n\r\n  /**\r\n   * @notice Transfers amount amount of an _id from the _from address to the _to address specified\r\n   * @param _from    Source address\r\n   * @param _to      Target address\r\n   * @param _id      ID of the token type\r\n   * @param _amount  Transfered amount\r\n   * @param _data    Additional data with no specified format, sent in call to `_to`\r\n   */\r\n  function safeTransferFrom(address _from, address _to, uint256 _id, uint256 _amount, bytes memory _data)\r\n    public virtual override\r\n  {\r\n    require((msg.sender == _from) || isApprovedForAll(_from, msg.sender), \"ERC1155#safeTransferFrom: INVALID_OPERATOR\");\r\n    require(_to != address(0),\"ERC1155#safeTransferFrom: INVALID_RECIPIENT\");\r\n\r\n    _safeTransferFrom(_from, _to, _id, _amount);\r\n    _callonERC1155Received(_from, _to, _id, _amount, gasleft(), _data);\r\n  }\r\n\r\n  /**\r\n   * @notice Send multiple types of Tokens from the _from address to the _to address (with safety call)\r\n   * @param _from     Source addresses\r\n   * @param _to       Target addresses\r\n   * @param _ids      IDs of each token type\r\n   * @param _amounts  Transfer amounts per token type\r\n   * @param _data     Additional data with no specified format, sent in call to `_to`\r\n   */\r\n  function safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts, bytes memory _data)\r\n    public virtual override\r\n  {\r\n    // Requirements\r\n    require((msg.sender == _from) || isApprovedForAll(_from, msg.sender), \"ERC1155#safeBatchTransferFrom: INVALID_OPERATOR\");\r\n    require(_to != address(0), \"ERC1155#safeBatchTransferFrom: INVALID_RECIPIENT\");\r\n\r\n    _safeBatchTransferFrom(_from, _to, _ids, _amounts);\r\n    _callonERC1155BatchReceived(_from, _to, _ids, _amounts, gasleft(), _data);\r\n  }\r\n\r\n\r\n  /***********************************|\r\n  |    Internal Transfer Functions    |\r\n  |__________________________________*/\r\n\r\n  /**\r\n   * @notice Transfers amount amount of an _id from the _from address to the _to address specified\r\n   * @param _from    Source address\r\n   * @param _to      Target address\r\n   * @param _id      ID of the token type\r\n   * @param _amount  Transfered amount\r\n   */\r\n  function _safeTransferFrom(address _from, address _to, uint256 _id, uint256 _amount)\r\n    internal virtual\r\n  {\r\n    // Update balances\r\n    balances[_from][_id] -= _amount;\r\n    balances[_to][_id] += _amount;\r\n\r\n    // Emit event\r\n    emit TransferSingle(msg.sender, _from, _to, _id, _amount);\r\n  }\r\n\r\n  /**\r\n   * @notice Verifies if receiver is contract and if so, calls (_to).onERC1155Received(...)\r\n   */\r\n  function _callonERC1155Received(address _from, address _to, uint256 _id, uint256 _amount, uint256 _gasLimit, bytes memory _data)\r\n    internal virtual\r\n  {\r\n    // Check if recipient is contract\r\n    if (_to.isContract()) {\r\n      bytes4 retval = IERC1155TokenReceiver(_to).onERC1155Received{gas: _gasLimit}(msg.sender, _from, _id, _amount, _data);\r\n      require(retval == ERC1155_RECEIVED_VALUE, \"ERC1155#_callonERC1155Received: INVALID_ON_RECEIVE_MESSAGE\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @notice Send multiple types of Tokens from the _from address to the _to address (with safety call)\r\n   * @param _from     Source addresses\r\n   * @param _to       Target addresses\r\n   * @param _ids      IDs of each token type\r\n   * @param _amounts  Transfer amounts per token type\r\n   */\r\n  function _safeBatchTransferFrom(address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts)\r\n    internal virtual\r\n  {\r\n    require(_ids.length == _amounts.length, \"ERC1155#_safeBatchTransferFrom: INVALID_ARRAYS_LENGTH\");\r\n\r\n    // Number of transfer to execute\r\n    uint256 nTransfer = _ids.length;\r\n\r\n    // Executing all transfers\r\n    for (uint256 i = 0; i < nTransfer; i++) {\r\n      // Update storage balance of previous bin\r\n      balances[_from][_ids[i]] -= _amounts[i];\r\n      balances[_to][_ids[i]] += _amounts[i];\r\n    }\r\n\r\n    // Emit event\r\n    emit TransferBatch(msg.sender, _from, _to, _ids, _amounts);\r\n  }\r\n\r\n  /**\r\n   * @notice Verifies if receiver is contract and if so, calls (_to).onERC1155BatchReceived(...)\r\n   */\r\n  function _callonERC1155BatchReceived(address _from, address _to, uint256[] memory _ids, uint256[] memory _amounts, uint256 _gasLimit, bytes memory _data)\r\n    internal virtual\r\n  {\r\n    // Pass data if recipient is contract\r\n    if (_to.isContract()) {\r\n      bytes4 retval = IERC1155TokenReceiver(_to).onERC1155BatchReceived{gas: _gasLimit}(msg.sender, _from, _ids, _amounts, _data);\r\n      require(retval == ERC1155_BATCH_RECEIVED_VALUE, \"ERC1155#_callonERC1155BatchReceived: INVALID_ON_RECEIVE_MESSAGE\");\r\n    }\r\n  }\r\n\r\n\r\n  /***********************************|\r\n  |         Operator Functions        |\r\n  |__________________________________*/\r\n\r\n  /**\r\n   * @notice Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens\r\n   * @param _operator  Address to add to the set of authorized operators\r\n   * @param _approved  True if the operator is approved, false to revoke approval\r\n   */\r\n  function setApprovalForAll(address _operator, bool _approved)\r\n    external virtual override\r\n  {\r\n    // Update operator status\r\n    operators[msg.sender][_operator] = _approved;\r\n    emit ApprovalForAll(msg.sender, _operator, _approved);\r\n  }\r\n\r\n  /**\r\n   * @notice Queries the approval status of an operator for a given owner\r\n   * @param _owner     The owner of the Tokens\r\n   * @param _operator  Address of authorized operator\r\n   * @return isOperator True if the operator is approved, false if not\r\n   */\r\n  function isApprovedForAll(address _owner, address _operator)\r\n    public view virtual override returns (bool isOperator)\r\n  {\r\n    return operators[_owner][_operator];\r\n  }\r\n\r\n\r\n  /***********************************|\r\n  |         Balance Functions         |\r\n  |__________________________________*/\r\n\r\n  /**\r\n   * @notice Get the balance of an account's Tokens\r\n   * @param _owner  The address of the token holder\r\n   * @param _id     ID of the Token\r\n   * @return The _owner's balance of the Token type requested\r\n   */\r\n  function balanceOf(address _owner, uint256 _id)\r\n    public view virtual override returns (uint256)\r\n  {\r\n    return balances[_owner][_id];\r\n  }\r\n\r\n  /**\r\n   * @notice Get the balance of multiple account/token pairs\r\n   * @param _owners The addresses of the token holders\r\n   * @param _ids    ID of the Tokens\r\n   * @return        The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\r\n   */\r\n  function balanceOfBatch(address[] memory _owners, uint256[] memory _ids)\r\n    public view virtual override returns (uint256[] memory)\r\n  {\r\n    require(_owners.length == _ids.length, \"ERC1155#balanceOfBatch: INVALID_ARRAY_LENGTH\");\r\n\r\n    // Variables\r\n    uint256[] memory batchBalances = new uint256[](_owners.length);\r\n\r\n    // Iterate over each owner and token ID\r\n    for (uint256 i = 0; i < _owners.length; i++) {\r\n      batchBalances[i] = balances[_owners[i]][_ids[i]];\r\n    }\r\n\r\n    return batchBalances;\r\n  }\r\n\r\n\r\n  /***********************************|\r\n  |          ERC165 Functions         |\r\n  |__________________________________*/\r\n\r\n  /**\r\n   * @notice Query if a contract implements an interface\r\n   * @param _interfaceID  The interface identifier, as specified in ERC-165\r\n   * @return `true` if the contract implements `_interfaceID` and\r\n   */\r\n  function supportsInterface(bytes4 _interfaceID) public view virtual override(ERC165, IERC165) returns (bool) {\r\n    if (_interfaceID == type(IERC1155).interfaceId) {\r\n      return true;\r\n    }\r\n    return super.supportsInterface(_interfaceID);\r\n  }\r\n}\r\n"
			},
			"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\n\n/// @notice This implementation is a copy of OpenZeppelin's with the following changes:\n/// - Pragma updated\n/// - Imports updated\n/// - Constructor removed\n/// - Allows admin to call implementation\n\npragma solidity ^0.8.19;\n\nimport \"./ERC1967Proxy.sol\";\n\n/**\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\n * include them in the ABI so this interface must be used to interact with it.\n */\ninterface ITransparentUpgradeableProxy is IERC1967 {\n    function admin() external view returns (address);\n\n    function implementation() external view returns (address);\n\n    function changeAdmin(address) external;\n\n    function upgradeTo(address) external;\n\n    function upgradeToAndCall(address, bytes memory) external payable;\n}\n\n/**\n * @dev This contract implements a proxy that is upgradeable by an admin.\n *\n * Unlike the original OpenZeppelin implementation, this contract does not prevent the admin from calling the implementation.\n * This potentially exposes the admin to a proxy selector attack. See\n * https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing].\n * When using this contract, you must ensure that the implementation function selectors do not clash with the proxy selectors.\n * The proxy selectors are:\n * - 0x3659cfe6: upgradeTo\n * - 0x4f1ef286: upgradeToAndCall\n * - 0x8f283970: changeAdmin\n * - 0xf851a440: admin\n * - 0x5c60da1b: implementation\n *\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\n * implementation.\n *\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\n */\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\n    /**\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\n     *\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\n     * implementation provides a function with the same selector.\n     */\n    modifier ifAdmin() {\n        if (msg.sender == _getAdmin()) {\n            _;\n        } else {\n            _fallback();\n        }\n    }\n\n    /**\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\n     */\n    function _fallback() internal virtual override {\n        if (msg.sender == _getAdmin()) {\n            bytes memory ret;\n            bytes4 selector = msg.sig;\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\n                ret = _dispatchUpgradeTo();\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\n                ret = _dispatchUpgradeToAndCall();\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\n                ret = _dispatchChangeAdmin();\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\n                ret = _dispatchAdmin();\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\n                ret = _dispatchImplementation();\n            } else {\n                // Call implementation\n                return super._fallback();\n            }\n            assembly {\n                return(add(ret, 0x20), mload(ret))\n            }\n        } else {\n            super._fallback();\n        }\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function _dispatchAdmin() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address admin = _getAdmin();\n        return abi.encode(admin);\n    }\n\n    /**\n     * @dev Returns the current implementation.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _dispatchImplementation() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address implementation = _implementation();\n        return abi.encode(implementation);\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _dispatchChangeAdmin() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address newAdmin = abi.decode(msg.data[4:], (address));\n        _changeAdmin(newAdmin);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy.\n     */\n    function _dispatchUpgradeTo() private returns (bytes memory) {\n        _requireZeroValue();\n\n        address newImplementation = abi.decode(msg.data[4:], (address));\n        _upgradeToAndCall(newImplementation, bytes(\"\"), false);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\n     * proxied contract.\n     */\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\n        _upgradeToAndCall(newImplementation, data, true);\n\n        return \"\";\n    }\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\n     */\n    function _admin() internal view virtual returns (address) {\n        return _getAdmin();\n    }\n\n    /**\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\n     */\n    function _requireZeroValue() internal {\n        require(msg.value == 0);\n    }\n}\n"
			},
			"src/proxies/openzeppelin/BeaconProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/beacon/BeaconProxy.sol)\n\n// Note: This implementation is an exact copy with the constructor removed, and pragma and imports updated.\n\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\";\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\n *\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\n * conflict with the storage layout of the implementation behind the proxy.\n *\n * _Available since v3.4._\n */\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Returns the current beacon address.\n     */\n    function _beacon() internal view virtual returns (address) {\n        return _getBeacon();\n    }\n\n    /**\n     * @dev Returns the current implementation address of the associated beacon.\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return IBeacon(_getBeacon()).implementation();\n    }\n\n    /**\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\n     *\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\n     *\n     * Requirements:\n     *\n     * - `beacon` must be a contract.\n     * - The implementation returned by `beacon` must be a contract.\n     */\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\n        _upgradeBeaconToAndCall(beacon, data, false);\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\r\n\r\npragma solidity ^0.8.1;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     *\r\n     * Furthermore, `isContract` will also return true if the target contract within\r\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\r\n     * which only has an effect at the end of a transaction.\r\n     * ====\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\r\n     *\r\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\r\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\r\n     * constructor.\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize/address.code.length, which returns 0\r\n        // for contracts in construction, since the code is only stored at the end\r\n        // of the constructor execution.\r\n\r\n        return account.code.length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\r\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\r\n     *\r\n     * _Available since v4.8._\r\n     */\r\n    function verifyCallResultFromTarget(\r\n        address target,\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        if (success) {\r\n            if (returndata.length == 0) {\r\n                // only check isContract if the call was successful and the return data is empty\r\n                // otherwise we already know that it was a contract\r\n                require(isContract(target), \"Address: call to non-contract\");\r\n            }\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason or using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            _revert(returndata, errorMessage);\r\n        }\r\n    }\r\n\r\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\r\n        // Look for revert reason and bubble it up if present\r\n        if (returndata.length > 0) {\r\n            // The easiest way to bubble the revert reason is using memory via assembly\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                let returndata_size := mload(returndata)\r\n                revert(add(32, returndata), returndata_size)\r\n            }\r\n        } else {\r\n            revert(errorMessage);\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\r\n */\r\ninterface IBeacon {\r\n    /**\r\n     * @dev Must return an address that can be used as a delegate call target.\r\n     *\r\n     * {BeaconProxy} will check that this address is a contract.\r\n     */\r\n    function implementation() external view returns (address);\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\n\r\n/**\r\n * @title ERC165\r\n * @dev https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\r\n */\r\ninterface IERC165 {\r\n\r\n    /**\r\n     * @notice Query if a contract implements an interface\r\n     * @dev Interface identification is specified in ERC-165. This function\r\n     * uses less than 30,000 gas\r\n     * @param _interfaceId The interface identifier, as specified in ERC-165\r\n     */\r\n    function supportsInterface(bytes4 _interfaceId)\r\n    external\r\n    view\r\n    returns (bool);\r\n}\r\n"
			},
			"src/proxies/openzeppelin/ERC1967Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\n// Note: This implementation is an exact copy with the constructor removed, and pragma and imports updated.\n\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _implementation() internal view virtual override returns (address impl) {\n        return ERC1967Upgrade._getImplementation();\n    }\n}\n"
			},
			"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\r\n\r\npragma solidity ^0.8.2;\r\n\r\nimport \"../beacon/IBeacon.sol\";\r\nimport \"../../interfaces/IERC1967.sol\";\r\nimport \"../../interfaces/draft-IERC1822.sol\";\r\nimport \"../../utils/Address.sol\";\r\nimport \"../../utils/StorageSlot.sol\";\r\n\r\n/**\r\n * @dev This abstract contract provides getters and event emitting update functions for\r\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\r\n *\r\n * _Available since v4.1._\r\n */\r\nabstract contract ERC1967Upgrade is IERC1967 {\r\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\r\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\r\n\r\n    /**\r\n     * @dev Storage slot with the address of the current implementation.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function _getImplementation() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 implementation slot.\r\n     */\r\n    function _setImplementation(address newImplementation) private {\r\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\r\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n    }\r\n\r\n    /**\r\n     * @dev Perform implementation upgrade\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeTo(address newImplementation) internal {\r\n        _setImplementation(newImplementation);\r\n        emit Upgraded(newImplementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Perform implementation upgrade with additional setup call.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\r\n        _upgradeTo(newImplementation);\r\n        if (data.length > 0 || forceCall) {\r\n            Address.functionDelegateCall(newImplementation, data);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\r\n     *\r\n     * Emits an {Upgraded} event.\r\n     */\r\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\r\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\r\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\r\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\r\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\r\n            _setImplementation(newImplementation);\r\n        } else {\r\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\r\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\r\n            } catch {\r\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\r\n            }\r\n            _upgradeToAndCall(newImplementation, data, forceCall);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Storage slot with the admin of the contract.\r\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\r\n     * validated in the constructor.\r\n     */\r\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\r\n\r\n    /**\r\n     * @dev Returns the current admin.\r\n     */\r\n    function _getAdmin() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new address in the EIP1967 admin slot.\r\n     */\r\n    function _setAdmin(address newAdmin) private {\r\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\r\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the admin of the proxy.\r\n     *\r\n     * Emits an {AdminChanged} event.\r\n     */\r\n    function _changeAdmin(address newAdmin) internal {\r\n        emit AdminChanged(_getAdmin(), newAdmin);\r\n        _setAdmin(newAdmin);\r\n    }\r\n\r\n    /**\r\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\r\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\r\n     */\r\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\r\n\r\n    /**\r\n     * @dev Returns the current beacon.\r\n     */\r\n    function _getBeacon() internal view returns (address) {\r\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\r\n    }\r\n\r\n    /**\r\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\r\n     */\r\n    function _setBeacon(address newBeacon) private {\r\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\r\n        require(\r\n            Address.isContract(IBeacon(newBeacon).implementation()),\r\n            \"ERC1967: beacon implementation is not a contract\"\r\n        );\r\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\r\n    }\r\n\r\n    /**\r\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\r\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\r\n     *\r\n     * Emits a {BeaconUpgraded} event.\r\n     */\r\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\r\n        _setBeacon(newBeacon);\r\n        emit BeaconUpgraded(newBeacon);\r\n        if (data.length > 0 || forceCall) {\r\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\r\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\r\n * be specified by overriding the virtual {_implementation} function.\r\n *\r\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\r\n * different contract through the {_delegate} function.\r\n *\r\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\r\n */\r\nabstract contract Proxy {\r\n    /**\r\n     * @dev Delegates the current call to `implementation`.\r\n     *\r\n     * This function does not return to its internal call site, it will return directly to the external caller.\r\n     */\r\n    function _delegate(address implementation) internal virtual {\r\n        assembly {\r\n            // Copy msg.data. We take full control of memory in this inline assembly\r\n            // block because it will not return to Solidity code. We overwrite the\r\n            // Solidity scratch pad at memory position 0.\r\n            calldatacopy(0, 0, calldatasize())\r\n\r\n            // Call the implementation.\r\n            // out and outsize are 0 because we don't know the size yet.\r\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\r\n\r\n            // Copy the returned data.\r\n            returndatacopy(0, 0, returndatasize())\r\n\r\n            switch result\r\n            // delegatecall returns 0 on error.\r\n            case 0 {\r\n                revert(0, returndatasize())\r\n            }\r\n            default {\r\n                return(0, returndatasize())\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\r\n     * and {_fallback} should delegate.\r\n     */\r\n    function _implementation() internal view virtual returns (address);\r\n\r\n    /**\r\n     * @dev Delegates the current call to the address returned by `_implementation()`.\r\n     *\r\n     * This function does not return to its internal call site, it will return directly to the external caller.\r\n     */\r\n    function _fallback() internal virtual {\r\n        _beforeFallback();\r\n        _delegate(_implementation());\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\r\n     * function in the contract matches the call data.\r\n     */\r\n    fallback() external payable virtual {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\r\n     * is empty.\r\n     */\r\n    receive() external payable virtual {\r\n        _fallback();\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\r\n     * call, or as part of the Solidity `fallback` or `receive` functions.\r\n     *\r\n     * If overridden should call `super._beforeFallback()`.\r\n     */\r\n    function _beforeFallback() internal virtual {}\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\r\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\r\n *\r\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\r\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\r\n * need to send a transaction, and thus is not required to hold Ether at all.\r\n */\r\ninterface IERC20Permit {\r\n    /**\r\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\r\n     * given ``owner``'s signed approval.\r\n     *\r\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\r\n     * ordering also apply here.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `deadline` must be a timestamp in the future.\r\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\r\n     * over the EIP712-formatted function arguments.\r\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\r\n     *\r\n     * For more information on the signature format, see the\r\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\r\n     * section].\r\n     */\r\n    function permit(\r\n        address owner,\r\n        address spender,\r\n        uint256 value,\r\n        uint256 deadline,\r\n        uint8 v,\r\n        bytes32 r,\r\n        bytes32 s\r\n    ) external;\r\n\r\n    /**\r\n     * @dev Returns the current nonce for `owner`. This value must be\r\n     * included whenever a signature is generated for {permit}.\r\n     *\r\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\r\n     * prevents a signature from being used multiple times.\r\n     */\r\n    function nonces(address owner) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\r\n     */\r\n    // solhint-disable-next-line func-name-mixedcase\r\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\r\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for managing\r\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\r\n * types.\r\n *\r\n * Sets have the following properties:\r\n *\r\n * - Elements are added, removed, and checked for existence in constant time\r\n * (O(1)).\r\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\r\n *\r\n * ```solidity\r\n * contract Example {\r\n *     // Add the library methods\r\n *     using EnumerableSet for EnumerableSet.AddressSet;\r\n *\r\n *     // Declare a set state variable\r\n *     EnumerableSet.AddressSet private mySet;\r\n * }\r\n * ```\r\n *\r\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\r\n * and `uint256` (`UintSet`) are supported.\r\n *\r\n * [WARNING]\r\n * ====\r\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\r\n * unusable.\r\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\r\n *\r\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\r\n * array of EnumerableSet.\r\n * ====\r\n */\r\nlibrary EnumerableSet {\r\n    // To implement this library for multiple types with as little code\r\n    // repetition as possible, we write it in terms of a generic Set type with\r\n    // bytes32 values.\r\n    // The Set implementation uses private functions, and user-facing\r\n    // implementations (such as AddressSet) are just wrappers around the\r\n    // underlying Set.\r\n    // This means that we can only create new EnumerableSets for types that fit\r\n    // in bytes32.\r\n\r\n    struct Set {\r\n        // Storage of set values\r\n        bytes32[] _values;\r\n        // Position of the value in the `values` array, plus 1 because index 0\r\n        // means a value is not in the set.\r\n        mapping(bytes32 => uint256) _indexes;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function _add(Set storage set, bytes32 value) private returns (bool) {\r\n        if (!_contains(set, value)) {\r\n            set._values.push(value);\r\n            // The value is stored at length-1, but we add 1 to all indexes\r\n            // and use 0 as a sentinel value\r\n            set._indexes[value] = set._values.length;\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\r\n        // We read and store the value's index to prevent multiple reads from the same storage slot\r\n        uint256 valueIndex = set._indexes[value];\r\n\r\n        if (valueIndex != 0) {\r\n            // Equivalent to contains(set, value)\r\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\r\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\r\n            // This modifies the order of the array, as noted in {at}.\r\n\r\n            uint256 toDeleteIndex = valueIndex - 1;\r\n            uint256 lastIndex = set._values.length - 1;\r\n\r\n            if (lastIndex != toDeleteIndex) {\r\n                bytes32 lastValue = set._values[lastIndex];\r\n\r\n                // Move the last value to the index where the value to delete is\r\n                set._values[toDeleteIndex] = lastValue;\r\n                // Update the index for the moved value\r\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\r\n            }\r\n\r\n            // Delete the slot where the moved value was stored\r\n            set._values.pop();\r\n\r\n            // Delete the index for the deleted slot\r\n            delete set._indexes[value];\r\n\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\r\n        return set._indexes[value] != 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values on the set. O(1).\r\n     */\r\n    function _length(Set storage set) private view returns (uint256) {\r\n        return set._values.length;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\r\n        return set._values[index];\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function _values(Set storage set) private view returns (bytes32[] memory) {\r\n        return set._values;\r\n    }\r\n\r\n    // Bytes32Set\r\n\r\n    struct Bytes32Set {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _add(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\r\n        return _remove(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\r\n        return _contains(set._inner, value);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(Bytes32Set storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\r\n        return _at(set._inner, index);\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        bytes32[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // AddressSet\r\n\r\n    struct AddressSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(AddressSet storage set, address value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(AddressSet storage set, address value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(AddressSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\r\n        return address(uint160(uint256(_at(set._inner, index))));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(AddressSet storage set) internal view returns (address[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        address[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    // UintSet\r\n\r\n    struct UintSet {\r\n        Set _inner;\r\n    }\r\n\r\n    /**\r\n     * @dev Add a value to a set. O(1).\r\n     *\r\n     * Returns true if the value was added to the set, that is if it was not\r\n     * already present.\r\n     */\r\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _add(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Removes a value from a set. O(1).\r\n     *\r\n     * Returns true if the value was removed from the set, that is if it was\r\n     * present.\r\n     */\r\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\r\n        return _remove(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the value is in the set. O(1).\r\n     */\r\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\r\n        return _contains(set._inner, bytes32(value));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of values in the set. O(1).\r\n     */\r\n    function length(UintSet storage set) internal view returns (uint256) {\r\n        return _length(set._inner);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the value stored at position `index` in the set. O(1).\r\n     *\r\n     * Note that there are no guarantees on the ordering of values inside the\r\n     * array, and it may change when more values are added or removed.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `index` must be strictly less than {length}.\r\n     */\r\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\r\n        return uint256(_at(set._inner, index));\r\n    }\r\n\r\n    /**\r\n     * @dev Return the entire set in an array\r\n     *\r\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\r\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\r\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\r\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\r\n     */\r\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\r\n        bytes32[] memory store = _values(set._inner);\r\n        uint256[] memory result;\r\n\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            result := store\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IAccessControl.sol\";\r\nimport \"../utils/Context.sol\";\r\nimport \"../utils/Strings.sol\";\r\nimport \"../utils/introspection/ERC165.sol\";\r\n\r\n/**\r\n * @dev Contract module that allows children to implement role-based access\r\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\r\n * members except through off-chain means by accessing the contract event logs. Some\r\n * applications may benefit from on-chain enumerability, for those cases see\r\n * {AccessControlEnumerable}.\r\n *\r\n * Roles are referred to by their `bytes32` identifier. These should be exposed\r\n * in the external API and be unique. The best way to achieve this is by\r\n * using `public constant` hash digests:\r\n *\r\n * ```solidity\r\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\r\n * ```\r\n *\r\n * Roles can be used to represent a set of permissions. To restrict access to a\r\n * function call, use {hasRole}:\r\n *\r\n * ```solidity\r\n * function foo() public {\r\n *     require(hasRole(MY_ROLE, msg.sender));\r\n *     ...\r\n * }\r\n * ```\r\n *\r\n * Roles can be granted and revoked dynamically via the {grantRole} and\r\n * {revokeRole} functions. Each role has an associated admin role, and only\r\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\r\n *\r\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\r\n * that only accounts with this role will be able to grant or revoke other\r\n * roles. More complex role relationships can be created by using\r\n * {_setRoleAdmin}.\r\n *\r\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\r\n * grant and revoke this role. Extra precautions should be taken to secure\r\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\r\n * to enforce additional security measures for this role.\r\n */\r\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\r\n    struct RoleData {\r\n        mapping(address => bool) members;\r\n        bytes32 adminRole;\r\n    }\r\n\r\n    mapping(bytes32 => RoleData) private _roles;\r\n\r\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\r\n\r\n    /**\r\n     * @dev Modifier that checks that an account has a specific role. Reverts\r\n     * with a standardized message including the required role.\r\n     *\r\n     * The format of the revert reason is given by the following regular expression:\r\n     *\r\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\r\n     *\r\n     * _Available since v4.1._\r\n     */\r\n    modifier onlyRole(bytes32 role) {\r\n        _checkRole(role);\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\r\n        return _roles[role].members[account];\r\n    }\r\n\r\n    /**\r\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\r\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\r\n     *\r\n     * Format of the revert message is described in {_checkRole}.\r\n     *\r\n     * _Available since v4.6._\r\n     */\r\n    function _checkRole(bytes32 role) internal view virtual {\r\n        _checkRole(role, _msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Revert with a standard message if `account` is missing `role`.\r\n     *\r\n     * The format of the revert reason is given by the following regular expression:\r\n     *\r\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\r\n     */\r\n    function _checkRole(bytes32 role, address account) internal view virtual {\r\n        if (!hasRole(role, account)) {\r\n            revert(\r\n                string(\r\n                    abi.encodePacked(\r\n                        \"AccessControl: account \",\r\n                        Strings.toHexString(account),\r\n                        \" is missing role \",\r\n                        Strings.toHexString(uint256(role), 32)\r\n                    )\r\n                )\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\r\n        return _roles[role].adminRole;\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     */\r\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `account`.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function renounceRole(bytes32 role, address account) public virtual override {\r\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\r\n\r\n        _revokeRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event. Note that unlike {grantRole}, this function doesn't perform any\r\n     * checks on the calling account.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     *\r\n     * [WARNING]\r\n     * ====\r\n     * This function should only be called from the constructor when setting\r\n     * up the initial roles for the system.\r\n     *\r\n     * Using this function in any other way is effectively circumventing the admin\r\n     * system imposed by {AccessControl}.\r\n     * ====\r\n     *\r\n     * NOTE: This function is deprecated in favor of {_grantRole}.\r\n     */\r\n    function _setupRole(bytes32 role, address account) internal virtual {\r\n        _grantRole(role, account);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `adminRole` as ``role``'s admin role.\r\n     *\r\n     * Emits a {RoleAdminChanged} event.\r\n     */\r\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\r\n        bytes32 previousAdminRole = getRoleAdmin(role);\r\n        _roles[role].adminRole = adminRole;\r\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\r\n    }\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * Internal function without access restriction.\r\n     *\r\n     * May emit a {RoleGranted} event.\r\n     */\r\n    function _grantRole(bytes32 role, address account) internal virtual {\r\n        if (!hasRole(role, account)) {\r\n            _roles[role].members[account] = true;\r\n            emit RoleGranted(role, account, _msgSender());\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * Internal function without access restriction.\r\n     *\r\n     * May emit a {RoleRevoked} event.\r\n     */\r\n    function _revokeRole(bytes32 role, address account) internal virtual {\r\n        if (hasRole(role, account)) {\r\n            _roles[role].members[account] = false;\r\n            emit RoleRevoked(role, account, _msgSender());\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IAccessControl.sol\";\r\n\r\n/**\r\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\r\n */\r\ninterface IAccessControlEnumerable is IAccessControl {\r\n    /**\r\n     * @dev Returns one of the accounts that have `role`. `index` must be a\r\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\r\n     *\r\n     * Role bearers are not sorted in any particular way, and their ordering may\r\n     * change at any point.\r\n     *\r\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\r\n     * you perform all queries on the same block. See the following\r\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\r\n     * for more information.\r\n     */\r\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\r\n\r\n    /**\r\n     * @dev Returns the number of accounts that have `role`. Can be used\r\n     * together with {getRoleMember} to enumerate all bearers of a role.\r\n     */\r\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\r\n}\r\n"
			},
			"lib/0xsequence/erc-1155/src/contracts/utils/ERC165.sol": {
				"content": "pragma solidity ^0.8.0;\r\nimport \"../interfaces/IERC165.sol\";\r\n\r\nabstract contract ERC165 is IERC165 {\r\n  /**\r\n   * @notice Query if a contract implements an interface\r\n   * @param _interfaceID The interface identifier, as specified in ERC-165\r\n   * @return `true` if the contract implements `_interfaceID`\r\n   */\r\n  function supportsInterface(bytes4 _interfaceID) public view virtual override returns (bool) {\r\n    return _interfaceID == this.supportsInterface.selector;\r\n  }\r\n}\r\n"
			},
			"lib/0xsequence/erc-1155/src/contracts/utils/Address.sol": {
				"content": "pragma solidity ^0.8.0;\r\n\r\n/**\r\n * Utility library of inline functions on addresses\r\n */\r\nlibrary Address {\r\n\r\n  // Default hash for EOA accounts returned by extcodehash\r\n  bytes32 constant internal ACCOUNT_HASH = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\r\n\r\n  /**\r\n   * Returns whether the target address is a contract\r\n   * @dev This function will return false if invoked during the constructor of a contract.\r\n   * @param _address address of the account to check\r\n   * @return Whether the target address is a contract\r\n   */\r\n  function isContract(address _address) internal view returns (bool) {\r\n    bytes32 codehash;\r\n\r\n    // Currently there is no better way to check if there is a contract in an address\r\n    // than to check the size of the code at that address or if it has a non-zero code hash or account hash\r\n    assembly { codehash := extcodehash(_address) }\r\n    return (codehash != 0x0 && codehash != ACCOUNT_HASH);\r\n  }\r\n}\r\n"
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155TokenReceiver.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev ERC-1155 interface for accepting safe transfers.\r\n */\r\ninterface IERC1155TokenReceiver {\r\n\r\n  /**\r\n   * @notice Handle the receipt of a single ERC1155 token type\r\n   * @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated\r\n   * This function MAY throw to revert and reject the transfer\r\n   * Return of other amount than the magic value MUST result in the transaction being reverted\r\n   * Note: The token contract address is always the message sender\r\n   * @param _operator  The address which called the `safeTransferFrom` function\r\n   * @param _from      The address which previously owned the token\r\n   * @param _id        The id of the token being transferred\r\n   * @param _amount    The amount of tokens being transferred\r\n   * @param _data      Additional data with no specified format\r\n   * @return           `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\r\n   */\r\n  function onERC1155Received(address _operator, address _from, uint256 _id, uint256 _amount, bytes calldata _data) external returns(bytes4);\r\n\r\n  /**\r\n   * @notice Handle the receipt of multiple ERC1155 token types\r\n   * @dev An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated\r\n   * This function MAY throw to revert and reject the transfer\r\n   * Return of other amount than the magic value WILL result in the transaction being reverted\r\n   * Note: The token contract address is always the message sender\r\n   * @param _operator  The address which called the `safeBatchTransferFrom` function\r\n   * @param _from      The address which previously owned the token\r\n   * @param _ids       An array containing ids of each token being transferred\r\n   * @param _amounts   An array containing amounts of each token being transferred\r\n   * @param _data      Additional data with no specified format\r\n   * @return           `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\r\n   */\r\n  function onERC1155BatchReceived(address _operator, address _from, uint256[] calldata _ids, uint256[] calldata _amounts, bytes calldata _data) external returns(bytes4);\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\r\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Library for reading and writing primitive types to specific storage slots.\r\n *\r\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\r\n * This library helps with reading and writing to such slots without the need for inline assembly.\r\n *\r\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\r\n *\r\n * Example usage to set ERC1967 implementation slot:\r\n * ```solidity\r\n * contract ERC1967 {\r\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\r\n *\r\n *     function _getImplementation() internal view returns (address) {\r\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\r\n *     }\r\n *\r\n *     function _setImplementation(address newImplementation) internal {\r\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\r\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\r\n *     }\r\n * }\r\n * ```\r\n *\r\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\r\n * _Available since v4.9 for `string`, `bytes`._\r\n */\r\nlibrary StorageSlot {\r\n    struct AddressSlot {\r\n        address value;\r\n    }\r\n\r\n    struct BooleanSlot {\r\n        bool value;\r\n    }\r\n\r\n    struct Bytes32Slot {\r\n        bytes32 value;\r\n    }\r\n\r\n    struct Uint256Slot {\r\n        uint256 value;\r\n    }\r\n\r\n    struct StringSlot {\r\n        string value;\r\n    }\r\n\r\n    struct BytesSlot {\r\n        bytes value;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\r\n     */\r\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\r\n     */\r\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\r\n     */\r\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\r\n     */\r\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\r\n     */\r\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\r\n     */\r\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := slot\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\r\n     */\r\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\r\n        /// @solidity memory-safe-assembly\r\n        assembly {\r\n            r.slot := store.slot\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\r\n * proxy whose upgrades are fully controlled by the current implementation.\r\n */\r\ninterface IERC1822Proxiable {\r\n    /**\r\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\r\n     * address.\r\n     *\r\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\r\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\r\n     * function revert if invoked through a proxy.\r\n     */\r\n    function proxiableUUID() external view returns (bytes32);\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\r\n *\r\n * _Available since v4.8.3._\r\n */\r\ninterface IERC1967 {\r\n    /**\r\n     * @dev Emitted when the implementation is upgraded.\r\n     */\r\n    event Upgraded(address indexed implementation);\r\n\r\n    /**\r\n     * @dev Emitted when the admin account has changed.\r\n     */\r\n    event AdminChanged(address previousAdmin, address newAdmin);\r\n\r\n    /**\r\n     * @dev Emitted when the beacon is changed.\r\n     */\r\n    event BeaconUpgraded(address indexed beacon);\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev External interface of AccessControl declared to support ERC165 detection.\r\n */\r\ninterface IAccessControl {\r\n    /**\r\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\r\n     *\r\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\r\n     * {RoleAdminChanged} not being emitted signaling this.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is granted `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call, an admin role\r\n     * bearer except when using {AccessControl-_setupRole}.\r\n     */\r\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Emitted when `account` is revoked `role`.\r\n     *\r\n     * `sender` is the account that originated the contract call:\r\n     *   - if using `revokeRole`, it is the admin role bearer\r\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\r\n     */\r\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\r\n\r\n    /**\r\n     * @dev Returns `true` if `account` has been granted `role`.\r\n     */\r\n    function hasRole(bytes32 role, address account) external view returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\r\n     * {revokeRole}.\r\n     *\r\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\r\n     */\r\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\r\n\r\n    /**\r\n     * @dev Grants `role` to `account`.\r\n     *\r\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function grantRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from `account`.\r\n     *\r\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must have ``role``'s admin role.\r\n     */\r\n    function revokeRole(bytes32 role, address account) external;\r\n\r\n    /**\r\n     * @dev Revokes `role` from the calling account.\r\n     *\r\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\r\n     * purpose is to provide a mechanism for accounts to lose their privileges\r\n     * if they are compromised (such as when a trusted device is misplaced).\r\n     *\r\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\r\n     * event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be `account`.\r\n     */\r\n    function renounceRole(bytes32 role, address account) external;\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC165.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC165} interface.\r\n *\r\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\r\n * for the additional interface id that will be supported. For example:\r\n *\r\n * ```solidity\r\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\r\n * }\r\n * ```\r\n *\r\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\r\n */\r\nabstract contract ERC165 is IERC165 {\r\n    /**\r\n     * @dev See {IERC165-supportsInterface}.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return interfaceId == type(IERC165).interfaceId;\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./math/Math.sol\";\r\nimport \"./math/SignedMath.sol\";\r\n\r\n/**\r\n * @dev String operations.\r\n */\r\nlibrary Strings {\r\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\r\n    uint8 private constant _ADDRESS_LENGTH = 20;\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            uint256 length = Math.log10(value) + 1;\r\n            string memory buffer = new string(length);\r\n            uint256 ptr;\r\n            /// @solidity memory-safe-assembly\r\n            assembly {\r\n                ptr := add(buffer, add(32, length))\r\n            }\r\n            while (true) {\r\n                ptr--;\r\n                /// @solidity memory-safe-assembly\r\n                assembly {\r\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\r\n                }\r\n                value /= 10;\r\n                if (value == 0) break;\r\n            }\r\n            return buffer;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\r\n     */\r\n    function toString(int256 value) internal pure returns (string memory) {\r\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(uint256 value) internal pure returns (string memory) {\r\n        unchecked {\r\n            return toHexString(value, Math.log256(value) + 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\r\n     */\r\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\r\n        bytes memory buffer = new bytes(2 * length + 2);\r\n        buffer[0] = \"0\";\r\n        buffer[1] = \"x\";\r\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\r\n            buffer[i] = _SYMBOLS[value & 0xf];\r\n            value >>= 4;\r\n        }\r\n        require(value == 0, \"Strings: hex length insufficient\");\r\n        return string(buffer);\r\n    }\r\n\r\n    /**\r\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\r\n     */\r\n    function toHexString(address addr) internal pure returns (string memory) {\r\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the two strings are equal.\r\n     */\r\n    function equal(string memory a, string memory b) internal pure returns (bool) {\r\n        return keccak256(bytes(a)) == keccak256(bytes(b));\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC165 standard, as defined in the\r\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\r\n *\r\n * Implementers can declare support of contract interfaces, which can then be\r\n * queried by others ({ERC165Checker}).\r\n *\r\n * For an implementation, see {ERC165}.\r\n */\r\ninterface IERC165 {\r\n    /**\r\n     * @dev Returns true if this contract implements the interface defined by\r\n     * `interfaceId`. See the corresponding\r\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\r\n     * to learn more about how these ids are created.\r\n     *\r\n     * This function call must use less than 30 000 gas.\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Standard signed math utilities missing in the Solidity language.\r\n */\r\nlibrary SignedMath {\r\n    /**\r\n     * @dev Returns the largest of two signed numbers.\r\n     */\r\n    function max(int256 a, int256 b) internal pure returns (int256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two signed numbers.\r\n     */\r\n    function min(int256 a, int256 b) internal pure returns (int256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two signed numbers without overflow.\r\n     * The result is rounded towards zero.\r\n     */\r\n    function average(int256 a, int256 b) internal pure returns (int256) {\r\n        // Formula from the book \"Hacker's Delight\"\r\n        int256 x = (a & b) + ((a ^ b) >> 1);\r\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the absolute unsigned value of a signed value.\r\n     */\r\n    function abs(int256 n) internal pure returns (uint256) {\r\n        unchecked {\r\n            // must be unchecked in order to support `n = type(int256).min`\r\n            return uint256(n >= 0 ? n : -n);\r\n        }\r\n    }\r\n}\r\n"
			},
			"lib/openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Standard math utilities missing in the Solidity language.\r\n */\r\nlibrary Math {\r\n    enum Rounding {\r\n        Down, // Toward negative infinity\r\n        Up, // Toward infinity\r\n        Zero // Toward zero\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the largest of two numbers.\r\n     */\r\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a > b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the smallest of two numbers.\r\n     */\r\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a < b ? a : b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the average of two numbers. The result is rounded towards\r\n     * zero.\r\n     */\r\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b) / 2 can overflow.\r\n        return (a & b) + (a ^ b) / 2;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the ceiling of the division of two numbers.\r\n     *\r\n     * This differs from standard division with `/` in that it rounds up instead\r\n     * of rounding down.\r\n     */\r\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        // (a + b - 1) / b can overflow on addition, so we distribute.\r\n        return a == 0 ? 0 : (a - 1) / b + 1;\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\r\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\r\n     * with further edits by Uniswap Labs also under MIT license.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\r\n        unchecked {\r\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\r\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\r\n            // variables such that product = prod1 * 2^256 + prod0.\r\n            uint256 prod0; // Least significant 256 bits of the product\r\n            uint256 prod1; // Most significant 256 bits of the product\r\n            assembly {\r\n                let mm := mulmod(x, y, not(0))\r\n                prod0 := mul(x, y)\r\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\r\n            }\r\n\r\n            // Handle non-overflow cases, 256 by 256 division.\r\n            if (prod1 == 0) {\r\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\r\n                // The surrounding unchecked block does not change this fact.\r\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\r\n                return prod0 / denominator;\r\n            }\r\n\r\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\r\n            require(denominator > prod1, \"Math: mulDiv overflow\");\r\n\r\n            ///////////////////////////////////////////////\r\n            // 512 by 256 division.\r\n            ///////////////////////////////////////////////\r\n\r\n            // Make division exact by subtracting the remainder from [prod1 prod0].\r\n            uint256 remainder;\r\n            assembly {\r\n                // Compute remainder using mulmod.\r\n                remainder := mulmod(x, y, denominator)\r\n\r\n                // Subtract 256 bit number from 512 bit number.\r\n                prod1 := sub(prod1, gt(remainder, prod0))\r\n                prod0 := sub(prod0, remainder)\r\n            }\r\n\r\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\r\n            // See https://cs.stackexchange.com/q/138556/92363.\r\n\r\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\r\n            uint256 twos = denominator & (~denominator + 1);\r\n            assembly {\r\n                // Divide denominator by twos.\r\n                denominator := div(denominator, twos)\r\n\r\n                // Divide [prod1 prod0] by twos.\r\n                prod0 := div(prod0, twos)\r\n\r\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\r\n                twos := add(div(sub(0, twos), twos), 1)\r\n            }\r\n\r\n            // Shift in bits from prod1 into prod0.\r\n            prod0 |= prod1 * twos;\r\n\r\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\r\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\r\n            // four bits. That is, denominator * inv = 1 mod 2^4.\r\n            uint256 inverse = (3 * denominator) ^ 2;\r\n\r\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\r\n            // in modular arithmetic, doubling the correct bits in each step.\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\r\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\r\n\r\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\r\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\r\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\r\n            // is no longer required.\r\n            result = prod0 * inverse;\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\r\n     */\r\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\r\n        uint256 result = mulDiv(x, y, denominator);\r\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\r\n            result += 1;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\r\n     *\r\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) {\r\n            return 0;\r\n        }\r\n\r\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\r\n        //\r\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\r\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\r\n        //\r\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\r\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\r\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\r\n        //\r\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\r\n        uint256 result = 1 << (log2(a) >> 1);\r\n\r\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\r\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\r\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\r\n        // into the expected uint128 result.\r\n        unchecked {\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            result = (result + a / result) >> 1;\r\n            return min(result, a / result);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @notice Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = sqrt(a);\r\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 128;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 64;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 32;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 16;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                value >>= 8;\r\n                result += 8;\r\n            }\r\n            if (value >> 4 > 0) {\r\n                value >>= 4;\r\n                result += 4;\r\n            }\r\n            if (value >> 2 > 0) {\r\n                value >>= 2;\r\n                result += 2;\r\n            }\r\n            if (value >> 1 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log2(value);\r\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >= 10 ** 64) {\r\n                value /= 10 ** 64;\r\n                result += 64;\r\n            }\r\n            if (value >= 10 ** 32) {\r\n                value /= 10 ** 32;\r\n                result += 32;\r\n            }\r\n            if (value >= 10 ** 16) {\r\n                value /= 10 ** 16;\r\n                result += 16;\r\n            }\r\n            if (value >= 10 ** 8) {\r\n                value /= 10 ** 8;\r\n                result += 8;\r\n            }\r\n            if (value >= 10 ** 4) {\r\n                value /= 10 ** 4;\r\n                result += 4;\r\n            }\r\n            if (value >= 10 ** 2) {\r\n                value /= 10 ** 2;\r\n                result += 2;\r\n            }\r\n            if (value >= 10 ** 1) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log10(value);\r\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, rounded down, of a positive value.\r\n     * Returns 0 if given 0.\r\n     *\r\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\r\n     */\r\n    function log256(uint256 value) internal pure returns (uint256) {\r\n        uint256 result = 0;\r\n        unchecked {\r\n            if (value >> 128 > 0) {\r\n                value >>= 128;\r\n                result += 16;\r\n            }\r\n            if (value >> 64 > 0) {\r\n                value >>= 64;\r\n                result += 8;\r\n            }\r\n            if (value >> 32 > 0) {\r\n                value >>= 32;\r\n                result += 4;\r\n            }\r\n            if (value >> 16 > 0) {\r\n                value >>= 16;\r\n                result += 2;\r\n            }\r\n            if (value >> 8 > 0) {\r\n                result += 1;\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\r\n     * Returns 0 if given 0.\r\n     */\r\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\r\n        unchecked {\r\n            uint256 result = log256(value);\r\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\r\n        }\r\n    }\r\n}\r\n"
			}
		}
	},
	"output": {
		"contracts": {
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol": {
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOperator",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "MUST emit when an approval is updated"
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID   To broadcast the existence of multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0"
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID   To broadcast the existence of a token ID with no initial balance, the contract SHOULD emit the TransferSingle event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0"
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"params": {
									"_id": "ID of the Token",
									"_owner": "The address of the token holder"
								},
								"returns": {
									"_0": "The _owner's balance of the Token type requested"
								}
							},
							"balanceOfBatch(address[],uint256[])": {
								"params": {
									"_ids": "ID of the Tokens",
									"_owners": "The addresses of the token holders"
								},
								"returns": {
									"_0": "The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "Address of authorized operator",
									"_owner": "The owner of the Tokens"
								},
								"returns": {
									"isOperator": "True if the operator is approved, false if not"
								}
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "MUST emit TransferBatch event on success Caller must be approved to manage the _from account's tokens (see isApprovedForAll) MUST throw if `_to` is the zero address MUST throw if length of `_ids` is not the same as length of `_amounts` MUST throw if any of the balance of sender for token `_ids` is lower than the respective `_amounts` sent MUST throw on any other error When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155BatchReceived` on `_to` and revert if the return amount is not `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` Transfers and events MUST occur in the array order they were submitted (_ids[0] before _ids[1], etc)",
								"params": {
									"_amounts": "Transfer amounts per token type",
									"_data": "Additional data with no specified format, sent in call to `_to`",
									"_from": "Source addresses",
									"_ids": "IDs of each token type",
									"_to": "Target addresses"
								}
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "MUST emit TransferSingle event on success Caller must be approved to manage the _from account's tokens (see isApprovedForAll) MUST throw if `_to` is the zero address MUST throw if balance of sender for token `_id` is lower than the `_amount` sent MUST throw on any other error When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155Received` on `_to` and revert if the return amount is not `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`",
								"params": {
									"_amount": "Transfered amount",
									"_data": "Additional data with no specified format, sent in call to `_to`",
									"_from": "Source address",
									"_id": "ID of the token type",
									"_to": "Target address"
								}
							},
							"setApprovalForAll(address,bool)": {
								"details": "MUST emit the ApprovalForAll event on success",
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas",
								"params": {
									"_interfaceId": "The interface identifier, as specified in ERC-165"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"MUST emit when an approval is updated\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \\\"circulating supply\\\" for a given token ID   To broadcast the existence of multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \\\"circulating supply\\\" for a given token ID   To broadcast the existence of a token ID with no initial balance, the contract SHOULD emit the TransferSingle event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"_id\":\"ID of the Token\",\"_owner\":\"The address of the token holder\"},\"returns\":{\"_0\":\"The _owner's balance of the Token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"params\":{\"_ids\":\"ID of the Tokens\",\"_owners\":\"The addresses of the token holders\"},\"returns\":{\"_0\":\"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"Address of authorized operator\",\"_owner\":\"The owner of the Tokens\"},\"returns\":{\"isOperator\":\"True if the operator is approved, false if not\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"MUST emit TransferBatch event on success Caller must be approved to manage the _from account's tokens (see isApprovedForAll) MUST throw if `_to` is the zero address MUST throw if length of `_ids` is not the same as length of `_amounts` MUST throw if any of the balance of sender for token `_ids` is lower than the respective `_amounts` sent MUST throw on any other error When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155BatchReceived` on `_to` and revert if the return amount is not `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` Transfers and events MUST occur in the array order they were submitted (_ids[0] before _ids[1], etc)\",\"params\":{\"_amounts\":\"Transfer amounts per token type\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source addresses\",\"_ids\":\"IDs of each token type\",\"_to\":\"Target addresses\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"MUST emit TransferSingle event on success Caller must be approved to manage the _from account's tokens (see isApprovedForAll) MUST throw if `_to` is the zero address MUST throw if balance of sender for token `_id` is lower than the `_amount` sent MUST throw on any other error When transfer is complete, this function MUST check if `_to` is a smart contract (code size > 0). If so, it MUST call `onERC1155Received` on `_to` and revert if the return amount is not `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\",\"params\":{\"_amount\":\"Transfered amount\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source address\",\"_id\":\"ID of the token type\",\"_to\":\"Target address\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"MUST emit the ApprovalForAll event on success\",\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas\",\"params\":{\"_interfaceId\":\"The interface identifier, as specified in ERC-165\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens\"},\"balanceOfBatch(address[],uint256[])\":{\"notice\":\"Get the balance of multiple account/token pairs\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Send multiple types of Tokens from the _from address to the _to address (with safety call)\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Transfers amount of an _id from the _from address to the _to address specified\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of caller's tokens\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x73a4ea88c195262c79aed1a8ad6da1e599e0ebe3911a89014e410dae6debda74\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d9f63f1c107c912620de676785b876f798f1563fee4fee897d45012daf52131\",\"dweb:/ipfs/QmQTvyVSZCUYjjo95yGgQgQvKzTBhb9fRbuzKvpmP5v5aQ\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address,uint256)": {
								"notice": "Get the balance of an account's Tokens"
							},
							"balanceOfBatch(address[],uint256[])": {
								"notice": "Get the balance of multiple account/token pairs"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Queries the approval status of an operator for a given owner"
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"notice": "Send multiple types of Tokens from the _from address to the _to address (with safety call)"
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"notice": "Transfers amount of an _id from the _from address to the _to address specified"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens"
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155TokenReceiver.sol": {
				"IERC1155TokenReceiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1155 interface for accepting safe transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated This function MAY throw to revert and reject the transfer Return of other amount than the magic value WILL result in the transaction being reverted Note: The token contract address is always the message sender",
								"params": {
									"_amounts": "An array containing amounts of each token being transferred",
									"_data": "Additional data with no specified format",
									"_from": "The address which previously owned the token",
									"_ids": "An array containing ids of each token being transferred",
									"_operator": "The address which called the `safeBatchTransferFrom` function"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated This function MAY throw to revert and reject the transfer Return of other amount than the magic value MUST result in the transaction being reverted Note: The token contract address is always the message sender",
								"params": {
									"_amount": "The amount of tokens being transferred",
									"_data": "Additional data with no specified format",
									"_from": "The address which previously owned the token",
									"_id": "The id of the token being transferred",
									"_operator": "The address which called the `safeTransferFrom` function"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1155 interface for accepting safe transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeBatchTransferFrom` after the balances have been updated This function MAY throw to revert and reject the transfer Return of other amount than the magic value WILL result in the transaction being reverted Note: The token contract address is always the message sender\",\"params\":{\"_amounts\":\"An array containing amounts of each token being transferred\",\"_data\":\"Additional data with no specified format\",\"_from\":\"The address which previously owned the token\",\"_ids\":\"An array containing ids of each token being transferred\",\"_operator\":\"The address which called the `safeBatchTransferFrom` function\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"An ERC1155-compliant smart contract MUST call this function on the token recipient contract, at the end of a `safeTransferFrom` after the balance has been updated This function MAY throw to revert and reject the transfer Return of other amount than the magic value MUST result in the transaction being reverted Note: The token contract address is always the message sender\",\"params\":{\"_amount\":\"The amount of tokens being transferred\",\"_data\":\"Additional data with no specified format\",\"_from\":\"The address which previously owned the token\",\"_id\":\"The id of the token being transferred\",\"_operator\":\"The address which called the `safeTransferFrom` function\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Handle the receipt of multiple ERC1155 token types\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"notice\":\"Handle the receipt of a single ERC1155 token type\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155TokenReceiver.sol\":\"IERC1155TokenReceiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x57f55a58438703c015af414f008886d084701600e11854507b58dbfe03f68d1c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a7c1b88eb303ae45ef2d7c5cf2e8ff1870c171e5da335e10b3def73643ba407\",\"dweb:/ipfs/Qmf1hy4w1aUiWeQdrhRmnYvVtoX8LxnsofaZrFVscyTG5m\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"notice": "Handle the receipt of multiple ERC1155 token types"
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"notice": "Handle the receipt of a single ERC1155 token type"
							}
						},
						"version": 1
					}
				}
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Interface identification is specified in ERC-165. This function uses less than 30,000 gas",
								"params": {
									"_interfaceId": "The interface identifier, as specified in ERC-165"
								}
							}
						},
						"title": "ERC165",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-165.md\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Interface identification is specified in ERC-165. This function uses less than 30,000 gas\",\"params\":{\"_interfaceId\":\"The interface identifier, as specified in ERC-165\"}}},\"title\":\"ERC165\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"lib/0xsequence/erc-1155/src/contracts/tokens/ERC1155/ERC1155.sol": {
				"ERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOperator",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of Multi-Token Standard contract",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "MUST emit when an approval is updated"
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID   To broadcast the existence of multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0"
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID   To broadcast the existence of a token ID with no initial balance, the contract SHOULD emit the TransferSingle event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0"
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"params": {
									"_id": "ID of the Token",
									"_owner": "The address of the token holder"
								},
								"returns": {
									"_0": "The _owner's balance of the Token type requested"
								}
							},
							"balanceOfBatch(address[],uint256[])": {
								"params": {
									"_ids": "ID of the Tokens",
									"_owners": "The addresses of the token holders"
								},
								"returns": {
									"_0": "The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "Address of authorized operator",
									"_owner": "The owner of the Tokens"
								},
								"returns": {
									"isOperator": "True if the operator is approved, false if not"
								}
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"params": {
									"_amounts": "Transfer amounts per token type",
									"_data": "Additional data with no specified format, sent in call to `_to`",
									"_from": "Source addresses",
									"_ids": "IDs of each token type",
									"_to": "Target addresses"
								}
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"params": {
									"_amount": "Transfered amount",
									"_data": "Additional data with no specified format, sent in call to `_to`",
									"_from": "Source address",
									"_id": "ID of the token type",
									"_to": "Target address"
								}
							},
							"setApprovalForAll(address,bool)": {
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID` and"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523461001657611198908161001c8239f35b600080fdfe6080604090808252600436101561001557600080fd5b60003560e01c908162fdd58e14610d285750806301ffc9a714610cb75780632eb2c2d6146107835780634e1273f414610559578063a22cb4651461048c578063e985e9c51461040e5763f242432a1461006d57600080fd5b346104095760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610409576100a4610d94565b6100ac610db7565b906044356064359260843567ffffffffffffffff8111610409576100d4903690600401610ec0565b73ffffffffffffffffffffffffffffffffffffffff8094169384331480156103e7575b156103645782169182156102e15784600052602095600087528760002085600052875287600020610129828254610f69565b90558360005260008752876000208560005287528760002061014c828254610fa5565b905583868951878152838a8201527fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628b3392a46101895a9261112c565b61018f57005b600087946101eb968a51978896879586937ff23a6e61000000000000000000000000000000000000000000000000000000009c8d865233600487015260248601526044850152606484015260a0608484015260a4830190610fea565b0393f180156102d6577fffffffff00000000000000000000000000000000000000000000000000000000916000916102a9575b50160361022757005b60849151907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152603a60248201527f45524331313535235f63616c6c6f6e4552433131353552656365697665643a2060448201527f494e56414c49445f4f4e5f524543454956455f4d4553534147450000000000006064820152fd5b6102c99150843d86116102cf575b6102c18183610dda565b810190610fb2565b3861021e565b503d6102b7565b84513d6000823e3d90fd5b608487517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4960448201527f445f524543495049454e540000000000000000000000000000000000000000006064820152fd5b608487517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4960448201527f445f4f50455241544f52000000000000000000000000000000000000000000006064820152fd5b50846000526001602052866000203360005260205260ff8760002054166100f7565b600080fd5b503461040957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261040957602090610448610d94565b610450610db7565b9073ffffffffffffffffffffffffffffffffffffffff80911660005260018452826000209116600052825260ff81600020541690519015158152f35b503461040957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610409576104c3610d94565b90602435908115158092036104095733600052600160205273ffffffffffffffffffffffffffffffffffffffff8160002093169283600052602052806000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b503461040957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104095760043567ffffffffffffffff918282116104095736602383011215610409578160040135926105b684610e4a565b926105c383519485610dda565b84845260209460248686019160051b8301019136831161040957602401905b8282106107575750505060243590811161040957610604903690600401610e62565b82518151036106d4578251937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061065261063d87610e4a565b9661064a86519889610dda565b808852610e4a565b01368287013760005b84518110156106be578073ffffffffffffffffffffffffffffffffffffffff6106876106b99388611075565b5116600052600083528460002061069e8286611075565b51600052835284600020546106b38289611075565b52611048565b61065b565b8351828152806106d081850189610f35565b0390f35b6084848351907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602c60248201527f455243313135352362616c616e63654f6642617463683a20494e56414c49445f60448201527f41525241595f4c454e47544800000000000000000000000000000000000000006064820152fd5b813573ffffffffffffffffffffffffffffffffffffffff811681036104095781529086019086016105e2565b50346104095760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610409576107bb610d94565b6107c3610db7565b9160449167ffffffffffffffff908335828111610409576107e8903690600401610e62565b606495863584811161040957610802903690600401610e62565b936084359081116104095761081b903690600401610ec0565b73ffffffffffffffffffffffffffffffffffffffff9081851633148015610c93575b15610c115781831615610b8f578351865103610b0d57835160005b818110610a87575050865187815261087288820186610f35565b908082036020820152838516917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb85891692806108b033948d610f35565b0390a45a946108be8461112c565b6108c457005b82918851978896879586947fbc197c810000000000000000000000000000000000000000000000000000000086523360048701521660248501528b840160a0905260a4840161091291610f35565b8381037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc018d85015261094491610f35565b8281037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01608484015261097791610fea565b039216600090602095f1908115610a7c577fbc197c8100000000000000000000000000000000000000000000000000000000917fffffffff0000000000000000000000000000000000000000000000000000000091600091610a5e575b5016036109dd57005b6084927f45524331313535235f63616c6c6f6e45524331313535426174636852656365697f7665643a20494e56414c49445f4f4e5f524543454956455f4d455353414745009251937f08c379a000000000000000000000000000000000000000000000000000000000855260206004860152603f6024860152840152820152fd5b610a76915060203d81116102cf576102c18183610dda565b386109d4565b82513d6000823e3d90fd5b80610a95610b08928a611075565b51858916600052602090600082528b600020610ab1848b611075565b516000528252610ac68c600020918254610f69565b9055610ad2828b611075565b5190868816600052600081528b60002090610aed848b611075565b5160005252610b018b600020918254610fa5565b9055611048565b610858565b6084887f494e56414c49445f4152524159535f4c454e47544800000000000000000000008b7f45524331313535235f7361666542617463685472616e7366657246726f6d3a208b51937f08c379a00000000000000000000000000000000000000000000000000000000085526020600486015260356024860152840152820152fd5b6084887f4e56414c49445f524543495049454e54000000000000000000000000000000008b7f45524331313535237361666542617463685472616e7366657246726f6d3a20498b51937f08c379a00000000000000000000000000000000000000000000000000000000085526020600486015260306024860152840152820152fd5b6084887f4e56414c49445f4f50455241544f5200000000000000000000000000000000008b7f45524331313535237361666542617463685472616e7366657246726f6d3a20498b51937f08c379a000000000000000000000000000000000000000000000000000000000855260206004860152602f6024860152840152820152fd5b508185166000526001602052866000203360005260205260ff87600020541661083d565b50346104095760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261040957600435907fffffffff000000000000000000000000000000000000000000000000000000008216820361040957610d1f6020926110b8565b90519015158152f35b90503461040957817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104095760209173ffffffffffffffffffffffffffffffffffffffff610d78610d94565b1660005260008352806000206024356000528352600020548152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361040957565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361040957565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610e1b57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111610e1b5760051b60200190565b81601f8201121561040957803591610e7983610e4a565b92610e876040519485610dda565b808452602092838086019260051b820101928311610409578301905b828210610eb1575050505090565b81358152908301908301610ea3565b81601f820112156104095780359067ffffffffffffffff8211610e1b5760405192610f1360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185610dda565b8284526020838301011161040957816000926020809301838601378301015290565b90815180825260208080930193019160005b828110610f55575050505090565b835185529381019392810192600101610f47565b91908203918211610f7657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908201809211610f7657565b9081602091031261040957517fffffffff00000000000000000000000000000000000000000000000000000000811681036104095790565b919082519283825260005b8481106110345750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610ff5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f765760010190565b80518210156110895760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167fd9b67a26000000000000000000000000000000000000000000000000000000008114611126577f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b50600190565b3f801515908161113a575090565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470915014159056fea264697066735822122019d5746419523006fff521c9e763658a97c73c855271893eb96409d88efa55b864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x1198 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xFDD58E EQ PUSH2 0xD28 JUMPI POP DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCB7 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x783 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x40E JUMPI PUSH4 0xF242432A EQ PUSH2 0x6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x409 JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH2 0xA4 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xAC PUSH2 0xDB7 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x409 JUMPI PUSH2 0xD4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xEC0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP5 AND SWAP4 DUP5 CALLER EQ DUP1 ISZERO PUSH2 0x3E7 JUMPI JUMPDEST ISZERO PUSH2 0x364 JUMPI DUP3 AND SWAP2 DUP3 ISZERO PUSH2 0x2E1 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x0 DUP8 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP8 MSTORE DUP8 PUSH1 0x0 KECCAK256 PUSH2 0x129 DUP3 DUP3 SLOAD PUSH2 0xF69 JUMP JUMPDEST SWAP1 SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP8 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP8 MSTORE DUP8 PUSH1 0x0 KECCAK256 PUSH2 0x14C DUP3 DUP3 SLOAD PUSH2 0xFA5 JUMP JUMPDEST SWAP1 SSTORE DUP4 DUP7 DUP10 MLOAD DUP8 DUP2 MSTORE DUP4 DUP11 DUP3 ADD MSTORE PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP12 CALLER SWAP3 LOG4 PUSH2 0x189 GAS SWAP3 PUSH2 0x112C JUMP JUMPDEST PUSH2 0x18F JUMPI STOP JUMPDEST PUSH1 0x0 DUP8 SWAP5 PUSH2 0x1EB SWAP7 DUP11 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP4 PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP13 DUP14 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0xFEA JUMP JUMPDEST SUB SWAP4 CALL DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2A9 JUMPI JUMPDEST POP AND SUB PUSH2 0x227 JUMPI STOP JUMPDEST PUSH1 0x84 SWAP2 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331313535235F63616C6C6F6E4552433131353552656365697665643A20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4F4E5F524543454956455F4D455353414745000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x2CF JUMPI JUMPDEST PUSH2 0x2C1 DUP2 DUP4 PUSH2 0xDDA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xFB2 JUMP JUMPDEST CODESIZE PUSH2 0x21E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2B7 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x84 DUP8 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433131353523736166655472616E7366657246726F6D3A20494E56414C49 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x445F524543495049454E54000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP8 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433131353523736166655472616E7366657246726F6D3A20494E56414C49 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x445F4F50455241544F5200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x409 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x448 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x450 PUSH2 0xDB7 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x409 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH2 0x4C3 PUSH2 0xD94 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x409 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 KECCAK256 SWAP4 AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x409 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0x409 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x409 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH2 0x5B6 DUP5 PUSH2 0xE4A JUMP JUMPDEST SWAP3 PUSH2 0x5C3 DUP4 MLOAD SWAP5 DUP6 PUSH2 0xDDA JUMP JUMPDEST DUP5 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x24 DUP7 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x409 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x757 JUMPI POP POP POP PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x409 JUMPI PUSH2 0x604 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xE62 JUMP JUMPDEST DUP3 MLOAD DUP2 MLOAD SUB PUSH2 0x6D4 JUMPI DUP3 MLOAD SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x652 PUSH2 0x63D DUP8 PUSH2 0xE4A JUMP JUMPDEST SWAP7 PUSH2 0x64A DUP7 MLOAD SWAP9 DUP10 PUSH2 0xDDA JUMP JUMPDEST DUP1 DUP9 MSTORE PUSH2 0xE4A JUMP JUMPDEST ADD CALLDATASIZE DUP3 DUP8 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6BE JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x687 PUSH2 0x6B9 SWAP4 DUP9 PUSH2 0x1075 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE DUP5 PUSH1 0x0 KECCAK256 PUSH2 0x69E DUP3 DUP7 PUSH2 0x1075 JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE DUP4 MSTORE DUP5 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6B3 DUP3 DUP10 PUSH2 0x1075 JUMP JUMPDEST MSTORE PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST DUP4 MLOAD DUP3 DUP2 MSTORE DUP1 PUSH2 0x6D0 DUP2 DUP6 ADD DUP10 PUSH2 0xF35 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x84 DUP5 DUP4 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135352362616C616E63654F6642617463683A20494E56414C49445F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41525241595F4C454E4754480000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x409 JUMPI DUP2 MSTORE SWAP1 DUP7 ADD SWAP1 DUP7 ADD PUSH2 0x5E2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x409 JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH2 0x7BB PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xDB7 JUMP JUMPDEST SWAP2 PUSH1 0x44 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x409 JUMPI PUSH2 0x7E8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x64 SWAP6 DUP7 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x409 JUMPI PUSH2 0x802 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xE62 JUMP JUMPDEST SWAP4 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x409 JUMPI PUSH2 0x81B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xEC0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND CALLER EQ DUP1 ISZERO PUSH2 0xC93 JUMPI JUMPDEST ISZERO PUSH2 0xC11 JUMPI DUP2 DUP4 AND ISZERO PUSH2 0xB8F JUMPI DUP4 MLOAD DUP7 MLOAD SUB PUSH2 0xB0D JUMPI DUP4 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA87 JUMPI POP POP DUP7 MLOAD DUP8 DUP2 MSTORE PUSH2 0x872 DUP9 DUP3 ADD DUP7 PUSH2 0xF35 JUMP JUMPDEST SWAP1 DUP1 DUP3 SUB PUSH1 0x20 DUP3 ADD MSTORE DUP4 DUP6 AND SWAP2 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP6 DUP10 AND SWAP3 DUP1 PUSH2 0x8B0 CALLER SWAP5 DUP14 PUSH2 0xF35 JUMP JUMPDEST SUB SWAP1 LOG4 GAS SWAP5 PUSH2 0x8BE DUP5 PUSH2 0x112C JUMP JUMPDEST PUSH2 0x8C4 JUMPI STOP JUMPDEST DUP3 SWAP2 DUP9 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE DUP12 DUP5 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xA4 DUP5 ADD PUSH2 0x912 SWAP2 PUSH2 0xF35 JUMP JUMPDEST DUP4 DUP2 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC ADD DUP14 DUP6 ADD MSTORE PUSH2 0x944 SWAP2 PUSH2 0xF35 JUMP JUMPDEST DUP3 DUP2 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC ADD PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x977 SWAP2 PUSH2 0xFEA JUMP JUMPDEST SUB SWAP3 AND PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP6 CALL SWAP1 DUP2 ISZERO PUSH2 0xA7C JUMPI PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xA5E JUMPI JUMPDEST POP AND SUB PUSH2 0x9DD JUMPI STOP JUMPDEST PUSH1 0x84 SWAP3 PUSH32 0x45524331313535235F63616C6C6F6E4552433131353542617463685265636569 PUSH32 0x7665643A20494E56414C49445F4F4E5F524543454956455F4D45535341474500 SWAP3 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x20 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xA76 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2CF JUMPI PUSH2 0x2C1 DUP2 DUP4 PUSH2 0xDDA JUMP JUMPDEST CODESIZE PUSH2 0x9D4 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xA95 PUSH2 0xB08 SWAP3 DUP11 PUSH2 0x1075 JUMP JUMPDEST MLOAD DUP6 DUP10 AND PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x0 DUP3 MSTORE DUP12 PUSH1 0x0 KECCAK256 PUSH2 0xAB1 DUP5 DUP12 PUSH2 0x1075 JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE DUP3 MSTORE PUSH2 0xAC6 DUP13 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0xF69 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xAD2 DUP3 DUP12 PUSH2 0x1075 JUMP JUMPDEST MLOAD SWAP1 DUP7 DUP9 AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE DUP12 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0xAED DUP5 DUP12 PUSH2 0x1075 JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE MSTORE PUSH2 0xB01 DUP12 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0xFA5 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH1 0x84 DUP9 PUSH32 0x494E56414C49445F4152524159535F4C454E4754480000000000000000000000 DUP12 PUSH32 0x45524331313535235F7361666542617463685472616E7366657246726F6D3A20 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x20 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP9 PUSH32 0x4E56414C49445F524543495049454E5400000000000000000000000000000000 DUP12 PUSH32 0x45524331313535237361666542617463685472616E7366657246726F6D3A2049 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x20 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP9 PUSH32 0x4E56414C49445F4F50455241544F520000000000000000000000000000000000 DUP12 PUSH32 0x45524331313535237361666542617463685472616E7366657246726F6D3A2049 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x20 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST POP DUP2 DUP6 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x83D JUMP JUMPDEST POP CALLVALUE PUSH2 0x409 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND DUP3 SUB PUSH2 0x409 JUMPI PUSH2 0xD1F PUSH1 0x20 SWAP3 PUSH2 0x10B8 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x409 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH1 0x20 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xD78 PUSH2 0xD94 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE DUP4 MSTORE PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x409 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x409 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE1B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE1B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x409 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xE79 DUP4 PUSH2 0xE4A JUMP JUMPDEST SWAP3 PUSH2 0xE87 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xDDA JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x409 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xEB1 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0xEA3 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x409 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE1B JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xF13 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0xDDA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x409 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xF55 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xF47 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xF76 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xF76 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x409 JUMPI MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 SUB PUSH2 0x409 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1034 JUMPI POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFF5 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xF76 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1089 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 EQ PUSH2 0x1126 JUMPI PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST EXTCODEHASH DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x113A JUMPI POP SWAP1 JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP2 POP EQ ISZERO SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xD5 PUSH21 0x6419523006FFF521C9E763658A97C73C855271893E 0xB9 PUSH5 0x9D88EFA55 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "300:8316:3:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 3476,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_8481": {
									"entryPoint": 3511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes4_fromMemory": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bytes": {
									"entryPoint": 4074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 4005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_uint256": {
									"entryPoint": 3945,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_isContract": {
									"entryPoint": 4396,
									"id": 700,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_supportsInterface": {
									"entryPoint": 4280,
									"id": 671,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_uint256": {
									"entryPoint": 4168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_uint256_dyn": {
									"entryPoint": 4213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604090808252600436101561001557600080fd5b60003560e01c908162fdd58e14610d285750806301ffc9a714610cb75780632eb2c2d6146107835780634e1273f414610559578063a22cb4651461048c578063e985e9c51461040e5763f242432a1461006d57600080fd5b346104095760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610409576100a4610d94565b6100ac610db7565b906044356064359260843567ffffffffffffffff8111610409576100d4903690600401610ec0565b73ffffffffffffffffffffffffffffffffffffffff8094169384331480156103e7575b156103645782169182156102e15784600052602095600087528760002085600052875287600020610129828254610f69565b90558360005260008752876000208560005287528760002061014c828254610fa5565b905583868951878152838a8201527fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628b3392a46101895a9261112c565b61018f57005b600087946101eb968a51978896879586937ff23a6e61000000000000000000000000000000000000000000000000000000009c8d865233600487015260248601526044850152606484015260a0608484015260a4830190610fea565b0393f180156102d6577fffffffff00000000000000000000000000000000000000000000000000000000916000916102a9575b50160361022757005b60849151907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152603a60248201527f45524331313535235f63616c6c6f6e4552433131353552656365697665643a2060448201527f494e56414c49445f4f4e5f524543454956455f4d4553534147450000000000006064820152fd5b6102c99150843d86116102cf575b6102c18183610dda565b810190610fb2565b3861021e565b503d6102b7565b84513d6000823e3d90fd5b608487517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4960448201527f445f524543495049454e540000000000000000000000000000000000000000006064820152fd5b608487517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f4552433131353523736166655472616e7366657246726f6d3a20494e56414c4960448201527f445f4f50455241544f52000000000000000000000000000000000000000000006064820152fd5b50846000526001602052866000203360005260205260ff8760002054166100f7565b600080fd5b503461040957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261040957602090610448610d94565b610450610db7565b9073ffffffffffffffffffffffffffffffffffffffff80911660005260018452826000209116600052825260ff81600020541690519015158152f35b503461040957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610409576104c3610d94565b90602435908115158092036104095733600052600160205273ffffffffffffffffffffffffffffffffffffffff8160002093169283600052602052806000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b503461040957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104095760043567ffffffffffffffff918282116104095736602383011215610409578160040135926105b684610e4a565b926105c383519485610dda565b84845260209460248686019160051b8301019136831161040957602401905b8282106107575750505060243590811161040957610604903690600401610e62565b82518151036106d4578251937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061065261063d87610e4a565b9661064a86519889610dda565b808852610e4a565b01368287013760005b84518110156106be578073ffffffffffffffffffffffffffffffffffffffff6106876106b99388611075565b5116600052600083528460002061069e8286611075565b51600052835284600020546106b38289611075565b52611048565b61065b565b8351828152806106d081850189610f35565b0390f35b6084848351907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602c60248201527f455243313135352362616c616e63654f6642617463683a20494e56414c49445f60448201527f41525241595f4c454e47544800000000000000000000000000000000000000006064820152fd5b813573ffffffffffffffffffffffffffffffffffffffff811681036104095781529086019086016105e2565b50346104095760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610409576107bb610d94565b6107c3610db7565b9160449167ffffffffffffffff908335828111610409576107e8903690600401610e62565b606495863584811161040957610802903690600401610e62565b936084359081116104095761081b903690600401610ec0565b73ffffffffffffffffffffffffffffffffffffffff9081851633148015610c93575b15610c115781831615610b8f578351865103610b0d57835160005b818110610a87575050865187815261087288820186610f35565b908082036020820152838516917f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb85891692806108b033948d610f35565b0390a45a946108be8461112c565b6108c457005b82918851978896879586947fbc197c810000000000000000000000000000000000000000000000000000000086523360048701521660248501528b840160a0905260a4840161091291610f35565b8381037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc018d85015261094491610f35565b8281037ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01608484015261097791610fea565b039216600090602095f1908115610a7c577fbc197c8100000000000000000000000000000000000000000000000000000000917fffffffff0000000000000000000000000000000000000000000000000000000091600091610a5e575b5016036109dd57005b6084927f45524331313535235f63616c6c6f6e45524331313535426174636852656365697f7665643a20494e56414c49445f4f4e5f524543454956455f4d455353414745009251937f08c379a000000000000000000000000000000000000000000000000000000000855260206004860152603f6024860152840152820152fd5b610a76915060203d81116102cf576102c18183610dda565b386109d4565b82513d6000823e3d90fd5b80610a95610b08928a611075565b51858916600052602090600082528b600020610ab1848b611075565b516000528252610ac68c600020918254610f69565b9055610ad2828b611075565b5190868816600052600081528b60002090610aed848b611075565b5160005252610b018b600020918254610fa5565b9055611048565b610858565b6084887f494e56414c49445f4152524159535f4c454e47544800000000000000000000008b7f45524331313535235f7361666542617463685472616e7366657246726f6d3a208b51937f08c379a00000000000000000000000000000000000000000000000000000000085526020600486015260356024860152840152820152fd5b6084887f4e56414c49445f524543495049454e54000000000000000000000000000000008b7f45524331313535237361666542617463685472616e7366657246726f6d3a20498b51937f08c379a00000000000000000000000000000000000000000000000000000000085526020600486015260306024860152840152820152fd5b6084887f4e56414c49445f4f50455241544f5200000000000000000000000000000000008b7f45524331313535237361666542617463685472616e7366657246726f6d3a20498b51937f08c379a000000000000000000000000000000000000000000000000000000000855260206004860152602f6024860152840152820152fd5b508185166000526001602052866000203360005260205260ff87600020541661083d565b50346104095760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261040957600435907fffffffff000000000000000000000000000000000000000000000000000000008216820361040957610d1f6020926110b8565b90519015158152f35b90503461040957817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104095760209173ffffffffffffffffffffffffffffffffffffffff610d78610d94565b1660005260008352806000206024356000528352600020548152f35b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361040957565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361040957565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610e1b57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b67ffffffffffffffff8111610e1b5760051b60200190565b81601f8201121561040957803591610e7983610e4a565b92610e876040519485610dda565b808452602092838086019260051b820101928311610409578301905b828210610eb1575050505090565b81358152908301908301610ea3565b81601f820112156104095780359067ffffffffffffffff8211610e1b5760405192610f1360207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185610dda565b8284526020838301011161040957816000926020809301838601378301015290565b90815180825260208080930193019160005b828110610f55575050505090565b835185529381019392810192600101610f47565b91908203918211610f7657565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b91908201809211610f7657565b9081602091031261040957517fffffffff00000000000000000000000000000000000000000000000000000000811681036104095790565b919082519283825260005b8481106110345750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610ff5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610f765760010190565b80518210156110895760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167fd9b67a26000000000000000000000000000000000000000000000000000000008114611126577f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b50600190565b3f801515908161113a575090565b7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470915014159056fea264697066735822122019d5746419523006fff521c9e763658a97c73c855271893eb96409d88efa55b864736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH3 0xFDD58E EQ PUSH2 0xD28 JUMPI POP DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xCB7 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x783 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x559 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x40E JUMPI PUSH4 0xF242432A EQ PUSH2 0x6D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x409 JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH2 0xA4 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0xAC PUSH2 0xDB7 JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x409 JUMPI PUSH2 0xD4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xEC0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP5 AND SWAP4 DUP5 CALLER EQ DUP1 ISZERO PUSH2 0x3E7 JUMPI JUMPDEST ISZERO PUSH2 0x364 JUMPI DUP3 AND SWAP2 DUP3 ISZERO PUSH2 0x2E1 JUMPI DUP5 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP6 PUSH1 0x0 DUP8 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP8 MSTORE DUP8 PUSH1 0x0 KECCAK256 PUSH2 0x129 DUP3 DUP3 SLOAD PUSH2 0xF69 JUMP JUMPDEST SWAP1 SSTORE DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 DUP8 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP6 PUSH1 0x0 MSTORE DUP8 MSTORE DUP8 PUSH1 0x0 KECCAK256 PUSH2 0x14C DUP3 DUP3 SLOAD PUSH2 0xFA5 JUMP JUMPDEST SWAP1 SSTORE DUP4 DUP7 DUP10 MLOAD DUP8 DUP2 MSTORE DUP4 DUP11 DUP3 ADD MSTORE PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP12 CALLER SWAP3 LOG4 PUSH2 0x189 GAS SWAP3 PUSH2 0x112C JUMP JUMPDEST PUSH2 0x18F JUMPI STOP JUMPDEST PUSH1 0x0 DUP8 SWAP5 PUSH2 0x1EB SWAP7 DUP11 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP4 PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP13 DUP14 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0xA4 DUP4 ADD SWAP1 PUSH2 0xFEA JUMP JUMPDEST SUB SWAP4 CALL DUP1 ISZERO PUSH2 0x2D6 JUMPI PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x2A9 JUMPI JUMPDEST POP AND SUB PUSH2 0x227 JUMPI STOP JUMPDEST PUSH1 0x84 SWAP2 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524331313535235F63616C6C6F6E4552433131353552656365697665643A20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F4F4E5F524543454956455F4D455353414745000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x2CF JUMPI JUMPDEST PUSH2 0x2C1 DUP2 DUP4 PUSH2 0xDDA JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xFB2 JUMP JUMPDEST CODESIZE PUSH2 0x21E JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2B7 JUMP JUMPDEST DUP5 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x84 DUP8 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433131353523736166655472616E7366657246726F6D3A20494E56414C49 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x445F524543495049454E54000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP8 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433131353523736166655472616E7366657246726F6D3A20494E56414C49 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x445F4F50455241544F5200000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST POP DUP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xF7 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x409 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH1 0x20 SWAP1 PUSH2 0x448 PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x450 PUSH2 0xDB7 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x1 DUP5 MSTORE DUP3 PUSH1 0x0 KECCAK256 SWAP2 AND PUSH1 0x0 MSTORE DUP3 MSTORE PUSH1 0xFF DUP2 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x409 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH2 0x4C3 PUSH2 0xD94 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x409 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH1 0x0 KECCAK256 SWAP4 AND SWAP3 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP5 AND OR SWAP1 SSTORE MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST POP CALLVALUE PUSH2 0x409 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP3 GT PUSH2 0x409 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x409 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP3 PUSH2 0x5B6 DUP5 PUSH2 0xE4A JUMP JUMPDEST SWAP3 PUSH2 0x5C3 DUP4 MLOAD SWAP5 DUP6 PUSH2 0xDDA JUMP JUMPDEST DUP5 DUP5 MSTORE PUSH1 0x20 SWAP5 PUSH1 0x24 DUP7 DUP7 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x409 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x757 JUMPI POP POP POP PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x409 JUMPI PUSH2 0x604 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xE62 JUMP JUMPDEST DUP3 MLOAD DUP2 MLOAD SUB PUSH2 0x6D4 JUMPI DUP3 MLOAD SWAP4 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH2 0x652 PUSH2 0x63D DUP8 PUSH2 0xE4A JUMP JUMPDEST SWAP7 PUSH2 0x64A DUP7 MLOAD SWAP9 DUP10 PUSH2 0xDDA JUMP JUMPDEST DUP1 DUP9 MSTORE PUSH2 0xE4A JUMP JUMPDEST ADD CALLDATASIZE DUP3 DUP8 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x6BE JUMPI DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x687 PUSH2 0x6B9 SWAP4 DUP9 PUSH2 0x1075 JUMP JUMPDEST MLOAD AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE DUP5 PUSH1 0x0 KECCAK256 PUSH2 0x69E DUP3 DUP7 PUSH2 0x1075 JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE DUP4 MSTORE DUP5 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x6B3 DUP3 DUP10 PUSH2 0x1075 JUMP JUMPDEST MSTORE PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x65B JUMP JUMPDEST DUP4 MLOAD DUP3 DUP2 MSTORE DUP1 PUSH2 0x6D0 DUP2 DUP6 ADD DUP10 PUSH2 0xF35 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x84 DUP5 DUP4 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135352362616C616E63654F6642617463683A20494E56414C49445F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x41525241595F4C454E4754480000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x409 JUMPI DUP2 MSTORE SWAP1 DUP7 ADD SWAP1 DUP7 ADD PUSH2 0x5E2 JUMP JUMPDEST POP CALLVALUE PUSH2 0x409 JUMPI PUSH1 0xA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH2 0x7BB PUSH2 0xD94 JUMP JUMPDEST PUSH2 0x7C3 PUSH2 0xDB7 JUMP JUMPDEST SWAP2 PUSH1 0x44 SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP4 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x409 JUMPI PUSH2 0x7E8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xE62 JUMP JUMPDEST PUSH1 0x64 SWAP6 DUP7 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x409 JUMPI PUSH2 0x802 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xE62 JUMP JUMPDEST SWAP4 PUSH1 0x84 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0x409 JUMPI PUSH2 0x81B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xEC0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND CALLER EQ DUP1 ISZERO PUSH2 0xC93 JUMPI JUMPDEST ISZERO PUSH2 0xC11 JUMPI DUP2 DUP4 AND ISZERO PUSH2 0xB8F JUMPI DUP4 MLOAD DUP7 MLOAD SUB PUSH2 0xB0D JUMPI DUP4 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0xA87 JUMPI POP POP DUP7 MLOAD DUP8 DUP2 MSTORE PUSH2 0x872 DUP9 DUP3 ADD DUP7 PUSH2 0xF35 JUMP JUMPDEST SWAP1 DUP1 DUP3 SUB PUSH1 0x20 DUP3 ADD MSTORE DUP4 DUP6 AND SWAP2 PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP6 DUP10 AND SWAP3 DUP1 PUSH2 0x8B0 CALLER SWAP5 DUP14 PUSH2 0xF35 JUMP JUMPDEST SUB SWAP1 LOG4 GAS SWAP5 PUSH2 0x8BE DUP5 PUSH2 0x112C JUMP JUMPDEST PUSH2 0x8C4 JUMPI STOP JUMPDEST DUP3 SWAP2 DUP9 MLOAD SWAP8 DUP9 SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 DUP7 MSTORE CALLER PUSH1 0x4 DUP8 ADD MSTORE AND PUSH1 0x24 DUP6 ADD MSTORE DUP12 DUP5 ADD PUSH1 0xA0 SWAP1 MSTORE PUSH1 0xA4 DUP5 ADD PUSH2 0x912 SWAP2 PUSH2 0xF35 JUMP JUMPDEST DUP4 DUP2 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC ADD DUP14 DUP6 ADD MSTORE PUSH2 0x944 SWAP2 PUSH2 0xF35 JUMP JUMPDEST DUP3 DUP2 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC ADD PUSH1 0x84 DUP5 ADD MSTORE PUSH2 0x977 SWAP2 PUSH2 0xFEA JUMP JUMPDEST SUB SWAP3 AND PUSH1 0x0 SWAP1 PUSH1 0x20 SWAP6 CALL SWAP1 DUP2 ISZERO PUSH2 0xA7C JUMPI PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP2 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xA5E JUMPI JUMPDEST POP AND SUB PUSH2 0x9DD JUMPI STOP JUMPDEST PUSH1 0x84 SWAP3 PUSH32 0x45524331313535235F63616C6C6F6E4552433131353542617463685265636569 PUSH32 0x7665643A20494E56414C49445F4F4E5F524543454956455F4D45535341474500 SWAP3 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x20 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x3F PUSH1 0x24 DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xA76 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2CF JUMPI PUSH2 0x2C1 DUP2 DUP4 PUSH2 0xDDA JUMP JUMPDEST CODESIZE PUSH2 0x9D4 JUMP JUMPDEST DUP3 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP1 PUSH2 0xA95 PUSH2 0xB08 SWAP3 DUP11 PUSH2 0x1075 JUMP JUMPDEST MLOAD DUP6 DUP10 AND PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x0 DUP3 MSTORE DUP12 PUSH1 0x0 KECCAK256 PUSH2 0xAB1 DUP5 DUP12 PUSH2 0x1075 JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE DUP3 MSTORE PUSH2 0xAC6 DUP13 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0xF69 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0xAD2 DUP3 DUP12 PUSH2 0x1075 JUMP JUMPDEST MLOAD SWAP1 DUP7 DUP9 AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP2 MSTORE DUP12 PUSH1 0x0 KECCAK256 SWAP1 PUSH2 0xAED DUP5 DUP12 PUSH2 0x1075 JUMP JUMPDEST MLOAD PUSH1 0x0 MSTORE MSTORE PUSH2 0xB01 DUP12 PUSH1 0x0 KECCAK256 SWAP2 DUP3 SLOAD PUSH2 0xFA5 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x1048 JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH1 0x84 DUP9 PUSH32 0x494E56414C49445F4152524159535F4C454E4754480000000000000000000000 DUP12 PUSH32 0x45524331313535235F7361666542617463685472616E7366657246726F6D3A20 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x20 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x35 PUSH1 0x24 DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP9 PUSH32 0x4E56414C49445F524543495049454E5400000000000000000000000000000000 DUP12 PUSH32 0x45524331313535237361666542617463685472616E7366657246726F6D3A2049 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x20 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x84 DUP9 PUSH32 0x4E56414C49445F4F50455241544F520000000000000000000000000000000000 DUP12 PUSH32 0x45524331313535237361666542617463685472616E7366657246726F6D3A2049 DUP12 MLOAD SWAP4 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x20 PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP7 ADD MSTORE DUP5 ADD MSTORE DUP3 ADD MSTORE REVERT JUMPDEST POP DUP2 DUP6 AND PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE DUP7 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP8 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0x83D JUMP JUMPDEST POP CALLVALUE PUSH2 0x409 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND DUP3 SUB PUSH2 0x409 JUMPI PUSH2 0xD1F PUSH1 0x20 SWAP3 PUSH2 0x10B8 JUMP JUMPDEST SWAP1 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x409 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x409 JUMPI PUSH1 0x20 SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xD78 PUSH2 0xD94 JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE DUP1 PUSH1 0x0 KECCAK256 PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE DUP4 MSTORE PUSH1 0x0 KECCAK256 SLOAD DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x409 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x409 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xE1B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE1B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x409 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0xE79 DUP4 PUSH2 0xE4A JUMP JUMPDEST SWAP3 PUSH2 0xE87 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0xDDA JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x409 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0xEB1 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0xEA3 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x409 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xE1B JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0xF13 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0xDDA JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x409 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0xF55 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0xF47 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0xF76 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xF76 JUMPI JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x409 JUMPI MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 SUB PUSH2 0x409 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1034 JUMPI POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xFF5 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xF76 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1089 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 DUP2 EQ PUSH2 0x1126 JUMPI PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP1 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST EXTCODEHASH DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x113A JUMPI POP SWAP1 JUMP JUMPDEST PUSH32 0xC5D2460186F7233C927E7DB2DCC703C0E500B653CA82273B7BFAD8045D85A470 SWAP2 POP EQ ISZERO SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NOT 0xD5 PUSH21 0x6419523006FFF521C9E763658A97C73C855271893E 0xB9 PUSH5 0x9D88EFA55 0xB8 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "300:8316:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1501:10;;;:19;1500:60;;;;300:8316;;;;;;1622:17;;;300:8316;;;;;;;;;;;;;;;;;;;;;3294:31;300:8316;;;3294:31;:::i;:::-;300:8316;;;;;;;;;;;;;;;;;;;3332:29;300:8316;;;3332:29;:::i;:::-;300:8316;;;;;;;;;;;;;;3394:52;1501:10;;3394:52;;3769:16;1794:9;3769:16;;:::i;:::-;3765:267;;300:8316;3765:267;300:8316;;;;;;;;;;;;;;;3812:100;;;;1501:10;300:8316;3812:100;;300:8316;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3812:100;;;;;;;300:8316;3812:100;300:8316;3812:100;;;3765:267;300:8316;;3929:32;585:10;;300:8316;585:10;300:8316;;;585:10;;;;300:8316;585:10;;;;300:8316;585:10;;300:8316;585:10;300:8316;;;585:10;;300:8316;585:10;;;;3812:100;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;300:8316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1500:60;300:8316;;;;;;;;;;1501:10;300:8316;;;;;;;;;;1500:60;;300:8316;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;6680:9;300:8316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6172:10;300:8316;;6162:9;300:8316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6218:48;300:8316;6172:10;6218:48;;300:8316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;7651:29;300:8316;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;7912:3;300:8316;;7892:18;;;;;7954:10;300:8316;7954:10;7912:3;7954:10;;;:::i;:::-;300:8316;;;;;;;;;;7966:7;;;;:::i;:::-;300:8316;;;;;;;;;7926:48;;;;:::i;:::-;300:8316;7912:3;:::i;:::-;7877:13;;7892:18;300:8316;;;;;;;;;;7892:18;300:8316;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;2408:10;:19;2407:60;;;;300:8316;;;;;;;2534:17;300:8316;;;;;;4493:30;300:8316;;;;;4720:13;;;;;;300:8316;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4923:53;300:8316;;;2408:10;;300:8316;2408:10;300:8316;;;:::i;:::-;4923:53;;;2726:9;5333:16;;;;:::i;:::-;5329:285;;300:8316;5329:285;300:8316;;;;5376:107;;;;;;;300:8316;5376:107;;2408:10;300:8316;5376:107;;300:8316;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;5376:107;300:8316;;;5376:107;300:8316;5376:107;;;;;;;300:8316;5376:107;300:8316;5376:107;300:8316;5376:107;;;5329:285;300:8316;;5500:38;656:10;;300:8316;656:10;300:8316;;656:10;;300:8316;;656:10;;;;300:8316;;656:10;;;;300:8316;656:10;;300:8316;;;656:10;;;;;5376:107;;;;300:8316;5376:107;;;;;;;;;:::i;:::-;;;;;300:8316;;;;;;;;;4735:3;4826:11;;4735:3;4826:11;;;:::i;:::-;300:8316;;;;;;;;;;;;;;4814:7;;;;:::i;:::-;300:8316;;;;;4798:39;300:8316;;;;;;4798:39;:::i;:::-;300:8316;;4872:11;;;;:::i;:::-;300:8316;;;;;;;;;;;;;4860:7;;;;;:::i;:::-;300:8316;;;;4846:37;300:8316;;;;;;4846:37;:::i;:::-;300:8316;;4735:3;:::i;:::-;4705:13;;300:8316;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2407:60;300:8316;;;;;;6680:9;300:8316;;;;;2408:10;300:8316;;;;;;;;;;2407:60;;300:8316;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;300:8316:3;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;300:8316:3;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;300:8316:3;;;;;;;;;;;-1:-1:-1;300:8316:3;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;8365:248;300:8316;;8501:26;8485:42;;8481:76;;300:8316;422:47:5;8365:248:3;:::o;8481:76::-;8538:11;8545:4;8538:11;:::o;557:405:4:-;852:46;912:15;;;:43;;;;904:52;557:405;:::o;912:43::-;214:66;931:24;;;;557:405;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of Multi-Token Standard contract\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"MUST emit when an approval is updated\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \\\"circulating supply\\\" for a given token ID   To broadcast the existence of multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \\\"circulating supply\\\" for a given token ID   To broadcast the existence of a token ID with no initial balance, the contract SHOULD emit the TransferSingle event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"_id\":\"ID of the Token\",\"_owner\":\"The address of the token holder\"},\"returns\":{\"_0\":\"The _owner's balance of the Token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"params\":{\"_ids\":\"ID of the Tokens\",\"_owners\":\"The addresses of the token holders\"},\"returns\":{\"_0\":\"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"Address of authorized operator\",\"_owner\":\"The owner of the Tokens\"},\"returns\":{\"isOperator\":\"True if the operator is approved, false if not\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"params\":{\"_amounts\":\"Transfer amounts per token type\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source addresses\",\"_ids\":\"IDs of each token type\",\"_to\":\"Target addresses\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"params\":{\"_amount\":\"Transfered amount\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source address\",\"_id\":\"ID of the token type\",\"_to\":\"Target address\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID` and\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens\"},\"balanceOfBatch(address[],uint256[])\":{\"notice\":\"Get the balance of multiple account/token pairs\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Send multiple types of Tokens from the _from address to the _to address (with safety call)\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Transfers amount amount of an _id from the _from address to the _to address specified\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of caller's tokens\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/0xsequence/erc-1155/src/contracts/tokens/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x73a4ea88c195262c79aed1a8ad6da1e599e0ebe3911a89014e410dae6debda74\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d9f63f1c107c912620de676785b876f798f1563fee4fee897d45012daf52131\",\"dweb:/ipfs/QmQTvyVSZCUYjjo95yGgQgQvKzTBhb9fRbuzKvpmP5v5aQ\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x57f55a58438703c015af414f008886d084701600e11854507b58dbfe03f68d1c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a7c1b88eb303ae45ef2d7c5cf2e8ff1870c171e5da335e10b3def73643ba407\",\"dweb:/ipfs/Qmf1hy4w1aUiWeQdrhRmnYvVtoX8LxnsofaZrFVscyTG5m\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]},\"lib/0xsequence/erc-1155/src/contracts/tokens/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd63401796d39b616a10e5fd6e4666334299662daa330361081148eb324c82151\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://be1aa71575f7bf6f3c86285718c92ba83ce389ed77ae3782f1a79a49744e1729\",\"dweb:/ipfs/QmR7aU2QMfiFy7n6twDFQ5HBU768Dgd3ip4dJWnQEWsn73\"]},\"lib/0xsequence/erc-1155/src/contracts/utils/Address.sol\":{\"keccak256\":\"0x7dc1dd8c068d2da9a5fc7c897fcf4a48bd6c91834893c4ccdfe77c87ab86db2a\",\"urls\":[\"bzz-raw://b9267a6818b5400198ce2a3e5ca5e499617114131bd4c4b4690d0db523d6d28f\",\"dweb:/ipfs/QmbVFNcUMqR9gRPtFG9s8Y6PHLyLy8XhD8BfosmQo6aFuc\"]},\"lib/0xsequence/erc-1155/src/contracts/utils/ERC165.sol\":{\"keccak256\":\"0xf6539008743bf7ed5d8db655ed4075f433e01be8836a22b94182ec25097044c6\",\"urls\":[\"bzz-raw://3a90fa04f645b202907cf5ae62aaafaaf4a0d4d8059d5723aea8d6e306cdaf97\",\"dweb:/ipfs/QmR1EJr8FEUhpMCMgYtDeZoPokFC8trTDwMz886PwH3D9W\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"balanceOf(address,uint256)": {
								"notice": "Get the balance of an account's Tokens"
							},
							"balanceOfBatch(address[],uint256[])": {
								"notice": "Get the balance of multiple account/token pairs"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Queries the approval status of an operator for a given owner"
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"notice": "Send multiple types of Tokens from the _from address to the _to address (with safety call)"
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"notice": "Transfers amount amount of an _id from the _from address to the _to address specified"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens"
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"lib/0xsequence/erc-1155/src/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220922b256829b354e2a63da8240e656273c0639e6365076c3245b9c6a84eae66a264736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0x2B 0x25 PUSH9 0x29B354E2A63DA8240E PUSH6 0x6273C0639E63 PUSH6 0x76C3245B9C6 0xA8 0x4E 0xAE PUSH7 0xA264736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "90:875:4:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220922b256829b354e2a63da8240e656273c0639e6365076c3245b9c6a84eae66a264736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP3 0x2B 0x25 PUSH9 0x29B354E2A63DA8240E PUSH6 0x6273C0639E63 PUSH6 0x76C3245B9C6 0xA8 0x4E 0xAE PUSH7 0xA264736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "90:875:4:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Utility library of inline functions on addresses\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/0xsequence/erc-1155/src/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/utils/Address.sol\":{\"keccak256\":\"0x7dc1dd8c068d2da9a5fc7c897fcf4a48bd6c91834893c4ccdfe77c87ab86db2a\",\"urls\":[\"bzz-raw://b9267a6818b5400198ce2a3e5ca5e499617114131bd4c4b4690d0db523d6d28f\",\"dweb:/ipfs/QmbVFNcUMqR9gRPtFG9s8Y6PHLyLy8XhD8BfosmQo6aFuc\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Utility library of inline functions on addresses",
						"version": 1
					}
				}
			},
			"lib/0xsequence/erc-1155/src/contracts/utils/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/0xsequence/erc-1155/src/contracts/utils/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]},\"lib/0xsequence/erc-1155/src/contracts/utils/ERC165.sol\":{\"keccak256\":\"0xf6539008743bf7ed5d8db655ed4075f433e01be8836a22b94182ec25097044c6\",\"urls\":[\"bzz-raw://3a90fa04f645b202907cf5ae62aaafaaf4a0d4d8059d5723aea8d6e306cdaf97\",\"dweb:/ipfs/QmR1EJr8FEUhpMCMgYtDeZoPokFC8trTDwMz886PwH3D9W\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0f0d782ed5bf917dec0c8d571f87c753dc6417eb9f82b69e12532623359b6dc8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d927133d9b4aad2dd21541a6a6ddab98c4f8500b47705dfac95aecc42c0cac9f\",\"dweb:/ipfs/QmdT2VUZP41p4vjrSqyuwUttrZtm3koWdwkuakfebwvcdk\"]},\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x0b56404e790f707db5050025dc791c21b785797824efaaf28e6613444408ac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2e606d98a2460b229dffb2eefb5417e8c3c5722cd509fb0700485d92d02b8c4\",\"dweb:/ipfs/QmXhJJ2FzxHZNtGXoif5QwBv1SCEgh866AxuUzUFCuHmSF\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x33f6273d816d8dda817520535e972be165eb8615679a199f2487c982361556dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe73e94e894c07a4497e0e18ca12caf4519f556a4222263a0927b948e20ab961\",\"dweb:/ipfs/QmSeCmKR3cskrRMs6u9PTXLc5webpzLkuccGoBCcQFyfLX\"]},\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd03a3a49fb1275da311e070f48c8ce3727e64e7a48a94b05687de68bbcf2f2d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://595bc042ece34bb3c2176c1b594e7e66b20e138200a9eb1c57c6666c6d3aa6a3\",\"dweb:/ipfs/QmUWFovxqWUjNWgbCNvY2Ug1jvrwrtCRNJ5q21puGKLzix\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7b249694790ca2ae6a813e28025e0ebb9bccb5940a6cba637911fd9c17012055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2431f8875ede10b23dee66740a19fb1b2aa7cf57ea8430e7bce97be414c58748\",\"dweb:/ipfs/QmbCvNgrYi2kk7wBKJkwyRRrbwabhoxaNJjyK5frPkNvng\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol": {
				"AccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {AccessControl} that allows enumerating the members of each role.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0f0d782ed5bf917dec0c8d571f87c753dc6417eb9f82b69e12532623359b6dc8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d927133d9b4aad2dd21541a6a6ddab98c4f8500b47705dfac95aecc42c0cac9f\",\"dweb:/ipfs/QmdT2VUZP41p4vjrSqyuwUttrZtm3koWdwkuakfebwvcdk\"]},\"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x983a2c33837361f7fdbe66b7f314366a49fef2cd746ab4f2687c5dcd55139459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839896b430e9067837e6536f5bb175510e9af187b860deb1936f5f33cd2cf9fa\",\"dweb:/ipfs/QmUB1cEFBAUkXEkqGZSVxQEuTU4bNvtj4XoLkotYqcsy4c\"]},\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x0b56404e790f707db5050025dc791c21b785797824efaaf28e6613444408ac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2e606d98a2460b229dffb2eefb5417e8c3c5722cd509fb0700485d92d02b8c4\",\"dweb:/ipfs/QmXhJJ2FzxHZNtGXoif5QwBv1SCEgh866AxuUzUFCuHmSF\"]},\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x806cc5a67c785703de4860098eb715dbc80af228b8c2dfaf4d17ee7ef7c4d0d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c200c036fa58f1f9a53ac543a4d357f372c3186b2accedafb0962ed973cf22d5\",\"dweb:/ipfs/QmeuoGikK8eGhSgNFTzKtpxmkTaKXS94NTktKTAs42ZxPT\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x33f6273d816d8dda817520535e972be165eb8615679a199f2487c982361556dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe73e94e894c07a4497e0e18ca12caf4519f556a4222263a0927b948e20ab961\",\"dweb:/ipfs/QmSeCmKR3cskrRMs6u9PTXLc5webpzLkuccGoBCcQFyfLX\"]},\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd03a3a49fb1275da311e070f48c8ce3727e64e7a48a94b05687de68bbcf2f2d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://595bc042ece34bb3c2176c1b594e7e66b20e138200a9eb1c57c6666c6d3aa6a3\",\"dweb:/ipfs/QmUWFovxqWUjNWgbCNvY2Ug1jvrwrtCRNJ5q21puGKLzix\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7b249694790ca2ae6a813e28025e0ebb9bccb5940a6cba637911fd9c17012055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2431f8875ede10b23dee66740a19fb1b2aa7cf57ea8430e7bce97be414c58748\",\"dweb:/ipfs/QmbCvNgrYi2kk7wBKJkwyRRrbwabhoxaNJjyK5frPkNvng\"]},\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xdfbaff50ab3641233a7e63eed90c369bc54da2be0a5c8aa580f47bbb975b7419\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cd4d33f4432d2fa3853e86cdac547dd095500a9e4296ba0da357ffb5d7f4945\",\"dweb:/ipfs/QmYuAHhTFRDahKcpcPwA7j6moUwzSCkGmD18zNAUmihvk8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x0b56404e790f707db5050025dc791c21b785797824efaaf28e6613444408ac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2e606d98a2460b229dffb2eefb5417e8c3c5722cd509fb0700485d92d02b8c4\",\"dweb:/ipfs/QmXhJJ2FzxHZNtGXoif5QwBv1SCEgh866AxuUzUFCuHmSF\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"IAccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControlEnumerable declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x0b56404e790f707db5050025dc791c21b785797824efaaf28e6613444408ac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2e606d98a2460b229dffb2eefb5417e8c3c5722cd509fb0700485d92d02b8c4\",\"dweb:/ipfs/QmXhJJ2FzxHZNtGXoif5QwBv1SCEgh866AxuUzUFCuHmSF\"]},\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x806cc5a67c785703de4860098eb715dbc80af228b8c2dfaf4d17ee7ef7c4d0d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c200c036fa58f1f9a53ac543a4d357f372c3186b2accedafb0962ed973cf22d5\",\"dweb:/ipfs/QmeuoGikK8eGhSgNFTzKtpxmkTaKXS94NTktKTAs42ZxPT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3\",\"dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"UpgradeableBeacon": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.",
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation returned by the beacon is changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon."
							},
							"implementation()": {
								"details": "Returns the current implementation address."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeTo(address)": {
								"details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60803461011a57601f6105ee38819003918201601f19168301916001600160401b0383118484101761011f5780849260209460405283398101031261011a57516001600160a01b03808216919082820361011a576000549160018060a01b0319923384821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a33b156100b2575060015416176001556040516104b890816101368239f35b62461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146102ce5780635c60da1b1461027c578063715018a6146101e05780638da5cb5b1461018f5763f2fde38b1461005457600080fd5b3461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff808216809203610188576100ad610403565b8115610104578254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b80fd5b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57610217610403565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b503461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff81169081810361018857610328610403565b3b1561037f57807fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361042457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220c5471b22132cd15b928c4c1e3eecf6a636721aed3c412c5d6ea7e25407ed048464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x1F PUSH2 0x5EE CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x11F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x11A JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP3 SUB PUSH2 0x11A JUMPI PUSH1 0x0 SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP3 CALLER DUP5 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 EXTCODESIZE ISZERO PUSH2 0xB2 JUMPI POP PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP1 DUP2 PUSH2 0x136 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x188 JUMPI PUSH2 0xAD PUSH2 0x403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x104 JUMPI DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH2 0x217 PUSH2 0x403 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x188 JUMPI PUSH2 0x328 PUSH2 0x403 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x37F JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x424 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 SELFBALANCE SHL 0x22 SGT 0x2C 0xD1 JUMPDEST SWAP3 DUP13 0x4C 0x1E RETURNDATACOPY 0xEC 0xF6 0xA6 CALLDATASIZE PUSH19 0x1AED3C412C5D6EA7E25407ED048464736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "558:1545:16:-:0;;;;;;;;;;;;;-1:-1:-1;;558:1545:16;;;;-1:-1:-1;;;;;558:1545:16;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;558:1545:16;;;;;;;;;;-1:-1:-1;558:1545:16;;;;;;;;736:10:21;;558:1545:16;;;;-1:-1:-1;558:1545:16;;;736:10:21;;558:1545:16;;2646:40:10;-1:-1:-1;2646:40:10;;1746:19:20;:23;558:1545:16;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;558:1545:16;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;558:1545:16;;;;;;-1:-1:-1;558:1545:16;;;;;-1:-1:-1;558:1545:16"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"fun_checkOwner": {
									"entryPoint": 1027,
									"id": 1317,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146102ce5780635c60da1b1461027c578063715018a6146101e05780638da5cb5b1461018f5763f2fde38b1461005457600080fd5b3461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff808216809203610188576100ad610403565b8115610104578254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b80fd5b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57610217610403565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b503461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff81169081810361018857610328610403565b3b1561037f57807fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361042457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220c5471b22132cd15b928c4c1e3eecf6a636721aed3c412c5d6ea7e25407ed048464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x188 JUMPI PUSH2 0xAD PUSH2 0x403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x104 JUMPI DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH2 0x217 PUSH2 0x403 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x188 JUMPI PUSH2 0x328 PUSH2 0x403 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x37F JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x424 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 SELFBALANCE SHL 0x22 SGT 0x2C 0xD1 JUMPDEST SWAP3 DUP13 0x4C 0x1E RETURNDATACOPY 0xEC 0xF6 0xA6 CALLDATASIZE PUSH19 0x1AED3C412C5D6EA7E25407ED048464736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "558:1545:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:65:10;;:::i;:::-;2231:22;;558:1545:16;;;;;;;;;;;;2646:40:10;;;;558:1545:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:65:10;;:::i;:::-;558:1545:16;;;;;;;;;;2646:40:10;;;;558:1545:16;;;;;;;;;;;;;;;;1223:15;558:1545;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:65:10;;:::i;:::-;1746:19:20;:23;558:1545:16;;;;2057:35;558:1545;;;2057:35;558:1545;1652:27;;;;558:1545;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1408:132:10;558:1545:16;1316:6:10;558:1545:16;;736:10:21;1472:23:10;558:1545:16;;1408:132:10:o;558:1545:16:-;;;;;;;;;;;;;;;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation returned by the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon.\"},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":\"UpgradeableBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3\",\"dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x96d52f844533def4977d87f5b21e2352a27d8796ea9bf11a4a44691cae275de8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad7f20ead8ceb4bde382271d7303432d514dde18173ffee542a66509227f1740\",\"dweb:/ipfs/QmWR6DmXsF3BTnaSLcA87aepLXHqM4MwdeRi9SvnWwfxKw\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x965112323305082223ae22da6b1b15d98560f749d75ff43639ca2d427e136d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://223e25441501ad9372e21aa897460cb07b05e25c534865068767ca9dd7d7bfdf\",\"dweb:/ipfs/QmWKFG8zyL2gvohAoJY6y3ncAMGrwCxoqR5iQ2Sq7xdW2H\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203220acf2d060cf54b075ec8ff838e6c12aee9e6c085177a811f7abef6a2c87ff64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN KECCAK256 0xAC CALLCODE 0xD0 PUSH1 0xCF SLOAD 0xB0 PUSH22 0xEC8FF838E6C12AEE9E6C085177A811F7ABEF6A2C87FF PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "719:6358:19:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212203220acf2d060cf54b075ec8ff838e6c12aee9e6c085177a811f7abef6a2c87ff64736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ORIGIN KECCAK256 0xAC CALLCODE 0xD0 PUSH1 0xCF SLOAD 0xB0 PUSH22 0xEC8FF838E6C12AEE9E6C085177A811F7ABEF6A2C87FF PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "719:6358:19:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"lib/openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x965112323305082223ae22da6b1b15d98560f749d75ff43639ca2d427e136d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://223e25441501ad9372e21aa897460cb07b05e25c534865068767ca9dd7d7bfdf\",\"dweb:/ipfs/QmWKFG8zyL2gvohAoJY6y3ncAMGrwCxoqR5iQ2Sq7xdW2H\"]},\"lib/openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xdacd8902db78d5c80a8860b2dd87e1a725201d2b1936343e3e21649751a60dba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d1eede17bc7ee5245a3b55e873cd59b3d6cbb8fed76cb957a403403f84daa5e\",\"dweb:/ipfs/QmbHGiRxPVRCvu91UpPBKU5b4MrEvqKxHPiPrPpQxyg1LK\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203cb02f9305ba07739a9a36e45063afc207fc672f897ab4991b273ba65fbe5bc464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xB0 0x2F SWAP4 SDIV 0xBA SMOD PUSH20 0x9A9A36E45063AFC207FC672F897AB4991B273BA6 0x5F 0xBE JUMPDEST 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "202:9404:20:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212203cb02f9305ba07739a9a36e45063afc207fc672f897ab4991b273ba65fbe5bc464736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xB0 0x2F SWAP4 SDIV 0xBA SMOD PUSH20 0x9A9A36E45063AFC207FC672F897AB4991B273BA6 0x5F 0xBE JUMPDEST 0xC4 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "202:9404:20:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/Create2.sol": {
				"Create2": {
					"abi": [],
					"devdoc": {
						"details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a9e8910e61f3742edb84b0ff1930f29d954269e3bc68fc9051e07835ea151c0364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xE8 SWAP2 0xE PUSH2 0xF374 0x2E 0xDB DUP5 0xB0 SELFDESTRUCT NOT ADDRESS CALLCODE SWAP14 SWAP6 TIMESTAMP PUSH10 0xE3BC68FC9051E07835EA ISZERO SHR SUB PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "508:3517:22:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220a9e8910e61f3742edb84b0ff1930f29d954269e3bc68fc9051e07835ea151c0364736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0xE8 SWAP2 0xE PUSH2 0xF374 0x2E 0xDB DUP5 0xB0 SELFDESTRUCT NOT ADDRESS CALLCODE SWAP14 SWAP6 TIMESTAMP PUSH10 0xE3BC68FC9051E07835EA ISZERO SHR SUB PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "508:3517:22:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xff39e9a09fe168b6247c2f655cc9fede97483c9afc0956a0aa6b5dfdaac2eead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb53ed588b2f49728d4e41c1ff082d0e92221a76ce81aca0aaa627856ed6f4fb\",\"dweb:/ipfs/QmV8vkSqXZ3DMZB9n4nzV6QNnAsxAH4kCqZRnXJt3iEXMp\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122025c25c5c2424e45121016ec567fc87a2bb4588ee0355f5bfb00813a4d69141a364736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xC2 0x5C 0x5C 0x24 0x24 0xE4 MLOAD 0x21 ADD PUSH15 0xC567FC87A2BB4588EE0355F5BFB008 SGT LOG4 0xD6 SWAP2 COINBASE LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1453:2789:23:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea264697066735822122025c25c5c2424e45121016ec567fc87a2bb4588ee0355f5bfb00813a4d69141a364736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 0xC2 0x5C 0x5C 0x24 0x24 0xE4 MLOAD 0x21 ADD PUSH15 0xC567FC87A2BB4588EE0355F5BFB008 SGT LOG4 0xD6 SWAP2 COINBASE LOG3 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1453:2789:23:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207b20d44f37f02b9f716e3957a45b98afa01608ac61302c9eb1d4d849fccbc03164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x20D44F37F02B9F716E3957A45B98AFA01608AC61302C9EB1D4D849FC 0xCB 0xC0 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "231:2632:24:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212207b20d44f37f02b9f716e3957a45b98afa01608ac61302c9eb1d4d849fccbc03164736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x20D44F37F02B9F716E3957A45B98AFA01608AC61302C9EB1D4D849FC 0xCB 0xC0 BALANCE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "231:2632:24:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x33f6273d816d8dda817520535e972be165eb8615679a199f2487c982361556dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe73e94e894c07a4497e0e18ca12caf4519f556a4222263a0927b948e20ab961\",\"dweb:/ipfs/QmSeCmKR3cskrRMs6u9PTXLc5webpzLkuccGoBCcQFyfLX\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd03a3a49fb1275da311e070f48c8ce3727e64e7a48a94b05687de68bbcf2f2d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://595bc042ece34bb3c2176c1b594e7e66b20e138200a9eb1c57c6666c6d3aa6a3\",\"dweb:/ipfs/QmUWFovxqWUjNWgbCNvY2Ug1jvrwrtCRNJ5q21puGKLzix\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7b249694790ca2ae6a813e28025e0ebb9bccb5940a6cba637911fd9c17012055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2431f8875ede10b23dee66740a19fb1b2aa7cf57ea8430e7bce97be414c58748\",\"dweb:/ipfs/QmbCvNgrYi2kk7wBKJkwyRRrbwabhoxaNJjyK5frPkNvng\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"MerkleProof": {
					"abi": [],
					"devdoc": {
						"details": "These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207698ba44eb02276b075712ca6de9927d3b8b0bafef9b3dc1a7be928dc779f33f64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x98BA44EB02276B075712CA6DE9927D3B8B0BAFEF9B3DC1 0xA7 0xBE SWAP3 DUP14 0xC7 PUSH26 0xF33F64736F6C6343000813003300000000000000000000000000 ",
							"sourceMap": "821:9026:25:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212207698ba44eb02276b075712ca6de9927d3b8b0bafef9b3dc1a7be928dc779f33f64736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x98BA44EB02276B075712CA6DE9927D3B8B0BAFEF9B3DC1 0xA7 0xBE SWAP3 DUP14 0xC7 PUSH26 0xF33F64736F6C6343000813003300000000000000000000000000 ",
							"sourceMap": "821:9026:25:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6a28e93bdbdd829c48a6f03438fff50e10527649d69d5561386cd39e6d70f2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://989f0d81b7bc6989de0a8a2ddb063deaf8b95a85c6169658a9c8769a4d725a8a\",\"dweb:/ipfs/QmcWc1KLSL3tHPzXLacBQXC4bqDRDWiNb5BNAA9ft8jBEC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220558f331b8ab6cebb8328ea36e82df96edbe160b615e6c08783af1246c083623064736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE DUP16 CALLER SHL DUP11 0xB6 0xCE 0xBB DUP4 0x28 0xEA CALLDATASIZE 0xE8 0x2D 0xF9 PUSH15 0xDBE160B615E6C08783AF1246C08362 ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "210:12912:28:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220558f331b8ab6cebb8328ea36e82df96edbe160b615e6c08783af1246c083623064736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE DUP16 CALLER SHL DUP11 0xB6 0xCE 0xBB DUP4 0x28 0xEA CALLDATASIZE 0xE8 0x2D 0xF9 PUSH15 0xDBE160B615E6C08783AF1246C08362 ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "210:12912:28:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd03a3a49fb1275da311e070f48c8ce3727e64e7a48a94b05687de68bbcf2f2d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://595bc042ece34bb3c2176c1b594e7e66b20e138200a9eb1c57c6666c6d3aa6a3\",\"dweb:/ipfs/QmUWFovxqWUjNWgbCNvY2Ug1jvrwrtCRNJ5q21puGKLzix\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220a53e975e5caf132dd7fd16981f27b1de066422c009f022dc123feccaab44742064736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 RETURNDATACOPY SWAP8 0x5E 0x5C 0xAF SGT 0x2D 0xD7 REVERT AND SWAP9 0x1F 0x27 0xB1 0xDE MOD PUSH5 0x22C009F022 0xDC SLT EXTCODEHASH 0xEC 0xCA 0xAB PREVRANDAO PUSH21 0x2064736F6C63430008130033000000000000000000 ",
							"sourceMap": "223:1081:29:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220a53e975e5caf132dd7fd16981f27b1de066422c009f022dc123feccaab44742064736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 RETURNDATACOPY SWAP8 0x5E 0x5C 0xAF SGT 0x2D 0xD7 REVERT AND SWAP9 0x1F 0x27 0xB1 0xDE MOD PUSH5 0x22C009F022 0xDC SLT EXTCODEHASH 0xEC 0xCA 0xAB PREVRANDAO PUSH21 0x2064736F6C63430008130033000000000000000000 ",
							"sourceMap": "223:1081:29:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7b249694790ca2ae6a813e28025e0ebb9bccb5940a6cba637911fd9c17012055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2431f8875ede10b23dee66740a19fb1b2aa7cf57ea8430e7bce97be414c58748\",\"dweb:/ipfs/QmbCvNgrYi2kk7wBKJkwyRRrbwabhoxaNJjyK5frPkNvng\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212205f425ff7ac0e4cf313744334e4d5ec42ce34eecfbf74b6a3609d82016322e89164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F TIMESTAMP 0x5F 0xF7 0xAC 0xE 0x4C RETURN SGT PUSH21 0x4334E4D5EC42CE34EECFBF74B6A3609D82016322E8 SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1369:11967:30:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212205f425ff7ac0e4cf313744334e4d5ec42ce34eecfbf74b6a3609d82016322e89164736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5F TIMESTAMP 0x5F 0xF7 0xAC 0xE 0x4C RETURN SGT PUSH21 0x4334E4D5EC42CE34EECFBF74B6A3609D82016322E8 SWAP2 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1369:11967:30:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xdfbaff50ab3641233a7e63eed90c369bc54da2be0a5c8aa580f47bbb975b7419\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cd4d33f4432d2fa3853e86cdac547dd095500a9e4296ba0da357ffb5d7f4945\",\"dweb:/ipfs/QmYuAHhTFRDahKcpcPwA7j6moUwzSCkGmD18zNAUmihvk8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/SequenceProxyFactory.sol": {
				"SequenceProxyFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beacon",
							"outputs": [
								{
									"internalType": "contract UpgradeableBeacon",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "upgradeBeacon",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The factory owner is able to upgrade the beacon implementation.Proxy deployers are able to override the beacon reference with their own.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeBeacon(address)": {
								"params": {
									"implementation": "The new beacon implementation."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beacon\",\"outputs\":[{\"internalType\":\"contract UpgradeableBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgradeBeacon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The factory owner is able to upgrade the beacon implementation.Proxy deployers are able to override the beacon reference with their own.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeBeacon(address)\":{\"params\":{\"implementation\":\"The new beacon implementation.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"upgradeBeacon(address)\":{\"notice\":\"Upgrades the beacon implementation.\"}},\"notice\":\"An proxy factory that deploys upgradeable beacon proxies.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/SequenceProxyFactory.sol\":\"SequenceProxyFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3\",\"dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA\"]},\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x96d52f844533def4977d87f5b21e2352a27d8796ea9bf11a4a44691cae275de8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad7f20ead8ceb4bde382271d7303432d514dde18173ffee542a66509227f1740\",\"dweb:/ipfs/QmWR6DmXsF3BTnaSLcA87aepLXHqM4MwdeRi9SvnWwfxKw\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xff39e9a09fe168b6247c2f655cc9fede97483c9afc0956a0aa6b5dfdaac2eead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb53ed588b2f49728d4e41c1ff082d0e92221a76ce81aca0aaa627856ed6f4fb\",\"dweb:/ipfs/QmV8vkSqXZ3DMZB9n4nzV6QNnAsxAH4kCqZRnXJt3iEXMp\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/SequenceProxyFactory.sol\":{\"keccak256\":\"0x263347655a632136e3dabcc6e49da7fb9fa5b62a4f1e9eeed3cdd74234c81c53\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f41dc2c95c5d793105ed53f9ae9adea5a00264be78d86bf4f26cca6d33b7141\",\"dweb:/ipfs/QmfP1T4HDdDWYNFxMGHMeaq6owWmNdGjDMrh6hN3in2GVW\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0x366f201163ff5b941a61d5d2cd5966f25e332f52b197335cb68670c5fc83ba12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://485725a0c56e49d07de7233293e85fe1a586ddd70b07f1b14af5819874819da9\",\"dweb:/ipfs/QmRgQV9yzosT37zGpg6wb6Ff7q8Ux4Ttryo1RdPWaAfAED\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"upgradeBeacon(address)": {
								"notice": "Upgrades the beacon implementation."
							}
						},
						"notice": "An proxy factory that deploys upgradeable beacon proxies.",
						"version": 1
					}
				}
			},
			"src/proxies/TransparentUpgradeableBeaconProxy.sol": {
				"ITransparentUpgradeableBeaconProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":\"ITransparentUpgradeableBeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0x366f201163ff5b941a61d5d2cd5966f25e332f52b197335cb68670c5fc83ba12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://485725a0c56e49d07de7233293e85fe1a586ddd70b07f1b14af5819874819da9\",\"dweb:/ipfs/QmRgQV9yzosT37zGpg6wb6Ff7q8Ux4Ttryo1RdPWaAfAED\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TransparentUpgradeableBeaconProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "As the underlying proxy implementation (TransparentUpgradeableProxy) allows the admin to call the implementation, care must be taken to avoid proxy selector collisions. Implementation selectors must not conflict with the proxy selectors. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. The proxy selectors are: - 0xcf7a1d77: initialize - 0x3659cfe6: upgradeTo (from TransparentUpgradeableProxy) - 0x4f1ef286: upgradeToAndCall (from TransparentUpgradeableProxy) - 0x8f283970: changeAdmin (from TransparentUpgradeableProxy) - 0xf851a440: admin (from TransparentUpgradeableProxy) - 0x5c60da1b: implementation (from TransparentUpgradeableProxy)",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234610016576111cf908161001c8239f35b600080fdfe604060808152366103825773ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000917fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000843516146100c057600484517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b6100c8611192565b60049136831161037e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037e578235916101088361067f565b602435926101158461067f565b60443567ffffffffffffffff811161037a57610135839136908801610789565b941692156103525761014791166107e3565b803b156102cf578451907f5c60da1b000000000000000000000000000000000000000000000000000000009384835260209687848381865afa9384156102a657889461019d9189916102b2575b503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790555194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab575b610242575b8361023c6107d0565b80519101f35b8592839182525afa9182156102a65761026a9392610277575b506102646109b1565b91610a21565b5038808083818080610233565b610298919250843d861161029f575b610290818361070e565b810190610902565b903861025b565b503d610286565b61091a565b508661022e565b6102c99150863d881161029f57610290818361070e565b38610194565b60848360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b8487517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b8380fd5b73ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000907fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000833516146104395760046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b610441611192565b60049236841161067b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067b5783356104808161067f565b6024359161048d8361067f565b60443567ffffffffffffffff8111610677576104ad829136908901610789565b9316931561064e576104bf91166107e3565b813b156105ca576040517f5c60da1b000000000000000000000000000000000000000000000000000000009283825260209586838281855afa9283156102a65787936105149188916105b357503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617905560405194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab57610242578361023c6107d0565b6102c99150853d871161029f57610290818361070e565b6084846020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b856040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b8280fd5b73ffffffffffffffffffffffffffffffffffffffff81160361069d57565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106ed57604052565b6106a2565b6040810190811067ffffffffffffffff8211176106ed57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106ed57604052565b67ffffffffffffffff81116106ed57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561069d578035906107a08261074f565b926107ae604051948561070e565b8284526020838301011161069d57816000926020809301838601378301015290565b604051906107dd826106d1565b60008252565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61039081547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604080519373ffffffffffffffffffffffffffffffffffffffff9081851686521693846020820152a1811561087e577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b9081602091031261069d57516109178161067f565b90565b6040513d6000823e3d90fd5b1561092d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201527f73206e6f74206120636f6e7472616374000000000000000000000000000000006064820152fd5b604051906060820182811067ffffffffffffffff8211176106ed57604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806109179493602081519101845af43d15610a60573d91610a438361074f565b92610a51604051948561070e565b83523d6000602085013e610acd565b606091610acd565b15610a6f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b91929015610aed5750815115610ae1575090565b610917903b1515610a68565b825190915015610b005750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610b7d575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610b3c565b610bee610bd57fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b3303610d14576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe6000000000000000000000000000000000000000000000000000000008103610c515750610c49610f0f565b602081519101f35b7f4f1ef286000000000000000000000000000000000000000000000000000000008103610c865750610c81611083565b610c49565b7f8f283970000000000000000000000000000000000000000000000000000000008103610cb65750610c81610ec5565b7ff851a440000000000000000000000000000000000000000000000000000000008103610ce65750610c81610dfd565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610d1457610c81610e53565b610d1c610d3b565b6000808092368280378136915af43d82803e15610d37573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541680610df8575060206004917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156102a657600091610de0575090565b610917915060203d811161029f57610290818361070e565b905090565b610e05611192565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103541660405190602082015260208152610917816106f2565b610e5b611192565b610e63610d3b565b73ffffffffffffffffffffffffffffffffffffffff6040519116602082015260208152610917816106f2565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261069d576004356109178161067f565b610ecd611192565b3660041161069d57610efc73ffffffffffffffffffffffffffffffffffffffff610ef636610e8f565b166107e3565b604051610f08816106d1565b6000815290565b610f17611192565b3660041161069d5773ffffffffffffffffffffffffffffffffffffffff610f3d36610e8f565b1660405190610f4b826106d1565b60008252803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610ff7575b610fe3575b5050604051610f08816106d1565b610fef916102646109b1565b503880610fd5565b506000610fd0565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b3660041161069d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069d576004356110c18161067f565b60243567ffffffffffffffff811161069d576110f673ffffffffffffffffffffffffffffffffffffffff913690600401610789565b9116803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061118a57610fe3575050604051610f08816106d1565b506001610fd0565b3461069d5756fea264697066735822122043b19ddbf8b158c7b89e1cb0ede6eab8cd9c86ef2e863af97cab3041b065284164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x11CF SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xB1 SWAP14 0xDB 0xF8 0xB1 PC 0xC7 0xB8 SWAP15 SHR 0xB0 0xED 0xE6 0xEA 0xB8 0xCD SWAP13 DUP7 0xEF 0x2E DUP7 GASPRICE 0xF9 PUSH29 0xAB3041B065284164736F6C634300081300330000000000000000000000 ",
							"sourceMap": "1159:2219:32:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_payable": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 1929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory_array_string": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_6570": {
									"entryPoint": 1745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_6573": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun__fallback": {
									"entryPoint": 898,
									"id": 5557,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_changeAdmin": {
									"entryPoint": 2019,
									"id": 1618,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_dispatchAdmin": {
									"entryPoint": 3581,
									"id": 5827,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchChangeAdmin": {
									"entryPoint": 3781,
									"id": 5876,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchImplementation": {
									"entryPoint": 3667,
									"id": 5847,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeTo": {
									"entryPoint": 3855,
									"id": 5910,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeToAndCall": {
									"entryPoint": 4227,
									"id": 5942,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_fallback": {
									"entryPoint": 2964,
									"id": 5807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_fallback_1740": {
									"entryPoint": null,
									"id": 1740,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_functionDelegateCall": {
									"entryPoint": 2593,
									"id": 2583,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_implementation": {
									"entryPoint": 3387,
									"id": 5587,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_requireZeroValue": {
									"entryPoint": 4498,
									"id": 5964,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 2765,
									"id": 2622,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"require_helper_stringliteral_cc2e": {
									"entryPoint": 2664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_f95f": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"revert_forward": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"update_storage_value_offsett_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_address_payable": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xB1 SWAP14 0xDB 0xF8 0xB1 PC 0xC7 0xB8 SWAP15 SHR 0xB0 0xED 0xE6 0xEA 0xB8 0xCD SWAP13 DUP7 0xEF 0x2E DUP7 GASPRICE 0xF9 PUSH29 0xAB3041B065284164736F6C634300081300330000000000000000000000 ",
							"sourceMap": "1159:2219:32:-:0;;;;;2695:66:14;1159:2219:32;;3747:66:13;;;1159:2219:32;2293:25;2289:561;;;;-1:-1:-1;2382:7:32;2419:54;2382:7;;;;2407:66;2403:296;;2816:23;1159:2219;;2816:23;;;;2403:296;1406:12;;:::i;:::-;1533:1;1159:2219;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;1731:22;;1727:174;;1923:5;;1159:2219;1923:5;:::i;:::-;1746:19:20;;:23;1159:2219:32;;;;;;5377:35:13;;;;1159:2219:32;5377:35:13;;;;;;;;;;;;;;;5336:153;5377:35;;;;;2403:296:32;1746:19:20;;:23;;5336:153:13;:::i;:::-;4841:66;1159:2219:32;;;;;;;;;;;6021:25:13;;;;;;1159:2219:32;;6061:15:13;;;:28;;;2403:296:32;6057:132:13;;2403:296:32;1159:2219;;;:::i;:::-;2602:83;;;;;6057:132:13;6135:35;;;;;;;;;;;;;6958:77:20;6135:35:13;;;;6057:132;1159:2219:32;;;:::i;:::-;6958:77:20;;:::i;:::-;;6057:132:13;;;;;;;;;6135:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;6061:28::-;;;;;5377:35;;;;;;;;;;;;;;:::i;:::-;;;;1159:2219:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:174;1159:2219;;;1867:23;;;;1159:2219;;;;;;;;2203:702;1159:2219;3747:66:13;;;1159:2219:32;2293:25;2289:561;;;;-1:-1:-1;2382:7:32;2419:54;2382:7;;;;2407:66;2403:296;;2816:23;1159:2219;;2816:23;;;;2403:296;1406:12;;:::i;:::-;1533:1;1524:8;;1159:2219;;;;;;1524:8;1159:2219;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1524:8;;;1159:2219;;;;:::i;:::-;;;1731:22;;1727:174;;1923:5;1159:2219;;1923:5;:::i;:::-;1746:19:20;;:23;1159:2219:32;;;;;5377:35:13;;;;1159:2219:32;5377:35:13;;;;;;;;;;;;;;;5336:153;5377:35;;;;;1746:19:20;;:23;;5336:153:13;:::i;:::-;4841:66;1159:2219:32;;;;;;;;;;;;6021:25:13;;;;;;1159:2219:32;;6061:15:13;;;:28;;;6057:132;;1159:2219:32;;;:::i;5377:35:13:-;;;;;;;;;;;;;;:::i;1159:2219:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1727:174;1159:2219;;;1867:23;;;;1159:2219;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1159:2219:32;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;2316:1;1159:2219;;:::o;4413:138:13:-;3747:66;;;;4478:35;1159:2219:32;;;;;;;;;;;;;;;;;;4478:35:13;4155:22;;1159:2219:32;;;;;;;4413:138:13:o;1159:2219:32:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7237:332:20:-;7449:25;7237:332;7492:69;7237:332;;7449:25;;;;;;;;1159:2219:32;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;7449:25:20;;1159:2219:32;;;7492:69:20;:::i;1159:2219:32:-;;;7492:69:20;:::i;1159:2219:32:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;7865:644:20;;;;8075:427;;;1159:2219:32;;;8107:22:20;8103:290;;8407:17;;:::o;8103:290::-;8317:60;1746:19;;:23;;8317:60;:::i;8075:427::-;1159:2219:32;;;;-1:-1:-1;9212:21:20;:17;;9387:145;;;;;;;9208:388;1159:2219:32;;9564:20:20;;;;1159:2219:32;;9564:20:20;;;;1159:2219:32;;;;;;;;;9232:1:20;1159:2219:32;;;;;;;;;;;;9232:1:20;1159:2219:32;;;;;;;;;;;9564:20:20;;;;1159:2219:32;;;;;;;;;;;;;;;-1:-1:-1;1159:2219:32;;;;3487:1089:35;3548:25;3747:66:13;;;1159:2219:32;;;;3747:66:13;1159:2219:32;;;;3548:25:35;:10;:25;3747:66:13;;-1:-1:-1;3637:7:35;;;3674:47;3662:59;;3674:47;;3747:20;;;:::i;:::-;4437:75;;;;;;3658:766;3804:54;3792:66;;3804:54;;3884:27;;;:::i;:::-;3658:766;;3788:636;3948:49;3936:61;;3948:49;;4023:22;;;:::i;3932:492::-;4082:43;4070:55;;4082:43;;4151:16;;;:::i;4066:358::-;4204:52;4192:64;4204:52;;4282:25;;:::i;4188:236::-;2466:17:14;;:::i;:::-;1040:840;;;;;;;;;;;;;;;;;;;;;;;;;;;3073:303:32;1159:2219;3747:66:13;1056;3747;1159:2219:32;3248:28;3244:80;;3747:66:13;1186:38:33;;3747:66:13;4841;3747;1159:2219:32;;;1186:38:33;;;;1159:2219:32;1186:38:33;;;;;;;;;-1:-1:-1;1186:38:33;;;3333:36:32;3073:303;:::o;1186:38:33:-;;;;;;;;;;;;;;:::i;3244:80:32:-;3292:21;;;:::o;4927:165:35:-;4970:12;;:::i;:::-;1159:2219:32;3747:66:13;;1159:2219:32;;;5068:17:35;;;;1159:2219:32;5068:17:35;;;;;;:::i;5452:198::-;5504:12;;:::i;:::-;5583:17;;:::i;:::-;1159:2219:32;;;;;5617:26:35;;;1159:2219:32;5617:26:35;;;;;;:::i;1159:2219:32:-;;;;;;;;;;;;;:::i;5761:216:35:-;5810:12;;:::i;:::-;5894:8;5903:1;1159:2219:32;;;5941:8:35;1159:2219:32;5883:35:35;5894:8;5883:35;:::i;:::-;1159:2219:32;5941:8:35;:::i;:::-;1159:2219:32;;;;;:::i;:::-;5894:8:35;1159:2219:32;;5761:216:35;:::o;6052:255::-;6099:12;;:::i;:::-;6192:8;6201:1;1159:2219:32;;;;6181:35:35;6192:8;6181:35;:::i;:::-;1159:2219:32;;;;;;;:::i;:::-;6192:8:35;1159:2219:32;;1746:19:20;;:23;1159:2219:32;;1056:66:13;1159:2219:32;;;;;;;;1939:27:13;;6192:8:35;1939:27:13;;1159:2219:32;;2268:15:13;;;:28;;;6052:255:35;2264:114:13;;6052:255:35;1159:2219:32;;;;;;;:::i;2264:114:13:-;6958:77:20;1159:2219:32;;;:::i;6958:77:20:-;;2264:114:13;;;;2268:28;;6192:8:35;2268:28:13;;1159:2219:32;;;;;;;;6201:1:35;1159:2219:32;;;;;;;;;;;;;;;;;;;6591:254:35;6729:8;6738:1;1159:2219:32;;;;;6729:8:35;1159:2219:32;;;;6738:1:35;1159:2219:32;;;;:::i;:::-;;;;;;;;;;6729:8:35;;1159:2219:32;6738:1:35;1159:2219:32;;:::i;:::-;;;1746:19:20;;:23;1159:2219:32;;1056:66:13;1159:2219:32;;;;;;;;1939:27:13;;-1:-1:-1;1939:27:13;;1159:2219:32;;2268:15:13;;;:28;;;2264:114;;1159:2219:32;;;;;;;:::i;2268:28:13:-;;6813:4:35;2268:28:13;;7328:78:35;7384:9;1159:2219:32;;7328:78:35:o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"As the underlying proxy implementation (TransparentUpgradeableProxy) allows the admin to call the implementation, care must be taken to avoid proxy selector collisions. Implementation selectors must not conflict with the proxy selectors. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. The proxy selectors are: - 0xcf7a1d77: initialize - 0x3659cfe6: upgradeTo (from TransparentUpgradeableProxy) - 0x4f1ef286: upgradeToAndCall (from TransparentUpgradeableProxy) - 0x8f283970: changeAdmin (from TransparentUpgradeableProxy) - 0xf851a440: admin (from TransparentUpgradeableProxy) - 0x5c60da1b: implementation (from TransparentUpgradeableProxy)\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":\"TransparentUpgradeableBeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0x366f201163ff5b941a61d5d2cd5966f25e332f52b197335cb68670c5fc83ba12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://485725a0c56e49d07de7233293e85fe1a586ddd70b07f1b14af5819874819da9\",\"dweb:/ipfs/QmRgQV9yzosT37zGpg6wb6Ff7q8Ux4Ttryo1RdPWaAfAED\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/openzeppelin/BeaconProxy.sol": {
				"BeaconProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234610016576102c8908161001c8239f35b600080fdfe6080806040523661011d5760208160048173ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054167f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa90811561011157600091610082575b506101f5565b6020903d8211610109575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff8211176100dc576100d6935060405201610214565b3861007c565b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b3d915061008d565b6040513d6000823e3d90fd5b6004602073ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156101115760009161019957506101f5565b60203d81116101ee575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f820116820182811067ffffffffffffffff8211176100dc576100d69350604052810190610266565b503d6101a3565b6000808092368280378136915af43d82803e15610210573d90f35b3d90fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060209101126102615760805173ffffffffffffffffffffffffffffffffffffffff811681036102615790565b600080fd5b90816020910312610261575173ffffffffffffffffffffffffffffffffffffffff81168103610261579056fea2646970667358221220a5e8cb40fe612f51ecea1a2368cedac31aee81e9d188ce9ac50f7972c754c68464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x2C8 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x11D JUMPI PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x82 JUMPI JUMPDEST POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 SWAP1 RETURNDATASIZE DUP3 GT PUSH2 0x109 JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE ADD PUSH2 0x214 JUMP JUMPDEST CODESIZE PUSH2 0x7C JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x199 JUMPI POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1EE JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x266 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x210 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x261 JUMPI PUSH1 0x80 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x261 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xE8 0xCB BLOCKHASH INVALID PUSH2 0x2F51 0xEC 0xEA BYTE 0x23 PUSH9 0xCEDAC31AEE81E9D188 0xCE SWAP11 0xC5 0xF PUSH26 0x72C754C68464736F6C6343000813003300000000000000000000 ",
							"sourceMap": "779:965:33:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory_676": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_delegate": {
									"entryPoint": 501,
									"id": 1721,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_fallback": {
									"entryPoint": 285,
									"id": 1740,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040523661011d5760208160048173ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054167f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa90811561011157600091610082575b506101f5565b6020903d8211610109575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff8211176100dc576100d6935060405201610214565b3861007c565b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b3d915061008d565b6040513d6000823e3d90fd5b6004602073ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156101115760009161019957506101f5565b60203d81116101ee575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f820116820182811067ffffffffffffffff8211176100dc576100d69350604052810190610266565b503d6101a3565b6000808092368280378136915af43d82803e15610210573d90f35b3d90fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060209101126102615760805173ffffffffffffffffffffffffffffffffffffffff811681036102615790565b600080fd5b90816020910312610261575173ffffffffffffffffffffffffffffffffffffffff81168103610261579056fea2646970667358221220a5e8cb40fe612f51ecea1a2368cedac31aee81e9d188ce9ac50f7972c754c68464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x11D JUMPI PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x82 JUMPI JUMPDEST POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 SWAP1 RETURNDATASIZE DUP3 GT PUSH2 0x109 JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE ADD PUSH2 0x214 JUMP JUMPDEST CODESIZE PUSH2 0x7C JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x199 JUMPI POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1EE JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x266 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x210 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x261 JUMPI PUSH1 0x80 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x261 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xE8 0xCB BLOCKHASH INVALID PUSH2 0x2F51 0xEC 0xEA BYTE 0x23 PUSH9 0xCEDAC31AEE81E9D188 0xCE SWAP11 0xC5 0xF PUSH26 0x72C754C68464736F6C6343000813003300000000000000000000 ",
							"sourceMap": "779:965:33:-:0;;;;;2695:66:14;779:965:33;1186:38;4841:66:13;1186:38:33;4841:66:13;779:965:33;4841:66:13;;779:965:33;;1186:38;;;;;;;;;-1:-1:-1;1186:38:33;;;779:965;2466:17:14;;:::i;1186:38:33:-;;;;;;;;;779:965;;;;;;;;;;;;;;;;1186:38;779:965;;;;1186:38;;:::i;:::-;;;;779:965;;;;;;;1186:38;779:965;;1186:38;;;-1:-1:-1;1186:38:33;;;779:965;;;-1:-1:-1;779:965:33;;;;;2379:113:14;1186:38:33;;779:965;4841:66:13;;779:965:33;;;1186:38;;;;779:965;1186:38;;;;;;;;;-1:-1:-1;1186:38:33;;;2466:17:14;;:::i;1186:38:33:-;;;;;;;;779:965;;;;;;;;;;;;;;;;1186:38;779:965;;;;1186:38;;;;:::i;:::-;;;;;969:918:14;1040:840;;;;;;;;;;;;;;;;;;;;;;;;;;;779:965:33;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;779:965:33;;;;;;;;;;;;;;;;;;;;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/openzeppelin/ERC1967Proxy.sol": {
				"ERC1967Proxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460145760e7908161001a8239f35b600080fdfe60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea264697066735822122080986bae64af134e9781310ac1a939daae58d1a6f4cabe379960f606b5191dae64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x14 JUMPI PUSH1 0xE7 SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x5F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SWAP9 PUSH12 0xAE64AF134E9781310AC1A939 0xDA 0xAE PC 0xD1 0xA6 DELEGATECALL 0xCA 0xBE CALLDATACOPY SWAP10 PUSH1 0xF6 MOD 0xB5 NOT SAR 0xAE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "740:267:34:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea264697066735822122080986bae64af134e9781310ac1a939daae58d1a6f4cabe379960f606b5191dae64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x5F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 SWAP9 PUSH12 0xAE64AF134E9781310AC1A939 0xDA 0xAE PC 0xD1 0xA6 DELEGATECALL 0xCA 0xBE CALLDATACOPY SWAP10 PUSH1 0xF6 MOD 0xB5 NOT SAR 0xAE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "740:267:34:-:0;;;;;;;1056:66:13;;;;-1:-1:-1;740:267:34;;;;1040:840:14;;;740:267:34;;1040:840:14;;;;;;;;;;;;;;;;;740:267:34;1056:66:13;;;;-1:-1:-1;740:267:34;;;;1040:840:14;;;740:267:34;;1040:840:14;;;;;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol": {
				"ITransparentUpgradeableProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and some of its functions are implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and some of its functions are implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":\"ITransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TransparentUpgradeableProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that is upgradeable by an admin. Unlike the original OpenZeppelin implementation, this contract does not prevent the admin from calling the implementation. This potentially exposes the admin to a proxy selector attack. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. When using this contract, you must ensure that the implementation function selectors do not clash with the proxy selectors. The proxy selectors are: - 0x3659cfe6: upgradeTo - 0x4f1ef286: upgradeToAndCall - 0x8f283970: changeAdmin - 0xf851a440: admin - 0x5c60da1b: implementation NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523461001657610ac4908161001c8239f35b600080fdfe60806040523661016c577fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163303610167576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b602081519101f35b7f4f1ef2860000000000000000000000000000000000000000000000000000000081036100d957506100d46109cb565b61009c565b7f8f28397000000000000000000000000000000000000000000000000000000000810361010957506100d4610474565b7ff851a44000000000000000000000000000000000000000000000000000000000810361013957506100d4610303565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610167576100d461035c565b6101ff565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1633036101ff576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15610252573d90f35b3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176102a157604052565b610256565b6020810190811067ffffffffffffffff8211176102a157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176102a157604052565b61030b610a87565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354166040519060208201526020815261035981610285565b90565b610364610a87565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166040519060208201526020815261035981610285565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103d557565b600080fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60209101126103d55760043573ffffffffffffffffffffffffffffffffffffffff811681036103d55790565b67ffffffffffffffff81116102a157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6040519061046e826102a6565b60008252565b61047c610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff806104a3366103da565b167fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519084168152846020820152a1811561052d577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055610359610461565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b6105b9610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff6105df366103da565b16604051906105ed826102a6565b60008252803b156106ae577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906106a6575b61068c575b5050604051610685816102a6565b6000815290565b61069e916106986107e8565b91610858565b503880610677565b506000610672565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b803b156106ae5773ffffffffffffffffffffffffffffffffffffffff81167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906107e0575b6107d1575050565b6107dd916106986107e8565b50565b5060016107c9565b604051906060820182811067ffffffffffffffff8211176102a157604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806103599493602081519101845af43d15610897573d9161087a83610427565b9261088860405194856102c2565b83523d6000602085013e610904565b606091610904565b156108a657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156109245750815115610918575090565b610359903b151561089f565b8251909150156109375750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106109b4575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610973565b366004116103d55760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d557610a056103b2565b6024359067ffffffffffffffff82116103d557366023830112156103d557816004013591610a3283610427565b91610a4060405193846102c2565b83835236602485840101116103d5576000602085610a7f96602473ffffffffffffffffffffffffffffffffffffffff9601838801378501015216610732565b610359610461565b346103d55756fea26469706673582212202604ce993c1d920813b6d9facd053e140c7e93e5605de22dc87a788c38b9e48764736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0xAC4 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x16C JUMPI PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x167 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xD9 JUMPI POP PUSH2 0xD4 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x109 JUMPI POP PUSH2 0xD4 PUSH2 0x474 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x139 JUMPI POP PUSH2 0xD4 PUSH2 0x303 JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0x167 JUMPI PUSH2 0xD4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x1FF JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x252 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x30B PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x364 PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3D5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x3D5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x3D5 JUMPI SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2A1 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x46E DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x47C PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x4A3 CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP2 PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP5 SLOAD SWAP3 DUP2 MLOAD SWAP1 DUP5 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x52D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x5B9 PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5DF CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0x5ED DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6A6 JUMPI JUMPDEST PUSH2 0x68C JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x685 DUP2 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x69E SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST SWAP2 PUSH2 0x858 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x677 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x7E0 JUMPI JUMPDEST PUSH2 0x7D1 JUMPI POP POP JUMP JUMPDEST PUSH2 0x7DD SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x359 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x87A DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP3 PUSH2 0x888 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2C2 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x904 JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x904 JUMP JUMPDEST ISZERO PUSH2 0x8A6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x924 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x918 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x359 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x89F JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x937 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0x973 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3D5 JUMPI PUSH2 0xA05 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3D5 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3D5 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0xA32 DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP2 PUSH2 0xA40 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2C2 JUMP JUMPDEST DUP4 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP6 DUP5 ADD ADD GT PUSH2 0x3D5 JUMPI PUSH1 0x0 PUSH1 0x20 DUP6 PUSH2 0xA7F SWAP7 PUSH1 0x24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE AND PUSH2 0x732 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST CALLVALUE PUSH2 0x3D5 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 DIV 0xCE SWAP10 EXTCODECOPY SAR SWAP3 ADDMOD SGT 0xB6 0xD9 STATICCALL 0xCD SDIV RETURNDATACOPY EQ 0xC PUSH31 0x93E5605DE22DC87A788C38B9E48764736F6C63430008130033000000000000 ",
							"sourceMap": "2827:4581:35:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_payable": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_address_payable": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_array_string": {
									"entryPoint": 1121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_string": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_3829": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_3831": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun__fallback": {
									"entryPoint": null,
									"id": 1740,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_dispatchAdmin": {
									"entryPoint": 771,
									"id": 5827,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchChangeAdmin": {
									"entryPoint": 1140,
									"id": 5876,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchImplementation": {
									"entryPoint": 860,
									"id": 5847,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeTo": {
									"entryPoint": 1457,
									"id": 5910,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeToAndCall": {
									"entryPoint": 2507,
									"id": 5942,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_fallback": {
									"entryPoint": 364,
									"id": 5807,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_functionDelegateCall": {
									"entryPoint": 2136,
									"id": 2583,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_requireZeroValue": {
									"entryPoint": 2695,
									"id": 5964,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_upgradeToAndCall": {
									"entryPoint": 1842,
									"id": 1505,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 2308,
									"id": 2622,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"require_helper_stringliteral_cc2e": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523661016c577fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163303610167576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b602081519101f35b7f4f1ef2860000000000000000000000000000000000000000000000000000000081036100d957506100d46109cb565b61009c565b7f8f28397000000000000000000000000000000000000000000000000000000000810361010957506100d4610474565b7ff851a44000000000000000000000000000000000000000000000000000000000810361013957506100d4610303565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610167576100d461035c565b6101ff565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1633036101ff576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15610252573d90f35b3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176102a157604052565b610256565b6020810190811067ffffffffffffffff8211176102a157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176102a157604052565b61030b610a87565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354166040519060208201526020815261035981610285565b90565b610364610a87565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166040519060208201526020815261035981610285565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103d557565b600080fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60209101126103d55760043573ffffffffffffffffffffffffffffffffffffffff811681036103d55790565b67ffffffffffffffff81116102a157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6040519061046e826102a6565b60008252565b61047c610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff806104a3366103da565b167fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519084168152846020820152a1811561052d577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055610359610461565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b6105b9610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff6105df366103da565b16604051906105ed826102a6565b60008252803b156106ae577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906106a6575b61068c575b5050604051610685816102a6565b6000815290565b61069e916106986107e8565b91610858565b503880610677565b506000610672565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b803b156106ae5773ffffffffffffffffffffffffffffffffffffffff81167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906107e0575b6107d1575050565b6107dd916106986107e8565b50565b5060016107c9565b604051906060820182811067ffffffffffffffff8211176102a157604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806103599493602081519101845af43d15610897573d9161087a83610427565b9261088860405194856102c2565b83523d6000602085013e610904565b606091610904565b156108a657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156109245750815115610918575090565b610359903b151561089f565b8251909150156109375750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106109b4575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610973565b366004116103d55760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d557610a056103b2565b6024359067ffffffffffffffff82116103d557366023830112156103d557816004013591610a3283610427565b91610a4060405193846102c2565b83835236602485840101116103d5576000602085610a7f96602473ffffffffffffffffffffffffffffffffffffffff9601838801378501015216610732565b610359610461565b346103d55756fea26469706673582212202604ce993c1d920813b6d9facd053e140c7e93e5605de22dc87a788c38b9e48764736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x16C JUMPI PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x167 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xD9 JUMPI POP PUSH2 0xD4 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x109 JUMPI POP PUSH2 0xD4 PUSH2 0x474 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x139 JUMPI POP PUSH2 0xD4 PUSH2 0x303 JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0x167 JUMPI PUSH2 0xD4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x1FF JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x252 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x30B PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x364 PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3D5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x3D5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x3D5 JUMPI SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2A1 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x46E DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x47C PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x4A3 CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP2 PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP5 SLOAD SWAP3 DUP2 MLOAD SWAP1 DUP5 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x52D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x5B9 PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5DF CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0x5ED DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6A6 JUMPI JUMPDEST PUSH2 0x68C JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x685 DUP2 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x69E SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST SWAP2 PUSH2 0x858 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x677 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x7E0 JUMPI JUMPDEST PUSH2 0x7D1 JUMPI POP POP JUMP JUMPDEST PUSH2 0x7DD SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x359 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x87A DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP3 PUSH2 0x888 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2C2 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x904 JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x904 JUMP JUMPDEST ISZERO PUSH2 0x8A6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x924 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x918 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x359 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x89F JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x937 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0x973 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3D5 JUMPI PUSH2 0xA05 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3D5 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3D5 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0xA32 DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP2 PUSH2 0xA40 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2C2 JUMP JUMPDEST DUP4 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP6 DUP5 ADD ADD GT PUSH2 0x3D5 JUMPI PUSH1 0x0 PUSH1 0x20 DUP6 PUSH2 0xA7F SWAP7 PUSH1 0x24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE AND PUSH2 0x732 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST CALLVALUE PUSH2 0x3D5 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 DIV 0xCE SWAP10 EXTCODECOPY SAR SWAP3 ADDMOD SGT 0xB6 0xD9 STATICCALL 0xCD SDIV RETURNDATACOPY EQ 0xC PUSH31 0x93E5605DE22DC87A788C38B9E48764736F6C63430008130033000000000000 ",
							"sourceMap": "2827:4581:35:-:0;;;;2695:66:14;2827:4581:35;3747:66:13;;2827:4581:35;;3548:10;:25;2827:4581;;-1:-1:-1;3637:7:35;;;3674:47;3662:59;;3674:47;;3747:20;;;:::i;:::-;4437:75;;;;;;3658:766;3804:54;3792:66;;3804:54;;3884:27;;;:::i;:::-;3658:766;;3788:636;3948:49;3936:61;;3948:49;;4023:22;;;:::i;3932:492::-;4082:43;4070:55;;4082:43;;4151:16;;;:::i;4066:358::-;4204:52;4192:64;4204:52;;4282:25;;:::i;4188:236::-;;:::i;3487:1089::-;3747:66:13;;2827:4581:35;;3548:10;:25;2827:4581;;-1:-1:-1;3637:7:35;;;3674:47;3662:59;;3674:47;;3747:20;;;:::i;3544:1026::-;2827:4581;1056:66:13;3747;2827:4581:35;-1:-1:-1;1040:840:14;;;;;;;;;;;;;;;;;;;;;;;;;;2827:4581:35;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;4927:165::-;4970:12;;:::i;:::-;2827:4581;3747:66:13;;2827:4581:35;;;5068:17;;;;2827:4581;5068:17;;;;;;:::i;:::-;4927:165;:::o;5452:198::-;5504:12;;:::i;:::-;2827:4581;1056:66:13;3747;2827:4581:35;;;5617:26;;;;2827:4581;5617:26;;;;;;:::i;2827:4581::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;5894:8;2827:4581;;:::o;5761:216::-;5810:12;;:::i;:::-;5894:8;5903:1;2827:4581;;;;5894:8;5883:35;5894:8;5883:35;:::i;:::-;2827:4581;3747:66:13;;4478:35;2827:4581:35;3747:66:13;;2827:4581:35;;;;;;;;;;;;;4478:35:13;4155:22;;2827:4581:35;;;;;;;;;:::i;:::-;;;;;;;;5903:1;2827:4581;;;;;;;;;;;;;;;;;;;6052:255;6099:12;;:::i;:::-;6192:8;6201:1;2827:4581;;;;6181:35;6192:8;6181:35;:::i;:::-;2827:4581;;;;;;;:::i;:::-;6192:8;2827:4581;;1746:19:20;;:23;2827:4581:35;;1056:66:13;2827:4581:35;;;;;;;;1939:27:13;;6192:8:35;1939:27:13;;2827:4581:35;;2268:15:13;;;:28;;;6052:255:35;2264:114:13;;6052:255:35;2827:4581;;;;;;;:::i;:::-;6192:8;2827:4581;;6052:255;:::o;2264:114:13:-;6958:77:20;2827:4581:35;;;:::i;:::-;6958:77:20;;:::i;:::-;;2264:114:13;;;;2268:28;;6192:8:35;2268:28:13;;2827:4581:35;;;;;;;;6201:1;2827:4581;;;;;;;;;;;;;;;;;;;2115:270:13;1746:19:20;;:23;2827:4581:35;;;;;1056:66:13;2827:4581:35;;;;;;;;1939:27:13;-1:-1:-1;1939:27:13;;2827:4581:35;;2268:15:13;;;:28;;;2115:270;2264:114;;2115:270;;:::o;2264:114::-;6958:77:20;2827:4581:35;;;:::i;6958:77:20:-;;2115:270:13:o;2268:28::-;;6813:4:35;2268:28:13;;2827:4581:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7237:332:20:-;7449:25;7237:332;7492:69;7237:332;;7449:25;;;;;;;;2827:4581:35;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;7449:25:20;;2827:4581:35;;;7492:69:20;:::i;2827:4581:35:-;;;7492:69:20;:::i;2827:4581:35:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;7865:644:20;;;;8075:427;;;2827:4581:35;;;8107:22:20;8103:290;;8407:17;;:::o;8103:290::-;8317:60;1746:19;;:23;;8317:60;:::i;8075:427::-;2827:4581:35;;;;-1:-1:-1;9212:21:20;:17;;9387:145;;;;;;;9208:388;2827:4581:35;;9564:20:20;;;;2827:4581:35;;9564:20:20;;;;2827:4581:35;;;;;;;;;9232:1:20;2827:4581:35;;;;;;;;;;;;9232:1:20;2827:4581:35;;;;;;;;;;;9564:20:20;;;;2827:4581:35;;;;;;;;;;;;;;;-1:-1:-1;2827:4581:35;;;;6591:254;6729:8;6738:1;2827:4581;;;;;6729:8;2827:4581;;;;;;:::i;:::-;;;;;;;;;6729:8;2827:4581;;;;;;;;6738:1;2827:4581;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;6729:8;2827:4581;;;;;;;;6729:8;2827:4581;;6813:4;2827:4581;;;;;;;;;;;;;;6813:4;:::i;:::-;2827:4581;;:::i;7328:78::-;7384:9;2827:4581;;7328:78::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. Unlike the original OpenZeppelin implementation, this contract does not prevent the admin from calling the implementation. This potentially exposes the admin to a proxy selector attack. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. When using this contract, you must ensure that the implementation function selectors do not clash with the proxy selectors. The proxy selectors are: - 0x3659cfe6: upgradeTo - 0x4f1ef286: upgradeToAndCall - 0x8f283970: changeAdmin - 0xf851a440: admin - 0x5c60da1b: implementation NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/ERC1155/extensions/supply/ERC1155Supply.sol": {
				"ERC1155Supply": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidArrayLength",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_owners",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "isOperator",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "_ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "_amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tokenSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "MUST emit when an approval is updated"
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID   To broadcast the existence of multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0"
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \"circulating supply\" for a given token ID   To broadcast the existence of a token ID with no initial balance, the contract SHOULD emit the TransferSingle event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0"
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"params": {
									"_id": "ID of the Token",
									"_owner": "The address of the token holder"
								},
								"returns": {
									"_0": "The _owner's balance of the Token type requested"
								}
							},
							"balanceOfBatch(address[],uint256[])": {
								"params": {
									"_ids": "ID of the Tokens",
									"_owners": "The addresses of the token holders"
								},
								"returns": {
									"_0": "The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)"
								}
							},
							"isApprovedForAll(address,address)": {
								"params": {
									"_operator": "Address of authorized operator",
									"_owner": "The owner of the Tokens"
								},
								"returns": {
									"isOperator": "True if the operator is approved, false if not"
								}
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"params": {
									"_amounts": "Transfer amounts per token type",
									"_data": "Additional data with no specified format, sent in call to `_to`",
									"_from": "Source addresses",
									"_ids": "IDs of each token type",
									"_to": "Target addresses"
								}
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"params": {
									"_amount": "Transfered amount",
									"_data": "Additional data with no specified format, sent in call to `_to`",
									"_from": "Source address",
									"_id": "ID of the token type",
									"_to": "Target address"
								}
							},
							"setApprovalForAll(address,bool)": {
								"params": {
									"_approved": "True if the operator is approved, false to revoke approval",
									"_operator": "Address to add to the set of authorized operators"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "Interface id"
								},
								"returns": {
									"_0": "True if supported"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidArrayLength\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isOperator\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"MUST emit when an approval is updated\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \\\"circulating supply\\\" for a given token ID   To broadcast the existence of multiple token IDs with no initial balance, this SHOULD emit the TransferBatch event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Either TransferSingle or TransferBatch MUST emit when tokens are transferred, including zero amount transfers as well as minting or burning   Operator MUST be msg.sender   When minting/creating tokens, the `_from` field MUST be set to `0x0`   When burning/destroying tokens, the `_to` field MUST be set to `0x0`   The total amount transferred from address 0x0 minus the total amount transferred to 0x0 may be used by clients and exchanges to be added to the \\\"circulating supply\\\" for a given token ID   To broadcast the existence of a token ID with no initial balance, the contract SHOULD emit the TransferSingle event from `0x0` to `0x0`, with the token creator as `_operator`, and a `_amount` of 0\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"params\":{\"_id\":\"ID of the Token\",\"_owner\":\"The address of the token holder\"},\"returns\":{\"_0\":\"The _owner's balance of the Token type requested\"}},\"balanceOfBatch(address[],uint256[])\":{\"params\":{\"_ids\":\"ID of the Tokens\",\"_owners\":\"The addresses of the token holders\"},\"returns\":{\"_0\":\"The _owner's balance of the Token types requested (i.e. balance for each (owner, id) pair)\"}},\"isApprovedForAll(address,address)\":{\"params\":{\"_operator\":\"Address of authorized operator\",\"_owner\":\"The owner of the Tokens\"},\"returns\":{\"isOperator\":\"True if the operator is approved, false if not\"}},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"params\":{\"_amounts\":\"Transfer amounts per token type\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source addresses\",\"_ids\":\"IDs of each token type\",\"_to\":\"Target addresses\"}},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"params\":{\"_amount\":\"Transfered amount\",\"_data\":\"Additional data with no specified format, sent in call to `_to`\",\"_from\":\"Source address\",\"_id\":\"ID of the token type\",\"_to\":\"Target address\"}},\"setApprovalForAll(address,bool)\":{\"params\":{\"_approved\":\"True if the operator is approved, false to revoke approval\",\"_operator\":\"Address to add to the set of authorized operators\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface id\"},\"returns\":{\"_0\":\"True if supported\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidArrayLength()\":[{\"notice\":\"Invalid array input length.\"}]},\"kind\":\"user\",\"methods\":{\"balanceOf(address,uint256)\":{\"notice\":\"Get the balance of an account's Tokens\"},\"balanceOfBatch(address[],uint256[])\":{\"notice\":\"Get the balance of multiple account/token pairs\"},\"isApprovedForAll(address,address)\":{\"notice\":\"Queries the approval status of an operator for a given owner\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Send multiple types of Tokens from the _from address to the _to address (with safety call)\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"notice\":\"Transfers amount amount of an _id from the _from address to the _to address specified\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"Enable or disable approval for a third party (\\\"operator\\\") to manage all of caller's tokens\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check interface support.\"}},\"notice\":\"An ERC-1155 extension that tracks token supply.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/extensions/supply/ERC1155Supply.sol\":\"ERC1155Supply\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x73a4ea88c195262c79aed1a8ad6da1e599e0ebe3911a89014e410dae6debda74\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d9f63f1c107c912620de676785b876f798f1563fee4fee897d45012daf52131\",\"dweb:/ipfs/QmQTvyVSZCUYjjo95yGgQgQvKzTBhb9fRbuzKvpmP5v5aQ\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x57f55a58438703c015af414f008886d084701600e11854507b58dbfe03f68d1c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a7c1b88eb303ae45ef2d7c5cf2e8ff1870c171e5da335e10b3def73643ba407\",\"dweb:/ipfs/Qmf1hy4w1aUiWeQdrhRmnYvVtoX8LxnsofaZrFVscyTG5m\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]},\"lib/0xsequence/erc-1155/src/contracts/tokens/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd63401796d39b616a10e5fd6e4666334299662daa330361081148eb324c82151\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://be1aa71575f7bf6f3c86285718c92ba83ce389ed77ae3782f1a79a49744e1729\",\"dweb:/ipfs/QmR7aU2QMfiFy7n6twDFQ5HBU768Dgd3ip4dJWnQEWsn73\"]},\"lib/0xsequence/erc-1155/src/contracts/utils/Address.sol\":{\"keccak256\":\"0x7dc1dd8c068d2da9a5fc7c897fcf4a48bd6c91834893c4ccdfe77c87ab86db2a\",\"urls\":[\"bzz-raw://b9267a6818b5400198ce2a3e5ca5e499617114131bd4c4b4690d0db523d6d28f\",\"dweb:/ipfs/QmbVFNcUMqR9gRPtFG9s8Y6PHLyLy8XhD8BfosmQo6aFuc\"]},\"lib/0xsequence/erc-1155/src/contracts/utils/ERC165.sol\":{\"keccak256\":\"0xf6539008743bf7ed5d8db655ed4075f433e01be8836a22b94182ec25097044c6\",\"urls\":[\"bzz-raw://3a90fa04f645b202907cf5ae62aaafaaf4a0d4d8059d5723aea8d6e306cdaf97\",\"dweb:/ipfs/QmR1EJr8FEUhpMCMgYtDeZoPokFC8trTDwMz886PwH3D9W\"]},\"src/tokens/ERC1155/extensions/supply/ERC1155Supply.sol\":{\"keccak256\":\"0x2cb9d8c072fb859e28509c60af94f9840da83c4b614d77b28f75f842f10d2fe4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://618bab091bb3430018eb02464726590e9024fba6fa56e3b6c47e6576e41afb06\",\"dweb:/ipfs/QmQcdpB6FnjLfC8TLdZ3SY12U8xXiVcspdJAn6U4DPvAZm\"]},\"src/tokens/ERC1155/extensions/supply/IERC1155Supply.sol\":{\"keccak256\":\"0x81c6bf21a67e48051903a81a0c47e8fe6bc460d3ab2ddf162e6c97d291920e1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e40d3079c7057695fc66672af76664c30d50c430f38fa14f0586adfa68307b5\",\"dweb:/ipfs/QmR3mkENLcdShgvtE4ttCwTdYe463rSy8kw5SuN2ziBPyC\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"InvalidArrayLength()": [
								{
									"notice": "Invalid array input length."
								}
							]
						},
						"kind": "user",
						"methods": {
							"balanceOf(address,uint256)": {
								"notice": "Get the balance of an account's Tokens"
							},
							"balanceOfBatch(address[],uint256[])": {
								"notice": "Get the balance of multiple account/token pairs"
							},
							"isApprovedForAll(address,address)": {
								"notice": "Queries the approval status of an operator for a given owner"
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"notice": "Send multiple types of Tokens from the _from address to the _to address (with safety call)"
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"notice": "Transfers amount amount of an _id from the _from address to the _to address specified"
							},
							"setApprovalForAll(address,bool)": {
								"notice": "Enable or disable approval for a third party (\"operator\") to manage all of caller's tokens"
							},
							"supportsInterface(bytes4)": {
								"notice": "Check interface support."
							}
						},
						"notice": "An ERC-1155 extension that tracks token supply.",
						"version": 1
					}
				}
			},
			"src/tokens/ERC1155/extensions/supply/IERC1155Supply.sol": {
				"IERC1155Supply": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidArrayLength",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidArrayLength\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidArrayLength()\":[{\"notice\":\"Invalid array input length.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/extensions/supply/IERC1155Supply.sol\":\"IERC1155Supply\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC1155/extensions/supply/IERC1155Supply.sol\":{\"keccak256\":\"0x81c6bf21a67e48051903a81a0c47e8fe6bc460d3ab2ddf162e6c97d291920e1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e40d3079c7057695fc66672af76664c30d50c430f38fa14f0586adfa68307b5\",\"dweb:/ipfs/QmR3mkENLcdShgvtE4ttCwTdYe463rSy8kw5SuN2ziBPyC\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"InvalidArrayLength()": [
								{
									"notice": "Invalid array input length."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155SupplyFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"tokenSupply(uint256)": {
								"params": {
									"tokenId": "The ERC1155 token id."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"tokenSupply(uint256)\":{\"params\":{\"tokenId\":\"The ERC1155 token id.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"tokenSupply(uint256)\":{\"notice\":\"Returns the total supply of a given ERC1155 token.\"},\"totalSupply()\":{\"notice\":\"Returns the total supply of ERC1155 tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/extensions/supply/IERC1155Supply.sol\":\"IERC1155SupplyFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC1155/extensions/supply/IERC1155Supply.sol\":{\"keccak256\":\"0x81c6bf21a67e48051903a81a0c47e8fe6bc460d3ab2ddf162e6c97d291920e1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e40d3079c7057695fc66672af76664c30d50c430f38fa14f0586adfa68307b5\",\"dweb:/ipfs/QmR3mkENLcdShgvtE4ttCwTdYe463rSy8kw5SuN2ziBPyC\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"tokenSupply(uint256)": {
								"notice": "Returns the total supply of a given ERC1155 token."
							},
							"totalSupply()": {
								"notice": "Returns the total supply of ERC1155 tokens."
							}
						},
						"version": 1
					}
				},
				"IERC1155SupplySignals": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidArrayLength",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidArrayLength\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidArrayLength()\":[{\"notice\":\"Invalid array input length.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/extensions/supply/IERC1155Supply.sol\":\"IERC1155SupplySignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC1155/extensions/supply/IERC1155Supply.sol\":{\"keccak256\":\"0x81c6bf21a67e48051903a81a0c47e8fe6bc460d3ab2ddf162e6c97d291920e1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e40d3079c7057695fc66672af76664c30d50c430f38fa14f0586adfa68307b5\",\"dweb:/ipfs/QmR3mkENLcdShgvtE4ttCwTdYe463rSy8kw5SuN2ziBPyC\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"InvalidArrayLength()": [
								{
									"notice": "Invalid array input length."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/ERC1155/presets/items/IERC1155Items.sol": {
				"IERC1155Items": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "batchMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"batchMint(address,uint256[],uint256[],bytes)": {
								"params": {
									"amounts": "Amounts of tokens to mint.",
									"data": "Data to pass if receiver is contract.",
									"to": "Address to mint tokens to.",
									"tokenIds": "Token IDs to mint."
								}
							},
							"mint(address,uint256,uint256,bytes)": {
								"params": {
									"amount": "Amount of tokens to mint.",
									"data": "Data to pass if receiver is contract.",
									"to": "Address to mint tokens to.",
									"tokenId": "Token ID to mint."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchMint(address,uint256[],uint256[],bytes)\":{\"params\":{\"amounts\":\"Amounts of tokens to mint.\",\"data\":\"Data to pass if receiver is contract.\",\"to\":\"Address to mint tokens to.\",\"tokenIds\":\"Token IDs to mint.\"}},\"mint(address,uint256,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of tokens to mint.\",\"data\":\"Data to pass if receiver is contract.\",\"to\":\"Address to mint tokens to.\",\"tokenId\":\"Token ID to mint.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"notice\":\"Invalid initialization error.\"}]},\"kind\":\"user\",\"methods\":{\"batchMint(address,uint256[],uint256[],bytes)\":{\"notice\":\"Mint tokens.\"},\"mint(address,uint256,uint256,bytes)\":{\"notice\":\"Mint tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/presets/items/IERC1155Items.sol\":\"IERC1155Items\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC1155/presets/items/IERC1155Items.sol\":{\"keccak256\":\"0xf8cd490ce1704d9013cc60f5579f49d5a4ecf2922c26954d17d4c32cbcb0058b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7f6fd6deee96e8ffbf2a7cbb7eae4d2f83c72f9d99125eca399875463007221\",\"dweb:/ipfs/QmPtdhaAUmBC6vBxfrtjAXdjHUhLMZcFabsQ3JCh7xJVcq\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"notice": "Invalid initialization error."
								}
							]
						},
						"kind": "user",
						"methods": {
							"batchMint(address,uint256[],uint256[],bytes)": {
								"notice": "Mint tokens."
							},
							"mint(address,uint256,uint256,bytes)": {
								"notice": "Mint tokens."
							}
						},
						"version": 1
					}
				},
				"IERC1155ItemsFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "batchMint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"batchMint(address,uint256[],uint256[],bytes)": {
								"params": {
									"amounts": "Amounts of tokens to mint.",
									"data": "Data to pass if receiver is contract.",
									"to": "Address to mint tokens to.",
									"tokenIds": "Token IDs to mint."
								}
							},
							"mint(address,uint256,uint256,bytes)": {
								"params": {
									"amount": "Amount of tokens to mint.",
									"data": "Data to pass if receiver is contract.",
									"to": "Address to mint tokens to.",
									"tokenId": "Token ID to mint."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"batchMint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchMint(address,uint256[],uint256[],bytes)\":{\"params\":{\"amounts\":\"Amounts of tokens to mint.\",\"data\":\"Data to pass if receiver is contract.\",\"to\":\"Address to mint tokens to.\",\"tokenIds\":\"Token IDs to mint.\"}},\"mint(address,uint256,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of tokens to mint.\",\"data\":\"Data to pass if receiver is contract.\",\"to\":\"Address to mint tokens to.\",\"tokenId\":\"Token ID to mint.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchMint(address,uint256[],uint256[],bytes)\":{\"notice\":\"Mint tokens.\"},\"mint(address,uint256,uint256,bytes)\":{\"notice\":\"Mint tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/presets/items/IERC1155Items.sol\":\"IERC1155ItemsFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC1155/presets/items/IERC1155Items.sol\":{\"keccak256\":\"0xf8cd490ce1704d9013cc60f5579f49d5a4ecf2922c26954d17d4c32cbcb0058b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7f6fd6deee96e8ffbf2a7cbb7eae4d2f83c72f9d99125eca399875463007221\",\"dweb:/ipfs/QmPtdhaAUmBC6vBxfrtjAXdjHUhLMZcFabsQ3JCh7xJVcq\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"batchMint(address,uint256[],uint256[],bytes)": {
								"notice": "Mint tokens."
							},
							"mint(address,uint256,uint256,bytes)": {
								"notice": "Mint tokens."
							}
						},
						"version": 1
					}
				},
				"IERC1155ItemsSignals": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"notice\":\"Invalid initialization error.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/presets/items/IERC1155Items.sol\":\"IERC1155ItemsSignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC1155/presets/items/IERC1155Items.sol\":{\"keccak256\":\"0xf8cd490ce1704d9013cc60f5579f49d5a4ecf2922c26954d17d4c32cbcb0058b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7f6fd6deee96e8ffbf2a7cbb7eae4d2f83c72f9d99125eca399875463007221\",\"dweb:/ipfs/QmPtdhaAUmBC6vBxfrtjAXdjHUhLMZcFabsQ3JCh7xJVcq\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"notice": "Invalid initialization error."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/ERC1155/utility/sale/ERC1155Sale.sol": {
				"ERC1155Sale": {
					"abi": [
						{
							"inputs": [],
							"name": "GlobalSaleInactive",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "expected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "actual",
									"type": "uint256"
								}
							],
							"name": "InsufficientPayment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "currentSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSupply",
									"type": "uint256"
								}
							],
							"name": "InsufficientSupply",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSaleDetails",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTokenIds",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "root",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "proof",
									"type": "bytes32[]"
								},
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "MerkleProofInvalid",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "SaleInactive",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "WithdrawFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "supplyCap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "startTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "endTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRoot",
									"type": "bytes32"
								}
							],
							"name": "GlobalSaleDetailsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "supplyCap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "startTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "endTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRoot",
									"type": "bytes32"
								}
							],
							"name": "TokenSaleDetailsUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "root",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "proof",
									"type": "bytes32[]"
								},
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "checkMerkleProof",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "globalSaleDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "cost",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "supplyCap",
											"type": "uint256"
										},
										{
											"internalType": "uint64",
											"name": "startTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "endTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										}
									],
									"internalType": "struct IERC1155SaleFunctions.SaleDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "items",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "expectedPaymentToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "maxTotal",
									"type": "uint256"
								},
								{
									"internalType": "bytes32[]",
									"name": "proof",
									"type": "bytes32[]"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paymentToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "supplyCap",
									"type": "uint256"
								},
								{
									"internalType": "uint64",
									"name": "startTime",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "endTime",
									"type": "uint64"
								},
								{
									"internalType": "bytes32",
									"name": "merkleRoot",
									"type": "bytes32"
								}
							],
							"name": "setGlobalSaleDetails",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "paymentTokenAddr",
									"type": "address"
								}
							],
							"name": "setPaymentToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "supplyCap",
									"type": "uint256"
								},
								{
									"internalType": "uint64",
									"name": "startTime",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "endTime",
									"type": "uint64"
								},
								{
									"internalType": "bytes32",
									"name": "merkleRoot",
									"type": "bytes32"
								}
							],
							"name": "setTokenSaleDetails",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenSaleDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "cost",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "supplyCap",
											"type": "uint256"
										},
										{
											"internalType": "uint64",
											"name": "startTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "endTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										}
									],
									"internalType": "struct IERC1155SaleFunctions.SaleDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "withdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InsufficientPayment(address,uint256,uint256)": [
								{
									"params": {
										"actual": "Actual amount of tokens.",
										"currency": "Currency address. address(0) indicates ETH.",
										"expected": "Expected amount of tokens."
									}
								}
							],
							"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)": [
								{
									"params": {
										"addr": "Address to check.",
										"proof": "Merkle proof.",
										"root": "Merkle root.",
										"salt": "Salt used to generate the merkle leaf."
									}
								}
							],
							"SaleInactive(uint256)": [
								{
									"params": {
										"tokenId": "Invalid Token ID."
									}
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"checkMerkleProof(bytes32,bytes32[],address,bytes32)": {
								"params": {
									"addr": "Address to check.",
									"proof": "Merkle proof.",
									"root": "Merkle root.",
									"salt": "Salt used to generate the merkle leaf."
								},
								"returns": {
									"_0": "True if the proof is valid and has not yet been used by {addr}."
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"globalSaleDetails()": {
								"returns": {
									"_0": "Sale details."
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"initialize(address,address)": {
								"details": "This should be called immediately after deployment.",
								"params": {
									"items": "The ERC-1155 Items contract address",
									"owner": "Owner address"
								}
							},
							"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])": {
								"details": "tokenIds must be sorted ascending without duplicates.An empty proof is supplied when no proof is required.",
								"params": {
									"amounts": "Amounts of tokens to mint.",
									"data": "Data to pass if receiver is contract.",
									"expectedPaymentToken": "ERC20 token address to accept payment in. address(0) indicates ETH.",
									"maxTotal": "Maximum amount of payment tokens.",
									"proof": "Merkle proof for allowlist minting.",
									"to": "Address to mint tokens to.",
									"tokenIds": "Token IDs to mint."
								}
							},
							"paymentToken()": {
								"returns": {
									"_0": "Payment token address."
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setGlobalSaleDetails(uint256,uint256,uint64,uint64,bytes32)": {
								"details": "A zero end time indicates an inactive sale.",
								"params": {
									"cost": "The amount of payment tokens to accept for each token minted.",
									"endTime": "The end time of the sale. Tokens cannot be minted after this time.",
									"merkleRoot": "The merkle root for allowlist minting.",
									"startTime": "The start time of the sale. Tokens cannot be minted before this time.",
									"supplyCap": "The maximum number of tokens that can be minted."
								}
							},
							"setPaymentToken(address)": {
								"details": "This should be set before the sale starts.",
								"params": {
									"paymentTokenAddr": "The ERC20 token address to accept payment in. address(0) indicates ETH."
								}
							},
							"setTokenSaleDetails(uint256,uint256,uint256,uint64,uint64,bytes32)": {
								"details": "A zero end time indicates an inactive sale.",
								"params": {
									"cost": "The amount of payment tokens to accept for each token minted.",
									"endTime": "The end time of the sale. Tokens cannot be minted after this time.",
									"merkleRoot": "The merkle root for allowlist minting.",
									"startTime": "The start time of the sale. Tokens cannot be minted before this time.",
									"supplyCap": "The maximum number of tokens that can be minted.",
									"tokenId": "The token ID to set the sale details for."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "Interface id"
								},
								"returns": {
									"_0": "True if supported"
								}
							},
							"tokenSaleDetails(uint256)": {
								"params": {
									"tokenId": "Token ID to get sale details for."
								},
								"returns": {
									"_0": "Sale details."
								}
							},
							"withdrawERC20(address,address,uint256)": {
								"params": {
									"to": "Address to withdraw to.",
									"token": "The ERC20 token address.",
									"value": "Amount to withdraw."
								}
							},
							"withdrawETH(address,uint256)": {
								"params": {
									"to": "Address to withdraw to.",
									"value": "Amount to withdraw."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523461001657612c17908161001c8239f35b600080fdfe61010080604052600436101561001457600080fd5b600080608052803560e01c91826301ffc9a714611927575081630869678c146118f0578163119cd50c1461187e578163248a9ca31461184f5781632f2ff15d1461174d5781633013ce291461171757816336568abe1461165157816344004cc1146115b05781634782f77914611544578163485cc9551461121b5781634f651ccd146110d957816360e606f6146104675781636a326ab1146104015781639010d07c146103ac57816391d1485414610355578163975596001461020f578163a217fddf146101f1578163bad436611461017c57508063ca15c8731461014e5763d547741f1461010257600080fd5b3461014857604060031936011261014857610142600435610121611a33565b90806080515261013d6001604060805180602052200154612083565b612224565b60805180f35b60805180fd5b3461014857602060031936011261014857600435608051526001602052602060406080512054604051908152f35b346101485760806003193601126101485760243567ffffffffffffffff8111610148576101ad903690600401611c09565b6044929192359173ffffffffffffffffffffffffffffffffffffffff831683036101ee5760206101e4606435858588600435612a9f565b6040519015158152f35b80fd5b3461014857608051806003193601126101ee57602090604051908152f35b346101485760a06003193601126101485760043590602435916044359167ffffffffffffffff908184168094036101ee5750610249611a7e565b9260843591610256611f0d565b841690808210801561034b575b610321577f8fd3ac39fbb3d5e9c906dd9ec439dc6e584b8fa3ce02d5b67d589b22b22152a99560a09584608060405161029b81611a95565b88815284602082015285604082015286606082015201528560055581600655827fffffffffffffffffffffffffffffffff000000000000000000000000000000006fffffffffffffffff00000000000000006007549360401b1692161717600755836008556040519485526020850152604084015260608301526080820152a160805180f35b60046040517f85d4a748000000000000000000000000000000000000000000000000000000008152fd5b5042821115610263565b346101485760406003193601126101485760ff6040602092610375611a33565b6004356080515273ffffffffffffffffffffffffffffffffffffffff83608051808852209116825284522054166040519015158152f35b3461014857604060031936011261014857600435608051526001602052602073ffffffffffffffffffffffffffffffffffffffff6103f16024356040608051206124db565b9190546040519260031b1c168152f35b346101485760206003193601126101485773ffffffffffffffffffffffffffffffffffffffff61042f611a5b565b610437611f0d565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000600454161760045560805180f35b60e06003193601126101485761047b611a5b565b60243567ffffffffffffffff81116101485761049b903690600401611b71565b60443567ffffffffffffffff8111610148576104bb903690600401611b71565b916064359167ffffffffffffffff831161014857366023840112156101485782600401356104e881611bcf565b936104f66040519586611b18565b818552366024838301011161014857602482910160208601376020608051918501015273ffffffffffffffffffffffffffffffffffffffff60843516608435036101485767ffffffffffffffff60c435116101485761055d9391933660c435600401611c09565b9060c052926080519283928496610572612782565b60a0526105a067ffffffffffffffff604060a05101511667ffffffffffffffff606060a05101511690612a4c565b60805160e08190529094905b835160e05110156107e3576105c360e0518561273a565b51968760e051151591826107d8575b50506107ae57866105e560e0518761273a565b5191816080515260096020526105ff6040608051206127c5565b61062667ffffffffffffffff60408301511667ffffffffffffffff60608401511690612a4c565b1561069e5750508661066d57506106569061065060019961064a8360a051516122d7565b90612319565b9a612319565b9661066260e05161270d565b60e0529896986105ac565b602490604051907f035acf500000000000000000000000000000000000000000000000000000000082526004820152fd5b9099916080820151908c826106c4575b505050829161064a6106569461065093516122d7565b816106d491339060c05186612a9f565b1561072b575060808051339052600260209081528151604080822094909152929052512080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558161064a8c6106ae565b8c604051927f265c66a80000000000000000000000000000000000000000000000000000000084526004840152608060248401528060848401527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811161014857829060051b60a4928160c0518585013733604484015260648301528101030190fd5b60046040517f340bc4c9000000000000000000000000000000000000000000000000000000008152fd5b10159050878c6105d2565b84888a8693610e80575b5073ffffffffffffffffffffffffffffffffffffffff600454168073ffffffffffffffffffffffffffffffffffffffff6084351603610e42575060a435818110610dec575060843573ffffffffffffffffffffffffffffffffffffffff16610d3757803403610ce057505b73ffffffffffffffffffffffffffffffffffffffff60035460081c1660805190835182905b808210610b0d5750506006549081151580610a7f575b6109b75750505073ffffffffffffffffffffffffffffffffffffffff60035460081c1690813b15610148576109229461094961093473ffffffffffffffffffffffffffffffffffffffff93604051988997889687967fb48ab8b600000000000000000000000000000000000000000000000000000000885216600487015260806024870152608486019061274e565b9060031985830301604486015261274e565b600319838203016064840152608051966121e1565b0391608051905af180156109aa576109615760805180f35b67ffffffffffffffff81116109795760405280610142565b7f4e487b71000000000000000000000000000000000000000000000000000000006080515260416004526024608051fd5b6040513d608051823e3d90fd5b906020600492604051938480927f18160ddd000000000000000000000000000000000000000000000000000000008252608051905af19182156109aa5760805192610a49575b50610a45906040519384937fa9227830000000000000000000000000000000000000000000000000000000008552600485016040919493926060820195825260208201520152565b0390fd5b9091506020813d602011610a77575b81610a6560209383611b18565b81010312610148575190610a456109fd565b3d9150610a58565b506040517f18160ddd000000000000000000000000000000000000000000000000000000008152602081600481608051865af180156109aa5784849160805190610ad5575b610acf929350612319565b11610893565b5050506020813d602011610b05575b81610af160209383611b18565b810103126101485751829081908590610ac4565b3d9150610ae4565b9092610b19848761273a565b516080515260096020526001604060805120015480151580610c3f575b610b5f5750610b53610b5991610b4c868861273a565b5190612319565b9361270d565b9061087d565b8385876020610b6e838c61273a565b516024604051809681937f2693ebf20000000000000000000000000000000000000000000000000000000083526004830152608051905af19283156109aa5760805193610c09575b50610a4591610bc49161273a565b51926040519384937fa9227830000000000000000000000000000000000000000000000000000000008552600485016040919493926060820195825260208201520152565b9092506020813d602011610c37575b81610c2560209383611b18565b81010312610148575191610a45610bb6565b3d9150610c18565b50610c4a858861273a565b51604051907f2693ebf20000000000000000000000000000000000000000000000000000000082526004820152602081602481608051895af180156109aa57829160805191610ca9575b50610ca390610b4c888a61273a565b11610b36565b9150506020813d602011610cd8575b81610cc560209383611b18565b8101031261014857518190610ca3610c94565b3d9150610cb8565b6040517f1eabcfbe00000000000000000000000000000000000000000000000000000000815260843573ffffffffffffffffffffffffffffffffffffffff1660048201526024810191909152346044820152606490fd5b3415610d7d5760646040517f1eabcfbe00000000000000000000000000000000000000000000000000000000815260805160048201526080516024820152346044820152fd5b610de790604051907f23b872dd000000000000000000000000000000000000000000000000000000006020830152336024830152306044830152606482015260648152610dc981611a95565b73ffffffffffffffffffffffffffffffffffffffff6084351661280d565b610858565b6040517f1eabcfbe00000000000000000000000000000000000000000000000000000000815260843573ffffffffffffffffffffffffffffffffffffffff16600482015260248101929092526044820152606490fd5b606491604051917f1eabcfbe000000000000000000000000000000000000000000000000000000008352600483015260248201526080516044820152fd5b608060a05101519081610e94575b506107ed565b336080515260026020526080518260408220915260205260ff60406080512054161580610fb1575b15610f0f5750336080515260026020526080519060408220915260205260406080512060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790558580610e8e565b604051917f265c66a80000000000000000000000000000000000000000000000000000000083526004830152608060248301528060848301527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111610148578160a49160051b8060c051848401373360448301527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60648301528101030190fd5b509491959260409491945160208101907fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b1682527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60348201526034815261101c81611ae0565b5190209661102987611b59565b97611037604051998a611b18565b87895260208901368960051b60c05101116101485760c051905b8960051b60c0510182106110c957505095608051965b89518810156110b75761107a888b61273a565b51608051818310156110a55750906080515260205261109f6040608051205b9761270d565b96611067565b5260205261109f604060805120611099565b90939650839194979295985014610ebc565b8135815260209182019101611051565b346101485760c0600319360112610148576024356044356004356110fb611a7e565b60843567ffffffffffffffff93848216809203610148578460a4359361111f611f0d565b16908183108015611211575b610321577f8ced76aee4b96a1e218e7903610fc7d648023d9075677163a5b31396cb280f969660c09660036040519161116383611a95565b83835260208301908582526040840190878252606085019089825260808601938b85528c60805152600960205260406080512096518755516001870155600286019251167fffffffffffffffffffffffffffffffff000000000000000000000000000000006fffffffffffffffff00000000000000008454935160401b1692161717905551910155604051958652602086015260408501526060840152608083015260a0820152a160805180f35b504283111561112b565b3461014857604060031936011261014857611234611a5b565b61123c611a33565b6003549060ff821661151a5774ffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffff0000000000000000000000000000000000000000ff9160081b1691161760035560805180526113a260805160209281845273ffffffffffffffffffffffffffffffffffffffff604083209116809252835260805160ff604082205416156114ac575b506080518052600183818095526112e8836040608051206124f3565b507f4c02318d8c3aadc98ccf18aebbf3126f651e0c3f6a1de5ff8edcf6724a2ad5c280608051526080518083528460408220915282528060805160ff6040822054161561143f575b505060805152818152611348836040608051206124f3565b507f5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec80608051526080518083528460408220915282528060805160ff604082205416156113d2575b505060805152526040608051206124f3565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00600354161760035560805180f35b5260805180835284604082209152825260805160408120847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905584827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a48087611390565b5260805180835284604082209152825260805160408120847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905584827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a48087611330565b80526080518084528160408220915283526080516040812060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790558133917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4836112cc565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b346101485760406003193601126101485761155d611a5b565b611565611c3a565b60805180808093602435905af161157a612950565b50156115865760805180f35b60046040517f750b219c000000000000000000000000000000000000000000000000000000008152fd5b34610148576060600319360112610148576115c9611a5b565b6115d1611a33565b6115d9611c3a565b604051907fa9059cbb00000000000000000000000000000000000000000000000000000000602083015273ffffffffffffffffffffffffffffffffffffffff8091166024830152604435604483015260448252608082019282841067ffffffffffffffff85111761097957610142936040521661280d565b346101485760406003193601126101485761166a611a33565b3373ffffffffffffffffffffffffffffffffffffffff8216036116935761014290600435612224565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152fd5b3461014857608051806003193601126101ee57602073ffffffffffffffffffffffffffffffffffffffff60045416604051908152f35b34610148576040600319360112610148576117db600435600161176e611a33565b9180608051526080519061178c836040602094808652200154612083565b80608051526080519384835273ffffffffffffffffffffffffffffffffffffffff60408620911680955282528060805160ff604082205416156117e257505060805152526040608051206124f3565b5060805180f35b5260805180835284604082209152825260805160408120847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905584827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a48086611390565b346101485760206003193601126101485760043560805152602060016040608051808452200154604051908152f35b3461014857608051806003193601126101ee57611899612a74565b506118ec6118a5612782565b6040519182918291909160808060a0830194805184526020810151602085015267ffffffffffffffff80604083015116604086015260608201511660608501520151910152565b0390f35b3461014857602060031936011261014857611909612a74565b506004356080515260096020526118ec6118a56040608051206127c5565b34611a2f576020600319360112611a2f576004357fffffffff000000000000000000000000000000000000000000000000000000008116809103611a2b5760209250807f49007a5f000000000000000000000000000000000000000000000000000000001490811561199b575b5015158152f35b7f5a05180f000000000000000000000000000000000000000000000000000000008114915081156119ce575b5083611994565b7f7965db0b00000000000000000000000000000000000000000000000000000000811491508115611a01575b50836119c7565b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014836119fa565b8280fd5b5080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203611a5657565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff82168203611a5657565b6064359067ffffffffffffffff82168203611a5657565b60a0810190811067ffffffffffffffff821117611ab157604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff821117611ab157604052565b6080810190811067ffffffffffffffff821117611ab157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117611ab157604052565b67ffffffffffffffff8111611ab15760051b60200190565b81601f82011215611a5657803591611b8883611b59565b92611b966040519485611b18565b808452602092838086019260051b820101928311611a56578301905b828210611bc0575050505090565b81358152908301908301611bb2565b67ffffffffffffffff8111611ab157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b9181601f84011215611a565782359167ffffffffffffffff8311611a56576020808501948460051b010111611a5657565b3360009081527f20be27040b8e00df40bca0df34743417f3574a156386188f7d7f14369e5ee82b602090815260408083205490927f5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec9160ff1615611c9e5750505050565b611ca733612366565b91845190611cb482611afc565b60428252848201926060368537825115611ee05760308453825190600191821015611ee05790607860218501536041915b818311611e1557505050611db9576048610a45938693611d8393611d7498519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a860152611d3f815180928c6037890191016121be565b8401917f206973206d697373696e6720726f6c65200000000000000000000000000000006037840152518093868401906121be565b01036028810187520185611b18565b519283927f08c379a0000000000000000000000000000000000000000000000000000000008452600484015260248301906121e1565b6064848651907f08c379a000000000000000000000000000000000000000000000000000000000825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015611eb3577f3031323334353637383961626364656600000000000000000000000000000000901a611e528587612326565b5360041c928015611e86577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019190611ce5565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526032600452fd5b3360009081527f6058ee1f1c102e8ac9ef0c4319964e42c1ab00dfba021f8302fd0802656934ac602090815260408083205490927f4c02318d8c3aadc98ccf18aebbf3126f651e0c3f6a1de5ff8edcf6724a2ad5c29160ff1615611f715750505050565b611f7a33612366565b91845190611f8782611afc565b60428252848201926060368537825115611ee05760308453825190600191821015611ee05790607860218501536041915b81831161201257505050611db9576048610a45938693611d8393611d7498519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a860152611d3f815180928c6037890191016121be565b909192600f81166010811015611eb3577f3031323334353637383961626364656600000000000000000000000000000000901a61204f8587612326565b5360041c928015611e86577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019190611fb8565b600090808252602090828252604092838120338252835260ff8482205416156120ac5750505050565b6120b533612366565b918451906120c282611afc565b60428252848201926060368537825115611ee05760308453825190600191821015611ee05790607860218501536041915b81831161214d57505050611db9576048610a45938693611d8393611d7498519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a860152611d3f815180928c6037890191016121be565b909192600f81166010811015611eb3577f3031323334353637383961626364656600000000000000000000000000000000901a61218a8587612326565b5360041c928015611e86577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0191906120f3565b60005b8381106121d15750506000910152565b81810151838201526020016121c1565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361221d815180928187528780880191016121be565b0116010190565b90604061226f926000908082528160205273ffffffffffffffffffffffffffffffffffffffff83832094169384835260205260ff8383205416612272575b81526001602052206125b4565b50565b808252816020528282208483526020528282207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690553384827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a4612262565b818102929181159184041417156122ea57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b919082018092116122ea57565b908151811015612337570160200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6040519061237382611ae0565b602a82526020820160403682378251156123375760309053815160019081101561233757607860218401536029905b8082116124105750506123b25790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f811660108110156124ad577f3031323334353637383961626364656600000000000000000000000000000000901a61244c8486612326565b5360041c91801561247f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01906123a2565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b80548210156123375760005260206000200190600090565b919060018301600090828252806020526040822054156000146125ae5784549468010000000000000000861015612581578361257161253c886001604098999a018555846124db565b81939154907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9060031b92831b921b19161790565b9055549382526020522055600190565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b50925050565b90600182019060009281845282602052604084205490811515600014612706577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff918281018181116126d9578254908482019182116126ac57808203612677575b5050508054801561264a5782019161262d83836124db565b909182549160031b1b191690555582526020526040812055600190565b6024867f4e487b710000000000000000000000000000000000000000000000000000000081526031600452fd5b61269761268761253c93866124db565b90549060031b1c928392866124db565b90558652846020526040862055388080612615565b6024887f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6024877f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b5050505090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146122ea5760010190565b80518210156123375760209160051b010190565b90815180825260208080930193019160005b82811061276e575050505090565b835185529381019392810192600101612760565b6040519061278f82611a95565b816005548152600654602082015260075467ffffffffffffffff90818116604084015260401c1660608201526080600854910152565b906040516127d281611a95565b6080600382948054845260018101546020850152600281015467ffffffffffffffff90818116604087015260401c1660608501520154910152565b73ffffffffffffffffffffffffffffffffffffffff1690604051604081019080821067ffffffffffffffff831117611ab15761288d916040526020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af1612887612950565b91612980565b80519182159184831561292c575b5050509050156128a85750565b608490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b919381809450010312611a2f578201519081151582036101ee57508038808461289b565b3d1561297b573d9061296182611bcf565b9161296f6040519384611b18565b82523d6000602084013e565b606090565b919290156129fb5750815115612994575090565b3b1561299d5790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b825190915015612a0e5750805190602001fd5b610a45906040519182917f08c379a00000000000000000000000000000000000000000000000000000000083526020600484015260248301906121e1565b908015918215612a6a575b508115612a62575090565b905042101590565b4210915038612a57565b60405190612a8182611a95565b60006080838281528260208201528260408201528260608201520152565b91929060009073ffffffffffffffffffffffffffffffffffffffff8316825260209060028252604093848420868552835260ff8585205416159788612aea575b505050505050505090565b909192939597508496989451907fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008583019360601b168352603482015260348152612b3481611ae0565b51902090612b4188611b59565b97612b4e8751998a611b18565b8089528389019060051b820191368311612bdd578490915b838310612bcd57505050509183925b8751841015612bb857612b88848961273a565b519081811015612ba85785528252612ba28585209361270d565b92612b75565b9085528252612ba2858520610b53565b94509550505050143880808080808080612adf565b8235815291810191859101612b66565b8680fdfea2646970667358221220036789f230adce122f8986ce878d7f455cb45c2b5a3b66278304adee742ba3ee64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x2C17 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH2 0x100 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 MSTORE DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0x1927 JUMPI POP DUP2 PUSH4 0x869678C EQ PUSH2 0x18F0 JUMPI DUP2 PUSH4 0x119CD50C EQ PUSH2 0x187E JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0x184F JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0x174D JUMPI DUP2 PUSH4 0x3013CE29 EQ PUSH2 0x1717 JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0x1651 JUMPI DUP2 PUSH4 0x44004CC1 EQ PUSH2 0x15B0 JUMPI DUP2 PUSH4 0x4782F779 EQ PUSH2 0x1544 JUMPI DUP2 PUSH4 0x485CC955 EQ PUSH2 0x121B JUMPI DUP2 PUSH4 0x4F651CCD EQ PUSH2 0x10D9 JUMPI DUP2 PUSH4 0x60E606F6 EQ PUSH2 0x467 JUMPI DUP2 PUSH4 0x6A326AB1 EQ PUSH2 0x401 JUMPI DUP2 PUSH4 0x9010D07C EQ PUSH2 0x3AC JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x355 JUMPI DUP2 PUSH4 0x97559600 EQ PUSH2 0x20F JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x1F1 JUMPI DUP2 PUSH4 0xBAD43661 EQ PUSH2 0x17C JUMPI POP DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x14E JUMPI PUSH4 0xD547741F EQ PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x142 PUSH1 0x4 CALLDATALOAD PUSH2 0x121 PUSH2 0x1A33 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x80 MLOAD MSTORE PUSH2 0x13D PUSH1 0x1 PUSH1 0x40 PUSH1 0x80 MLOAD DUP1 PUSH1 0x20 MSTORE KECCAK256 ADD SLOAD PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x80 MLOAD DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI PUSH2 0x1AD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x44 SWAP3 SWAP2 SWAP3 CALLDATALOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP4 SUB PUSH2 0x1EE JUMPI PUSH1 0x20 PUSH2 0x1E4 PUSH1 0x64 CALLDATALOAD DUP6 DUP6 DUP9 PUSH1 0x4 CALLDATALOAD PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x80 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0xA0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x1EE JUMPI POP PUSH2 0x249 PUSH2 0x1A7E JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP2 PUSH2 0x256 PUSH2 0x1F0D JUMP JUMPDEST DUP5 AND SWAP1 DUP1 DUP3 LT DUP1 ISZERO PUSH2 0x34B JUMPI JUMPDEST PUSH2 0x321 JUMPI PUSH32 0x8FD3AC39FBB3D5E9C906DD9EC439DC6E584B8FA3CE02D5B67D589B22B22152A9 SWAP6 PUSH1 0xA0 SWAP6 DUP5 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x29B DUP2 PUSH2 0x1A95 JUMP JUMPDEST DUP9 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP6 PUSH1 0x40 DUP3 ADD MSTORE DUP7 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE DUP6 PUSH1 0x5 SSTORE DUP2 PUSH1 0x6 SSTORE DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 PUSH1 0x7 SLOAD SWAP4 PUSH1 0x40 SHL AND SWAP3 AND OR OR PUSH1 0x7 SSTORE DUP4 PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE LOG1 PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x85D4A74800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP TIMESTAMP DUP3 GT ISZERO PUSH2 0x263 JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH2 0x375 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x80 MLOAD DUP1 DUP9 MSTORE KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x3F1 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24DB JUMP JUMPDEST SWAP2 SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x42F PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x437 PUSH2 0x1F0D JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x47B PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI PUSH2 0x49B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI PUSH2 0x4BB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B71 JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x148 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x148 JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x4E8 DUP2 PUSH2 0x1BCF JUMP JUMPDEST SWAP4 PUSH2 0x4F6 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1B18 JUMP JUMPDEST DUP2 DUP6 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x148 JUMPI PUSH1 0x24 DUP3 SWAP2 ADD PUSH1 0x20 DUP7 ADD CALLDATACOPY PUSH1 0x20 PUSH1 0x80 MLOAD SWAP2 DUP6 ADD ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x84 CALLDATALOAD AND PUSH1 0x84 CALLDATALOAD SUB PUSH2 0x148 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xC4 CALLDATALOAD GT PUSH2 0x148 JUMPI PUSH2 0x55D SWAP4 SWAP2 SWAP4 CALLDATASIZE PUSH1 0xC4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x1C09 JUMP JUMPDEST SWAP1 PUSH1 0xC0 MSTORE SWAP3 PUSH1 0x80 MLOAD SWAP3 DUP4 SWAP3 DUP5 SWAP7 PUSH2 0x572 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0xA0 MSTORE PUSH2 0x5A0 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0xA0 MLOAD ADD MLOAD AND PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x60 PUSH1 0xA0 MLOAD ADD MLOAD AND SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xE0 DUP2 SWAP1 MSTORE SWAP1 SWAP5 SWAP1 JUMPDEST DUP4 MLOAD PUSH1 0xE0 MLOAD LT ISZERO PUSH2 0x7E3 JUMPI PUSH2 0x5C3 PUSH1 0xE0 MLOAD DUP6 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP7 DUP8 PUSH1 0xE0 MLOAD ISZERO ISZERO SWAP2 DUP3 PUSH2 0x7D8 JUMPI JUMPDEST POP POP PUSH2 0x7AE JUMPI DUP7 PUSH2 0x5E5 PUSH1 0xE0 MLOAD DUP8 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP2 DUP2 PUSH1 0x80 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x5FF PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x27C5 JUMP JUMPDEST PUSH2 0x626 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 DUP4 ADD MLOAD AND PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x60 DUP5 ADD MLOAD AND SWAP1 PUSH2 0x2A4C JUMP JUMPDEST ISZERO PUSH2 0x69E JUMPI POP POP DUP7 PUSH2 0x66D JUMPI POP PUSH2 0x656 SWAP1 PUSH2 0x650 PUSH1 0x1 SWAP10 PUSH2 0x64A DUP4 PUSH1 0xA0 MLOAD MLOAD PUSH2 0x22D7 JUMP JUMPDEST SWAP1 PUSH2 0x2319 JUMP JUMPDEST SWAP11 PUSH2 0x2319 JUMP JUMPDEST SWAP7 PUSH2 0x662 PUSH1 0xE0 MLOAD PUSH2 0x270D JUMP JUMPDEST PUSH1 0xE0 MSTORE SWAP9 SWAP7 SWAP9 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x35ACF5000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP10 SWAP2 PUSH1 0x80 DUP3 ADD MLOAD SWAP1 DUP13 DUP3 PUSH2 0x6C4 JUMPI JUMPDEST POP POP POP DUP3 SWAP2 PUSH2 0x64A PUSH2 0x656 SWAP5 PUSH2 0x650 SWAP4 MLOAD PUSH2 0x22D7 JUMP JUMPDEST DUP2 PUSH2 0x6D4 SWAP2 CALLER SWAP1 PUSH1 0xC0 MLOAD DUP7 PUSH2 0x2A9F JUMP JUMPDEST ISZERO PUSH2 0x72B JUMPI POP PUSH1 0x80 DUP1 MLOAD CALLER SWAP1 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP2 MLOAD PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP5 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 MSTORE MLOAD KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 PUSH2 0x64A DUP13 PUSH2 0x6AE JUMP JUMPDEST DUP13 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x265C66A800000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP5 ADD MSTORE DUP1 PUSH1 0x84 DUP5 ADD MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI DUP3 SWAP1 PUSH1 0x5 SHL PUSH1 0xA4 SWAP3 DUP2 PUSH1 0xC0 MLOAD DUP6 DUP6 ADD CALLDATACOPY CALLER PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD MSTORE DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x340BC4C900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST LT ISZERO SWAP1 POP DUP8 DUP13 PUSH2 0x5D2 JUMP JUMPDEST DUP5 DUP9 DUP11 DUP7 SWAP4 PUSH2 0xE80 JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 SLOAD AND DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x84 CALLDATALOAD AND SUB PUSH2 0xE42 JUMPI POP PUSH1 0xA4 CALLDATALOAD DUP2 DUP2 LT PUSH2 0xDEC JUMPI POP PUSH1 0x84 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD37 JUMPI DUP1 CALLVALUE SUB PUSH2 0xCE0 JUMPI POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD PUSH1 0x8 SHR AND PUSH1 0x80 MLOAD SWAP1 DUP4 MLOAD DUP3 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0xB0D JUMPI POP POP PUSH1 0x6 SLOAD SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0xA7F JUMPI JUMPDEST PUSH2 0x9B7 JUMPI POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD PUSH1 0x8 SHR AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x148 JUMPI PUSH2 0x922 SWAP5 PUSH2 0x949 PUSH2 0x934 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH32 0xB48AB8B600000000000000000000000000000000000000000000000000000000 DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x84 DUP7 ADD SWAP1 PUSH2 0x274E JUMP JUMPDEST SWAP1 PUSH1 0x3 NOT DUP6 DUP4 SUB ADD PUSH1 0x44 DUP7 ADD MSTORE PUSH2 0x274E JUMP JUMPDEST PUSH1 0x3 NOT DUP4 DUP3 SUB ADD PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x80 MLOAD SWAP7 PUSH2 0x21E1 JUMP JUMPDEST SUB SWAP2 PUSH1 0x80 MLOAD SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x9AA JUMPI PUSH2 0x961 JUMPI PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x979 JUMPI PUSH1 0x40 MSTORE DUP1 PUSH2 0x142 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MLOAD MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x80 MLOAD REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x80 MLOAD DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x4 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x80 MLOAD SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x9AA JUMPI PUSH1 0x80 MLOAD SWAP3 PUSH2 0xA49 JUMPI JUMPDEST POP PUSH2 0xA45 SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH32 0xA922783000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA77 JUMPI JUMPDEST DUP2 PUSH2 0xA65 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD SWAP1 PUSH2 0xA45 PUSH2 0x9FD JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA58 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x80 MLOAD DUP7 GAS CALL DUP1 ISZERO PUSH2 0x9AA JUMPI DUP5 DUP5 SWAP2 PUSH1 0x80 MLOAD SWAP1 PUSH2 0xAD5 JUMPI JUMPDEST PUSH2 0xACF SWAP3 SWAP4 POP PUSH2 0x2319 JUMP JUMPDEST GT PUSH2 0x893 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB05 JUMPI JUMPDEST DUP2 PUSH2 0xAF1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD DUP3 SWAP1 DUP2 SWAP1 DUP6 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAE4 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xB19 DUP5 DUP8 PUSH2 0x273A JUMP JUMPDEST MLOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 ADD SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0xC3F JUMPI JUMPDEST PUSH2 0xB5F JUMPI POP PUSH2 0xB53 PUSH2 0xB59 SWAP2 PUSH2 0xB4C DUP7 DUP9 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2319 JUMP JUMPDEST SWAP4 PUSH2 0x270D JUMP JUMPDEST SWAP1 PUSH2 0x87D JUMP JUMPDEST DUP4 DUP6 DUP8 PUSH1 0x20 PUSH2 0xB6E DUP4 DUP13 PUSH2 0x273A JUMP JUMPDEST MLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH32 0x2693EBF200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x80 MLOAD SWAP1 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x9AA JUMPI PUSH1 0x80 MLOAD SWAP4 PUSH2 0xC09 JUMPI JUMPDEST POP PUSH2 0xA45 SWAP2 PUSH2 0xBC4 SWAP2 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH32 0xA922783000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC37 JUMPI JUMPDEST DUP2 PUSH2 0xC25 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD SWAP2 PUSH2 0xA45 PUSH2 0xBB6 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC18 JUMP JUMPDEST POP PUSH2 0xC4A DUP6 DUP9 PUSH2 0x273A JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH32 0x2693EBF200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x80 MLOAD DUP10 GAS CALL DUP1 ISZERO PUSH2 0x9AA JUMPI DUP3 SWAP2 PUSH1 0x80 MLOAD SWAP2 PUSH2 0xCA9 JUMPI JUMPDEST POP PUSH2 0xCA3 SWAP1 PUSH2 0xB4C DUP9 DUP11 PUSH2 0x273A JUMP JUMPDEST GT PUSH2 0xB36 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCD8 JUMPI JUMPDEST DUP2 PUSH2 0xCC5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD DUP2 SWAP1 PUSH2 0xCA3 PUSH2 0xC94 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1EABCFBE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x84 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLVALUE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0xD7D JUMPI PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x1EABCFBE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x80 MLOAD PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0x24 DUP3 ADD MSTORE CALLVALUE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xDE7 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0xDC9 DUP2 PUSH2 0x1A95 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x84 CALLDATALOAD AND PUSH2 0x280D JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1EABCFBE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x84 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x1EABCFBE00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x80 PUSH1 0xA0 MLOAD ADD MLOAD SWAP1 DUP2 PUSH2 0xE94 JUMPI JUMPDEST POP PUSH2 0x7ED JUMP JUMPDEST CALLER PUSH1 0x80 MLOAD MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x80 MLOAD DUP3 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0xFB1 JUMPI JUMPDEST ISZERO PUSH2 0xF0F JUMPI POP CALLER PUSH1 0x80 MLOAD MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x80 MLOAD SWAP1 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP6 DUP1 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH32 0x265C66A800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP4 ADD MSTORE DUP1 PUSH1 0x84 DUP4 ADD MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI DUP2 PUSH1 0xA4 SWAP2 PUSH1 0x5 SHL DUP1 PUSH1 0xC0 MLOAD DUP5 DUP5 ADD CALLDATACOPY CALLER PUSH1 0x44 DUP4 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x64 DUP4 ADD MSTORE DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST POP SWAP5 SWAP2 SWAP6 SWAP3 PUSH1 0x40 SWAP5 SWAP2 SWAP5 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 CALLER PUSH1 0x60 SHL AND DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x34 DUP2 MSTORE PUSH2 0x101C DUP2 PUSH2 0x1AE0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP7 PUSH2 0x1029 DUP8 PUSH2 0x1B59 JUMP JUMPDEST SWAP8 PUSH2 0x1037 PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x1B18 JUMP JUMPDEST DUP8 DUP10 MSTORE PUSH1 0x20 DUP10 ADD CALLDATASIZE DUP10 PUSH1 0x5 SHL PUSH1 0xC0 MLOAD ADD GT PUSH2 0x148 JUMPI PUSH1 0xC0 MLOAD SWAP1 JUMPDEST DUP10 PUSH1 0x5 SHL PUSH1 0xC0 MLOAD ADD DUP3 LT PUSH2 0x10C9 JUMPI POP POP SWAP6 PUSH1 0x80 MLOAD SWAP7 JUMPDEST DUP10 MLOAD DUP9 LT ISZERO PUSH2 0x10B7 JUMPI PUSH2 0x107A DUP9 DUP12 PUSH2 0x273A JUMP JUMPDEST MLOAD PUSH1 0x80 MLOAD DUP2 DUP4 LT ISZERO PUSH2 0x10A5 JUMPI POP SWAP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x20 MSTORE PUSH2 0x109F PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 JUMPDEST SWAP8 PUSH2 0x270D JUMP JUMPDEST SWAP7 PUSH2 0x1067 JUMP JUMPDEST MSTORE PUSH1 0x20 MSTORE PUSH2 0x109F PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x1099 JUMP JUMPDEST SWAP1 SWAP4 SWAP7 POP DUP4 SWAP2 SWAP5 SWAP8 SWAP3 SWAP6 SWAP9 POP EQ PUSH2 0xEBC JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1051 JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0xC0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x10FB PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x148 JUMPI DUP5 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH2 0x111F PUSH2 0x1F0D JUMP JUMPDEST AND SWAP1 DUP2 DUP4 LT DUP1 ISZERO PUSH2 0x1211 JUMPI JUMPDEST PUSH2 0x321 JUMPI PUSH32 0x8CED76AEE4B96A1E218E7903610FC7D648023D9075677163A5B31396CB280F96 SWAP7 PUSH1 0xC0 SWAP7 PUSH1 0x3 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1163 DUP4 PUSH2 0x1A95 JUMP JUMPDEST DUP4 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 DUP6 DUP3 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 DUP8 DUP3 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 DUP10 DUP3 MSTORE PUSH1 0x80 DUP7 ADD SWAP4 DUP12 DUP6 MSTORE DUP13 PUSH1 0x80 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SWAP7 MLOAD DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE PUSH1 0x2 DUP7 ADD SWAP3 MLOAD AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 DUP5 SLOAD SWAP4 MLOAD PUSH1 0x40 SHL AND SWAP3 AND OR OR SWAP1 SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE LOG1 PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST POP TIMESTAMP DUP4 GT ISZERO PUSH2 0x112B JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x1234 PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x123C PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 PUSH1 0xFF DUP3 AND PUSH2 0x151A JUMPI PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF SWAP2 PUSH1 0x8 SHL AND SWAP2 AND OR PUSH1 0x3 SSTORE PUSH1 0x80 MLOAD DUP1 MSTORE PUSH2 0x13A2 PUSH1 0x80 MLOAD PUSH1 0x20 SWAP3 DUP2 DUP5 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP4 KECCAK256 SWAP2 AND DUP1 SWAP3 MSTORE DUP4 MSTORE PUSH1 0x80 MLOAD PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x14AC JUMPI JUMPDEST POP PUSH1 0x80 MLOAD DUP1 MSTORE PUSH1 0x1 DUP4 DUP2 DUP1 SWAP6 MSTORE PUSH2 0x12E8 DUP4 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24F3 JUMP JUMPDEST POP PUSH32 0x4C02318D8C3AADC98CCF18AEBBF3126F651E0C3F6A1DE5FF8EDCF6724A2AD5C2 DUP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE DUP1 PUSH1 0x80 MLOAD PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x143F JUMPI JUMPDEST POP POP PUSH1 0x80 MLOAD MSTORE DUP2 DUP2 MSTORE PUSH2 0x1348 DUP4 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24F3 JUMP JUMPDEST POP PUSH32 0x5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC DUP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE DUP1 PUSH1 0x80 MLOAD PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x13D2 JUMPI JUMPDEST POP POP PUSH1 0x80 MLOAD MSTORE MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24F3 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE PUSH1 0x80 MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 DUP1 DUP8 PUSH2 0x1390 JUMP JUMPDEST MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE PUSH1 0x80 MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 DUP1 DUP8 PUSH2 0x1330 JUMP JUMPDEST DUP1 MSTORE PUSH1 0x80 MLOAD DUP1 DUP5 MSTORE DUP2 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP4 MSTORE PUSH1 0x80 MLOAD PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 DUP4 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x155D PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x1565 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x80 MLOAD DUP1 DUP1 DUP1 SWAP4 PUSH1 0x24 CALLDATALOAD SWAP1 GAS CALL PUSH2 0x157A PUSH2 0x2950 JUMP JUMPDEST POP ISZERO PUSH2 0x1586 JUMPI PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x750B219C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x15C9 PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x15D1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x15D9 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x979 JUMPI PUSH2 0x142 SWAP4 PUSH1 0x40 MSTORE AND PUSH2 0x280D JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x166A PUSH2 0x1A33 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0x1693 JUMPI PUSH2 0x142 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x80 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x17DB PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH2 0x176E PUSH2 0x1A33 JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD SWAP1 PUSH2 0x178C DUP4 PUSH1 0x40 PUSH1 0x20 SWAP5 DUP1 DUP7 MSTORE KECCAK256 ADD SLOAD PUSH2 0x2083 JUMP JUMPDEST DUP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD SWAP4 DUP5 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP7 KECCAK256 SWAP2 AND DUP1 SWAP6 MSTORE DUP3 MSTORE DUP1 PUSH1 0x80 MLOAD PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x17E2 JUMPI POP POP PUSH1 0x80 MLOAD MSTORE MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24F3 JUMP JUMPDEST POP PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE PUSH1 0x80 MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 DUP1 DUP7 PUSH2 0x1390 JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x80 MLOAD DUP1 DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x80 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH2 0x1899 PUSH2 0x2A74 JUMP JUMPDEST POP PUSH2 0x18EC PUSH2 0x18A5 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x80 DUP1 PUSH1 0xA0 DUP4 ADD SWAP5 DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x1909 PUSH2 0x2A74 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x18EC PUSH2 0x18A5 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x27C5 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2F JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A2F JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1A2B JUMPI PUSH1 0x20 SWAP3 POP DUP1 PUSH32 0x49007A5F00000000000000000000000000000000000000000000000000000000 EQ SWAP1 DUP2 ISZERO PUSH2 0x199B JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x19CE JUMPI JUMPDEST POP DUP4 PUSH2 0x1994 JUMP JUMPDEST PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x1A01 JUMPI JUMPDEST POP DUP4 PUSH2 0x19C7 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ DUP4 PUSH2 0x19FA JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1A56 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1A56 JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1A56 JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1AB1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1AB1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1AB1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1AB1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AB1 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1A56 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x1B88 DUP4 PUSH2 0x1B59 JUMP JUMPDEST SWAP3 PUSH2 0x1B96 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1B18 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1A56 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1BC0 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1BB2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AB1 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1A56 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1A56 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1A56 JUMPI JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x20BE27040B8E00DF40BCA0DF34743417F3574A156386188F7D7F14369E5EE82B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP3 PUSH32 0x5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC SWAP2 PUSH1 0xFF AND ISZERO PUSH2 0x1C9E JUMPI POP POP POP POP JUMP JUMPDEST PUSH2 0x1CA7 CALLER PUSH2 0x2366 JUMP JUMPDEST SWAP2 DUP5 MLOAD SWAP1 PUSH2 0x1CB4 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x42 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 PUSH1 0x60 CALLDATASIZE DUP6 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x1EE0 JUMPI PUSH1 0x30 DUP5 MSTORE8 DUP3 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x1EE0 JUMPI SWAP1 PUSH1 0x78 PUSH1 0x21 DUP6 ADD MSTORE8 PUSH1 0x41 SWAP2 JUMPDEST DUP2 DUP4 GT PUSH2 0x1E15 JUMPI POP POP POP PUSH2 0x1DB9 JUMPI PUSH1 0x48 PUSH2 0xA45 SWAP4 DUP7 SWAP4 PUSH2 0x1D83 SWAP4 PUSH2 0x1D74 SWAP9 MLOAD SWAP9 DUP10 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP11 DUP7 ADD MSTORE PUSH2 0x1D3F DUP2 MLOAD DUP1 SWAP3 DUP13 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST DUP5 ADD SWAP2 PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x37 DUP5 ADD MSTORE MLOAD DUP1 SWAP4 DUP7 DUP5 ADD SWAP1 PUSH2 0x21BE JUMP JUMPDEST ADD SUB PUSH1 0x28 DUP2 ADD DUP8 MSTORE ADD DUP6 PUSH2 0x1B18 JUMP JUMPDEST MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x64 DUP5 DUP7 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1EB3 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 SWAP1 BYTE PUSH2 0x1E52 DUP6 DUP8 PUSH2 0x2326 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP3 DUP1 ISZERO PUSH2 0x1E86 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6058EE1F1C102E8AC9EF0C4319964E42C1AB00DFBA021F8302FD0802656934AC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP3 PUSH32 0x4C02318D8C3AADC98CCF18AEBBF3126F651E0C3F6A1DE5FF8EDCF6724A2AD5C2 SWAP2 PUSH1 0xFF AND ISZERO PUSH2 0x1F71 JUMPI POP POP POP POP JUMP JUMPDEST PUSH2 0x1F7A CALLER PUSH2 0x2366 JUMP JUMPDEST SWAP2 DUP5 MLOAD SWAP1 PUSH2 0x1F87 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x42 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 PUSH1 0x60 CALLDATASIZE DUP6 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x1EE0 JUMPI PUSH1 0x30 DUP5 MSTORE8 DUP3 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x1EE0 JUMPI SWAP1 PUSH1 0x78 PUSH1 0x21 DUP6 ADD MSTORE8 PUSH1 0x41 SWAP2 JUMPDEST DUP2 DUP4 GT PUSH2 0x2012 JUMPI POP POP POP PUSH2 0x1DB9 JUMPI PUSH1 0x48 PUSH2 0xA45 SWAP4 DUP7 SWAP4 PUSH2 0x1D83 SWAP4 PUSH2 0x1D74 SWAP9 MLOAD SWAP9 DUP10 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP11 DUP7 ADD MSTORE PUSH2 0x1D3F DUP2 MLOAD DUP1 SWAP3 DUP13 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1EB3 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 SWAP1 BYTE PUSH2 0x204F DUP6 DUP8 PUSH2 0x2326 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP3 DUP1 ISZERO PUSH2 0x1E86 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP2 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 DUP3 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP2 KECCAK256 CALLER DUP3 MSTORE DUP4 MSTORE PUSH1 0xFF DUP5 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x20AC JUMPI POP POP POP POP JUMP JUMPDEST PUSH2 0x20B5 CALLER PUSH2 0x2366 JUMP JUMPDEST SWAP2 DUP5 MLOAD SWAP1 PUSH2 0x20C2 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x42 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 PUSH1 0x60 CALLDATASIZE DUP6 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x1EE0 JUMPI PUSH1 0x30 DUP5 MSTORE8 DUP3 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x1EE0 JUMPI SWAP1 PUSH1 0x78 PUSH1 0x21 DUP6 ADD MSTORE8 PUSH1 0x41 SWAP2 JUMPDEST DUP2 DUP4 GT PUSH2 0x214D JUMPI POP POP POP PUSH2 0x1DB9 JUMPI PUSH1 0x48 PUSH2 0xA45 SWAP4 DUP7 SWAP4 PUSH2 0x1D83 SWAP4 PUSH2 0x1D74 SWAP9 MLOAD SWAP9 DUP10 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP11 DUP7 ADD MSTORE PUSH2 0x1D3F DUP2 MLOAD DUP1 SWAP3 DUP13 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1EB3 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 SWAP1 BYTE PUSH2 0x218A DUP6 DUP8 PUSH2 0x2326 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP3 DUP1 ISZERO PUSH2 0x1E86 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x21D1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x21C1 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x221D DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH2 0x226F SWAP3 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP4 KECCAK256 SWAP5 AND SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP4 KECCAK256 SLOAD AND PUSH2 0x2272 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x25B4 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP1 LOG4 PUSH2 0x2262 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x22EA JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x22EA JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2337 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2373 DUP3 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x2A DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 CALLDATASIZE DUP3 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x2337 JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP2 MLOAD PUSH1 0x1 SWAP1 DUP2 LT ISZERO PUSH2 0x2337 JUMPI PUSH1 0x78 PUSH1 0x21 DUP5 ADD MSTORE8 PUSH1 0x29 SWAP1 JUMPDEST DUP1 DUP3 GT PUSH2 0x2410 JUMPI POP POP PUSH2 0x23B2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x24AD JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 SWAP1 BYTE PUSH2 0x244C DUP5 DUP7 PUSH2 0x2326 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP2 DUP1 ISZERO PUSH2 0x247F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 PUSH2 0x23A2 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2337 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x25AE JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH2 0x2581 JUMPI DUP4 PUSH2 0x2571 PUSH2 0x253C DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0x24DB JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x2706 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP2 ADD DUP2 DUP2 GT PUSH2 0x26D9 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x26AC JUMPI DUP1 DUP3 SUB PUSH2 0x2677 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x264A JUMPI DUP3 ADD SWAP2 PUSH2 0x262D DUP4 DUP4 PUSH2 0x24DB JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x24 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x2697 PUSH2 0x2687 PUSH2 0x253C SWAP4 DUP7 PUSH2 0x24DB JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x24DB JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2615 JUMP JUMPDEST PUSH1 0x24 DUP9 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x22EA JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2337 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x276E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2760 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x278F DUP3 PUSH2 0x1A95 JUMP JUMPDEST DUP2 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x6 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x8 SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x27D2 DUP2 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x3 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x1AB1 JUMPI PUSH2 0x288D SWAP2 PUSH1 0x40 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP3 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP6 DUP4 ADD MSTORE PUSH1 0x0 DUP1 DUP6 DUP8 DUP3 SWAP8 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL PUSH2 0x2887 PUSH2 0x2950 JUMP JUMPDEST SWAP2 PUSH2 0x2980 JUMP JUMPDEST DUP1 MLOAD SWAP2 DUP3 ISZERO SWAP2 DUP5 DUP4 ISZERO PUSH2 0x292C JUMPI JUMPDEST POP POP POP SWAP1 POP ISZERO PUSH2 0x28A8 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP4 DUP2 DUP1 SWAP5 POP ADD SUB SLT PUSH2 0x1A2F JUMPI DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1EE JUMPI POP DUP1 CODESIZE DUP1 DUP5 PUSH2 0x289B JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x297B JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2961 DUP3 PUSH2 0x1BCF JUMP JUMPDEST SWAP2 PUSH2 0x296F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1B18 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x29FB JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x2994 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x299D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2A0E JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0xA45 SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x21E1 JUMP JUMPDEST SWAP1 DUP1 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x2A6A JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x2A62 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST TIMESTAMP LT SWAP2 POP CODESIZE PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2A81 DUP3 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP3 SWAP1 PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP4 MSTORE PUSH1 0xFF DUP6 DUP6 KECCAK256 SLOAD AND ISZERO SWAP8 DUP9 PUSH2 0x2AEA JUMPI JUMPDEST POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP6 SWAP8 POP DUP5 SWAP7 SWAP9 SWAP5 MLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP6 DUP4 ADD SWAP4 PUSH1 0x60 SHL AND DUP4 MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x34 DUP2 MSTORE PUSH2 0x2B34 DUP2 PUSH2 0x1AE0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x2B41 DUP9 PUSH2 0x1B59 JUMP JUMPDEST SWAP8 PUSH2 0x2B4E DUP8 MLOAD SWAP10 DUP11 PUSH2 0x1B18 JUMP JUMPDEST DUP1 DUP10 MSTORE DUP4 DUP10 ADD SWAP1 PUSH1 0x5 SHL DUP3 ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x2BDD JUMPI DUP5 SWAP1 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2BCD JUMPI POP POP POP POP SWAP2 DUP4 SWAP3 JUMPDEST DUP8 MLOAD DUP5 LT ISZERO PUSH2 0x2BB8 JUMPI PUSH2 0x2B88 DUP5 DUP10 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x2BA8 JUMPI DUP6 MSTORE DUP3 MSTORE PUSH2 0x2BA2 DUP6 DUP6 KECCAK256 SWAP4 PUSH2 0x270D JUMP JUMPDEST SWAP3 PUSH2 0x2B75 JUMP JUMPDEST SWAP1 DUP6 MSTORE DUP3 MSTORE PUSH2 0x2BA2 DUP6 DUP6 KECCAK256 PUSH2 0xB53 JUMP JUMPDEST SWAP5 POP SWAP6 POP POP POP POP EQ CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x2ADF JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP6 SWAP2 ADD PUSH2 0x2B66 JUMP JUMPDEST DUP7 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH8 0x89F230ADCE122F89 DUP7 0xCE DUP8 DUP14 PUSH32 0x455CB45C2B5A3B66278304ADEE742BA3EE64736F6C6343000813003300000000 ",
							"sourceMap": "914:10911:39:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 6707,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_17691": {
									"entryPoint": 6747,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_array_bytes32_dyn_calldata": {
									"entryPoint": 7177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 7025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint64": {
									"entryPoint": 6782,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_address_uint256_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 10062,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 8673,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_SaleDetails": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_uint256_uint256_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_and_zero_memory_struct_struct_SaleDetails": {
									"entryPoint": 10868,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 7001,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 7119,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 8985,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_uint256": {
									"entryPoint": 8919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 8638,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_returndata": {
									"entryPoint": 10576,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 6936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_17704": {
									"entryPoint": 6805,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_29635": {
									"entryPoint": 6880,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_34729": {
									"entryPoint": 6908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_add": {
									"entryPoint": 9459,
									"id": 4697,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_blockTimeOutOfBounds": {
									"entryPoint": 10828,
									"id": 6463,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_callOptionalReturn": {
									"entryPoint": 10253,
									"id": 2288,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkMerkleProof": {
									"entryPoint": 10911,
									"id": 7456,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"fun_checkRole": {
									"entryPoint": 8323,
									"id": 816,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_17693": {
									"entryPoint": 7226,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_checkRole_17703": {
									"entryPoint": 7949,
									"id": 816,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_remove": {
									"entryPoint": 9652,
									"id": 4781,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_revokeRole": {
									"entryPoint": 8740,
									"id": 1163,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_toHexString": {
									"entryPoint": 9062,
									"id": 3063,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 10624,
									"id": 2622,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"increment_uint256": {
									"entryPoint": 9997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_bytes": {
									"entryPoint": 8998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"memory_array_index_access_uint256_dyn": {
									"entryPoint": 10042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"read_from_storage_reference_type_struct_SaleDetails": {
									"entryPoint": 10181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"read_from_storage_reference_type_struct_SaleDetails_17688": {
									"entryPoint": 10114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"storage_array_index_access_bytes32_dyn_ptr": {
									"entryPoint": 9435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "61010080604052600436101561001457600080fd5b600080608052803560e01c91826301ffc9a714611927575081630869678c146118f0578163119cd50c1461187e578163248a9ca31461184f5781632f2ff15d1461174d5781633013ce291461171757816336568abe1461165157816344004cc1146115b05781634782f77914611544578163485cc9551461121b5781634f651ccd146110d957816360e606f6146104675781636a326ab1146104015781639010d07c146103ac57816391d1485414610355578163975596001461020f578163a217fddf146101f1578163bad436611461017c57508063ca15c8731461014e5763d547741f1461010257600080fd5b3461014857604060031936011261014857610142600435610121611a33565b90806080515261013d6001604060805180602052200154612083565b612224565b60805180f35b60805180fd5b3461014857602060031936011261014857600435608051526001602052602060406080512054604051908152f35b346101485760806003193601126101485760243567ffffffffffffffff8111610148576101ad903690600401611c09565b6044929192359173ffffffffffffffffffffffffffffffffffffffff831683036101ee5760206101e4606435858588600435612a9f565b6040519015158152f35b80fd5b3461014857608051806003193601126101ee57602090604051908152f35b346101485760a06003193601126101485760043590602435916044359167ffffffffffffffff908184168094036101ee5750610249611a7e565b9260843591610256611f0d565b841690808210801561034b575b610321577f8fd3ac39fbb3d5e9c906dd9ec439dc6e584b8fa3ce02d5b67d589b22b22152a99560a09584608060405161029b81611a95565b88815284602082015285604082015286606082015201528560055581600655827fffffffffffffffffffffffffffffffff000000000000000000000000000000006fffffffffffffffff00000000000000006007549360401b1692161717600755836008556040519485526020850152604084015260608301526080820152a160805180f35b60046040517f85d4a748000000000000000000000000000000000000000000000000000000008152fd5b5042821115610263565b346101485760406003193601126101485760ff6040602092610375611a33565b6004356080515273ffffffffffffffffffffffffffffffffffffffff83608051808852209116825284522054166040519015158152f35b3461014857604060031936011261014857600435608051526001602052602073ffffffffffffffffffffffffffffffffffffffff6103f16024356040608051206124db565b9190546040519260031b1c168152f35b346101485760206003193601126101485773ffffffffffffffffffffffffffffffffffffffff61042f611a5b565b610437611f0d565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000600454161760045560805180f35b60e06003193601126101485761047b611a5b565b60243567ffffffffffffffff81116101485761049b903690600401611b71565b60443567ffffffffffffffff8111610148576104bb903690600401611b71565b916064359167ffffffffffffffff831161014857366023840112156101485782600401356104e881611bcf565b936104f66040519586611b18565b818552366024838301011161014857602482910160208601376020608051918501015273ffffffffffffffffffffffffffffffffffffffff60843516608435036101485767ffffffffffffffff60c435116101485761055d9391933660c435600401611c09565b9060c052926080519283928496610572612782565b60a0526105a067ffffffffffffffff604060a05101511667ffffffffffffffff606060a05101511690612a4c565b60805160e08190529094905b835160e05110156107e3576105c360e0518561273a565b51968760e051151591826107d8575b50506107ae57866105e560e0518761273a565b5191816080515260096020526105ff6040608051206127c5565b61062667ffffffffffffffff60408301511667ffffffffffffffff60608401511690612a4c565b1561069e5750508661066d57506106569061065060019961064a8360a051516122d7565b90612319565b9a612319565b9661066260e05161270d565b60e0529896986105ac565b602490604051907f035acf500000000000000000000000000000000000000000000000000000000082526004820152fd5b9099916080820151908c826106c4575b505050829161064a6106569461065093516122d7565b816106d491339060c05186612a9f565b1561072b575060808051339052600260209081528151604080822094909152929052512080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558161064a8c6106ae565b8c604051927f265c66a80000000000000000000000000000000000000000000000000000000084526004840152608060248401528060848401527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811161014857829060051b60a4928160c0518585013733604484015260648301528101030190fd5b60046040517f340bc4c9000000000000000000000000000000000000000000000000000000008152fd5b10159050878c6105d2565b84888a8693610e80575b5073ffffffffffffffffffffffffffffffffffffffff600454168073ffffffffffffffffffffffffffffffffffffffff6084351603610e42575060a435818110610dec575060843573ffffffffffffffffffffffffffffffffffffffff16610d3757803403610ce057505b73ffffffffffffffffffffffffffffffffffffffff60035460081c1660805190835182905b808210610b0d5750506006549081151580610a7f575b6109b75750505073ffffffffffffffffffffffffffffffffffffffff60035460081c1690813b15610148576109229461094961093473ffffffffffffffffffffffffffffffffffffffff93604051988997889687967fb48ab8b600000000000000000000000000000000000000000000000000000000885216600487015260806024870152608486019061274e565b9060031985830301604486015261274e565b600319838203016064840152608051966121e1565b0391608051905af180156109aa576109615760805180f35b67ffffffffffffffff81116109795760405280610142565b7f4e487b71000000000000000000000000000000000000000000000000000000006080515260416004526024608051fd5b6040513d608051823e3d90fd5b906020600492604051938480927f18160ddd000000000000000000000000000000000000000000000000000000008252608051905af19182156109aa5760805192610a49575b50610a45906040519384937fa9227830000000000000000000000000000000000000000000000000000000008552600485016040919493926060820195825260208201520152565b0390fd5b9091506020813d602011610a77575b81610a6560209383611b18565b81010312610148575190610a456109fd565b3d9150610a58565b506040517f18160ddd000000000000000000000000000000000000000000000000000000008152602081600481608051865af180156109aa5784849160805190610ad5575b610acf929350612319565b11610893565b5050506020813d602011610b05575b81610af160209383611b18565b810103126101485751829081908590610ac4565b3d9150610ae4565b9092610b19848761273a565b516080515260096020526001604060805120015480151580610c3f575b610b5f5750610b53610b5991610b4c868861273a565b5190612319565b9361270d565b9061087d565b8385876020610b6e838c61273a565b516024604051809681937f2693ebf20000000000000000000000000000000000000000000000000000000083526004830152608051905af19283156109aa5760805193610c09575b50610a4591610bc49161273a565b51926040519384937fa9227830000000000000000000000000000000000000000000000000000000008552600485016040919493926060820195825260208201520152565b9092506020813d602011610c37575b81610c2560209383611b18565b81010312610148575191610a45610bb6565b3d9150610c18565b50610c4a858861273a565b51604051907f2693ebf20000000000000000000000000000000000000000000000000000000082526004820152602081602481608051895af180156109aa57829160805191610ca9575b50610ca390610b4c888a61273a565b11610b36565b9150506020813d602011610cd8575b81610cc560209383611b18565b8101031261014857518190610ca3610c94565b3d9150610cb8565b6040517f1eabcfbe00000000000000000000000000000000000000000000000000000000815260843573ffffffffffffffffffffffffffffffffffffffff1660048201526024810191909152346044820152606490fd5b3415610d7d5760646040517f1eabcfbe00000000000000000000000000000000000000000000000000000000815260805160048201526080516024820152346044820152fd5b610de790604051907f23b872dd000000000000000000000000000000000000000000000000000000006020830152336024830152306044830152606482015260648152610dc981611a95565b73ffffffffffffffffffffffffffffffffffffffff6084351661280d565b610858565b6040517f1eabcfbe00000000000000000000000000000000000000000000000000000000815260843573ffffffffffffffffffffffffffffffffffffffff16600482015260248101929092526044820152606490fd5b606491604051917f1eabcfbe000000000000000000000000000000000000000000000000000000008352600483015260248201526080516044820152fd5b608060a05101519081610e94575b506107ed565b336080515260026020526080518260408220915260205260ff60406080512054161580610fb1575b15610f0f5750336080515260026020526080519060408220915260205260406080512060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790558580610e8e565b604051917f265c66a80000000000000000000000000000000000000000000000000000000083526004830152608060248301528060848301527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111610148578160a49160051b8060c051848401373360448301527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60648301528101030190fd5b509491959260409491945160208101907fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b1682527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60348201526034815261101c81611ae0565b5190209661102987611b59565b97611037604051998a611b18565b87895260208901368960051b60c05101116101485760c051905b8960051b60c0510182106110c957505095608051965b89518810156110b75761107a888b61273a565b51608051818310156110a55750906080515260205261109f6040608051205b9761270d565b96611067565b5260205261109f604060805120611099565b90939650839194979295985014610ebc565b8135815260209182019101611051565b346101485760c0600319360112610148576024356044356004356110fb611a7e565b60843567ffffffffffffffff93848216809203610148578460a4359361111f611f0d565b16908183108015611211575b610321577f8ced76aee4b96a1e218e7903610fc7d648023d9075677163a5b31396cb280f969660c09660036040519161116383611a95565b83835260208301908582526040840190878252606085019089825260808601938b85528c60805152600960205260406080512096518755516001870155600286019251167fffffffffffffffffffffffffffffffff000000000000000000000000000000006fffffffffffffffff00000000000000008454935160401b1692161717905551910155604051958652602086015260408501526060840152608083015260a0820152a160805180f35b504283111561112b565b3461014857604060031936011261014857611234611a5b565b61123c611a33565b6003549060ff821661151a5774ffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffff0000000000000000000000000000000000000000ff9160081b1691161760035560805180526113a260805160209281845273ffffffffffffffffffffffffffffffffffffffff604083209116809252835260805160ff604082205416156114ac575b506080518052600183818095526112e8836040608051206124f3565b507f4c02318d8c3aadc98ccf18aebbf3126f651e0c3f6a1de5ff8edcf6724a2ad5c280608051526080518083528460408220915282528060805160ff6040822054161561143f575b505060805152818152611348836040608051206124f3565b507f5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec80608051526080518083528460408220915282528060805160ff604082205416156113d2575b505060805152526040608051206124f3565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00600354161760035560805180f35b5260805180835284604082209152825260805160408120847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905584827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a48087611390565b5260805180835284604082209152825260805160408120847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905584827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a48087611330565b80526080518084528160408220915283526080516040812060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790558133917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4836112cc565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b346101485760406003193601126101485761155d611a5b565b611565611c3a565b60805180808093602435905af161157a612950565b50156115865760805180f35b60046040517f750b219c000000000000000000000000000000000000000000000000000000008152fd5b34610148576060600319360112610148576115c9611a5b565b6115d1611a33565b6115d9611c3a565b604051907fa9059cbb00000000000000000000000000000000000000000000000000000000602083015273ffffffffffffffffffffffffffffffffffffffff8091166024830152604435604483015260448252608082019282841067ffffffffffffffff85111761097957610142936040521661280d565b346101485760406003193601126101485761166a611a33565b3373ffffffffffffffffffffffffffffffffffffffff8216036116935761014290600435612224565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152fd5b3461014857608051806003193601126101ee57602073ffffffffffffffffffffffffffffffffffffffff60045416604051908152f35b34610148576040600319360112610148576117db600435600161176e611a33565b9180608051526080519061178c836040602094808652200154612083565b80608051526080519384835273ffffffffffffffffffffffffffffffffffffffff60408620911680955282528060805160ff604082205416156117e257505060805152526040608051206124f3565b5060805180f35b5260805180835284604082209152825260805160408120847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905584827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a48086611390565b346101485760206003193601126101485760043560805152602060016040608051808452200154604051908152f35b3461014857608051806003193601126101ee57611899612a74565b506118ec6118a5612782565b6040519182918291909160808060a0830194805184526020810151602085015267ffffffffffffffff80604083015116604086015260608201511660608501520151910152565b0390f35b3461014857602060031936011261014857611909612a74565b506004356080515260096020526118ec6118a56040608051206127c5565b34611a2f576020600319360112611a2f576004357fffffffff000000000000000000000000000000000000000000000000000000008116809103611a2b5760209250807f49007a5f000000000000000000000000000000000000000000000000000000001490811561199b575b5015158152f35b7f5a05180f000000000000000000000000000000000000000000000000000000008114915081156119ce575b5083611994565b7f7965db0b00000000000000000000000000000000000000000000000000000000811491508115611a01575b50836119c7565b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014836119fa565b8280fd5b5080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203611a5657565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff82168203611a5657565b6064359067ffffffffffffffff82168203611a5657565b60a0810190811067ffffffffffffffff821117611ab157604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff821117611ab157604052565b6080810190811067ffffffffffffffff821117611ab157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117611ab157604052565b67ffffffffffffffff8111611ab15760051b60200190565b81601f82011215611a5657803591611b8883611b59565b92611b966040519485611b18565b808452602092838086019260051b820101928311611a56578301905b828210611bc0575050505090565b81358152908301908301611bb2565b67ffffffffffffffff8111611ab157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b9181601f84011215611a565782359167ffffffffffffffff8311611a56576020808501948460051b010111611a5657565b3360009081527f20be27040b8e00df40bca0df34743417f3574a156386188f7d7f14369e5ee82b602090815260408083205490927f5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec9160ff1615611c9e5750505050565b611ca733612366565b91845190611cb482611afc565b60428252848201926060368537825115611ee05760308453825190600191821015611ee05790607860218501536041915b818311611e1557505050611db9576048610a45938693611d8393611d7498519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a860152611d3f815180928c6037890191016121be565b8401917f206973206d697373696e6720726f6c65200000000000000000000000000000006037840152518093868401906121be565b01036028810187520185611b18565b519283927f08c379a0000000000000000000000000000000000000000000000000000000008452600484015260248301906121e1565b6064848651907f08c379a000000000000000000000000000000000000000000000000000000000825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015611eb3577f3031323334353637383961626364656600000000000000000000000000000000901a611e528587612326565b5360041c928015611e86577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019190611ce5565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526032600452fd5b3360009081527f6058ee1f1c102e8ac9ef0c4319964e42c1ab00dfba021f8302fd0802656934ac602090815260408083205490927f4c02318d8c3aadc98ccf18aebbf3126f651e0c3f6a1de5ff8edcf6724a2ad5c29160ff1615611f715750505050565b611f7a33612366565b91845190611f8782611afc565b60428252848201926060368537825115611ee05760308453825190600191821015611ee05790607860218501536041915b81831161201257505050611db9576048610a45938693611d8393611d7498519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a860152611d3f815180928c6037890191016121be565b909192600f81166010811015611eb3577f3031323334353637383961626364656600000000000000000000000000000000901a61204f8587612326565b5360041c928015611e86577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019190611fb8565b600090808252602090828252604092838120338252835260ff8482205416156120ac5750505050565b6120b533612366565b918451906120c282611afc565b60428252848201926060368537825115611ee05760308453825190600191821015611ee05790607860218501536041915b81831161214d57505050611db9576048610a45938693611d8393611d7498519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a860152611d3f815180928c6037890191016121be565b909192600f81166010811015611eb3577f3031323334353637383961626364656600000000000000000000000000000000901a61218a8587612326565b5360041c928015611e86577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0191906120f3565b60005b8381106121d15750506000910152565b81810151838201526020016121c1565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361221d815180928187528780880191016121be565b0116010190565b90604061226f926000908082528160205273ffffffffffffffffffffffffffffffffffffffff83832094169384835260205260ff8383205416612272575b81526001602052206125b4565b50565b808252816020528282208483526020528282207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690553384827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a4612262565b818102929181159184041417156122ea57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b919082018092116122ea57565b908151811015612337570160200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6040519061237382611ae0565b602a82526020820160403682378251156123375760309053815160019081101561233757607860218401536029905b8082116124105750506123b25790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f811660108110156124ad577f3031323334353637383961626364656600000000000000000000000000000000901a61244c8486612326565b5360041c91801561247f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01906123a2565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b80548210156123375760005260206000200190600090565b919060018301600090828252806020526040822054156000146125ae5784549468010000000000000000861015612581578361257161253c886001604098999a018555846124db565b81939154907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9060031b92831b921b19161790565b9055549382526020522055600190565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b50925050565b90600182019060009281845282602052604084205490811515600014612706577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff918281018181116126d9578254908482019182116126ac57808203612677575b5050508054801561264a5782019161262d83836124db565b909182549160031b1b191690555582526020526040812055600190565b6024867f4e487b710000000000000000000000000000000000000000000000000000000081526031600452fd5b61269761268761253c93866124db565b90549060031b1c928392866124db565b90558652846020526040862055388080612615565b6024887f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6024877f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b5050505090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146122ea5760010190565b80518210156123375760209160051b010190565b90815180825260208080930193019160005b82811061276e575050505090565b835185529381019392810192600101612760565b6040519061278f82611a95565b816005548152600654602082015260075467ffffffffffffffff90818116604084015260401c1660608201526080600854910152565b906040516127d281611a95565b6080600382948054845260018101546020850152600281015467ffffffffffffffff90818116604087015260401c1660608501520154910152565b73ffffffffffffffffffffffffffffffffffffffff1690604051604081019080821067ffffffffffffffff831117611ab15761288d916040526020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af1612887612950565b91612980565b80519182159184831561292c575b5050509050156128a85750565b608490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b919381809450010312611a2f578201519081151582036101ee57508038808461289b565b3d1561297b573d9061296182611bcf565b9161296f6040519384611b18565b82523d6000602084013e565b606090565b919290156129fb5750815115612994575090565b3b1561299d5790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b825190915015612a0e5750805190602001fd5b610a45906040519182917f08c379a00000000000000000000000000000000000000000000000000000000083526020600484015260248301906121e1565b908015918215612a6a575b508115612a62575090565b905042101590565b4210915038612a57565b60405190612a8182611a95565b60006080838281528260208201528260408201528260608201520152565b91929060009073ffffffffffffffffffffffffffffffffffffffff8316825260209060028252604093848420868552835260ff8585205416159788612aea575b505050505050505090565b909192939597508496989451907fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008583019360601b168352603482015260348152612b3481611ae0565b51902090612b4188611b59565b97612b4e8751998a611b18565b8089528389019060051b820191368311612bdd578490915b838310612bcd57505050509183925b8751841015612bb857612b88848961273a565b519081811015612ba85785528252612ba28585209361270d565b92612b75565b9085528252612ba2858520610b53565b94509550505050143880808080808080612adf565b8235815291810191859101612b66565b8680fdfea2646970667358221220036789f230adce122f8986ce878d7f455cb45c2b5a3b66278304adee742ba3ee64736f6c63430008130033",
							"opcodes": "PUSH2 0x100 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 MSTORE DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0x1927 JUMPI POP DUP2 PUSH4 0x869678C EQ PUSH2 0x18F0 JUMPI DUP2 PUSH4 0x119CD50C EQ PUSH2 0x187E JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0x184F JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0x174D JUMPI DUP2 PUSH4 0x3013CE29 EQ PUSH2 0x1717 JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0x1651 JUMPI DUP2 PUSH4 0x44004CC1 EQ PUSH2 0x15B0 JUMPI DUP2 PUSH4 0x4782F779 EQ PUSH2 0x1544 JUMPI DUP2 PUSH4 0x485CC955 EQ PUSH2 0x121B JUMPI DUP2 PUSH4 0x4F651CCD EQ PUSH2 0x10D9 JUMPI DUP2 PUSH4 0x60E606F6 EQ PUSH2 0x467 JUMPI DUP2 PUSH4 0x6A326AB1 EQ PUSH2 0x401 JUMPI DUP2 PUSH4 0x9010D07C EQ PUSH2 0x3AC JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x355 JUMPI DUP2 PUSH4 0x97559600 EQ PUSH2 0x20F JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x1F1 JUMPI DUP2 PUSH4 0xBAD43661 EQ PUSH2 0x17C JUMPI POP DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x14E JUMPI PUSH4 0xD547741F EQ PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x142 PUSH1 0x4 CALLDATALOAD PUSH2 0x121 PUSH2 0x1A33 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x80 MLOAD MSTORE PUSH2 0x13D PUSH1 0x1 PUSH1 0x40 PUSH1 0x80 MLOAD DUP1 PUSH1 0x20 MSTORE KECCAK256 ADD SLOAD PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x80 MLOAD DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI PUSH2 0x1AD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x44 SWAP3 SWAP2 SWAP3 CALLDATALOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP4 SUB PUSH2 0x1EE JUMPI PUSH1 0x20 PUSH2 0x1E4 PUSH1 0x64 CALLDATALOAD DUP6 DUP6 DUP9 PUSH1 0x4 CALLDATALOAD PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x80 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0xA0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x1EE JUMPI POP PUSH2 0x249 PUSH2 0x1A7E JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP2 PUSH2 0x256 PUSH2 0x1F0D JUMP JUMPDEST DUP5 AND SWAP1 DUP1 DUP3 LT DUP1 ISZERO PUSH2 0x34B JUMPI JUMPDEST PUSH2 0x321 JUMPI PUSH32 0x8FD3AC39FBB3D5E9C906DD9EC439DC6E584B8FA3CE02D5B67D589B22B22152A9 SWAP6 PUSH1 0xA0 SWAP6 DUP5 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x29B DUP2 PUSH2 0x1A95 JUMP JUMPDEST DUP9 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP6 PUSH1 0x40 DUP3 ADD MSTORE DUP7 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE DUP6 PUSH1 0x5 SSTORE DUP2 PUSH1 0x6 SSTORE DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 PUSH1 0x7 SLOAD SWAP4 PUSH1 0x40 SHL AND SWAP3 AND OR OR PUSH1 0x7 SSTORE DUP4 PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE LOG1 PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x85D4A74800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP TIMESTAMP DUP3 GT ISZERO PUSH2 0x263 JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH2 0x375 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x80 MLOAD DUP1 DUP9 MSTORE KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x3F1 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24DB JUMP JUMPDEST SWAP2 SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x42F PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x437 PUSH2 0x1F0D JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x47B PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI PUSH2 0x49B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI PUSH2 0x4BB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B71 JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x148 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x148 JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x4E8 DUP2 PUSH2 0x1BCF JUMP JUMPDEST SWAP4 PUSH2 0x4F6 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1B18 JUMP JUMPDEST DUP2 DUP6 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x148 JUMPI PUSH1 0x24 DUP3 SWAP2 ADD PUSH1 0x20 DUP7 ADD CALLDATACOPY PUSH1 0x20 PUSH1 0x80 MLOAD SWAP2 DUP6 ADD ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x84 CALLDATALOAD AND PUSH1 0x84 CALLDATALOAD SUB PUSH2 0x148 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xC4 CALLDATALOAD GT PUSH2 0x148 JUMPI PUSH2 0x55D SWAP4 SWAP2 SWAP4 CALLDATASIZE PUSH1 0xC4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x1C09 JUMP JUMPDEST SWAP1 PUSH1 0xC0 MSTORE SWAP3 PUSH1 0x80 MLOAD SWAP3 DUP4 SWAP3 DUP5 SWAP7 PUSH2 0x572 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0xA0 MSTORE PUSH2 0x5A0 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0xA0 MLOAD ADD MLOAD AND PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x60 PUSH1 0xA0 MLOAD ADD MLOAD AND SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xE0 DUP2 SWAP1 MSTORE SWAP1 SWAP5 SWAP1 JUMPDEST DUP4 MLOAD PUSH1 0xE0 MLOAD LT ISZERO PUSH2 0x7E3 JUMPI PUSH2 0x5C3 PUSH1 0xE0 MLOAD DUP6 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP7 DUP8 PUSH1 0xE0 MLOAD ISZERO ISZERO SWAP2 DUP3 PUSH2 0x7D8 JUMPI JUMPDEST POP POP PUSH2 0x7AE JUMPI DUP7 PUSH2 0x5E5 PUSH1 0xE0 MLOAD DUP8 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP2 DUP2 PUSH1 0x80 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x5FF PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x27C5 JUMP JUMPDEST PUSH2 0x626 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 DUP4 ADD MLOAD AND PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x60 DUP5 ADD MLOAD AND SWAP1 PUSH2 0x2A4C JUMP JUMPDEST ISZERO PUSH2 0x69E JUMPI POP POP DUP7 PUSH2 0x66D JUMPI POP PUSH2 0x656 SWAP1 PUSH2 0x650 PUSH1 0x1 SWAP10 PUSH2 0x64A DUP4 PUSH1 0xA0 MLOAD MLOAD PUSH2 0x22D7 JUMP JUMPDEST SWAP1 PUSH2 0x2319 JUMP JUMPDEST SWAP11 PUSH2 0x2319 JUMP JUMPDEST SWAP7 PUSH2 0x662 PUSH1 0xE0 MLOAD PUSH2 0x270D JUMP JUMPDEST PUSH1 0xE0 MSTORE SWAP9 SWAP7 SWAP9 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x35ACF5000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP10 SWAP2 PUSH1 0x80 DUP3 ADD MLOAD SWAP1 DUP13 DUP3 PUSH2 0x6C4 JUMPI JUMPDEST POP POP POP DUP3 SWAP2 PUSH2 0x64A PUSH2 0x656 SWAP5 PUSH2 0x650 SWAP4 MLOAD PUSH2 0x22D7 JUMP JUMPDEST DUP2 PUSH2 0x6D4 SWAP2 CALLER SWAP1 PUSH1 0xC0 MLOAD DUP7 PUSH2 0x2A9F JUMP JUMPDEST ISZERO PUSH2 0x72B JUMPI POP PUSH1 0x80 DUP1 MLOAD CALLER SWAP1 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP2 MLOAD PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP5 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 MSTORE MLOAD KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 PUSH2 0x64A DUP13 PUSH2 0x6AE JUMP JUMPDEST DUP13 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x265C66A800000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP5 ADD MSTORE DUP1 PUSH1 0x84 DUP5 ADD MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI DUP3 SWAP1 PUSH1 0x5 SHL PUSH1 0xA4 SWAP3 DUP2 PUSH1 0xC0 MLOAD DUP6 DUP6 ADD CALLDATACOPY CALLER PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD MSTORE DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x340BC4C900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST LT ISZERO SWAP1 POP DUP8 DUP13 PUSH2 0x5D2 JUMP JUMPDEST DUP5 DUP9 DUP11 DUP7 SWAP4 PUSH2 0xE80 JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 SLOAD AND DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x84 CALLDATALOAD AND SUB PUSH2 0xE42 JUMPI POP PUSH1 0xA4 CALLDATALOAD DUP2 DUP2 LT PUSH2 0xDEC JUMPI POP PUSH1 0x84 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD37 JUMPI DUP1 CALLVALUE SUB PUSH2 0xCE0 JUMPI POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD PUSH1 0x8 SHR AND PUSH1 0x80 MLOAD SWAP1 DUP4 MLOAD DUP3 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0xB0D JUMPI POP POP PUSH1 0x6 SLOAD SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0xA7F JUMPI JUMPDEST PUSH2 0x9B7 JUMPI POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD PUSH1 0x8 SHR AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x148 JUMPI PUSH2 0x922 SWAP5 PUSH2 0x949 PUSH2 0x934 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH32 0xB48AB8B600000000000000000000000000000000000000000000000000000000 DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x84 DUP7 ADD SWAP1 PUSH2 0x274E JUMP JUMPDEST SWAP1 PUSH1 0x3 NOT DUP6 DUP4 SUB ADD PUSH1 0x44 DUP7 ADD MSTORE PUSH2 0x274E JUMP JUMPDEST PUSH1 0x3 NOT DUP4 DUP3 SUB ADD PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x80 MLOAD SWAP7 PUSH2 0x21E1 JUMP JUMPDEST SUB SWAP2 PUSH1 0x80 MLOAD SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x9AA JUMPI PUSH2 0x961 JUMPI PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x979 JUMPI PUSH1 0x40 MSTORE DUP1 PUSH2 0x142 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MLOAD MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x80 MLOAD REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x80 MLOAD DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x4 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x80 MLOAD SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x9AA JUMPI PUSH1 0x80 MLOAD SWAP3 PUSH2 0xA49 JUMPI JUMPDEST POP PUSH2 0xA45 SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH32 0xA922783000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA77 JUMPI JUMPDEST DUP2 PUSH2 0xA65 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD SWAP1 PUSH2 0xA45 PUSH2 0x9FD JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA58 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x80 MLOAD DUP7 GAS CALL DUP1 ISZERO PUSH2 0x9AA JUMPI DUP5 DUP5 SWAP2 PUSH1 0x80 MLOAD SWAP1 PUSH2 0xAD5 JUMPI JUMPDEST PUSH2 0xACF SWAP3 SWAP4 POP PUSH2 0x2319 JUMP JUMPDEST GT PUSH2 0x893 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB05 JUMPI JUMPDEST DUP2 PUSH2 0xAF1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD DUP3 SWAP1 DUP2 SWAP1 DUP6 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAE4 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xB19 DUP5 DUP8 PUSH2 0x273A JUMP JUMPDEST MLOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 ADD SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0xC3F JUMPI JUMPDEST PUSH2 0xB5F JUMPI POP PUSH2 0xB53 PUSH2 0xB59 SWAP2 PUSH2 0xB4C DUP7 DUP9 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2319 JUMP JUMPDEST SWAP4 PUSH2 0x270D JUMP JUMPDEST SWAP1 PUSH2 0x87D JUMP JUMPDEST DUP4 DUP6 DUP8 PUSH1 0x20 PUSH2 0xB6E DUP4 DUP13 PUSH2 0x273A JUMP JUMPDEST MLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH32 0x2693EBF200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x80 MLOAD SWAP1 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x9AA JUMPI PUSH1 0x80 MLOAD SWAP4 PUSH2 0xC09 JUMPI JUMPDEST POP PUSH2 0xA45 SWAP2 PUSH2 0xBC4 SWAP2 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH32 0xA922783000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC37 JUMPI JUMPDEST DUP2 PUSH2 0xC25 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD SWAP2 PUSH2 0xA45 PUSH2 0xBB6 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC18 JUMP JUMPDEST POP PUSH2 0xC4A DUP6 DUP9 PUSH2 0x273A JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH32 0x2693EBF200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x80 MLOAD DUP10 GAS CALL DUP1 ISZERO PUSH2 0x9AA JUMPI DUP3 SWAP2 PUSH1 0x80 MLOAD SWAP2 PUSH2 0xCA9 JUMPI JUMPDEST POP PUSH2 0xCA3 SWAP1 PUSH2 0xB4C DUP9 DUP11 PUSH2 0x273A JUMP JUMPDEST GT PUSH2 0xB36 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCD8 JUMPI JUMPDEST DUP2 PUSH2 0xCC5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD DUP2 SWAP1 PUSH2 0xCA3 PUSH2 0xC94 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1EABCFBE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x84 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLVALUE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0xD7D JUMPI PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x1EABCFBE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x80 MLOAD PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0x24 DUP3 ADD MSTORE CALLVALUE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xDE7 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0xDC9 DUP2 PUSH2 0x1A95 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x84 CALLDATALOAD AND PUSH2 0x280D JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1EABCFBE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x84 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x1EABCFBE00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x80 PUSH1 0xA0 MLOAD ADD MLOAD SWAP1 DUP2 PUSH2 0xE94 JUMPI JUMPDEST POP PUSH2 0x7ED JUMP JUMPDEST CALLER PUSH1 0x80 MLOAD MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x80 MLOAD DUP3 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0xFB1 JUMPI JUMPDEST ISZERO PUSH2 0xF0F JUMPI POP CALLER PUSH1 0x80 MLOAD MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x80 MLOAD SWAP1 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP6 DUP1 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH32 0x265C66A800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP4 ADD MSTORE DUP1 PUSH1 0x84 DUP4 ADD MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI DUP2 PUSH1 0xA4 SWAP2 PUSH1 0x5 SHL DUP1 PUSH1 0xC0 MLOAD DUP5 DUP5 ADD CALLDATACOPY CALLER PUSH1 0x44 DUP4 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x64 DUP4 ADD MSTORE DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST POP SWAP5 SWAP2 SWAP6 SWAP3 PUSH1 0x40 SWAP5 SWAP2 SWAP5 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 CALLER PUSH1 0x60 SHL AND DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x34 DUP2 MSTORE PUSH2 0x101C DUP2 PUSH2 0x1AE0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP7 PUSH2 0x1029 DUP8 PUSH2 0x1B59 JUMP JUMPDEST SWAP8 PUSH2 0x1037 PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x1B18 JUMP JUMPDEST DUP8 DUP10 MSTORE PUSH1 0x20 DUP10 ADD CALLDATASIZE DUP10 PUSH1 0x5 SHL PUSH1 0xC0 MLOAD ADD GT PUSH2 0x148 JUMPI PUSH1 0xC0 MLOAD SWAP1 JUMPDEST DUP10 PUSH1 0x5 SHL PUSH1 0xC0 MLOAD ADD DUP3 LT PUSH2 0x10C9 JUMPI POP POP SWAP6 PUSH1 0x80 MLOAD SWAP7 JUMPDEST DUP10 MLOAD DUP9 LT ISZERO PUSH2 0x10B7 JUMPI PUSH2 0x107A DUP9 DUP12 PUSH2 0x273A JUMP JUMPDEST MLOAD PUSH1 0x80 MLOAD DUP2 DUP4 LT ISZERO PUSH2 0x10A5 JUMPI POP SWAP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x20 MSTORE PUSH2 0x109F PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 JUMPDEST SWAP8 PUSH2 0x270D JUMP JUMPDEST SWAP7 PUSH2 0x1067 JUMP JUMPDEST MSTORE PUSH1 0x20 MSTORE PUSH2 0x109F PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x1099 JUMP JUMPDEST SWAP1 SWAP4 SWAP7 POP DUP4 SWAP2 SWAP5 SWAP8 SWAP3 SWAP6 SWAP9 POP EQ PUSH2 0xEBC JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1051 JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0xC0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x10FB PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x148 JUMPI DUP5 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH2 0x111F PUSH2 0x1F0D JUMP JUMPDEST AND SWAP1 DUP2 DUP4 LT DUP1 ISZERO PUSH2 0x1211 JUMPI JUMPDEST PUSH2 0x321 JUMPI PUSH32 0x8CED76AEE4B96A1E218E7903610FC7D648023D9075677163A5B31396CB280F96 SWAP7 PUSH1 0xC0 SWAP7 PUSH1 0x3 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1163 DUP4 PUSH2 0x1A95 JUMP JUMPDEST DUP4 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 DUP6 DUP3 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 DUP8 DUP3 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 DUP10 DUP3 MSTORE PUSH1 0x80 DUP7 ADD SWAP4 DUP12 DUP6 MSTORE DUP13 PUSH1 0x80 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SWAP7 MLOAD DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE PUSH1 0x2 DUP7 ADD SWAP3 MLOAD AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 DUP5 SLOAD SWAP4 MLOAD PUSH1 0x40 SHL AND SWAP3 AND OR OR SWAP1 SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE LOG1 PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST POP TIMESTAMP DUP4 GT ISZERO PUSH2 0x112B JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x1234 PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x123C PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 PUSH1 0xFF DUP3 AND PUSH2 0x151A JUMPI PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF SWAP2 PUSH1 0x8 SHL AND SWAP2 AND OR PUSH1 0x3 SSTORE PUSH1 0x80 MLOAD DUP1 MSTORE PUSH2 0x13A2 PUSH1 0x80 MLOAD PUSH1 0x20 SWAP3 DUP2 DUP5 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP4 KECCAK256 SWAP2 AND DUP1 SWAP3 MSTORE DUP4 MSTORE PUSH1 0x80 MLOAD PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x14AC JUMPI JUMPDEST POP PUSH1 0x80 MLOAD DUP1 MSTORE PUSH1 0x1 DUP4 DUP2 DUP1 SWAP6 MSTORE PUSH2 0x12E8 DUP4 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24F3 JUMP JUMPDEST POP PUSH32 0x4C02318D8C3AADC98CCF18AEBBF3126F651E0C3F6A1DE5FF8EDCF6724A2AD5C2 DUP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE DUP1 PUSH1 0x80 MLOAD PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x143F JUMPI JUMPDEST POP POP PUSH1 0x80 MLOAD MSTORE DUP2 DUP2 MSTORE PUSH2 0x1348 DUP4 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24F3 JUMP JUMPDEST POP PUSH32 0x5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC DUP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE DUP1 PUSH1 0x80 MLOAD PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x13D2 JUMPI JUMPDEST POP POP PUSH1 0x80 MLOAD MSTORE MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24F3 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE PUSH1 0x80 MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 DUP1 DUP8 PUSH2 0x1390 JUMP JUMPDEST MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE PUSH1 0x80 MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 DUP1 DUP8 PUSH2 0x1330 JUMP JUMPDEST DUP1 MSTORE PUSH1 0x80 MLOAD DUP1 DUP5 MSTORE DUP2 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP4 MSTORE PUSH1 0x80 MLOAD PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 DUP4 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x155D PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x1565 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x80 MLOAD DUP1 DUP1 DUP1 SWAP4 PUSH1 0x24 CALLDATALOAD SWAP1 GAS CALL PUSH2 0x157A PUSH2 0x2950 JUMP JUMPDEST POP ISZERO PUSH2 0x1586 JUMPI PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x750B219C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x15C9 PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x15D1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x15D9 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x979 JUMPI PUSH2 0x142 SWAP4 PUSH1 0x40 MSTORE AND PUSH2 0x280D JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x166A PUSH2 0x1A33 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0x1693 JUMPI PUSH2 0x142 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x80 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x17DB PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH2 0x176E PUSH2 0x1A33 JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD SWAP1 PUSH2 0x178C DUP4 PUSH1 0x40 PUSH1 0x20 SWAP5 DUP1 DUP7 MSTORE KECCAK256 ADD SLOAD PUSH2 0x2083 JUMP JUMPDEST DUP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD SWAP4 DUP5 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP7 KECCAK256 SWAP2 AND DUP1 SWAP6 MSTORE DUP3 MSTORE DUP1 PUSH1 0x80 MLOAD PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x17E2 JUMPI POP POP PUSH1 0x80 MLOAD MSTORE MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24F3 JUMP JUMPDEST POP PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE PUSH1 0x80 MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 DUP1 DUP7 PUSH2 0x1390 JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x80 MLOAD DUP1 DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x80 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH2 0x1899 PUSH2 0x2A74 JUMP JUMPDEST POP PUSH2 0x18EC PUSH2 0x18A5 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x80 DUP1 PUSH1 0xA0 DUP4 ADD SWAP5 DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x1909 PUSH2 0x2A74 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x18EC PUSH2 0x18A5 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x27C5 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2F JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A2F JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1A2B JUMPI PUSH1 0x20 SWAP3 POP DUP1 PUSH32 0x49007A5F00000000000000000000000000000000000000000000000000000000 EQ SWAP1 DUP2 ISZERO PUSH2 0x199B JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x19CE JUMPI JUMPDEST POP DUP4 PUSH2 0x1994 JUMP JUMPDEST PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x1A01 JUMPI JUMPDEST POP DUP4 PUSH2 0x19C7 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ DUP4 PUSH2 0x19FA JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1A56 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1A56 JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1A56 JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1AB1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1AB1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1AB1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1AB1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AB1 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1A56 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x1B88 DUP4 PUSH2 0x1B59 JUMP JUMPDEST SWAP3 PUSH2 0x1B96 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1B18 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1A56 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1BC0 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1BB2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AB1 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1A56 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1A56 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1A56 JUMPI JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x20BE27040B8E00DF40BCA0DF34743417F3574A156386188F7D7F14369E5EE82B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP3 PUSH32 0x5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC SWAP2 PUSH1 0xFF AND ISZERO PUSH2 0x1C9E JUMPI POP POP POP POP JUMP JUMPDEST PUSH2 0x1CA7 CALLER PUSH2 0x2366 JUMP JUMPDEST SWAP2 DUP5 MLOAD SWAP1 PUSH2 0x1CB4 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x42 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 PUSH1 0x60 CALLDATASIZE DUP6 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x1EE0 JUMPI PUSH1 0x30 DUP5 MSTORE8 DUP3 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x1EE0 JUMPI SWAP1 PUSH1 0x78 PUSH1 0x21 DUP6 ADD MSTORE8 PUSH1 0x41 SWAP2 JUMPDEST DUP2 DUP4 GT PUSH2 0x1E15 JUMPI POP POP POP PUSH2 0x1DB9 JUMPI PUSH1 0x48 PUSH2 0xA45 SWAP4 DUP7 SWAP4 PUSH2 0x1D83 SWAP4 PUSH2 0x1D74 SWAP9 MLOAD SWAP9 DUP10 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP11 DUP7 ADD MSTORE PUSH2 0x1D3F DUP2 MLOAD DUP1 SWAP3 DUP13 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST DUP5 ADD SWAP2 PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x37 DUP5 ADD MSTORE MLOAD DUP1 SWAP4 DUP7 DUP5 ADD SWAP1 PUSH2 0x21BE JUMP JUMPDEST ADD SUB PUSH1 0x28 DUP2 ADD DUP8 MSTORE ADD DUP6 PUSH2 0x1B18 JUMP JUMPDEST MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x64 DUP5 DUP7 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1EB3 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 SWAP1 BYTE PUSH2 0x1E52 DUP6 DUP8 PUSH2 0x2326 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP3 DUP1 ISZERO PUSH2 0x1E86 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6058EE1F1C102E8AC9EF0C4319964E42C1AB00DFBA021F8302FD0802656934AC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP3 PUSH32 0x4C02318D8C3AADC98CCF18AEBBF3126F651E0C3F6A1DE5FF8EDCF6724A2AD5C2 SWAP2 PUSH1 0xFF AND ISZERO PUSH2 0x1F71 JUMPI POP POP POP POP JUMP JUMPDEST PUSH2 0x1F7A CALLER PUSH2 0x2366 JUMP JUMPDEST SWAP2 DUP5 MLOAD SWAP1 PUSH2 0x1F87 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x42 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 PUSH1 0x60 CALLDATASIZE DUP6 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x1EE0 JUMPI PUSH1 0x30 DUP5 MSTORE8 DUP3 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x1EE0 JUMPI SWAP1 PUSH1 0x78 PUSH1 0x21 DUP6 ADD MSTORE8 PUSH1 0x41 SWAP2 JUMPDEST DUP2 DUP4 GT PUSH2 0x2012 JUMPI POP POP POP PUSH2 0x1DB9 JUMPI PUSH1 0x48 PUSH2 0xA45 SWAP4 DUP7 SWAP4 PUSH2 0x1D83 SWAP4 PUSH2 0x1D74 SWAP9 MLOAD SWAP9 DUP10 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP11 DUP7 ADD MSTORE PUSH2 0x1D3F DUP2 MLOAD DUP1 SWAP3 DUP13 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1EB3 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 SWAP1 BYTE PUSH2 0x204F DUP6 DUP8 PUSH2 0x2326 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP3 DUP1 ISZERO PUSH2 0x1E86 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP2 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 DUP3 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP2 KECCAK256 CALLER DUP3 MSTORE DUP4 MSTORE PUSH1 0xFF DUP5 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x20AC JUMPI POP POP POP POP JUMP JUMPDEST PUSH2 0x20B5 CALLER PUSH2 0x2366 JUMP JUMPDEST SWAP2 DUP5 MLOAD SWAP1 PUSH2 0x20C2 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x42 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 PUSH1 0x60 CALLDATASIZE DUP6 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x1EE0 JUMPI PUSH1 0x30 DUP5 MSTORE8 DUP3 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x1EE0 JUMPI SWAP1 PUSH1 0x78 PUSH1 0x21 DUP6 ADD MSTORE8 PUSH1 0x41 SWAP2 JUMPDEST DUP2 DUP4 GT PUSH2 0x214D JUMPI POP POP POP PUSH2 0x1DB9 JUMPI PUSH1 0x48 PUSH2 0xA45 SWAP4 DUP7 SWAP4 PUSH2 0x1D83 SWAP4 PUSH2 0x1D74 SWAP9 MLOAD SWAP9 DUP10 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP11 DUP7 ADD MSTORE PUSH2 0x1D3F DUP2 MLOAD DUP1 SWAP3 DUP13 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1EB3 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 SWAP1 BYTE PUSH2 0x218A DUP6 DUP8 PUSH2 0x2326 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP3 DUP1 ISZERO PUSH2 0x1E86 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x21D1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x21C1 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x221D DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH2 0x226F SWAP3 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP4 KECCAK256 SWAP5 AND SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP4 KECCAK256 SLOAD AND PUSH2 0x2272 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x25B4 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP1 LOG4 PUSH2 0x2262 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x22EA JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x22EA JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2337 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2373 DUP3 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x2A DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 CALLDATASIZE DUP3 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x2337 JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP2 MLOAD PUSH1 0x1 SWAP1 DUP2 LT ISZERO PUSH2 0x2337 JUMPI PUSH1 0x78 PUSH1 0x21 DUP5 ADD MSTORE8 PUSH1 0x29 SWAP1 JUMPDEST DUP1 DUP3 GT PUSH2 0x2410 JUMPI POP POP PUSH2 0x23B2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x24AD JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 SWAP1 BYTE PUSH2 0x244C DUP5 DUP7 PUSH2 0x2326 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP2 DUP1 ISZERO PUSH2 0x247F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 PUSH2 0x23A2 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2337 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x25AE JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH2 0x2581 JUMPI DUP4 PUSH2 0x2571 PUSH2 0x253C DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0x24DB JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x2706 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP2 ADD DUP2 DUP2 GT PUSH2 0x26D9 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x26AC JUMPI DUP1 DUP3 SUB PUSH2 0x2677 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x264A JUMPI DUP3 ADD SWAP2 PUSH2 0x262D DUP4 DUP4 PUSH2 0x24DB JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x24 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x2697 PUSH2 0x2687 PUSH2 0x253C SWAP4 DUP7 PUSH2 0x24DB JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x24DB JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2615 JUMP JUMPDEST PUSH1 0x24 DUP9 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x22EA JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2337 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x276E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2760 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x278F DUP3 PUSH2 0x1A95 JUMP JUMPDEST DUP2 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x6 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x8 SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x27D2 DUP2 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x3 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x1AB1 JUMPI PUSH2 0x288D SWAP2 PUSH1 0x40 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP3 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP6 DUP4 ADD MSTORE PUSH1 0x0 DUP1 DUP6 DUP8 DUP3 SWAP8 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL PUSH2 0x2887 PUSH2 0x2950 JUMP JUMPDEST SWAP2 PUSH2 0x2980 JUMP JUMPDEST DUP1 MLOAD SWAP2 DUP3 ISZERO SWAP2 DUP5 DUP4 ISZERO PUSH2 0x292C JUMPI JUMPDEST POP POP POP SWAP1 POP ISZERO PUSH2 0x28A8 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP4 DUP2 DUP1 SWAP5 POP ADD SUB SLT PUSH2 0x1A2F JUMPI DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1EE JUMPI POP DUP1 CODESIZE DUP1 DUP5 PUSH2 0x289B JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x297B JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2961 DUP3 PUSH2 0x1BCF JUMP JUMPDEST SWAP2 PUSH2 0x296F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1B18 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x29FB JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x2994 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x299D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2A0E JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0xA45 SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x21E1 JUMP JUMPDEST SWAP1 DUP1 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x2A6A JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x2A62 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST TIMESTAMP LT SWAP2 POP CODESIZE PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2A81 DUP3 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP3 SWAP1 PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP4 MSTORE PUSH1 0xFF DUP6 DUP6 KECCAK256 SLOAD AND ISZERO SWAP8 DUP9 PUSH2 0x2AEA JUMPI JUMPDEST POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP6 SWAP8 POP DUP5 SWAP7 SWAP9 SWAP5 MLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP6 DUP4 ADD SWAP4 PUSH1 0x60 SHL AND DUP4 MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x34 DUP2 MSTORE PUSH2 0x2B34 DUP2 PUSH2 0x1AE0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x2B41 DUP9 PUSH2 0x1B59 JUMP JUMPDEST SWAP8 PUSH2 0x2B4E DUP8 MLOAD SWAP10 DUP11 PUSH2 0x1B18 JUMP JUMPDEST DUP1 DUP10 MSTORE DUP4 DUP10 ADD SWAP1 PUSH1 0x5 SHL DUP3 ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x2BDD JUMPI DUP5 SWAP1 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2BCD JUMPI POP POP POP POP SWAP2 DUP4 SWAP3 JUMPDEST DUP8 MLOAD DUP5 LT ISZERO PUSH2 0x2BB8 JUMPI PUSH2 0x2B88 DUP5 DUP10 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x2BA8 JUMPI DUP6 MSTORE DUP3 MSTORE PUSH2 0x2BA2 DUP6 DUP6 KECCAK256 SWAP4 PUSH2 0x270D JUMP JUMPDEST SWAP3 PUSH2 0x2B75 JUMP JUMPDEST SWAP1 DUP6 MSTORE DUP3 MSTORE PUSH2 0x2BA2 DUP6 DUP6 KECCAK256 PUSH2 0xB53 JUMP JUMPDEST SWAP5 POP SWAP6 POP POP POP POP EQ CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x2ADF JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP6 SWAP2 ADD PUSH2 0x2B66 JUMP JUMPDEST DUP7 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH8 0x89F230ADCE122F89 DUP7 0xCE DUP8 DUP14 PUSH32 0x455CB45C2B5A3B66278304ADEE742BA3EE64736F6C6343000813003300000000 ",
							"sourceMap": "914:10911:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;914:10911:39;;;;;5646:7:6;914:10911:39;;;;:::i;:::-;;;;;;2712:4:6;914:10911:39;;;;;;;;4733:22:6;914:10911:39;2712:4:6;:::i;:::-;5646:7;:::i;:::-;914:10911:39;;;;;;;;;;;;;;-1:-1:-1;;914:10911:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;914:10911:39;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;914:10911:39;;;;;;;;;;;;;;;;;;-1:-1:-1;;914:10911:39;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;2712:4:6;;;:::i;:::-;914:10911:39;;8943:19;;;;:49;;;;914:10911;8939:107;;9151:73;914:10911;;;;;;;;;;:::i;:::-;;;;9076:60;914:10911;9076:60;;914:10911;9076:60;914:10911;9076:60;;914:10911;9076:60;914:10911;9076:60;;914:10911;9076:60;914:10911;;9055:81;914:10911;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9151:73;914:10911;;;;8939:107;914:10911;;;9015:20;;;;8943:49;8977:15;;8966:26;;;8943:49;;914:10911;;;;;-1:-1:-1;;914:10911:39;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;914:10911:39;;;;;;;;;;;;;;;5146:18:30;914:10911:39;;;;;;5146:18:30;:::i;:::-;914:10911:39;;;;;;;;290:18:24;914:10911:39;;;;;;;;;-1:-1:-1;;914:10911:39;;;;;;;;:::i;:::-;2712:4:6;;:::i;:::-;914:10911:39;;;;;;;;;;;;;;-1:-1:-1;;914:10911:39;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;3114:19;;3143:17;;914:10911;;;:::i;:::-;3200:52;;3288:67;914:10911;;3310:22;;;914:10911;;;;3334:20;;;914:10911;;3288:67;;:::i;:::-;914:10911;;3418:9;;;;914:10911;;;3451:3;914:10911;;3429:20;;;;;;3488:12;;;;;:::i;:::-;914:10911;3556:6;;;;;;:32;;;;3451:3;3552:95;;;;3660:21;3713:11;;;;;:::i;:::-;914:10911;;;;;;3804:17;914:10911;;;;;;;;:::i;:::-;3869:65;914:10911;;3891:21;;914:10911;;;;3914:19;;914:10911;;3869:65;;:::i;:::-;914:10911;;;4026:136;;;;;4222:32;4556:21;4222:32;4272:39;914:10911;4285:17;:26;:17;;;914:10911;4285:26;:::i;:::-;4272:39;;:::i;:::-;3948:595;4556:21;:::i;:::-;3451:3;;;;;:::i;:::-;;;3418:9;;;;;4026:136;914:10911;;;;4122:21;;;;914:10911;4122:21;;914:10911;4122:21;3948:595;4411:22;;;914:10911;4411:22;;914:10911;996:18:45;;;992:222;;3948:595:39;914:10911;;;;;4503:25;4556:21;914:10911;4490:38;914:10911;;4503:25;:::i;992:222:45:-;4443:10:39;1035:41:45;4443:10:39;;1035:41:45;;;;;:::i;:::-;1034:42;1030:131;;-1:-1:-1;914:10911:39;;;4443:10;914:10911;;1174:10:45;914:10911:39;;;;;;;;;;;;;;;;;;;;;;;1199:4:45;914:10911:39;;;4443:10;4503:25;992:222:45;;;1030:131;914:10911:39;;;1103:43:45;;;;914:10911:39;1103:43:45;;914:10911:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4443:10;914:10911;;;;;;;;;;1103:43:45;;;;3552:95:39;914:10911;;;3615:17;;;;3556:32;3566:22;;;-1:-1:-1;3556:32:39;;;;3429:20;;;;;;4598:212;;3413:1175;914:10911;;;;;;;;;;4824:38;4820:179;;914:10911;;;5012:21;;;5008:166;;-1:-1:-1;914:10911:39;;;;;;5269:9;;:22;5265:179;;5183:571;;914:10911;6844:6;914:10911;;;;;;;;;6940:13;6935:452;6955:9;;;;;;914:10911;;7421:28;914:10911;7463:18;;;;:72;;;6935:452;7459:178;;914:10911;;;;6844:6;914:10911;;;;7647:69;;;;;;914:10911;;;;;;;;7647:69;;;;;;;914:10911;7647:69;;914:10911;;7647:69;;914:10911;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;914:10911:39;;;;;;;;;:::i;:::-;-1:-1:-1;;914:10911:39;;;;;;;;;;;;:::i;:::-;7647:69;914:10911;;;7647:69;;;;;;;;;914:10911;;;;7647:69;914:10911;;;;;;;7647:69;;;914:10911;;;;;;;;;;;;7647:69;914:10911;;;;;;;;;;7459:178;914:10911;;;;;;7577:19;;;;914:10911;7577:19;;914:10911;;7577:19;;;;;;;;914:10911;;7577:19;;;7459:178;914:10911;7558:68;914:10911;;;7558:68;;;;;;914:10911;7558:68;;914:10911;;;;;;;;;;;;;;;;;;7558:68;;;;7577:19;;;;914:10911;7577:19;;914:10911;7577:19;;;;;;914:10911;7577:19;;;:::i;:::-;;;914:10911;;;;;;7558:68;7577:19;;;;;-1:-1:-1;7577:19:39;;7463:72;914:10911;;;;7485:19;;914:10911;;;;;;7485:19;;;;;;;914:10911;;;;;7485:19;;;7463:72;7485:33;;;;;:::i;:::-;:50;7463:72;;7485:19;;;;914:10911;7485:19;;914:10911;7485:19;;;;;;914:10911;7485:19;;;:::i;:::-;;;914:10911;;;;;;;;;;;7485:19;;;;;-1:-1:-1;7485:19:39;;6966:3;7066:11;;;;;;:::i;:::-;914:10911;;;;3804:17;914:10911;;;;;;;7048:40;914:10911;7123:18;;;:82;;;6966:3;7102:236;;7366:10;7351:25;6966:3;7366:10;;;;;:::i;:::-;914:10911;7351:25;;:::i;:::-;6966:3;;:::i;:::-;6940:13;;;7102:236;7282:11;;;914:10911;7282:11;;;;:::i;:::-;914:10911;;;;7264:30;;;;914:10911;7264:30;;914:10911;7264:30;;914:10911;;;7264:30;;;;;;;;914:10911;;7264:30;;;7102:236;7296:10;7245:78;7296:10;;;;:::i;:::-;914:10911;;;;7245:78;;;;;;914:10911;7245:78;;914:10911;;;;;;;;;;;;;;;;;;7264:30;;;;914:10911;7264:30;;914:10911;7264:30;;;;;;914:10911;7264:30;;;:::i;:::-;;;914:10911;;;;;;7245:78;7264:30;;;;;-1:-1:-1;7264:30:39;;7123:82;7163:11;;;;;:::i;:::-;914:10911;;;7145:30;914:10911;7145:30;;914:10911;7145:30;;914:10911;;;;;;;7145:30;;;;;;;914:10911;;;;7145:30;;;7123:82;7178:10;7145:43;7178:10;;;;;:::i;7145:43::-;:60;7123:82;;7145:30;;;;914:10911;7145:30;;914:10911;7145:30;;;;;;914:10911;7145:30;;;:::i;:::-;;;914:10911;;;;;;;7145:43;:30;;;;;-1:-1:-1;7145:30:39;;5265:179;914:10911;;5365:64;;;914:10911;;;;;5365:64;;914:10911;;;;;;;;5269:9;914:10911;;;;;;7558:68;5183:571;5464:9;:13;:9;;914:10911;;;5543:45;;;914:10911;;;5543:45;;914:10911;;;;;;;5464:9;914:10911;;;;5543:45;5460:294;1516:68:19;914:10911:39;;;1516:68:19;914:10911:39;;1516:68:19;;;5706:10:39;914:10911;1516:68:19;;914:10911:39;5726:4;914:10911;;;;;;;;;1516:68:19;;;;;:::i;:::-;914:10911:39;;;;1516:68:19;:::i;:::-;5183:571:39;;5008:166;914:10911;;5099:64;;;914:10911;;;;;5099:64;;914:10911;;;;;;;;;;;;;;7558:68;4820:179;914:10911;;;;4940:48;;;;914:10911;4940:48;;914:10911;;;;;;;;;;;4940:48;4598:212;914:10911;4727:23;;;914:10911;996:18:45;;992:222;;4598:212:39;;;;992:222:45;4760:10:39;914:10911;;;1699:10:45;914:10911:39;;;;;;;;;;;;;;;;;;;1698:23:45;:99;;;992:222;1034:42;1030:131;;4760:10:39;;914:10911;;;1699:10:45;914:10911:39;;;;;;;;;;;;;;;;1199:4:45;914:10911:39;;;;;;;992:222:45;;;;1030:131;914:10911:39;;1103:43:45;;;;914:10911:39;1103:43:45;;914:10911:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;4760:10;914:10911;;;;4780:17;914:10911;;;;;;1103:43:45;;;;1698:99;914:10911:39;;;;;;;;;;;1767:28:45;;4760:10:39;914:10911;4760:10;914:10911;;;;;4780:17;914:10911;;;;;1767:28:45;;;;;:::i;:::-;914:10911:39;1757:39:45;;914:10911:39;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:27:25;;914:10911:39;;;2122:118:25;2160:3;914:10911:39;;2142:16:25;;;;;2219:8;;;;:::i;:::-;914:10911:39;;;9509:5:25;;;;;;914:10911:39;;;;9714:123:25;914:10911:39;9714:123:25;2160:3;914:10911:39;;;9714:123:25;9509:51;2160:3;;:::i;:::-;2127:13;;;9509:51;9714:123;914:10911:39;9714:123:25;2160:3;914:10911:39;;;9714:123:25;9509:51;;2142:16;;;;;;;;;;;;;1297:33;1698:99:45;;914:10911:39;;;;;;;;;;;;;;;;;;-1:-1:-1;;914:10911:39;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2712:4:6;;;:::i;:::-;914:10911:39;10185:19;;;;:49;;;;914:10911;10181:107;;10401:81;914:10911;;;;;;;;;;:::i;:::-;;;;;10326:60;;914:10911;;;;;10326:60;;914:10911;;;;;10326:60;;914:10911;;;;;10326:60;;914:10911;;;;;;;;10297:17;914:10911;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10401:81;914:10911;;;;10185:49;10219:15;;10208:26;;;10185:49;;914:10911;;;;;-1:-1:-1;;914:10911:39;;;;;;;:::i;:::-;;;:::i;:::-;1640:12;914:10911;;;;;1636:73;;914:10911;;;;;;;;;1640:12;914:10911;;;;;8641:50:30;914:10911:39;;;;;;;;;;;;;;;;;;;;;;;;;;7897:23:6;7893:152;;914:10911:39;;;;;;2159:12:7;914:10911:39;;;;;8641:50:30;914:10911:39;;;;;8641:50:30;:::i;:::-;;1043:28:39;914:10911;;;;;;;;;;;;;;;;;;;;;;;;;;7897:23:6;7893:152;;914:10911:39;;;;;;;;;8641:50:30;914:10911:39;;;;;8641:50:30;:::i;:::-;;600:26:46;914:10911:39;;;;;;;;;;;;;;;;;;;;;;;;;;7897:23:6;7893:152;;914:10911:39;;;;;;;;;;;8641:50:30;:::i;:::-;;914:10911:39;1640:12;914:10911;;;1640:12;914:10911;;;;;7893:152:6;914:10911:39;;;;;;;;;;;;;;;;;;;;;;;;;;;736:10:21;;7993:40:6;736:10:21;7993:40:6;;;7893:152;;;;;914:10911:39;;;;;;;;;;;;;;;;;;;;;;;;;;;736:10:21;;7993:40:6;736:10:21;7993:40:6;;;7893:152;;;;;914:10911:39;;;;;;;;;;;;;;;;;;;;7969:4:6;914:10911:39;;;;;;;736:10:21;;7993:40:6;;;;;7893:152;;;1636:73:39;914:10911;;;1675:23;;;;914:10911;;;;;-1:-1:-1;;914:10911:39;;;;;;;:::i;:::-;2712:4:6;;:::i;:::-;914:10911:39;;;;;;;;1415:25:46;;;;;:::i;:::-;;1454:8;1450:62;;914:10911:39;;;;1450:62:46;914:10911:39;;;1485:16:46;;;;914:10911:39;;;;;-1:-1:-1;;914:10911:39;;;;;;;:::i;:::-;;;:::i;:::-;2712:4:6;;:::i;:::-;914:10911:39;;1076:58:19;914:10911:39;;1076:58:19;;;914:10911:39;;;;;1076:58:19;;914:10911:39;;;;;;;;1076:58:19;;914:10911:39;;;;;;;;;;;;;1076:58:19;914:10911:39;;;;1076:58:19;:::i;914:10911:39:-;;;;;-1:-1:-1;;914:10911:39;;;;;;;:::i;:::-;736:10:21;914:10911:39;;;6313:23:6;914:10911:39;;6419:7:6;914:10911:39;;;6419:7:6;:::i;914:10911:39:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;914:10911:39;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;914:10911:39;;;;;8641:50:30;914:10911:39;;;;;:::i;:::-;;;;;;;;;2712:4:6;914:10911:39;;;;;;;;4733:22:6;914:10911:39;2712:4:6;:::i;:::-;914:10911:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7897:23:6;7893:152;;914:10911:39;;;;;;;;;;8641:50:30;:::i;:::-;;914:10911:39;;;;7893:152:6;914:10911:39;;;;;;;;;;;;;;;;;;;;;;;;;;;736:10:21;;7993:40:6;736:10:21;7993:40:6;;;7893:152;;;;914:10911:39;;;;;-1:-1:-1;;914:10911:39;;;;;;;;;;;;;;;;;;;4733:22:6;914:10911:39;;;;;;;;;;;;;;-1:-1:-1;;914:10911:39;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;914:10911:39;;;;;;;:::i;:::-;;;;;;;11154:17;914:10911;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;914:10911:39;;;;;;;;;;;;;;;;11722:54;;;:39;:54;:94;;;;;914:10911;;;;;;;11722:94;778:42:7;763:57;;;-1:-1:-1;763:97:7;;;;11722:94:39;;;;;763:97:7;2933:32:6;2918:47;;;-1:-1:-1;2918:87:6;;;;763:97:7;;;;;2918:87:6;978:25:26;963:40;;;2918:87:6;;;914:10911:39;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3556:105:6:-;736:10:21;3215:6:6;914:10911:39;;;;;;;;;;;;;;;600:26:46;;914:10911:39;;4039:23:6;4035:401;;3556:105;;;;:::o;4035:401::-;2572:52:24;736:10:21;2572:52:24;:::i;:::-;1877:447;914:10911:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2036:15:24;;;914:10911:39;;;;;;;;;;;2062:15:24;914:10911:39;;;2062:15:24;914:10911:39;2088:131:24;2121:5;;;;;;2237:10;;;290:18;;914:10911:39;;;;;4133:257:6;914:10911:39;;;;4133:257:6;;;914:10911:39;4133:257:6;;;914:10911:39;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;4133:257:6;;;;;;;;;:::i;:::-;914:10911:39;4079:345:6;;;;;;2206:1:24;4079:345:6;;914:10911:39;;;;;;:::i;290:18:24:-;;914:10911:39;;;290:18:24;;;;;2206:1;290:18;;;;;;914:10911:39;290:18:24;914:10911:39;;;290:18:24;;2128:3;2169:11;;;2177:3;2169:11;;2160:21;;;;;;914:10911:39;2160:21:24;;2148:33;;;;:::i;:::-;;2206:1;290:18;2128:3;914:10911:39;;;;;;2093:26:24;;;;914:10911:39;;;;;;;2206:1:24;914:10911:39;;2160:21:24;914:10911:39;;;;;;2206:1:24;914:10911:39;;;;;;;;;;;;3556:105:6;736:10:21;3215:6:6;914:10911:39;;;;;;;;;;;;;;;1043:28;;914:10911;;4039:23:6;4035:401;;3556:105;;;;:::o;4035:401::-;2572:52:24;736:10:21;2572:52:24;:::i;:::-;1877:447;914:10911:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2036:15:24;;;914:10911:39;;;;;;;;;;;2062:15:24;914:10911:39;;;2062:15:24;914:10911:39;2088:131:24;2121:5;;;;;;2237:10;;;290:18;;914:10911:39;;;;;4133:257:6;914:10911:39;;;;4133:257:6;;;914:10911:39;4133:257:6;;;914:10911:39;;;;;;;;;;;;;:::i;2128:3:24:-;2169:11;;;2177:3;2169:11;;2160:21;;;;;;914:10911:39;2160:21:24;;2148:33;;;;:::i;:::-;;2206:1;290:18;2128:3;914:10911:39;;;;;;2093:26:24;;;;3556:105:6;3215:6;914:10911:39;;;;;;;;;;;;;;736:10:21;914:10911:39;;;;;;;;;;4039:23:6;4035:401;;3556:105;;;;:::o;4035:401::-;2572:52:24;736:10:21;2572:52:24;:::i;:::-;4329:38:6;914:10911:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2036:15:24;;;914:10911:39;;;;;;;;;;;2062:15:24;914:10911:39;;;2062:15:24;914:10911:39;2088:131:24;2121:5;;;;;;2237:10;;;290:18;;914:10911:39;;;;;4133:257:6;914:10911:39;;;;4133:257:6;;;914:10911:39;4133:257:6;;;914:10911:39;;;;;;;;;;;;;:::i;2128:3:24:-;2169:11;;;2177:3;2169:11;;2160:21;;;;;;914:10911:39;2160:21:24;;2148:33;;;;:::i;:::-;;2206:1;290:18;2128:3;914:10911:39;;;;;;2093:26:24;;;;914:10911:39;;;;;;;;-1:-1:-1;;914:10911:39;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;2292:174:7:-;;914:10911:39;8972:53:30;2292:174:7;3215:6:6;914:10911:39;;;;;;;;;;;;;;;;;;;;;;;;;8312:152:6;;2292:174:7;914:10911:39;;2424:12:7;914:10911:39;;;8972:53:30;:::i;:::-;;2292:174:7:o;8312:152:6:-;914:10911:39;;;;;;;;;;;;;;;;;;;;;;;736:10:21;8412:40:6;;;;;;8312:152;;914:10911:39;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;1877:447:24;914:10911:39;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2036:15:24;;;914:10911:39;;;;;;;;;2062:15:24;914:10911:39;;;2062:15:24;914:10911:39;2088:131:24;2121:5;;;;;;2237:10;;290:18;;1877:447;:::o;290:18::-;;914:10911:39;;290:18:24;;;914:10911:39;2206:1:24;290:18;;;914:10911:39;290:18:24;;;914:10911:39;290:18:24;914:10911:39;;;290:18:24;;2128:3;2169:11;;2177:3;2169:11;;2160:21;;;;;;914:10911:39;2160:21:24;;2148:33;;;;:::i;:::-;;2206:1;290:18;2128:3;914:10911:39;;;;;;2093:26:24;;;914:10911:39;;-1:-1:-1;914:10911:39;;;;2206:1:24;914:10911:39;;2160:21:24;914:10911:39;-1:-1:-1;914:10911:39;;;;2206:1:24;914:10911:39;;;;;;;;;;-1:-1:-1;914:10911:39;;-1:-1:-1;914:10911:39;;;-1:-1:-1;914:10911:39;:::o;2278:414:30:-;;;4471:12;;;-1:-1:-1;914:10911:39;;;;;;;;;;;4471:24:30;2358:327;914:10911:39;;;;;;;;;;;;;;;;4471:12:30;914:10911:39;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4471:12:30;2617:11;:::o;914:10911:39:-;;;;;;;;;;2358:327:30;-1:-1:-1;2661:12:30;-1:-1:-1;;2661:12:30:o;2868:1420::-;;3073:12;;;-1:-1:-1;;914:10911:39;;;;;;;;;;;3109:15:30;;;;3105:1176;3109:15;;;914:10911:39;;;;;;;;;;;;;;;;;;;;;3600:26:30;;;3596:405;;3105:1176;914:10911:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;3073:12:30;4213:11;:::o;914:10911:39:-;;;;;;;;;;3596:405:30;914:10911:39;3667:22:30;3792:26;3667:22;;;:::i;:::-;914:10911:39;;;;;290:18:24;3792:26:30;;;;;:::i;914:10911:39:-;;;;;;;;;;;;3596:405:30;;;;;914:10911:39;;;;;;;;;;;;;;;;;;;;3105:1176:30;4257:12;;;;;:::o;914:10911:39:-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;914:10911:39;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10824:18;914:10911;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5312:649:19:-;914:10911:39;;;;;;;;;;;;;;;;;;5670:69:20;914:10911:39;;;;;;;;;;;;;-1:-1:-1;5621:31:20;;;;;;;;;;;;;;:::i;:::-;5670:69;;:::i;:::-;914:10911:39;;5850:22:19;;;:56;;;;;;5312:649;914:10911:39;;;;;;;;5312:649:19;:::o;914:10911:39:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5850:56:19;5876:30;;;;;;;914:10911:39;;;;5876:30:19;;914:10911:39;;;;;;;;;5850:56:19;;;;;;;914:10911:39;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;914:10911:39;;;;:::o;:::-;;;:::o;7865:644:20:-;;;;8075:427;;;914:10911:39;;;8107:22:20;8103:290;;8407:17;;:::o;8103:290::-;1746:19;:23;914:10911:39;;8407:17:20;:::o;914:10911:39:-;;;;;;;;;;;;;;;;;;;;;;;8075:427:20;914:10911:39;;;;-1:-1:-1;9212:21:20;:17;;9387:145;;;;;;;9208:388;914:10911:39;;;;9564:20:20;;;;;;914:10911:39;9564:20:20;;;914:10911:39;;;;;;:::i;2208:285::-;;2369:13;;:45;;;;;2208:285;2369:76;;;;;2362:83;2208:285;:::o;2369:76::-;2418:15;;;:27;;2208:285;:::o;2369:45::-;2386:15;:28;;-1:-1:-1;2369:45:39;;;914:10911;;;;;;;:::i;:::-;-1:-1:-1;914:10911:39;;;;;;;;;;;;;;;;;;;;;;:::o;1532:272:45:-;;;;-1:-1:-1;914:10911:39;;;;;;;;1699:10:45;914:10911:39;;;;;;;;;;;;;;;;;;1698:23:45;:99;;;;1532:272;1691:106;;;;;;;;1532:272;:::o;1698:99::-;914:10911:39;;;;;;;;;;;;1767:28:45;914:10911:39;1767:28:45;;;914:10911:39;;;;;;;;;;;1767:28:45;;;;;:::i;:::-;914:10911:39;1757:39:45;;914:10911:39;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:27:25;;;;2127:13;;2122:118;2160:3;914:10911:39;;2142:16:25;;;;;2219:8;;;;:::i;:::-;914:10911:39;;9509:5:25;;;;;;9714:123;;;;2160:3;9714:123;;;2160:3;;:::i;:::-;2127:13;;;9509:51;9714:123;;;;;2160:3;9714:123;;;9509:51;;2142:16;;;;;;;;1297:33;1698:99:45;;;;;;;;;;914:10911:39;;;;;;;;;;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"GlobalSaleInactive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"InsufficientPayment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"}],\"name\":\"InsufficientSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleDetails\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenIds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"MerkleProofInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SaleInactive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"GlobalSaleDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"TokenSaleDetailsUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"checkMerkleProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"globalSaleDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IERC1155SaleFunctions.SaleDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"items\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"expectedPaymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTotal\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setGlobalSaleDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"paymentTokenAddr\",\"type\":\"address\"}],\"name\":\"setPaymentToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"setTokenSaleDetails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenSaleDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IERC1155SaleFunctions.SaleDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InsufficientPayment(address,uint256,uint256)\":[{\"params\":{\"actual\":\"Actual amount of tokens.\",\"currency\":\"Currency address. address(0) indicates ETH.\",\"expected\":\"Expected amount of tokens.\"}}],\"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)\":[{\"params\":{\"addr\":\"Address to check.\",\"proof\":\"Merkle proof.\",\"root\":\"Merkle root.\",\"salt\":\"Salt used to generate the merkle leaf.\"}}],\"SaleInactive(uint256)\":[{\"params\":{\"tokenId\":\"Invalid Token ID.\"}}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"checkMerkleProof(bytes32,bytes32[],address,bytes32)\":{\"params\":{\"addr\":\"Address to check.\",\"proof\":\"Merkle proof.\",\"root\":\"Merkle root.\",\"salt\":\"Salt used to generate the merkle leaf.\"},\"returns\":{\"_0\":\"True if the proof is valid and has not yet been used by {addr}.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"globalSaleDetails()\":{\"returns\":{\"_0\":\"Sale details.\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address)\":{\"details\":\"This should be called immediately after deployment.\",\"params\":{\"items\":\"The ERC-1155 Items contract address\",\"owner\":\"Owner address\"}},\"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])\":{\"details\":\"tokenIds must be sorted ascending without duplicates.An empty proof is supplied when no proof is required.\",\"params\":{\"amounts\":\"Amounts of tokens to mint.\",\"data\":\"Data to pass if receiver is contract.\",\"expectedPaymentToken\":\"ERC20 token address to accept payment in. address(0) indicates ETH.\",\"maxTotal\":\"Maximum amount of payment tokens.\",\"proof\":\"Merkle proof for allowlist minting.\",\"to\":\"Address to mint tokens to.\",\"tokenIds\":\"Token IDs to mint.\"}},\"paymentToken()\":{\"returns\":{\"_0\":\"Payment token address.\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setGlobalSaleDetails(uint256,uint256,uint64,uint64,bytes32)\":{\"details\":\"A zero end time indicates an inactive sale.\",\"params\":{\"cost\":\"The amount of payment tokens to accept for each token minted.\",\"endTime\":\"The end time of the sale. Tokens cannot be minted after this time.\",\"merkleRoot\":\"The merkle root for allowlist minting.\",\"startTime\":\"The start time of the sale. Tokens cannot be minted before this time.\",\"supplyCap\":\"The maximum number of tokens that can be minted.\"}},\"setPaymentToken(address)\":{\"details\":\"This should be set before the sale starts.\",\"params\":{\"paymentTokenAddr\":\"The ERC20 token address to accept payment in. address(0) indicates ETH.\"}},\"setTokenSaleDetails(uint256,uint256,uint256,uint64,uint64,bytes32)\":{\"details\":\"A zero end time indicates an inactive sale.\",\"params\":{\"cost\":\"The amount of payment tokens to accept for each token minted.\",\"endTime\":\"The end time of the sale. Tokens cannot be minted after this time.\",\"merkleRoot\":\"The merkle root for allowlist minting.\",\"startTime\":\"The start time of the sale. Tokens cannot be minted before this time.\",\"supplyCap\":\"The maximum number of tokens that can be minted.\",\"tokenId\":\"The token ID to set the sale details for.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface id\"},\"returns\":{\"_0\":\"True if supported\"}},\"tokenSaleDetails(uint256)\":{\"params\":{\"tokenId\":\"Token ID to get sale details for.\"},\"returns\":{\"_0\":\"Sale details.\"}},\"withdrawERC20(address,address,uint256)\":{\"params\":{\"to\":\"Address to withdraw to.\",\"token\":\"The ERC20 token address.\",\"value\":\"Amount to withdraw.\"}},\"withdrawETH(address,uint256)\":{\"params\":{\"to\":\"Address to withdraw to.\",\"value\":\"Amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"GlobalSaleInactive()\":[{\"notice\":\"Sale is not active globally.\"}],\"InsufficientPayment(address,uint256,uint256)\":[{\"notice\":\"Insufficient tokens for payment.\"}],\"InsufficientSupply(uint256,uint256,uint256)\":[{\"notice\":\"Insufficient supply of tokens.\"}],\"InvalidInitialization()\":[{\"notice\":\"Contract already initialized.\"}],\"InvalidSaleDetails()\":[{\"notice\":\"Sale details supplied are invalid.\"}],\"InvalidTokenIds()\":[{\"notice\":\"Invalid token IDs.\"}],\"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)\":[{\"notice\":\"Thrown when the merkle proof is invalid or has already been used.\"}],\"SaleInactive(uint256)\":[{\"notice\":\"Sale is not active.\"}],\"WithdrawFailed()\":[{\"notice\":\"Withdraw failed error.\"}]},\"kind\":\"user\",\"methods\":{\"checkMerkleProof(bytes32,bytes32[],address,bytes32)\":{\"notice\":\"Checks if the given merkle proof is valid.\"},\"globalSaleDetails()\":{\"notice\":\"Get global sales details.Global sales details apply to all tokens.Global sales details are overriden when token sale is active.\"},\"initialize(address,address)\":{\"notice\":\"Initialize the contract.\"},\"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])\":{\"notice\":\"Mint tokens.Sale must be active for all tokens.\"},\"paymentToken()\":{\"notice\":\"Get payment token.address(0) indicates payment in ETH.\"},\"setGlobalSaleDetails(uint256,uint256,uint64,uint64,bytes32)\":{\"notice\":\"Set the global sale details.The payment token is set globally.\"},\"setPaymentToken(address)\":{\"notice\":\"Set the payment token.\"},\"setTokenSaleDetails(uint256,uint256,uint256,uint64,uint64,bytes32)\":{\"notice\":\"Set the sale details for an individual token.The payment token is set globally.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check interface support.\"},\"tokenSaleDetails(uint256)\":{\"notice\":\"Get token sale details.Token sale details override global sale details.\"},\"withdrawERC20(address,address,uint256)\":{\"notice\":\"Withdraws ERC20 tokens owned by this contract.Only callable by an address with the withdraw role.\"},\"withdrawETH(address,uint256)\":{\"notice\":\"Withdraws ETH owned by this sale contract.Only callable by an address with the withdraw role.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/utility/sale/ERC1155Sale.sol\":\"ERC1155Sale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x73a4ea88c195262c79aed1a8ad6da1e599e0ebe3911a89014e410dae6debda74\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d9f63f1c107c912620de676785b876f798f1563fee4fee897d45012daf52131\",\"dweb:/ipfs/QmQTvyVSZCUYjjo95yGgQgQvKzTBhb9fRbuzKvpmP5v5aQ\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x57f55a58438703c015af414f008886d084701600e11854507b58dbfe03f68d1c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a7c1b88eb303ae45ef2d7c5cf2e8ff1870c171e5da335e10b3def73643ba407\",\"dweb:/ipfs/Qmf1hy4w1aUiWeQdrhRmnYvVtoX8LxnsofaZrFVscyTG5m\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]},\"lib/0xsequence/erc-1155/src/contracts/tokens/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd63401796d39b616a10e5fd6e4666334299662daa330361081148eb324c82151\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://be1aa71575f7bf6f3c86285718c92ba83ce389ed77ae3782f1a79a49744e1729\",\"dweb:/ipfs/QmR7aU2QMfiFy7n6twDFQ5HBU768Dgd3ip4dJWnQEWsn73\"]},\"lib/0xsequence/erc-1155/src/contracts/utils/Address.sol\":{\"keccak256\":\"0x7dc1dd8c068d2da9a5fc7c897fcf4a48bd6c91834893c4ccdfe77c87ab86db2a\",\"urls\":[\"bzz-raw://b9267a6818b5400198ce2a3e5ca5e499617114131bd4c4b4690d0db523d6d28f\",\"dweb:/ipfs/QmbVFNcUMqR9gRPtFG9s8Y6PHLyLy8XhD8BfosmQo6aFuc\"]},\"lib/0xsequence/erc-1155/src/contracts/utils/ERC165.sol\":{\"keccak256\":\"0xf6539008743bf7ed5d8db655ed4075f433e01be8836a22b94182ec25097044c6\",\"urls\":[\"bzz-raw://3a90fa04f645b202907cf5ae62aaafaaf4a0d4d8059d5723aea8d6e306cdaf97\",\"dweb:/ipfs/QmR1EJr8FEUhpMCMgYtDeZoPokFC8trTDwMz886PwH3D9W\"]},\"lib/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0f0d782ed5bf917dec0c8d571f87c753dc6417eb9f82b69e12532623359b6dc8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d927133d9b4aad2dd21541a6a6ddab98c4f8500b47705dfac95aecc42c0cac9f\",\"dweb:/ipfs/QmdT2VUZP41p4vjrSqyuwUttrZtm3koWdwkuakfebwvcdk\"]},\"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x983a2c33837361f7fdbe66b7f314366a49fef2cd746ab4f2687c5dcd55139459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839896b430e9067837e6536f5bb175510e9af187b860deb1936f5f33cd2cf9fa\",\"dweb:/ipfs/QmUB1cEFBAUkXEkqGZSVxQEuTU4bNvtj4XoLkotYqcsy4c\"]},\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x0b56404e790f707db5050025dc791c21b785797824efaaf28e6613444408ac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2e606d98a2460b229dffb2eefb5417e8c3c5722cd509fb0700485d92d02b8c4\",\"dweb:/ipfs/QmXhJJ2FzxHZNtGXoif5QwBv1SCEgh866AxuUzUFCuHmSF\"]},\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x806cc5a67c785703de4860098eb715dbc80af228b8c2dfaf4d17ee7ef7c4d0d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c200c036fa58f1f9a53ac543a4d357f372c3186b2accedafb0962ed973cf22d5\",\"dweb:/ipfs/QmeuoGikK8eGhSgNFTzKtpxmkTaKXS94NTktKTAs42ZxPT\"]},\"lib/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"lib/openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x965112323305082223ae22da6b1b15d98560f749d75ff43639ca2d427e136d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://223e25441501ad9372e21aa897460cb07b05e25c534865068767ca9dd7d7bfdf\",\"dweb:/ipfs/QmWKFG8zyL2gvohAoJY6y3ncAMGrwCxoqR5iQ2Sq7xdW2H\"]},\"lib/openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xdacd8902db78d5c80a8860b2dd87e1a725201d2b1936343e3e21649751a60dba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d1eede17bc7ee5245a3b55e873cd59b3d6cbb8fed76cb957a403403f84daa5e\",\"dweb:/ipfs/QmbHGiRxPVRCvu91UpPBKU5b4MrEvqKxHPiPrPpQxyg1LK\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x33f6273d816d8dda817520535e972be165eb8615679a199f2487c982361556dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe73e94e894c07a4497e0e18ca12caf4519f556a4222263a0927b948e20ab961\",\"dweb:/ipfs/QmSeCmKR3cskrRMs6u9PTXLc5webpzLkuccGoBCcQFyfLX\"]},\"lib/openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6a28e93bdbdd829c48a6f03438fff50e10527649d69d5561386cd39e6d70f2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://989f0d81b7bc6989de0a8a2ddb063deaf8b95a85c6169658a9c8769a4d725a8a\",\"dweb:/ipfs/QmcWc1KLSL3tHPzXLacBQXC4bqDRDWiNb5BNAA9ft8jBEC\"]},\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd03a3a49fb1275da311e070f48c8ce3727e64e7a48a94b05687de68bbcf2f2d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://595bc042ece34bb3c2176c1b594e7e66b20e138200a9eb1c57c6666c6d3aa6a3\",\"dweb:/ipfs/QmUWFovxqWUjNWgbCNvY2Ug1jvrwrtCRNJ5q21puGKLzix\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7b249694790ca2ae6a813e28025e0ebb9bccb5940a6cba637911fd9c17012055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2431f8875ede10b23dee66740a19fb1b2aa7cf57ea8430e7bce97be414c58748\",\"dweb:/ipfs/QmbCvNgrYi2kk7wBKJkwyRRrbwabhoxaNJjyK5frPkNvng\"]},\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xdfbaff50ab3641233a7e63eed90c369bc54da2be0a5c8aa580f47bbb975b7419\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cd4d33f4432d2fa3853e86cdac547dd095500a9e4296ba0da357ffb5d7f4945\",\"dweb:/ipfs/QmYuAHhTFRDahKcpcPwA7j6moUwzSCkGmD18zNAUmihvk8\"]},\"src/tokens/ERC1155/extensions/supply/ERC1155Supply.sol\":{\"keccak256\":\"0x2cb9d8c072fb859e28509c60af94f9840da83c4b614d77b28f75f842f10d2fe4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://618bab091bb3430018eb02464726590e9024fba6fa56e3b6c47e6576e41afb06\",\"dweb:/ipfs/QmQcdpB6FnjLfC8TLdZ3SY12U8xXiVcspdJAn6U4DPvAZm\"]},\"src/tokens/ERC1155/extensions/supply/IERC1155Supply.sol\":{\"keccak256\":\"0x81c6bf21a67e48051903a81a0c47e8fe6bc460d3ab2ddf162e6c97d291920e1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e40d3079c7057695fc66672af76664c30d50c430f38fa14f0586adfa68307b5\",\"dweb:/ipfs/QmR3mkENLcdShgvtE4ttCwTdYe463rSy8kw5SuN2ziBPyC\"]},\"src/tokens/ERC1155/presets/items/IERC1155Items.sol\":{\"keccak256\":\"0xf8cd490ce1704d9013cc60f5579f49d5a4ecf2922c26954d17d4c32cbcb0058b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7f6fd6deee96e8ffbf2a7cbb7eae4d2f83c72f9d99125eca399875463007221\",\"dweb:/ipfs/QmPtdhaAUmBC6vBxfrtjAXdjHUhLMZcFabsQ3JCh7xJVcq\"]},\"src/tokens/ERC1155/utility/sale/ERC1155Sale.sol\":{\"keccak256\":\"0xfd72b53e9efc68f1f1ff0ca8b7fecc7f5665d6ee456e3d94cc8db8a6f0d20eb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://557c8cf1b248ba1761b8a29513e85a197cacd232e290236a180d06b7e9c3685b\",\"dweb:/ipfs/QmQ7tVBPpVHzKAaUVSShVNyuxVxkw7Fr8C1Ctj37Nap2Vu\"]},\"src/tokens/ERC1155/utility/sale/IERC1155Sale.sol\":{\"keccak256\":\"0xca67dc8dd657afeff4744e23c4714e72fec499b389a56c067dd33c25d58164c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f3fc2253856879407476229dda679462233b8a489d7fa47be37be9c5c6bf354\",\"dweb:/ipfs/QmS5X9bHqDxJHMtPnsJ3Vgpx6HUhoKEA5nz3U8nYxiTP6F\"]},\"src/tokens/common/IMerkleProofSingleUse.sol\":{\"keccak256\":\"0xca8dc555fe07c26f5fa54c18e6461c19b04ae947685782fe6bee443bdfb1177c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://21296ee7f267f754ed9e047267b183d53a31fb4aec6f1b69b6027b006759564a\",\"dweb:/ipfs/QmeVkPqRvCdHApSdrmU3yrX63YK5p363wU3qYUX3NbsJXL\"]},\"src/tokens/common/IWithdrawControlled.sol\":{\"keccak256\":\"0x8d55f80de0cdbf947013e3f35832ab772c225513192a812dc5d1eae9b4548a93\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://82985f653c64c2fc6f67206d6d415d9e1bd90d47ddf19fc9b5ecebaa6af86477\",\"dweb:/ipfs/QmdLgTsRF2T5AxoaWJUS1uEB4ByBbvLSZCrKot6r9x4ieV\"]},\"src/tokens/common/MerkleProofSingleUse.sol\":{\"keccak256\":\"0xa8920ea6f225f18c8c67412e37259b854311557845a8575f43a9ce07a7aa050c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9938f6791d4a696b8e4a127cafb2a2d631b3f156beeb399f87e6c3434bdf0e3\",\"dweb:/ipfs/QmWcAfZnob7HhmBcrS4LRzYiPqDZ48tcF8SKBhaU2BfWtJ\"]},\"src/tokens/common/WithdrawControlled.sol\":{\"keccak256\":\"0xddeb9a14185f4d0746a97b398b8219cc077e744fb85f821e2d1a32d52593b79b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://470a8fdb860bd26fa1b323cf56a7e97c3ffb5b07a24a368ef39302b018dbe4ee\",\"dweb:/ipfs/QmSbPUNMejWrgw3dkPd3gZpcebykQG5AmTaPjuHCgU4Dp6\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"GlobalSaleInactive()": [
								{
									"notice": "Sale is not active globally."
								}
							],
							"InsufficientPayment(address,uint256,uint256)": [
								{
									"notice": "Insufficient tokens for payment."
								}
							],
							"InsufficientSupply(uint256,uint256,uint256)": [
								{
									"notice": "Insufficient supply of tokens."
								}
							],
							"InvalidInitialization()": [
								{
									"notice": "Contract already initialized."
								}
							],
							"InvalidSaleDetails()": [
								{
									"notice": "Sale details supplied are invalid."
								}
							],
							"InvalidTokenIds()": [
								{
									"notice": "Invalid token IDs."
								}
							],
							"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)": [
								{
									"notice": "Thrown when the merkle proof is invalid or has already been used."
								}
							],
							"SaleInactive(uint256)": [
								{
									"notice": "Sale is not active."
								}
							],
							"WithdrawFailed()": [
								{
									"notice": "Withdraw failed error."
								}
							]
						},
						"kind": "user",
						"methods": {
							"checkMerkleProof(bytes32,bytes32[],address,bytes32)": {
								"notice": "Checks if the given merkle proof is valid."
							},
							"globalSaleDetails()": {
								"notice": "Get global sales details.Global sales details apply to all tokens.Global sales details are overriden when token sale is active."
							},
							"initialize(address,address)": {
								"notice": "Initialize the contract."
							},
							"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])": {
								"notice": "Mint tokens.Sale must be active for all tokens."
							},
							"paymentToken()": {
								"notice": "Get payment token.address(0) indicates payment in ETH."
							},
							"setGlobalSaleDetails(uint256,uint256,uint64,uint64,bytes32)": {
								"notice": "Set the global sale details.The payment token is set globally."
							},
							"setPaymentToken(address)": {
								"notice": "Set the payment token."
							},
							"setTokenSaleDetails(uint256,uint256,uint256,uint64,uint64,bytes32)": {
								"notice": "Set the sale details for an individual token.The payment token is set globally."
							},
							"supportsInterface(bytes4)": {
								"notice": "Check interface support."
							},
							"tokenSaleDetails(uint256)": {
								"notice": "Get token sale details.Token sale details override global sale details."
							},
							"withdrawERC20(address,address,uint256)": {
								"notice": "Withdraws ERC20 tokens owned by this contract.Only callable by an address with the withdraw role."
							},
							"withdrawETH(address,uint256)": {
								"notice": "Withdraws ETH owned by this sale contract.Only callable by an address with the withdraw role."
							}
						},
						"version": 1
					}
				}
			},
			"src/tokens/ERC1155/utility/sale/ERC1155SaleFactory.sol": {
				"ERC1155SaleFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "ERC1155SaleDeployed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beacon",
							"outputs": [
								{
									"internalType": "contract UpgradeableBeacon",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "items",
									"type": "address"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "items",
									"type": "address"
								}
							],
							"name": "determineAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "upgradeBeacon",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ERC1155SaleDeployed(address)": {
								"params": {
									"proxyAddr": "The address of the deployed proxy."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"factoryOwner": "The owner of the ERC-1155 Sale Factory"
								}
							},
							"deploy(address,address,address)": {
								"params": {
									"items": "The ERC-1155 Items contract address",
									"proxyOwner": "The owner of the ERC-1155 Sale proxy",
									"tokenOwner": "The owner of the ERC-1155 Sale implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-1155 Sale Proxy"
								}
							},
							"determineAddress(address,address,address)": {
								"params": {
									"items": "The ERC-1155 Items contract address",
									"proxyOwner": "The owner of the ERC-1155 Sale proxy",
									"tokenOwner": "The owner of the ERC-1155 Sale implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-1155 Sale Proxy"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeBeacon(address)": {
								"params": {
									"implementation": "The new beacon implementation."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"fun_transferOwnership": {
									"entryPoint": 294,
									"id": 1374,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608034610121576001600160401b0390601f61500538819003918201601f191683019291908484118385101761010b57816020928492604096875283398101031261012157516001600160a01b0380821682036101215761005f33610126565b825193612c3394858101958187108388111761010b576123d2823980600096039086f0908115610101578451916105ee808401928311848410176100ed5791848492602094611de4853916815203019085f080156100e0576100d39394501660018060a01b03196001541617600155610126565b51611c76908161016e8239f35b50505051903d90823e3d90fd5b634e487b7160e01b88526041600452602488fd5b84513d87823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6040608081526004908136101561001557600080fd5b600091823560e01c80631bce45831461079057806359659e901461073d578063715018a6146106a05780638da5cb5b1461064b578063d9181cd3146102ee578063e657f693146101aa5763f2fde38b1461006e57600080fd5b346101a65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a6576100a561084f565b906100ae6108bd565b73ffffffffffffffffffffffffffffffffffffffff809216928315610123575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b8284346102eb5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102eb57506101e461084f565b906101ed610877565b916055600b6101fa61089a565b845173ffffffffffffffffffffffffffffffffffffffff968716602080830191825292909716604080830191909152815290957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09161025a60608261099b565b519020906102ab86519161026d8361097f565b6000835273ffffffffffffffffffffffffffffffffffffffff9661029f8860015416948a519586938d850198896109ff565b0390810183528261099b565b5190206111eb85516102bf8883018261099b565b81815287810191610a5683395190209085519186830152868201523081520160ff815320915191168152f35b80fd5b5090346101a65760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a65761032761084f565b92610330610877565b61033861089a565b908351946020968787018761037586868490602090939293604083019473ffffffffffffffffffffffffffffffffffffffff809216845216910152565b03976103a77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0998a810183528261099b565b5190208651916103b68361097f565b6000835273ffffffffffffffffffffffffffffffffffffffff91816103f98c6103ed878d88600154169051958694850197886109ff565b038c810183528261099b565b5190206111eb895161040d8d83018261099b565b8181528c810191610a5683398051156105f057518492918af516988915610594578260015416938a3b156105905791608491601f8a95946104988f8e51998a9889977fcf7a1d77000000000000000000000000000000000000000000000000000000008952168c880152602487015260606044870152825192839182606489015288880191016109dc565b01168101030181838b5af1801561058657908591610572575b5050853b1561056e5784517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316918101918252929091166020820152829082908190604001038183885af1801561056457610550575b50507f346f0211197dd599e2e2a8c828f6e7dc39e8a49171ce0a728428e8b778c61eea838251848152a151908152f35b61055a829161093c565b6102eb5780610520565b83513d84823e3d90fd5b8380fd5b61057b9061093c565b61056e5783386104b1565b86513d87823e3d90fd5b8880fd5b6064858c8b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152fd5b6064878e808e51927f08c379a000000000000000000000000000000000000000000000000000000000845283015260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fd5b50503461069c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069c5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b83346102eb57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102eb576106d76108bd565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461069c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069c5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5090346101a65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a657826107ca61084f565b6107d26108bd565b73ffffffffffffffffffffffffffffffffffffffff90816001541690813b1561056e5783602492865197889586947f3659cfe600000000000000000000000000000000000000000000000000000000865216908401525af1908115610846575061083a575080f35b6108439061093c565b80f35b513d84823e3d90fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361087257565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361087257565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361087257565b73ffffffffffffffffffffffffffffffffffffffff6000541633036108de57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff811161095057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761095057604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761095057604052565b60005b8381106109ef5750506000910152565b81810151838201526020016109df565b9190926048949383527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809260601b16602084015260601b166034820152610a5082518093602086850191016109dc565b01019056fe60808060405234610016576111cf908161001c8239f35b600080fdfe604060808152366103825773ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000917fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000843516146100c057600484517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b6100c8611192565b60049136831161037e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037e578235916101088361067f565b602435926101158461067f565b60443567ffffffffffffffff811161037a57610135839136908801610789565b941692156103525761014791166107e3565b803b156102cf578451907f5c60da1b000000000000000000000000000000000000000000000000000000009384835260209687848381865afa9384156102a657889461019d9189916102b2575b503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790555194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab575b610242575b8361023c6107d0565b80519101f35b8592839182525afa9182156102a65761026a9392610277575b506102646109b1565b91610a21565b5038808083818080610233565b610298919250843d861161029f575b610290818361070e565b810190610902565b903861025b565b503d610286565b61091a565b508661022e565b6102c99150863d881161029f57610290818361070e565b38610194565b60848360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b8487517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b8380fd5b73ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000907fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000833516146104395760046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b610441611192565b60049236841161067b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067b5783356104808161067f565b6024359161048d8361067f565b60443567ffffffffffffffff8111610677576104ad829136908901610789565b9316931561064e576104bf91166107e3565b813b156105ca576040517f5c60da1b000000000000000000000000000000000000000000000000000000009283825260209586838281855afa9283156102a65787936105149188916105b357503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617905560405194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab57610242578361023c6107d0565b6102c99150853d871161029f57610290818361070e565b6084846020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b856040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b8280fd5b73ffffffffffffffffffffffffffffffffffffffff81160361069d57565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106ed57604052565b6106a2565b6040810190811067ffffffffffffffff8211176106ed57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106ed57604052565b67ffffffffffffffff81116106ed57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561069d578035906107a08261074f565b926107ae604051948561070e565b8284526020838301011161069d57816000926020809301838601378301015290565b604051906107dd826106d1565b60008252565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61039081547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604080519373ffffffffffffffffffffffffffffffffffffffff9081851686521693846020820152a1811561087e577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b9081602091031261069d57516109178161067f565b90565b6040513d6000823e3d90fd5b1561092d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201527f73206e6f74206120636f6e7472616374000000000000000000000000000000006064820152fd5b604051906060820182811067ffffffffffffffff8211176106ed57604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806109179493602081519101845af43d15610a60573d91610a438361074f565b92610a51604051948561070e565b83523d6000602085013e610acd565b606091610acd565b15610a6f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b91929015610aed5750815115610ae1575090565b610917903b1515610a68565b825190915015610b005750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610b7d575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610b3c565b610bee610bd57fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b3303610d14576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe6000000000000000000000000000000000000000000000000000000008103610c515750610c49610f0f565b602081519101f35b7f4f1ef286000000000000000000000000000000000000000000000000000000008103610c865750610c81611083565b610c49565b7f8f283970000000000000000000000000000000000000000000000000000000008103610cb65750610c81610ec5565b7ff851a440000000000000000000000000000000000000000000000000000000008103610ce65750610c81610dfd565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610d1457610c81610e53565b610d1c610d3b565b6000808092368280378136915af43d82803e15610d37573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541680610df8575060206004917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156102a657600091610de0575090565b610917915060203d811161029f57610290818361070e565b905090565b610e05611192565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103541660405190602082015260208152610917816106f2565b610e5b611192565b610e63610d3b565b73ffffffffffffffffffffffffffffffffffffffff6040519116602082015260208152610917816106f2565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261069d576004356109178161067f565b610ecd611192565b3660041161069d57610efc73ffffffffffffffffffffffffffffffffffffffff610ef636610e8f565b166107e3565b604051610f08816106d1565b6000815290565b610f17611192565b3660041161069d5773ffffffffffffffffffffffffffffffffffffffff610f3d36610e8f565b1660405190610f4b826106d1565b60008252803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610ff7575b610fe3575b5050604051610f08816106d1565b610fef916102646109b1565b503880610fd5565b506000610fd0565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b3660041161069d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069d576004356110c18161067f565b60243567ffffffffffffffff811161069d576110f673ffffffffffffffffffffffffffffffffffffffff913690600401610789565b9116803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061118a57610fe3575050604051610f08816106d1565b506001610fd0565b3461069d5756fea264697066735822122043b19ddbf8b158c7b89e1cb0ede6eab8cd9c86ef2e863af97cab3041b065284164736f6c63430008130033a26469706673582212204ee4546b07f207803db4e631f4d5071abef8be94814153a0bf4c46091210bdfd64736f6c6343000813003360803461011a57601f6105ee38819003918201601f19168301916001600160401b0383118484101761011f5780849260209460405283398101031261011a57516001600160a01b03808216919082820361011a576000549160018060a01b0319923384821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a33b156100b2575060015416176001556040516104b890816101368239f35b62461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146102ce5780635c60da1b1461027c578063715018a6146101e05780638da5cb5b1461018f5763f2fde38b1461005457600080fd5b3461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff808216809203610188576100ad610403565b8115610104578254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b80fd5b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57610217610403565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b503461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff81169081810361018857610328610403565b3b1561037f57807fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361042457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220c5471b22132cd15b928c4c1e3eecf6a636721aed3c412c5d6ea7e25407ed048464736f6c634300081300336080806040523461001657612c17908161001c8239f35b600080fdfe61010080604052600436101561001457600080fd5b600080608052803560e01c91826301ffc9a714611927575081630869678c146118f0578163119cd50c1461187e578163248a9ca31461184f5781632f2ff15d1461174d5781633013ce291461171757816336568abe1461165157816344004cc1146115b05781634782f77914611544578163485cc9551461121b5781634f651ccd146110d957816360e606f6146104675781636a326ab1146104015781639010d07c146103ac57816391d1485414610355578163975596001461020f578163a217fddf146101f1578163bad436611461017c57508063ca15c8731461014e5763d547741f1461010257600080fd5b3461014857604060031936011261014857610142600435610121611a33565b90806080515261013d6001604060805180602052200154612083565b612224565b60805180f35b60805180fd5b3461014857602060031936011261014857600435608051526001602052602060406080512054604051908152f35b346101485760806003193601126101485760243567ffffffffffffffff8111610148576101ad903690600401611c09565b6044929192359173ffffffffffffffffffffffffffffffffffffffff831683036101ee5760206101e4606435858588600435612a9f565b6040519015158152f35b80fd5b3461014857608051806003193601126101ee57602090604051908152f35b346101485760a06003193601126101485760043590602435916044359167ffffffffffffffff908184168094036101ee5750610249611a7e565b9260843591610256611f0d565b841690808210801561034b575b610321577f8fd3ac39fbb3d5e9c906dd9ec439dc6e584b8fa3ce02d5b67d589b22b22152a99560a09584608060405161029b81611a95565b88815284602082015285604082015286606082015201528560055581600655827fffffffffffffffffffffffffffffffff000000000000000000000000000000006fffffffffffffffff00000000000000006007549360401b1692161717600755836008556040519485526020850152604084015260608301526080820152a160805180f35b60046040517f85d4a748000000000000000000000000000000000000000000000000000000008152fd5b5042821115610263565b346101485760406003193601126101485760ff6040602092610375611a33565b6004356080515273ffffffffffffffffffffffffffffffffffffffff83608051808852209116825284522054166040519015158152f35b3461014857604060031936011261014857600435608051526001602052602073ffffffffffffffffffffffffffffffffffffffff6103f16024356040608051206124db565b9190546040519260031b1c168152f35b346101485760206003193601126101485773ffffffffffffffffffffffffffffffffffffffff61042f611a5b565b610437611f0d565b167fffffffffffffffffffffffff0000000000000000000000000000000000000000600454161760045560805180f35b60e06003193601126101485761047b611a5b565b60243567ffffffffffffffff81116101485761049b903690600401611b71565b60443567ffffffffffffffff8111610148576104bb903690600401611b71565b916064359167ffffffffffffffff831161014857366023840112156101485782600401356104e881611bcf565b936104f66040519586611b18565b818552366024838301011161014857602482910160208601376020608051918501015273ffffffffffffffffffffffffffffffffffffffff60843516608435036101485767ffffffffffffffff60c435116101485761055d9391933660c435600401611c09565b9060c052926080519283928496610572612782565b60a0526105a067ffffffffffffffff604060a05101511667ffffffffffffffff606060a05101511690612a4c565b60805160e08190529094905b835160e05110156107e3576105c360e0518561273a565b51968760e051151591826107d8575b50506107ae57866105e560e0518761273a565b5191816080515260096020526105ff6040608051206127c5565b61062667ffffffffffffffff60408301511667ffffffffffffffff60608401511690612a4c565b1561069e5750508661066d57506106569061065060019961064a8360a051516122d7565b90612319565b9a612319565b9661066260e05161270d565b60e0529896986105ac565b602490604051907f035acf500000000000000000000000000000000000000000000000000000000082526004820152fd5b9099916080820151908c826106c4575b505050829161064a6106569461065093516122d7565b816106d491339060c05186612a9f565b1561072b575060808051339052600260209081528151604080822094909152929052512080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558161064a8c6106ae565b8c604051927f265c66a80000000000000000000000000000000000000000000000000000000084526004840152608060248401528060848401527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811161014857829060051b60a4928160c0518585013733604484015260648301528101030190fd5b60046040517f340bc4c9000000000000000000000000000000000000000000000000000000008152fd5b10159050878c6105d2565b84888a8693610e80575b5073ffffffffffffffffffffffffffffffffffffffff600454168073ffffffffffffffffffffffffffffffffffffffff6084351603610e42575060a435818110610dec575060843573ffffffffffffffffffffffffffffffffffffffff16610d3757803403610ce057505b73ffffffffffffffffffffffffffffffffffffffff60035460081c1660805190835182905b808210610b0d5750506006549081151580610a7f575b6109b75750505073ffffffffffffffffffffffffffffffffffffffff60035460081c1690813b15610148576109229461094961093473ffffffffffffffffffffffffffffffffffffffff93604051988997889687967fb48ab8b600000000000000000000000000000000000000000000000000000000885216600487015260806024870152608486019061274e565b9060031985830301604486015261274e565b600319838203016064840152608051966121e1565b0391608051905af180156109aa576109615760805180f35b67ffffffffffffffff81116109795760405280610142565b7f4e487b71000000000000000000000000000000000000000000000000000000006080515260416004526024608051fd5b6040513d608051823e3d90fd5b906020600492604051938480927f18160ddd000000000000000000000000000000000000000000000000000000008252608051905af19182156109aa5760805192610a49575b50610a45906040519384937fa9227830000000000000000000000000000000000000000000000000000000008552600485016040919493926060820195825260208201520152565b0390fd5b9091506020813d602011610a77575b81610a6560209383611b18565b81010312610148575190610a456109fd565b3d9150610a58565b506040517f18160ddd000000000000000000000000000000000000000000000000000000008152602081600481608051865af180156109aa5784849160805190610ad5575b610acf929350612319565b11610893565b5050506020813d602011610b05575b81610af160209383611b18565b810103126101485751829081908590610ac4565b3d9150610ae4565b9092610b19848761273a565b516080515260096020526001604060805120015480151580610c3f575b610b5f5750610b53610b5991610b4c868861273a565b5190612319565b9361270d565b9061087d565b8385876020610b6e838c61273a565b516024604051809681937f2693ebf20000000000000000000000000000000000000000000000000000000083526004830152608051905af19283156109aa5760805193610c09575b50610a4591610bc49161273a565b51926040519384937fa9227830000000000000000000000000000000000000000000000000000000008552600485016040919493926060820195825260208201520152565b9092506020813d602011610c37575b81610c2560209383611b18565b81010312610148575191610a45610bb6565b3d9150610c18565b50610c4a858861273a565b51604051907f2693ebf20000000000000000000000000000000000000000000000000000000082526004820152602081602481608051895af180156109aa57829160805191610ca9575b50610ca390610b4c888a61273a565b11610b36565b9150506020813d602011610cd8575b81610cc560209383611b18565b8101031261014857518190610ca3610c94565b3d9150610cb8565b6040517f1eabcfbe00000000000000000000000000000000000000000000000000000000815260843573ffffffffffffffffffffffffffffffffffffffff1660048201526024810191909152346044820152606490fd5b3415610d7d5760646040517f1eabcfbe00000000000000000000000000000000000000000000000000000000815260805160048201526080516024820152346044820152fd5b610de790604051907f23b872dd000000000000000000000000000000000000000000000000000000006020830152336024830152306044830152606482015260648152610dc981611a95565b73ffffffffffffffffffffffffffffffffffffffff6084351661280d565b610858565b6040517f1eabcfbe00000000000000000000000000000000000000000000000000000000815260843573ffffffffffffffffffffffffffffffffffffffff16600482015260248101929092526044820152606490fd5b606491604051917f1eabcfbe000000000000000000000000000000000000000000000000000000008352600483015260248201526080516044820152fd5b608060a05101519081610e94575b506107ed565b336080515260026020526080518260408220915260205260ff60406080512054161580610fb1575b15610f0f5750336080515260026020526080519060408220915260205260406080512060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790558580610e8e565b604051917f265c66a80000000000000000000000000000000000000000000000000000000083526004830152608060248301528060848301527f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8111610148578160a49160051b8060c051848401373360448301527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60648301528101030190fd5b509491959260409491945160208101907fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003360601b1682527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60348201526034815261101c81611ae0565b5190209661102987611b59565b97611037604051998a611b18565b87895260208901368960051b60c05101116101485760c051905b8960051b60c0510182106110c957505095608051965b89518810156110b75761107a888b61273a565b51608051818310156110a55750906080515260205261109f6040608051205b9761270d565b96611067565b5260205261109f604060805120611099565b90939650839194979295985014610ebc565b8135815260209182019101611051565b346101485760c0600319360112610148576024356044356004356110fb611a7e565b60843567ffffffffffffffff93848216809203610148578460a4359361111f611f0d565b16908183108015611211575b610321577f8ced76aee4b96a1e218e7903610fc7d648023d9075677163a5b31396cb280f969660c09660036040519161116383611a95565b83835260208301908582526040840190878252606085019089825260808601938b85528c60805152600960205260406080512096518755516001870155600286019251167fffffffffffffffffffffffffffffffff000000000000000000000000000000006fffffffffffffffff00000000000000008454935160401b1692161717905551910155604051958652602086015260408501526060840152608083015260a0820152a160805180f35b504283111561112b565b3461014857604060031936011261014857611234611a5b565b61123c611a33565b6003549060ff821661151a5774ffffffffffffffffffffffffffffffffffffffff007fffffffffffffffffffffff0000000000000000000000000000000000000000ff9160081b1691161760035560805180526113a260805160209281845273ffffffffffffffffffffffffffffffffffffffff604083209116809252835260805160ff604082205416156114ac575b506080518052600183818095526112e8836040608051206124f3565b507f4c02318d8c3aadc98ccf18aebbf3126f651e0c3f6a1de5ff8edcf6724a2ad5c280608051526080518083528460408220915282528060805160ff6040822054161561143f575b505060805152818152611348836040608051206124f3565b507f5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec80608051526080518083528460408220915282528060805160ff604082205416156113d2575b505060805152526040608051206124f3565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00600354161760035560805180f35b5260805180835284604082209152825260805160408120847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905584827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a48087611390565b5260805180835284604082209152825260805160408120847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905584827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a48087611330565b80526080518084528160408220915283526080516040812060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008254161790558133917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4836112cc565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b346101485760406003193601126101485761155d611a5b565b611565611c3a565b60805180808093602435905af161157a612950565b50156115865760805180f35b60046040517f750b219c000000000000000000000000000000000000000000000000000000008152fd5b34610148576060600319360112610148576115c9611a5b565b6115d1611a33565b6115d9611c3a565b604051907fa9059cbb00000000000000000000000000000000000000000000000000000000602083015273ffffffffffffffffffffffffffffffffffffffff8091166024830152604435604483015260448252608082019282841067ffffffffffffffff85111761097957610142936040521661280d565b346101485760406003193601126101485761166a611a33565b3373ffffffffffffffffffffffffffffffffffffffff8216036116935761014290600435612224565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152fd5b3461014857608051806003193601126101ee57602073ffffffffffffffffffffffffffffffffffffffff60045416604051908152f35b34610148576040600319360112610148576117db600435600161176e611a33565b9180608051526080519061178c836040602094808652200154612083565b80608051526080519384835273ffffffffffffffffffffffffffffffffffffffff60408620911680955282528060805160ff604082205416156117e257505060805152526040608051206124f3565b5060805180f35b5260805180835284604082209152825260805160408120847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905584827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d339380a48086611390565b346101485760206003193601126101485760043560805152602060016040608051808452200154604051908152f35b3461014857608051806003193601126101ee57611899612a74565b506118ec6118a5612782565b6040519182918291909160808060a0830194805184526020810151602085015267ffffffffffffffff80604083015116604086015260608201511660608501520151910152565b0390f35b3461014857602060031936011261014857611909612a74565b506004356080515260096020526118ec6118a56040608051206127c5565b34611a2f576020600319360112611a2f576004357fffffffff000000000000000000000000000000000000000000000000000000008116809103611a2b5760209250807f49007a5f000000000000000000000000000000000000000000000000000000001490811561199b575b5015158152f35b7f5a05180f000000000000000000000000000000000000000000000000000000008114915081156119ce575b5083611994565b7f7965db0b00000000000000000000000000000000000000000000000000000000811491508115611a01575b50836119c7565b7f01ffc9a700000000000000000000000000000000000000000000000000000000915014836119fa565b8280fd5b5080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203611a5657565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff82168203611a5657565b6064359067ffffffffffffffff82168203611a5657565b60a0810190811067ffffffffffffffff821117611ab157604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff821117611ab157604052565b6080810190811067ffffffffffffffff821117611ab157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117611ab157604052565b67ffffffffffffffff8111611ab15760051b60200190565b81601f82011215611a5657803591611b8883611b59565b92611b966040519485611b18565b808452602092838086019260051b820101928311611a56578301905b828210611bc0575050505090565b81358152908301908301611bb2565b67ffffffffffffffff8111611ab157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b9181601f84011215611a565782359167ffffffffffffffff8311611a56576020808501948460051b010111611a5657565b3360009081527f20be27040b8e00df40bca0df34743417f3574a156386188f7d7f14369e5ee82b602090815260408083205490927f5d8e12c39142ff96d79d04d15d1ba1269e4fe57bb9d26f43523628b34ba108ec9160ff1615611c9e5750505050565b611ca733612366565b91845190611cb482611afc565b60428252848201926060368537825115611ee05760308453825190600191821015611ee05790607860218501536041915b818311611e1557505050611db9576048610a45938693611d8393611d7498519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a860152611d3f815180928c6037890191016121be565b8401917f206973206d697373696e6720726f6c65200000000000000000000000000000006037840152518093868401906121be565b01036028810187520185611b18565b519283927f08c379a0000000000000000000000000000000000000000000000000000000008452600484015260248301906121e1565b6064848651907f08c379a000000000000000000000000000000000000000000000000000000000825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015611eb3577f3031323334353637383961626364656600000000000000000000000000000000901a611e528587612326565b5360041c928015611e86577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019190611ce5565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526032600452fd5b3360009081527f6058ee1f1c102e8ac9ef0c4319964e42c1ab00dfba021f8302fd0802656934ac602090815260408083205490927f4c02318d8c3aadc98ccf18aebbf3126f651e0c3f6a1de5ff8edcf6724a2ad5c29160ff1615611f715750505050565b611f7a33612366565b91845190611f8782611afc565b60428252848201926060368537825115611ee05760308453825190600191821015611ee05790607860218501536041915b81831161201257505050611db9576048610a45938693611d8393611d7498519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a860152611d3f815180928c6037890191016121be565b909192600f81166010811015611eb3577f3031323334353637383961626364656600000000000000000000000000000000901a61204f8587612326565b5360041c928015611e86577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019190611fb8565b600090808252602090828252604092838120338252835260ff8482205416156120ac5750505050565b6120b533612366565b918451906120c282611afc565b60428252848201926060368537825115611ee05760308453825190600191821015611ee05790607860218501536041915b81831161214d57505050611db9576048610a45938693611d8393611d7498519889937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008a860152611d3f815180928c6037890191016121be565b909192600f81166010811015611eb3577f3031323334353637383961626364656600000000000000000000000000000000901a61218a8587612326565b5360041c928015611e86577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0191906120f3565b60005b8381106121d15750506000910152565b81810151838201526020016121c1565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60209361221d815180928187528780880191016121be565b0116010190565b90604061226f926000908082528160205273ffffffffffffffffffffffffffffffffffffffff83832094169384835260205260ff8383205416612272575b81526001602052206125b4565b50565b808252816020528282208483526020528282207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541690553384827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a4612262565b818102929181159184041417156122ea57565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b919082018092116122ea57565b908151811015612337570160200190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6040519061237382611ae0565b602a82526020820160403682378251156123375760309053815160019081101561233757607860218401536029905b8082116124105750506123b25790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f811660108110156124ad577f3031323334353637383961626364656600000000000000000000000000000000901a61244c8486612326565b5360041c91801561247f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01906123a2565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b80548210156123375760005260206000200190600090565b919060018301600090828252806020526040822054156000146125ae5784549468010000000000000000861015612581578361257161253c886001604098999a018555846124db565b81939154907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9060031b92831b921b19161790565b9055549382526020522055600190565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b50925050565b90600182019060009281845282602052604084205490811515600014612706577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff918281018181116126d9578254908482019182116126ac57808203612677575b5050508054801561264a5782019161262d83836124db565b909182549160031b1b191690555582526020526040812055600190565b6024867f4e487b710000000000000000000000000000000000000000000000000000000081526031600452fd5b61269761268761253c93866124db565b90549060031b1c928392866124db565b90558652846020526040862055388080612615565b6024887f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b6024877f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b5050505090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146122ea5760010190565b80518210156123375760209160051b010190565b90815180825260208080930193019160005b82811061276e575050505090565b835185529381019392810192600101612760565b6040519061278f82611a95565b816005548152600654602082015260075467ffffffffffffffff90818116604084015260401c1660608201526080600854910152565b906040516127d281611a95565b6080600382948054845260018101546020850152600281015467ffffffffffffffff90818116604087015260401c1660608501520154910152565b73ffffffffffffffffffffffffffffffffffffffff1690604051604081019080821067ffffffffffffffff831117611ab15761288d916040526020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af1612887612950565b91612980565b80519182159184831561292c575b5050509050156128a85750565b608490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b919381809450010312611a2f578201519081151582036101ee57508038808461289b565b3d1561297b573d9061296182611bcf565b9161296f6040519384611b18565b82523d6000602084013e565b606090565b919290156129fb5750815115612994575090565b3b1561299d5790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b825190915015612a0e5750805190602001fd5b610a45906040519182917f08c379a00000000000000000000000000000000000000000000000000000000083526020600484015260248301906121e1565b908015918215612a6a575b508115612a62575090565b905042101590565b4210915038612a57565b60405190612a8182611a95565b60006080838281528260208201528260408201528260608201520152565b91929060009073ffffffffffffffffffffffffffffffffffffffff8316825260209060028252604093848420868552835260ff8585205416159788612aea575b505050505050505090565b909192939597508496989451907fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008583019360601b168352603482015260348152612b3481611ae0565b51902090612b4188611b59565b97612b4e8751998a611b18565b8089528389019060051b820191368311612bdd578490915b838310612bcd57505050509183925b8751841015612bb857612b88848961273a565b519081811015612ba85785528252612ba28585209361270d565b92612b75565b9085528252612ba2858520610b53565b94509550505050143880808080808080612adf565b8235815291810191859101612b66565b8680fdfea2646970667358221220036789f230adce122f8986ce878d7f455cb45c2b5a3b66278304adee742ba3ee64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x121 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x1F PUSH2 0x5005 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 DUP5 GT DUP4 DUP6 LT OR PUSH2 0x10B JUMPI DUP2 PUSH1 0x20 SWAP3 DUP5 SWAP3 PUSH1 0x40 SWAP7 DUP8 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x121 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x121 JUMPI PUSH2 0x5F CALLER PUSH2 0x126 JUMP JUMPDEST DUP3 MLOAD SWAP4 PUSH2 0x2C33 SWAP5 DUP6 DUP2 ADD SWAP6 DUP2 DUP8 LT DUP4 DUP9 GT OR PUSH2 0x10B JUMPI PUSH2 0x23D2 DUP3 CODECOPY DUP1 PUSH1 0x0 SWAP7 SUB SWAP1 DUP7 CREATE SWAP1 DUP2 ISZERO PUSH2 0x101 JUMPI DUP5 MLOAD SWAP2 PUSH2 0x5EE DUP1 DUP5 ADD SWAP3 DUP4 GT DUP5 DUP5 LT OR PUSH2 0xED JUMPI SWAP2 DUP5 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH2 0x1DE4 DUP6 CODECOPY AND DUP2 MSTORE SUB ADD SWAP1 DUP6 CREATE DUP1 ISZERO PUSH2 0xE0 JUMPI PUSH2 0xD3 SWAP4 SWAP5 POP AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH2 0x126 JUMP JUMPDEST MLOAD PUSH2 0x1C76 SWAP1 DUP2 PUSH2 0x16E DUP3 CODECOPY RETURN JUMPDEST POP POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BCE4583 EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0x59659E90 EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0xD9181CD3 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xE657F693 EQ PUSH2 0x1AA JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A6 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A6 JUMPI PUSH2 0xA5 PUSH2 0x84F JUMP JUMPDEST SWAP1 PUSH2 0xAE PUSH2 0x8BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH2 0x123 JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x2EB JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2EB JUMPI POP PUSH2 0x1E4 PUSH2 0x84F JUMP JUMPDEST SWAP1 PUSH2 0x1ED PUSH2 0x877 JUMP JUMPDEST SWAP2 PUSH1 0x55 PUSH1 0xB PUSH2 0x1FA PUSH2 0x89A JUMP JUMPDEST DUP5 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE SWAP3 SWAP1 SWAP8 AND PUSH1 0x40 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE SWAP1 SWAP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 PUSH2 0x25A PUSH1 0x60 DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x2AB DUP7 MLOAD SWAP2 PUSH2 0x26D DUP4 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 PUSH2 0x29F DUP9 PUSH1 0x1 SLOAD AND SWAP5 DUP11 MLOAD SWAP6 DUP7 SWAP4 DUP14 DUP6 ADD SWAP9 DUP10 PUSH2 0x9FF JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x11EB DUP6 MLOAD PUSH2 0x2BF DUP9 DUP4 ADD DUP3 PUSH2 0x99B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP8 DUP2 ADD SWAP2 PUSH2 0xA56 DUP4 CODECOPY MLOAD SWAP1 KECCAK256 SWAP1 DUP6 MLOAD SWAP2 DUP7 DUP4 ADD MSTORE DUP7 DUP3 ADD MSTORE ADDRESS DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A6 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A6 JUMPI PUSH2 0x327 PUSH2 0x84F JUMP JUMPDEST SWAP3 PUSH2 0x330 PUSH2 0x877 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x89A JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP5 PUSH1 0x20 SWAP7 DUP8 DUP8 ADD DUP8 PUSH2 0x375 DUP7 DUP7 DUP5 SWAP1 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP4 PUSH1 0x40 DUP4 ADD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP8 PUSH2 0x3A7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP10 DUP11 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP7 MLOAD SWAP2 PUSH2 0x3B6 DUP4 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP2 PUSH2 0x3F9 DUP13 PUSH2 0x3ED DUP8 DUP14 DUP9 PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP6 DUP7 SWAP5 DUP6 ADD SWAP8 DUP9 PUSH2 0x9FF JUMP JUMPDEST SUB DUP13 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x11EB DUP10 MLOAD PUSH2 0x40D DUP14 DUP4 ADD DUP3 PUSH2 0x99B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP13 DUP2 ADD SWAP2 PUSH2 0xA56 DUP4 CODECOPY DUP1 MLOAD ISZERO PUSH2 0x5F0 JUMPI MLOAD DUP5 SWAP3 SWAP2 DUP11 CREATE2 AND SWAP9 DUP10 ISZERO PUSH2 0x594 JUMPI DUP3 PUSH1 0x1 SLOAD AND SWAP4 DUP11 EXTCODESIZE ISZERO PUSH2 0x590 JUMPI SWAP2 PUSH1 0x84 SWAP2 PUSH1 0x1F DUP11 SWAP6 SWAP5 PUSH2 0x498 DUP16 DUP15 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 DUP10 MSTORE AND DUP13 DUP9 ADD MSTORE PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP8 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP3 PUSH1 0x64 DUP10 ADD MSTORE DUP9 DUP9 ADD SWAP2 ADD PUSH2 0x9DC JUMP JUMPDEST ADD AND DUP2 ADD SUB ADD DUP2 DUP4 DUP12 GAS CALL DUP1 ISZERO PUSH2 0x586 JUMPI SWAP1 DUP6 SWAP2 PUSH2 0x572 JUMPI JUMPDEST POP POP DUP6 EXTCODESIZE ISZERO PUSH2 0x56E JUMPI DUP5 MLOAD PUSH32 0x485CC95500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP4 DUP9 GAS CALL DUP1 ISZERO PUSH2 0x564 JUMPI PUSH2 0x550 JUMPI JUMPDEST POP POP PUSH32 0x346F0211197DD599E2E2A8C828F6E7DC39E8A49171CE0A728428E8B778C61EEA DUP4 DUP3 MLOAD DUP5 DUP2 MSTORE LOG1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x55A DUP3 SWAP2 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x2EB JUMPI DUP1 PUSH2 0x520 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0x57B SWAP1 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x56E JUMPI DUP4 CODESIZE PUSH2 0x4B1 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH1 0x64 DUP6 DUP13 DUP12 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A204661696C6564206F6E206465706C6F7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP8 DUP15 DUP1 DUP15 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x69C JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x2EB JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2EB JUMPI PUSH2 0x6D7 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x69C JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69C JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A6 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A6 JUMPI DUP3 PUSH2 0x7CA PUSH2 0x84F JUMP JUMPDEST PUSH2 0x7D2 PUSH2 0x8BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH1 0x1 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x56E JUMPI DUP4 PUSH1 0x24 SWAP3 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP7 MSTORE AND SWAP1 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x846 JUMPI POP PUSH2 0x83A JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x843 SWAP1 PUSH2 0x93C JUMP JUMPDEST DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x872 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x872 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x872 JUMPI JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x8DE JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x950 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x950 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x950 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x9EF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x48 SWAP5 SWAP4 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP1 SWAP3 PUSH1 0x60 SHL AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH2 0xA50 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP7 DUP6 ADD SWAP2 ADD PUSH2 0x9DC JUMP JUMPDEST ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x11CF SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xB1 SWAP14 0xDB 0xF8 0xB1 PC 0xC7 0xB8 SWAP15 SHR 0xB0 0xED 0xE6 0xEA 0xB8 0xCD SWAP13 DUP7 0xEF 0x2E DUP7 GASPRICE 0xF9 PUSH29 0xAB3041B065284164736F6C63430008130033A26469706673582212204E 0xE4 SLOAD PUSH12 0x7F207803DB4E631F4D5071A 0xBE 0xF8 0xBE SWAP5 DUP2 COINBASE MSTORE8 LOG0 0xBF 0x4C CHAINID MULMOD SLT LT 0xBD REVERT PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER PUSH1 0x80 CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x1F PUSH2 0x5EE CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x11F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x11A JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP3 SUB PUSH2 0x11A JUMPI PUSH1 0x0 SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP3 CALLER DUP5 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 EXTCODESIZE ISZERO PUSH2 0xB2 JUMPI POP PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP1 DUP2 PUSH2 0x136 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x188 JUMPI PUSH2 0xAD PUSH2 0x403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x104 JUMPI DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH2 0x217 PUSH2 0x403 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x188 JUMPI PUSH2 0x328 PUSH2 0x403 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x37F JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x424 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 SELFBALANCE SHL 0x22 SGT 0x2C 0xD1 JUMPDEST SWAP3 DUP13 0x4C 0x1E RETURNDATACOPY 0xEC 0xF6 0xA6 CALLDATASIZE PUSH19 0x1AED3C412C5D6EA7E25407ED048464736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x2C17 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH2 0x100 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x80 MSTORE DUP1 CALLDATALOAD PUSH1 0xE0 SHR SWAP2 DUP3 PUSH4 0x1FFC9A7 EQ PUSH2 0x1927 JUMPI POP DUP2 PUSH4 0x869678C EQ PUSH2 0x18F0 JUMPI DUP2 PUSH4 0x119CD50C EQ PUSH2 0x187E JUMPI DUP2 PUSH4 0x248A9CA3 EQ PUSH2 0x184F JUMPI DUP2 PUSH4 0x2F2FF15D EQ PUSH2 0x174D JUMPI DUP2 PUSH4 0x3013CE29 EQ PUSH2 0x1717 JUMPI DUP2 PUSH4 0x36568ABE EQ PUSH2 0x1651 JUMPI DUP2 PUSH4 0x44004CC1 EQ PUSH2 0x15B0 JUMPI DUP2 PUSH4 0x4782F779 EQ PUSH2 0x1544 JUMPI DUP2 PUSH4 0x485CC955 EQ PUSH2 0x121B JUMPI DUP2 PUSH4 0x4F651CCD EQ PUSH2 0x10D9 JUMPI DUP2 PUSH4 0x60E606F6 EQ PUSH2 0x467 JUMPI DUP2 PUSH4 0x6A326AB1 EQ PUSH2 0x401 JUMPI DUP2 PUSH4 0x9010D07C EQ PUSH2 0x3AC JUMPI DUP2 PUSH4 0x91D14854 EQ PUSH2 0x355 JUMPI DUP2 PUSH4 0x97559600 EQ PUSH2 0x20F JUMPI DUP2 PUSH4 0xA217FDDF EQ PUSH2 0x1F1 JUMPI DUP2 PUSH4 0xBAD43661 EQ PUSH2 0x17C JUMPI POP DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x14E JUMPI PUSH4 0xD547741F EQ PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x142 PUSH1 0x4 CALLDATALOAD PUSH2 0x121 PUSH2 0x1A33 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x80 MLOAD MSTORE PUSH2 0x13D PUSH1 0x1 PUSH1 0x40 PUSH1 0x80 MLOAD DUP1 PUSH1 0x20 MSTORE KECCAK256 ADD SLOAD PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x80 MLOAD DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI PUSH2 0x1AD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x44 SWAP3 SWAP2 SWAP3 CALLDATALOAD SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP4 SUB PUSH2 0x1EE JUMPI PUSH1 0x20 PUSH2 0x1E4 PUSH1 0x64 CALLDATALOAD DUP6 DUP6 DUP9 PUSH1 0x4 CALLDATALOAD PUSH2 0x2A9F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x80 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0xA0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP5 AND DUP1 SWAP5 SUB PUSH2 0x1EE JUMPI POP PUSH2 0x249 PUSH2 0x1A7E JUMP JUMPDEST SWAP3 PUSH1 0x84 CALLDATALOAD SWAP2 PUSH2 0x256 PUSH2 0x1F0D JUMP JUMPDEST DUP5 AND SWAP1 DUP1 DUP3 LT DUP1 ISZERO PUSH2 0x34B JUMPI JUMPDEST PUSH2 0x321 JUMPI PUSH32 0x8FD3AC39FBB3D5E9C906DD9EC439DC6E584B8FA3CE02D5B67D589B22B22152A9 SWAP6 PUSH1 0xA0 SWAP6 DUP5 PUSH1 0x80 PUSH1 0x40 MLOAD PUSH2 0x29B DUP2 PUSH2 0x1A95 JUMP JUMPDEST DUP9 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP6 PUSH1 0x40 DUP3 ADD MSTORE DUP7 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE DUP6 PUSH1 0x5 SSTORE DUP2 PUSH1 0x6 SSTORE DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 PUSH1 0x7 SLOAD SWAP4 PUSH1 0x40 SHL AND SWAP3 AND OR OR PUSH1 0x7 SSTORE DUP4 PUSH1 0x8 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE LOG1 PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x85D4A74800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP TIMESTAMP DUP3 GT ISZERO PUSH2 0x263 JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0xFF PUSH1 0x40 PUSH1 0x20 SWAP3 PUSH2 0x375 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 PUSH1 0x80 MLOAD DUP1 DUP9 MSTORE KECCAK256 SWAP2 AND DUP3 MSTORE DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x3F1 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24DB JUMP JUMPDEST SWAP2 SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x42F PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x437 PUSH2 0x1F0D JUMP JUMPDEST AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x4 SLOAD AND OR PUSH1 0x4 SSTORE PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x47B PUSH2 0x1A5B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI PUSH2 0x49B SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B71 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI PUSH2 0x4BB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1B71 JUMP JUMPDEST SWAP2 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x148 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x148 JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x4E8 DUP2 PUSH2 0x1BCF JUMP JUMPDEST SWAP4 PUSH2 0x4F6 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x1B18 JUMP JUMPDEST DUP2 DUP6 MSTORE CALLDATASIZE PUSH1 0x24 DUP4 DUP4 ADD ADD GT PUSH2 0x148 JUMPI PUSH1 0x24 DUP3 SWAP2 ADD PUSH1 0x20 DUP7 ADD CALLDATACOPY PUSH1 0x20 PUSH1 0x80 MLOAD SWAP2 DUP6 ADD ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x84 CALLDATALOAD AND PUSH1 0x84 CALLDATALOAD SUB PUSH2 0x148 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0xC4 CALLDATALOAD GT PUSH2 0x148 JUMPI PUSH2 0x55D SWAP4 SWAP2 SWAP4 CALLDATASIZE PUSH1 0xC4 CALLDATALOAD PUSH1 0x4 ADD PUSH2 0x1C09 JUMP JUMPDEST SWAP1 PUSH1 0xC0 MSTORE SWAP3 PUSH1 0x80 MLOAD SWAP3 DUP4 SWAP3 DUP5 SWAP7 PUSH2 0x572 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0xA0 MSTORE PUSH2 0x5A0 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0xA0 MLOAD ADD MLOAD AND PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x60 PUSH1 0xA0 MLOAD ADD MLOAD AND SWAP1 PUSH2 0x2A4C JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xE0 DUP2 SWAP1 MSTORE SWAP1 SWAP5 SWAP1 JUMPDEST DUP4 MLOAD PUSH1 0xE0 MLOAD LT ISZERO PUSH2 0x7E3 JUMPI PUSH2 0x5C3 PUSH1 0xE0 MLOAD DUP6 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP7 DUP8 PUSH1 0xE0 MLOAD ISZERO ISZERO SWAP2 DUP3 PUSH2 0x7D8 JUMPI JUMPDEST POP POP PUSH2 0x7AE JUMPI DUP7 PUSH2 0x5E5 PUSH1 0xE0 MLOAD DUP8 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP2 DUP2 PUSH1 0x80 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x5FF PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x27C5 JUMP JUMPDEST PUSH2 0x626 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 DUP4 ADD MLOAD AND PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x60 DUP5 ADD MLOAD AND SWAP1 PUSH2 0x2A4C JUMP JUMPDEST ISZERO PUSH2 0x69E JUMPI POP POP DUP7 PUSH2 0x66D JUMPI POP PUSH2 0x656 SWAP1 PUSH2 0x650 PUSH1 0x1 SWAP10 PUSH2 0x64A DUP4 PUSH1 0xA0 MLOAD MLOAD PUSH2 0x22D7 JUMP JUMPDEST SWAP1 PUSH2 0x2319 JUMP JUMPDEST SWAP11 PUSH2 0x2319 JUMP JUMPDEST SWAP7 PUSH2 0x662 PUSH1 0xE0 MLOAD PUSH2 0x270D JUMP JUMPDEST PUSH1 0xE0 MSTORE SWAP9 SWAP7 SWAP9 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x24 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x35ACF5000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP10 SWAP2 PUSH1 0x80 DUP3 ADD MLOAD SWAP1 DUP13 DUP3 PUSH2 0x6C4 JUMPI JUMPDEST POP POP POP DUP3 SWAP2 PUSH2 0x64A PUSH2 0x656 SWAP5 PUSH2 0x650 SWAP4 MLOAD PUSH2 0x22D7 JUMP JUMPDEST DUP2 PUSH2 0x6D4 SWAP2 CALLER SWAP1 PUSH1 0xC0 MLOAD DUP7 PUSH2 0x2A9F JUMP JUMPDEST ISZERO PUSH2 0x72B JUMPI POP PUSH1 0x80 DUP1 MLOAD CALLER SWAP1 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE DUP2 MLOAD PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP5 SWAP1 SWAP2 MSTORE SWAP3 SWAP1 MSTORE MLOAD KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND PUSH1 0x1 OR SWAP1 SSTORE DUP2 PUSH2 0x64A DUP13 PUSH2 0x6AE JUMP JUMPDEST DUP13 PUSH1 0x40 MLOAD SWAP3 PUSH32 0x265C66A800000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP5 ADD MSTORE DUP1 PUSH1 0x84 DUP5 ADD MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI DUP3 SWAP1 PUSH1 0x5 SHL PUSH1 0xA4 SWAP3 DUP2 PUSH1 0xC0 MLOAD DUP6 DUP6 ADD CALLDATACOPY CALLER PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD MSTORE DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x340BC4C900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST LT ISZERO SWAP1 POP DUP8 DUP13 PUSH2 0x5D2 JUMP JUMPDEST DUP5 DUP9 DUP11 DUP7 SWAP4 PUSH2 0xE80 JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 SLOAD AND DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x84 CALLDATALOAD AND SUB PUSH2 0xE42 JUMPI POP PUSH1 0xA4 CALLDATALOAD DUP2 DUP2 LT PUSH2 0xDEC JUMPI POP PUSH1 0x84 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD37 JUMPI DUP1 CALLVALUE SUB PUSH2 0xCE0 JUMPI POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD PUSH1 0x8 SHR AND PUSH1 0x80 MLOAD SWAP1 DUP4 MLOAD DUP3 SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0xB0D JUMPI POP POP PUSH1 0x6 SLOAD SWAP1 DUP2 ISZERO ISZERO DUP1 PUSH2 0xA7F JUMPI JUMPDEST PUSH2 0x9B7 JUMPI POP POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x3 SLOAD PUSH1 0x8 SHR AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x148 JUMPI PUSH2 0x922 SWAP5 PUSH2 0x949 PUSH2 0x934 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP4 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP7 PUSH32 0xB48AB8B600000000000000000000000000000000000000000000000000000000 DUP9 MSTORE AND PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x84 DUP7 ADD SWAP1 PUSH2 0x274E JUMP JUMPDEST SWAP1 PUSH1 0x3 NOT DUP6 DUP4 SUB ADD PUSH1 0x44 DUP7 ADD MSTORE PUSH2 0x274E JUMP JUMPDEST PUSH1 0x3 NOT DUP4 DUP3 SUB ADD PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0x80 MLOAD SWAP7 PUSH2 0x21E1 JUMP JUMPDEST SUB SWAP2 PUSH1 0x80 MLOAD SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x9AA JUMPI PUSH2 0x961 JUMPI PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x979 JUMPI PUSH1 0x40 MSTORE DUP1 PUSH2 0x142 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x80 MLOAD MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x80 MLOAD REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x80 MLOAD DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x4 SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x80 MLOAD SWAP1 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x9AA JUMPI PUSH1 0x80 MLOAD SWAP3 PUSH2 0xA49 JUMPI JUMPDEST POP PUSH2 0xA45 SWAP1 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH32 0xA922783000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA77 JUMPI JUMPDEST DUP2 PUSH2 0xA65 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD SWAP1 PUSH2 0xA45 PUSH2 0x9FD JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA58 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH1 0x80 MLOAD DUP7 GAS CALL DUP1 ISZERO PUSH2 0x9AA JUMPI DUP5 DUP5 SWAP2 PUSH1 0x80 MLOAD SWAP1 PUSH2 0xAD5 JUMPI JUMPDEST PUSH2 0xACF SWAP3 SWAP4 POP PUSH2 0x2319 JUMP JUMPDEST GT PUSH2 0x893 JUMP JUMPDEST POP POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xB05 JUMPI JUMPDEST DUP2 PUSH2 0xAF1 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD DUP3 SWAP1 DUP2 SWAP1 DUP6 SWAP1 PUSH2 0xAC4 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xAE4 JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0xB19 DUP5 DUP8 PUSH2 0x273A JUMP JUMPDEST MLOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 ADD SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0xC3F JUMPI JUMPDEST PUSH2 0xB5F JUMPI POP PUSH2 0xB53 PUSH2 0xB59 SWAP2 PUSH2 0xB4C DUP7 DUP9 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2319 JUMP JUMPDEST SWAP4 PUSH2 0x270D JUMP JUMPDEST SWAP1 PUSH2 0x87D JUMP JUMPDEST DUP4 DUP6 DUP8 PUSH1 0x20 PUSH2 0xB6E DUP4 DUP13 PUSH2 0x273A JUMP JUMPDEST MLOAD PUSH1 0x24 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP4 PUSH32 0x2693EBF200000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x80 MLOAD SWAP1 GAS CALL SWAP3 DUP4 ISZERO PUSH2 0x9AA JUMPI PUSH1 0x80 MLOAD SWAP4 PUSH2 0xC09 JUMPI JUMPDEST POP PUSH2 0xA45 SWAP2 PUSH2 0xBC4 SWAP2 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 PUSH32 0xA922783000000000000000000000000000000000000000000000000000000000 DUP6 MSTORE PUSH1 0x4 DUP6 ADD PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP1 SWAP3 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC37 JUMPI JUMPDEST DUP2 PUSH2 0xC25 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD SWAP2 PUSH2 0xA45 PUSH2 0xBB6 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xC18 JUMP JUMPDEST POP PUSH2 0xC4A DUP6 DUP9 PUSH2 0x273A JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP1 PUSH32 0x2693EBF200000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 PUSH1 0x80 MLOAD DUP10 GAS CALL DUP1 ISZERO PUSH2 0x9AA JUMPI DUP3 SWAP2 PUSH1 0x80 MLOAD SWAP2 PUSH2 0xCA9 JUMPI JUMPDEST POP PUSH2 0xCA3 SWAP1 PUSH2 0xB4C DUP9 DUP11 PUSH2 0x273A JUMP JUMPDEST GT PUSH2 0xB36 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCD8 JUMPI JUMPDEST DUP2 PUSH2 0xCC5 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1B18 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x148 JUMPI MLOAD DUP2 SWAP1 PUSH2 0xCA3 PUSH2 0xC94 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xCB8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1EABCFBE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x84 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLVALUE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0xD7D JUMPI PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x1EABCFBE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x80 MLOAD PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0x24 DUP3 ADD MSTORE CALLVALUE PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0xDE7 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE CALLER PUSH1 0x24 DUP4 ADD MSTORE ADDRESS PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x64 DUP2 MSTORE PUSH2 0xDC9 DUP2 PUSH2 0x1A95 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x84 CALLDATALOAD AND PUSH2 0x280D JUMP JUMPDEST PUSH2 0x858 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1EABCFBE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x84 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x64 SWAP2 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x1EABCFBE00000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x80 MLOAD PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x80 PUSH1 0xA0 MLOAD ADD MLOAD SWAP1 DUP2 PUSH2 0xE94 JUMPI JUMPDEST POP PUSH2 0x7ED JUMP JUMPDEST CALLER PUSH1 0x80 MLOAD MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x80 MLOAD DUP3 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SLOAD AND ISZERO DUP1 PUSH2 0xFB1 JUMPI JUMPDEST ISZERO PUSH2 0xF0F JUMPI POP CALLER PUSH1 0x80 MLOAD MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x80 MLOAD SWAP1 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP6 DUP1 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 PUSH32 0x265C66A800000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x80 PUSH1 0x24 DUP4 ADD MSTORE DUP1 PUSH1 0x84 DUP4 ADD MSTORE PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x148 JUMPI DUP2 PUSH1 0xA4 SWAP2 PUSH1 0x5 SHL DUP1 PUSH1 0xC0 MLOAD DUP5 DUP5 ADD CALLDATACOPY CALLER PUSH1 0x44 DUP4 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x64 DUP4 ADD MSTORE DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST POP SWAP5 SWAP2 SWAP6 SWAP3 PUSH1 0x40 SWAP5 SWAP2 SWAP5 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 CALLER PUSH1 0x60 SHL AND DUP3 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x34 DUP2 MSTORE PUSH2 0x101C DUP2 PUSH2 0x1AE0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP7 PUSH2 0x1029 DUP8 PUSH2 0x1B59 JUMP JUMPDEST SWAP8 PUSH2 0x1037 PUSH1 0x40 MLOAD SWAP10 DUP11 PUSH2 0x1B18 JUMP JUMPDEST DUP8 DUP10 MSTORE PUSH1 0x20 DUP10 ADD CALLDATASIZE DUP10 PUSH1 0x5 SHL PUSH1 0xC0 MLOAD ADD GT PUSH2 0x148 JUMPI PUSH1 0xC0 MLOAD SWAP1 JUMPDEST DUP10 PUSH1 0x5 SHL PUSH1 0xC0 MLOAD ADD DUP3 LT PUSH2 0x10C9 JUMPI POP POP SWAP6 PUSH1 0x80 MLOAD SWAP7 JUMPDEST DUP10 MLOAD DUP9 LT ISZERO PUSH2 0x10B7 JUMPI PUSH2 0x107A DUP9 DUP12 PUSH2 0x273A JUMP JUMPDEST MLOAD PUSH1 0x80 MLOAD DUP2 DUP4 LT ISZERO PUSH2 0x10A5 JUMPI POP SWAP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x20 MSTORE PUSH2 0x109F PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 JUMPDEST SWAP8 PUSH2 0x270D JUMP JUMPDEST SWAP7 PUSH2 0x1067 JUMP JUMPDEST MSTORE PUSH1 0x20 MSTORE PUSH2 0x109F PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x1099 JUMP JUMPDEST SWAP1 SWAP4 SWAP7 POP DUP4 SWAP2 SWAP5 SWAP8 SWAP3 SWAP6 SWAP9 POP EQ PUSH2 0xEBC JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1051 JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0xC0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH2 0x10FB PUSH2 0x1A7E JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 DUP5 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x148 JUMPI DUP5 PUSH1 0xA4 CALLDATALOAD SWAP4 PUSH2 0x111F PUSH2 0x1F0D JUMP JUMPDEST AND SWAP1 DUP2 DUP4 LT DUP1 ISZERO PUSH2 0x1211 JUMPI JUMPDEST PUSH2 0x321 JUMPI PUSH32 0x8CED76AEE4B96A1E218E7903610FC7D648023D9075677163A5B31396CB280F96 SWAP7 PUSH1 0xC0 SWAP7 PUSH1 0x3 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x1163 DUP4 PUSH2 0x1A95 JUMP JUMPDEST DUP4 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 DUP6 DUP3 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 DUP8 DUP3 MSTORE PUSH1 0x60 DUP6 ADD SWAP1 DUP10 DUP3 MSTORE PUSH1 0x80 DUP7 ADD SWAP4 DUP12 DUP6 MSTORE DUP13 PUSH1 0x80 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 SWAP7 MLOAD DUP8 SSTORE MLOAD PUSH1 0x1 DUP8 ADD SSTORE PUSH1 0x2 DUP7 ADD SWAP3 MLOAD AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000000000000000000000000000000 PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 DUP5 SLOAD SWAP4 MLOAD PUSH1 0x40 SHL AND SWAP3 AND OR OR SWAP1 SSTORE MLOAD SWAP2 ADD SSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE LOG1 PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST POP TIMESTAMP DUP4 GT ISZERO PUSH2 0x112B JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x1234 PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x123C PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 PUSH1 0xFF DUP3 AND PUSH2 0x151A JUMPI PUSH21 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FF SWAP2 PUSH1 0x8 SHL AND SWAP2 AND OR PUSH1 0x3 SSTORE PUSH1 0x80 MLOAD DUP1 MSTORE PUSH2 0x13A2 PUSH1 0x80 MLOAD PUSH1 0x20 SWAP3 DUP2 DUP5 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP4 KECCAK256 SWAP2 AND DUP1 SWAP3 MSTORE DUP4 MSTORE PUSH1 0x80 MLOAD PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x14AC JUMPI JUMPDEST POP PUSH1 0x80 MLOAD DUP1 MSTORE PUSH1 0x1 DUP4 DUP2 DUP1 SWAP6 MSTORE PUSH2 0x12E8 DUP4 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24F3 JUMP JUMPDEST POP PUSH32 0x4C02318D8C3AADC98CCF18AEBBF3126F651E0C3F6A1DE5FF8EDCF6724A2AD5C2 DUP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE DUP1 PUSH1 0x80 MLOAD PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x143F JUMPI JUMPDEST POP POP PUSH1 0x80 MLOAD MSTORE DUP2 DUP2 MSTORE PUSH2 0x1348 DUP4 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24F3 JUMP JUMPDEST POP PUSH32 0x5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC DUP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE DUP1 PUSH1 0x80 MLOAD PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x13D2 JUMPI JUMPDEST POP POP PUSH1 0x80 MLOAD MSTORE MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24F3 JUMP JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x3 SLOAD AND OR PUSH1 0x3 SSTORE PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE PUSH1 0x80 MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 DUP1 DUP8 PUSH2 0x1390 JUMP JUMPDEST MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE PUSH1 0x80 MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 DUP1 DUP8 PUSH2 0x1330 JUMP JUMPDEST DUP1 MSTORE PUSH1 0x80 MLOAD DUP1 DUP5 MSTORE DUP2 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP4 MSTORE PUSH1 0x80 MLOAD PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP2 CALLER SWAP2 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 DUP4 PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x155D PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x1565 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x80 MLOAD DUP1 DUP1 DUP1 SWAP4 PUSH1 0x24 CALLDATALOAD SWAP1 GAS CALL PUSH2 0x157A PUSH2 0x2950 JUMP JUMPDEST POP ISZERO PUSH2 0x1586 JUMPI PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x750B219C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x15C9 PUSH2 0x1A5B JUMP JUMPDEST PUSH2 0x15D1 PUSH2 0x1A33 JUMP JUMPDEST PUSH2 0x15D9 PUSH2 0x1C3A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP4 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x44 DUP3 MSTORE PUSH1 0x80 DUP3 ADD SWAP3 DUP3 DUP5 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT OR PUSH2 0x979 JUMPI PUSH2 0x142 SWAP4 PUSH1 0x40 MSTORE AND PUSH2 0x280D JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x166A PUSH2 0x1A33 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0x1693 JUMPI PUSH2 0x142 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2224 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x80 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x4 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x17DB PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH2 0x176E PUSH2 0x1A33 JUMP JUMPDEST SWAP2 DUP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD SWAP1 PUSH2 0x178C DUP4 PUSH1 0x40 PUSH1 0x20 SWAP5 DUP1 DUP7 MSTORE KECCAK256 ADD SLOAD PUSH2 0x2083 JUMP JUMPDEST DUP1 PUSH1 0x80 MLOAD MSTORE PUSH1 0x80 MLOAD SWAP4 DUP5 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 DUP7 KECCAK256 SWAP2 AND DUP1 SWAP6 MSTORE DUP3 MSTORE DUP1 PUSH1 0x80 MLOAD PUSH1 0xFF PUSH1 0x40 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x17E2 JUMPI POP POP PUSH1 0x80 MLOAD MSTORE MSTORE PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x24F3 JUMP JUMPDEST POP PUSH1 0x80 MLOAD DUP1 RETURN JUMPDEST MSTORE PUSH1 0x80 MLOAD DUP1 DUP4 MSTORE DUP5 PUSH1 0x40 DUP3 KECCAK256 SWAP2 MSTORE DUP3 MSTORE PUSH1 0x80 MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D CALLER SWAP4 DUP1 LOG4 DUP1 DUP7 PUSH2 0x1390 JUMP JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x80 MLOAD DUP1 DUP5 MSTORE KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x80 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1EE JUMPI PUSH2 0x1899 PUSH2 0x2A74 JUMP JUMPDEST POP PUSH2 0x18EC PUSH2 0x18A5 PUSH2 0x2782 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x80 DUP1 PUSH1 0xA0 DUP4 ADD SWAP5 DUP1 MLOAD DUP5 MSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP1 PUSH1 0x40 DUP4 ADD MLOAD AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x60 DUP6 ADD MSTORE ADD MLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x148 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x148 JUMPI PUSH2 0x1909 PUSH2 0x2A74 JUMP JUMPDEST POP PUSH1 0x4 CALLDATALOAD PUSH1 0x80 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH2 0x18EC PUSH2 0x18A5 PUSH1 0x40 PUSH1 0x80 MLOAD KECCAK256 PUSH2 0x27C5 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2F JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x1A2F JUMPI PUSH1 0x4 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 SWAP2 SUB PUSH2 0x1A2B JUMPI PUSH1 0x20 SWAP3 POP DUP1 PUSH32 0x49007A5F00000000000000000000000000000000000000000000000000000000 EQ SWAP1 DUP2 ISZERO PUSH2 0x199B JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x19CE JUMPI JUMPDEST POP DUP4 PUSH2 0x1994 JUMP JUMPDEST PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x1A01 JUMPI JUMPDEST POP DUP4 PUSH2 0x19C7 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ DUP4 PUSH2 0x19FA JUMP JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1A56 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1A56 JUMPI JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x1A56 JUMPI JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1AB1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1AB1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1AB1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x1AB1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AB1 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1A56 JUMPI DUP1 CALLDATALOAD SWAP2 PUSH2 0x1B88 DUP4 PUSH2 0x1B59 JUMP JUMPDEST SWAP3 PUSH2 0x1B96 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1B18 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 SWAP3 DUP4 DUP1 DUP7 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1A56 JUMPI DUP4 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1BC0 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP4 ADD SWAP1 DUP4 ADD PUSH2 0x1BB2 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x1AB1 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x1A56 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x1A56 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x1A56 JUMPI JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x20BE27040B8E00DF40BCA0DF34743417F3574A156386188F7D7F14369E5EE82B PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP3 PUSH32 0x5D8E12C39142FF96D79D04D15D1BA1269E4FE57BB9D26F43523628B34BA108EC SWAP2 PUSH1 0xFF AND ISZERO PUSH2 0x1C9E JUMPI POP POP POP POP JUMP JUMPDEST PUSH2 0x1CA7 CALLER PUSH2 0x2366 JUMP JUMPDEST SWAP2 DUP5 MLOAD SWAP1 PUSH2 0x1CB4 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x42 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 PUSH1 0x60 CALLDATASIZE DUP6 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x1EE0 JUMPI PUSH1 0x30 DUP5 MSTORE8 DUP3 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x1EE0 JUMPI SWAP1 PUSH1 0x78 PUSH1 0x21 DUP6 ADD MSTORE8 PUSH1 0x41 SWAP2 JUMPDEST DUP2 DUP4 GT PUSH2 0x1E15 JUMPI POP POP POP PUSH2 0x1DB9 JUMPI PUSH1 0x48 PUSH2 0xA45 SWAP4 DUP7 SWAP4 PUSH2 0x1D83 SWAP4 PUSH2 0x1D74 SWAP9 MLOAD SWAP9 DUP10 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP11 DUP7 ADD MSTORE PUSH2 0x1D3F DUP2 MLOAD DUP1 SWAP3 DUP13 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST DUP5 ADD SWAP2 PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x37 DUP5 ADD MSTORE MLOAD DUP1 SWAP4 DUP7 DUP5 ADD SWAP1 PUSH2 0x21BE JUMP JUMPDEST ADD SUB PUSH1 0x28 DUP2 ADD DUP8 MSTORE ADD DUP6 PUSH2 0x1B18 JUMP JUMPDEST MLOAD SWAP3 DUP4 SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x21E1 JUMP JUMPDEST PUSH1 0x64 DUP5 DUP7 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP1 PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1EB3 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 SWAP1 BYTE PUSH2 0x1E52 DUP6 DUP8 PUSH2 0x2326 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP3 DUP1 ISZERO PUSH2 0x1E86 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP1 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x24 SWAP3 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x6058EE1F1C102E8AC9EF0C4319964E42C1AB00DFBA021F8302FD0802656934AC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP3 PUSH32 0x4C02318D8C3AADC98CCF18AEBBF3126F651E0C3F6A1DE5FF8EDCF6724A2AD5C2 SWAP2 PUSH1 0xFF AND ISZERO PUSH2 0x1F71 JUMPI POP POP POP POP JUMP JUMPDEST PUSH2 0x1F7A CALLER PUSH2 0x2366 JUMP JUMPDEST SWAP2 DUP5 MLOAD SWAP1 PUSH2 0x1F87 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x42 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 PUSH1 0x60 CALLDATASIZE DUP6 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x1EE0 JUMPI PUSH1 0x30 DUP5 MSTORE8 DUP3 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x1EE0 JUMPI SWAP1 PUSH1 0x78 PUSH1 0x21 DUP6 ADD MSTORE8 PUSH1 0x41 SWAP2 JUMPDEST DUP2 DUP4 GT PUSH2 0x2012 JUMPI POP POP POP PUSH2 0x1DB9 JUMPI PUSH1 0x48 PUSH2 0xA45 SWAP4 DUP7 SWAP4 PUSH2 0x1D83 SWAP4 PUSH2 0x1D74 SWAP9 MLOAD SWAP9 DUP10 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP11 DUP7 ADD MSTORE PUSH2 0x1D3F DUP2 MLOAD DUP1 SWAP3 DUP13 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1EB3 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 SWAP1 BYTE PUSH2 0x204F DUP6 DUP8 PUSH2 0x2326 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP3 DUP1 ISZERO PUSH2 0x1E86 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP2 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0x20 SWAP1 DUP3 DUP3 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP2 KECCAK256 CALLER DUP3 MSTORE DUP4 MSTORE PUSH1 0xFF DUP5 DUP3 KECCAK256 SLOAD AND ISZERO PUSH2 0x20AC JUMPI POP POP POP POP JUMP JUMPDEST PUSH2 0x20B5 CALLER PUSH2 0x2366 JUMP JUMPDEST SWAP2 DUP5 MLOAD SWAP1 PUSH2 0x20C2 DUP3 PUSH2 0x1AFC JUMP JUMPDEST PUSH1 0x42 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 PUSH1 0x60 CALLDATASIZE DUP6 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x1EE0 JUMPI PUSH1 0x30 DUP5 MSTORE8 DUP3 MLOAD SWAP1 PUSH1 0x1 SWAP2 DUP3 LT ISZERO PUSH2 0x1EE0 JUMPI SWAP1 PUSH1 0x78 PUSH1 0x21 DUP6 ADD MSTORE8 PUSH1 0x41 SWAP2 JUMPDEST DUP2 DUP4 GT PUSH2 0x214D JUMPI POP POP POP PUSH2 0x1DB9 JUMPI PUSH1 0x48 PUSH2 0xA45 SWAP4 DUP7 SWAP4 PUSH2 0x1D83 SWAP4 PUSH2 0x1D74 SWAP9 MLOAD SWAP9 DUP10 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP11 DUP7 ADD MSTORE PUSH2 0x1D3F DUP2 MLOAD DUP1 SWAP3 DUP13 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST SWAP1 SWAP2 SWAP3 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x1EB3 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 SWAP1 BYTE PUSH2 0x218A DUP6 DUP8 PUSH2 0x2326 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP3 DUP1 ISZERO PUSH2 0x1E86 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP2 SWAP1 PUSH2 0x20F3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x21D1 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x21C1 JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x221D DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x21BE JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH2 0x226F SWAP3 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP4 KECCAK256 SWAP5 AND SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF DUP4 DUP4 KECCAK256 SLOAD AND PUSH2 0x2272 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE KECCAK256 PUSH2 0x25B4 JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP3 MSTORE DUP2 PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 DUP5 DUP4 MSTORE PUSH1 0x20 MSTORE DUP3 DUP3 KECCAK256 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP1 LOG4 PUSH2 0x2262 JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x22EA JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x22EA JUMPI JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2337 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2373 DUP3 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x2A DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 CALLDATASIZE DUP3 CALLDATACOPY DUP3 MLOAD ISZERO PUSH2 0x2337 JUMPI PUSH1 0x30 SWAP1 MSTORE8 DUP2 MLOAD PUSH1 0x1 SWAP1 DUP2 LT ISZERO PUSH2 0x2337 JUMPI PUSH1 0x78 PUSH1 0x21 DUP5 ADD MSTORE8 PUSH1 0x29 SWAP1 JUMPDEST DUP1 DUP3 GT PUSH2 0x2410 JUMPI POP POP PUSH2 0x23B2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 SWAP2 PUSH1 0xF DUP2 AND PUSH1 0x10 DUP2 LT ISZERO PUSH2 0x24AD JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 SWAP1 BYTE PUSH2 0x244C DUP5 DUP7 PUSH2 0x2326 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP2 DUP1 ISZERO PUSH2 0x247F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 PUSH2 0x23A2 JUMP JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 PUSH1 0x0 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE REVERT JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2337 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP4 ADD PUSH1 0x0 SWAP1 DUP3 DUP3 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x25AE JUMPI DUP5 SLOAD SWAP5 PUSH9 0x10000000000000000 DUP7 LT ISZERO PUSH2 0x2581 JUMPI DUP4 PUSH2 0x2571 PUSH2 0x253C DUP9 PUSH1 0x1 PUSH1 0x40 SWAP9 SWAP10 SWAP11 ADD DUP6 SSTORE DUP5 PUSH2 0x24DB JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP4 DUP3 MSTORE PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x24 DUP4 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST POP SWAP3 POP POP JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH1 0x0 SWAP3 DUP2 DUP5 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SLOAD SWAP1 DUP2 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x2706 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 DUP2 ADD DUP2 DUP2 GT PUSH2 0x26D9 JUMPI DUP3 SLOAD SWAP1 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x26AC JUMPI DUP1 DUP3 SUB PUSH2 0x2677 JUMPI JUMPDEST POP POP POP DUP1 SLOAD DUP1 ISZERO PUSH2 0x264A JUMPI DUP3 ADD SWAP2 PUSH2 0x262D DUP4 DUP4 PUSH2 0x24DB JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE DUP3 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH1 0x24 DUP7 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH2 0x2697 PUSH2 0x2687 PUSH2 0x253C SWAP4 DUP7 PUSH2 0x24DB JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP3 DUP7 PUSH2 0x24DB JUMP JUMPDEST SWAP1 SSTORE DUP7 MSTORE DUP5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP7 KECCAK256 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2615 JUMP JUMPDEST PUSH1 0x24 DUP9 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST PUSH1 0x24 DUP8 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE REVERT JUMPDEST POP POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x22EA JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x2337 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP1 SWAP4 ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x276E JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2760 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x278F DUP3 PUSH2 0x1A95 JUMP JUMPDEST DUP2 PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x6 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x7 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x8 SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x27D2 DUP2 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x3 DUP3 SWAP5 DUP1 SLOAD DUP5 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP2 AND PUSH1 0x40 DUP8 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0x60 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x40 MLOAD PUSH1 0x40 DUP2 ADD SWAP1 DUP1 DUP3 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT OR PUSH2 0x1AB1 JUMPI PUSH2 0x288D SWAP2 PUSH1 0x40 MSTORE PUSH1 0x20 SWAP4 DUP5 DUP3 MSTORE PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP6 DUP4 ADD MSTORE PUSH1 0x0 DUP1 DUP6 DUP8 DUP3 SWAP8 MLOAD SWAP2 ADD DUP3 DUP6 GAS CALL PUSH2 0x2887 PUSH2 0x2950 JUMP JUMPDEST SWAP2 PUSH2 0x2980 JUMP JUMPDEST DUP1 MLOAD SWAP2 DUP3 ISZERO SWAP2 DUP5 DUP4 ISZERO PUSH2 0x292C JUMPI JUMPDEST POP POP POP SWAP1 POP ISZERO PUSH2 0x28A8 JUMPI POP JUMP JUMPDEST PUSH1 0x84 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP4 DUP2 DUP1 SWAP5 POP ADD SUB SLT PUSH2 0x1A2F JUMPI DUP3 ADD MLOAD SWAP1 DUP2 ISZERO ISZERO DUP3 SUB PUSH2 0x1EE JUMPI POP DUP1 CODESIZE DUP1 DUP5 PUSH2 0x289B JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x297B JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2961 DUP3 PUSH2 0x1BCF JUMP JUMPDEST SWAP2 PUSH2 0x296F PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1B18 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x29FB JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x2994 JUMPI POP SWAP1 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x299D JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x2A0E JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH2 0xA45 SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP1 PUSH2 0x21E1 JUMP JUMPDEST SWAP1 DUP1 ISZERO SWAP2 DUP3 ISZERO PUSH2 0x2A6A JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x2A62 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP TIMESTAMP LT ISZERO SWAP1 JUMP JUMPDEST TIMESTAMP LT SWAP2 POP CODESIZE PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2A81 DUP3 PUSH2 0x1A95 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP3 SWAP1 PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND DUP3 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x2 DUP3 MSTORE PUSH1 0x40 SWAP4 DUP5 DUP5 KECCAK256 DUP7 DUP6 MSTORE DUP4 MSTORE PUSH1 0xFF DUP6 DUP6 KECCAK256 SLOAD AND ISZERO SWAP8 DUP9 PUSH2 0x2AEA JUMPI JUMPDEST POP POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP6 SWAP8 POP DUP5 SWAP7 SWAP9 SWAP5 MLOAD SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP6 DUP4 ADD SWAP4 PUSH1 0x60 SHL AND DUP4 MSTORE PUSH1 0x34 DUP3 ADD MSTORE PUSH1 0x34 DUP2 MSTORE PUSH2 0x2B34 DUP2 PUSH2 0x1AE0 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x2B41 DUP9 PUSH2 0x1B59 JUMP JUMPDEST SWAP8 PUSH2 0x2B4E DUP8 MLOAD SWAP10 DUP11 PUSH2 0x1B18 JUMP JUMPDEST DUP1 DUP10 MSTORE DUP4 DUP10 ADD SWAP1 PUSH1 0x5 SHL DUP3 ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x2BDD JUMPI DUP5 SWAP1 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x2BCD JUMPI POP POP POP POP SWAP2 DUP4 SWAP3 JUMPDEST DUP8 MLOAD DUP5 LT ISZERO PUSH2 0x2BB8 JUMPI PUSH2 0x2B88 DUP5 DUP10 PUSH2 0x273A JUMP JUMPDEST MLOAD SWAP1 DUP2 DUP2 LT ISZERO PUSH2 0x2BA8 JUMPI DUP6 MSTORE DUP3 MSTORE PUSH2 0x2BA2 DUP6 DUP6 KECCAK256 SWAP4 PUSH2 0x270D JUMP JUMPDEST SWAP3 PUSH2 0x2B75 JUMP JUMPDEST SWAP1 DUP6 MSTORE DUP3 MSTORE PUSH2 0x2BA2 DUP6 DUP6 KECCAK256 PUSH2 0xB53 JUMP JUMPDEST SWAP5 POP SWAP6 POP POP POP POP EQ CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x2ADF JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP6 SWAP2 ADD PUSH2 0x2B66 JUMP JUMPDEST DUP7 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB PUSH8 0x89F230ADCE122F89 DUP7 0xCE DUP8 DUP14 PUSH32 0x455CB45C2B5A3B66278304ADEE742BA3EE64736F6C6343000813003300000000 ",
							"sourceMap": "465:1095:40:-:0;;;;-1:-1:-1;;;;;465:1095:40;;;;;;;;;;-1:-1:-1;;465:1095:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;465:1095:40;;;;;;;983:12:10;736:10:21;983:12:10;:::i;:::-;465:1095:40;;730:17;;;;;;;;;;;;;;;;;;;-1:-1:-1;;730:17:40;;;;;;;;;;465:1095;;;1022:37:31;;;;;;;;;;;;;;;;;465:1095:40;1022:37:31;;;;465:1095:40;;;1022:37:31;;;;;;;;;1096:12;465:1095:40;;;;;;;;;;;;;;;;1096:12:31;:::i;:::-;465:1095:40;;;;;;;;1022:37:31;465:1095:40;;;;;;;;;;;;1022:37:31;-1:-1:-1;;;465:1095:40;;;;;;;;730:17;465:1095;;;;;;;;;730:17;465:1095;;;-1:-1:-1;465:1095:40;;;;;-1:-1:-1;465:1095:40;;-1:-1:-1;465:1095:40;;2503:191:10;2596:6;465:1095:40;;-1:-1:-1;;;;;465:1095:40;;;-1:-1:-1;;;;;;465:1095:40;;;;;;;;;2646:40:10;;2596:6;2646:40;2503:191::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 2202,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_4580": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_4584": {
									"entryPoint": 2167,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_address_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_packed_bytes32_address_address_bytes": {
									"entryPoint": 2559,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2524,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_4581": {
									"entryPoint": 2364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_6072": {
									"entryPoint": 2431,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 2237,
									"id": 1317,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6040608081526004908136101561001557600080fd5b600091823560e01c80631bce45831461079057806359659e901461073d578063715018a6146106a05780638da5cb5b1461064b578063d9181cd3146102ee578063e657f693146101aa5763f2fde38b1461006e57600080fd5b346101a65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a6576100a561084f565b906100ae6108bd565b73ffffffffffffffffffffffffffffffffffffffff809216928315610123575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b8284346102eb5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102eb57506101e461084f565b906101ed610877565b916055600b6101fa61089a565b845173ffffffffffffffffffffffffffffffffffffffff968716602080830191825292909716604080830191909152815290957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09161025a60608261099b565b519020906102ab86519161026d8361097f565b6000835273ffffffffffffffffffffffffffffffffffffffff9661029f8860015416948a519586938d850198896109ff565b0390810183528261099b565b5190206111eb85516102bf8883018261099b565b81815287810191610a5683395190209085519186830152868201523081520160ff815320915191168152f35b80fd5b5090346101a65760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a65761032761084f565b92610330610877565b61033861089a565b908351946020968787018761037586868490602090939293604083019473ffffffffffffffffffffffffffffffffffffffff809216845216910152565b03976103a77fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0998a810183528261099b565b5190208651916103b68361097f565b6000835273ffffffffffffffffffffffffffffffffffffffff91816103f98c6103ed878d88600154169051958694850197886109ff565b038c810183528261099b565b5190206111eb895161040d8d83018261099b565b8181528c810191610a5683398051156105f057518492918af516988915610594578260015416938a3b156105905791608491601f8a95946104988f8e51998a9889977fcf7a1d77000000000000000000000000000000000000000000000000000000008952168c880152602487015260606044870152825192839182606489015288880191016109dc565b01168101030181838b5af1801561058657908591610572575b5050853b1561056e5784517f485cc95500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff928316918101918252929091166020820152829082908190604001038183885af1801561056457610550575b50507f346f0211197dd599e2e2a8c828f6e7dc39e8a49171ce0a728428e8b778c61eea838251848152a151908152f35b61055a829161093c565b6102eb5780610520565b83513d84823e3d90fd5b8380fd5b61057b9061093c565b61056e5783386104b1565b86513d87823e3d90fd5b8880fd5b6064858c8b51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152fd5b6064878e808e51927f08c379a000000000000000000000000000000000000000000000000000000000845283015260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fd5b50503461069c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069c5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b83346102eb57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102eb576106d76108bd565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b50503461069c57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069c5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5090346101a65760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101a657826107ca61084f565b6107d26108bd565b73ffffffffffffffffffffffffffffffffffffffff90816001541690813b1561056e5783602492865197889586947f3659cfe600000000000000000000000000000000000000000000000000000000865216908401525af1908115610846575061083a575080f35b6108439061093c565b80f35b513d84823e3d90fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361087257565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361087257565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361087257565b73ffffffffffffffffffffffffffffffffffffffff6000541633036108de57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b67ffffffffffffffff811161095057604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff82111761095057604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761095057604052565b60005b8381106109ef5750506000910152565b81810151838201526020016109df565b9190926048949383527fffffffffffffffffffffffffffffffffffffffff000000000000000000000000809260601b16602084015260601b166034820152610a5082518093602086850191016109dc565b01019056fe60808060405234610016576111cf908161001c8239f35b600080fdfe604060808152366103825773ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000917fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000843516146100c057600484517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b6100c8611192565b60049136831161037e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037e578235916101088361067f565b602435926101158461067f565b60443567ffffffffffffffff811161037a57610135839136908801610789565b941692156103525761014791166107e3565b803b156102cf578451907f5c60da1b000000000000000000000000000000000000000000000000000000009384835260209687848381865afa9384156102a657889461019d9189916102b2575b503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790555194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab575b610242575b8361023c6107d0565b80519101f35b8592839182525afa9182156102a65761026a9392610277575b506102646109b1565b91610a21565b5038808083818080610233565b610298919250843d861161029f575b610290818361070e565b810190610902565b903861025b565b503d610286565b61091a565b508661022e565b6102c99150863d881161029f57610290818361070e565b38610194565b60848360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b8487517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b8380fd5b73ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000907fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000833516146104395760046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b610441611192565b60049236841161067b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067b5783356104808161067f565b6024359161048d8361067f565b60443567ffffffffffffffff8111610677576104ad829136908901610789565b9316931561064e576104bf91166107e3565b813b156105ca576040517f5c60da1b000000000000000000000000000000000000000000000000000000009283825260209586838281855afa9283156102a65787936105149188916105b357503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617905560405194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab57610242578361023c6107d0565b6102c99150853d871161029f57610290818361070e565b6084846020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b856040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b8280fd5b73ffffffffffffffffffffffffffffffffffffffff81160361069d57565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106ed57604052565b6106a2565b6040810190811067ffffffffffffffff8211176106ed57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106ed57604052565b67ffffffffffffffff81116106ed57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561069d578035906107a08261074f565b926107ae604051948561070e565b8284526020838301011161069d57816000926020809301838601378301015290565b604051906107dd826106d1565b60008252565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61039081547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604080519373ffffffffffffffffffffffffffffffffffffffff9081851686521693846020820152a1811561087e577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b9081602091031261069d57516109178161067f565b90565b6040513d6000823e3d90fd5b1561092d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201527f73206e6f74206120636f6e7472616374000000000000000000000000000000006064820152fd5b604051906060820182811067ffffffffffffffff8211176106ed57604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806109179493602081519101845af43d15610a60573d91610a438361074f565b92610a51604051948561070e565b83523d6000602085013e610acd565b606091610acd565b15610a6f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b91929015610aed5750815115610ae1575090565b610917903b1515610a68565b825190915015610b005750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610b7d575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610b3c565b610bee610bd57fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b3303610d14576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe6000000000000000000000000000000000000000000000000000000008103610c515750610c49610f0f565b602081519101f35b7f4f1ef286000000000000000000000000000000000000000000000000000000008103610c865750610c81611083565b610c49565b7f8f283970000000000000000000000000000000000000000000000000000000008103610cb65750610c81610ec5565b7ff851a440000000000000000000000000000000000000000000000000000000008103610ce65750610c81610dfd565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610d1457610c81610e53565b610d1c610d3b565b6000808092368280378136915af43d82803e15610d37573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541680610df8575060206004917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156102a657600091610de0575090565b610917915060203d811161029f57610290818361070e565b905090565b610e05611192565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103541660405190602082015260208152610917816106f2565b610e5b611192565b610e63610d3b565b73ffffffffffffffffffffffffffffffffffffffff6040519116602082015260208152610917816106f2565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261069d576004356109178161067f565b610ecd611192565b3660041161069d57610efc73ffffffffffffffffffffffffffffffffffffffff610ef636610e8f565b166107e3565b604051610f08816106d1565b6000815290565b610f17611192565b3660041161069d5773ffffffffffffffffffffffffffffffffffffffff610f3d36610e8f565b1660405190610f4b826106d1565b60008252803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610ff7575b610fe3575b5050604051610f08816106d1565b610fef916102646109b1565b503880610fd5565b506000610fd0565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b3660041161069d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069d576004356110c18161067f565b60243567ffffffffffffffff811161069d576110f673ffffffffffffffffffffffffffffffffffffffff913690600401610789565b9116803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061118a57610fe3575050604051610f08816106d1565b506001610fd0565b3461069d5756fea264697066735822122043b19ddbf8b158c7b89e1cb0ede6eab8cd9c86ef2e863af97cab3041b065284164736f6c63430008130033a26469706673582212204ee4546b07f207803db4e631f4d5071abef8be94814153a0bf4c46091210bdfd64736f6c63430008130033",
							"opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BCE4583 EQ PUSH2 0x790 JUMPI DUP1 PUSH4 0x59659E90 EQ PUSH2 0x73D JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x6A0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x64B JUMPI DUP1 PUSH4 0xD9181CD3 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0xE657F693 EQ PUSH2 0x1AA JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A6 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A6 JUMPI PUSH2 0xA5 PUSH2 0x84F JUMP JUMPDEST SWAP1 PUSH2 0xAE PUSH2 0x8BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH2 0x123 JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP3 DUP5 CALLVALUE PUSH2 0x2EB JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2EB JUMPI POP PUSH2 0x1E4 PUSH2 0x84F JUMP JUMPDEST SWAP1 PUSH2 0x1ED PUSH2 0x877 JUMP JUMPDEST SWAP2 PUSH1 0x55 PUSH1 0xB PUSH2 0x1FA PUSH2 0x89A JUMP JUMPDEST DUP5 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 DUP8 AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE SWAP3 SWAP1 SWAP8 AND PUSH1 0x40 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MSTORE SWAP1 SWAP6 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 PUSH2 0x25A PUSH1 0x60 DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH2 0x2AB DUP7 MLOAD SWAP2 PUSH2 0x26D DUP4 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 PUSH2 0x29F DUP9 PUSH1 0x1 SLOAD AND SWAP5 DUP11 MLOAD SWAP6 DUP7 SWAP4 DUP14 DUP6 ADD SWAP9 DUP10 PUSH2 0x9FF JUMP JUMPDEST SUB SWAP1 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x11EB DUP6 MLOAD PUSH2 0x2BF DUP9 DUP4 ADD DUP3 PUSH2 0x99B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP8 DUP2 ADD SWAP2 PUSH2 0xA56 DUP4 CODECOPY MLOAD SWAP1 KECCAK256 SWAP1 DUP6 MLOAD SWAP2 DUP7 DUP4 ADD MSTORE DUP7 DUP3 ADD MSTORE ADDRESS DUP2 MSTORE ADD PUSH1 0xFF DUP2 MSTORE8 KECCAK256 SWAP2 MLOAD SWAP2 AND DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A6 JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A6 JUMPI PUSH2 0x327 PUSH2 0x84F JUMP JUMPDEST SWAP3 PUSH2 0x330 PUSH2 0x877 JUMP JUMPDEST PUSH2 0x338 PUSH2 0x89A JUMP JUMPDEST SWAP1 DUP4 MLOAD SWAP5 PUSH1 0x20 SWAP7 DUP8 DUP8 ADD DUP8 PUSH2 0x375 DUP7 DUP7 DUP5 SWAP1 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP4 PUSH1 0x40 DUP4 ADD SWAP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND SWAP2 ADD MSTORE JUMP JUMPDEST SUB SWAP8 PUSH2 0x3A7 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP10 DUP11 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP7 MLOAD SWAP2 PUSH2 0x3B6 DUP4 PUSH2 0x97F JUMP JUMPDEST PUSH1 0x0 DUP4 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP2 PUSH2 0x3F9 DUP13 PUSH2 0x3ED DUP8 DUP14 DUP9 PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP6 DUP7 SWAP5 DUP6 ADD SWAP8 DUP9 PUSH2 0x9FF JUMP JUMPDEST SUB DUP13 DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0x99B JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH2 0x11EB DUP10 MLOAD PUSH2 0x40D DUP14 DUP4 ADD DUP3 PUSH2 0x99B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP13 DUP2 ADD SWAP2 PUSH2 0xA56 DUP4 CODECOPY DUP1 MLOAD ISZERO PUSH2 0x5F0 JUMPI MLOAD DUP5 SWAP3 SWAP2 DUP11 CREATE2 AND SWAP9 DUP10 ISZERO PUSH2 0x594 JUMPI DUP3 PUSH1 0x1 SLOAD AND SWAP4 DUP11 EXTCODESIZE ISZERO PUSH2 0x590 JUMPI SWAP2 PUSH1 0x84 SWAP2 PUSH1 0x1F DUP11 SWAP6 SWAP5 PUSH2 0x498 DUP16 DUP15 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP8 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 DUP10 MSTORE AND DUP13 DUP9 ADD MSTORE PUSH1 0x24 DUP8 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP8 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 SWAP2 DUP3 PUSH1 0x64 DUP10 ADD MSTORE DUP9 DUP9 ADD SWAP2 ADD PUSH2 0x9DC JUMP JUMPDEST ADD AND DUP2 ADD SUB ADD DUP2 DUP4 DUP12 GAS CALL DUP1 ISZERO PUSH2 0x586 JUMPI SWAP1 DUP6 SWAP2 PUSH2 0x572 JUMPI JUMPDEST POP POP DUP6 EXTCODESIZE ISZERO PUSH2 0x56E JUMPI DUP5 MLOAD PUSH32 0x485CC95500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP2 DUP2 ADD SWAP2 DUP3 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH1 0x40 ADD SUB DUP2 DUP4 DUP9 GAS CALL DUP1 ISZERO PUSH2 0x564 JUMPI PUSH2 0x550 JUMPI JUMPDEST POP POP PUSH32 0x346F0211197DD599E2E2A8C828F6E7DC39E8A49171CE0A728428E8B778C61EEA DUP4 DUP3 MLOAD DUP5 DUP2 MSTORE LOG1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x55A DUP3 SWAP2 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x2EB JUMPI DUP1 PUSH2 0x520 JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH2 0x57B SWAP1 PUSH2 0x93C JUMP JUMPDEST PUSH2 0x56E JUMPI DUP4 CODESIZE PUSH2 0x4B1 JUMP JUMPDEST DUP7 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH1 0x64 DUP6 DUP13 DUP12 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A204661696C6564206F6E206465706C6F7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x64 DUP8 DUP15 DUP1 DUP15 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x69C JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x2EB JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x2EB JUMPI PUSH2 0x6D7 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP POP CALLVALUE PUSH2 0x69C JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69C JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x1A6 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1A6 JUMPI DUP3 PUSH2 0x7CA PUSH2 0x84F JUMP JUMPDEST PUSH2 0x7D2 PUSH2 0x8BD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH1 0x1 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x56E JUMPI DUP4 PUSH1 0x24 SWAP3 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP7 MSTORE AND SWAP1 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x846 JUMPI POP PUSH2 0x83A JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x843 SWAP1 PUSH2 0x93C JUMP JUMPDEST DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x872 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x872 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x872 JUMPI JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x8DE JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x950 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x950 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x950 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x9EF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x9DF JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x48 SWAP5 SWAP4 DUP4 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 DUP1 SWAP3 PUSH1 0x60 SHL AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x34 DUP3 ADD MSTORE PUSH2 0xA50 DUP3 MLOAD DUP1 SWAP4 PUSH1 0x20 DUP7 DUP6 ADD SWAP2 ADD PUSH2 0x9DC JUMP JUMPDEST ADD ADD SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x11CF SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xB1 SWAP14 0xDB 0xF8 0xB1 PC 0xC7 0xB8 SWAP15 SHR 0xB0 0xED 0xE6 0xEA 0xB8 0xCD SWAP13 DUP7 0xEF 0x2E DUP7 GASPRICE 0xF9 PUSH29 0xAB3041B065284164736F6C63430008130033A26469706673582212204E 0xE4 SLOAD PUSH12 0x7F207803DB4E631F4D5071A 0xBE 0xF8 0xBE SWAP5 DUP2 COINBASE MSTORE8 LOG0 0xBF 0x4C CHAINID MULMOD SLT LT 0xBD REVERT PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "465:1095:40:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1097:65:10;;;:::i;:::-;465:1095:40;;;;2231:22:10;;;465:1095:40;;;;;;;;;;;;;;2646:40:10;465:1095:40;2646:40:10;;465:1095:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;2398:1617:22;;465:1095:40;;:::i;:::-;;;;;;;;1462:29;;;465:1095;;;;;;;;;;;;;;;1462:29;;465:1095;;-1:-1:-1;;1462:29:40;465:1095;;1462:29;:::i;:::-;465:1095;1452:40;;465:1095;2317:60:31;465:1095:40;;;;;;:::i;:::-;;;;;;2317:60:31;465:1095:40;2362:6:31;465:1095:40;;;;;2317:60:31;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;465:1095:40;2307:71:31;;2421:52;465:1095:40;;;2421:52:31;;;465:1095:40;;:::i;:::-;2421:52:31;;;;;;;;;;465:1095:40;2411:63:31;;2398:1617:22;;;;;;;;;;;;1965:4;2398:1617;;;;;;;465:1095:40;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;1023:29;;;;;;;;;465:1095;;;;;;;;;;;;;;;;;;;;;1023:29;;;;;;;;;;;;;:::i;:::-;465:1095;1013:40;;465:1095;;;;;;:::i;:::-;;;;;;;1569:60:31;465:1095:40;1569:60:31;465:1095:40;;;1614:6:31;465:1095:40;;;;1569:60:31;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;465:1095:40;1559:71:31;;1664:52;465:1095:40;;;1664:52:31;;;465:1095:40;;:::i;:::-;1664:52:31;;;;;;;;;;465:1095:40;;1314:20:22;465:1095:40;;1426:102:22;;;;;;465:1095:40;1546:18:22;;;465:1095:40;;;1614:6:31;465:1095:40;;1791:105:31;;;;;;465:1095:40;;;;;;;;;;;1791:105:31;;;;;465:1095:40;1791:105:31;;465:1095:40;1791:105:31;;;465:1095:40;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;1791:105:31;;;;;;;;;;;;;;;;465:1095:40;1119:52;;;;;;;465:1095;;;1119:52;;465:1095;;;;1119:52;;;465:1095;;;;;;;;;;;;;;;;;;;1119:52;;;;;;;;;;;;465:1095;;;1186:30;465:1095;;;;;;1186:30;465:1095;;;;;1119:52;;;;;:::i;:::-;465:1095;;1119:52;;;;465:1095;;;;;;;;;1119:52;465:1095;;;1791:105:31;;;;:::i;:::-;465:1095:40;;1791:105:31;;;;;465:1095:40;;;;;;;;;1791:105:31;465:1095:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1097:65:10;;:::i;:::-;465:1095:40;;;;;;;;;;2646:40:10;;;;465:1095:40;;;;;;;;;;;;;;;;;;712:31:31;465:1095:40;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1097:65:10;;:::i;:::-;465:1095:40;;;2746:6:31;465:1095:40;;2746:32:31;;;;;;465:1095:40;;;;;2746:32:31;;;;;465:1095:40;2746:32:31;;465:1095:40;2746:32:31;;;465:1095:40;2746:32:31;;;;;;;;;;465:1095:40;;;2746:32:31;;;;:::i;:::-;465:1095:40;;2746:32:31;465:1095:40;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;1408:132:10:-;465:1095:40;1316:6:10;465:1095:40;;736:10:21;1472:23:10;465:1095:40;;1408:132:10:o;465:1095:40:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;465:1095:40;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"ERC1155SaleDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beacon\",\"outputs\":[{\"internalType\":\"contract UpgradeableBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"items\",\"type\":\"address\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"items\",\"type\":\"address\"}],\"name\":\"determineAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgradeBeacon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ERC1155SaleDeployed(address)\":{\"params\":{\"proxyAddr\":\"The address of the deployed proxy.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"factoryOwner\":\"The owner of the ERC-1155 Sale Factory\"}},\"deploy(address,address,address)\":{\"params\":{\"items\":\"The ERC-1155 Items contract address\",\"proxyOwner\":\"The owner of the ERC-1155 Sale proxy\",\"tokenOwner\":\"The owner of the ERC-1155 Sale implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-1155 Sale Proxy\"}},\"determineAddress(address,address,address)\":{\"params\":{\"items\":\"The ERC-1155 Items contract address\",\"proxyOwner\":\"The owner of the ERC-1155 Sale proxy\",\"tokenOwner\":\"The owner of the ERC-1155 Sale implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-1155 Sale Proxy\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeBeacon(address)\":{\"params\":{\"implementation\":\"The new beacon implementation.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ERC1155SaleDeployed(address)\":{\"notice\":\"Event emitted when a new ERC-1155 Sale proxy contract is deployed.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Creates an ERC-1155 Sale Factory.\"},\"deploy(address,address,address)\":{\"notice\":\"Creates an ERC-1155 Sale proxy contractThe deployed contract must be granted the MINTER_ROLE on the ERC-1155 Items contract.\"},\"determineAddress(address,address,address)\":{\"notice\":\"Computes the address of a proxy instance.\"},\"upgradeBeacon(address)\":{\"notice\":\"Upgrades the beacon implementation.\"}},\"notice\":\"Deployer of ERC-1155 Sale proxies.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/utility/sale/ERC1155SaleFactory.sol\":\"ERC1155SaleFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol\":{\"keccak256\":\"0x73a4ea88c195262c79aed1a8ad6da1e599e0ebe3911a89014e410dae6debda74\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7d9f63f1c107c912620de676785b876f798f1563fee4fee897d45012daf52131\",\"dweb:/ipfs/QmQTvyVSZCUYjjo95yGgQgQvKzTBhb9fRbuzKvpmP5v5aQ\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155TokenReceiver.sol\":{\"keccak256\":\"0x57f55a58438703c015af414f008886d084701600e11854507b58dbfe03f68d1c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9a7c1b88eb303ae45ef2d7c5cf2e8ff1870c171e5da335e10b3def73643ba407\",\"dweb:/ipfs/Qmf1hy4w1aUiWeQdrhRmnYvVtoX8LxnsofaZrFVscyTG5m\"]},\"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x359dd5b562d92d14d90c4b26d4e896097d3be26a5808b0de02847748deedf11f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8ba7d8ac2f1f460aa2c43569230a7cc7917bdc2b88770c86a7e3527253e9eff2\",\"dweb:/ipfs/QmSRrPYSpzBZ45p7QHTzv4F4yoQChscUMFT5S4CjrTto9b\"]},\"lib/0xsequence/erc-1155/src/contracts/tokens/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xd63401796d39b616a10e5fd6e4666334299662daa330361081148eb324c82151\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://be1aa71575f7bf6f3c86285718c92ba83ce389ed77ae3782f1a79a49744e1729\",\"dweb:/ipfs/QmR7aU2QMfiFy7n6twDFQ5HBU768Dgd3ip4dJWnQEWsn73\"]},\"lib/0xsequence/erc-1155/src/contracts/utils/Address.sol\":{\"keccak256\":\"0x7dc1dd8c068d2da9a5fc7c897fcf4a48bd6c91834893c4ccdfe77c87ab86db2a\",\"urls\":[\"bzz-raw://b9267a6818b5400198ce2a3e5ca5e499617114131bd4c4b4690d0db523d6d28f\",\"dweb:/ipfs/QmbVFNcUMqR9gRPtFG9s8Y6PHLyLy8XhD8BfosmQo6aFuc\"]},\"lib/0xsequence/erc-1155/src/contracts/utils/ERC165.sol\":{\"keccak256\":\"0xf6539008743bf7ed5d8db655ed4075f433e01be8836a22b94182ec25097044c6\",\"urls\":[\"bzz-raw://3a90fa04f645b202907cf5ae62aaafaaf4a0d4d8059d5723aea8d6e306cdaf97\",\"dweb:/ipfs/QmR1EJr8FEUhpMCMgYtDeZoPokFC8trTDwMz886PwH3D9W\"]},\"lib/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0f0d782ed5bf917dec0c8d571f87c753dc6417eb9f82b69e12532623359b6dc8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d927133d9b4aad2dd21541a6a6ddab98c4f8500b47705dfac95aecc42c0cac9f\",\"dweb:/ipfs/QmdT2VUZP41p4vjrSqyuwUttrZtm3koWdwkuakfebwvcdk\"]},\"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x983a2c33837361f7fdbe66b7f314366a49fef2cd746ab4f2687c5dcd55139459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839896b430e9067837e6536f5bb175510e9af187b860deb1936f5f33cd2cf9fa\",\"dweb:/ipfs/QmUB1cEFBAUkXEkqGZSVxQEuTU4bNvtj4XoLkotYqcsy4c\"]},\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x0b56404e790f707db5050025dc791c21b785797824efaaf28e6613444408ac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2e606d98a2460b229dffb2eefb5417e8c3c5722cd509fb0700485d92d02b8c4\",\"dweb:/ipfs/QmXhJJ2FzxHZNtGXoif5QwBv1SCEgh866AxuUzUFCuHmSF\"]},\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x806cc5a67c785703de4860098eb715dbc80af228b8c2dfaf4d17ee7ef7c4d0d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c200c036fa58f1f9a53ac543a4d357f372c3186b2accedafb0962ed973cf22d5\",\"dweb:/ipfs/QmeuoGikK8eGhSgNFTzKtpxmkTaKXS94NTktKTAs42ZxPT\"]},\"lib/openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x4633b6a38670e3a7c8d4ad3d6aeb4e032769280c610062fa54a8c4223285e3a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35b181e2f012fef4823cad21ff9fcd438f20a2b866576b8995fbb4ef79d1fbf3\",\"dweb:/ipfs/QmQfTeengc1M1g1RVA15Wr1oM54eB9x9V3XXeMHRVCAHCA\"]},\"lib/openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x82ff8ec61a18937d9fce0d2323e3df9becb6e902ed9a569dd88dbb0e9d0b139d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf4275cab5565b8edbbe58bb67af31d859e484a896350474c2988f0ffa604c17\",\"dweb:/ipfs/QmVVCAFt3pMfYDJSYKWtDt8GGqgzFaLM4yPDtWwZ11kRPy\"]},\"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xe768c5863db91751a70d25c9dac899ec5078c6bacfbc02878652e454aa416b9e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f27eb11dc6c2673a2de564ab994bbe71c96c184a4ab77529ba0c3a25059a31a\",\"dweb:/ipfs/QmP5XhZTawPqVHz9L5qfAQbrKvTBYHPudyynAyVoBm2vmd\"]},\"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x7ad0b955ed534d2d248125ec376b5159da3039fd5d502cf19565bd07f6b2a4a7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e297f6a8bad38c4d43c62dbd8cc6ff3527b10df1d5d9f9210e1f35ed547fc80e\",\"dweb:/ipfs/QmRAazJw6rbaAa6frASjvg4JeW9y7bmnSvsvtchw8NDcdi\"]},\"lib/openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x62c6b919abeeb4c9146ffbb325fc03b5f2d55a29b8e719b8ff62daab48123565\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://296143200e46ef2d62d089f9e7be424ebd49c37ab44c7ac24da3c2c89a0226d5\",\"dweb:/ipfs/Qmd3g6y6MU3Udk2z7onjyVdifjTANp7CvFYkJNGGQBDBvB\"]},\"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd3effc3ce6d1c85e1aae2ba5c6f28434c2eef52e1fc48b15096a176dcfee5853\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8203f1a5eebff83ed1c75be70af0d00acb5b1b1e54e0b8805097f8fb052e7780\",\"dweb:/ipfs/QmNzyWV5FxBGX1Djh2LJ89bpZMPfsQ2nck8DL8VaFf6UkJ\"]},\"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x96d52f844533def4977d87f5b21e2352a27d8796ea9bf11a4a44691cae275de8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad7f20ead8ceb4bde382271d7303432d514dde18173ffee542a66509227f1740\",\"dweb:/ipfs/QmWR6DmXsF3BTnaSLcA87aepLXHqM4MwdeRi9SvnWwfxKw\"]},\"lib/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"lib/openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x965112323305082223ae22da6b1b15d98560f749d75ff43639ca2d427e136d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://223e25441501ad9372e21aa897460cb07b05e25c534865068767ca9dd7d7bfdf\",\"dweb:/ipfs/QmWKFG8zyL2gvohAoJY6y3ncAMGrwCxoqR5iQ2Sq7xdW2H\"]},\"lib/openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xdacd8902db78d5c80a8860b2dd87e1a725201d2b1936343e3e21649751a60dba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d1eede17bc7ee5245a3b55e873cd59b3d6cbb8fed76cb957a403403f84daa5e\",\"dweb:/ipfs/QmbHGiRxPVRCvu91UpPBKU5b4MrEvqKxHPiPrPpQxyg1LK\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0xff39e9a09fe168b6247c2f655cc9fede97483c9afc0956a0aa6b5dfdaac2eead\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb53ed588b2f49728d4e41c1ff082d0e92221a76ce81aca0aaa627856ed6f4fb\",\"dweb:/ipfs/QmV8vkSqXZ3DMZB9n4nzV6QNnAsxAH4kCqZRnXJt3iEXMp\"]},\"lib/openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xc0ed4a90861f5d2872ce5fb72a615d76f918b862f3c26c3a93984ede9b7bf2f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd97d510de6b61ac633cd2dc296d4e55bcb9ca925facd2d0f31b1063d42248e7\",\"dweb:/ipfs/QmWCCjACsvJTHSDBd6UGT3ShjKYLYgQM23KPf4uqb23txT\"]},\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x33f6273d816d8dda817520535e972be165eb8615679a199f2487c982361556dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe73e94e894c07a4497e0e18ca12caf4519f556a4222263a0927b948e20ab961\",\"dweb:/ipfs/QmSeCmKR3cskrRMs6u9PTXLc5webpzLkuccGoBCcQFyfLX\"]},\"lib/openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6a28e93bdbdd829c48a6f03438fff50e10527649d69d5561386cd39e6d70f2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://989f0d81b7bc6989de0a8a2ddb063deaf8b95a85c6169658a9c8769a4d725a8a\",\"dweb:/ipfs/QmcWc1KLSL3tHPzXLacBQXC4bqDRDWiNb5BNAA9ft8jBEC\"]},\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd03a3a49fb1275da311e070f48c8ce3727e64e7a48a94b05687de68bbcf2f2d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://595bc042ece34bb3c2176c1b594e7e66b20e138200a9eb1c57c6666c6d3aa6a3\",\"dweb:/ipfs/QmUWFovxqWUjNWgbCNvY2Ug1jvrwrtCRNJ5q21puGKLzix\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7b249694790ca2ae6a813e28025e0ebb9bccb5940a6cba637911fd9c17012055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2431f8875ede10b23dee66740a19fb1b2aa7cf57ea8430e7bce97be414c58748\",\"dweb:/ipfs/QmbCvNgrYi2kk7wBKJkwyRRrbwabhoxaNJjyK5frPkNvng\"]},\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xdfbaff50ab3641233a7e63eed90c369bc54da2be0a5c8aa580f47bbb975b7419\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cd4d33f4432d2fa3853e86cdac547dd095500a9e4296ba0da357ffb5d7f4945\",\"dweb:/ipfs/QmYuAHhTFRDahKcpcPwA7j6moUwzSCkGmD18zNAUmihvk8\"]},\"src/proxies/SequenceProxyFactory.sol\":{\"keccak256\":\"0x263347655a632136e3dabcc6e49da7fb9fa5b62a4f1e9eeed3cdd74234c81c53\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f41dc2c95c5d793105ed53f9ae9adea5a00264be78d86bf4f26cca6d33b7141\",\"dweb:/ipfs/QmfP1T4HDdDWYNFxMGHMeaq6owWmNdGjDMrh6hN3in2GVW\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0x366f201163ff5b941a61d5d2cd5966f25e332f52b197335cb68670c5fc83ba12\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://485725a0c56e49d07de7233293e85fe1a586ddd70b07f1b14af5819874819da9\",\"dweb:/ipfs/QmRgQV9yzosT37zGpg6wb6Ff7q8Ux4Ttryo1RdPWaAfAED\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x3907d8357cedb6e7906cbb21064574ff743a4bf0733ab58e674d7e6cef10de56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cac9b985792d4dfe1a3e719042e808e712c7085e1eb13325b481b4ef883a174\",\"dweb:/ipfs/QmVY6wZePtoiH5ThPKEkpgoLzynBfUS3TU7q8PdW8FceLM\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x5b093fbf518deae96d0edcd7ac91f9ab8aa045ebfd431b2f95aec70f53d51a2e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf219eb90ffa4adc944a692b25629a0c9431ffaf79886b4e63f7b132cc4ada5\",\"dweb:/ipfs/QmUyoRnon429vS2VjMPS3sv9xpAVv7LMoiwyuhCUShjrBD\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x8e91e3e9744505befedac9e8e43963c7fec0ae23988e3cdf57c24ba5c040f216\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e1742bdec46a0d69d5c5db792851b169c78dc69cb15ab6d44fa8d2c16dc23f86\",\"dweb:/ipfs/QmbThcTw5cdeDPrMq8mTsyrE1QPo2C2BJ8igsXuNX87Z5v\"]},\"src/tokens/ERC1155/extensions/supply/ERC1155Supply.sol\":{\"keccak256\":\"0x2cb9d8c072fb859e28509c60af94f9840da83c4b614d77b28f75f842f10d2fe4\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://618bab091bb3430018eb02464726590e9024fba6fa56e3b6c47e6576e41afb06\",\"dweb:/ipfs/QmQcdpB6FnjLfC8TLdZ3SY12U8xXiVcspdJAn6U4DPvAZm\"]},\"src/tokens/ERC1155/extensions/supply/IERC1155Supply.sol\":{\"keccak256\":\"0x81c6bf21a67e48051903a81a0c47e8fe6bc460d3ab2ddf162e6c97d291920e1b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://9e40d3079c7057695fc66672af76664c30d50c430f38fa14f0586adfa68307b5\",\"dweb:/ipfs/QmR3mkENLcdShgvtE4ttCwTdYe463rSy8kw5SuN2ziBPyC\"]},\"src/tokens/ERC1155/presets/items/IERC1155Items.sol\":{\"keccak256\":\"0xf8cd490ce1704d9013cc60f5579f49d5a4ecf2922c26954d17d4c32cbcb0058b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7f6fd6deee96e8ffbf2a7cbb7eae4d2f83c72f9d99125eca399875463007221\",\"dweb:/ipfs/QmPtdhaAUmBC6vBxfrtjAXdjHUhLMZcFabsQ3JCh7xJVcq\"]},\"src/tokens/ERC1155/utility/sale/ERC1155Sale.sol\":{\"keccak256\":\"0xfd72b53e9efc68f1f1ff0ca8b7fecc7f5665d6ee456e3d94cc8db8a6f0d20eb0\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://557c8cf1b248ba1761b8a29513e85a197cacd232e290236a180d06b7e9c3685b\",\"dweb:/ipfs/QmQ7tVBPpVHzKAaUVSShVNyuxVxkw7Fr8C1Ctj37Nap2Vu\"]},\"src/tokens/ERC1155/utility/sale/ERC1155SaleFactory.sol\":{\"keccak256\":\"0xab9d074c2d9bacbd48143ea7398824a4d75a3fe3e7171473df6a883824a193f3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://37705bb8610df7517c562b7605c6a4991225b15cdf36a836b7c556cf74d2caf1\",\"dweb:/ipfs/QmURajYKPmjsUmW31VGQ6N6an1G9qr6jf5qHssppADYxeL\"]},\"src/tokens/ERC1155/utility/sale/IERC1155Sale.sol\":{\"keccak256\":\"0xca67dc8dd657afeff4744e23c4714e72fec499b389a56c067dd33c25d58164c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f3fc2253856879407476229dda679462233b8a489d7fa47be37be9c5c6bf354\",\"dweb:/ipfs/QmS5X9bHqDxJHMtPnsJ3Vgpx6HUhoKEA5nz3U8nYxiTP6F\"]},\"src/tokens/ERC1155/utility/sale/IERC1155SaleFactory.sol\":{\"keccak256\":\"0x0445c6ccb28501d56e6466906c79efccd532d98f25c558aa40faa403db72c223\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f7bedd8052325f6fd5ebc3b0ab6395643287507b09043ab835ba2733a9f811e\",\"dweb:/ipfs/QmeNj1hyoULkPbfbU7cyVBPyjUAFPsmaMJ6kXES76yNZXn\"]},\"src/tokens/common/IMerkleProofSingleUse.sol\":{\"keccak256\":\"0xca8dc555fe07c26f5fa54c18e6461c19b04ae947685782fe6bee443bdfb1177c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://21296ee7f267f754ed9e047267b183d53a31fb4aec6f1b69b6027b006759564a\",\"dweb:/ipfs/QmeVkPqRvCdHApSdrmU3yrX63YK5p363wU3qYUX3NbsJXL\"]},\"src/tokens/common/IWithdrawControlled.sol\":{\"keccak256\":\"0x8d55f80de0cdbf947013e3f35832ab772c225513192a812dc5d1eae9b4548a93\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://82985f653c64c2fc6f67206d6d415d9e1bd90d47ddf19fc9b5ecebaa6af86477\",\"dweb:/ipfs/QmdLgTsRF2T5AxoaWJUS1uEB4ByBbvLSZCrKot6r9x4ieV\"]},\"src/tokens/common/MerkleProofSingleUse.sol\":{\"keccak256\":\"0xa8920ea6f225f18c8c67412e37259b854311557845a8575f43a9ce07a7aa050c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9938f6791d4a696b8e4a127cafb2a2d631b3f156beeb399f87e6c3434bdf0e3\",\"dweb:/ipfs/QmWcAfZnob7HhmBcrS4LRzYiPqDZ48tcF8SKBhaU2BfWtJ\"]},\"src/tokens/common/WithdrawControlled.sol\":{\"keccak256\":\"0xddeb9a14185f4d0746a97b398b8219cc077e744fb85f821e2d1a32d52593b79b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://470a8fdb860bd26fa1b323cf56a7e97c3ffb5b07a24a368ef39302b018dbe4ee\",\"dweb:/ipfs/QmSbPUNMejWrgw3dkPd3gZpcebykQG5AmTaPjuHCgU4Dp6\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"ERC1155SaleDeployed(address)": {
								"notice": "Event emitted when a new ERC-1155 Sale proxy contract is deployed."
							}
						},
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Creates an ERC-1155 Sale Factory."
							},
							"deploy(address,address,address)": {
								"notice": "Creates an ERC-1155 Sale proxy contractThe deployed contract must be granted the MINTER_ROLE on the ERC-1155 Items contract."
							},
							"determineAddress(address,address,address)": {
								"notice": "Computes the address of a proxy instance."
							},
							"upgradeBeacon(address)": {
								"notice": "Upgrades the beacon implementation."
							}
						},
						"notice": "Deployer of ERC-1155 Sale proxies.",
						"version": 1
					}
				}
			},
			"src/tokens/ERC1155/utility/sale/IERC1155Sale.sol": {
				"IERC1155Sale": {
					"abi": [
						{
							"inputs": [],
							"name": "GlobalSaleInactive",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "expected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "actual",
									"type": "uint256"
								}
							],
							"name": "InsufficientPayment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "currentSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSupply",
									"type": "uint256"
								}
							],
							"name": "InsufficientSupply",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSaleDetails",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTokenIds",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "SaleInactive",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "supplyCap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "startTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "endTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRoot",
									"type": "bytes32"
								}
							],
							"name": "GlobalSaleDetailsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "supplyCap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "startTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "endTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRoot",
									"type": "bytes32"
								}
							],
							"name": "TokenSaleDetailsUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "globalSaleDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "cost",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "supplyCap",
											"type": "uint256"
										},
										{
											"internalType": "uint64",
											"name": "startTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "endTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										}
									],
									"internalType": "struct IERC1155SaleFunctions.SaleDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "paymentToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "maxTotal",
									"type": "uint256"
								},
								{
									"internalType": "bytes32[]",
									"name": "proof",
									"type": "bytes32[]"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paymentToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenSaleDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "cost",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "supplyCap",
											"type": "uint256"
										},
										{
											"internalType": "uint64",
											"name": "startTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "endTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										}
									],
									"internalType": "struct IERC1155SaleFunctions.SaleDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"InsufficientPayment(address,uint256,uint256)": [
								{
									"params": {
										"actual": "Actual amount of tokens.",
										"currency": "Currency address. address(0) indicates ETH.",
										"expected": "Expected amount of tokens."
									}
								}
							],
							"SaleInactive(uint256)": [
								{
									"params": {
										"tokenId": "Invalid Token ID."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"globalSaleDetails()": {
								"returns": {
									"_0": "Sale details."
								}
							},
							"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])": {
								"details": "tokenIds must be sorted ascending without duplicates.An empty proof is supplied when no proof is required.",
								"params": {
									"amounts": "Amounts of tokens to mint.",
									"data": "Data to pass if receiver is contract.",
									"maxTotal": "Maximum amount of payment tokens.",
									"paymentToken": "ERC20 token address to accept payment in. address(0) indicates ETH.",
									"proof": "Merkle proof for allowlist minting.",
									"to": "Address to mint tokens to.",
									"tokenIds": "Token IDs to mint."
								}
							},
							"paymentToken()": {
								"returns": {
									"_0": "Payment token address."
								}
							},
							"tokenSaleDetails(uint256)": {
								"params": {
									"tokenId": "Token ID to get sale details for."
								},
								"returns": {
									"_0": "Sale details."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"GlobalSaleInactive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"InsufficientPayment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"}],\"name\":\"InsufficientSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleDetails\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenIds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SaleInactive\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"GlobalSaleDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"TokenSaleDetailsUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"globalSaleDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IERC1155SaleFunctions.SaleDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTotal\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenSaleDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IERC1155SaleFunctions.SaleDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"InsufficientPayment(address,uint256,uint256)\":[{\"params\":{\"actual\":\"Actual amount of tokens.\",\"currency\":\"Currency address. address(0) indicates ETH.\",\"expected\":\"Expected amount of tokens.\"}}],\"SaleInactive(uint256)\":[{\"params\":{\"tokenId\":\"Invalid Token ID.\"}}]},\"kind\":\"dev\",\"methods\":{\"globalSaleDetails()\":{\"returns\":{\"_0\":\"Sale details.\"}},\"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])\":{\"details\":\"tokenIds must be sorted ascending without duplicates.An empty proof is supplied when no proof is required.\",\"params\":{\"amounts\":\"Amounts of tokens to mint.\",\"data\":\"Data to pass if receiver is contract.\",\"maxTotal\":\"Maximum amount of payment tokens.\",\"paymentToken\":\"ERC20 token address to accept payment in. address(0) indicates ETH.\",\"proof\":\"Merkle proof for allowlist minting.\",\"to\":\"Address to mint tokens to.\",\"tokenIds\":\"Token IDs to mint.\"}},\"paymentToken()\":{\"returns\":{\"_0\":\"Payment token address.\"}},\"tokenSaleDetails(uint256)\":{\"params\":{\"tokenId\":\"Token ID to get sale details for.\"},\"returns\":{\"_0\":\"Sale details.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"GlobalSaleInactive()\":[{\"notice\":\"Sale is not active globally.\"}],\"InsufficientPayment(address,uint256,uint256)\":[{\"notice\":\"Insufficient tokens for payment.\"}],\"InsufficientSupply(uint256,uint256,uint256)\":[{\"notice\":\"Insufficient supply of tokens.\"}],\"InvalidInitialization()\":[{\"notice\":\"Contract already initialized.\"}],\"InvalidSaleDetails()\":[{\"notice\":\"Sale details supplied are invalid.\"}],\"InvalidTokenIds()\":[{\"notice\":\"Invalid token IDs.\"}],\"SaleInactive(uint256)\":[{\"notice\":\"Sale is not active.\"}]},\"kind\":\"user\",\"methods\":{\"globalSaleDetails()\":{\"notice\":\"Get global sales details.Global sales details apply to all tokens.Global sales details are overriden when token sale is active.\"},\"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])\":{\"notice\":\"Mint tokens.Sale must be active for all tokens.\"},\"paymentToken()\":{\"notice\":\"Get payment token.address(0) indicates payment in ETH.\"},\"tokenSaleDetails(uint256)\":{\"notice\":\"Get token sale details.Token sale details override global sale details.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/utility/sale/IERC1155Sale.sol\":\"IERC1155Sale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC1155/utility/sale/IERC1155Sale.sol\":{\"keccak256\":\"0xca67dc8dd657afeff4744e23c4714e72fec499b389a56c067dd33c25d58164c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f3fc2253856879407476229dda679462233b8a489d7fa47be37be9c5c6bf354\",\"dweb:/ipfs/QmS5X9bHqDxJHMtPnsJ3Vgpx6HUhoKEA5nz3U8nYxiTP6F\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"GlobalSaleInactive()": [
								{
									"notice": "Sale is not active globally."
								}
							],
							"InsufficientPayment(address,uint256,uint256)": [
								{
									"notice": "Insufficient tokens for payment."
								}
							],
							"InsufficientSupply(uint256,uint256,uint256)": [
								{
									"notice": "Insufficient supply of tokens."
								}
							],
							"InvalidInitialization()": [
								{
									"notice": "Contract already initialized."
								}
							],
							"InvalidSaleDetails()": [
								{
									"notice": "Sale details supplied are invalid."
								}
							],
							"InvalidTokenIds()": [
								{
									"notice": "Invalid token IDs."
								}
							],
							"SaleInactive(uint256)": [
								{
									"notice": "Sale is not active."
								}
							]
						},
						"kind": "user",
						"methods": {
							"globalSaleDetails()": {
								"notice": "Get global sales details.Global sales details apply to all tokens.Global sales details are overriden when token sale is active."
							},
							"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])": {
								"notice": "Mint tokens.Sale must be active for all tokens."
							},
							"paymentToken()": {
								"notice": "Get payment token.address(0) indicates payment in ETH."
							},
							"tokenSaleDetails(uint256)": {
								"notice": "Get token sale details.Token sale details override global sale details."
							}
						},
						"version": 1
					}
				},
				"IERC1155SaleFunctions": {
					"abi": [
						{
							"inputs": [],
							"name": "globalSaleDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "cost",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "supplyCap",
											"type": "uint256"
										},
										{
											"internalType": "uint64",
											"name": "startTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "endTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										}
									],
									"internalType": "struct IERC1155SaleFunctions.SaleDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "address",
									"name": "paymentToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "maxTotal",
									"type": "uint256"
								},
								{
									"internalType": "bytes32[]",
									"name": "proof",
									"type": "bytes32[]"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paymentToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenSaleDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "cost",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "supplyCap",
											"type": "uint256"
										},
										{
											"internalType": "uint64",
											"name": "startTime",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "endTime",
											"type": "uint64"
										},
										{
											"internalType": "bytes32",
											"name": "merkleRoot",
											"type": "bytes32"
										}
									],
									"internalType": "struct IERC1155SaleFunctions.SaleDetails",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"globalSaleDetails()": {
								"returns": {
									"_0": "Sale details."
								}
							},
							"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])": {
								"details": "tokenIds must be sorted ascending without duplicates.An empty proof is supplied when no proof is required.",
								"params": {
									"amounts": "Amounts of tokens to mint.",
									"data": "Data to pass if receiver is contract.",
									"maxTotal": "Maximum amount of payment tokens.",
									"paymentToken": "ERC20 token address to accept payment in. address(0) indicates ETH.",
									"proof": "Merkle proof for allowlist minting.",
									"to": "Address to mint tokens to.",
									"tokenIds": "Token IDs to mint."
								}
							},
							"paymentToken()": {
								"returns": {
									"_0": "Payment token address."
								}
							},
							"tokenSaleDetails(uint256)": {
								"params": {
									"tokenId": "Token ID to get sale details for."
								},
								"returns": {
									"_0": "Sale details."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"globalSaleDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IERC1155SaleFunctions.SaleDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTotal\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenSaleDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"internalType\":\"struct IERC1155SaleFunctions.SaleDetails\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"globalSaleDetails()\":{\"returns\":{\"_0\":\"Sale details.\"}},\"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])\":{\"details\":\"tokenIds must be sorted ascending without duplicates.An empty proof is supplied when no proof is required.\",\"params\":{\"amounts\":\"Amounts of tokens to mint.\",\"data\":\"Data to pass if receiver is contract.\",\"maxTotal\":\"Maximum amount of payment tokens.\",\"paymentToken\":\"ERC20 token address to accept payment in. address(0) indicates ETH.\",\"proof\":\"Merkle proof for allowlist minting.\",\"to\":\"Address to mint tokens to.\",\"tokenIds\":\"Token IDs to mint.\"}},\"paymentToken()\":{\"returns\":{\"_0\":\"Payment token address.\"}},\"tokenSaleDetails(uint256)\":{\"params\":{\"tokenId\":\"Token ID to get sale details for.\"},\"returns\":{\"_0\":\"Sale details.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"globalSaleDetails()\":{\"notice\":\"Get global sales details.Global sales details apply to all tokens.Global sales details are overriden when token sale is active.\"},\"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])\":{\"notice\":\"Mint tokens.Sale must be active for all tokens.\"},\"paymentToken()\":{\"notice\":\"Get payment token.address(0) indicates payment in ETH.\"},\"tokenSaleDetails(uint256)\":{\"notice\":\"Get token sale details.Token sale details override global sale details.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/utility/sale/IERC1155Sale.sol\":\"IERC1155SaleFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC1155/utility/sale/IERC1155Sale.sol\":{\"keccak256\":\"0xca67dc8dd657afeff4744e23c4714e72fec499b389a56c067dd33c25d58164c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f3fc2253856879407476229dda679462233b8a489d7fa47be37be9c5c6bf354\",\"dweb:/ipfs/QmS5X9bHqDxJHMtPnsJ3Vgpx6HUhoKEA5nz3U8nYxiTP6F\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"globalSaleDetails()": {
								"notice": "Get global sales details.Global sales details apply to all tokens.Global sales details are overriden when token sale is active."
							},
							"mint(address,uint256[],uint256[],bytes,address,uint256,bytes32[])": {
								"notice": "Mint tokens.Sale must be active for all tokens."
							},
							"paymentToken()": {
								"notice": "Get payment token.address(0) indicates payment in ETH."
							},
							"tokenSaleDetails(uint256)": {
								"notice": "Get token sale details.Token sale details override global sale details."
							}
						},
						"version": 1
					}
				},
				"IERC1155SaleSignals": {
					"abi": [
						{
							"inputs": [],
							"name": "GlobalSaleInactive",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "currency",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "expected",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "actual",
									"type": "uint256"
								}
							],
							"name": "InsufficientPayment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "currentSupply",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "maxSupply",
									"type": "uint256"
								}
							],
							"name": "InsufficientSupply",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidSaleDetails",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidTokenIds",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "SaleInactive",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "supplyCap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "startTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "endTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRoot",
									"type": "bytes32"
								}
							],
							"name": "GlobalSaleDetailsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "cost",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "supplyCap",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "startTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "endTime",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "merkleRoot",
									"type": "bytes32"
								}
							],
							"name": "TokenSaleDetailsUpdated",
							"type": "event"
						}
					],
					"devdoc": {
						"errors": {
							"InsufficientPayment(address,uint256,uint256)": [
								{
									"params": {
										"actual": "Actual amount of tokens.",
										"currency": "Currency address. address(0) indicates ETH.",
										"expected": "Expected amount of tokens."
									}
								}
							],
							"SaleInactive(uint256)": [
								{
									"params": {
										"tokenId": "Invalid Token ID."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"GlobalSaleInactive\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"currency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expected\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"actual\",\"type\":\"uint256\"}],\"name\":\"InsufficientPayment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSupply\",\"type\":\"uint256\"}],\"name\":\"InsufficientSupply\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSaleDetails\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTokenIds\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"SaleInactive\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"GlobalSaleDetailsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cost\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCap\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"}],\"name\":\"TokenSaleDetailsUpdated\",\"type\":\"event\"}],\"devdoc\":{\"errors\":{\"InsufficientPayment(address,uint256,uint256)\":[{\"params\":{\"actual\":\"Actual amount of tokens.\",\"currency\":\"Currency address. address(0) indicates ETH.\",\"expected\":\"Expected amount of tokens.\"}}],\"SaleInactive(uint256)\":[{\"params\":{\"tokenId\":\"Invalid Token ID.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"GlobalSaleInactive()\":[{\"notice\":\"Sale is not active globally.\"}],\"InsufficientPayment(address,uint256,uint256)\":[{\"notice\":\"Insufficient tokens for payment.\"}],\"InsufficientSupply(uint256,uint256,uint256)\":[{\"notice\":\"Insufficient supply of tokens.\"}],\"InvalidInitialization()\":[{\"notice\":\"Contract already initialized.\"}],\"InvalidSaleDetails()\":[{\"notice\":\"Sale details supplied are invalid.\"}],\"InvalidTokenIds()\":[{\"notice\":\"Invalid token IDs.\"}],\"SaleInactive(uint256)\":[{\"notice\":\"Sale is not active.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/utility/sale/IERC1155Sale.sol\":\"IERC1155SaleSignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC1155/utility/sale/IERC1155Sale.sol\":{\"keccak256\":\"0xca67dc8dd657afeff4744e23c4714e72fec499b389a56c067dd33c25d58164c3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f3fc2253856879407476229dda679462233b8a489d7fa47be37be9c5c6bf354\",\"dweb:/ipfs/QmS5X9bHqDxJHMtPnsJ3Vgpx6HUhoKEA5nz3U8nYxiTP6F\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"GlobalSaleInactive()": [
								{
									"notice": "Sale is not active globally."
								}
							],
							"InsufficientPayment(address,uint256,uint256)": [
								{
									"notice": "Insufficient tokens for payment."
								}
							],
							"InsufficientSupply(uint256,uint256,uint256)": [
								{
									"notice": "Insufficient supply of tokens."
								}
							],
							"InvalidInitialization()": [
								{
									"notice": "Contract already initialized."
								}
							],
							"InvalidSaleDetails()": [
								{
									"notice": "Sale details supplied are invalid."
								}
							],
							"InvalidTokenIds()": [
								{
									"notice": "Invalid token IDs."
								}
							],
							"SaleInactive(uint256)": [
								{
									"notice": "Sale is not active."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/ERC1155/utility/sale/IERC1155SaleFactory.sol": {
				"IERC1155SaleFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "ERC1155SaleDeployed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "items",
									"type": "address"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "items",
									"type": "address"
								}
							],
							"name": "determineAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ERC1155SaleDeployed(address)": {
								"params": {
									"proxyAddr": "The address of the deployed proxy."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"deploy(address,address,address)": {
								"params": {
									"items": "The ERC-1155 Items contract address",
									"proxyOwner": "The owner of the ERC-1155 Sale proxy",
									"tokenOwner": "The owner of the ERC-1155 Sale implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-1155 Sale Proxy"
								}
							},
							"determineAddress(address,address,address)": {
								"params": {
									"items": "The ERC-1155 Items contract address",
									"proxyOwner": "The owner of the ERC-1155 Sale proxy",
									"tokenOwner": "The owner of the ERC-1155 Sale implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-1155 Sale Proxy"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"ERC1155SaleDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"items\",\"type\":\"address\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"items\",\"type\":\"address\"}],\"name\":\"determineAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ERC1155SaleDeployed(address)\":{\"params\":{\"proxyAddr\":\"The address of the deployed proxy.\"}}},\"kind\":\"dev\",\"methods\":{\"deploy(address,address,address)\":{\"params\":{\"items\":\"The ERC-1155 Items contract address\",\"proxyOwner\":\"The owner of the ERC-1155 Sale proxy\",\"tokenOwner\":\"The owner of the ERC-1155 Sale implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-1155 Sale Proxy\"}},\"determineAddress(address,address,address)\":{\"params\":{\"items\":\"The ERC-1155 Items contract address\",\"proxyOwner\":\"The owner of the ERC-1155 Sale proxy\",\"tokenOwner\":\"The owner of the ERC-1155 Sale implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-1155 Sale Proxy\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ERC1155SaleDeployed(address)\":{\"notice\":\"Event emitted when a new ERC-1155 Sale proxy contract is deployed.\"}},\"kind\":\"user\",\"methods\":{\"deploy(address,address,address)\":{\"notice\":\"Creates an ERC-1155 Sale proxy contractThe deployed contract must be granted the MINTER_ROLE on the ERC-1155 Items contract.\"},\"determineAddress(address,address,address)\":{\"notice\":\"Computes the address of a proxy instance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/utility/sale/IERC1155SaleFactory.sol\":\"IERC1155SaleFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC1155/utility/sale/IERC1155SaleFactory.sol\":{\"keccak256\":\"0x0445c6ccb28501d56e6466906c79efccd532d98f25c558aa40faa403db72c223\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f7bedd8052325f6fd5ebc3b0ab6395643287507b09043ab835ba2733a9f811e\",\"dweb:/ipfs/QmeNj1hyoULkPbfbU7cyVBPyjUAFPsmaMJ6kXES76yNZXn\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"ERC1155SaleDeployed(address)": {
								"notice": "Event emitted when a new ERC-1155 Sale proxy contract is deployed."
							}
						},
						"kind": "user",
						"methods": {
							"deploy(address,address,address)": {
								"notice": "Creates an ERC-1155 Sale proxy contractThe deployed contract must be granted the MINTER_ROLE on the ERC-1155 Items contract."
							},
							"determineAddress(address,address,address)": {
								"notice": "Computes the address of a proxy instance."
							}
						},
						"version": 1
					}
				},
				"IERC1155SaleFactoryFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "items",
									"type": "address"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "items",
									"type": "address"
								}
							],
							"name": "determineAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"deploy(address,address,address)": {
								"params": {
									"items": "The ERC-1155 Items contract address",
									"proxyOwner": "The owner of the ERC-1155 Sale proxy",
									"tokenOwner": "The owner of the ERC-1155 Sale implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-1155 Sale Proxy"
								}
							},
							"determineAddress(address,address,address)": {
								"params": {
									"items": "The ERC-1155 Items contract address",
									"proxyOwner": "The owner of the ERC-1155 Sale proxy",
									"tokenOwner": "The owner of the ERC-1155 Sale implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-1155 Sale Proxy"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"items\",\"type\":\"address\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"items\",\"type\":\"address\"}],\"name\":\"determineAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deploy(address,address,address)\":{\"params\":{\"items\":\"The ERC-1155 Items contract address\",\"proxyOwner\":\"The owner of the ERC-1155 Sale proxy\",\"tokenOwner\":\"The owner of the ERC-1155 Sale implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-1155 Sale Proxy\"}},\"determineAddress(address,address,address)\":{\"params\":{\"items\":\"The ERC-1155 Items contract address\",\"proxyOwner\":\"The owner of the ERC-1155 Sale proxy\",\"tokenOwner\":\"The owner of the ERC-1155 Sale implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-1155 Sale Proxy\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy(address,address,address)\":{\"notice\":\"Creates an ERC-1155 Sale proxy contractThe deployed contract must be granted the MINTER_ROLE on the ERC-1155 Items contract.\"},\"determineAddress(address,address,address)\":{\"notice\":\"Computes the address of a proxy instance.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/utility/sale/IERC1155SaleFactory.sol\":\"IERC1155SaleFactoryFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC1155/utility/sale/IERC1155SaleFactory.sol\":{\"keccak256\":\"0x0445c6ccb28501d56e6466906c79efccd532d98f25c558aa40faa403db72c223\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f7bedd8052325f6fd5ebc3b0ab6395643287507b09043ab835ba2733a9f811e\",\"dweb:/ipfs/QmeNj1hyoULkPbfbU7cyVBPyjUAFPsmaMJ6kXES76yNZXn\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"deploy(address,address,address)": {
								"notice": "Creates an ERC-1155 Sale proxy contractThe deployed contract must be granted the MINTER_ROLE on the ERC-1155 Items contract."
							},
							"determineAddress(address,address,address)": {
								"notice": "Computes the address of a proxy instance."
							}
						},
						"version": 1
					}
				},
				"IERC1155SaleFactorySignals": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "ERC1155SaleDeployed",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"ERC1155SaleDeployed(address)": {
								"params": {
									"proxyAddr": "The address of the deployed proxy."
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"ERC1155SaleDeployed\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"ERC1155SaleDeployed(address)\":{\"params\":{\"proxyAddr\":\"The address of the deployed proxy.\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"ERC1155SaleDeployed(address)\":{\"notice\":\"Event emitted when a new ERC-1155 Sale proxy contract is deployed.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC1155/utility/sale/IERC1155SaleFactory.sol\":\"IERC1155SaleFactorySignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC1155/utility/sale/IERC1155SaleFactory.sol\":{\"keccak256\":\"0x0445c6ccb28501d56e6466906c79efccd532d98f25c558aa40faa403db72c223\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1f7bedd8052325f6fd5ebc3b0ab6395643287507b09043ab835ba2733a9f811e\",\"dweb:/ipfs/QmeNj1hyoULkPbfbU7cyVBPyjUAFPsmaMJ6kXES76yNZXn\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"ERC1155SaleDeployed(address)": {
								"notice": "Event emitted when a new ERC-1155 Sale proxy contract is deployed."
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/common/IMerkleProofSingleUse.sol": {
				"IMerkleProofSingleUse": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "root",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "proof",
									"type": "bytes32[]"
								},
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "MerkleProofInvalid",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "root",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "proof",
									"type": "bytes32[]"
								},
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "checkMerkleProof",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)": [
								{
									"params": {
										"addr": "Address to check.",
										"proof": "Merkle proof.",
										"root": "Merkle root.",
										"salt": "Salt used to generate the merkle leaf."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"checkMerkleProof(bytes32,bytes32[],address,bytes32)": {
								"params": {
									"addr": "Address to check.",
									"proof": "Merkle proof.",
									"root": "Merkle root.",
									"salt": "Salt used to generate the merkle leaf."
								},
								"returns": {
									"_0": "True if the proof is valid and has not yet been used by {addr}."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"MerkleProofInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"checkMerkleProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)\":[{\"params\":{\"addr\":\"Address to check.\",\"proof\":\"Merkle proof.\",\"root\":\"Merkle root.\",\"salt\":\"Salt used to generate the merkle leaf.\"}}]},\"kind\":\"dev\",\"methods\":{\"checkMerkleProof(bytes32,bytes32[],address,bytes32)\":{\"params\":{\"addr\":\"Address to check.\",\"proof\":\"Merkle proof.\",\"root\":\"Merkle root.\",\"salt\":\"Salt used to generate the merkle leaf.\"},\"returns\":{\"_0\":\"True if the proof is valid and has not yet been used by {addr}.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)\":[{\"notice\":\"Thrown when the merkle proof is invalid or has already been used.\"}]},\"kind\":\"user\",\"methods\":{\"checkMerkleProof(bytes32,bytes32[],address,bytes32)\":{\"notice\":\"Checks if the given merkle proof is valid.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/IMerkleProofSingleUse.sol\":\"IMerkleProofSingleUse\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/common/IMerkleProofSingleUse.sol\":{\"keccak256\":\"0xca8dc555fe07c26f5fa54c18e6461c19b04ae947685782fe6bee443bdfb1177c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://21296ee7f267f754ed9e047267b183d53a31fb4aec6f1b69b6027b006759564a\",\"dweb:/ipfs/QmeVkPqRvCdHApSdrmU3yrX63YK5p363wU3qYUX3NbsJXL\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)": [
								{
									"notice": "Thrown when the merkle proof is invalid or has already been used."
								}
							]
						},
						"kind": "user",
						"methods": {
							"checkMerkleProof(bytes32,bytes32[],address,bytes32)": {
								"notice": "Checks if the given merkle proof is valid."
							}
						},
						"version": 1
					}
				},
				"IMerkleProofSingleUseFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "root",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "proof",
									"type": "bytes32[]"
								},
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "checkMerkleProof",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"checkMerkleProof(bytes32,bytes32[],address,bytes32)": {
								"params": {
									"addr": "Address to check.",
									"proof": "Merkle proof.",
									"root": "Merkle root.",
									"salt": "Salt used to generate the merkle leaf."
								},
								"returns": {
									"_0": "True if the proof is valid and has not yet been used by {addr}."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"checkMerkleProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"checkMerkleProof(bytes32,bytes32[],address,bytes32)\":{\"params\":{\"addr\":\"Address to check.\",\"proof\":\"Merkle proof.\",\"root\":\"Merkle root.\",\"salt\":\"Salt used to generate the merkle leaf.\"},\"returns\":{\"_0\":\"True if the proof is valid and has not yet been used by {addr}.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkMerkleProof(bytes32,bytes32[],address,bytes32)\":{\"notice\":\"Checks if the given merkle proof is valid.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/IMerkleProofSingleUse.sol\":\"IMerkleProofSingleUseFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/common/IMerkleProofSingleUse.sol\":{\"keccak256\":\"0xca8dc555fe07c26f5fa54c18e6461c19b04ae947685782fe6bee443bdfb1177c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://21296ee7f267f754ed9e047267b183d53a31fb4aec6f1b69b6027b006759564a\",\"dweb:/ipfs/QmeVkPqRvCdHApSdrmU3yrX63YK5p363wU3qYUX3NbsJXL\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"checkMerkleProof(bytes32,bytes32[],address,bytes32)": {
								"notice": "Checks if the given merkle proof is valid."
							}
						},
						"version": 1
					}
				},
				"IMerkleProofSingleUseSignals": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "root",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "proof",
									"type": "bytes32[]"
								},
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "MerkleProofInvalid",
							"type": "error"
						}
					],
					"devdoc": {
						"errors": {
							"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)": [
								{
									"params": {
										"addr": "Address to check.",
										"proof": "Merkle proof.",
										"root": "Merkle root.",
										"salt": "Salt used to generate the merkle leaf."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"MerkleProofInvalid\",\"type\":\"error\"}],\"devdoc\":{\"errors\":{\"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)\":[{\"params\":{\"addr\":\"Address to check.\",\"proof\":\"Merkle proof.\",\"root\":\"Merkle root.\",\"salt\":\"Salt used to generate the merkle leaf.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)\":[{\"notice\":\"Thrown when the merkle proof is invalid or has already been used.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/IMerkleProofSingleUse.sol\":\"IMerkleProofSingleUseSignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/common/IMerkleProofSingleUse.sol\":{\"keccak256\":\"0xca8dc555fe07c26f5fa54c18e6461c19b04ae947685782fe6bee443bdfb1177c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://21296ee7f267f754ed9e047267b183d53a31fb4aec6f1b69b6027b006759564a\",\"dweb:/ipfs/QmeVkPqRvCdHApSdrmU3yrX63YK5p363wU3qYUX3NbsJXL\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)": [
								{
									"notice": "Thrown when the merkle proof is invalid or has already been used."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/common/IWithdrawControlled.sol": {
				"IWithdrawControlled": {
					"abi": [
						{
							"inputs": [],
							"name": "WithdrawFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "withdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"withdrawERC20(address,address,uint256)": {
								"params": {
									"to": "Address to withdraw to.",
									"token": "The ERC20 token address.",
									"value": "Amount to withdraw."
								}
							},
							"withdrawETH(address,uint256)": {
								"params": {
									"to": "Address to withdraw to.",
									"value": "Amount to withdraw."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WithdrawFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"withdrawERC20(address,address,uint256)\":{\"params\":{\"to\":\"Address to withdraw to.\",\"token\":\"The ERC20 token address.\",\"value\":\"Amount to withdraw.\"}},\"withdrawETH(address,uint256)\":{\"params\":{\"to\":\"Address to withdraw to.\",\"value\":\"Amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"WithdrawFailed()\":[{\"notice\":\"Withdraw failed error.\"}]},\"kind\":\"user\",\"methods\":{\"withdrawERC20(address,address,uint256)\":{\"notice\":\"Withdraws ERC20 tokens owned by this contract.\"},\"withdrawETH(address,uint256)\":{\"notice\":\"Withdraws ETH owned by this sale contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/IWithdrawControlled.sol\":\"IWithdrawControlled\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/common/IWithdrawControlled.sol\":{\"keccak256\":\"0x8d55f80de0cdbf947013e3f35832ab772c225513192a812dc5d1eae9b4548a93\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://82985f653c64c2fc6f67206d6d415d9e1bd90d47ddf19fc9b5ecebaa6af86477\",\"dweb:/ipfs/QmdLgTsRF2T5AxoaWJUS1uEB4ByBbvLSZCrKot6r9x4ieV\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"WithdrawFailed()": [
								{
									"notice": "Withdraw failed error."
								}
							]
						},
						"kind": "user",
						"methods": {
							"withdrawERC20(address,address,uint256)": {
								"notice": "Withdraws ERC20 tokens owned by this contract."
							},
							"withdrawETH(address,uint256)": {
								"notice": "Withdraws ETH owned by this sale contract."
							}
						},
						"version": 1
					}
				},
				"IWithdrawControlledFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "withdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"withdrawERC20(address,address,uint256)": {
								"params": {
									"to": "Address to withdraw to.",
									"token": "The ERC20 token address.",
									"value": "Amount to withdraw."
								}
							},
							"withdrawETH(address,uint256)": {
								"params": {
									"to": "Address to withdraw to.",
									"value": "Amount to withdraw."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"withdrawERC20(address,address,uint256)\":{\"params\":{\"to\":\"Address to withdraw to.\",\"token\":\"The ERC20 token address.\",\"value\":\"Amount to withdraw.\"}},\"withdrawETH(address,uint256)\":{\"params\":{\"to\":\"Address to withdraw to.\",\"value\":\"Amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"withdrawERC20(address,address,uint256)\":{\"notice\":\"Withdraws ERC20 tokens owned by this contract.\"},\"withdrawETH(address,uint256)\":{\"notice\":\"Withdraws ETH owned by this sale contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/IWithdrawControlled.sol\":\"IWithdrawControlledFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/common/IWithdrawControlled.sol\":{\"keccak256\":\"0x8d55f80de0cdbf947013e3f35832ab772c225513192a812dc5d1eae9b4548a93\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://82985f653c64c2fc6f67206d6d415d9e1bd90d47ddf19fc9b5ecebaa6af86477\",\"dweb:/ipfs/QmdLgTsRF2T5AxoaWJUS1uEB4ByBbvLSZCrKot6r9x4ieV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"withdrawERC20(address,address,uint256)": {
								"notice": "Withdraws ERC20 tokens owned by this contract."
							},
							"withdrawETH(address,uint256)": {
								"notice": "Withdraws ETH owned by this sale contract."
							}
						},
						"version": 1
					}
				},
				"IWithdrawControlledSignals": {
					"abi": [
						{
							"inputs": [],
							"name": "WithdrawFailed",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WithdrawFailed\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"WithdrawFailed()\":[{\"notice\":\"Withdraw failed error.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/IWithdrawControlled.sol\":\"IWithdrawControlledSignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"src/tokens/common/IWithdrawControlled.sol\":{\"keccak256\":\"0x8d55f80de0cdbf947013e3f35832ab772c225513192a812dc5d1eae9b4548a93\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://82985f653c64c2fc6f67206d6d415d9e1bd90d47ddf19fc9b5ecebaa6af86477\",\"dweb:/ipfs/QmdLgTsRF2T5AxoaWJUS1uEB4ByBbvLSZCrKot6r9x4ieV\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"WithdrawFailed()": [
								{
									"notice": "Withdraw failed error."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/common/MerkleProofSingleUse.sol": {
				"MerkleProofSingleUse": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "root",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "proof",
									"type": "bytes32[]"
								},
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "MerkleProofInvalid",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "root",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32[]",
									"name": "proof",
									"type": "bytes32[]"
								},
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "salt",
									"type": "bytes32"
								}
							],
							"name": "checkMerkleProof",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)": [
								{
									"params": {
										"addr": "Address to check.",
										"proof": "Merkle proof.",
										"root": "Merkle root.",
										"salt": "Salt used to generate the merkle leaf."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {
							"checkMerkleProof(bytes32,bytes32[],address,bytes32)": {
								"params": {
									"addr": "Address to check.",
									"proof": "Merkle proof.",
									"root": "Merkle root.",
									"salt": "Salt used to generate the merkle leaf."
								},
								"returns": {
									"_0": "True if the proof is valid and has not yet been used by {addr}."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"MerkleProofInvalid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"root\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32[]\",\"name\":\"proof\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"}],\"name\":\"checkMerkleProof\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)\":[{\"params\":{\"addr\":\"Address to check.\",\"proof\":\"Merkle proof.\",\"root\":\"Merkle root.\",\"salt\":\"Salt used to generate the merkle leaf.\"}}]},\"kind\":\"dev\",\"methods\":{\"checkMerkleProof(bytes32,bytes32[],address,bytes32)\":{\"params\":{\"addr\":\"Address to check.\",\"proof\":\"Merkle proof.\",\"root\":\"Merkle root.\",\"salt\":\"Salt used to generate the merkle leaf.\"},\"returns\":{\"_0\":\"True if the proof is valid and has not yet been used by {addr}.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)\":[{\"notice\":\"Thrown when the merkle proof is invalid or has already been used.\"}]},\"kind\":\"user\",\"methods\":{\"checkMerkleProof(bytes32,bytes32[],address,bytes32)\":{\"notice\":\"Checks if the given merkle proof is valid.\"}},\"notice\":\"Require single use merkle proofs per address.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/MerkleProofSingleUse.sol\":\"MerkleProofSingleUse\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0x6a28e93bdbdd829c48a6f03438fff50e10527649d69d5561386cd39e6d70f2ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://989f0d81b7bc6989de0a8a2ddb063deaf8b95a85c6169658a9c8769a4d725a8a\",\"dweb:/ipfs/QmcWc1KLSL3tHPzXLacBQXC4bqDRDWiNb5BNAA9ft8jBEC\"]},\"src/tokens/common/IMerkleProofSingleUse.sol\":{\"keccak256\":\"0xca8dc555fe07c26f5fa54c18e6461c19b04ae947685782fe6bee443bdfb1177c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://21296ee7f267f754ed9e047267b183d53a31fb4aec6f1b69b6027b006759564a\",\"dweb:/ipfs/QmeVkPqRvCdHApSdrmU3yrX63YK5p363wU3qYUX3NbsJXL\"]},\"src/tokens/common/MerkleProofSingleUse.sol\":{\"keccak256\":\"0xa8920ea6f225f18c8c67412e37259b854311557845a8575f43a9ce07a7aa050c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c9938f6791d4a696b8e4a127cafb2a2d631b3f156beeb399f87e6c3434bdf0e3\",\"dweb:/ipfs/QmWcAfZnob7HhmBcrS4LRzYiPqDZ48tcF8SKBhaU2BfWtJ\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"MerkleProofInvalid(bytes32,bytes32[],address,bytes32)": [
								{
									"notice": "Thrown when the merkle proof is invalid or has already been used."
								}
							]
						},
						"kind": "user",
						"methods": {
							"checkMerkleProof(bytes32,bytes32[],address,bytes32)": {
								"notice": "Checks if the given merkle proof is valid."
							}
						},
						"notice": "Require single use merkle proofs per address.",
						"version": 1
					}
				}
			},
			"src/tokens/common/WithdrawControlled.sol": {
				"WithdrawControlled": {
					"abi": [
						{
							"inputs": [],
							"name": "WithdrawFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "withdrawERC20",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"withdrawERC20(address,address,uint256)": {
								"params": {
									"to": "Address to withdraw to.",
									"token": "The ERC20 token address.",
									"value": "Amount to withdraw."
								}
							},
							"withdrawETH(address,uint256)": {
								"params": {
									"to": "Address to withdraw to.",
									"value": "Amount to withdraw."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WithdrawFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"withdrawERC20(address,address,uint256)\":{\"params\":{\"to\":\"Address to withdraw to.\",\"token\":\"The ERC20 token address.\",\"value\":\"Amount to withdraw.\"}},\"withdrawETH(address,uint256)\":{\"params\":{\"to\":\"Address to withdraw to.\",\"value\":\"Amount to withdraw.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"WithdrawFailed()\":[{\"notice\":\"Withdraw failed error.\"}]},\"kind\":\"user\",\"methods\":{\"withdrawERC20(address,address,uint256)\":{\"notice\":\"Withdraws ERC20 tokens owned by this contract.Only callable by an address with the withdraw role.\"},\"withdrawETH(address,uint256)\":{\"notice\":\"Withdraws ETH owned by this sale contract.Only callable by an address with the withdraw role.\"}},\"notice\":\"An abstract contract that allows ETH and ERC20 tokens stored in the contract to be withdrawn.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/WithdrawControlled.sol\":\"WithdrawControlled\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":0xsequence/=lib/0xsequence/\",\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=lib/0xsequence/erc-1155/src/\",\":@0xsequence/erc20-meta-token/=lib/0xsequence/erc20-meta-token/src/\",\":@openzeppelin/=lib/openzeppelin/\",\":chiru-labs/=lib/chiru-labs/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=lib/chiru-labs/erc721a-upgradeable/\",\":erc721a/=lib/chiru-labs/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin/\",\":solady/=lib/solady/src/\"],\"viaIR\":true},\"sources\":{\"lib/openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0f0d782ed5bf917dec0c8d571f87c753dc6417eb9f82b69e12532623359b6dc8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d927133d9b4aad2dd21541a6a6ddab98c4f8500b47705dfac95aecc42c0cac9f\",\"dweb:/ipfs/QmdT2VUZP41p4vjrSqyuwUttrZtm3koWdwkuakfebwvcdk\"]},\"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x983a2c33837361f7fdbe66b7f314366a49fef2cd746ab4f2687c5dcd55139459\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://839896b430e9067837e6536f5bb175510e9af187b860deb1936f5f33cd2cf9fa\",\"dweb:/ipfs/QmUB1cEFBAUkXEkqGZSVxQEuTU4bNvtj4XoLkotYqcsy4c\"]},\"lib/openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x0b56404e790f707db5050025dc791c21b785797824efaaf28e6613444408ac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2e606d98a2460b229dffb2eefb5417e8c3c5722cd509fb0700485d92d02b8c4\",\"dweb:/ipfs/QmXhJJ2FzxHZNtGXoif5QwBv1SCEgh866AxuUzUFCuHmSF\"]},\"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0x806cc5a67c785703de4860098eb715dbc80af228b8c2dfaf4d17ee7ef7c4d0d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c200c036fa58f1f9a53ac543a4d357f372c3186b2accedafb0962ed973cf22d5\",\"dweb:/ipfs/QmeuoGikK8eGhSgNFTzKtpxmkTaKXS94NTktKTAs42ZxPT\"]},\"lib/openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xa426add89e9b4785ddeeb07b4d9352b57de8b4cb314c8cb8f0d5898938bd8de9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09852a830ad29d33cfdf74e7035853c68e43e1a8c242b25db9d656a074a54e6d\",\"dweb:/ipfs/QmeRSfQwWr3vyP2uJxnjybtPYLMiD17E51d4eMhXQh93R1\"]},\"lib/openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x965112323305082223ae22da6b1b15d98560f749d75ff43639ca2d427e136d1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://223e25441501ad9372e21aa897460cb07b05e25c534865068767ca9dd7d7bfdf\",\"dweb:/ipfs/QmWKFG8zyL2gvohAoJY6y3ncAMGrwCxoqR5iQ2Sq7xdW2H\"]},\"lib/openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xdacd8902db78d5c80a8860b2dd87e1a725201d2b1936343e3e21649751a60dba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d1eede17bc7ee5245a3b55e873cd59b3d6cbb8fed76cb957a403403f84daa5e\",\"dweb:/ipfs/QmbHGiRxPVRCvu91UpPBKU5b4MrEvqKxHPiPrPpQxyg1LK\"]},\"lib/openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xe5bd3cc9d310d651b3c599a5b5bc94bdebb079ee085c8ad3bba4bffa255338b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf7adbcb88df4ca17a262387468a436c21ac601e0be84a64c69aa5b87c061670\",\"dweb:/ipfs/QmQSrVN1DnpqD3TrdN4aDZ6nhqCXD3Vg6rNiG87tZng2Qy\"]},\"lib/openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2\",\"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn\"]},\"lib/openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x33f6273d816d8dda817520535e972be165eb8615679a199f2487c982361556dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe73e94e894c07a4497e0e18ca12caf4519f556a4222263a0927b948e20ab961\",\"dweb:/ipfs/QmSeCmKR3cskrRMs6u9PTXLc5webpzLkuccGoBCcQFyfLX\"]},\"lib/openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x3d3fe7b1901114d50828f5c77ba7f09a2a6a65223620c837364d31b60e5982ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6751cee12592cb9c33be618057660d6c84cb0594bd0afa552009438e38d3dd02\",\"dweb:/ipfs/QmWq8SxNw4q6n1B8i9sFZVaodB6wrcyBPsKPWMsaUyCECH\"]},\"lib/openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x540685d7ece3faa56f38253270ff11b18e63949fb8659c408123b1874674492e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5474839e19e2571c52eae3aab1dc6e6edf2b20bbba9895f59db6594a2678a3d5\",\"dweb:/ipfs/QmVHocBeANMkq4TzVM7q9At5NSg1TEpT9D9vgJ5dGcvcPN\"]},\"lib/openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd03a3a49fb1275da311e070f48c8ce3727e64e7a48a94b05687de68bbcf2f2d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://595bc042ece34bb3c2176c1b594e7e66b20e138200a9eb1c57c6666c6d3aa6a3\",\"dweb:/ipfs/QmUWFovxqWUjNWgbCNvY2Ug1jvrwrtCRNJ5q21puGKLzix\"]},\"lib/openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x7b249694790ca2ae6a813e28025e0ebb9bccb5940a6cba637911fd9c17012055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2431f8875ede10b23dee66740a19fb1b2aa7cf57ea8430e7bce97be414c58748\",\"dweb:/ipfs/QmbCvNgrYi2kk7wBKJkwyRRrbwabhoxaNJjyK5frPkNvng\"]},\"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xdfbaff50ab3641233a7e63eed90c369bc54da2be0a5c8aa580f47bbb975b7419\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4cd4d33f4432d2fa3853e86cdac547dd095500a9e4296ba0da357ffb5d7f4945\",\"dweb:/ipfs/QmYuAHhTFRDahKcpcPwA7j6moUwzSCkGmD18zNAUmihvk8\"]},\"src/tokens/common/IWithdrawControlled.sol\":{\"keccak256\":\"0x8d55f80de0cdbf947013e3f35832ab772c225513192a812dc5d1eae9b4548a93\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://82985f653c64c2fc6f67206d6d415d9e1bd90d47ddf19fc9b5ecebaa6af86477\",\"dweb:/ipfs/QmdLgTsRF2T5AxoaWJUS1uEB4ByBbvLSZCrKot6r9x4ieV\"]},\"src/tokens/common/WithdrawControlled.sol\":{\"keccak256\":\"0xddeb9a14185f4d0746a97b398b8219cc077e744fb85f821e2d1a32d52593b79b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://470a8fdb860bd26fa1b323cf56a7e97c3ffb5b07a24a368ef39302b018dbe4ee\",\"dweb:/ipfs/QmSbPUNMejWrgw3dkPd3gZpcebykQG5AmTaPjuHCgU4Dp6\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"WithdrawFailed()": [
								{
									"notice": "Withdraw failed error."
								}
							]
						},
						"kind": "user",
						"methods": {
							"withdrawERC20(address,address,uint256)": {
								"notice": "Withdraws ERC20 tokens owned by this contract.Only callable by an address with the withdraw role."
							},
							"withdrawETH(address,uint256)": {
								"notice": "Withdraws ETH owned by this sale contract.Only callable by an address with the withdraw role."
							}
						},
						"notice": "An abstract contract that allows ETH and ERC20 tokens stored in the contract to be withdrawn.",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> lib/0xsequence/erc-1155/src/contracts/utils/Address.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "lib/0xsequence/erc-1155/src/contracts/utils/Address.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> lib/0xsequence/erc-1155/src/contracts/utils/ERC165.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "lib/0xsequence/erc-1155/src/contracts/utils/ERC165.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155.sol": {
				"id": 0
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC1155TokenReceiver.sol": {
				"id": 1
			},
			"lib/0xsequence/erc-1155/src/contracts/interfaces/IERC165.sol": {
				"id": 2
			},
			"lib/0xsequence/erc-1155/src/contracts/tokens/ERC1155/ERC1155.sol": {
				"id": 3
			},
			"lib/0xsequence/erc-1155/src/contracts/utils/Address.sol": {
				"id": 4
			},
			"lib/0xsequence/erc-1155/src/contracts/utils/ERC165.sol": {
				"id": 5
			},
			"lib/openzeppelin/contracts/access/AccessControl.sol": {
				"id": 6
			},
			"lib/openzeppelin/contracts/access/AccessControlEnumerable.sol": {
				"id": 7
			},
			"lib/openzeppelin/contracts/access/IAccessControl.sol": {
				"id": 8
			},
			"lib/openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"id": 9
			},
			"lib/openzeppelin/contracts/access/Ownable.sol": {
				"id": 10
			},
			"lib/openzeppelin/contracts/interfaces/IERC1967.sol": {
				"id": 11
			},
			"lib/openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"id": 12
			},
			"lib/openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"id": 13
			},
			"lib/openzeppelin/contracts/proxy/Proxy.sol": {
				"id": 14
			},
			"lib/openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"id": 15
			},
			"lib/openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"id": 16
			},
			"lib/openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"id": 17
			},
			"lib/openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"id": 18
			},
			"lib/openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"id": 19
			},
			"lib/openzeppelin/contracts/utils/Address.sol": {
				"id": 20
			},
			"lib/openzeppelin/contracts/utils/Context.sol": {
				"id": 21
			},
			"lib/openzeppelin/contracts/utils/Create2.sol": {
				"id": 22
			},
			"lib/openzeppelin/contracts/utils/StorageSlot.sol": {
				"id": 23
			},
			"lib/openzeppelin/contracts/utils/Strings.sol": {
				"id": 24
			},
			"lib/openzeppelin/contracts/utils/cryptography/MerkleProof.sol": {
				"id": 25
			},
			"lib/openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"id": 26
			},
			"lib/openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"id": 27
			},
			"lib/openzeppelin/contracts/utils/math/Math.sol": {
				"id": 28
			},
			"lib/openzeppelin/contracts/utils/math/SignedMath.sol": {
				"id": 29
			},
			"lib/openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"id": 30
			},
			"src/proxies/SequenceProxyFactory.sol": {
				"id": 31
			},
			"src/proxies/TransparentUpgradeableBeaconProxy.sol": {
				"id": 32
			},
			"src/proxies/openzeppelin/BeaconProxy.sol": {
				"id": 33
			},
			"src/proxies/openzeppelin/ERC1967Proxy.sol": {
				"id": 34
			},
			"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol": {
				"id": 35
			},
			"src/tokens/ERC1155/extensions/supply/ERC1155Supply.sol": {
				"id": 36
			},
			"src/tokens/ERC1155/extensions/supply/IERC1155Supply.sol": {
				"id": 37
			},
			"src/tokens/ERC1155/presets/items/IERC1155Items.sol": {
				"id": 38
			},
			"src/tokens/ERC1155/utility/sale/ERC1155Sale.sol": {
				"id": 39
			},
			"src/tokens/ERC1155/utility/sale/ERC1155SaleFactory.sol": {
				"id": 40
			},
			"src/tokens/ERC1155/utility/sale/IERC1155Sale.sol": {
				"id": 41
			},
			"src/tokens/ERC1155/utility/sale/IERC1155SaleFactory.sol": {
				"id": 42
			},
			"src/tokens/common/IMerkleProofSingleUse.sol": {
				"id": 43
			},
			"src/tokens/common/IWithdrawControlled.sol": {
				"id": 44
			},
			"src/tokens/common/MerkleProofSingleUse.sol": {
				"id": 45
			},
			"src/tokens/common/WithdrawControlled.sol": {
				"id": 46
			}
		}
	}
}