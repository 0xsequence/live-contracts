{
	"id": "7100a5d0bcf3771221b55e6280f405db",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"settings": {
			"evmVersion": "paris",
			"libraries": {},
			"metadata": {
				"bytecodeHash": "ipfs"
			},
			"optimizer": {
				"enabled": true,
				"runs": 20000
			},
			"remappings": [
				":@0xsequence/contracts-library/=src/",
				":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/",
				":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/",
				":@openzeppelin/=node_modules/@openzeppelin/",
				":ds-test/=lib/forge-std/lib/ds-test/src/",
				":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
				":erc721a/=node_modules/erc721a/",
				":forge-std/=lib/forge-std/src/",
				":murky/=lib/murky/src/",
				":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/"
			],
			"viaIR": true,
			"outputSelection": {
				"*": {
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"devdoc",
						"userdoc",
						"metadata",
						"abi"
					]
				}
			}
		},
		"sources": {
			"src/tokens/ERC721/presets/items/ERC721ItemsFactory.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.19;\r\n\r\nimport {IERC721ItemsFactory} from\r\n    \"@0xsequence/contracts-library/tokens/ERC721/presets/items/IERC721ItemsFactory.sol\";\r\nimport {ERC721Items} from \"@0xsequence/contracts-library/tokens/ERC721/presets/items/ERC721Items.sol\";\r\nimport {SequenceProxyFactory} from \"@0xsequence/contracts-library/proxies/SequenceProxyFactory.sol\";\r\n\r\n/**\r\n * Deployer of ERC-721 Items proxies.\r\n */\r\ncontract ERC721ItemsFactory is IERC721ItemsFactory, SequenceProxyFactory {\r\n    /**\r\n     * Creates an ERC-721 Items Factory.\r\n     * @param factoryOwner The owner of the ERC-721 Items Factory\r\n     */\r\n    constructor(address factoryOwner) {\r\n        ERC721Items impl = new ERC721Items();\r\n        SequenceProxyFactory._initialize(address(impl), factoryOwner);\r\n    }\r\n\r\n    /**\r\n     * Creates an ERC-721 Items proxy.\r\n     * @param proxyOwner The owner of the ERC-721 Items proxy\r\n     * @param tokenOwner The owner of the ERC-721 Items implementation\r\n     * @param name The name of the ERC-721 Items proxy\r\n     * @param symbol The symbol of the ERC-721 Items proxy\r\n     * @param baseURI The base URI of the ERC-721 Items proxy\r\n     * @param contractURI The contract URI of the ERC-721 Items proxy\r\n     * @param royaltyReceiver Address of who should be sent the royalty payment\r\n     * @param royaltyFeeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\r\n     * @return proxyAddr The address of the ERC-721 Items Proxy\r\n     */\r\n    function deploy(\r\n        address proxyOwner,\r\n        address tokenOwner,\r\n        string memory name,\r\n        string memory symbol,\r\n        string memory baseURI,\r\n        string memory contractURI,\r\n        address royaltyReceiver,\r\n        uint96 royaltyFeeNumerator\r\n    )\r\n        external\r\n        returns (address proxyAddr)\r\n    {\r\n        bytes32 salt =\r\n            keccak256(abi.encode(tokenOwner, name, symbol, baseURI, contractURI, royaltyReceiver, royaltyFeeNumerator));\r\n        proxyAddr = _createProxy(salt, proxyOwner, \"\");\r\n        ERC721Items(proxyAddr).initialize(tokenOwner, name, symbol, baseURI, contractURI, royaltyReceiver, royaltyFeeNumerator);\r\n        emit ERC721ItemsDeployed(proxyAddr);\r\n        return proxyAddr;\r\n    }\r\n}\r\n"
			},
			"src/proxies/SequenceProxyFactory.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.19;\r\n\r\nimport {\r\n    TransparentUpgradeableBeaconProxy,\r\n    ITransparentUpgradeableBeaconProxy\r\n} from \"./TransparentUpgradeableBeaconProxy.sol\";\r\n\r\nimport {Create2} from \"@openzeppelin/contracts/utils/Create2.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {UpgradeableBeacon} from \"@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\";\r\n\r\n/**\r\n * An proxy factory that deploys upgradeable beacon proxies.\r\n * @dev The factory owner is able to upgrade the beacon implementation.\r\n * @dev Proxy deployers are able to override the beacon reference with their own.\r\n */\r\nabstract contract SequenceProxyFactory is Ownable {\r\n    UpgradeableBeacon public beacon;\r\n\r\n    /**\r\n     * Initialize a Sequence Proxy Factory.\r\n     * @param implementation The initial beacon implementation.\r\n     * @param factoryOwner The owner of the factory.\r\n     */\r\n    function _initialize(address implementation, address factoryOwner) internal {\r\n        beacon = new UpgradeableBeacon(implementation);\r\n        Ownable._transferOwnership(factoryOwner);\r\n    }\r\n\r\n    /**\r\n     * Deploys and initializes a new proxy instance.\r\n     * @param _salt The deployment salt.\r\n     * @param _proxyOwner The owner of the proxy.\r\n     * @param _data The initialization data.\r\n     * @return proxyAddress The address of the deployed proxy.\r\n     */\r\n    function _createProxy(bytes32 _salt, address _proxyOwner, bytes memory _data) internal returns (address proxyAddress) {\r\n        bytes32 saltedHash = keccak256(abi.encodePacked(_salt, _proxyOwner, address(beacon), _data));\r\n        bytes memory bytecode = type(TransparentUpgradeableBeaconProxy).creationCode;\r\n\r\n        proxyAddress = Create2.deploy(0, saltedHash, bytecode);\r\n        ITransparentUpgradeableBeaconProxy(payable(proxyAddress)).initialize(_proxyOwner, address(beacon), _data);\r\n    }\r\n\r\n    /**\r\n     * Computes the address of a proxy instance.\r\n     * @param _salt The deployment salt.\r\n     * @param _proxyOwner The owner of the proxy.\r\n     * @return proxy The expected address of the deployed proxy.\r\n     */\r\n    function _computeProxyAddress(bytes32 _salt, address _proxyOwner, bytes memory _data) internal view returns (address) {\r\n        bytes32 saltedHash = keccak256(abi.encodePacked(_salt, _proxyOwner, address(beacon), _data));\r\n        bytes32 bytecodeHash = keccak256(type(TransparentUpgradeableBeaconProxy).creationCode);\r\n\r\n        return Create2.computeAddress(saltedHash, bytecodeHash);\r\n    }\r\n\r\n    /**\r\n     * Upgrades the beacon implementation.\r\n     * @param implementation The new beacon implementation.\r\n     */\r\n    function upgradeBeacon(address implementation) public onlyOwner {\r\n        beacon.upgradeTo(implementation);\r\n    }\r\n}\r\n"
			},
			"src/tokens/ERC721/presets/items/ERC721Items.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.19;\r\n\r\nimport {ERC721BaseToken} from \"@0xsequence/contracts-library/tokens/ERC721/ERC721BaseToken.sol\";\r\nimport {\r\n    IERC721Items,\r\n    IERC721ItemsFunctions\r\n} from \"@0xsequence/contracts-library/tokens/ERC721/presets/items/IERC721Items.sol\";\r\n\r\n/**\r\n * An implementation of ERC-721 capable of minting when role provided.\r\n */\r\ncontract ERC721Items is ERC721BaseToken, IERC721Items {\r\n    bytes32 internal constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n\r\n    address private immutable _initializer;\r\n    bool private _initialized;\r\n\r\n    /**\r\n     * Deploy contract.\r\n     */\r\n    constructor() ERC721BaseToken() {\r\n        _initializer = msg.sender;\r\n    }\r\n\r\n    /**\r\n     * Initialize contract.\r\n     * @param owner The owner of the contract\r\n     * @param tokenName Name of the token\r\n     * @param tokenSymbol Symbol of the token\r\n     * @param tokenBaseURI Base URI of the token\r\n     * @param tokenContractURI Contract URI of the token\r\n     * @param royaltyReceiver Address of who should be sent the royalty payment\r\n     * @param royaltyFeeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\r\n     * @dev This should be called immediately after deployment.\r\n     */\r\n    function initialize(\r\n        address owner,\r\n        string memory tokenName,\r\n        string memory tokenSymbol,\r\n        string memory tokenBaseURI,\r\n        string memory tokenContractURI,\r\n        address royaltyReceiver,\r\n        uint96 royaltyFeeNumerator\r\n    )\r\n        public\r\n        virtual\r\n    {\r\n        if (msg.sender != _initializer || _initialized) {\r\n            revert InvalidInitialization();\r\n        }\r\n\r\n        ERC721BaseToken._initialize(owner, tokenName, tokenSymbol, tokenBaseURI, tokenContractURI);\r\n        _setDefaultRoyalty(royaltyReceiver, royaltyFeeNumerator);\r\n\r\n        _grantRole(MINTER_ROLE, owner);\r\n\r\n        _initialized = true;\r\n    }\r\n\r\n    //\r\n    // Minting\r\n    //\r\n\r\n    /**\r\n     * Mint tokens.\r\n     * @param to Address to mint tokens to.\r\n     * @param amount Amount of tokens to mint.\r\n     */\r\n    function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    //\r\n    // Views\r\n    //\r\n\r\n    /**\r\n     * Check interface support.\r\n     * @param interfaceId Interface id\r\n     * @return True if supported\r\n     */\r\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\r\n        return type(IERC721ItemsFunctions).interfaceId == interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n}\r\n"
			},
			"src/tokens/ERC721/presets/items/IERC721ItemsFactory.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.19;\r\n\r\ninterface IERC721ItemsFactoryFunctions {\r\n    /**\r\n     * Creates an ERC-721 Items proxy.\r\n     * @param proxyOwner The owner of the ERC-721 Items proxy\r\n     * @param tokenOwner The owner of the ERC-721 Items implementation\r\n     * @param name The name of the ERC-721 Items proxy\r\n     * @param symbol The symbol of the ERC-721 Items proxy\r\n     * @param baseURI The base URI of the ERC-721 Items proxy\r\n     * @param contractURI The contract URI of the ERC-721 Items proxy\r\n     * @param royaltyReceiver Address of who should be sent the royalty payment\r\n     * @param royaltyFeeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\r\n     * @return proxyAddr The address of the ERC-721 Items Proxy\r\n     */\r\n    function deploy(\r\n        address proxyOwner,\r\n        address tokenOwner,\r\n        string memory name,\r\n        string memory symbol,\r\n        string memory baseURI,\r\n        string memory contractURI,\r\n        address royaltyReceiver,\r\n        uint96 royaltyFeeNumerator\r\n    )\r\n        external\r\n        returns (address proxyAddr);\r\n}\r\n\r\ninterface IERC721ItemsFactorySignals {\r\n    /**\r\n     * Event emitted when a new ERC-721 Items proxy contract is deployed.\r\n     * @param proxyAddr The address of the deployed proxy.\r\n     */\r\n    event ERC721ItemsDeployed(address proxyAddr);\r\n}\r\n\r\ninterface IERC721ItemsFactory is IERC721ItemsFactoryFunctions, IERC721ItemsFactorySignals {}\r\n"
			},
			"src/tokens/ERC721/presets/items/IERC721Items.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.19;\r\n\r\ninterface IERC721ItemsFunctions {\r\n    /**\r\n     * Mint tokens.\r\n     * @param to Address to mint tokens to.\r\n     * @param amount Amount of tokens to mint.\r\n     */\r\n    function mint(address to, uint256 amount) external;\r\n}\r\n\r\ninterface IERC721ItemsSignals {\r\n    /**\r\n     * Invalid initialization error.\r\n     */\r\n    error InvalidInitialization();\r\n}\r\n\r\ninterface IERC721Items is IERC721ItemsFunctions, IERC721ItemsSignals {}\r\n"
			},
			"src/tokens/ERC721/ERC721BaseToken.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.19;\r\n\r\nimport {\r\n    ERC721AQueryable, IERC721AQueryable, ERC721A, IERC721A\r\n} from \"erc721a/contracts/extensions/ERC721AQueryable.sol\";\r\nimport {ERC2981Controlled} from \"@0xsequence/contracts-library/tokens/common/ERC2981Controlled.sol\";\r\n\r\nerror InvalidInitialization();\r\n\r\n/**\r\n * A standard base implementation of ERC-721 for use in Sequence library contracts.\r\n */\r\nabstract contract ERC721BaseToken is ERC721AQueryable, ERC2981Controlled {\r\n    bytes32 internal constant METADATA_ADMIN_ROLE = keccak256(\"METADATA_ADMIN_ROLE\");\r\n\r\n    string private _tokenBaseURI;\r\n    string private _tokenName;\r\n    string private _tokenSymbol;\r\n    string private _contractURI;\r\n\r\n    /**\r\n     * Deploy contract.\r\n     */\r\n    constructor() ERC721A(\"\", \"\") {}\r\n\r\n    /**\r\n     * Initialize contract.\r\n     * @param owner The owner of the contract\r\n     * @param tokenName Name of the token\r\n     * @param tokenSymbol Symbol of the token\r\n     * @param tokenBaseURI Base URI of the token\r\n     * @param tokenContractURI Contract URI of the token\r\n     * @dev This should be called immediately after deployment.\r\n     */\r\n    function _initialize(\r\n        address owner,\r\n        string memory tokenName,\r\n        string memory tokenSymbol,\r\n        string memory tokenBaseURI,\r\n        string memory tokenContractURI\r\n    )\r\n        internal\r\n    {\r\n        _tokenName = tokenName;\r\n        _tokenSymbol = tokenSymbol;\r\n        _tokenBaseURI = tokenBaseURI;\r\n        _contractURI = tokenContractURI;\r\n\r\n        _grantRole(DEFAULT_ADMIN_ROLE, owner);\r\n        _grantRole(METADATA_ADMIN_ROLE, owner);\r\n        _grantRole(ROYALTY_ADMIN_ROLE, owner);\r\n    }\r\n\r\n    //\r\n    // Metadata\r\n    //\r\n\r\n    /**\r\n     * Set name and symbol of token.\r\n     * @param tokenName Name of token.\r\n     * @param tokenSymbol Symbol of token.\r\n     */\r\n    function setNameAndSymbol(string memory tokenName, string memory tokenSymbol)\r\n        external\r\n        onlyRole(METADATA_ADMIN_ROLE)\r\n    {\r\n        _tokenName = tokenName;\r\n        _tokenSymbol = tokenSymbol;\r\n    }\r\n\r\n    /**\r\n     * Update the base URI of token's URI.\r\n     * @param tokenBaseURI New base URI of token's URI\r\n     */\r\n    function setBaseMetadataURI(string memory tokenBaseURI) external onlyRole(METADATA_ADMIN_ROLE) {\r\n        _tokenBaseURI = tokenBaseURI;\r\n    }\r\n\r\n    /**\r\n     * Update the contract URI of token's URI.\r\n     * @param tokenContractURI New contract URI of token's URI\r\n     * @notice Refer to https://docs.opensea.io/docs/contract-level-metadata\r\n     */\r\n    function setContractURI(string memory tokenContractURI) external onlyRole(METADATA_ADMIN_ROLE) {\r\n        _contractURI = tokenContractURI;\r\n    }\r\n\r\n    //\r\n    // Burn\r\n    //\r\n\r\n    /**\r\n     * Allows the owner of the token to burn their token.\r\n     * @param tokenId Id of token to burn\r\n     */\r\n    function burn(uint256 tokenId) public virtual {\r\n        _burn(tokenId, true);\r\n    }\r\n\r\n    /**\r\n     * Allows the owner of the tokens to burn their tokens.\r\n     * @param tokenIds Array of token ids to burn\r\n     */\r\n    function batchBurn(uint256[] memory tokenIds) public virtual {\r\n        uint256 nBurn = tokenIds.length;\r\n        for (uint256 i = 0; i < nBurn; i++) {\r\n            _burn(tokenIds[i], true);\r\n        }\r\n    }\r\n\r\n    //\r\n    // Views\r\n    //\r\n\r\n    /**\r\n     * Get the contract URI of token's URI.\r\n     * @return Contract URI of token's URI\r\n     * @notice Refer to https://docs.opensea.io/docs/contract-level-metadata\r\n     */\r\n    function contractURI() public view returns (string memory) {\r\n        return _contractURI;\r\n    }\r\n\r\n    /**\r\n     * Check interface support.\r\n     * @param interfaceId Interface id\r\n     * @return True if supported\r\n     */\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        virtual\r\n        override (ERC721A, IERC721A, ERC2981Controlled)\r\n        returns (bool)\r\n    {\r\n        return interfaceId == type(IERC721A).interfaceId || interfaceId == type(IERC721AQueryable).interfaceId\r\n            || ERC721A.supportsInterface(interfaceId) || ERC2981Controlled.supportsInterface(interfaceId)\r\n            || super.supportsInterface(interfaceId);\r\n    }\r\n\r\n    //\r\n    // ERC721A Overrides\r\n    //\r\n\r\n    /**\r\n     * Override the ERC721A baseURI function.\r\n     */\r\n    function _baseURI() internal view override returns (string memory) {\r\n        return _tokenBaseURI;\r\n    }\r\n\r\n    /**\r\n     * Override the ERC721A name function.\r\n     */\r\n    function name() public view override (ERC721A, IERC721A) returns (string memory) {\r\n        return _tokenName;\r\n    }\r\n\r\n    /**\r\n     * Override the ERC721A symbol function.\r\n     */\r\n    function symbol() public view override (ERC721A, IERC721A) returns (string memory) {\r\n        return _tokenSymbol;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/UpgradeableBeacon.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IBeacon.sol\";\nimport \"../../access/Ownable.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their\n * implementation contract, which is where they will delegate all function calls.\n *\n * An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\n */\ncontract UpgradeableBeacon is IBeacon, Ownable {\n    address private _implementation;\n\n    /**\n     * @dev Emitted when the implementation returned by the beacon is changed.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the\n     * beacon.\n     */\n    constructor(address implementation_) {\n        _setImplementation(implementation_);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function implementation() public view virtual override returns (address) {\n        return _implementation;\n    }\n\n    /**\n     * @dev Upgrades the beacon to a new implementation.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * Requirements:\n     *\n     * - msg.sender must be the owner of the contract.\n     * - `newImplementation` must be a contract.\n     */\n    function upgradeTo(address newImplementation) public virtual onlyOwner {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Sets the implementation contract address for this beacon\n     *\n     * Requirements:\n     *\n     * - `newImplementation` must be a contract.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"UpgradeableBeacon: implementation is not a contract\");\n        _implementation = newImplementation;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Create2.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Create2.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\n * `CREATE2` can be used to compute in advance the address where a smart\n * contract will be deployed, which allows for interesting new mechanisms known\n * as 'counterfactual interactions'.\n *\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\n * information.\n */\nlibrary Create2 {\n    /**\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\n     * will be deployed can be known in advance via {computeAddress}.\n     *\n     * The bytecode for a contract can be obtained from Solidity with\n     * `type(contractName).creationCode`.\n     *\n     * Requirements:\n     *\n     * - `bytecode` must not be empty.\n     * - `salt` must have not been used for `bytecode` already.\n     * - the factory must have a balance of at least `amount`.\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\n     */\n    function deploy(uint256 amount, bytes32 salt, bytes memory bytecode) internal returns (address addr) {\n        require(address(this).balance >= amount, \"Create2: insufficient balance\");\n        require(bytecode.length != 0, \"Create2: bytecode length is zero\");\n        /// @solidity memory-safe-assembly\n        assembly {\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\n        }\n        require(addr != address(0), \"Create2: Failed on deploy\");\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\n     * `bytecodeHash` or `salt` will result in a new destination address.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\n        return computeAddress(salt, bytecodeHash, address(this));\n    }\n\n    /**\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\n     */\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash, address deployer) internal pure returns (address addr) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            let ptr := mload(0x40) // Get free memory pointer\n\n            // |                   | ↓ ptr ...  ↓ ptr + 0x0B (start) ...  ↓ ptr + 0x20 ...  ↓ ptr + 0x40 ...   |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | bytecodeHash      |                                                        CCCCCCCCCCCCC...CC |\n            // | salt              |                                      BBBBBBBBBBBBB...BB                   |\n            // | deployer          | 000000...0000AAAAAAAAAAAAAAAAAAA...AA                                     |\n            // | 0xFF              |            FF                                                             |\n            // |-------------------|---------------------------------------------------------------------------|\n            // | memory            | 000000...00FFAAAAAAAAAAAAAAAAAAA...AABBBBBBBBBBBBB...BBCCCCCCCCCCCCC...CC |\n            // | keccak(start, 85) |            ↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑↑ |\n\n            mstore(add(ptr, 0x40), bytecodeHash)\n            mstore(add(ptr, 0x20), salt)\n            mstore(ptr, deployer) // Right-aligned with 12 preceding garbage bytes\n            let start := add(ptr, 0x0b) // The hashed data starts at the final garbage byte which we will set to 0xff\n            mstore8(start, 0xff)\n            addr := keccak256(start, 85)\n        }\n    }\n}\n"
			},
			"src/proxies/TransparentUpgradeableBeaconProxy.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.19;\r\n\r\nimport {BeaconProxy, Proxy} from \"./openzeppelin/BeaconProxy.sol\";\r\nimport {TransparentUpgradeableProxy, ERC1967Proxy} from \"./openzeppelin/TransparentUpgradeableProxy.sol\";\r\n\r\ninterface ITransparentUpgradeableBeaconProxy {\r\n    function initialize(address admin, address beacon, bytes memory data) external;\r\n}\r\n\r\nerror InvalidInitialization();\r\n\r\n/**\r\n * @dev As the underlying proxy implementation (TransparentUpgradeableProxy) allows the admin to call the implementation,\r\n * care must be taken to avoid proxy selector collisions. Implementation selectors must not conflict with the proxy selectors.\r\n * See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing].\r\n * The proxy selectors are:\r\n * - 0xcf7a1d77: initialize\r\n * - 0x3659cfe6: upgradeTo (from TransparentUpgradeableProxy)\r\n * - 0x4f1ef286: upgradeToAndCall (from TransparentUpgradeableProxy)\r\n * - 0x8f283970: changeAdmin (from TransparentUpgradeableProxy)\r\n * - 0xf851a440: admin (from TransparentUpgradeableProxy)\r\n * - 0x5c60da1b: implementation (from TransparentUpgradeableProxy)\r\n */\r\ncontract TransparentUpgradeableBeaconProxy is TransparentUpgradeableProxy, BeaconProxy {\r\n    /**\r\n     * Decode the initialization data from the msg.data and call the initialize function.\r\n     */\r\n    function _dispatchInitialize() private returns (bytes memory) {\r\n        _requireZeroValue();\r\n\r\n        (address admin, address beacon, bytes memory data) = abi.decode(msg.data[4:], (address, address, bytes));\r\n        initialize(admin, beacon, data);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    function initialize(address admin, address beacon, bytes memory data) internal {\r\n        if (_admin() != address(0)) {\r\n            // Redundant call. This function can only be called when the admin is not set.\r\n            revert InvalidInitialization();\r\n        }\r\n        _changeAdmin(admin);\r\n        _upgradeBeaconToAndCall(beacon, data, false);\r\n    }\r\n\r\n    /**\r\n     * @dev If the admin is not set, the fallback function is used to initialize the proxy.\r\n     * @dev If the admin is set, the fallback function is used to delegatecall the implementation.\r\n     */\r\n    function _fallback() internal override (TransparentUpgradeableProxy, Proxy) {\r\n        if (_getAdmin() == address(0)) {\r\n            bytes memory ret;\r\n            bytes4 selector = msg.sig;\r\n            if (selector == ITransparentUpgradeableBeaconProxy.initialize.selector) {\r\n                ret = _dispatchInitialize();\r\n                // solhint-disable-next-line no-inline-assembly\r\n                assembly {\r\n                    return(add(ret, 0x20), mload(ret))\r\n                }\r\n            }\r\n            // When the admin is not set, the fallback function is used to initialize the proxy.\r\n            revert InvalidInitialization();\r\n        }\r\n        TransparentUpgradeableProxy._fallback();\r\n    }\r\n\r\n    /**\r\n     * Returns the current implementation address.\r\n     * @dev This is the implementation address set by the admin, or the beacon implementation.\r\n     */\r\n    function _implementation() internal view override (ERC1967Proxy, BeaconProxy) returns (address) {\r\n        address implementation = ERC1967Proxy._implementation();\r\n        if (implementation != address(0)) {\r\n            return implementation;\r\n        }\r\n        return BeaconProxy._implementation();\r\n    }\r\n}\r\n"
			},
			"src/tokens/common/ERC2981Controlled.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.19;\r\n\r\nimport {IERC2981Controlled} from \"@0xsequence/contracts-library/tokens/common/IERC2981Controlled.sol\";\r\nimport {ERC2981} from \"@openzeppelin/contracts/token/common/ERC2981.sol\";\r\nimport {AccessControlEnumerable} from \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\r\n\r\n/**\r\n * An implementation of ERC-2981 that allows updates by roles.\r\n */\r\nabstract contract ERC2981Controlled is ERC2981, AccessControlEnumerable, IERC2981Controlled {\r\n    bytes32 internal constant ROYALTY_ADMIN_ROLE = keccak256(\"ROYALTY_ADMIN_ROLE\");\r\n\r\n    //\r\n    // Royalty\r\n    //\r\n\r\n    /**\r\n     * Sets the royalty information that all ids in this contract will default to.\r\n     * @param receiver Address of who should be sent the royalty payment\r\n     * @param feeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\r\n     */\r\n    function setDefaultRoyalty(address receiver, uint96 feeNumerator) external onlyRole(ROYALTY_ADMIN_ROLE) {\r\n        _setDefaultRoyalty(receiver, feeNumerator);\r\n    }\r\n\r\n    /**\r\n     * Sets the royalty information that a given token id in this contract will use.\r\n     * @param tokenId The token id to set the royalty information for\r\n     * @param receiver Address of who should be sent the royalty payment\r\n     * @param feeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\r\n     * @notice This overrides the default royalty information for this token id\r\n     */\r\n    function setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator)\r\n        external\r\n        onlyRole(ROYALTY_ADMIN_ROLE)\r\n    {\r\n        _setTokenRoyalty(tokenId, receiver, feeNumerator);\r\n    }\r\n\r\n    //\r\n    // Views\r\n    //\r\n\r\n    /**\r\n     * Check interface support.\r\n     * @param interfaceId Interface id\r\n     * @return True if supported\r\n     */\r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        virtual\r\n        override (ERC2981, AccessControlEnumerable)\r\n        returns (bool)\r\n    {\r\n        return ERC2981.supportsInterface(interfaceId) || AccessControlEnumerable.supportsInterface(interfaceId)\r\n            || type(IERC2981Controlled).interfaceId == interfaceId || super.supportsInterface(interfaceId);\r\n    }\r\n}\r\n"
			},
			"node_modules/erc721a/contracts/extensions/ERC721AQueryable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721AQueryable.sol';\nimport '../ERC721A.sol';\n\n/**\n * @title ERC721AQueryable.\n *\n * @dev ERC721A subclass with convenience query functions.\n */\nabstract contract ERC721AQueryable is ERC721A, IERC721AQueryable {\n    /**\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n     *\n     * If the `tokenId` is out of bounds:\n     *\n     * - `addr = address(0)`\n     * - `startTimestamp = 0`\n     * - `burned = false`\n     * - `extraData = 0`\n     *\n     * If the `tokenId` is burned:\n     *\n     * - `addr = <Address of owner before token was burned>`\n     * - `startTimestamp = <Timestamp when token was burned>`\n     * - `burned = true`\n     * - `extraData = <Extra data when token was burned>`\n     *\n     * Otherwise:\n     *\n     * - `addr = <Address of owner>`\n     * - `startTimestamp = <Timestamp of start of ownership>`\n     * - `burned = false`\n     * - `extraData = <Extra data at start of ownership>`\n     */\n    function explicitOwnershipOf(uint256 tokenId) public view virtual override returns (TokenOwnership memory) {\n        TokenOwnership memory ownership;\n        if (tokenId < _startTokenId() || tokenId >= _nextTokenId()) {\n            return ownership;\n        }\n        ownership = _ownershipAt(tokenId);\n        if (ownership.burned) {\n            return ownership;\n        }\n        return _ownershipOf(tokenId);\n    }\n\n    /**\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n     * See {ERC721AQueryable-explicitOwnershipOf}\n     */\n    function explicitOwnershipsOf(uint256[] calldata tokenIds)\n        external\n        view\n        virtual\n        override\n        returns (TokenOwnership[] memory)\n    {\n        unchecked {\n            uint256 tokenIdsLength = tokenIds.length;\n            TokenOwnership[] memory ownerships = new TokenOwnership[](tokenIdsLength);\n            for (uint256 i; i != tokenIdsLength; ++i) {\n                ownerships[i] = explicitOwnershipOf(tokenIds[i]);\n            }\n            return ownerships;\n        }\n    }\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`,\n     * in the range [`start`, `stop`)\n     * (i.e. `start <= tokenId < stop`).\n     *\n     * This function allows for tokens to be queried if the collection\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n     *\n     * Requirements:\n     *\n     * - `start < stop`\n     */\n    function tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) external view virtual override returns (uint256[] memory) {\n        unchecked {\n            if (start >= stop) revert InvalidQueryRange();\n            uint256 tokenIdsIdx;\n            uint256 stopLimit = _nextTokenId();\n            // Set `start = max(start, _startTokenId())`.\n            if (start < _startTokenId()) {\n                start = _startTokenId();\n            }\n            // Set `stop = min(stop, stopLimit)`.\n            if (stop > stopLimit) {\n                stop = stopLimit;\n            }\n            uint256 tokenIdsMaxLength = balanceOf(owner);\n            // Set `tokenIdsMaxLength = min(balanceOf(owner), stop - start)`,\n            // to cater for cases where `balanceOf(owner)` is too big.\n            if (start < stop) {\n                uint256 rangeLength = stop - start;\n                if (rangeLength < tokenIdsMaxLength) {\n                    tokenIdsMaxLength = rangeLength;\n                }\n            } else {\n                tokenIdsMaxLength = 0;\n            }\n            uint256[] memory tokenIds = new uint256[](tokenIdsMaxLength);\n            if (tokenIdsMaxLength == 0) {\n                return tokenIds;\n            }\n            // We need to call `explicitOwnershipOf(start)`,\n            // because the slot at `start` may not be initialized.\n            TokenOwnership memory ownership = explicitOwnershipOf(start);\n            address currOwnershipAddr;\n            // If the starting slot exists (i.e. not burned), initialize `currOwnershipAddr`.\n            // `ownership.address` will not be zero, as `start` is clamped to the valid token ID range.\n            if (!ownership.burned) {\n                currOwnershipAddr = ownership.addr;\n            }\n            for (uint256 i = start; i != stop && tokenIdsIdx != tokenIdsMaxLength; ++i) {\n                ownership = _ownershipAt(i);\n                if (ownership.burned) {\n                    continue;\n                }\n                if (ownership.addr != address(0)) {\n                    currOwnershipAddr = ownership.addr;\n                }\n                if (currOwnershipAddr == owner) {\n                    tokenIds[tokenIdsIdx++] = i;\n                }\n            }\n            // Downsize the array to fit.\n            assembly {\n                mstore(tokenIds, tokenIdsIdx)\n            }\n            return tokenIds;\n        }\n    }\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`.\n     *\n     * This function scans the ownership mapping and is O(`totalSupply`) in complexity.\n     * It is meant to be called off-chain.\n     *\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n     * multiple smaller scans if the collection is large enough to cause\n     * an out-of-gas error (10K collections should be fine).\n     */\n    function tokensOfOwner(address owner) external view virtual override returns (uint256[] memory) {\n        unchecked {\n            uint256 tokenIdsIdx;\n            address currOwnershipAddr;\n            uint256 tokenIdsLength = balanceOf(owner);\n            uint256[] memory tokenIds = new uint256[](tokenIdsLength);\n            TokenOwnership memory ownership;\n            for (uint256 i = _startTokenId(); tokenIdsIdx != tokenIdsLength; ++i) {\n                ownership = _ownershipAt(i);\n                if (ownership.burned) {\n                    continue;\n                }\n                if (ownership.addr != address(0)) {\n                    currOwnershipAddr = ownership.addr;\n                }\n                if (currOwnershipAddr == owner) {\n                    tokenIds[tokenIdsIdx++] = i;\n                }\n            }\n            return tokenIds;\n        }\n    }\n}\n"
			},
			"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/transparent/TransparentUpgradeableProxy.sol)\r\n\r\n/// @notice This implementation is a copy of OpenZeppelin's with the following changes:\r\n/// - Pragma updated\r\n/// - Imports updated\r\n/// - Constructor removed\r\n/// - Allows admin to call implementation\r\n\r\npragma solidity ^0.8.19;\r\n\r\nimport \"./ERC1967Proxy.sol\";\r\n\r\n/**\r\n * @dev Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy}\r\n * does not implement this interface directly, and some of its functions are implemented by an internal dispatch\r\n * mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not\r\n * include them in the ABI so this interface must be used to interact with it.\r\n */\r\ninterface ITransparentUpgradeableProxy is IERC1967 {\r\n    function admin() external view returns (address);\r\n\r\n    function implementation() external view returns (address);\r\n\r\n    function changeAdmin(address) external;\r\n\r\n    function upgradeTo(address) external;\r\n\r\n    function upgradeToAndCall(address, bytes memory) external payable;\r\n}\r\n\r\n/**\r\n * @dev This contract implements a proxy that is upgradeable by an admin.\r\n *\r\n * Unlike the original OpenZeppelin implementation, this contract does not prevent the admin from calling the implementation.\r\n * This potentially exposes the admin to a proxy selector attack. See\r\n * https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing].\r\n * When using this contract, you must ensure that the implementation function selectors do not clash with the proxy selectors.\r\n * The proxy selectors are:\r\n * - 0x3659cfe6: upgradeTo\r\n * - 0x4f1ef286: upgradeToAndCall\r\n * - 0x8f283970: changeAdmin\r\n * - 0xf851a440: admin\r\n * - 0x5c60da1b: implementation\r\n *\r\n * NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not\r\n * inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch\r\n * mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to\r\n * fully implement transparency without decoding reverts caused by selector clashes between the proxy and the\r\n * implementation.\r\n *\r\n * WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler\r\n * will not check that there are no selector conflicts, due to the note above. A selector clash between any new function\r\n * and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could\r\n * render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\r\n */\r\ncontract TransparentUpgradeableProxy is ERC1967Proxy {\r\n    /**\r\n     * @dev Modifier used internally that will delegate the call to the implementation unless the sender is the admin.\r\n     *\r\n     * CAUTION: This modifier is deprecated, as it could cause issues if the modified function has arguments, and the\r\n     * implementation provides a function with the same selector.\r\n     */\r\n    modifier ifAdmin() {\r\n        if (msg.sender == _getAdmin()) {\r\n            _;\r\n        } else {\r\n            _fallback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev If caller is the admin process the call internally, otherwise transparently fallback to the proxy behavior\r\n     */\r\n    function _fallback() internal virtual override {\r\n        if (msg.sender == _getAdmin()) {\r\n            bytes memory ret;\r\n            bytes4 selector = msg.sig;\r\n            if (selector == ITransparentUpgradeableProxy.upgradeTo.selector) {\r\n                ret = _dispatchUpgradeTo();\r\n            } else if (selector == ITransparentUpgradeableProxy.upgradeToAndCall.selector) {\r\n                ret = _dispatchUpgradeToAndCall();\r\n            } else if (selector == ITransparentUpgradeableProxy.changeAdmin.selector) {\r\n                ret = _dispatchChangeAdmin();\r\n            } else if (selector == ITransparentUpgradeableProxy.admin.selector) {\r\n                ret = _dispatchAdmin();\r\n            } else if (selector == ITransparentUpgradeableProxy.implementation.selector) {\r\n                ret = _dispatchImplementation();\r\n            } else {\r\n                // Call implementation\r\n                return super._fallback();\r\n            }\r\n            assembly {\r\n                return(add(ret, 0x20), mload(ret))\r\n            }\r\n        } else {\r\n            super._fallback();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current admin.\r\n     *\r\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\r\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\r\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\r\n     */\r\n    function _dispatchAdmin() private returns (bytes memory) {\r\n        _requireZeroValue();\r\n\r\n        address admin = _getAdmin();\r\n        return abi.encode(admin);\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current implementation.\r\n     *\r\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using the\r\n     * https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\r\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\r\n     */\r\n    function _dispatchImplementation() private returns (bytes memory) {\r\n        _requireZeroValue();\r\n\r\n        address implementation = _implementation();\r\n        return abi.encode(implementation);\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the admin of the proxy.\r\n     *\r\n     * Emits an {AdminChanged} event.\r\n     */\r\n    function _dispatchChangeAdmin() private returns (bytes memory) {\r\n        _requireZeroValue();\r\n\r\n        address newAdmin = abi.decode(msg.data[4:], (address));\r\n        _changeAdmin(newAdmin);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrade the implementation of the proxy.\r\n     */\r\n    function _dispatchUpgradeTo() private returns (bytes memory) {\r\n        _requireZeroValue();\r\n\r\n        address newImplementation = abi.decode(msg.data[4:], (address));\r\n        _upgradeToAndCall(newImplementation, bytes(\"\"), false);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Upgrade the implementation of the proxy, and then call a function from the new implementation as specified\r\n     * by `data`, which should be an encoded function call. This is useful to initialize new storage variables in the\r\n     * proxied contract.\r\n     */\r\n    function _dispatchUpgradeToAndCall() private returns (bytes memory) {\r\n        (address newImplementation, bytes memory data) = abi.decode(msg.data[4:], (address, bytes));\r\n        _upgradeToAndCall(newImplementation, data, true);\r\n\r\n        return \"\";\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current admin.\r\n     *\r\n     * CAUTION: This function is deprecated. Use {ERC1967Upgrade-_getAdmin} instead.\r\n     */\r\n    function _admin() internal view virtual returns (address) {\r\n        return _getAdmin();\r\n    }\r\n\r\n    /**\r\n     * @dev To keep this contract fully transparent, all `ifAdmin` functions must be payable. This helper is here to\r\n     * emulate some proxy functions being non-payable while still allowing value to pass through.\r\n     */\r\n    function _requireZeroValue() internal {\r\n        require(msg.value == 0);\r\n    }\r\n}\r\n"
			},
			"src/proxies/openzeppelin/BeaconProxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/beacon/BeaconProxy.sol)\r\n\r\n// Note: This implementation is an exact copy with the constructor removed, and pragma and imports updated.\r\n\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\";\r\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\r\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\";\r\n\r\n/**\r\n * @dev This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}.\r\n *\r\n * The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't\r\n * conflict with the storage layout of the implementation behind the proxy.\r\n *\r\n * _Available since v3.4._\r\n */\r\ncontract BeaconProxy is Proxy, ERC1967Upgrade {\r\n    /**\r\n     * @dev Returns the current beacon address.\r\n     */\r\n    function _beacon() internal view virtual returns (address) {\r\n        return _getBeacon();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current implementation address of the associated beacon.\r\n     */\r\n    function _implementation() internal view virtual override returns (address) {\r\n        return IBeacon(_getBeacon()).implementation();\r\n    }\r\n\r\n    /**\r\n     * @dev Changes the proxy to use a new beacon. Deprecated: see {_upgradeBeaconToAndCall}.\r\n     *\r\n     * If `data` is nonempty, it's used as data in a delegate call to the implementation returned by the beacon.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `beacon` must be a contract.\r\n     * - The implementation returned by `beacon` must be a contract.\r\n     */\r\n    function _setBeacon(address beacon, bytes memory data) internal virtual {\r\n        _upgradeBeaconToAndCall(beacon, data, false);\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {BeaconProxy} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/access/AccessControlEnumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControl.sol\";\nimport \"../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/common/ERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/common/ERC2981.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/IERC2981.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information.\n *\n * Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for\n * specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first.\n *\n * Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the\n * fee is specified in basis points by default.\n *\n * IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See\n * https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to\n * voluntarily pay royalties together with sales, but note that this standard is not yet widely supported.\n *\n * _Available since v4.5._\n */\nabstract contract ERC2981 is IERC2981, ERC165 {\n    struct RoyaltyInfo {\n        address receiver;\n        uint96 royaltyFraction;\n    }\n\n    RoyaltyInfo private _defaultRoyaltyInfo;\n    mapping(uint256 => RoyaltyInfo) private _tokenRoyaltyInfo;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(IERC165, ERC165) returns (bool) {\n        return interfaceId == type(IERC2981).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @inheritdoc IERC2981\n     */\n    function royaltyInfo(uint256 tokenId, uint256 salePrice) public view virtual override returns (address, uint256) {\n        RoyaltyInfo memory royalty = _tokenRoyaltyInfo[tokenId];\n\n        if (royalty.receiver == address(0)) {\n            royalty = _defaultRoyaltyInfo;\n        }\n\n        uint256 royaltyAmount = (salePrice * royalty.royaltyFraction) / _feeDenominator();\n\n        return (royalty.receiver, royaltyAmount);\n    }\n\n    /**\n     * @dev The denominator with which to interpret the fee set in {_setTokenRoyalty} and {_setDefaultRoyalty} as a\n     * fraction of the sale price. Defaults to 10000 so fees are expressed in basis points, but may be customized by an\n     * override.\n     */\n    function _feeDenominator() internal pure virtual returns (uint96) {\n        return 10000;\n    }\n\n    /**\n     * @dev Sets the royalty information that all ids in this contract will default to.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setDefaultRoyalty(address receiver, uint96 feeNumerator) internal virtual {\n        require(feeNumerator <= _feeDenominator(), \"ERC2981: royalty fee will exceed salePrice\");\n        require(receiver != address(0), \"ERC2981: invalid receiver\");\n\n        _defaultRoyaltyInfo = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Removes default royalty information.\n     */\n    function _deleteDefaultRoyalty() internal virtual {\n        delete _defaultRoyaltyInfo;\n    }\n\n    /**\n     * @dev Sets the royalty information for a specific token id, overriding the global default.\n     *\n     * Requirements:\n     *\n     * - `receiver` cannot be the zero address.\n     * - `feeNumerator` cannot be greater than the fee denominator.\n     */\n    function _setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) internal virtual {\n        require(feeNumerator <= _feeDenominator(), \"ERC2981: royalty fee will exceed salePrice\");\n        require(receiver != address(0), \"ERC2981: Invalid parameters\");\n\n        _tokenRoyaltyInfo[tokenId] = RoyaltyInfo(receiver, feeNumerator);\n    }\n\n    /**\n     * @dev Resets royalty information for the token id back to the global default.\n     */\n    function _resetTokenRoyalty(uint256 tokenId) internal virtual {\n        delete _tokenRoyaltyInfo[tokenId];\n    }\n}\n"
			},
			"src/tokens/common/IERC2981Controlled.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\r\npragma solidity ^0.8.19;\r\n\r\ninterface IERC2981ControlledFunctions {\r\n    /**\r\n     * Sets the royalty information that all ids in this contract will default to.\r\n     * @param receiver Address of who should be sent the royalty payment\r\n     * @param feeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\r\n     */\r\n    function setDefaultRoyalty(address receiver, uint96 feeNumerator) external;\r\n\r\n    /**\r\n     * Sets the royalty information that a given token id in this contract will use.\r\n     * @param tokenId The token id to set the royalty information for\r\n     * @param receiver Address of who should be sent the royalty payment\r\n     * @param feeNumerator The royalty fee numerator in basis points (e.g. 15% would be 1500)\r\n     * @notice This overrides the default royalty information for this token id\r\n     */\r\n    function setTokenRoyalty(uint256 tokenId, address receiver, uint96 feeNumerator) external;\r\n}\r\n\r\ninterface IERC2981Controlled is IERC2981ControlledFunctions {}\r\n"
			},
			"src/proxies/openzeppelin/ERC1967Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (proxy/ERC1967/ERC1967Proxy.sol)\r\n\r\n// Note: This implementation is an exact copy with the constructor removed, and pragma and imports updated.\r\n\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/proxy/Proxy.sol\";\r\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\";\r\n\r\n/**\r\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\r\n * implementation address that can be changed. This address is stored in storage in the location specified by\r\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\r\n * implementation behind the proxy.\r\n */\r\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\r\n    /**\r\n     * @dev Returns the current implementation address.\r\n     */\r\n    function _implementation() internal view virtual override returns (address impl) {\r\n        return ERC1967Upgrade._getImplementation();\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (proxy/ERC1967/ERC1967Upgrade.sol)\n\npragma solidity ^0.8.2;\n\nimport \"../beacon/IBeacon.sol\";\nimport \"../../interfaces/IERC1967.sol\";\nimport \"../../interfaces/draft-IERC1822.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n *\n * _Available since v4.1._\n */\nabstract contract ERC1967Upgrade is IERC1967 {\n    // This is the keccak-256 hash of \"eip1967.proxy.rollback\" subtracted by 1\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function _getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Perform implementation upgrade\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeTo(address newImplementation) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n    }\n\n    /**\n     * @dev Perform implementation upgrade with additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCall(address newImplementation, bytes memory data, bool forceCall) internal {\n        _upgradeTo(newImplementation);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(newImplementation, data);\n        }\n    }\n\n    /**\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\n     *\n     * Emits an {Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data, bool forceCall) internal {\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\n            _setImplementation(newImplementation);\n        } else {\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n                require(slot == _IMPLEMENTATION_SLOT, \"ERC1967Upgrade: unsupported proxiableUUID\");\n            } catch {\n                revert(\"ERC1967Upgrade: new implementation is not UUPS\");\n            }\n            _upgradeToAndCall(newImplementation, data, forceCall);\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is\n     * validated in the constructor.\n     */\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     */\n    function _getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        require(newAdmin != address(0), \"ERC1967: new admin is the zero address\");\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {AdminChanged} event.\n     */\n    function _changeAdmin(address newAdmin) internal {\n        emit AdminChanged(_getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\n     */\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function _getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        require(Address.isContract(newBeacon), \"ERC1967: new beacon is not a contract\");\n        require(\n            Address.isContract(IBeacon(newBeacon).implementation()),\n            \"ERC1967: beacon implementation is not a contract\"\n        );\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\n    }\n\n    /**\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\n     *\n     * Emits a {BeaconUpgraded} event.\n     */\n    function _upgradeBeaconToAndCall(address newBeacon, bytes memory data, bool forceCall) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n        if (data.length > 0 || forceCall) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback function\n     * and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _beforeFallback();\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n     * is empty.\n     */\n    receive() external payable virtual {\n        _fallback();\n    }\n\n    /**\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n     * call, or as part of the Solidity `fallback` or `receive` functions.\n     *\n     * If overridden should call `super._beforeFallback()`.\n     */\n    function _beforeFallback() internal virtual {}\n}\n"
			},
			"node_modules/erc721a/contracts/ERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) revert BalanceQueryForZeroAddress();\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) revert URIQueryForNonexistentToken();\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256) {\n        uint256 curr = tokenId;\n\n        unchecked {\n            if (_startTokenId() <= curr)\n                if (curr < _currentIndex) {\n                    uint256 packed = _packedOwnerships[curr];\n                    // If not burned.\n                    if (packed & _BITMASK_BURNED == 0) {\n                        // Invariant:\n                        // There will always be an initialized ownership slot\n                        // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                        // before an unintialized ownership slot\n                        // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                        // Hence, `curr` will not underflow.\n                        //\n                        // We can directly compare the packed value.\n                        // If the address is zero, packed will be zero.\n                        while (packed == 0) {\n                            packed = _packedOwnerships[--curr];\n                        }\n                        return packed;\n                    }\n                }\n        }\n        revert OwnerQueryForNonexistentToken();\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        address owner = ownerOf(tokenId);\n\n        if (_msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                revert ApprovalCallerNotOwnerNorApproved();\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) revert ApprovalQueryForNonexistentToken();\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return\n            _startTokenId() <= tokenId &&\n            tokenId < _currentIndex && // If within bounds,\n            _packedOwnerships[tokenId] & _BITMASK_BURNED == 0; // and not burned.\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        if (address(uint160(prevOwnershipPacked)) != from) revert TransferFromIncorrectOwner();\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n\n        if (to == address(0)) revert TransferToZeroAddress();\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, to, tokenId);\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                revert TransferToNonERC721ReceiverImplementer();\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                revert TransferToNonERC721ReceiverImplementer();\n            } else {\n                assembly {\n                    revert(add(32, reason), mload(reason))\n                }\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) revert MintZeroQuantity();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            uint256 toMasked;\n            uint256 end = startTokenId + quantity;\n\n            // Use assembly to loop and emit the `Transfer` event for gas savings.\n            // The duplicated `log4` removes an extra check and reduces stack juggling.\n            // The assembly, together with the surrounding Solidity code, have been\n            // delicately arranged to nudge the compiler into producing optimized opcodes.\n            assembly {\n                // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n                toMasked := and(to, _BITMASK_ADDRESS)\n                // Emit the `Transfer` event.\n                log4(\n                    0, // Start of data (0, since no data).\n                    0, // End of data (0, since no data).\n                    _TRANSFER_EVENT_SIGNATURE, // Signature.\n                    0, // `address(0)`.\n                    toMasked, // `to`.\n                    startTokenId // `tokenId`.\n                )\n\n                // The `iszero(eq(,))` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n                // The compiler will optimize the `iszero` away for performance.\n                for {\n                    let tokenId := add(startTokenId, 1)\n                } iszero(eq(tokenId, end)) {\n                    tokenId := add(tokenId, 1)\n                } {\n                    // Emit the `Transfer` event. Similar to above.\n                    log4(0, 0, _TRANSFER_EVENT_SIGNATURE, 0, toMasked, tokenId)\n                }\n            }\n            if (toMasked == 0) revert MintToZeroAddress();\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) revert MintToZeroAddress();\n        if (quantity == 0) revert MintZeroQuantity();\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) revert MintERC2309QuantityExceedsLimit();\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        revert TransferToNonERC721ReceiverImplementer();\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) revert();\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) revert TransferCallerNotOwnerNorApproved();\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) revert OwnershipNotInitializedForExtraData();\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n}\n"
			},
			"node_modules/erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of ERC721AQueryable.\n */\ninterface IERC721AQueryable is IERC721A {\n    /**\n     * Invalid query range (`start` >= `stop`).\n     */\n    error InvalidQueryRange();\n\n    /**\n     * @dev Returns the `TokenOwnership` struct at `tokenId` without reverting.\n     *\n     * If the `tokenId` is out of bounds:\n     *\n     * - `addr = address(0)`\n     * - `startTimestamp = 0`\n     * - `burned = false`\n     * - `extraData = 0`\n     *\n     * If the `tokenId` is burned:\n     *\n     * - `addr = <Address of owner before token was burned>`\n     * - `startTimestamp = <Timestamp when token was burned>`\n     * - `burned = true`\n     * - `extraData = <Extra data when token was burned>`\n     *\n     * Otherwise:\n     *\n     * - `addr = <Address of owner>`\n     * - `startTimestamp = <Timestamp of start of ownership>`\n     * - `burned = false`\n     * - `extraData = <Extra data at start of ownership>`\n     */\n    function explicitOwnershipOf(uint256 tokenId) external view returns (TokenOwnership memory);\n\n    /**\n     * @dev Returns an array of `TokenOwnership` structs at `tokenIds` in order.\n     * See {ERC721AQueryable-explicitOwnershipOf}\n     */\n    function explicitOwnershipsOf(uint256[] memory tokenIds) external view returns (TokenOwnership[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`,\n     * in the range [`start`, `stop`)\n     * (i.e. `start <= tokenId < stop`).\n     *\n     * This function allows for tokens to be queried if the collection\n     * grows too big for a single call of {ERC721AQueryable-tokensOfOwner}.\n     *\n     * Requirements:\n     *\n     * - `start < stop`\n     */\n    function tokensOfOwnerIn(\n        address owner,\n        uint256 start,\n        uint256 stop\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Returns an array of token IDs owned by `owner`.\n     *\n     * This function scans the ownership mapping and is O(`totalSupply`) in complexity.\n     * It is meant to be called off-chain.\n     *\n     * See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into\n     * multiple smaller scans if the collection is large enough to cause\n     * an out-of-gas error (10K collections should be fine).\n     */\n    function tokensOfOwner(address owner) external view returns (uint256[] memory);\n}\n"
			},
			"node_modules/erc721a/contracts/IERC721A.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC2981.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface for the NFT Royalty Standard.\n *\n * A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal\n * support for royalty payments across all NFT marketplaces and ecosystem participants.\n *\n * _Available since v4.5._\n */\ninterface IERC2981 is IERC165 {\n    /**\n     * @dev Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of\n     * exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\n     */\n    function royaltyInfo(\n        uint256 tokenId,\n        uint256 salePrice\n    ) external view returns (address receiver, uint256 royaltyAmount);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._\n * _Available since v4.9 for `string`, `bytes`._\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n *\n * _Available since v4.8.3._\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/AccessControlEnumerable.sol": {
				"AccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {AccessControl} that allows enumerating the members of each role.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"node_modules/@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"IAccessControlEnumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControlEnumerable declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC. _Available since v4.8.3._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"IERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "royaltyAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"royaltyAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the NFT Royalty Standard. A standardized way to retrieve royalty payment information for non-fungible tokens (NFTs) to enable universal support for royalty payments across all NFT marketplaces and ecosystem participants. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC2981.sol\":\"IERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"ERC1967Upgrade": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"_ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1, and is validated in the constructor."
							},
							"_BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor."
							},
							"_IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1, and is validated in the constructor."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots. _Available since v4.1._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is validated in the constructor.\"},\"_BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\"},\"_IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is validated in the constructor.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":\"ERC1967Upgrade\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
				"Proxy": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {BeaconProxy} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"UpgradeableBeacon": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.",
						"events": {
							"Upgraded(address)": {
								"details": "Emitted when the implementation returned by the beacon is changed."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon."
							},
							"implementation()": {
								"details": "Returns the current implementation address."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeTo(address)": {
								"details": "Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60803461011a57601f6105ee38819003918201601f19168301916001600160401b0383118484101761011f5780849260209460405283398101031261011a57516001600160a01b03808216919082820361011a576000549160018060a01b0319923384821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a33b156100b2575060015416176001556040516104b890816101368239f35b62461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146102ce5780635c60da1b1461027c578063715018a6146101e05780638da5cb5b1461018f5763f2fde38b1461005457600080fd5b3461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff808216809203610188576100ad610403565b8115610104578254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b80fd5b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57610217610403565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b503461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff81169081810361018857610328610403565b3b1561037f57807fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361042457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220ee02a7cc9adae68564feda64934170f02f3f12a55b74647721baba4fb366157164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x11A JUMPI PUSH1 0x1F PUSH2 0x5EE CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x11F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x11A JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP3 SUB PUSH2 0x11A JUMPI PUSH1 0x0 SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP3 CALLER DUP5 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 EXTCODESIZE ISZERO PUSH2 0xB2 JUMPI POP PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP1 DUP2 PUSH2 0x136 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x188 JUMPI PUSH2 0xAD PUSH2 0x403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x104 JUMPI DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH2 0x217 PUSH2 0x403 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x188 JUMPI PUSH2 0x328 PUSH2 0x403 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x37F JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x424 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE MUL 0xA7 0xCC SWAP11 0xDA 0xE6 DUP6 PUSH5 0xFEDA649341 PUSH17 0xF02F3F12A55B74647721BABA4FB3661571 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "543:1496:11:-:0;;;;;;;;;;;;;-1:-1:-1;;543:1496:11;;;;-1:-1:-1;;;;;543:1496:11;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;543:1496:11;;;;;;;;;;-1:-1:-1;543:1496:11;;;;;;;;719:10:14;;543:1496:11;;;;-1:-1:-1;543:1496:11;;;719:10:14;;543:1496:11;;2566:40:4;-1:-1:-1;2566:40:4;;1702:19:13;:23;543:1496:11;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;543:1496:11;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;543:1496:11;;;;;;-1:-1:-1;543:1496:11;;;;;-1:-1:-1;543:1496:11"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"fun_checkOwner": {
									"entryPoint": 1027,
									"id": 593,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146102ce5780635c60da1b1461027c578063715018a6146101e05780638da5cb5b1461018f5763f2fde38b1461005457600080fd5b3461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff808216809203610188576100ad610403565b8115610104578254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b80fd5b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57610217610403565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b503461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff81169081810361018857610328610403565b3b1561037f57807fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361042457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220ee02a7cc9adae68564feda64934170f02f3f12a55b74647721baba4fb366157164736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x188 JUMPI PUSH2 0xAD PUSH2 0x403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x104 JUMPI DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH2 0x217 PUSH2 0x403 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x188 JUMPI PUSH2 0x328 PUSH2 0x403 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x37F JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x424 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE MUL 0xA7 0xCC SWAP11 0xDA 0xE6 DUP6 PUSH5 0xFEDA649341 PUSH17 0xF02F3F12A55B74647721BABA4FB3661571 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "543:1496:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:4;;:::i;:::-;2162:22;;543:1496:11;;;;;;;;;;;;2566:40:4;;;;543:1496:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:4;;:::i;:::-;543:1496:11;;;;;;;;;;2566:40:4;;;;543:1496:11;;;;;;;;;;;;;;;;1188:15;543:1496;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:4;;:::i;:::-;1702:19:13;:23;543:1496:11;;;;1995:35;543:1496;;;1995:35;543:1496;1602:27;;;;543:1496;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:130:4;543:1496:11;1273:6:4;543:1496:11;;719:10:14;1422:23:4;543:1496:11;;1359:130:4:o;543:1496:11:-;;;;;;;;;;;;;;;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract is used in conjunction with one or more instances of {BeaconProxy} to determine their implementation contract, which is where they will delegate all function calls. An owner is able to change the implementation the beacon points to, thus upgrading the proxies that use this beacon.\",\"events\":{\"Upgraded(address)\":{\"details\":\"Emitted when the implementation returned by the beacon is changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the address of the initial implementation, and the deployer account as the owner who can upgrade the beacon.\"},\"implementation()\":{\"details\":\"Returns the current implementation address.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeTo(address)\":{\"details\":\"Upgrades the beacon to a new implementation. Emits an {Upgraded} event. Requirements: - msg.sender must be the owner of the contract. - `newImplementation` must be a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":\"UpgradeableBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362f12aebd1022d643235e6a7fa6ccfb38c13f3a0d1b006d5d1aea51af4bb852\",\"dweb:/ipfs/QmSUQ7pM4UnBawMfP2Di8EqawxaoU195DgsSLxHejvSpPz\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/common/ERC2981.sol": {
				"ERC2981": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported. _Available since v4.5._",
						"kind": "dev",
						"methods": {
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the NFT Royalty Standard, a standardized way to retrieve royalty payment information. Royalty information can be specified globally for all token ids via {_setDefaultRoyalty}, and/or individually for specific token ids via {_setTokenRoyalty}. The latter takes precedence over the first. Royalty is specified as a fraction of sale price. {_feeDenominator} is overridable but defaults to 10000, meaning the fee is specified in basis points by default. IMPORTANT: ERC-2981 only specifies a way to signal royalty information and does not enforce its payment. See https://eips.ethereum.org/EIPS/eip-2981#optional-royalty-payments[Rationale] in the EIP. Marketplaces are expected to voluntarily pay royalties together with sales, but note that this standard is not yet widely supported. _Available since v4.5._\",\"kind\":\"dev\",\"methods\":{\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/common/ERC2981.sol\":\"ERC2981\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"node_modules/@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207148b80f48dfc5f4a9fc9e3cbb94bef5935b1f1786b282e51da15912f73cdc1764736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x48B80F48DFC5F4A9FC9E3CBB94BEF5935B1F OR DUP7 0xB2 DUP3 0xE5 SAR LOG1 MSIZE SLT 0xF7 EXTCODECOPY 0xDC OR PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "194:9169:13:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212207148b80f48dfc5f4a9fc9e3cbb94bef5935b1f1786b282e51da15912f73cdc1764736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0x48B80F48DFC5F4A9FC9E3CBB94BEF5935B1F OR DUP7 0xB2 DUP3 0xE5 SAR LOG1 MSIZE SLT 0xF7 EXTCODECOPY 0xDC OR PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "194:9169:13:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Create2.sol": {
				"Create2": {
					"abi": [],
					"devdoc": {
						"details": "Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ce75ea8b78e627f6f43d23d334bb6ad7522342fb70284125b0e1fb7f7e70739b64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE PUSH22 0xEA8B78E627F6F43D23D334BB6AD7522342FB70284125 0xB0 0xE1 0xFB PUSH32 0x7E70739B64736F6C634300081300330000000000000000000000000000000000 ",
							"sourceMap": "494:3457:15:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220ce75ea8b78e627f6f43d23d334bb6ad7522342fb70284125b0e1fb7f7e70739b64736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE PUSH22 0xEA8B78E627F6F43D23D334BB6AD7522342FB70284125 0xB0 0xE1 0xFB PUSH32 0x7E70739B64736F6C634300081300330000000000000000000000000000000000 ",
							"sourceMap": "494:3457:15:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper to make usage of the `CREATE2` EVM opcode easier and safer. `CREATE2` can be used to compute in advance the address where a smart contract will be deployed, which allows for interesting new mechanisms known as 'counterfactual interactions'. See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more information.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Create2.sol\":\"Create2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \"ERC1967: new implementation is not a contract\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212201d3f26421a67d397e5c4254ed48cbf83f142d920f01b0921f4dacc92dcaef2bb64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR EXTCODEHASH 0x26 TIMESTAMP BYTE PUSH8 0xD397E5C4254ED48C 0xBF DUP4 CALL TIMESTAMP 0xD9 KECCAK256 CREATE SHL MULMOD 0x21 DELEGATECALL 0xDA 0xCC SWAP3 0xDC 0xAE CALLCODE 0xBB PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1420:2685:16:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212201d3f26421a67d397e5c4254ed48cbf83f142d920f01b0921f4dacc92dcaef2bb64736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SAR EXTCODEHASH 0x26 TIMESTAMP BYTE PUSH8 0xD397E5C4254ED48C 0xBF DUP4 CALL TIMESTAMP 0xD9 KECCAK256 CREATE SHL MULMOD 0x21 DELEGATECALL 0xDA 0xCC SWAP3 0xDC 0xAE CALLCODE 0xBB PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "1420:2685:16:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` _Available since v4.1 for `address`, `bool`, `bytes32`, `uint256`._ _Available since v4.9 for `string`, `bytes`._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212204f7e3397fb255bae9b9c72a129c07db92a928cede69087cbe44299b4063657d664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH31 0x3397FB255BAE9B9C72A129C07DB92A928CEDE69087CBE44299B4063657D664 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "220:2559:17:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212204f7e3397fb255bae9b9c72a129c07db92a928cede69087cbe44299b4063657d664736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F PUSH31 0x3397FB255BAE9B9C72A129C07DB92A928CEDE69087CBE44299B4063657D664 PUSH20 0x6F6C634300081300330000000000000000000000 ",
							"sourceMap": "220:2559:17:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220689e5fb4ca300bdce9ff13c8c7ef578f22c420449c2d24d36bc831620acaf40f64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x9E5FB4CA300BDCE9FF SGT 0xC8 0xC7 0xEF JUMPI DUP16 0x22 0xC4 KECCAK256 PREVRANDAO SWAP13 0x2D 0x24 0xD3 PUSH12 0xC831620ACAF40F64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "202:12582:20:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea2646970667358221220689e5fb4ca300bdce9ff13c8c7ef578f22c420449c2d24d36bc831620acaf40f64736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x9E5FB4CA300BDCE9FF SGT 0xC8 0xC7 0xEF JUMPI DUP16 0x22 0xC4 KECCAK256 PREVRANDAO SWAP13 0x2D 0x24 0xD3 PUSH12 0xC831620ACAF40F64736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "202:12582:20:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122043d174729efc395d5ebe91e1f1867b50106655cf7b67105294f850371808a48664736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xD1 PUSH21 0x729EFC395D5EBE91E1F1867B50106655CF7B671052 SWAP5 0xF8 POP CALLDATACOPY XOR ADDMOD LOG4 DUP7 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "215:1047:21:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea264697066735822122043d174729efc395d5ebe91e1f1867b50106655cf7b67105294f850371808a48664736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xD1 PUSH21 0x729EFC395D5EBE91E1F1867B50106655CF7B671052 SWAP5 0xF8 POP CALLDATACOPY XOR ADDMOD LOG4 DUP7 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "215:1047:21:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212206eeaf39a035c339ab6036f07bc8063a58cd8e5f4ae635b11443a66f1d6891c5e64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xEAF39A035C339AB6036F07BC8063A5 DUP13 0xD8 0xE5 DELEGATECALL 0xAE PUSH4 0x5B11443A PUSH7 0xF1D6891C5E6473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "1329:11630:22:-:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "600080fdfea26469706673582212206eeaf39a035c339ab6036f07bc8063a58cd8e5f4ae635b11443a66f1d6891c5e64736f6c63430008130033",
							"opcodes": "PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0xEAF39A035C339AB6036F07BC8063A5 DUP13 0xD8 0xE5 DELEGATECALL 0xAE PUSH4 0x5B11443A PUSH7 0xF1D6891C5E6473 PUSH16 0x6C634300081300330000000000000000 ",
							"sourceMap": "1329:11630:22:-:0;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ```solidity contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/erc721a/contracts/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"abi_decode_string_fromMemory": {
									"entryPoint": 826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 788,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052346200030f5762001425803803806200001d8162000314565b9283398101906040818303126200030f5780516001600160401b03908181116200030f57836200004f9184016200033a565b91602093848201518381116200030f576200006b92016200033a565b8251908282116200022157600254916001948584811c9416801562000304575b8785101462000200578190601f94858111620002ad575b508790858311600114620002435760009262000237575b5050600019600383901b1c191690851b176002555b8051928311620002215760039485548581811c9116801562000216575b828210146200020057838111620001b5575b50809284116001146200014b57509282939183926000946200013f575b50501b9160001990841b1c19161790555b600080556040516110789081620003ad8239f35b0151925038806200011a565b919083601f1981168760005284600020946000905b888383106200019a575050501062000181575b505050811b0190556200012b565b015160001983861b60f8161c1916905538808062000173565b85870151885590960195948501948793509081019062000160565b86600052816000208480870160051c820192848810620001f6575b0160051c019086905b828110620001e9575050620000fd565b60008155018690620001d9565b92508192620001d0565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000eb565b634e487b7160e01b600052604160045260246000fd5b015190503880620000b9565b90879350601f198316916002600052896000209260005b8b8282106200029657505084116200027c575b505050811b01600255620000ce565b015160001960f88460031b161c191690553880806200026d565b8385015186558b979095019493840193016200025a565b9091506002600052876000208580850160051c8201928a8610620002fa575b918991869594930160051c01915b828110620002ea575050620000a2565b60008155859450899101620002da565b92508192620002cc565b93607f16936200008b565b600080fd5b6040519190601f01601f191682016001600160401b038111838210176200022157604052565b919080601f840112156200030f5782516001600160401b038111620002215760209062000370601f8201601f1916830162000314565b928184528282870101116200030f5760005b8181106200039857508260009394955001015290565b85810183015184820184015282016200038256fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100f757806306fdde03146100f2578063081812fc146100ed578063095ea7b3146100e857806318160ddd146100e357806323b872dd146100de57806342842e0e146100d95780636352211e146100d457806370a08231146100cf57806395d89b41146100ca578063a22cb465146100c5578063b88d4fde146100c0578063c87b56dd146100bb5763e985e9c5146100b657600080fd5b610a4c565b6109cb565b610947565b6107ad565b6106ea565b610669565b61062d565b61060a565b6105f6565b610591565b610472565b6103b2565b61026f565b61012b565b7fffffffff0000000000000000000000000000000000000000000000000000000081160361012657565b600080fd5b346101265760206003193601126101265760207fffffffff0000000000000000000000000000000000000000000000000000000060043561016b816100fc565b167f01ffc9a70000000000000000000000000000000000000000000000000000000081149081156101d3575b81156101a9575b506040519015158152f35b7f5b5e139f000000000000000000000000000000000000000000000000000000009150143861019e565b7f80ac58cd0000000000000000000000000000000000000000000000000000000081149150610197565b919082519283825260005b8481106102475750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610208565b90602061026c9281815201906101fd565b90565b34610126576000806003193601126103af5760405190806002549060019180831c928082169283156103a5575b602092838610851461037857858852602088019490811561033957506001146102e0575b6102dc876102d0818903826108cc565b6040519182918261025b565b0390f35b600260005294509192917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b83861061032857505050910190506102d0826102dc38806102c0565b80548587015294820194810161030c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685525050505090151560051b0190506102d0826102dc38806102c0565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b93607f169361029c565b80fd5b34610126576020600319360112610126576004356103cf81610b85565b15610402576000526006602052602073ffffffffffffffffffffffffffffffffffffffff60406000205416604051908152f35b60046040517fcf4700e4000000000000000000000000000000000000000000000000000000008152fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361012657565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361012657565b60406003193601126101265761048661042c565b60243573ffffffffffffffffffffffffffffffffffffffff806104a883610ac8565b1690813303610528575b600083815260066020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790559316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b81600052600760205260ff6105613360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166104b25760046040517fcfb3b942000000000000000000000000000000000000000000000000000000008152fd5b346101265760006003193601126101265760206000546001549003604051908152f35b60031960609101126101265773ffffffffffffffffffffffffffffffffffffffff90600435828116810361012657916024359081168103610126579060443590565b610608610602366105b4565b91610bc7565b005b610608610616366105b4565b9060405192610624846108ab565b60008452610e66565b3461012657602060031936011261012657602073ffffffffffffffffffffffffffffffffffffffff610660600435610ac8565b16604051908152f35b346101265760206003193601126101265773ffffffffffffffffffffffffffffffffffffffff61069761042c565b1680156106c0576000526005602052602067ffffffffffffffff60406000205416604051908152f35b60046040517f8f4eb604000000000000000000000000000000000000000000000000000000008152fd5b34610126576000806003193601126103af5760405190806003549060019180831c928082169283156107a3575b6020928386108514610378578588526020880194908115610339575060011461074a576102dc876102d0818903826108cc565b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83861061079257505050910190506102d0826102dc38806102c0565b805485870152948201948101610776565b93607f1693610717565b34610126576040600319360112610126576107c661042c565b602435908115158092036101265773ffffffffffffffffffffffffffffffffffffffff903360005260076020526108218160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176108c757604052565b61087c565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176108c757604052565b67ffffffffffffffff81116108c757601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60806003193601126101265761095b61042c565b61096361044f565b6064359167ffffffffffffffff83116101265736602384011215610126578260040135916109908361090d565b9261099e60405194856108cc565b80845236602482870101116101265760208160009260246106089801838801378501015260443591610e66565b34610126576020600319360112610126576109e7600435610b85565b15610a225760006040516109fa816108ab565b526102dc604051610a0a816108ab565b600081526040519182916020835260208301906101fd565b60046040517fa14c4b50000000000000000000000000000000000000000000000000000000008152fd5b3461012657604060031936011261012657602060ff610abc610a6c61042c565b73ffffffffffffffffffffffffffffffffffffffff610a8961044f565b91166000526007845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b60008181548110610afe575b60046040517fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b815260049060209180835260409283832054947c0100000000000000000000000000000000000000000000000000000000861615610b3e57505050610ad4565b93929190935b8515610b5257505050505090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808352818552838320549550610b44565b60005481109081610b94575090565b905060005260046020527c0100000000000000000000000000000000000000000000000000000000604060002054161590565b90610bd183610ac8565b73ffffffffffffffffffffffffffffffffffffffff808416928382841603610e3c57600086815260066020526040902080549092610c2f73ffffffffffffffffffffffffffffffffffffffff881633908114908414171590565b1590565b610dad575b8216958615610d8357610cbd93610c7192610d79575b5073ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b805460010190557c0200000000000000000000000000000000000000000000000000000000804260a01b851717610cfe866000526004602052604060002090565b55811615610d2f575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b60018401610d47816000526004602052604060002090565b5415610d54575b50610d07565b6000548114610d4e57610d71906000526004602052604060002090565b553880610d4e565b6000905538610c4a565b60046040517fea553b34000000000000000000000000000000000000000000000000000000008152fd5b610e0d610c2b610e0633610de18b73ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b15610c345760046040517f59c896be000000000000000000000000000000000000000000000000000000008152fd5b60046040517fa1148100000000000000000000000000000000000000000000000000000000008152fd5b929190610e74828286610bc7565b803b610e81575b50505050565b610e8a93610f43565b15610e985738808080610e7b565b60046040517fd1a57ed6000000000000000000000000000000000000000000000000000000008152fd5b90816020910312610126575161026c816100fc565b909261026c949360809373ffffffffffffffffffffffffffffffffffffffff8092168452166020830152604082015281606082015201906101fd565b3d15610f3e573d90610f248261090d565b91610f3260405193846108cc565b82523d6000602084013e565b606090565b92602091610f9a93600073ffffffffffffffffffffffffffffffffffffffff6040518097819682957f150b7a02000000000000000000000000000000000000000000000000000000009b8c85523360048601610ed7565b0393165af160009181611012575b50610fec57610fb5610f13565b80519081610fe75760046040517fd1a57ed6000000000000000000000000000000000000000000000000000000008152fd5b602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000161490565b61103491925060203d811161103b575b61102c81836108cc565b810190610ec2565b9038610fa8565b503d61102256fea264697066735822122002aef690da5218905d7d55e733b4b17ab929680ded090eaa2e548855212e8b0b64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x30F JUMPI PUSH3 0x1425 DUP1 CODESIZE SUB DUP1 PUSH3 0x1D DUP2 PUSH3 0x314 JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH1 0x40 DUP2 DUP4 SUB SLT PUSH3 0x30F JUMPI DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP2 GT PUSH3 0x30F JUMPI DUP4 PUSH3 0x4F SWAP2 DUP5 ADD PUSH3 0x33A JUMP JUMPDEST SWAP2 PUSH1 0x20 SWAP4 DUP5 DUP3 ADD MLOAD DUP4 DUP2 GT PUSH3 0x30F JUMPI PUSH3 0x6B SWAP3 ADD PUSH3 0x33A JUMP JUMPDEST DUP3 MLOAD SWAP1 DUP3 DUP3 GT PUSH3 0x221 JUMPI PUSH1 0x2 SLOAD SWAP2 PUSH1 0x1 SWAP5 DUP6 DUP5 DUP2 SHR SWAP5 AND DUP1 ISZERO PUSH3 0x304 JUMPI JUMPDEST DUP8 DUP6 LT EQ PUSH3 0x200 JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x2AD JUMPI JUMPDEST POP DUP8 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x243 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x237 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP6 SHL OR PUSH1 0x2 SSTORE JUMPDEST DUP1 MLOAD SWAP3 DUP4 GT PUSH3 0x221 JUMPI PUSH1 0x3 SWAP5 DUP6 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x216 JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x200 JUMPI DUP4 DUP2 GT PUSH3 0x1B5 JUMPI JUMPDEST POP DUP1 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH3 0x14B JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x13F JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP5 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x1078 SWAP1 DUP2 PUSH3 0x3AD DUP3 CODECOPY RETURN JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0x11A JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x19A JUMPI POP POP POP LT PUSH3 0x181 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0x12B JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP7 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x173 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x160 JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP9 LT PUSH3 0x1F6 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP7 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x1E9 JUMPI POP POP PUSH3 0xFD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP7 SWAP1 PUSH3 0x1D9 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x1D0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xEB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0xB9 JUMP JUMPDEST SWAP1 DUP8 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x2 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP12 DUP3 DUP3 LT PUSH3 0x296 JUMPI POP POP DUP5 GT PUSH3 0x27C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0xCE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x26D JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP12 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x25A JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP7 LT PUSH3 0x2FA JUMPI JUMPDEST SWAP2 DUP10 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2EA JUMPI POP POP PUSH3 0xA2 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP10 SWAP2 ADD PUSH3 0x2DA JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x2CC JUMP JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH3 0x8B JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x221 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP1 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH3 0x30F JUMPI DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH3 0x221 JUMPI PUSH1 0x20 SWAP1 PUSH3 0x370 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD PUSH3 0x314 JUMP JUMPDEST SWAP3 DUP2 DUP5 MSTORE DUP3 DUP3 DUP8 ADD ADD GT PUSH3 0x30F JUMPI PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH3 0x398 JUMPI POP DUP3 PUSH1 0x0 SWAP4 SWAP5 SWAP6 POP ADD ADD MSTORE SWAP1 JUMP JUMPDEST DUP6 DUP2 ADD DUP4 ADD MLOAD DUP5 DUP3 ADD DUP5 ADD MSTORE DUP3 ADD PUSH3 0x382 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xBB JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH2 0x7AD JUMP JUMPDEST PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x126 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 CALLDATALOAD PUSH2 0x16B DUP2 PUSH2 0xFC JUMP JUMPDEST AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1D3 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1A9 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x19E JUMP JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x197 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x247 JUMPI POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x208 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x26C SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1FD JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x3A5 JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x378 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x339 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2E0 JUMPI JUMPDEST PUSH2 0x2DC DUP8 PUSH2 0x2D0 DUP2 DUP10 SUB DUP3 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x25B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP4 DUP7 LT PUSH2 0x328 JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x2D0 DUP3 PUSH2 0x2DC CODESIZE DUP1 PUSH2 0x2C0 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x30C JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 MSTORE POP POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP PUSH2 0x2D0 DUP3 PUSH2 0x2DC CODESIZE DUP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x29C JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3CF DUP2 PUSH2 0xB85 JUMP JUMPDEST ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x126 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x126 JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x486 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x4A8 DUP4 PUSH2 0xAC8 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x528 JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x561 CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x4B2 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x126 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x126 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x126 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x608 PUSH2 0x602 CALLDATASIZE PUSH2 0x5B4 JUMP JUMPDEST SWAP2 PUSH2 0xBC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x608 PUSH2 0x616 CALLDATASIZE PUSH2 0x5B4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x624 DUP5 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0xE66 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x660 PUSH1 0x4 CALLDATALOAD PUSH2 0xAC8 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x697 PUSH2 0x42C JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x6C0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x7A3 JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x378 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x339 JUMPI POP PUSH1 0x1 EQ PUSH2 0x74A JUMPI PUSH2 0x2DC DUP8 PUSH2 0x2D0 DUP2 DUP10 SUB DUP3 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP7 LT PUSH2 0x792 JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x2D0 DUP3 PUSH2 0x2DC CODESIZE DUP1 PUSH2 0x2C0 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x776 JUMP JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x717 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x7C6 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x126 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x821 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x87C JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8C7 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x95B PUSH2 0x42C JUMP JUMPDEST PUSH2 0x963 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x126 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x126 JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x990 DUP4 PUSH2 0x90D JUMP JUMPDEST SWAP3 PUSH2 0x99E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x8CC JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP8 ADD ADD GT PUSH2 0x126 JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x608 SWAP9 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0xE66 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x9E7 PUSH1 0x4 CALLDATALOAD PUSH2 0xB85 JUMP JUMPDEST ISZERO PUSH2 0xA22 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x9FA DUP2 PUSH2 0x8AB JUMP JUMPDEST MSTORE PUSH2 0x2DC PUSH1 0x40 MLOAD PUSH2 0xA0A DUP2 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xABC PUSH2 0xA6C PUSH2 0x42C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA89 PUSH2 0x44F JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAFE JUMPI JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP1 PUSH1 0x20 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP4 KECCAK256 SLOAD SWAP5 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP7 AND ISZERO PUSH2 0xB3E JUMPI POP POP POP PUSH2 0xAD4 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 JUMPDEST DUP6 ISZERO PUSH2 0xB52 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP1 DUP4 MSTORE DUP2 DUP6 MSTORE DUP4 DUP4 KECCAK256 SLOAD SWAP6 POP PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 LT SWAP1 DUP2 PUSH2 0xB94 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xBD1 DUP4 PUSH2 0xAC8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 DUP3 DUP5 AND SUB PUSH2 0xE3C JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 PUSH2 0xC2F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP5 EQ OR ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xDAD JUMPI JUMPDEST DUP3 AND SWAP6 DUP7 ISZERO PUSH2 0xD83 JUMPI PUSH2 0xCBD SWAP4 PUSH2 0xC71 SWAP3 PUSH2 0xD79 JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0xCFE DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0xD2F JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0xD47 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0xD54 JUMPI JUMPDEST POP PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0xD4E JUMPI PUSH2 0xD71 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xE0D PUSH2 0xC2B PUSH2 0xE06 CALLER PUSH2 0xDE1 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xC34 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0xE74 DUP3 DUP3 DUP7 PUSH2 0xBC7 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0xE81 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE8A SWAP4 PUSH2 0xF43 JUMP JUMPDEST ISZERO PUSH2 0xE98 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x126 JUMPI MLOAD PUSH2 0x26C DUP2 PUSH2 0xFC JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x26C SWAP5 SWAP4 PUSH1 0x80 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1FD JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xF3E JUMPI RETURNDATASIZE SWAP1 PUSH2 0xF24 DUP3 PUSH2 0x90D JUMP JUMPDEST SWAP2 PUSH2 0xF32 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x8CC JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP2 PUSH2 0xF9A SWAP4 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP7 DUP3 SWAP6 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP12 DUP13 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0xED7 JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1012 JUMPI JUMPDEST POP PUSH2 0xFEC JUMPI PUSH2 0xFB5 PUSH2 0xF13 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0xFE7 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x1034 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x103B JUMPI JUMPDEST PUSH2 0x102C DUP2 DUP4 PUSH2 0x8CC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xEC2 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xFA8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1022 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xAE 0xF6 SWAP1 0xDA MSTORE XOR SWAP1 0x5D PUSH30 0x55E733B4B17AB929680DED090EAA2E548855212E8B0B64736F6C63430008 SGT STOP CALLER ",
							"sourceMap": "895:40452:23:-:0;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;895:40452:23;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;5012:13;895:40452;;;;;;;;;;;;;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;;-1:-1:-1;895:40452:23;;;;;;;;;;-1:-1:-1;895:40452:23;;;;-1:-1:-1;;;;895:40452:23;;;;;;;;;;;5012:13;895:40452;;;;;;;;;5035:17;895:40452;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;-1:-1:-1;895:40452:23;;-1:-1:-1;895:40452:23;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;895:40452:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:23;;;;;;;;-1:-1:-1;895:40452:23;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:23;;;;;-1:-1:-1;895:40452:23;;;;;;;;;;;;-1:-1:-1;895:40452:23;;;;;-1:-1:-1;895:40452:23;;;;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;5012:13;-1:-1:-1;895:40452:23;;-1:-1:-1;895:40452:23;;-1:-1:-1;895:40452:23;;;;;;;;;;-1:-1:-1;895:40452:23;;;;;;;;;5012:13;895:40452;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5012:13;-1:-1:-1;895:40452:23;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:23;;;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;;;;;;;-1:-1:-1;895:40452:23;;;;;;;;;-1:-1:-1;;895:40452:23;;;-1:-1:-1;;;;;895:40452:23;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;895:40452:23;;;;;;;;;;-1:-1:-1;;895:40452:23;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;895:40452:23;;;;;;;;-1:-1:-1;895:40452:23;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_4017": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_addresst_uint256": {
									"entryPoint": 1460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_bytes4_fromMemory": {
									"entryPoint": 3778,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_address_uint256_bytes": {
									"entryPoint": 3799,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_to_string": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 2317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_string_storage_4015": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_string": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_wrapping_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"external_fun_approve": {
									"entryPoint": 1138,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_balanceOf": {
									"entryPoint": 1641,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getApproved": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_isApprovedForAll": {
									"entryPoint": 2636,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_name": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_ownerOf": {
									"entryPoint": 1581,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_safeTransferFrom": {
									"entryPoint": 1546,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_safeTransferFrom_4714": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setApprovalForAll": {
									"entryPoint": 1965,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_supportsInterface": {
									"entryPoint": 299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_symbol": {
									"entryPoint": 1770,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_tokenURI": {
									"entryPoint": 2507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_totalSupply": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_transferFrom": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"extract_returndata": {
									"entryPoint": 3859,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 2252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_6021": {
									"entryPoint": 2219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkContractOnERC721Received": {
									"entryPoint": 3907,
									"id": 4795,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"fun_exists": {
									"entryPoint": 2949,
									"id": 4479,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_getApprovedSlotAndAddress": {
									"entryPoint": null,
									"id": 4512,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"fun_isSenderApprovedOrOwner": {
									"entryPoint": null,
									"id": 4493,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_packedOwnershipOf": {
									"entryPoint": 2760,
									"id": 4265,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_safeTransferFrom": {
									"entryPoint": 3686,
									"id": 4714,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_transferFrom": {
									"entryPoint": 3015,
									"id": 4657,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"increment_wrapping_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address_4039": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_uint256_of_address_4040": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_uint256_uint256_of_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 2172,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"read_from_storage_split_offset_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"update_storage_value_offsett_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100f757806306fdde03146100f2578063081812fc146100ed578063095ea7b3146100e857806318160ddd146100e357806323b872dd146100de57806342842e0e146100d95780636352211e146100d457806370a08231146100cf57806395d89b41146100ca578063a22cb465146100c5578063b88d4fde146100c0578063c87b56dd146100bb5763e985e9c5146100b657600080fd5b610a4c565b6109cb565b610947565b6107ad565b6106ea565b610669565b61062d565b61060a565b6105f6565b610591565b610472565b6103b2565b61026f565b61012b565b7fffffffff0000000000000000000000000000000000000000000000000000000081160361012657565b600080fd5b346101265760206003193601126101265760207fffffffff0000000000000000000000000000000000000000000000000000000060043561016b816100fc565b167f01ffc9a70000000000000000000000000000000000000000000000000000000081149081156101d3575b81156101a9575b506040519015158152f35b7f5b5e139f000000000000000000000000000000000000000000000000000000009150143861019e565b7f80ac58cd0000000000000000000000000000000000000000000000000000000081149150610197565b919082519283825260005b8481106102475750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b602081830181015184830182015201610208565b90602061026c9281815201906101fd565b90565b34610126576000806003193601126103af5760405190806002549060019180831c928082169283156103a5575b602092838610851461037857858852602088019490811561033957506001146102e0575b6102dc876102d0818903826108cc565b6040519182918261025b565b0390f35b600260005294509192917f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b83861061032857505050910190506102d0826102dc38806102c0565b80548587015294820194810161030c565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001685525050505090151560051b0190506102d0826102dc38806102c0565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526022600452fd5b93607f169361029c565b80fd5b34610126576020600319360112610126576004356103cf81610b85565b15610402576000526006602052602073ffffffffffffffffffffffffffffffffffffffff60406000205416604051908152f35b60046040517fcf4700e4000000000000000000000000000000000000000000000000000000008152fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361012657565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361012657565b60406003193601126101265761048661042c565b60243573ffffffffffffffffffffffffffffffffffffffff806104a883610ac8565b1690813303610528575b600083815260066020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790559316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b81600052600760205260ff6105613360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166104b25760046040517fcfb3b942000000000000000000000000000000000000000000000000000000008152fd5b346101265760006003193601126101265760206000546001549003604051908152f35b60031960609101126101265773ffffffffffffffffffffffffffffffffffffffff90600435828116810361012657916024359081168103610126579060443590565b610608610602366105b4565b91610bc7565b005b610608610616366105b4565b9060405192610624846108ab565b60008452610e66565b3461012657602060031936011261012657602073ffffffffffffffffffffffffffffffffffffffff610660600435610ac8565b16604051908152f35b346101265760206003193601126101265773ffffffffffffffffffffffffffffffffffffffff61069761042c565b1680156106c0576000526005602052602067ffffffffffffffff60406000205416604051908152f35b60046040517f8f4eb604000000000000000000000000000000000000000000000000000000008152fd5b34610126576000806003193601126103af5760405190806003549060019180831c928082169283156107a3575b6020928386108514610378578588526020880194908115610339575060011461074a576102dc876102d0818903826108cc565b600360005294509192917fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b83861061079257505050910190506102d0826102dc38806102c0565b805485870152948201948101610776565b93607f1693610717565b34610126576040600319360112610126576107c661042c565b602435908115158092036101265773ffffffffffffffffffffffffffffffffffffffff903360005260076020526108218160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176108c757604052565b61087c565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176108c757604052565b67ffffffffffffffff81116108c757601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60806003193601126101265761095b61042c565b61096361044f565b6064359167ffffffffffffffff83116101265736602384011215610126578260040135916109908361090d565b9261099e60405194856108cc565b80845236602482870101116101265760208160009260246106089801838801378501015260443591610e66565b34610126576020600319360112610126576109e7600435610b85565b15610a225760006040516109fa816108ab565b526102dc604051610a0a816108ab565b600081526040519182916020835260208301906101fd565b60046040517fa14c4b50000000000000000000000000000000000000000000000000000000008152fd5b3461012657604060031936011261012657602060ff610abc610a6c61042c565b73ffffffffffffffffffffffffffffffffffffffff610a8961044f565b91166000526007845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b60008181548110610afe575b60046040517fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b815260049060209180835260409283832054947c0100000000000000000000000000000000000000000000000000000000861615610b3e57505050610ad4565b93929190935b8515610b5257505050505090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01808352818552838320549550610b44565b60005481109081610b94575090565b905060005260046020527c0100000000000000000000000000000000000000000000000000000000604060002054161590565b90610bd183610ac8565b73ffffffffffffffffffffffffffffffffffffffff808416928382841603610e3c57600086815260066020526040902080549092610c2f73ffffffffffffffffffffffffffffffffffffffff881633908114908414171590565b1590565b610dad575b8216958615610d8357610cbd93610c7192610d79575b5073ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01905573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b805460010190557c0200000000000000000000000000000000000000000000000000000000804260a01b851717610cfe866000526004602052604060002090565b55811615610d2f575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b60018401610d47816000526004602052604060002090565b5415610d54575b50610d07565b6000548114610d4e57610d71906000526004602052604060002090565b553880610d4e565b6000905538610c4a565b60046040517fea553b34000000000000000000000000000000000000000000000000000000008152fd5b610e0d610c2b610e0633610de18b73ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b15610c345760046040517f59c896be000000000000000000000000000000000000000000000000000000008152fd5b60046040517fa1148100000000000000000000000000000000000000000000000000000000008152fd5b929190610e74828286610bc7565b803b610e81575b50505050565b610e8a93610f43565b15610e985738808080610e7b565b60046040517fd1a57ed6000000000000000000000000000000000000000000000000000000008152fd5b90816020910312610126575161026c816100fc565b909261026c949360809373ffffffffffffffffffffffffffffffffffffffff8092168452166020830152604082015281606082015201906101fd565b3d15610f3e573d90610f248261090d565b91610f3260405193846108cc565b82523d6000602084013e565b606090565b92602091610f9a93600073ffffffffffffffffffffffffffffffffffffffff6040518097819682957f150b7a02000000000000000000000000000000000000000000000000000000009b8c85523360048601610ed7565b0393165af160009181611012575b50610fec57610fb5610f13565b80519081610fe75760046040517fd1a57ed6000000000000000000000000000000000000000000000000000000008152fd5b602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000161490565b61103491925060203d811161103b575b61102c81836108cc565b810190610ec2565b9038610fa8565b503d61102256fea264697066735822122002aef690da5218905d7d55e733b4b17ab929680ded090eaa2e548855212e8b0b64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0xED JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xDE JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0xD9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0xCF JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0xCA JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0xC0 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0xBB JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0xB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x947 JUMP JUMPDEST PUSH2 0x7AD JUMP JUMPDEST PUSH2 0x6EA JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH2 0x62D JUMP JUMPDEST PUSH2 0x60A JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x591 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH2 0x3B2 JUMP JUMPDEST PUSH2 0x26F JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x126 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 PUSH1 0x4 CALLDATALOAD PUSH2 0x16B DUP2 PUSH2 0xFC JUMP JUMPDEST AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1D3 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x1A9 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x19E JUMP JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x197 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x247 JUMPI POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP7 SWAP8 DUP7 ADD ADD MSTORE ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x208 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x26C SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1FD JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x3A5 JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x378 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x339 JUMPI POP PUSH1 0x1 EQ PUSH2 0x2E0 JUMPI JUMPDEST PUSH2 0x2DC DUP8 PUSH2 0x2D0 DUP2 DUP10 SUB DUP3 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x25B JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP4 DUP7 LT PUSH2 0x328 JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x2D0 DUP3 PUSH2 0x2DC CODESIZE DUP1 PUSH2 0x2C0 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x30C JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP6 MSTORE POP POP POP POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP PUSH2 0x2D0 DUP3 PUSH2 0x2DC CODESIZE DUP1 PUSH2 0x2C0 JUMP JUMPDEST PUSH1 0x24 DUP3 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE REVERT JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x29C JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x3CF DUP2 PUSH2 0xB85 JUMP JUMPDEST ISZERO PUSH2 0x402 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x126 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x126 JUMPI JUMP JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x486 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x4A8 DUP4 PUSH2 0xAC8 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x528 JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x561 CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x4B2 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x126 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x126 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x126 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x608 PUSH2 0x602 CALLDATASIZE PUSH2 0x5B4 JUMP JUMPDEST SWAP2 PUSH2 0xBC7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x608 PUSH2 0x616 CALLDATASIZE PUSH2 0x5B4 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x624 DUP5 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0xE66 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x660 PUSH1 0x4 CALLDATALOAD PUSH2 0xAC8 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x697 PUSH2 0x42C JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x6C0 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x3 SLOAD SWAP1 PUSH1 0x1 SWAP2 DUP1 DUP4 SHR SWAP3 DUP1 DUP3 AND SWAP3 DUP4 ISZERO PUSH2 0x7A3 JUMPI JUMPDEST PUSH1 0x20 SWAP3 DUP4 DUP7 LT DUP6 EQ PUSH2 0x378 JUMPI DUP6 DUP9 MSTORE PUSH1 0x20 DUP9 ADD SWAP5 SWAP1 DUP2 ISZERO PUSH2 0x339 JUMPI POP PUSH1 0x1 EQ PUSH2 0x74A JUMPI PUSH2 0x2DC DUP8 PUSH2 0x2D0 DUP2 DUP10 SUB DUP3 PUSH2 0x8CC JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B JUMPDEST DUP4 DUP7 LT PUSH2 0x792 JUMPI POP POP POP SWAP2 ADD SWAP1 POP PUSH2 0x2D0 DUP3 PUSH2 0x2DC CODESIZE DUP1 PUSH2 0x2C0 JUMP JUMPDEST DUP1 SLOAD DUP6 DUP8 ADD MSTORE SWAP5 DUP3 ADD SWAP5 DUP2 ADD PUSH2 0x776 JUMP JUMPDEST SWAP4 PUSH1 0x7F AND SWAP4 PUSH2 0x717 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x7C6 PUSH2 0x42C JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x126 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x821 DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x87C JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x8C7 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x8C7 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x95B PUSH2 0x42C JUMP JUMPDEST PUSH2 0x963 PUSH2 0x44F JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x126 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x126 JUMPI DUP3 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0x990 DUP4 PUSH2 0x90D JUMP JUMPDEST SWAP3 PUSH2 0x99E PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x8CC JUMP JUMPDEST DUP1 DUP5 MSTORE CALLDATASIZE PUSH1 0x24 DUP3 DUP8 ADD ADD GT PUSH2 0x126 JUMPI PUSH1 0x20 DUP2 PUSH1 0x0 SWAP3 PUSH1 0x24 PUSH2 0x608 SWAP9 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0xE66 JUMP JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH2 0x9E7 PUSH1 0x4 CALLDATALOAD PUSH2 0xB85 JUMP JUMPDEST ISZERO PUSH2 0xA22 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x9FA DUP2 PUSH2 0x8AB JUMP JUMPDEST MSTORE PUSH2 0x2DC PUSH1 0x40 MLOAD PUSH2 0xA0A DUP2 PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x1FD JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x126 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x126 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0xABC PUSH2 0xA6C PUSH2 0x42C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA89 PUSH2 0x44F JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAFE JUMPI JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP1 PUSH1 0x20 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP4 KECCAK256 SLOAD SWAP5 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP7 AND ISZERO PUSH2 0xB3E JUMPI POP POP POP PUSH2 0xAD4 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 JUMPDEST DUP6 ISZERO PUSH2 0xB52 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD DUP1 DUP4 MSTORE DUP2 DUP6 MSTORE DUP4 DUP4 KECCAK256 SLOAD SWAP6 POP PUSH2 0xB44 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 LT SWAP1 DUP2 PUSH2 0xB94 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xBD1 DUP4 PUSH2 0xAC8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 DUP3 DUP5 AND SUB PUSH2 0xE3C JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 PUSH2 0xC2F PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP5 EQ OR ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0xDAD JUMPI JUMPDEST DUP3 AND SWAP6 DUP7 ISZERO PUSH2 0xD83 JUMPI PUSH2 0xCBD SWAP4 PUSH2 0xC71 SWAP3 PUSH2 0xD79 JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0xCFE DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0xD2F JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0xD47 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0xD54 JUMPI JUMPDEST POP PUSH2 0xD07 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0xD4E JUMPI PUSH2 0xD71 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0xC4A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xE0D PUSH2 0xC2B PUSH2 0xE06 CALLER PUSH2 0xDE1 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0xC34 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0xE74 DUP3 DUP3 DUP7 PUSH2 0xBC7 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0xE81 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE8A SWAP4 PUSH2 0xF43 JUMP JUMPDEST ISZERO PUSH2 0xE98 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x126 JUMPI MLOAD PUSH2 0x26C DUP2 PUSH2 0xFC JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x26C SWAP5 SWAP4 PUSH1 0x80 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1FD JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xF3E JUMPI RETURNDATASIZE SWAP1 PUSH2 0xF24 DUP3 PUSH2 0x90D JUMP JUMPDEST SWAP2 PUSH2 0xF32 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x8CC JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP2 PUSH2 0xF9A SWAP4 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP7 DUP3 SWAP6 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP12 DUP13 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0xED7 JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x1012 JUMPI JUMPDEST POP PUSH2 0xFEC JUMPI PUSH2 0xFB5 PUSH2 0xF13 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0xFE7 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x1034 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x103B JUMPI JUMPDEST PUSH2 0x102C DUP2 DUP4 PUSH2 0x8CC JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xEC2 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xFA8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1022 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xAE 0xF6 SWAP1 0xDA MSTORE XOR SWAP1 0x5D PUSH30 0x55E733B4B17AB929680DED090EAA2E548855212E8B0B64736F6C63430008 SGT STOP CALLER ",
							"sourceMap": "895:40452:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;895:40452:23;;;;;;;;;;;;:::i;:::-;;;9558:25;;:101;;;;;895:40452;9558:177;;;;895:40452;;;;;;;;;;9558:177;895:40452;9710:25;;;9558:177;;;:101;895:40452;9634:25;;;-1:-1:-1;9558:101:23;;895:40452;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;895:40452:23;;;;;;;;;10125:5;895:40452;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;10125:5;895:40452;;;-1:-1:-1;895:40452:23;;;;;;;;;;-1:-1:-1;;;895:40452:23;;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;895:40452:23;;;;;;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;895:40452:23;;;;;;;16460:16;;;:::i;:::-;16459:17;16455:64;;-1:-1:-1;895:40452:23;16537:15;895:40452;;;;;-1:-1:-1;895:40452:23;;;;;;;;;16455:64;895:40452;;;16485:34;;;;895:40452;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;895:40452:23;;;;;;;:::i;:::-;;;;11505:27;;;;:::i;:::-;895:40452;39523:10;;;15947:28;15943:172;;895:40452;-1:-1:-1;895:40452:23;;;16125:15;895:40452;;;;;;;;;;;;;;;-1:-1:-1;895:40452:23;16175:28;;;;;895:40452;;15943:172;895:40452;-1:-1:-1;895:40452:23;17402:18;895:40452;;;17402:35;39523:10;895:40452;-1:-1:-1;895:40452:23;;;;;;;;;;;;;17402:35;895:40452;;15943:172;15989:126;895:40452;;;16065:35;;;;895:40452;;;;;-1:-1:-1;;895:40452:23;;;;;;;;6164:12;895:40452;;;;;;;;;;-1:-1:-1;;895:40452:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;22899:39;895:40452;;;:::i;:::-;;;;;;;;:::i;:::-;;;;22899:39;:::i;895:40452::-;;;;;-1:-1:-1;;895:40452:23;;;;;;;11505:27;895:40452;;11505:27;:::i;:::-;895:40452;;;;;;;;;;;;-1:-1:-1;;895:40452:23;;;;;;;;:::i;:::-;;7140:19;;7136:60;;-1:-1:-1;895:40452:23;7213:18;895:40452;;;1360:13;895:40452;-1:-1:-1;895:40452:23;;7213:55;895:40452;;;;;;7136:60;895:40452;;;7168:28;;;;895:40452;;;;;;-1:-1:-1;;895:40452:23;;;;;;;;;10296:7;895:40452;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10296:7;895:40452;;;-1:-1:-1;895:40452:23;;;;;;;;;;-1:-1:-1;;;895:40452:23;;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;895:40452:23;;;;;;;:::i;:::-;;;;;;;;;;;;;39523:10;;-1:-1:-1;895:40452:23;16995:18;895:40452;;16995:49;895:40452;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;16995:49;895:40452;;;;;;;;;;;;;;;;39523:10;17070:55;895:40452;39523:10;17070:55;;895:40452;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;895:40452:23;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;895:40452:23;;;;;10514:16;895:40452;;10514:16;:::i;:::-;10513:17;10509:59;;-1:-1:-1;895:40452:23;;;;;:::i;:::-;;;;;;;;:::i;:::-;-1:-1:-1;895:40452:23;;;;;;;;;;;;;;;:::i;10509:59::-;895:40452;;;10539:29;;;;895:40452;;;;;-1:-1:-1;;895:40452:23;;;;;;;17402:35;895:40452;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;895:40452:23;17402:18;895:40452;;;-1:-1:-1;895:40452:23;;;;;;;;;;;;;17402:35;895:40452;;;;;;;;;;12515:1249;895:40452;12601:22;895:40452;;12707:20;;12703:997;;12515:1249;13726:31;895:40452;;13726:31;;;;12703:997;895:40452;;12768:17;895:40452;;;;;;;;;;;;12855:24;2118:8;12855:24;;:29;12851:831;;12703:997;;;;;12851:831;13510:111;;;;;13517:11;;;;;13646:13;;;;;;:::o;13510:111::-;2118:8;;895:40452;;;;;;;;;;;-1:-1:-1;13510:111:23;;17693:277;5508:1;895:40452;17835:23;;17793:151;;;;17774:170;17693:277;:::o;17793:151::-;895:40452;;5508:1;895:40452;17895:17;895:40452;;2118:8;895:40452;5508:1;895:40452;;17895:44;:49;17693:277;:::o;19903:2764::-;;20070:27;;;:::i;:::-;895:40452;;;;;;;;;20112:45;20108:86;;-1:-1:-1;895:40452:23;;;19036:15;895:40452;;;;;19164:132;;39523:10;;20393:69;18242:472;;;39523:10;18242:472;;;;;;;20393:69;;895:40452;20394:68;20393:69;;895:40452;20393:69;20389:179;;19903:2764;895:40452;;20583:16;;;20579:52;;21368:22;20748:190;21300:24;20748:190;;;19903:2764;21300:24;895:40452;;;;21300:18;895:40452;;;;;;;21300:24;895:40452;;2118:8;;895:40452;;;;;;21300:18;895:40452;;;;;;;21368:22;895:40452;;;;;;21739:73;14403:331;;;;;;;21654:26;;895:40452;;21654:17;895:40452;;;;;;;21654:26;895:40452;21943:47;;:52;21939:617;;19903:2764;22581:27;;-1:-1:-1;22581:27:23;;19903:2764::o;21939:617::-;22047:1;2392:8;;22168:30;;895:40452;;21654:17;895:40452;;;;;;;22168:30;895:40452;22168:35;22164:378;;21939:617;;;;22164:378;-1:-1:-1;895:40452:23;22285:239;;22164:378;22285:239;22449:30;;895:40452;;21654:17;895:40452;;;;;;;22449:30;895:40452;22285:239;;22164:378;;20748:190;20597:1;20748:190;;;;;20579:52;20608:23;895:40452;;20608:23;;;;20389:179;20480:44;17402:35;;39523:10;17402:25;;895:40452;;;;17402:18;895:40452;;;;;;;17402:25;895:40452;;;;;;;;;;;;17402:35;895:40452;;;;;20480:44;20476:92;20389:179;20476:92;20533:35;895:40452;;20533:35;;;;20108:86;20166:28;895:40452;;20166:28;;;;23526:396;;;;23718:7;;;;;:::i;:::-;23740:14;;23736:180;;23526:396;;;;;:::o;23736:180::-;23778:56;;;:::i;:::-;23777:57;23773:143;;23736:180;;;;;;23773:143;23861:40;895:40452;;23861:40;;;;895:40452;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;895:40452:23;;;;:::o;:::-;;;:::o;25948:697::-;;26126:88;25948:697;26126:88;25948:697;895:40452;;;;;;;;;;;26126:88;;;;39523:10;26126:88;;;;:::i;:::-;;895:40452;;26126:88;;895:40452;;26126:88;;;25948:697;-1:-1:-1;26122:517:23;;26358:281;;:::i;:::-;895:40452;;;26404:18;;;26126:88;895:40452;;26449:40;;;;26400:229;26126:88;26528:87;;26122:517;895:40452;;26282:64;26275:71;:::o;26126:88::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/erc721a/contracts/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"node_modules/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/erc721a/contracts/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"node_modules/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/erc721a/contracts/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/erc721a/contracts/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/erc721a/contracts/extensions/ERC721AQueryable.sol": {
				"ERC721AQueryable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721A subclass with convenience query functions.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721AQueryable.",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721A subclass with convenience query functions.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721AQueryable.\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/erc721a/contracts/extensions/ERC721AQueryable.sol\":\"ERC721AQueryable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"node_modules/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"node_modules/erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xad83a36e9758f044317e9a5e2903bc49730b6d5de8fbe9a61b2f91fb4c2148c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b516fbe3026a9d529d359167c7f59d541c97369ff8c1f9e3698a669e43bb3205\",\"dweb:/ipfs/QmeUNVACjEnkz2D9JrzpGrNgVqJnQkYsWzY8UsHaAZWqtW\"]},\"node_modules/erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0xc14fc938aecdccee7edbd3a3ce60b6171cdc3da3345cfa6d288c268983c48942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3e98fca40eb76d808b70410ff794373dd3d409aaf4ecc3c5bcf517172b20a84\",\"dweb:/ipfs/QmNzXKtrsUe17JYnQmp2jfZZaJwjmo14H4UsxTUV4uArdS\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"IERC721AQueryable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721AQueryable.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721AQueryable.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/erc721a/contracts/extensions/IERC721AQueryable.sol\":\"IERC721AQueryable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"node_modules/erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0xc14fc938aecdccee7edbd3a3ce60b6171cdc3da3345cfa6d288c268983c48942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3e98fca40eb76d808b70410ff794373dd3d409aaf4ecc3c5bcf517172b20a84\",\"dweb:/ipfs/QmNzXKtrsUe17JYnQmp2jfZZaJwjmo14H4UsxTUV4uArdS\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/SequenceProxyFactory.sol": {
				"SequenceProxyFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beacon",
							"outputs": [
								{
									"internalType": "contract UpgradeableBeacon",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "upgradeBeacon",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The factory owner is able to upgrade the beacon implementation.Proxy deployers are able to override the beacon reference with their own.",
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeBeacon(address)": {
								"params": {
									"implementation": "The new beacon implementation."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beacon\",\"outputs\":[{\"internalType\":\"contract UpgradeableBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgradeBeacon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The factory owner is able to upgrade the beacon implementation.Proxy deployers are able to override the beacon reference with their own.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeBeacon(address)\":{\"params\":{\"implementation\":\"The new beacon implementation.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"upgradeBeacon(address)\":{\"notice\":\"Upgrades the beacon implementation.\"}},\"notice\":\"An proxy factory that deploys upgradeable beacon proxies.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/SequenceProxyFactory.sol\":\"SequenceProxyFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362f12aebd1022d643235e6a7fa6ccfb38c13f3a0d1b006d5d1aea51af4bb852\",\"dweb:/ipfs/QmSUQ7pM4UnBawMfP2Di8EqawxaoU195DgsSLxHejvSpPz\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/SequenceProxyFactory.sol\":{\"keccak256\":\"0x6d0425d1cba800f631103fe7da31e78322d200feecc6fa32fdd8eb92f06f84b8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4480084f54006be526cdfb2fc19a80725bca3bb0e02075d1eda792d07d8b5019\",\"dweb:/ipfs/QmSdSdYWg4vttAZuGqn3ftt6jVy8hE82m5jAhUEzBvoCf1\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0xe8770bd5e7bff02d40974b7e0bcc7ecdf68239671b26e5b4fd9fa1e555e3a23d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://36003f3957a8b08a1205bd189a752327586e14d55bd2858ab855b9fcde95a59a\",\"dweb:/ipfs/QmYCwu9xZREwYpXKFVLVtJ5RQKsqg5pu6KWeuN7RL6p1LL\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x649109cb43bd53efa1f3ab03009f640ff1e913289d428bd03c2ec0c1a7cb284c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1eb093cdda1fbb37616825744cd61979d5e526d66334509216eb5791733ee15\",\"dweb:/ipfs/QmU1VfUKjNk5xKNsyT98nueSUgUQCScxmh7Xr2bSSpAmUf\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x9a1a05a97e97c5fe45122444e28641330e04a379fd509c9cc092032f897093ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ab1a59cfa8db6640b78af4f342eb728991a9b50e3abce4e9dd4eeff0425a2a7\",\"dweb:/ipfs/QmW1kx9RTZ6UWxzVqit7eGopXpQRPeE6hV3riizCvg6SjA\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x3cab73a660eb60140697bc774d47b58bee23a45f70dbe3beca421d1f864793f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6f5755050696c83343abea9ee04c406230ad822785f9443c9598fd34f581ab3\",\"dweb:/ipfs/QmYgf7VY9VTRHR2GiKzhGzbdKqH7sbDf6mfV84XY7PqvW2\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"upgradeBeacon(address)": {
								"notice": "Upgrades the beacon implementation."
							}
						},
						"notice": "An proxy factory that deploys upgradeable beacon proxies.",
						"version": 1
					}
				}
			},
			"src/proxies/TransparentUpgradeableBeaconProxy.sol": {
				"ITransparentUpgradeableBeaconProxy": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":\"ITransparentUpgradeableBeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0xe8770bd5e7bff02d40974b7e0bcc7ecdf68239671b26e5b4fd9fa1e555e3a23d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://36003f3957a8b08a1205bd189a752327586e14d55bd2858ab855b9fcde95a59a\",\"dweb:/ipfs/QmYCwu9xZREwYpXKFVLVtJ5RQKsqg5pu6KWeuN7RL6p1LL\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x649109cb43bd53efa1f3ab03009f640ff1e913289d428bd03c2ec0c1a7cb284c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1eb093cdda1fbb37616825744cd61979d5e526d66334509216eb5791733ee15\",\"dweb:/ipfs/QmU1VfUKjNk5xKNsyT98nueSUgUQCScxmh7Xr2bSSpAmUf\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x9a1a05a97e97c5fe45122444e28641330e04a379fd509c9cc092032f897093ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ab1a59cfa8db6640b78af4f342eb728991a9b50e3abce4e9dd4eeff0425a2a7\",\"dweb:/ipfs/QmW1kx9RTZ6UWxzVqit7eGopXpQRPeE6hV3riizCvg6SjA\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x3cab73a660eb60140697bc774d47b58bee23a45f70dbe3beca421d1f864793f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6f5755050696c83343abea9ee04c406230ad822785f9443c9598fd34f581ab3\",\"dweb:/ipfs/QmYgf7VY9VTRHR2GiKzhGzbdKqH7sbDf6mfV84XY7PqvW2\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TransparentUpgradeableBeaconProxy": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "As the underlying proxy implementation (TransparentUpgradeableProxy) allows the admin to call the implementation, care must be taken to avoid proxy selector collisions. Implementation selectors must not conflict with the proxy selectors. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. The proxy selectors are: - 0xcf7a1d77: initialize - 0x3659cfe6: upgradeTo (from TransparentUpgradeableProxy) - 0x4f1ef286: upgradeToAndCall (from TransparentUpgradeableProxy) - 0x8f283970: changeAdmin (from TransparentUpgradeableProxy) - 0xf851a440: admin (from TransparentUpgradeableProxy) - 0x5c60da1b: implementation (from TransparentUpgradeableProxy)",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234610016576111cf908161001c8239f35b600080fdfe604060808152366103825773ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000917fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000843516146100c057600484517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b6100c8611192565b60049136831161037e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037e578235916101088361067f565b602435926101158461067f565b60443567ffffffffffffffff811161037a57610135839136908801610789565b941692156103525761014791166107e3565b803b156102cf578451907f5c60da1b000000000000000000000000000000000000000000000000000000009384835260209687848381865afa9384156102a657889461019d9189916102b2575b503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790555194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab575b610242575b8361023c6107d0565b80519101f35b8592839182525afa9182156102a65761026a9392610277575b506102646109b1565b91610a21565b5038808083818080610233565b610298919250843d861161029f575b610290818361070e565b810190610902565b903861025b565b503d610286565b61091a565b508661022e565b6102c99150863d881161029f57610290818361070e565b38610194565b60848360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b8487517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b8380fd5b73ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000907fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000833516146104395760046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b610441611192565b60049236841161067b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067b5783356104808161067f565b6024359161048d8361067f565b60443567ffffffffffffffff8111610677576104ad829136908901610789565b9316931561064e576104bf91166107e3565b813b156105ca576040517f5c60da1b000000000000000000000000000000000000000000000000000000009283825260209586838281855afa9283156102a65787936105149188916105b357503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617905560405194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab57610242578361023c6107d0565b6102c99150853d871161029f57610290818361070e565b6084846020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b856040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b8280fd5b73ffffffffffffffffffffffffffffffffffffffff81160361069d57565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106ed57604052565b6106a2565b6040810190811067ffffffffffffffff8211176106ed57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106ed57604052565b67ffffffffffffffff81116106ed57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561069d578035906107a08261074f565b926107ae604051948561070e565b8284526020838301011161069d57816000926020809301838601378301015290565b604051906107dd826106d1565b60008252565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61039081547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604080519373ffffffffffffffffffffffffffffffffffffffff9081851686521693846020820152a1811561087e577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b9081602091031261069d57516109178161067f565b90565b6040513d6000823e3d90fd5b1561092d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201527f73206e6f74206120636f6e7472616374000000000000000000000000000000006064820152fd5b604051906060820182811067ffffffffffffffff8211176106ed57604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806109179493602081519101845af43d15610a60573d91610a438361074f565b92610a51604051948561070e565b83523d6000602085013e610acd565b606091610acd565b15610a6f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b91929015610aed5750815115610ae1575090565b610917903b1515610a68565b825190915015610b005750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610b7d575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610b3c565b610bee610bd57fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b3303610d14576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe6000000000000000000000000000000000000000000000000000000008103610c515750610c49610f0f565b602081519101f35b7f4f1ef286000000000000000000000000000000000000000000000000000000008103610c865750610c81611083565b610c49565b7f8f283970000000000000000000000000000000000000000000000000000000008103610cb65750610c81610ec5565b7ff851a440000000000000000000000000000000000000000000000000000000008103610ce65750610c81610dfd565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610d1457610c81610e53565b610d1c610d3b565b6000808092368280378136915af43d82803e15610d37573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541680610df8575060206004917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156102a657600091610de0575090565b610917915060203d811161029f57610290818361070e565b905090565b610e05611192565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103541660405190602082015260208152610917816106f2565b610e5b611192565b610e63610d3b565b73ffffffffffffffffffffffffffffffffffffffff6040519116602082015260208152610917816106f2565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261069d576004356109178161067f565b610ecd611192565b3660041161069d57610efc73ffffffffffffffffffffffffffffffffffffffff610ef636610e8f565b166107e3565b604051610f08816106d1565b6000815290565b610f17611192565b3660041161069d5773ffffffffffffffffffffffffffffffffffffffff610f3d36610e8f565b1660405190610f4b826106d1565b60008252803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610ff7575b610fe3575b5050604051610f08816106d1565b610fef916102646109b1565b503880610fd5565b506000610fd0565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b3660041161069d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069d576004356110c18161067f565b60243567ffffffffffffffff811161069d576110f673ffffffffffffffffffffffffffffffffffffffff913690600401610789565b9116803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061118a57610fe3575050604051610f08816106d1565b506001610fd0565b3461069d5756fea26469706673582212205afdfcf2db2f242d1c90fc4524ff1841da37419738805ee0571bd2744b6196ce64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x11CF SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS REVERT 0xFC CALLCODE 0xDB 0x2F 0x24 0x2D SHR SWAP1 0xFC GASLIMIT 0x24 SELFDESTRUCT XOR COINBASE 0xDA CALLDATACOPY COINBASE SWAP8 CODESIZE DUP1 0x5E 0xE0 JUMPI SHL 0xD2 PUSH21 0x4B6196CE64736F6C63430008130033000000000000 ",
							"sourceMap": "1183:2273:28:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 2306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_payable": {
									"entryPoint": 3727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 1929,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory_array_string": {
									"entryPoint": 2000,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_bytes": {
									"entryPoint": 1871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398": {
									"entryPoint": 2481,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_6570": {
									"entryPoint": 1745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_6573": {
									"entryPoint": 1778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun__fallback": {
									"entryPoint": 2964,
									"id": 6538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_changeAdmin": {
									"entryPoint": 2019,
									"id": 913,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_dispatchAdmin": {
									"entryPoint": 3581,
									"id": 6558,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchChangeAdmin": {
									"entryPoint": 3781,
									"id": 6607,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchImplementation": {
									"entryPoint": 3667,
									"id": 6578,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeTo": {
									"entryPoint": 3855,
									"id": 6641,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeToAndCall": {
									"entryPoint": 4227,
									"id": 6673,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_fallback": {
									"entryPoint": 898,
									"id": 6288,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_fallback_1035": {
									"entryPoint": null,
									"id": 1035,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_functionDelegateCall": {
									"entryPoint": 2593,
									"id": 1586,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_implementation": {
									"entryPoint": 3387,
									"id": 6318,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_requireZeroValue": {
									"entryPoint": 4498,
									"id": 6695,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 2765,
									"id": 1625,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"require_helper_stringliteral_cc2e": {
									"entryPoint": 2664,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_f95f": {
									"entryPoint": 2342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"revert_forward": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"update_storage_value_offsett_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_address_payable": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS REVERT 0xFC CALLCODE 0xDB 0x2F 0x24 0x2D SHR SWAP1 0xFC GASLIMIT 0x24 SELFDESTRUCT XOR COINBASE 0xDA CALLDATACOPY COINBASE SWAP8 CODESIZE DUP1 0x5E 0xE0 JUMPI SHL 0xD2 PUSH21 0x4B6196CE64736F6C63430008130033000000000000 ",
							"sourceMap": "1183:2273:28:-:0;;;;;2629:64:9;1183:2273:28;;3656:66:8;;;1183:2273:28;2344:25;2340:573;;;;-1:-1:-1;2435:7:28;2473:54;2435:7;;;;2461:66;2457:302;;2878:23;1183:2273;;2878:23;;;;2457:302;1434:12;;:::i;:::-;1564:1;1183:2273;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;1769:22;;1765:177;;1965:5;;1183:2273;1965:5;:::i;:::-;1702:19:13;;:23;1183:2273:28;;;;;;5240:35:8;;;;1183:2273:28;5240:35:8;;;;;;;;;;;;;;;5200:150;5240:35;;;;;2457:302:28;1702:19:13;;:23;;5200:150:8;:::i;:::-;4719:66;1183:2273:28;;;;;;;;;;;5870:25:8;;;;;;1183:2273:28;;5909:15:8;;;:28;;;2457:302:28;5905:130:8;;2457:302:28;1183:2273;;;:::i;:::-;2659:85;;;;;5905:130:8;5982:35;;;;;;;;;;;;;6788:77:13;5982:35:8;;;;5905:130;1183:2273:28;;;:::i;:::-;6788:77:13;;:::i;:::-;;5905:130:8;;;;;;;;;5982:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;:::i;5909:28::-;;;;;5240:35;;;;;;;;;;;;;;:::i;:::-;;;;1183:2273:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1765:177;1183:2273;;;1907:23;;;;1183:2273;;;;;;;;2253:717;1183:2273;3656:66:8;;;1183:2273:28;2344:25;2340:573;;;;-1:-1:-1;2435:7:28;2473:54;2435:7;;;;2461:66;2457:302;;2878:23;1183:2273;;2878:23;;;;2457:302;1434:12;;:::i;:::-;1564:1;1555:8;;1183:2273;;;;;;1555:8;1183:2273;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1555:8;;;1183:2273;;;;:::i;:::-;;;1769:22;;1765:177;;1965:5;1183:2273;;1965:5;:::i;:::-;1702:19:13;;:23;1183:2273:28;;;;;5240:35:8;;;;1183:2273:28;5240:35:8;;;;;;;;;;;;;;;5200:150;5240:35;;;;;1702:19:13;;:23;;5200:150:8;:::i;:::-;4719:66;1183:2273:28;;;;;;;;;;;;5870:25:8;;;;;;1183:2273:28;;5909:15:8;;;:28;;;5905:130;;1183:2273:28;;;:::i;5240:35:8:-;;;;;;;;;;;;;;:::i;1183:2273:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1765:177;1183:2273;;;1907:23;;;;1183:2273;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;1183:2273:28;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;2367:1;1183:2273;;:::o;4300:135:8:-;3656:66;;;;4364:35;1183:2273:28;;;;;;;;;;;;;;;;;;4364:35:8;4051:22;;1183:2273:28;;;;;;;4300:135:8:o;1183:2273:28:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7058:325:13:-;7265:25;7058:325;7307:69;7058:325;;7265:25;;;;;;;;1183:2273:28;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;7265:25:13;;1183:2273:28;;;7307:69:13;:::i;1183:2273:28:-;;;7307:69:13;:::i;1183:2273:28:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;7671:628:13;;;;7875:418;;;1183:2273:28;;;7906:22:13;7902:286;;8201:17;;:::o;7902:286::-;8113:60;1702:19;;:23;;8113:60;:::i;7875:418::-;1183:2273:28;;;;-1:-1:-1;8980:21:13;:17;;9152:142;;;;;;;8976:379;1183:2273:28;;9324:20:13;;;;1183:2273:28;;9324:20:13;;;;1183:2273:28;;;;;;;;;9000:1:13;1183:2273:28;;;;;;;;;;;;9000:1:13;1183:2273:28;;;;;;;;;;;9324:20:13;;;;1183:2273:28;;;;;;;;;;;;;;;-1:-1:-1;1183:2273:28;;;;3561:1113:31;3623:25;3656:66:8;;;1183:2273:28;;;;3656:66:8;1183:2273:28;;;;3623:25:31;:10;:25;3656:66:8;;-1:-1:-1;3714:7:31;;;3752:47;3740:59;;3752:47;;3826:20;;;:::i;:::-;4529:77;;;;;;3736:779;3884:54;3872:66;;3884:54;;3965:27;;;:::i;:::-;3736:779;;3868:647;4030:49;4018:61;;4030:49;;4106:22;;;:::i;4014:501::-;4166:43;4154:55;;4166:43;;4236:16;;;:::i;4150:365::-;4290:52;4278:64;4290:52;;4369:25;;:::i;4274:241::-;2407:17:9;;:::i;:::-;1018:819;;;;;;;;;;;;;;;;;;;;;;;;;;;3144:309:28;1183:2273;3656:66:8;1030;3656;1183:2273:28;3321:28;3317:82;;3656:66:8;1217:38:29;;3656:66:8;4719;3656;1183:2273:28;;;1217:38:29;;;;1183:2273:28;1217:38:29;;;;;;;;;-1:-1:-1;1217:38:29;;;3409:36:28;3144:309;:::o;1217:38:29:-;;;;;;;;;;;;;;:::i;3317:82:28:-;3366:21;;;:::o;5034:170:31:-;5077:12;;:::i;:::-;1183:2273:28;3656:66:8;;1183:2273:28;;;5179:17:31;;;;1183:2273:28;5179:17:31;;;;;;:::i;5573:203::-;5625:12;;:::i;:::-;5707:17;;:::i;:::-;1183:2273:28;;;;;5742:26:31;;;1183:2273:28;5742:26:31;;;;;;:::i;1183:2273:28:-;;;;;;;;;;;;;:::i;5894:223:31:-;5943:12;;:::i;:::-;6030:8;6039:1;1183:2273:28;;;6078:8:31;1183:2273:28;6019:35:31;6030:8;6019:35;:::i;:::-;1183:2273:28;6078:8:31;:::i;:::-;1183:2273:28;;;;;:::i;:::-;6030:8:31;1183:2273:28;;5894:223:31;:::o;6197:262::-;6244:12;;:::i;:::-;6340:8;6349:1;1183:2273:28;;;;6329:35:31;6340:8;6329:35;:::i;:::-;1183:2273:28;;;;;;;:::i;:::-;6340:8:31;1183:2273:28;;1702:19:13;;:23;1183:2273:28;;1030:66:8;1183:2273:28;;;;;;;;1889:27:8;;6340:8:31;1889:27:8;;1183:2273:28;;2208:15:8;;;:28;;;6197:262:31;2204:112:8;;6197:262:31;1183:2273:28;;;;;;;:::i;2204:112:8:-;6788:77:13;1183:2273:28;;;:::i;6788:77:13:-;;2204:112:8;;;;2208:28;;6340:8:31;2208:28:8;;1183:2273:28;;;;;;;;6349:1:31;1183:2273:28;;;;;;;;;;;;;;;;;;;6750:259:31;6889:8;6898:1;1183:2273:28;;;;;6889:8:31;1183:2273:28;;;;6898:1:31;1183:2273:28;;;;:::i;:::-;;;;;;;;;;6889:8:31;;1183:2273:28;6898:1:31;1183:2273:28;;:::i;:::-;;;1702:19:13;;:23;1183:2273:28;;1030:66:8;1183:2273:28;;;;;;;;1889:27:8;;-1:-1:-1;1889:27:8;;1183:2273:28;;2208:15:8;;;:28;;;2204:112;;1183:2273:28;;;;;;;:::i;2208:28:8:-;;6974:4:31;2208:28:8;;7507:80:31;7564:9;1183:2273:28;;7507:80:31:o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"As the underlying proxy implementation (TransparentUpgradeableProxy) allows the admin to call the implementation, care must be taken to avoid proxy selector collisions. Implementation selectors must not conflict with the proxy selectors. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. The proxy selectors are: - 0xcf7a1d77: initialize - 0x3659cfe6: upgradeTo (from TransparentUpgradeableProxy) - 0x4f1ef286: upgradeToAndCall (from TransparentUpgradeableProxy) - 0x8f283970: changeAdmin (from TransparentUpgradeableProxy) - 0xf851a440: admin (from TransparentUpgradeableProxy) - 0x5c60da1b: implementation (from TransparentUpgradeableProxy)\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":\"TransparentUpgradeableBeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0xe8770bd5e7bff02d40974b7e0bcc7ecdf68239671b26e5b4fd9fa1e555e3a23d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://36003f3957a8b08a1205bd189a752327586e14d55bd2858ab855b9fcde95a59a\",\"dweb:/ipfs/QmYCwu9xZREwYpXKFVLVtJ5RQKsqg5pu6KWeuN7RL6p1LL\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x649109cb43bd53efa1f3ab03009f640ff1e913289d428bd03c2ec0c1a7cb284c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1eb093cdda1fbb37616825744cd61979d5e526d66334509216eb5791733ee15\",\"dweb:/ipfs/QmU1VfUKjNk5xKNsyT98nueSUgUQCScxmh7Xr2bSSpAmUf\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x9a1a05a97e97c5fe45122444e28641330e04a379fd509c9cc092032f897093ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ab1a59cfa8db6640b78af4f342eb728991a9b50e3abce4e9dd4eeff0425a2a7\",\"dweb:/ipfs/QmW1kx9RTZ6UWxzVqit7eGopXpQRPeE6hV3riizCvg6SjA\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x3cab73a660eb60140697bc774d47b58bee23a45f70dbe3beca421d1f864793f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6f5755050696c83343abea9ee04c406230ad822785f9443c9598fd34f581ab3\",\"dweb:/ipfs/QmYgf7VY9VTRHR2GiKzhGzbdKqH7sbDf6mfV84XY7PqvW2\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/openzeppelin/BeaconProxy.sol": {
				"BeaconProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60808060405234610016576102c8908161001c8239f35b600080fdfe6080806040523661011d5760208160048173ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054167f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa90811561011157600091610082575b506101f5565b6020903d8211610109575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff8211176100dc576100d6935060405201610214565b3861007c565b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b3d915061008d565b6040513d6000823e3d90fd5b6004602073ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156101115760009161019957506101f5565b60203d81116101ee575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f820116820182811067ffffffffffffffff8211176100dc576100d69350604052810190610266565b503d6101a3565b6000808092368280378136915af43d82803e15610210573d90f35b3d90fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060209101126102615760805173ffffffffffffffffffffffffffffffffffffffff811681036102615790565b600080fd5b90816020910312610261575173ffffffffffffffffffffffffffffffffffffffff81168103610261579056fea2646970667358221220a81fe1102a4815457cd8a845ac37a374fe133faaaa9ba23b4af6ba9faea01bf564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x2C8 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x11D JUMPI PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x82 JUMPI JUMPDEST POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 SWAP1 RETURNDATASIZE DUP3 GT PUSH2 0x109 JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE ADD PUSH2 0x214 JUMP JUMPDEST CODESIZE PUSH2 0x7C JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x199 JUMPI POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1EE JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x266 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x210 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x261 JUMPI PUSH1 0x80 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x261 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0x1F 0xE1 LT 0x2A BASEFEE ISZERO GASLIMIT PUSH29 0xD8A845AC37A374FE133FAAAA9BA23B4AF6BA9FAEA01BF564736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "798:993:29:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address_fromMemory_676": {
									"entryPoint": 532,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_delegate": {
									"entryPoint": 501,
									"id": 1016,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_fallback": {
									"entryPoint": 285,
									"id": 1035,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040523661011d5760208160048173ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5054167f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa90811561011157600091610082575b506101f5565b6020903d8211610109575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116810181811067ffffffffffffffff8211176100dc576100d6935060405201610214565b3861007c565b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b3d915061008d565b6040513d6000823e3d90fd5b6004602073ffffffffffffffffffffffffffffffffffffffff7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156101115760009161019957506101f5565b60203d81116101ee575b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f820116820182811067ffffffffffffffff8211176100dc576100d69350604052810190610266565b503d6101a3565b6000808092368280378136915af43d82803e15610210573d90f35b3d90fd5b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8060209101126102615760805173ffffffffffffffffffffffffffffffffffffffff811681036102615790565b600080fd5b90816020910312610261575173ffffffffffffffffffffffffffffffffffffffff81168103610261579056fea2646970667358221220a81fe1102a4815457cd8a845ac37a374fe133faaaa9ba23b4af6ba9faea01bf564736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x11D JUMPI PUSH1 0x20 DUP2 PUSH1 0x4 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x82 JUMPI JUMPDEST POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 SWAP1 RETURNDATASIZE DUP3 GT PUSH2 0x109 JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE ADD PUSH2 0x214 JUMP JUMPDEST CODESIZE PUSH2 0x7C JUMP JUMPDEST PUSH1 0x24 DUP5 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x8D JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x111 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x199 JUMPI POP PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x1EE JUMPI JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xDC JUMPI PUSH2 0xD6 SWAP4 POP PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x266 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x1A3 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x210 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF80 PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x261 JUMPI PUSH1 0x80 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x261 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x261 JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0x1F 0xE1 LT 0x2A BASEFEE ISZERO GASLIMIT PUSH29 0xD8A845AC37A374FE133FAAAA9BA23B4AF6BA9FAEA01BF564736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "798:993:29:-:0;;;;;2629:64:9;798:993:29;1217:38;4719:66:8;1217:38:29;4719:66:8;798:993:29;4719:66:8;;798:993:29;;1217:38;;;;;;;;;-1:-1:-1;1217:38:29;;;798:993;2407:17:9;;:::i;1217:38:29:-;;;;;;;;;798:993;;;;;;;;;;;;;;;;1217:38;798:993;;;;1217:38;;:::i;:::-;;;;798:993;;;;;;;1217:38;798:993;;1217:38;;;-1:-1:-1;1217:38:29;;;798:993;;;-1:-1:-1;798:993:29;;;;;2322:110:9;1217:38:29;;798:993;4719:66:8;;798:993:29;;;1217:38;;;;798:993;1217:38;;;;;;;;;-1:-1:-1;1217:38:29;;;2407:17:9;;:::i;1217:38:29:-;;;;;;;;798:993;;;;;;;;;;;;;;;;1217:38;798:993;;;;1217:38;;;;:::i;:::-;;;;;948:895:9;1018:819;;;;;;;;;;;;;;;;;;;;;;;;;;;798:993:29;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;798:993:29;;;;;;;;;;;;;;;;;;;;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that gets the implementation address for each call from an {UpgradeableBeacon}. The beacon address is stored in storage slot `uint256(keccak256('eip1967.proxy.beacon')) - 1`, so that it doesn't conflict with the storage layout of the implementation behind the proxy. _Available since v3.4._\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/BeaconProxy.sol\":\"BeaconProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x649109cb43bd53efa1f3ab03009f640ff1e913289d428bd03c2ec0c1a7cb284c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1eb093cdda1fbb37616825744cd61979d5e526d66334509216eb5791733ee15\",\"dweb:/ipfs/QmU1VfUKjNk5xKNsyT98nueSUgUQCScxmh7Xr2bSSpAmUf\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/openzeppelin/ERC1967Proxy.sol": {
				"ERC1967Proxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523460145760e7908161001a8239f35b600080fdfe60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea2646970667358221220db8f2ece5ed8f0b08a129e39eeb925235a932685352493a1d8d50da36b03959a64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x14 JUMPI PUSH1 0xE7 SWAP1 DUP2 PUSH2 0x1A DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x5F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB DUP16 0x2E 0xCE 0x5E 0xD8 CREATE 0xB0 DUP11 SLT SWAP15 CODECOPY 0xEE 0xB9 0x25 0x23 GAS SWAP4 0x26 DUP6 CALLDATALOAD 0x24 SWAP4 LOG1 0xD8 0xD5 0xD LOG3 PUSH12 0x3959A64736F6C6343000813 STOP CALLER ",
							"sourceMap": "756:274:30:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523615605f5773ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15605b573d90f3fea2646970667358221220db8f2ece5ed8f0b08a129e39eeb925235a932685352493a1d8d50da36b03959a64736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE ISZERO PUSH1 0x5F JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH1 0x5B JUMPI RETURNDATASIZE SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB DUP16 0x2E 0xCE 0x5E 0xD8 CREATE 0xB0 DUP11 SLT SWAP15 CODECOPY 0xEE 0xB9 0x25 0x23 GAS SWAP4 0x26 DUP6 CALLDATALOAD 0x24 SWAP4 LOG1 0xD8 0xD5 0xD LOG3 PUSH12 0x3959A64736F6C6343000813 STOP CALLER ",
							"sourceMap": "756:274:30:-:0;;;;;;;1030:66:8;;;;-1:-1:-1;756:274:30;;;;1018:819:9;;;756:274:30;;1018:819:9;;;;;;;;;;;;;;;;;756:274:30;1030:66:8;;;;-1:-1:-1;756:274:30;;;;1018:819:9;;;756:274:30;;1018:819:9;;;;;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/ERC1967Proxy.sol\":\"ERC1967Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x9a1a05a97e97c5fe45122444e28641330e04a379fd509c9cc092032f897093ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ab1a59cfa8db6640b78af4f342eb728991a9b50e3abce4e9dd4eeff0425a2a7\",\"dweb:/ipfs/QmW1kx9RTZ6UWxzVqit7eGopXpQRPeE6hV3riizCvg6SjA\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol": {
				"ITransparentUpgradeableProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "changeAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "upgradeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and some of its functions are implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for {TransparentUpgradeableProxy}. In order to implement transparency, {TransparentUpgradeableProxy} does not implement this interface directly, and some of its functions are implemented by an internal dispatch mechanism. The compiler is unaware that these functions are implemented by {TransparentUpgradeableProxy} and will not include them in the ABI so this interface must be used to interact with it.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":\"ITransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x9a1a05a97e97c5fe45122444e28641330e04a379fd509c9cc092032f897093ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ab1a59cfa8db6640b78af4f342eb728991a9b50e3abce4e9dd4eeff0425a2a7\",\"dweb:/ipfs/QmW1kx9RTZ6UWxzVqit7eGopXpQRPeE6hV3riizCvg6SjA\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x3cab73a660eb60140697bc774d47b58bee23a45f70dbe3beca421d1f864793f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6f5755050696c83343abea9ee04c406230ad822785f9443c9598fd34f581ab3\",\"dweb:/ipfs/QmYgf7VY9VTRHR2GiKzhGzbdKqH7sbDf6mfV84XY7PqvW2\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TransparentUpgradeableProxy": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This contract implements a proxy that is upgradeable by an admin. Unlike the original OpenZeppelin implementation, this contract does not prevent the admin from calling the implementation. This potentially exposes the admin to a proxy selector attack. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. When using this contract, you must ensure that the implementation function selectors do not clash with the proxy selectors. The proxy selectors are: - 0x3659cfe6: upgradeTo - 0x4f1ef286: upgradeToAndCall - 0x8f283970: changeAdmin - 0xf851a440: admin - 0x5c60da1b: implementation NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080806040523461001657610ac4908161001c8239f35b600080fdfe60806040523661016c577fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163303610167576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b602081519101f35b7f4f1ef2860000000000000000000000000000000000000000000000000000000081036100d957506100d46109cb565b61009c565b7f8f28397000000000000000000000000000000000000000000000000000000000810361010957506100d4610474565b7ff851a44000000000000000000000000000000000000000000000000000000000810361013957506100d4610303565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610167576100d461035c565b6101ff565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1633036101ff576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15610252573d90f35b3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176102a157604052565b610256565b6020810190811067ffffffffffffffff8211176102a157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176102a157604052565b61030b610a87565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354166040519060208201526020815261035981610285565b90565b610364610a87565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166040519060208201526020815261035981610285565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103d557565b600080fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60209101126103d55760043573ffffffffffffffffffffffffffffffffffffffff811681036103d55790565b67ffffffffffffffff81116102a157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6040519061046e826102a6565b60008252565b61047c610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff806104a3366103da565b167fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519084168152846020820152a1811561052d577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055610359610461565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b6105b9610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff6105df366103da565b16604051906105ed826102a6565b60008252803b156106ae577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906106a6575b61068c575b5050604051610685816102a6565b6000815290565b61069e916106986107e8565b91610858565b503880610677565b506000610672565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b803b156106ae5773ffffffffffffffffffffffffffffffffffffffff81167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906107e0575b6107d1575050565b6107dd916106986107e8565b50565b5060016107c9565b604051906060820182811067ffffffffffffffff8211176102a157604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806103599493602081519101845af43d15610897573d9161087a83610427565b9261088860405194856102c2565b83523d6000602085013e610904565b606091610904565b156108a657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156109245750815115610918575090565b610359903b151561089f565b8251909150156109375750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106109b4575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610973565b366004116103d55760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d557610a056103b2565b6024359067ffffffffffffffff82116103d557366023830112156103d557816004013591610a3283610427565b91610a4060405193846102c2565b83835236602485840101116103d5576000602085610a7f96602473ffffffffffffffffffffffffffffffffffffffff9601838801378501015216610732565b610359610461565b346103d55756fea264697066735822122040256326a305d14421818cf7aedbf413414f62b80fe6da2ec3ba714898e0757264736f6c63430008130033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0xAC4 SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x16C JUMPI PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x167 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xD9 JUMPI POP PUSH2 0xD4 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x109 JUMPI POP PUSH2 0xD4 PUSH2 0x474 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x139 JUMPI POP PUSH2 0xD4 PUSH2 0x303 JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0x167 JUMPI PUSH2 0xD4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x1FF JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x252 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x30B PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x364 PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3D5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x3D5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x3D5 JUMPI SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2A1 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x46E DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x47C PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x4A3 CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP2 PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP5 SLOAD SWAP3 DUP2 MLOAD SWAP1 DUP5 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x52D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x5B9 PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5DF CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0x5ED DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6A6 JUMPI JUMPDEST PUSH2 0x68C JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x685 DUP2 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x69E SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST SWAP2 PUSH2 0x858 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x677 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x7E0 JUMPI JUMPDEST PUSH2 0x7D1 JUMPI POP POP JUMP JUMPDEST PUSH2 0x7DD SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x359 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x87A DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP3 PUSH2 0x888 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2C2 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x904 JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x904 JUMP JUMPDEST ISZERO PUSH2 0x8A6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x924 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x918 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x359 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x89F JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x937 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0x973 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3D5 JUMPI PUSH2 0xA05 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3D5 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3D5 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0xA32 DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP2 PUSH2 0xA40 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2C2 JUMP JUMPDEST DUP4 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP6 DUP5 ADD ADD GT PUSH2 0x3D5 JUMPI PUSH1 0x0 PUSH1 0x20 DUP6 PUSH2 0xA7F SWAP7 PUSH1 0x24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE AND PUSH2 0x732 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST CALLVALUE PUSH2 0x3D5 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x25 PUSH4 0x26A305D1 PREVRANDAO 0x21 DUP2 DUP13 0xF7 0xAE 0xDB DELEGATECALL SGT COINBASE 0x4F PUSH3 0xB80FE6 0xDA 0x2E 0xC3 0xBA PUSH18 0x4898E0757264736F6C634300081300330000 ",
							"sourceMap": "2883:4707:31:-:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address_payable": {
									"entryPoint": 946,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_tuple_address_payable": {
									"entryPoint": 986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory_array_string": {
									"entryPoint": 1121,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_string": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_literal_to_memory_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_3829": {
									"entryPoint": 645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_3831": {
									"entryPoint": 678,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun__fallback": {
									"entryPoint": null,
									"id": 1035,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_dispatchAdmin": {
									"entryPoint": 771,
									"id": 6558,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchChangeAdmin": {
									"entryPoint": 1140,
									"id": 6607,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchImplementation": {
									"entryPoint": 860,
									"id": 6578,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeTo": {
									"entryPoint": 1457,
									"id": 6641,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_dispatchUpgradeToAndCall": {
									"entryPoint": 2507,
									"id": 6673,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_fallback": {
									"entryPoint": 364,
									"id": 6538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_functionDelegateCall": {
									"entryPoint": 2136,
									"id": 1586,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_requireZeroValue": {
									"entryPoint": 2695,
									"id": 6695,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_upgradeToAndCall": {
									"entryPoint": 1842,
									"id": 800,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_verifyCallResultFromTarget": {
									"entryPoint": 2308,
									"id": 1625,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 598,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"require_helper_stringliteral_cc2e": {
									"entryPoint": 2207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040523661016c577fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff163303610167576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b602081519101f35b7f4f1ef2860000000000000000000000000000000000000000000000000000000081036100d957506100d46109cb565b61009c565b7f8f28397000000000000000000000000000000000000000000000000000000000810361010957506100d4610474565b7ff851a44000000000000000000000000000000000000000000000000000000000810361013957506100d4610303565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610167576100d461035c565b6101ff565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1633036101ff576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe60000000000000000000000000000000000000000000000000000000081036100a4575061009c6105b1565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166000808092368280378136915af43d82803e15610252573d90f35b3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176102a157604052565b610256565b6020810190811067ffffffffffffffff8211176102a157604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176102a157604052565b61030b610a87565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d610354166040519060208201526020815261035981610285565b90565b610364610a87565b73ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54166040519060208201526020815261035981610285565b6004359073ffffffffffffffffffffffffffffffffffffffff821682036103d557565b600080fd5b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60209101126103d55760043573ffffffffffffffffffffffffffffffffffffffff811681036103d55790565b67ffffffffffffffff81116102a157601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6040519061046e826102a6565b60008252565b61047c610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff806104a3366103da565b167fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103917f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604084549281519084168152846020820152a1811561052d577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055610359610461565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b6105b9610a87565b366004116103d55773ffffffffffffffffffffffffffffffffffffffff6105df366103da565b16604051906105ed826102a6565b60008252803b156106ae577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906106a6575b61068c575b5050604051610685816102a6565b6000815290565b61069e916106986107e8565b91610858565b503880610677565b506000610672565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b803b156106ae5773ffffffffffffffffffffffffffffffffffffffff81167f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff00000000000000000000000000000000000000008254161790557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a28151158015906107e0575b6107d1575050565b6107dd916106986107e8565b50565b5060016107c9565b604051906060820182811067ffffffffffffffff8211176102a157604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806103599493602081519101845af43d15610897573d9161087a83610427565b9261088860405194856102c2565b83523d6000602085013e610904565b606091610904565b156108a657565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b919290156109245750815115610918575090565b610359903b151561089f565b8251909150156109375750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b8481106109b4575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610973565b366004116103d55760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103d557610a056103b2565b6024359067ffffffffffffffff82116103d557366023830112156103d557816004013591610a3283610427565b91610a4060405193846102c2565b83835236602485840101116103d5576000602085610a7f96602473ffffffffffffffffffffffffffffffffffffffff9601838801378501015216610732565b610359610461565b346103d55756fea264697066735822122040256326a305d14421818cf7aedbf413414f62b80fe6da2ec3ba714898e0757264736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x16C JUMPI PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x167 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xD9 JUMPI POP PUSH2 0xD4 PUSH2 0x9CB JUMP JUMPDEST PUSH2 0x9C JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x109 JUMPI POP PUSH2 0xD4 PUSH2 0x474 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0x139 JUMPI POP PUSH2 0xD4 PUSH2 0x303 JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0x167 JUMPI PUSH2 0xD4 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x1FF JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER SUB PUSH2 0x1FF JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xA4 JUMPI POP PUSH2 0x9C PUSH2 0x5B1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0x252 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x256 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x30B PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x364 PUSH2 0xA87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x359 DUP2 PUSH2 0x285 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x3D5 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x3D5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x3D5 JUMPI SWAP1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x2A1 JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x46E DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH2 0x47C PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x4A3 CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP2 PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP5 SLOAD SWAP3 DUP2 MLOAD SWAP1 DUP5 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x52D JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x5B9 PUSH2 0xA87 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5DF CALLDATASIZE PUSH2 0x3DA JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0x5ED DUP3 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6A6 JUMPI JUMPDEST PUSH2 0x68C JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0x685 DUP2 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x69E SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST SWAP2 PUSH2 0x858 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0x677 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x672 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x6AE JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x7E0 JUMPI JUMPDEST PUSH2 0x7D1 JUMPI POP POP JUMP JUMPDEST PUSH2 0x7DD SWAP2 PUSH2 0x698 PUSH2 0x7E8 JUMP JUMPDEST POP JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0x7C9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x2A1 JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x359 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0x897 JUMPI RETURNDATASIZE SWAP2 PUSH2 0x87A DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP3 PUSH2 0x888 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x2C2 JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0x904 JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0x904 JUMP JUMPDEST ISZERO PUSH2 0x8A6 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0x924 JUMPI POP DUP2 MLOAD ISZERO PUSH2 0x918 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x359 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x89F JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x937 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x9B4 JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0x973 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x3D5 JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x3D5 JUMPI PUSH2 0xA05 PUSH2 0x3B2 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x3D5 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x3D5 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 PUSH2 0xA32 DUP4 PUSH2 0x427 JUMP JUMPDEST SWAP2 PUSH2 0xA40 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x2C2 JUMP JUMPDEST DUP4 DUP4 MSTORE CALLDATASIZE PUSH1 0x24 DUP6 DUP5 ADD ADD GT PUSH2 0x3D5 JUMPI PUSH1 0x0 PUSH1 0x20 DUP6 PUSH2 0xA7F SWAP7 PUSH1 0x24 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP7 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE AND PUSH2 0x732 JUMP JUMPDEST PUSH2 0x359 PUSH2 0x461 JUMP JUMPDEST CALLVALUE PUSH2 0x3D5 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0x25 PUSH4 0x26A305D1 PREVRANDAO 0x21 DUP2 DUP13 0xF7 0xAE 0xDB DELEGATECALL SGT COINBASE 0x4F PUSH3 0xB80FE6 0xDA 0x2E 0xC3 0xBA PUSH18 0x4898E0757264736F6C634300081300330000 ",
							"sourceMap": "2883:4707:31:-:0;;;;2629:64:9;2883:4707:31;3656:66:8;;2883:4707:31;;3623:10;:25;2883:4707;;-1:-1:-1;3714:7:31;;;3752:47;3740:59;;3752:47;;3826:20;;;:::i;:::-;4529:77;;;;;;3736:779;3884:54;3872:66;;3884:54;;3965:27;;;:::i;:::-;3736:779;;3868:647;4030:49;4018:61;;4030:49;;4106:22;;;:::i;4014:501::-;4166:43;4154:55;;4166:43;;4236:16;;;:::i;4150:365::-;4290:52;4278:64;4290:52;;4369:25;;:::i;4274:241::-;;:::i;3561:1113::-;3656:66:8;;2883:4707:31;;3623:10;:25;2883:4707;;-1:-1:-1;3714:7:31;;;3752:47;3740:59;;3752:47;;3826:20;;;:::i;3619:1048::-;2883:4707;1030:66:8;3656;2883:4707:31;-1:-1:-1;1018:819:9;;;;;;;;;;;;;;;;;;;;;;;;;;2883:4707:31;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;5034:170::-;5077:12;;:::i;:::-;2883:4707;3656:66:8;;2883:4707:31;;;5179:17;;;;2883:4707;5179:17;;;;;;:::i;:::-;5034:170;:::o;5573:203::-;5625:12;;:::i;:::-;2883:4707;1030:66:8;3656;2883:4707:31;;;5742:26;;;;2883:4707;5742:26;;;;;;:::i;2883:4707::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;6030:8;2883:4707;;:::o;5894:223::-;5943:12;;:::i;:::-;6030:8;6039:1;2883:4707;;;;6030:8;6019:35;6030:8;6019:35;:::i;:::-;2883:4707;3656:66:8;;4364:35;2883:4707:31;3656:66:8;;2883:4707:31;;;;;;;;;;;;;4364:35:8;4051:22;;2883:4707:31;;;;;;;;;:::i;:::-;;;;;;;;6039:1;2883:4707;;;;;;;;;;;;;;;;;;;6197:262;6244:12;;:::i;:::-;6340:8;6349:1;2883:4707;;;;6329:35;6340:8;6329:35;:::i;:::-;2883:4707;;;;;;;:::i;:::-;6340:8;2883:4707;;1702:19:13;;:23;2883:4707:31;;1030:66:8;2883:4707:31;;;;;;;;1889:27:8;;6340:8:31;1889:27:8;;2883:4707:31;;2208:15:8;;;:28;;;6197:262:31;2204:112:8;;6197:262:31;2883:4707;;;;;;;:::i;:::-;6340:8;2883:4707;;6197:262;:::o;2204:112:8:-;6788:77:13;2883:4707:31;;;:::i;:::-;6788:77:13;;:::i;:::-;;2204:112:8;;;;2208:28;;6340:8:31;2208:28:8;;2883:4707:31;;;;;;;;6349:1;2883:4707;;;;;;;;;;;;;;;;;;;2057:265:8;1702:19:13;;:23;2883:4707:31;;;;;1030:66:8;2883:4707:31;;;;;;;;1889:27:8;-1:-1:-1;1889:27:8;;2883:4707:31;;2208:15:8;;;:28;;;2057:265;2204:112;;2057:265;;:::o;2204:112::-;6788:77:13;2883:4707:31;;;:::i;6788:77:13:-;;2057:265:8:o;2208:28::-;;6974:4:31;2208:28:8;;2883:4707:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7058:325:13:-;7265:25;7058:325;7307:69;7058:325;;7265:25;;;;;;;;2883:4707:31;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;7265:25:13;;2883:4707:31;;;7307:69:13;:::i;2883:4707:31:-;;;7307:69:13;:::i;2883:4707:31:-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;7671:628:13;;;;7875:418;;;2883:4707:31;;;7906:22:13;7902:286;;8201:17;;:::o;7902:286::-;8113:60;1702:19;;:23;;8113:60;:::i;7875:418::-;2883:4707:31;;;;-1:-1:-1;8980:21:13;:17;;9152:142;;;;;;;8976:379;2883:4707:31;;9324:20:13;;;;2883:4707:31;;9324:20:13;;;;2883:4707:31;;;;;;;;;9000:1:13;2883:4707:31;;;;;;;;;;;;9000:1:13;2883:4707:31;;;;;;;;;;;9324:20:13;;;;2883:4707:31;;;;;;;;;;;;;;;-1:-1:-1;2883:4707:31;;;;6750:259;6889:8;6898:1;2883:4707;;;;;6889:8;2883:4707;;;;;;:::i;:::-;;;;;;;;;6889:8;2883:4707;;;;;;;;6898:1;2883:4707;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;6889:8;2883:4707;;;;;;;;6889:8;2883:4707;;6974:4;2883:4707;;;;;;;;;;;;;;6974:4;:::i;:::-;2883:4707;;:::i;7507:80::-;7564:9;2883:4707;;7507:80::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This contract implements a proxy that is upgradeable by an admin. Unlike the original OpenZeppelin implementation, this contract does not prevent the admin from calling the implementation. This potentially exposes the admin to a proxy selector attack. See https://medium.com/nomic-labs-blog/malicious-backdoors-in-ethereum-proxies-62629adf3357[proxy selector clashing]. When using this contract, you must ensure that the implementation function selectors do not clash with the proxy selectors. The proxy selectors are: - 0x3659cfe6: upgradeTo - 0x4f1ef286: upgradeToAndCall - 0x8f283970: changeAdmin - 0xf851a440: admin - 0x5c60da1b: implementation NOTE: The real interface of this proxy is that defined in `ITransparentUpgradeableProxy`. This contract does not inherit from that interface, and instead the admin functions are implicitly implemented using a custom dispatch mechanism in `_fallback`. Consequently, the compiler will not produce an ABI for this contract. This is necessary to fully implement transparency without decoding reverts caused by selector clashes between the proxy and the implementation. WARNING: It is not recommended to extend this contract to add additional external functions. If you do so, the compiler will not check that there are no selector conflicts, due to the note above. A selector clash between any new function and the functions declared in {ITransparentUpgradeableProxy} will be resolved in favor of the new one. This could render the admin operations inaccessible, which could prevent upgradeability. Transparency may also be compromised.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":\"TransparentUpgradeableProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x9a1a05a97e97c5fe45122444e28641330e04a379fd509c9cc092032f897093ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ab1a59cfa8db6640b78af4f342eb728991a9b50e3abce4e9dd4eeff0425a2a7\",\"dweb:/ipfs/QmW1kx9RTZ6UWxzVqit7eGopXpQRPeE6hV3riizCvg6SjA\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x3cab73a660eb60140697bc774d47b58bee23a45f70dbe3beca421d1f864793f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6f5755050696c83343abea9ee04c406230ad822785f9443c9598fd34f581ab3\",\"dweb:/ipfs/QmYgf7VY9VTRHR2GiKzhGzbdKqH7sbDf6mfV84XY7PqvW2\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/ERC721/ERC721BaseToken.sol": {
				"ERC721BaseToken": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "batchBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenBaseURI",
									"type": "string"
								}
							],
							"name": "setBaseMetadataURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenContractURI",
									"type": "string"
								}
							],
							"name": "setContractURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setDefaultRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"name": "setNameAndSymbol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setTokenRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"batchBurn(uint256[])": {
								"params": {
									"tokenIds": "Array of token ids to burn"
								}
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "Id of token to burn"
								}
							},
							"contractURI()": {
								"returns": {
									"_0": "Contract URI of token's URI"
								}
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"setBaseMetadataURI(string)": {
								"params": {
									"tokenBaseURI": "New base URI of token's URI"
								}
							},
							"setContractURI(string)": {
								"params": {
									"tokenContractURI": "New contract URI of token's URI"
								}
							},
							"setDefaultRoyalty(address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment"
								}
							},
							"setNameAndSymbol(string,string)": {
								"params": {
									"tokenName": "Name of token.",
									"tokenSymbol": "Symbol of token."
								}
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment",
									"tokenId": "The token id to set the royalty information for"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "Interface id"
								},
								"returns": {
									"_0": "True if supported"
								}
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"batchBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenContractURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"setNameAndSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setTokenRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"batchBurn(uint256[])\":{\"params\":{\"tokenIds\":\"Array of token ids to burn\"}},\"burn(uint256)\":{\"params\":{\"tokenId\":\"Id of token to burn\"}},\"contractURI()\":{\"returns\":{\"_0\":\"Contract URI of token's URI\"}},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setBaseMetadataURI(string)\":{\"params\":{\"tokenBaseURI\":\"New base URI of token's URI\"}},\"setContractURI(string)\":{\"params\":{\"tokenContractURI\":\"New contract URI of token's URI\"}},\"setDefaultRoyalty(address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\"}},\"setNameAndSymbol(string,string)\":{\"params\":{\"tokenName\":\"Name of token.\",\"tokenSymbol\":\"Symbol of token.\"}},\"setTokenRoyalty(uint256,address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\",\"tokenId\":\"The token id to set the royalty information for\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface id\"},\"returns\":{\"_0\":\"True if supported\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"batchBurn(uint256[])\":{\"notice\":\"Allows the owner of the tokens to burn their tokens.\"},\"burn(uint256)\":{\"notice\":\"Allows the owner of the token to burn their token.\"},\"constructor\":{\"notice\":\"Deploy contract.\"},\"contractURI()\":{\"notice\":\"Get the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata\"},\"name()\":{\"notice\":\"Override the ERC721A name function.\"},\"setBaseMetadataURI(string)\":{\"notice\":\"Update the base URI of token's URI.\"},\"setContractURI(string)\":{\"notice\":\"Update the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata\"},\"setDefaultRoyalty(address,uint96)\":{\"notice\":\"Sets the royalty information that all ids in this contract will default to.\"},\"setNameAndSymbol(string,string)\":{\"notice\":\"Set name and symbol of token.\"},\"setTokenRoyalty(uint256,address,uint96)\":{\"notice\":\"Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check interface support.\"},\"symbol()\":{\"notice\":\"Override the ERC721A symbol function.\"}},\"notice\":\"A standard base implementation of ERC-721 for use in Sequence library contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/ERC721BaseToken.sol\":\"ERC721BaseToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"node_modules/@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"node_modules/@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"node_modules/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"node_modules/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"node_modules/erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xad83a36e9758f044317e9a5e2903bc49730b6d5de8fbe9a61b2f91fb4c2148c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b516fbe3026a9d529d359167c7f59d541c97369ff8c1f9e3698a669e43bb3205\",\"dweb:/ipfs/QmeUNVACjEnkz2D9JrzpGrNgVqJnQkYsWzY8UsHaAZWqtW\"]},\"node_modules/erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0xc14fc938aecdccee7edbd3a3ce60b6171cdc3da3345cfa6d288c268983c48942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3e98fca40eb76d808b70410ff794373dd3d409aaf4ecc3c5bcf517172b20a84\",\"dweb:/ipfs/QmNzXKtrsUe17JYnQmp2jfZZaJwjmo14H4UsxTUV4uArdS\"]},\"src/tokens/ERC721/ERC721BaseToken.sol\":{\"keccak256\":\"0xa70032e4b95d281e89ef51182f5373c53904f0f80612ffad737213d536857815\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://444ff837dac62d6ffd3029fbc1dc1e4a169e98b8d60a7f2764b21e526c884d7d\",\"dweb:/ipfs/QmTRbu73eK7dBHr477PwJSkbVDZUqFTRLcJZQGPyomcBM4\"]},\"src/tokens/common/ERC2981Controlled.sol\":{\"keccak256\":\"0x3facd3d7c265311342384809404e45245b51ae16df68ea76002f77116c81195e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://534d7d6ab70880dfbc79f189f5010a029d99564af9f53cbbe3f6a361b98b6a74\",\"dweb:/ipfs/QmcrVKNyGU2BkpvuzWKsBem3r7VF5YckzRnrHWziCQHnyS\"]},\"src/tokens/common/IERC2981Controlled.sol\":{\"keccak256\":\"0x730395f1a3f38553f55835bf6b0a7d2d6868cdfce7cbf56e41e3070351a389bf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://302fb8fa726aeab204b9382b4414dee8a5142d0d68478fada8c1e23c38908922\",\"dweb:/ipfs/QmQGB1eBqcD52R95UwFjkjryCbv29fAVBzYm1FMvTSwJtw\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {
							"batchBurn(uint256[])": {
								"notice": "Allows the owner of the tokens to burn their tokens."
							},
							"burn(uint256)": {
								"notice": "Allows the owner of the token to burn their token."
							},
							"constructor": {
								"notice": "Deploy contract."
							},
							"contractURI()": {
								"notice": "Get the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata"
							},
							"name()": {
								"notice": "Override the ERC721A name function."
							},
							"setBaseMetadataURI(string)": {
								"notice": "Update the base URI of token's URI."
							},
							"setContractURI(string)": {
								"notice": "Update the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata"
							},
							"setDefaultRoyalty(address,uint96)": {
								"notice": "Sets the royalty information that all ids in this contract will default to."
							},
							"setNameAndSymbol(string,string)": {
								"notice": "Set name and symbol of token."
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"notice": "Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id"
							},
							"supportsInterface(bytes4)": {
								"notice": "Check interface support."
							},
							"symbol()": {
								"notice": "Override the ERC721A symbol function."
							}
						},
						"notice": "A standard base implementation of ERC-721 for use in Sequence library contracts.",
						"version": 1
					}
				}
			},
			"src/tokens/ERC721/presets/items/ERC721Items.sol": {
				"ERC721Items": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidQueryRange",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "batchBurn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "explicitOwnershipOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "explicitOwnershipsOf",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "addr",
											"type": "address"
										},
										{
											"internalType": "uint64",
											"name": "startTimestamp",
											"type": "uint64"
										},
										{
											"internalType": "bool",
											"name": "burned",
											"type": "bool"
										},
										{
											"internalType": "uint24",
											"name": "extraData",
											"type": "uint24"
										}
									],
									"internalType": "struct IERC721A.TokenOwnership[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenBaseURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenContractURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "royaltyReceiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "royaltyFeeNumerator",
									"type": "uint96"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenBaseURI",
									"type": "string"
								}
							],
							"name": "setBaseMetadataURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenContractURI",
									"type": "string"
								}
							],
							"name": "setContractURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setDefaultRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "tokenName",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "tokenSymbol",
									"type": "string"
								}
							],
							"name": "setNameAndSymbol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setTokenRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "tokensOfOwner",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "start",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stop",
									"type": "uint256"
								}
							],
							"name": "tokensOfOwnerIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"batchBurn(uint256[])": {
								"params": {
									"tokenIds": "Array of token ids to burn"
								}
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "Id of token to burn"
								}
							},
							"contractURI()": {
								"returns": {
									"_0": "Contract URI of token's URI"
								}
							},
							"explicitOwnershipOf(uint256)": {
								"details": "Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`"
							},
							"explicitOwnershipsOf(uint256[])": {
								"details": "Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}"
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"initialize(address,string,string,string,string,address,uint96)": {
								"details": "This should be called immediately after deployment.",
								"params": {
									"owner": "The owner of the contract",
									"royaltyFeeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"royaltyReceiver": "Address of who should be sent the royalty payment",
									"tokenBaseURI": "Base URI of the token",
									"tokenContractURI": "Contract URI of the token",
									"tokenName": "Name of the token",
									"tokenSymbol": "Symbol of the token"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"mint(address,uint256)": {
								"params": {
									"amount": "Amount of tokens to mint.",
									"to": "Address to mint tokens to."
								}
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"setBaseMetadataURI(string)": {
								"params": {
									"tokenBaseURI": "New base URI of token's URI"
								}
							},
							"setContractURI(string)": {
								"params": {
									"tokenContractURI": "New contract URI of token's URI"
								}
							},
							"setDefaultRoyalty(address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment"
								}
							},
							"setNameAndSymbol(string,string)": {
								"params": {
									"tokenName": "Name of token.",
									"tokenSymbol": "Symbol of token."
								}
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment",
									"tokenId": "The token id to set the royalty information for"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "Interface id"
								},
								"returns": {
									"_0": "True if supported"
								}
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"tokensOfOwner(address)": {
								"details": "Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine)."
							},
							"tokensOfOwnerIn(address,uint256,uint256)": {
								"details": "Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`"
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"allocate_memory_array_string": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x2DC JUMPI PUSH3 0x14 PUSH3 0x2E1 JUMP JUMPDEST PUSH3 0x1E PUSH3 0x2E1 JUMP JUMPDEST DUP2 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP4 GT PUSH3 0x1EE JUMPI PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 SWAP4 DUP5 DUP4 DUP2 SHR SWAP4 AND SWAP6 DUP7 ISZERO PUSH3 0x2D1 JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT EQ PUSH3 0x1CD JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x27A JUMPI JUMPDEST POP DUP8 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x210 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x204 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP6 SHL OR PUSH1 0x2 SSTORE JUMPDEST DUP1 MLOAD SWAP3 DUP4 GT PUSH3 0x1EE JUMPI PUSH1 0x3 SWAP5 DUP6 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x1E3 JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x1CD JUMPI DUP4 DUP2 GT PUSH3 0x182 JUMPI JUMPDEST POP DUP1 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH3 0x118 JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x10C JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP5 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SSTORE CALLER PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3E19 SWAP1 DUP2 PUSH3 0x306 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x396F ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0xDA JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x167 JUMPI POP POP POP LT PUSH3 0x14E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0xEB JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP7 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x140 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x12D JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP9 LT PUSH3 0x1C3 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP7 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x1B6 JUMPI POP POP PUSH3 0xBD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP7 SWAP1 PUSH3 0x1A6 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x19D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xAB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x79 JUMP JUMPDEST SWAP1 DUP8 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x2 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP12 DUP3 DUP3 LT PUSH3 0x263 JUMPI POP POP DUP5 GT PUSH3 0x249 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0x8E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x23A JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP12 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x227 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP7 LT PUSH3 0x2C7 JUMPI JUMPDEST SWAP2 DUP10 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2B7 JUMPI POP POP PUSH3 0x62 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP10 SWAP2 ADD PUSH3 0x2A7 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x299 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH3 0x48 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x1EE JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP3 MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x5944C753 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x5A446215 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x5BBB2177 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x7E518EC8 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x98DD69C8 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x99A2557A EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xC23DC68F EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xDC8E92EA EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x1B8 JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x1AFB JUMP JUMPDEST PUSH2 0x1ACF JUMP JUMPDEST PUSH2 0x1955 JUMP JUMPDEST PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0x179D JUMP JUMPDEST PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x146E JUMP JUMPDEST PUSH2 0x139A JUMP JUMPDEST PUSH2 0x1260 JUMP JUMPDEST PUSH2 0x120A JUMP JUMPDEST PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x1168 JUMP JUMPDEST PUSH2 0xF9E JUMP JUMPDEST PUSH2 0xD2C JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH2 0xCED JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x996 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x700 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x31D PUSH1 0x4 CALLDATALOAD PUSH2 0x2BB DUP2 PUSH2 0x26C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 EQ SWAP2 DUP3 ISZERO PUSH2 0x321 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH32 0xC21B8F2800000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP3 POP SWAP1 DUP3 ISZERO PUSH2 0x41E JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x38D JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x37C JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x36C JUMPI JUMPDEST POP CODESIZE DUP1 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x376 SWAP2 POP PUSH2 0x3C7D JUMP JUMPDEST CODESIZE PUSH2 0x364 JUMP JUMPDEST SWAP1 POP PUSH2 0x387 DUP2 PUSH2 0x3C7D JUMP JUMPDEST SWAP1 PUSH2 0x35D JUMP JUMPDEST SWAP1 SWAP2 POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3CA JUMPI JUMPDEST POP SWAP1 CODESIZE PUSH2 0x355 JUMP JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x3C2 JUMP JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x3BB JUMP JUMPDEST PUSH32 0x8446A79E00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP3 POP PUSH2 0x34E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x500 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI PUSH2 0x529 SWAP2 PUSH2 0x524 PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0x3BA5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x53E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x52E JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x56C DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x52B JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x584 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x54E JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xD SLOAD PUSH2 0x5AA DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x5E0 JUMPI JUMPDEST PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x573 JUMP JUMPDEST SWAP3 POP PUSH1 0xD DUP4 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 JUMPDEST DUP3 DUP5 LT PUSH2 0x623 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x608 JUMP JUMPDEST DUP7 SWAP6 POP PUSH2 0x31D SWAP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x5D4 SWAP5 SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 SWAP4 PUSH2 0x5C4 JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6A3 DUP2 PUSH2 0x2A31 JUMP JUMPDEST ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x714 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x736 DUP4 PUSH2 0x2992 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x7B6 JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x7EF CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x740 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x296 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x529 PUSH2 0x890 CALLDATASIZE PUSH2 0x842 JUMP JUMPDEST SWAP2 PUSH2 0x2A73 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x8F3 DUP3 PUSH2 0xEC1 JUMP JUMPDEST SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO PUSH2 0x988 JUMPI JUMPDEST PUSH2 0x95F PUSH2 0x2710 PUSH2 0x943 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x23DD JUMP JUMPDEST DIV SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE RETURN JUMPDEST POP PUSH2 0x991 PUSH2 0x237B JUMP JUMPDEST PUSH2 0x91F JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA3E PUSH2 0x9B5 PUSH2 0x46B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA36 PUSH1 0x0 SWAP5 DUP1 DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x9E8 PUSH1 0x1 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD PUSH2 0x1E94 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0xA1F DUP6 PUSH1 0x40 DUP10 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 AND SWAP1 PUSH2 0x27AD JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0xA77 DUP5 PUSH1 0x40 DUP9 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP10 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xAF2 PUSH2 0x46B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0xB1B JUMPI PUSH2 0x529 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xBB8 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xBC4 PUSH2 0x1DEA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SLOAD SWAP2 DUP2 ISZERO PUSH2 0xCC3 JUMPI PUSH2 0xBFA DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH9 0x10000000000000001 DUP4 MUL DUP2 SLOAD ADD SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SWAP2 AND SWAP2 DUP2 DUP2 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR PUSH2 0xC46 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP4 ADD SWAP3 DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP1 DUP6 DUP9 DUP6 DUP2 DUP1 LOG4 ADD JUMPDEST DUP5 DUP2 SUB PUSH2 0xCB4 JUMPI POP POP POP ISZERO PUSH2 0xC8A JUMPI DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 DUP4 SWAP2 DUP6 DUP9 DUP6 DUP2 DUP1 LOG4 ADD PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x529 PUSH2 0xCF9 CALLDATASIZE PUSH2 0x842 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xD07 DUP5 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x2CF4 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x529 PUSH1 0x4 CALLDATALOAD PUSH2 0x3721 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xD45 PUSH2 0x46B JUMP JUMPDEST PUSH2 0xD4D PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH2 0xD56 PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0xD72 PUSH2 0x2710 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND GT ISZERO PUSH2 0x3B1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0xE34 JUMPI PUSH2 0xDD1 PUSH2 0x529 SWAP3 PUSH2 0xDBC PUSH2 0xDA0 PUSH2 0xF21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND DUP5 MSTORE JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xDE7 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH1 0xA0 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20496E76616C696420706172616D65746572730000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF2E DUP3 PUSH2 0xEC1 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xF58 DUP3 PUSH2 0xF30 JUMP JUMPDEST SWAP2 PUSH2 0xF66 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEFE JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x296 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP2 PUSH1 0x20 PUSH2 0x584 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xF4C JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0xFD0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0xFE9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST SWAP1 PUSH2 0xFF2 PUSH2 0x1E3F JUMP JUMPDEST DUP3 MLOAD SWAP1 DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x100F DUP2 PUSH2 0x100A PUSH1 0xD SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH2 0x32AC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1050 JUMPI POP DUP2 SWAP1 PUSH2 0x529 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1045 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE PUSH2 0x3470 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 MSTORE SWAP2 SWAP4 PUSH1 0x1F NOT DUP6 AND PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x10C3 JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH2 0x529 SWAP8 SWAP5 LT PUSH2 0x10AA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE PUSH2 0x3470 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x109C JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1102 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH1 0x80 DUP3 PUSH2 0x115C PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x10F4 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x296 JUMPI PUSH2 0x31D SWAP2 PUSH1 0x24 PUSH2 0x11C2 SWAP3 ADD PUSH2 0x3033 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x10DB JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1201 PUSH1 0x4 CALLDATALOAD PUSH2 0x2992 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH2 0x122D PUSH2 0x1228 PUSH2 0x448 JUMP JUMPDEST PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x296 JUMPI PUSH2 0x584 SWAP2 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x126E CALLDATASIZE PUSH2 0x1235 JUMP JUMPDEST PUSH2 0x1276 PUSH2 0x1E3F JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x129B DUP2 PUSH2 0x1296 PUSH1 0xC SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH2 0x331D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x12D8 JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x12CD JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xC SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x12B4 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x130B PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1347 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x132E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xC SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1323 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1386 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1378 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x13B3 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13BF DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 PUSH2 0x13C9 DUP4 PUSH2 0x30C3 JUMP JUMPDEST SWAP4 PUSH2 0x13D2 PUSH2 0x2F19 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 DUP4 JUMPDEST DUP6 DUP6 SUB PUSH2 0x1403 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x31D DUP10 DUP3 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x140C DUP2 PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x1465 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP2 AND PUSH2 0x145C JUMPI JUMPDEST POP PUSH1 0x1 SWAP1 DUP5 DUP5 DUP5 AND EQ PUSH2 0x1448 JUMPI JUMPDEST ADD PUSH2 0x13EE JUMP JUMPDEST DUP1 PUSH2 0x1456 DUP4 DUP9 ADD SWAP8 DUP11 PUSH2 0x301F JUMP JUMPDEST MSTORE PUSH2 0x1442 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 PUSH2 0x1434 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 PUSH2 0x1442 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x14B1 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2777 JUMP JUMPDEST SWAP2 SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1515 PUSH2 0x14E1 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x152F CALLDATASIZE PUSH2 0x1235 JUMP JUMPDEST PUSH2 0x1537 PUSH2 0x1E3F JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x155C DUP2 PUSH2 0x1557 PUSH1 0xF SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH2 0x338E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1599 JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x158E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1575 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x15CC PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1608 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x15EF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x15E4 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x15D1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xE SLOAD PUSH2 0x1643 DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x166C JUMPI PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEFE JUMP JUMPDEST SWAP3 POP PUSH1 0xE DUP4 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD JUMPDEST DUP3 DUP5 LT PUSH2 0x16AF JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1694 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x16E0 PUSH2 0x448 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x1702 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x171A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x1732 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x296 JUMPI PUSH2 0x174D PUSH2 0x529 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST SWAP2 PUSH2 0x1756 PUSH2 0x48E JUMP JUMPDEST SWAP4 PUSH2 0x175F PUSH2 0x4CC JUMP JUMPDEST SWAP6 PUSH2 0x3952 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x31D PUSH2 0x1791 PUSH2 0x1784 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x30F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x135F JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x17D2 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x296 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x182D DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x189C PUSH2 0x448 JUMP JUMPDEST PUSH2 0x18A4 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x296 JUMPI PUSH2 0x18D9 PUSH2 0x529 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xF4C JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x2CF4 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x80 PUSH2 0x1901 PUSH1 0x4 CALLDATALOAD PUSH2 0x2F4F JUMP JUMPDEST PUSH2 0x1953 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1973 DUP2 PUSH2 0x2A31 JUMP JUMPDEST ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 PUSH1 0x0 PUSH1 0xC SLOAD PUSH2 0x198C DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1A65 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1A06 JUMPI JUMPDEST POP POP PUSH2 0x19B4 SWAP3 POP SUB DUP4 PUSH2 0xEFE JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x31D SWAP3 PUSH2 0x19E5 PUSH2 0x19CE PUSH2 0x5D4 SWAP4 PUSH2 0x2ED0 JUMP JUMPDEST PUSH2 0x19DF PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 ADD SWAP1 PUSH2 0x1F76 JUMP JUMPDEST SWAP1 PUSH2 0x1F76 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xEFE JUMP JUMPDEST POP POP POP PUSH2 0x31D PUSH2 0x1A01 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1A4D JUMPI POP DUP8 SWAP5 POP POP DUP3 ADD ADD PUSH2 0x19B4 CODESIZE PUSH2 0x19A6 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1A35 JUMP JUMPDEST SWAP1 POP PUSH2 0x19B4 SWAP6 SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 SWAP3 CODESIZE PUSH2 0x19A6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x529 PUSH1 0x4 CALLDATALOAD PUSH2 0x1B1A PUSH2 0x46B JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x1B35 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x2287 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x1B90 DUP3 PUSH2 0x1B3A JUMP JUMPDEST SWAP2 PUSH2 0x1B9E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEFE JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 DUP5 DUP5 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x296 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1BCA JUMPI PUSH2 0x529 DUP5 PUSH2 0x391C JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1BBA JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xF SLOAD PUSH2 0x1BFC DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x1C25 JUMPI PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEFE JUMP JUMPDEST SWAP3 POP PUSH1 0xF DUP4 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 JUMPDEST DUP3 DUP5 LT PUSH2 0x1C68 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1C4D JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1515 PUSH2 0x1CA0 PUSH2 0x448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1CBD PUSH2 0x46B JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4A209273C9C71EAC8BEE506E444418998F8F452896D49B4EDFA61F22F2A2BD27 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1D29 JUMPI JUMP JUMPDEST PUSH2 0x1DE6 PUSH1 0x48 PUSH2 0x1DB4 PUSH2 0x1D3A CALLER PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x19E5 PUSH2 0x1D45 PUSH2 0x25A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1D85 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x52B JUMP JUMPDEST DUP5 ADD PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x37 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x573 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAA1D7351356C4DDC11907B1EE0660F579CFDF507235AF2AE01ECD22A4B7CEAAE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E23 JUMPI JUMP JUMPDEST PUSH2 0x1DE6 PUSH1 0x48 PUSH2 0x1DB4 PUSH2 0x1E34 CALLER PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x19E5 PUSH2 0x1D45 PUSH2 0x263D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x2DE00ACBA1F3DD4B00004FA31871EAF6BD23564AF8ED1BBE52AC31593862E4A2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E78 JUMPI JUMP JUMPDEST PUSH2 0x1DE6 PUSH1 0x48 PUSH2 0x1DB4 PUSH2 0x1E89 CALLER PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x19E5 PUSH2 0x1D45 PUSH2 0x26DA JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1ECD CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x1ED7 JUMPI POP JUMP JUMPDEST PUSH2 0x1EE0 CALLER PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x1EE8 PUSH2 0x2408 JUMP JUMPDEST SWAP2 PUSH1 0x30 PUSH2 0x1EF4 DUP5 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x1F00 DUP5 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x41 JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x1F23 JUMPI PUSH2 0x1DE6 PUSH1 0x48 PUSH2 0x1DB4 DUP6 PUSH2 0x19E5 DUP9 PUSH2 0x1D45 DUP9 ISZERO PUSH2 0x249E JUMP JUMPDEST SWAP1 PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x1F6C SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP8 PUSH2 0x2480 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP2 PUSH2 0x2491 JUMP JUMPDEST PUSH2 0x1F04 JUMP JUMPDEST PUSH2 0x2434 JUMP JUMPDEST SWAP1 PUSH2 0x1F89 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x52B JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH2 0x1FF5 SWAP5 SWAP4 SWAP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1FF8 JUMPI JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x27AD JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x202C DUP5 DUP4 DUP4 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH2 0x1FE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x2DE00ACBA1F3DD4B00004FA31871EAF6BD23564AF8ED1BBE52AC31593862E4A2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x1FF5 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0x210E JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x27AD JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x2142 DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP6 DUP1 LOG4 PUSH2 0x20FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4A209273C9C71EAC8BEE506E444418998F8F452896D49B4EDFA61F22F2A2BD27 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x1FF5 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x20F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAA1D7351356C4DDC11907B1EE0660F579CFDF507235AF2AE01ECD22A4B7CEAAE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x1FF5 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x20F6 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH2 0x1FF5 SWAP4 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x22DC DUP7 DUP6 DUP6 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x22F3 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x287C JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x2327 DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP1 LOG4 PUSH2 0x22E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2388 DUP3 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x23F0 JUMPI JUMP JUMPDEST PUSH2 0x23AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2402 DUP3 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE PUSH1 0x42 DUP3 MSTORE PUSH1 0x60 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x21 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1F71 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23F0 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x24A5 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE PUSH1 0x2A DUP3 MSTORE PUSH1 0x40 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x30 PUSH2 0x2538 DUP4 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x2544 DUP4 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x29 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x255C JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x249E JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x259A SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH2 0x2549 JUMP JUMPDEST PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 PUSH2 0x25C9 PUSH2 0x2408 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x25D5 DUP4 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x25E1 DUP4 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x25F9 JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x249E JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x2637 SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH2 0x25E6 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x2666 PUSH2 0x2408 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x2672 DUP4 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x267E DUP4 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x2696 JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x249E JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x26D4 SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 PUSH2 0x2703 PUSH2 0x2408 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x270F DUP4 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x271B DUP4 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x2733 JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x249E JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x2771 SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH2 0x2720 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x27A9 SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x281B JUMPI DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xEDD JUMPI PUSH2 0x2806 PUSH2 0x27EF DUP3 PUSH1 0x1 DUP8 SWAP5 ADD DUP6 SSTORE DUP5 PUSH2 0x2777 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x284D JUMPI PUSH1 0x0 NOT DUP1 SWAP3 ADD SWAP2 PUSH2 0x283D DUP4 DUP4 PUSH2 0x2777 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SWAP2 DUP1 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP4 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x2928 JUMPI PUSH1 0x0 NOT SWAP3 DUP4 DUP6 ADD SWAP1 DUP6 DUP3 GT PUSH2 0x23F0 JUMPI DUP1 SLOAD SWAP5 DUP6 ADD SWAP5 DUP6 GT PUSH2 0x23F0 JUMPI PUSH1 0x0 SWAP6 DUP6 DUP4 PUSH2 0x28D0 SWAP5 PUSH2 0x28DF SWAP9 SUB PUSH2 0x28E5 JUMPI JUMPDEST POP POP POP PUSH2 0x2823 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x290F PUSH2 0x2909 SWAP2 PUSH2 0x28F9 PUSH2 0x291F SWAP5 DUP8 PUSH2 0x2777 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP2 DUP8 PUSH2 0x2777 JUMP JUMPDEST SWAP1 PUSH2 0x278F JUMP JUMPDEST DUP6 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x28C8 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x2968 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x29C8 JUMPI JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP1 PUSH1 0x20 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP4 KECCAK256 SLOAD SWAP5 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP7 AND ISZERO PUSH2 0x2A08 JUMPI POP POP POP PUSH2 0x299E JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 JUMPDEST DUP6 ISZERO PUSH2 0x2A1C JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD DUP1 DUP4 MSTORE DUP2 DUP6 MSTORE DUP4 DUP4 KECCAK256 SLOAD SWAP6 POP PUSH2 0x2A0E JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 LT SWAP1 DUP2 PUSH2 0x2A40 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2A7D DUP4 PUSH2 0x2992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 DUP3 DUP5 AND SUB PUSH2 0x2CCA JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 PUSH2 0x2ADB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP5 EQ OR ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2C3B JUMPI JUMPDEST DUP3 AND SWAP6 DUP7 ISZERO PUSH2 0x2C11 JUMPI PUSH2 0x2B4B SWAP4 PUSH2 0x2B1D SWAP3 PUSH2 0x2C07 JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0x2B8C DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0x2BBD JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x2BD5 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x2BE2 JUMPI JUMPDEST POP PUSH2 0x2B95 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x2BDC JUMPI PUSH2 0x2BFF SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x2BDC JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x2AF6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x2C9B PUSH2 0x2AD7 PUSH2 0x2C94 CALLER PUSH2 0x2C6F DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2AE0 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x2D02 DUP3 DUP3 DUP7 PUSH2 0x2A73 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x2D0F JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2D18 SWAP4 PUSH2 0x2DD1 JUMP JUMPDEST ISZERO PUSH2 0x2D26 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x296 JUMPI MLOAD PUSH2 0x584 DUP2 PUSH2 0x26C JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x584 SWAP5 SWAP4 PUSH1 0x80 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x54E JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2DCC JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2DB2 DUP3 PUSH2 0xF30 JUMP JUMPDEST SWAP2 PUSH2 0x2DC0 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEFE JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP2 PUSH2 0x2E28 SWAP4 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP7 DUP3 SWAP6 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP12 DUP13 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0x2D65 JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2EA0 JUMPI JUMPDEST POP PUSH2 0x2E7A JUMPI PUSH2 0x2E43 PUSH2 0x2DA1 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x2E75 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x2EC2 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2EC9 JUMPI JUMPDEST PUSH2 0x2EBA DUP2 DUP4 PUSH2 0xEFE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2D50 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2E36 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x0 NOT PUSH1 0x80 DUP3 ADD SWAP4 PUSH1 0x0 DUP6 MSTORE SWAP4 JUMPDEST ADD SWAP3 PUSH1 0xA SWAP1 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x2F07 JUMPI PUSH1 0x0 NOT SWAP1 PUSH2 0x2EE9 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP4 PUSH1 0x1F NOT SWAP3 SUB ADD SWAP3 ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x2F57 PUSH2 0x2F19 JUMP JUMPDEST POP PUSH2 0x2F60 PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP3 LT ISZERO PUSH2 0x2F98 JUMPI POP PUSH2 0x2F74 DUP2 PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x2F98 JUMPI POP PUSH2 0x2F93 PUSH2 0x584 SWAP2 PUSH2 0x2F8D PUSH2 0x2F19 JUMP JUMPDEST POP PUSH2 0x2992 JUMP JUMPDEST PUSH2 0x2FB8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2FA5 PUSH2 0x2F19 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x584 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD JUMPDEST SWAP1 PUSH2 0x2FC1 PUSH2 0x2F19 JUMP JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0x20 DUP5 ADD MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xE8 SHR PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x303C DUP3 PUSH2 0x1B3A JUMP JUMPDEST SWAP2 PUSH2 0x304A PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEFE JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x3059 DUP3 PUSH2 0x1B3A JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x30AC JUMPI POP POP PUSH1 0x0 JUMPDEST DUP2 DUP2 SUB PUSH2 0x3076 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F71 JUMPI DUP1 PUSH2 0x3090 PUSH1 0x1 SWAP3 PUSH1 0x5 SHL DUP6 ADD CALLDATALOAD PUSH2 0x2F4F JUMP JUMPDEST PUSH2 0x309A DUP3 DUP8 PUSH2 0x301F JUMP JUMPDEST MSTORE PUSH2 0x30A5 DUP2 DUP7 PUSH2 0x301F JUMP JUMPDEST POP ADD PUSH2 0x3069 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x30B7 PUSH2 0x2F19 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x305D JUMP JUMPDEST SWAP1 PUSH2 0x30CD DUP3 PUSH2 0x1B3A JUMP JUMPDEST PUSH2 0x30DA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xEFE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x1F NOT PUSH2 0x30EA DUP3 SWAP5 PUSH2 0x1B3A JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 DUP3 DUP2 LT ISZERO PUSH2 0x322F JUMPI PUSH1 0x0 SWAP2 DUP3 SLOAD DUP1 DUP6 GT PUSH2 0x3227 JUMPI JUMPDEST POP PUSH2 0x3114 DUP2 PUSH2 0x2931 JUMP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x3220 JUMPI DUP3 DUP6 SUB DUP2 DUP2 LT PUSH2 0x3218 JUMPI JUMPDEST POP JUMPDEST PUSH2 0x3132 DUP2 PUSH2 0x30C3 JUMP JUMPDEST SWAP6 DUP2 ISZERO PUSH2 0x3210 JUMPI PUSH2 0x3142 DUP5 PUSH2 0x2F4F JUMP JUMPDEST SWAP2 DUP6 SWAP5 PUSH1 0x40 SWAP4 PUSH2 0x3157 PUSH2 0x2AD7 DUP7 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x31F1 JUMPI JUMPDEST POP JUMPDEST DUP8 DUP2 EQ ISZERO DUP1 PUSH2 0x31E7 JUMPI JUMPDEST ISZERO PUSH2 0x31DA JUMPI PUSH2 0x3176 DUP2 PUSH2 0x2F9D JUMP JUMPDEST DUP1 DUP6 ADD MLOAD PUSH2 0x31D1 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP1 PUSH2 0x31C8 JUMPI JUMPDEST POP SWAP1 DUP2 PUSH1 0x1 SWAP3 DUP8 AND SWAP1 DUP9 AND EQ PUSH2 0x31B4 JUMPI JUMPDEST ADD PUSH2 0x315E JUMP JUMPDEST DUP1 PUSH2 0x31C2 DUP4 DUP11 ADD SWAP10 DUP13 PUSH2 0x301F JUMP JUMPDEST MSTORE PUSH2 0x31AE JUMP JUMPDEST SWAP7 POP PUSH1 0x1 PUSH2 0x319D JUMP JUMPDEST POP PUSH1 0x1 SWAP1 PUSH2 0x31AE JUMP JUMPDEST POP POP SWAP6 SWAP5 POP POP POP POP DUP2 MSTORE SWAP1 JUMP JUMPDEST POP DUP2 DUP8 EQ ISZERO PUSH2 0x3168 JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP6 POP CODESIZE PUSH2 0x315C JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x3127 JUMP JUMPDEST POP DUP3 PUSH2 0x3129 JUMP JUMPDEST SWAP4 POP CODESIZE PUSH2 0x310A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x32C1995A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x32A2 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3273 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3268 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x32B8 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3313 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3308 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x32FC JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3329 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xC DUP3 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3384 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3379 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x336D JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3364 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x339A JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x33F5 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x33EA JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x33DE JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x33D5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x340B JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xE DUP3 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3466 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x345B JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x344F JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3446 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x3496 DUP2 PUSH2 0x3491 PUSH1 0xE SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x34D1 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x34C6 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x34B0 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x3504 PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3541 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x3528 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x351D JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x3509 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x357A DUP2 PUSH2 0x1296 PUSH1 0xC SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x35B5 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x35AA JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xC SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3594 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x35E8 PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3625 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x360C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xC SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3601 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x35ED JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x365E DUP2 PUSH2 0x1557 PUSH1 0xF SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3699 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x368E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3678 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x36CC PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3709 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x36F0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x36E5 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x372A DUP2 PUSH2 0x2992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3758 DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x3780 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP7 EQ OR ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x38B9 JUMPI JUMPDEST PUSH1 0x0 SWAP4 PUSH2 0x38B0 JUMPI JUMPDEST POP PUSH2 0x37B8 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD ADD SWAP1 SSTORE PUSH29 0x300000000000000000000000000000000000000000000000000000000 TIMESTAMP PUSH1 0xA0 SHL DUP4 OR OR PUSH2 0x3807 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0x3867 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP3 DUP1 LOG4 PUSH2 0xF2E PUSH2 0x3862 PUSH1 0x1 SLOAD PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x387F DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x388C JUMPI JUMPDEST POP PUSH2 0x382E JUMP JUMPDEST DUP4 SLOAD DUP2 EQ PUSH2 0x3886 JUMPI PUSH2 0x38A8 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x3886 JUMP JUMPDEST DUP4 SWAP1 SSTORE CODESIZE PUSH2 0x378D JUMP JUMPDEST PUSH2 0x38ED PUSH2 0x2AD7 PUSH2 0x2C94 CALLER PUSH2 0x2C6F DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3785 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x392E JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x3941 PUSH2 0x393B DUP3 DUP5 PUSH2 0x301F JUMP JUMPDEST MLOAD PUSH2 0x3721 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x23F0 JUMPI PUSH1 0x1 ADD PUSH2 0x3922 JUMP JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x3B0E JUMPI JUMPDEST PUSH2 0x3AE4 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xEDD JUMPI PUSH2 0x39BE DUP3 PUSH2 0x100A PUSH1 0xD SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x3A61 JUMPI POP SWAP4 PUSH2 0x3A07 PUSH2 0x3A11 SWAP5 DUP5 PUSH2 0x3A31 SWAP12 SWAP11 SWAP9 SWAP6 PUSH2 0x3A0C SWAP6 PUSH2 0x3A2C SWAP12 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x1045 JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE PUSH2 0x3470 JUMP JUMPDEST PUSH2 0x3559 JUMP JUMPDEST PUSH2 0x363D JUMP JUMPDEST PUSH2 0x3A1A DUP5 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0x3A23 DUP5 PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x524 DUP5 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0x2210 JUMP JUMPDEST PUSH2 0xF2E PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x10 SLOAD AND OR PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3ACC JUMPI POP POP SWAP5 PUSH1 0x1 DUP6 PUSH2 0x3A0C SWAP6 PUSH2 0x3A2C SWAP12 SWAP10 SWAP6 PUSH2 0x3A07 SWAP6 PUSH2 0x3A31 SWAP16 SWAP15 SWAP13 SWAP10 PUSH2 0x3A11 SWAP12 LT PUSH2 0x10AA JUMPI POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE PUSH2 0x3470 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x3A93 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x10 SLOAD AND PUSH2 0x3999 JUMP JUMPDEST ISZERO PUSH2 0x3B21 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20726F79616C7479206665652077696C6C20657863656564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2073616C65507269636500000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH2 0x3BD8 PUSH2 0x2710 DUP5 GT ISZERO PUSH2 0x3B1A JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x3C1F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3C10 DUP2 PUSH2 0xEC1 JUMP JUMPDEST DUP6 DUP2 MSTORE ADD MSTORE PUSH1 0xA0 SHL AND OR PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20696E76616C696420726563656976657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x3C86 DUP2 PUSH2 0x3D6C JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3CD4 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3CA9 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3C9F JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x584 SWAP2 POP PUSH2 0x3CE5 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO SWAP2 POP PUSH2 0x3C95 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CDF DUP2 PUSH2 0x3CE5 JUMP JUMPDEST SWAP1 PUSH2 0x3C8E JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SWAP1 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x3D38 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x3D66 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x584 SWAP2 POP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3DBC JUMPI POP SWAP1 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB ADDMOD 0xCB POP SWAP9 0xB1 0x22 DUP8 SWAP4 PUSH20 0xFC1576CBEB220975504B788E70CCCC47BB354EAB 0xCF JUMPI PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "392:2218:33:-:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;;-1:-1:-1;;;;;392:2218:33;;;;;;5012:13:23;392:2218:33;;;;;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;;;-1:-1:-1;;;;392:2218:33;;;;;;;;;;;5012:13:23;392:2218:33;;;;;;;;;5035:17:23;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;706:10;691:25;;392:2218;;;;;;;;691:25;392:2218;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;;5012:13:23;392:2218:33;;;;;;;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;;;;5012:13:23;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5012:13:23;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;392:2218:33;;;;;;;;;;;;;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1166,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_14161": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_14174": {
									"entryPoint": 1131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_addresst_uint256": {
									"entryPoint": 2114,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_available_length_string": {
									"entryPoint": 3916,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_bytes4_fromMemory": {
									"entryPoint": 11600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 4661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string_memory_ptr": {
									"entryPoint": 3971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_uint96": {
									"entryPoint": 1201,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_uint96_14215": {
									"entryPoint": 1228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_address_address_uint256_bytes": {
									"entryPoint": 11621,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_address_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_array_struct_TokenOwnership_dyn": {
									"entryPoint": 4315,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 4959,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 8054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_to_string": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_TokenOwnership": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"allocate_and_zero_memory_array_array_uint256_dyn": {
									"entryPoint": 12483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_and_zero_memory_array_bytes": {
									"entryPoint": 9224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_and_zero_memory_struct_struct_TokenOwnership": {
									"entryPoint": 12057,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 3873,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"allocate_memory_array_bytes": {
									"entryPoint": 9205,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 6970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_string": {
									"entryPoint": 3888,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_array_bytes32_dyn_storage_ptr": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_array_bytes32_dyn_storage_ptr_14196": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_array_bytes32_dyn_storage_ptr_14203": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_array_bytes32_dyn_storage_ptr_14212": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_pop_array_bytes32_dyn_storage_ptr": {
									"entryPoint": 10275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"checked_mul_uint256": {
									"entryPoint": 9181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 13085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"clean_up_bytearray_end_slots_string_storage_14195": {
									"entryPoint": 12972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"clean_up_bytearray_end_slots_string_storage_14211": {
									"entryPoint": 13198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"clean_up_bytearray_end_slots_string_storage_28527": {
									"entryPoint": 13311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"cleanup_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_string_to_string": {
									"entryPoint": 13424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_string_to_string_14301": {
									"entryPoint": 13657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_string_to_string_14302": {
									"entryPoint": 13885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1323,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_struct_to_storage_from_struct_RoyaltyInfo_to_struct_RoyaltyInfo": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"decrement_uint256": {
									"entryPoint": 9361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"decrement_wrapping_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"external_fun_DEFAULT_ADMIN_ROLE": {
									"entryPoint": 6045,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_approve": {
									"entryPoint": 1792,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_balanceOf": {
									"entryPoint": 4618,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_batchBurn": {
									"entryPoint": 6994,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_burn": {
									"entryPoint": 3344,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_contractURI": {
									"entryPoint": 7129,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_explicitOwnershipOf": {
									"entryPoint": 6371,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_explicitOwnershipsOf": {
									"entryPoint": 4456,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getApproved": {
									"entryPoint": 1670,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getRoleAdmin": {
									"entryPoint": 2198,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getRoleMember": {
									"entryPoint": 5230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_getRoleMemberCount": {
									"entryPoint": 6863,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_grantRole": {
									"entryPoint": 2454,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_hasRole": {
									"entryPoint": 5313,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_initialize": {
									"entryPoint": 5831,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_isApprovedForAll": {
									"entryPoint": 7296,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_mint": {
									"entryPoint": 2975,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_name": {
									"entryPoint": 1415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_ownerOf": {
									"entryPoint": 4558,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_renounceRole": {
									"entryPoint": 2777,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_revokeRole": {
									"entryPoint": 6907,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_royaltyInfo": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_safeTransferFrom": {
									"entryPoint": 3309,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_safeTransferFrom_4714": {
									"entryPoint": 6280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setApprovalForAll": {
									"entryPoint": 6073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setBaseMetadataURI": {
									"entryPoint": 4704,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setContractURI": {
									"entryPoint": 5409,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setDefaultRoyalty": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setNameAndSymbol": {
									"entryPoint": 3998,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_setTokenRoyalty": {
									"entryPoint": 3372,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_supportsInterface": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_symbol": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_tokenURI": {
									"entryPoint": 6485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_tokensOfOwner": {
									"entryPoint": 5018,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_tokensOfOwnerIn": {
									"entryPoint": 5989,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_totalSupply": {
									"entryPoint": 2079,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"external_fun_transferFrom": {
									"entryPoint": 2180,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 12889,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_returndata": {
									"entryPoint": 11681,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3838,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_14236": {
									"entryPoint": 3777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"finalize_allocation_28512": {
									"entryPoint": 3810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_add": {
									"entryPoint": 10157,
									"id": 3172,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_balanceOf": {
									"entryPoint": 10545,
									"id": 3952,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_batchBurn": {
									"entryPoint": 14620,
									"id": 6872,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_burn": {
									"entryPoint": 14113,
									"id": 5244,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkContractOnERC721Received": {
									"entryPoint": 11729,
									"id": 4795,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"fun_checkRole": {
									"entryPoint": 7828,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_14163": {
									"entryPoint": 7408,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_checkRole_14179": {
									"entryPoint": 7658,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_checkRole_14194": {
									"entryPoint": 7743,
									"id": 92,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_exists": {
									"entryPoint": 10801,
									"id": 4479,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_explicitOwnershipOf": {
									"entryPoint": 12111,
									"id": 5614,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_explicitOwnershipsOf": {
									"entryPoint": 12339,
									"id": 5668,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_getApprovedSlotAndAddress": {
									"entryPoint": null,
									"id": 4512,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"fun_grantRole": {
									"entryPoint": 8077,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_grantRole_14304": {
									"entryPoint": 8323,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_grantRole_14305": {
									"entryPoint": 8601,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_grantRole_14306": {
									"entryPoint": 8720,
									"id": 415,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_initialize": {
									"entryPoint": 14674,
									"id": 7045,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"fun_isSenderApprovedOrOwner": {
									"entryPoint": null,
									"id": 4493,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_ownershipAt": {
									"entryPoint": 12189,
									"id": 4189,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_packedOwnershipOf": {
									"entryPoint": 10642,
									"id": 4265,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_remove": {
									"entryPoint": 10364,
									"id": 3256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_revokeRole": {
									"entryPoint": 8839,
									"id": 439,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_safeTransferFrom": {
									"entryPoint": 11508,
									"id": 4714,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"fun_setDefaultRoyalty": {
									"entryPoint": 15269,
									"id": 1281,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_supportsInterface": {
									"entryPoint": 15485,
									"id": 7336,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_supportsInterface_1188": {
									"entryPoint": 15724,
									"id": 1188,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_supportsInterface_356": {
									"entryPoint": 15589,
									"id": 356,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_toHexString": {
									"entryPoint": 9475,
									"id": 2066,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_toHexString_14232": {
									"entryPoint": 9632,
									"id": 2066,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_toHexString_28516": {
									"entryPoint": 9789,
									"id": 2066,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_toHexString_28518": {
									"entryPoint": 9946,
									"id": 2066,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_toString": {
									"entryPoint": 11984,
									"id": 5354,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_tokensOfOwnerIn": {
									"entryPoint": 12532,
									"id": 5844,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"fun_transferFrom": {
									"entryPoint": 10867,
									"id": 4657,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"fun_unpackedOwnership": {
									"entryPoint": 12216,
									"id": 4319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_wrapping_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_bool_of_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_bool_of_address_14180": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_address_bool_of_address_14252": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_14182": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_14193": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mapping_index_access_mapping_bytes32_struct_RoleData_storage_of_bytes32_14235": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_bytes": {
									"entryPoint": 9344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"memory_array_index_access_bytes_14240": {
									"entryPoint": 9315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_bytes_14241": {
									"entryPoint": 9328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_struct_TokenOwnership_dyn": {
									"entryPoint": 12319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9134,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9268,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3730,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"read_from_storage_reference_type_struct_RoyaltyInfo": {
									"entryPoint": 9083,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"read_from_storage_split_offset_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"require_helper_stringliteral_04fc": {
									"entryPoint": 9374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_dcda": {
									"entryPoint": 15130,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"storage_array_index_access_bytes32_dyn_ptr": {
									"entryPoint": 10103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_bytes32_to_bytes32": {
									"entryPoint": 10127,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"update_storage_value_offsett_address_to_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_storage_value_offsett_bool_to_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"update_storage_value_offsett_uint256_to_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"write_to_memory_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"write_to_memory_uint96": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {
								"6977": [
									{
										"length": 32,
										"start": 14703
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461026757806304634d8d1461026257806306fdde031461025d578063081812fc14610258578063095ea7b31461025357806318160ddd1461024e57806323b872dd14610249578063248a9ca3146102445780632a55205a1461023f5780632f2ff15d1461023a57806336568abe1461023557806340c10f191461023057806342842e0e1461022b57806342966c68146102265780635944c753146102215780635a4462151461021c5780635bbb2177146102175780636352211e1461021257806370a082311461020d5780637e518ec8146102085780638462151c146102035780639010d07c146101fe57806391d14854146101f9578063938e3d7b146101f457806395d89b41146101ef57806398dd69c8146101ea57806399a2557a146101e5578063a217fddf146101e0578063a22cb465146101db578063b88d4fde146101d6578063c23dc68f146101d1578063c87b56dd146101cc578063ca15c873146101c7578063d547741f146101c2578063dc8e92ea146101bd578063e8a3d485146101b85763e985e9c5146101b357600080fd5b611c80565b611bd9565b611b52565b611afb565b611acf565b611955565b6118e3565b611888565b6117b9565b61179d565b611765565b6116c7565b611620565b611521565b6114c1565b61146e565b61139a565b611260565b61120a565b6111ce565b611168565b610f9e565b610d2c565b610d10565b610ced565b610b9f565b610ad9565b610996565b6108c5565b610896565b610884565b61081f565b610700565b610686565b610587565b6104e7565b61029b565b7fffffffff0000000000000000000000000000000000000000000000000000000081160361029657565b600080fd5b346102965760206003193601126102965761031d6004356102bb8161026c565b7fffffffff000000000000000000000000000000000000000000000000000000008116807f40c10f190000000000000000000000000000000000000000000000000000000014918215610321575b505060405190151581529081906020820190565b0390f35b7fc21b8f28000000000000000000000000000000000000000000000000000000008214925090821561041e575b821561038d575b50811561037c575b811561036c575b503880610309565b6103769150613c7d565b38610364565b905061038781613c7d565b9061035d565b9091507f01ffc9a70000000000000000000000000000000000000000000000000000000081149081156103f4575b81156103ca575b509038610355565b7f5b5e139f00000000000000000000000000000000000000000000000000000000915014386103c2565b7f80ac58cd00000000000000000000000000000000000000000000000000000000811491506103bb565b7f8446a79e000000000000000000000000000000000000000000000000000000008114925061034e565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361029657565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361029657565b60a4359073ffffffffffffffffffffffffffffffffffffffff8216820361029657565b604435906bffffffffffffffffffffffff8216820361029657565b60c435906bffffffffffffffffffffffff8216820361029657565b3461029657604060031936011261029657610500610448565b6024356bffffffffffffffffffffffff811681036102965761052991610524611cf0565b613ba5565b005b60005b83811061053e5750506000910152565b818101518382015260200161052e565b90601f19601f60209361056c8151809281875287808801910161052b565b0116010190565b90602061058492818152019061054e565b90565b3461029657600080600319360112610683576040519080600d546105aa81613259565b8085529160019180831690811561063b57506001146105e0575b61031d856105d481870382610efe565b60405191829182610573565b9250600d83527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb55b8284106106235750505081016020016105d48261031d6105c4565b80546020858701810191909152909301928101610608565b86955061031d969350602092506105d49491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b82010192936105c4565b80fd5b34610296576020600319360112610296576004356106a381612a31565b156106d6576000526006602052602073ffffffffffffffffffffffffffffffffffffffff60406000205416604051908152f35b60046040517fcf4700e4000000000000000000000000000000000000000000000000000000008152fd5b604060031936011261029657610714610448565b60243573ffffffffffffffffffffffffffffffffffffffff8061073683612992565b16908133036107b6575b600083815260066020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790559316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b81600052600760205260ff6107ef3360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166107405760046040517fcfb3b942000000000000000000000000000000000000000000000000000000008152fd5b346102965760006003193601126102965760206000546001549003604051908152f35b60031960609101126102965773ffffffffffffffffffffffffffffffffffffffff90600435828116810361029657916024359081168103610296579060443590565b61052961089036610842565b91612a73565b3461029657602060031936011261029657600435600052600a6020526020600160406000200154604051908152f35b346102965760406003193601126102965760043560005260096020526040600020604051906108f382610ec1565b549073ffffffffffffffffffffffffffffffffffffffff82169182825260a01c60208201529015610988575b61095f6127106109436bffffffffffffffffffffffff6020850151166024356123dd565b04915173ffffffffffffffffffffffffffffffffffffffff1690565b6040805173ffffffffffffffffffffffffffffffffffffffff9290921682526020820192909252f35b5061099161237b565b61091f565b3461029657604060031936011261029657600435610a3e6109b561046b565b73ffffffffffffffffffffffffffffffffffffffff610a36600094808652600a6020526109e86001604088200154611e94565b808652600a60205260ff610a1f85604089209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541615610a4257600052600b602052604060002090565b9116906127ad565b5080f35b808652600a602052610a7784604088209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533838516827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8980a4600052600b602052604060002090565b3461029657604060031936011261029657610af261046b565b3373ffffffffffffffffffffffffffffffffffffffff821603610b1b5761052990600435612287565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152fd5b3461029657604060031936011261029657610bb8610448565b60243590610bc4611dea565b6000918254918115610cc357610bfa8173ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b680100000000000000018302815401905573ffffffffffffffffffffffffffffffffffffffff600191169181811460e11b4260a01b178317610c46856000526004602052604060002090565b55830192817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91808588858180a4015b848103610cb45750505015610c8a57815580f35b60046040517f2e076300000000000000000000000000000000000000000000000000000000008152fd5b8083918588858180a401610c76565b60046040517fb562e8dd000000000000000000000000000000000000000000000000000000008152fd5b610529610cf936610842565b9060405192610d0784610ee2565b60008452612cf4565b3461029657602060031936011261029657610529600435613721565b3461029657606060031936011261029657610d4561046b565b610d4d6104b1565b90610d56611cf0565b610d726127106bffffffffffffffffffffffff84161115613b1a565b73ffffffffffffffffffffffffffffffffffffffff811615610e3457610dd161052992610dbc610da0610f21565b73ffffffffffffffffffffffffffffffffffffffff9094168452565b6bffffffffffffffffffffffff166020830152565b610de76004356000526009602052604060002090565b815160209092015160a01b7fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f455243323938313a20496e76616c696420706172616d657465727300000000006044820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610edd57604052565b610e92565b6020810190811067ffffffffffffffff821117610edd57604052565b90601f601f19910116810190811067ffffffffffffffff821117610edd57604052565b60405190610f2e82610ec1565b565b67ffffffffffffffff8111610edd57601f01601f191660200190565b929192610f5882610f30565b91610f666040519384610efe565b829481845281830111610296578281602093846000960137010152565b9080601f830112156102965781602061058493359101610f4c565b346102965760406003193601126102965767ffffffffffffffff60043581811161029657610fd0903690600401610f83565b9060243581811161029657610fe9903690600401610f83565b90610ff2611e3f565b8251908111610edd5761100f8161100a600d54613259565b6132ac565b602080601f83116001146110505750819061052994600092611045575b50506000198260011b9260031b1c191617600d55613470565b01519050388061102c565b600d6000529193601f1985167fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5936000905b8282106110c35750509160019391866105299794106110aa575b505050811b01600d55613470565b015160001960f88460031b161c1916905538808061109c565b80600186978294978701518155019601940190611082565b6020908160408183019282815285518094520193019160005b828110611102575050505090565b909192938260808261115c600194895162ffffff6060809273ffffffffffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152604081015115156040860152015116910152565b019501939291016110f4565b346102965760206003193601126102965767ffffffffffffffff6004358181116102965736602382011215610296578060040135918211610296573660248360051b830101116102965761031d9160246111c29201613033565b604051918291826110db565b3461029657602060031936011261029657602073ffffffffffffffffffffffffffffffffffffffff611201600435612992565b16604051908152f35b3461029657602060031936011261029657602061122d611228610448565b612931565b604051908152f35b6020600319820112610296576004359067ffffffffffffffff82116102965761058491600401610f83565b346102965761126e36611235565b611276611e3f565b805167ffffffffffffffff8111610edd5761129b81611296600c54613259565b61331d565b602080601f83116001146112d8575081926000926112cd575b50506000198260011b9260031b1c191617600c55600080f35b0151905038806112b4565b90601f1983169361130b600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c790565b926000905b868210611347575050836001951061132e575b505050811b01600c55005b015160001960f88460031b161c19169055388080611323565b80600185968294968601518155019501930190611310565b6020908160408183019282815285518094520193019160005b828110611386575050505090565b835185529381019392810192600101611378565b34610296576020600319360112610296576113b3610448565b6000806113bf83612931565b916113c9836130c3565b936113d2612f19565b5073ffffffffffffffffffffffffffffffffffffffff90811691835b858503611403576040518061031d898261135f565b61140c81612f9d565b6040810151611465575173ffffffffffffffffffffffffffffffffffffffff1683811661145c575b506001908484841614611448575b016113ee565b80611456838801978a61301f565b52611442565b91506001611434565b50600190611442565b3461029657604060031936011261029657600435600052600b602052602073ffffffffffffffffffffffffffffffffffffffff6114b16024356040600020612777565b9190546040519260031b1c168152f35b3461029657604060031936011261029657602060ff6115156114e161046b565b600435600052600a845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b346102965761152f36611235565b611537611e3f565b805167ffffffffffffffff8111610edd5761155c81611557600f54613259565b61338e565b602080601f83116001146115995750819260009261158e575b50506000198260011b9260031b1c191617600f55600080f35b015190503880611575565b90601f198316936115cc600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290565b926000905b86821061160857505083600195106115ef575b505050811b01600f55005b015160001960f88460031b161c191690553880806115e4565b806001859682949686015181550195019301906115d1565b3461029657600080600319360112610683576040519080600e5461164381613259565b8085529160019180831690811561063b575060011461166c5761031d856105d481870382610efe565b9250600e83527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd5b8284106116af5750505081016020016105d48261031d6105c4565b80546020858701810191909152909301928101611694565b346102965760e0600319360112610296576116e0610448565b67ffffffffffffffff9060243582811161029657611702903690600401610f83565b6044358381116102965761171a903690600401610f83565b60643584811161029657611732903690600401610f83565b6084359485116102965761174d610529953690600401610f83565b9161175661048e565b9361175f6104cc565b95613952565b346102965760606003193601126102965761031d611791611784610448565b60443590602435906130f4565b6040519182918261135f565b3461029657600060031936011261029657602060405160008152f35b34610296576040600319360112610296576117d2610448565b602435908115158092036102965773ffffffffffffffffffffffffffffffffffffffff9033600052600760205261182d8160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60806003193601126102965761189c610448565b6118a461046b565b6064359167ffffffffffffffff83116102965736602384011215610296576118d9610529933690602481600401359101610f4c565b9160443591612cf4565b34610296576020600319360112610296576080611901600435612f4f565b611953604051809262ffffff6060809273ffffffffffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152604081015115156040860152015116910152565bf35b34610296576020806003193601126102965760043561197381612a31565b15611aa5576040519082826000600c5461198c81613259565b80845290600190818116908115611a655750600114611a06575b50506119b492500383610efe565b8151156119f35761031d926119e56119ce6105d493612ed0565b6119df604051958694850190611f76565b90611f76565b03601f198101835282610efe565b50505061031d611a016123f5565b6105d4565b90939150600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7936000915b818310611a4d5750879450508201016119b4386119a6565b85548884018501529485019487945091830191611a35565b90506119b49593507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201018592386119a6565b60046040517fa14c4b50000000000000000000000000000000000000000000000000000000008152fd5b3461029657602060031936011261029657600435600052600b6020526020604060002054604051908152f35b3461029657604060031936011261029657610529600435611b1a61046b565b9080600052600a602052611b35600160406000200154611e94565b612287565b67ffffffffffffffff8111610edd5760051b60200190565b34610296576020806003193601126102965760043567ffffffffffffffff8111610296573660238201121561029657806004013590611b9082611b3a565b91611b9e6040519384610efe565b80835260248484019160051b8301019136831161029657602401905b828210611bca576105298461391c565b81358152908401908401611bba565b3461029657600080600319360112610683576040519080600f54611bfc81613259565b8085529160019180831690811561063b5750600114611c255761031d856105d481870382610efe565b9250600f83527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8025b828410611c685750505081016020016105d48261031d6105c4565b80546020858701810191909152909301928101611c4d565b3461029657604060031936011261029657602060ff611515611ca0610448565b73ffffffffffffffffffffffffffffffffffffffff611cbd61046b565b91166000526007845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b3360009081527f4a209273c9c71eac8bee506e444418998f8f452896d49b4edfa61f22f2a2bd27602052604090205460ff1615611d2957565b611de66048611db4611d3a33612503565b6119e5611d456125a0565b6040519485937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000006020860152611d8581518092602060378901910161052b565b84017f206973206d697373696e6720726f6c652000000000000000000000000000000060378201520190611f76565b6040519182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301610573565b0390fd5b3360009081527faa1d7351356c4ddc11907b1ee0660f579cfdf507235af2ae01ecd22a4b7ceaae602052604090205460ff1615611e2357565b611de66048611db4611e3433612503565b6119e5611d4561263d565b3360009081527f2de00acba1f3dd4b00004fa31871eaf6bd23564af8ed1bbe52ac31593862e4a2602052604090205460ff1615611e7857565b611de66048611db4611e8933612503565b6119e5611d456126da565b80600052600a60205260ff611ecd3360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541615611ed75750565b611ee033612503565b611ee8612408565b916030611ef484612463565b536078611f0084612470565b5360415b60018111611f2357611de66048611db4856119e588611d45881561249e565b90600f8116906010821015611f71577f3031323334353637383961626364656600000000000000000000000000000000611f6c921a611f628487612480565b5360041c91612491565b611f04565b612434565b90611f896020928281519485920161052b565b0190565b73ffffffffffffffffffffffffffffffffffffffff81811660009081527f13da86008ba1c6922daee3e07db95305ef49ebced9f5467a0b8613fcc6b343e3602052604080822054611ff59493929060ff1615611ff8575b808052600b602052209116906127ad565b50565b808052600a60205261202c848383209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533838516827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4611fe4565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527f2de00acba1f3dd4b00004fa31871eaf6bd23564af8ed1bbe52ac31593862e4a26020526040808220611ff5949392907fe02a0315b383857ac496e9d2b2546a699afaeb4e5e83a1fdef64376d0b74e5a59060ff905b54161561210e575b8152600b602052209116906127ad565b808252600a602052612142858484209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533848616827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8580a46120fe565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527f4a209273c9c71eac8bee506e444418998f8f452896d49b4edfa61f22f2a2bd276020526040808220611ff5949392907f6db4061a20ca83a3be756ee172bd37a029093ac5afe4ce968c6d5435b43cb0119060ff906120f6565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527faa1d7351356c4ddc11907b1ee0660f579cfdf507235af2ae01ecd22a4b7ceaae6020526040808220611ff5949392907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69060ff906120f6565b9073ffffffffffffffffffffffffffffffffffffffff6040611ff593600090808252600a60205260ff6122dc868585209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166122f3575b8152600b6020522091169061287c565b808252600a602052612327858484209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905533848616827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a46122e3565b6040519061238882610ec1565b60085473ffffffffffffffffffffffffffffffffffffffff8116835260a01c6020830152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818102929181159184041417156123f057565b6123ae565b6040519061240282610ee2565b60008252565b604051906080820182811067ffffffffffffffff821117610edd57604052604282526060366020840137565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b805115611f715760200190565b805160011015611f715760210190565b908151811015611f71570160200190565b80156123f0576000190190565b156124a557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b604051906060820182811067ffffffffffffffff821117610edd57604052602a82526040366020840137603061253883612463565b53607861254483612470565b536029905b6001821161255c5761058491501561249e565b600f8116906010821015611f71577f303132333435363738396162636465660000000000000000000000000000000061259a921a611f628486612480565b90612549565b7f6db4061a20ca83a3be756ee172bd37a029093ac5afe4ce968c6d5435b43cb0116125c9612408565b9060306125d583612463565b5360786125e183612470565b536041905b600182116125f95761058491501561249e565b600f8116906010821015611f71577f3031323334353637383961626364656600000000000000000000000000000000612637921a611f628486612480565b906125e6565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6612666612408565b90603061267283612463565b53607861267e83612470565b536041905b600182116126965761058491501561249e565b600f8116906010821015611f71577f30313233343536373839616263646566000000000000000000000000000000006126d4921a611f628486612480565b90612683565b7fe02a0315b383857ac496e9d2b2546a699afaeb4e5e83a1fdef64376d0b74e5a5612703612408565b90603061270f83612463565b53607861271b83612470565b536041905b600182116127335761058491501561249e565b600f8116906010821015611f71577f3031323334353637383961626364656600000000000000000000000000000000612771921a611f628486612480565b90612720565b8054821015611f715760005260206000200190600090565b916127a9918354906000199060031b92831b921b19161790565b9055565b600181019082600052816020526040600020541560001461281b57805468010000000000000000811015610edd576128066127ef826001879401855584612777565b81939154906000199060031b92831b921b19161790565b90555491600052602052604060002055600190565b505050600090565b805490811561284d576000198092019161283d8383612777565b909182549160031b1b1916905555565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60018101918060005282602052604060002054928315156000146129285760001992838501908582116123f05780549485019485116123f05760009585836128d0946128df98036128e5575b505050612823565b90600052602052604060002090565b55600190565b61290f612909916128f961291f9487612777565b90549060031b1c92839187612777565b9061278f565b8590600052602052604060002090565b553880806128c8565b50505050600090565b73ffffffffffffffffffffffffffffffffffffffff16801561296857600052600560205267ffffffffffffffff6040600020541690565b60046040517f8f4eb604000000000000000000000000000000000000000000000000000000008152fd5b600081815481106129c8575b60046040517fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b815260049060209180835260409283832054947c0100000000000000000000000000000000000000000000000000000000861615612a085750505061299e565b93929190935b8515612a1c57505050505090565b60001901808352818552838320549550612a0e565b60005481109081612a40575090565b905060005260046020527c0100000000000000000000000000000000000000000000000000000000604060002054161590565b90612a7d83612992565b73ffffffffffffffffffffffffffffffffffffffff808416928382841603612cca57600086815260066020526040902080549092612adb73ffffffffffffffffffffffffffffffffffffffff881633908114908414171590565b1590565b612c3b575b8216958615612c1157612b4b93612b1d92612c07575b5073ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b805460001901905573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b805460010190557c0200000000000000000000000000000000000000000000000000000000804260a01b851717612b8c866000526004602052604060002090565b55811615612bbd575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b60018401612bd5816000526004602052604060002090565b5415612be2575b50612b95565b6000548114612bdc57612bff906000526004602052604060002090565b553880612bdc565b6000905538612af6565b60046040517fea553b34000000000000000000000000000000000000000000000000000000008152fd5b612c9b612ad7612c9433612c6f8b73ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b15612ae05760046040517f59c896be000000000000000000000000000000000000000000000000000000008152fd5b60046040517fa1148100000000000000000000000000000000000000000000000000000000008152fd5b929190612d02828286612a73565b803b612d0f575b50505050565b612d1893612dd1565b15612d265738808080612d09565b60046040517fd1a57ed6000000000000000000000000000000000000000000000000000000008152fd5b9081602091031261029657516105848161026c565b9092610584949360809373ffffffffffffffffffffffffffffffffffffffff80921684521660208301526040820152816060820152019061054e565b3d15612dcc573d90612db282610f30565b91612dc06040519384610efe565b82523d6000602084013e565b606090565b92602091612e2893600073ffffffffffffffffffffffffffffffffffffffff6040518097819682957f150b7a02000000000000000000000000000000000000000000000000000000009b8c85523360048601612d65565b0393165af160009181612ea0575b50612e7a57612e43612da1565b80519081612e755760046040517fd1a57ed6000000000000000000000000000000000000000000000000000000008152fd5b602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000161490565b612ec291925060203d8111612ec9575b612eba8183610efe565b810190612d50565b9038612e36565b503d612eb0565b9060405160a08101604052600019608082019360008552935b0192600a90818106603001855304928315612f075760001990612ee9565b9250608083601f199203019201918252565b604051906080820182811067ffffffffffffffff821117610edd5760405260006060838281528260208201528260408201520152565b612f57612f19565b50612f60612f19565b600054821015612f985750612f7481612f9d565b6040810151612f985750612f9361058491612f8d612f19565b50612992565b612fb8565b905090565b612fa5612f19565b5060005260046020526105846040600020545b90612fc1612f19565b9173ffffffffffffffffffffffffffffffffffffffff8116835267ffffffffffffffff8160a01c1660208401527c010000000000000000000000000000000000000000000000000000000081161515604084015260e81c6060830152565b8051821015611f715760209160051b010190565b61303c82611b3a565b9161304a6040519384610efe565b808352601f1961305982611b3a565b0160005b8181106130ac57505060005b8181036130765750505090565b81811015611f71578061309060019260051b850135612f4f565b61309a828761301f565b526130a5818661301f565b5001613069565b6020906130b7612f19565b8282880101520161305d565b906130cd82611b3a565b6130da6040519182610efe565b828152601f196130ea8294611b3a565b0190602036910137565b908281101561322f576000918254808511613227575b5061311481612931565b8483101561322057828503818110613218575b505b613132816130c3565b9581156132105761314284612f4f565b918594604093613157612ad786830151151590565b6131f1575b505b87811415806131e7575b156131da5761317681612f9d565b808501516131d1575173ffffffffffffffffffffffffffffffffffffffff908116806131c8575b5090816001928716908816146131b4575b0161315e565b806131c2838a01998c61301f565b526131ae565b9650600161319d565b506001906131ae565b5050959450505050815290565b5081871415613168565b5173ffffffffffffffffffffffffffffffffffffffff1695503861315c565b945050505050565b905038613127565b5082613129565b93503861310a565b60046040517f32c1995a000000000000000000000000000000000000000000000000000000008152fd5b90600182811c921680156132a2575b602083101461327357565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691613268565b601f81116132b8575050565b600090600d82527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5906020601f850160051c83019410613313575b601f0160051c01915b82811061330857505050565b8181556001016132fc565b90925082906132f3565b601f8111613329575050565b600090600c82527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7906020601f850160051c83019410613384575b601f0160051c01915b82811061337957505050565b81815560010161336d565b9092508290613364565b601f811161339a575050565b600090600f82527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802906020601f850160051c830194106133f5575b601f0160051c01915b8281106133ea57505050565b8181556001016133de565b90925082906133d5565b601f811161340b575050565b600090600e82527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd906020601f850160051c83019410613466575b601f0160051c01915b82811061345b57505050565b81815560010161344f565b9092508290613446565b90815167ffffffffffffffff8111610edd5761349681613491600e54613259565b6133ff565b602080601f83116001146134d157508192936000926134c6575b50506000198260011b9260031b1c191617600e55565b0151905038806134b0565b90601f19831694613504600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd90565b926000905b878210613541575050836001959610613528575b505050811b01600e55565b015160001960f88460031b161c1916905538808061351d565b80600185968294968601518155019501930190613509565b90815167ffffffffffffffff8111610edd5761357a81611296600c54613259565b602080601f83116001146135b557508192936000926135aa575b50506000198260011b9260031b1c191617600c55565b015190503880613594565b90601f198316946135e8600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c790565b926000905b87821061362557505083600195961061360c575b505050811b01600c55565b015160001960f88460031b161c19169055388080613601565b806001859682949686015181550195019301906135ed565b90815167ffffffffffffffff8111610edd5761365e81611557600f54613259565b602080601f8311600114613699575081929360009261368e575b50506000198260011b9260031b1c191617600f55565b015190503880613678565b90601f198316946136cc600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290565b926000905b8782106137095750508360019596106136f0575b505050811b01600f55565b015160001960f88460031b161c191690553880806136e5565b806001859682949686015181550195019301906136d1565b61372a81612992565b73ffffffffffffffffffffffffffffffffffffffff8116613758836000526006602052604060002090815490565b929061378073ffffffffffffffffffffffffffffffffffffffff841633908114908614171590565b6138b9575b6000936138b0575b506137b88273ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b6fffffffffffffffffffffffffffffffff81540190557c03000000000000000000000000000000000000000000000000000000004260a01b831717613807856000526004602052604060002090565b557c0200000000000000000000000000000000000000000000000000000000811615613867575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4610f2e61386260015460010190565b600155565b6001840161387f816000526004602052604060002090565b541561388c575b5061382e565b83548114613886576138a8906000526004602052604060002090565b553880613886565b8390553861378d565b6138ed612ad7612c9433612c6f8773ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b156137855760046040517f59c896be000000000000000000000000000000000000000000000000000000008152fd5b80519060005b82811061392e57505050565b61394161393b828461301f565b51613721565b60001981146123f057600101613922565b95949392919073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163314801590613b0e575b613ae45780519067ffffffffffffffff8211610edd576139be8261100a600d54613259565b60209081601f8411600114613a61575093613a07613a119484613a319b9a9895613a0c95613a2c9b996000926110455750506000198260011b9260031b1c191617600d55613470565b613559565b61363d565b613a1a84611f8d565b613a2384612083565b61052484612199565b612210565b610f2e60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006010541617601055565b600d6000529190601f1984167fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5936000905b828210613acc57505094600185613a0c95613a2c9b9995613a0795613a319f9e9c99613a119b106110aa57505050811b01600d55613470565b80600186978294978701518155019601940190613a93565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b5060ff60105416613999565b15613b2157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c2065786365656460448201527f2073616c655072696365000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff6bffffffffffffffffffffffff831691613bd8612710841115613b1a565b16918215613c1f577fffffffffffffffffffffffff0000000000000000000000000000000000000000916020604051613c1081610ec1565b858152015260a01b1617600855565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152fd5b613c8681613d6c565b908115613cd4575b8115613ca9575b8115613c9f575090565b6105849150613ce5565b7fffffffff000000000000000000000000000000000000000000000000000000008116159150613c95565b9050613cdf81613ce5565b90613c8e565b7fffffffff000000000000000000000000000000000000000000000000000000008116907f5a05180f000000000000000000000000000000000000000000000000000000008214918215613d3857505090565b7f7965db0b000000000000000000000000000000000000000000000000000000001491508115613d66575090565b61058491505b7fffffffff00000000000000000000000000000000000000000000000000000000167f2a55205a000000000000000000000000000000000000000000000000000000008114908115613dbc575090565b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150149056fea2646970667358221220db08cb5098b122879373fc1576cbeb220975504b788e70cccc47bb354eabcf5764736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x5944C753 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x5A446215 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x5BBB2177 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x7E518EC8 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x98DD69C8 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x99A2557A EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xC23DC68F EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xDC8E92EA EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x1B8 JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x1AFB JUMP JUMPDEST PUSH2 0x1ACF JUMP JUMPDEST PUSH2 0x1955 JUMP JUMPDEST PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0x179D JUMP JUMPDEST PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x146E JUMP JUMPDEST PUSH2 0x139A JUMP JUMPDEST PUSH2 0x1260 JUMP JUMPDEST PUSH2 0x120A JUMP JUMPDEST PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x1168 JUMP JUMPDEST PUSH2 0xF9E JUMP JUMPDEST PUSH2 0xD2C JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH2 0xCED JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x996 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x700 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x31D PUSH1 0x4 CALLDATALOAD PUSH2 0x2BB DUP2 PUSH2 0x26C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 EQ SWAP2 DUP3 ISZERO PUSH2 0x321 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH32 0xC21B8F2800000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP3 POP SWAP1 DUP3 ISZERO PUSH2 0x41E JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x38D JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x37C JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x36C JUMPI JUMPDEST POP CODESIZE DUP1 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x376 SWAP2 POP PUSH2 0x3C7D JUMP JUMPDEST CODESIZE PUSH2 0x364 JUMP JUMPDEST SWAP1 POP PUSH2 0x387 DUP2 PUSH2 0x3C7D JUMP JUMPDEST SWAP1 PUSH2 0x35D JUMP JUMPDEST SWAP1 SWAP2 POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3CA JUMPI JUMPDEST POP SWAP1 CODESIZE PUSH2 0x355 JUMP JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x3C2 JUMP JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x3BB JUMP JUMPDEST PUSH32 0x8446A79E00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP3 POP PUSH2 0x34E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x500 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI PUSH2 0x529 SWAP2 PUSH2 0x524 PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0x3BA5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x53E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x52E JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x56C DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x52B JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x584 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x54E JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xD SLOAD PUSH2 0x5AA DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x5E0 JUMPI JUMPDEST PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x573 JUMP JUMPDEST SWAP3 POP PUSH1 0xD DUP4 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 JUMPDEST DUP3 DUP5 LT PUSH2 0x623 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x608 JUMP JUMPDEST DUP7 SWAP6 POP PUSH2 0x31D SWAP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x5D4 SWAP5 SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 SWAP4 PUSH2 0x5C4 JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6A3 DUP2 PUSH2 0x2A31 JUMP JUMPDEST ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x714 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x736 DUP4 PUSH2 0x2992 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x7B6 JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x7EF CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x740 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x296 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x529 PUSH2 0x890 CALLDATASIZE PUSH2 0x842 JUMP JUMPDEST SWAP2 PUSH2 0x2A73 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x8F3 DUP3 PUSH2 0xEC1 JUMP JUMPDEST SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO PUSH2 0x988 JUMPI JUMPDEST PUSH2 0x95F PUSH2 0x2710 PUSH2 0x943 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x23DD JUMP JUMPDEST DIV SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE RETURN JUMPDEST POP PUSH2 0x991 PUSH2 0x237B JUMP JUMPDEST PUSH2 0x91F JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA3E PUSH2 0x9B5 PUSH2 0x46B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA36 PUSH1 0x0 SWAP5 DUP1 DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x9E8 PUSH1 0x1 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD PUSH2 0x1E94 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0xA1F DUP6 PUSH1 0x40 DUP10 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 AND SWAP1 PUSH2 0x27AD JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0xA77 DUP5 PUSH1 0x40 DUP9 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP10 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xAF2 PUSH2 0x46B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0xB1B JUMPI PUSH2 0x529 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xBB8 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xBC4 PUSH2 0x1DEA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SLOAD SWAP2 DUP2 ISZERO PUSH2 0xCC3 JUMPI PUSH2 0xBFA DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH9 0x10000000000000001 DUP4 MUL DUP2 SLOAD ADD SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SWAP2 AND SWAP2 DUP2 DUP2 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR PUSH2 0xC46 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP4 ADD SWAP3 DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP1 DUP6 DUP9 DUP6 DUP2 DUP1 LOG4 ADD JUMPDEST DUP5 DUP2 SUB PUSH2 0xCB4 JUMPI POP POP POP ISZERO PUSH2 0xC8A JUMPI DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 DUP4 SWAP2 DUP6 DUP9 DUP6 DUP2 DUP1 LOG4 ADD PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x529 PUSH2 0xCF9 CALLDATASIZE PUSH2 0x842 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xD07 DUP5 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x2CF4 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x529 PUSH1 0x4 CALLDATALOAD PUSH2 0x3721 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xD45 PUSH2 0x46B JUMP JUMPDEST PUSH2 0xD4D PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH2 0xD56 PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0xD72 PUSH2 0x2710 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND GT ISZERO PUSH2 0x3B1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0xE34 JUMPI PUSH2 0xDD1 PUSH2 0x529 SWAP3 PUSH2 0xDBC PUSH2 0xDA0 PUSH2 0xF21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND DUP5 MSTORE JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xDE7 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH1 0xA0 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20496E76616C696420706172616D65746572730000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF2E DUP3 PUSH2 0xEC1 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xF58 DUP3 PUSH2 0xF30 JUMP JUMPDEST SWAP2 PUSH2 0xF66 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEFE JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x296 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP2 PUSH1 0x20 PUSH2 0x584 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xF4C JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0xFD0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0xFE9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST SWAP1 PUSH2 0xFF2 PUSH2 0x1E3F JUMP JUMPDEST DUP3 MLOAD SWAP1 DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x100F DUP2 PUSH2 0x100A PUSH1 0xD SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH2 0x32AC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1050 JUMPI POP DUP2 SWAP1 PUSH2 0x529 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1045 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE PUSH2 0x3470 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 MSTORE SWAP2 SWAP4 PUSH1 0x1F NOT DUP6 AND PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x10C3 JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH2 0x529 SWAP8 SWAP5 LT PUSH2 0x10AA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE PUSH2 0x3470 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x109C JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1102 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH1 0x80 DUP3 PUSH2 0x115C PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x10F4 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x296 JUMPI PUSH2 0x31D SWAP2 PUSH1 0x24 PUSH2 0x11C2 SWAP3 ADD PUSH2 0x3033 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x10DB JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1201 PUSH1 0x4 CALLDATALOAD PUSH2 0x2992 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH2 0x122D PUSH2 0x1228 PUSH2 0x448 JUMP JUMPDEST PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x296 JUMPI PUSH2 0x584 SWAP2 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x126E CALLDATASIZE PUSH2 0x1235 JUMP JUMPDEST PUSH2 0x1276 PUSH2 0x1E3F JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x129B DUP2 PUSH2 0x1296 PUSH1 0xC SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH2 0x331D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x12D8 JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x12CD JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xC SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x12B4 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x130B PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1347 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x132E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xC SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1323 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1386 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1378 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x13B3 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13BF DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 PUSH2 0x13C9 DUP4 PUSH2 0x30C3 JUMP JUMPDEST SWAP4 PUSH2 0x13D2 PUSH2 0x2F19 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 DUP4 JUMPDEST DUP6 DUP6 SUB PUSH2 0x1403 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x31D DUP10 DUP3 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x140C DUP2 PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x1465 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP2 AND PUSH2 0x145C JUMPI JUMPDEST POP PUSH1 0x1 SWAP1 DUP5 DUP5 DUP5 AND EQ PUSH2 0x1448 JUMPI JUMPDEST ADD PUSH2 0x13EE JUMP JUMPDEST DUP1 PUSH2 0x1456 DUP4 DUP9 ADD SWAP8 DUP11 PUSH2 0x301F JUMP JUMPDEST MSTORE PUSH2 0x1442 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 PUSH2 0x1434 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 PUSH2 0x1442 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x14B1 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2777 JUMP JUMPDEST SWAP2 SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1515 PUSH2 0x14E1 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x152F CALLDATASIZE PUSH2 0x1235 JUMP JUMPDEST PUSH2 0x1537 PUSH2 0x1E3F JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x155C DUP2 PUSH2 0x1557 PUSH1 0xF SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH2 0x338E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1599 JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x158E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1575 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x15CC PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1608 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x15EF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x15E4 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x15D1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xE SLOAD PUSH2 0x1643 DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x166C JUMPI PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEFE JUMP JUMPDEST SWAP3 POP PUSH1 0xE DUP4 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD JUMPDEST DUP3 DUP5 LT PUSH2 0x16AF JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1694 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x16E0 PUSH2 0x448 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x1702 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x171A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x1732 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x296 JUMPI PUSH2 0x174D PUSH2 0x529 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST SWAP2 PUSH2 0x1756 PUSH2 0x48E JUMP JUMPDEST SWAP4 PUSH2 0x175F PUSH2 0x4CC JUMP JUMPDEST SWAP6 PUSH2 0x3952 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x31D PUSH2 0x1791 PUSH2 0x1784 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x30F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x135F JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x17D2 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x296 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x182D DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x189C PUSH2 0x448 JUMP JUMPDEST PUSH2 0x18A4 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x296 JUMPI PUSH2 0x18D9 PUSH2 0x529 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xF4C JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x2CF4 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x80 PUSH2 0x1901 PUSH1 0x4 CALLDATALOAD PUSH2 0x2F4F JUMP JUMPDEST PUSH2 0x1953 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1973 DUP2 PUSH2 0x2A31 JUMP JUMPDEST ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 PUSH1 0x0 PUSH1 0xC SLOAD PUSH2 0x198C DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1A65 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1A06 JUMPI JUMPDEST POP POP PUSH2 0x19B4 SWAP3 POP SUB DUP4 PUSH2 0xEFE JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x31D SWAP3 PUSH2 0x19E5 PUSH2 0x19CE PUSH2 0x5D4 SWAP4 PUSH2 0x2ED0 JUMP JUMPDEST PUSH2 0x19DF PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 ADD SWAP1 PUSH2 0x1F76 JUMP JUMPDEST SWAP1 PUSH2 0x1F76 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xEFE JUMP JUMPDEST POP POP POP PUSH2 0x31D PUSH2 0x1A01 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1A4D JUMPI POP DUP8 SWAP5 POP POP DUP3 ADD ADD PUSH2 0x19B4 CODESIZE PUSH2 0x19A6 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1A35 JUMP JUMPDEST SWAP1 POP PUSH2 0x19B4 SWAP6 SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 SWAP3 CODESIZE PUSH2 0x19A6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x529 PUSH1 0x4 CALLDATALOAD PUSH2 0x1B1A PUSH2 0x46B JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x1B35 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x2287 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x1B90 DUP3 PUSH2 0x1B3A JUMP JUMPDEST SWAP2 PUSH2 0x1B9E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEFE JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 DUP5 DUP5 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x296 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1BCA JUMPI PUSH2 0x529 DUP5 PUSH2 0x391C JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1BBA JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xF SLOAD PUSH2 0x1BFC DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x1C25 JUMPI PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEFE JUMP JUMPDEST SWAP3 POP PUSH1 0xF DUP4 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 JUMPDEST DUP3 DUP5 LT PUSH2 0x1C68 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1C4D JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1515 PUSH2 0x1CA0 PUSH2 0x448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1CBD PUSH2 0x46B JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4A209273C9C71EAC8BEE506E444418998F8F452896D49B4EDFA61F22F2A2BD27 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1D29 JUMPI JUMP JUMPDEST PUSH2 0x1DE6 PUSH1 0x48 PUSH2 0x1DB4 PUSH2 0x1D3A CALLER PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x19E5 PUSH2 0x1D45 PUSH2 0x25A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1D85 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x52B JUMP JUMPDEST DUP5 ADD PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x37 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x573 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAA1D7351356C4DDC11907B1EE0660F579CFDF507235AF2AE01ECD22A4B7CEAAE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E23 JUMPI JUMP JUMPDEST PUSH2 0x1DE6 PUSH1 0x48 PUSH2 0x1DB4 PUSH2 0x1E34 CALLER PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x19E5 PUSH2 0x1D45 PUSH2 0x263D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x2DE00ACBA1F3DD4B00004FA31871EAF6BD23564AF8ED1BBE52AC31593862E4A2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E78 JUMPI JUMP JUMPDEST PUSH2 0x1DE6 PUSH1 0x48 PUSH2 0x1DB4 PUSH2 0x1E89 CALLER PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x19E5 PUSH2 0x1D45 PUSH2 0x26DA JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1ECD CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x1ED7 JUMPI POP JUMP JUMPDEST PUSH2 0x1EE0 CALLER PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x1EE8 PUSH2 0x2408 JUMP JUMPDEST SWAP2 PUSH1 0x30 PUSH2 0x1EF4 DUP5 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x1F00 DUP5 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x41 JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x1F23 JUMPI PUSH2 0x1DE6 PUSH1 0x48 PUSH2 0x1DB4 DUP6 PUSH2 0x19E5 DUP9 PUSH2 0x1D45 DUP9 ISZERO PUSH2 0x249E JUMP JUMPDEST SWAP1 PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x1F6C SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP8 PUSH2 0x2480 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP2 PUSH2 0x2491 JUMP JUMPDEST PUSH2 0x1F04 JUMP JUMPDEST PUSH2 0x2434 JUMP JUMPDEST SWAP1 PUSH2 0x1F89 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x52B JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH2 0x1FF5 SWAP5 SWAP4 SWAP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1FF8 JUMPI JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x27AD JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x202C DUP5 DUP4 DUP4 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH2 0x1FE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x2DE00ACBA1F3DD4B00004FA31871EAF6BD23564AF8ED1BBE52AC31593862E4A2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x1FF5 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0x210E JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x27AD JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x2142 DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP6 DUP1 LOG4 PUSH2 0x20FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4A209273C9C71EAC8BEE506E444418998F8F452896D49B4EDFA61F22F2A2BD27 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x1FF5 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x20F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAA1D7351356C4DDC11907B1EE0660F579CFDF507235AF2AE01ECD22A4B7CEAAE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x1FF5 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x20F6 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH2 0x1FF5 SWAP4 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x22DC DUP7 DUP6 DUP6 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x22F3 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x287C JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x2327 DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP1 LOG4 PUSH2 0x22E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2388 DUP3 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x23F0 JUMPI JUMP JUMPDEST PUSH2 0x23AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2402 DUP3 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE PUSH1 0x42 DUP3 MSTORE PUSH1 0x60 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x21 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1F71 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23F0 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x24A5 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE PUSH1 0x2A DUP3 MSTORE PUSH1 0x40 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x30 PUSH2 0x2538 DUP4 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x2544 DUP4 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x29 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x255C JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x249E JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x259A SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH2 0x2549 JUMP JUMPDEST PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 PUSH2 0x25C9 PUSH2 0x2408 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x25D5 DUP4 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x25E1 DUP4 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x25F9 JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x249E JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x2637 SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH2 0x25E6 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x2666 PUSH2 0x2408 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x2672 DUP4 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x267E DUP4 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x2696 JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x249E JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x26D4 SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 PUSH2 0x2703 PUSH2 0x2408 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x270F DUP4 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x271B DUP4 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x2733 JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x249E JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x2771 SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH2 0x2720 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x27A9 SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x281B JUMPI DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xEDD JUMPI PUSH2 0x2806 PUSH2 0x27EF DUP3 PUSH1 0x1 DUP8 SWAP5 ADD DUP6 SSTORE DUP5 PUSH2 0x2777 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x284D JUMPI PUSH1 0x0 NOT DUP1 SWAP3 ADD SWAP2 PUSH2 0x283D DUP4 DUP4 PUSH2 0x2777 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SWAP2 DUP1 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP4 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x2928 JUMPI PUSH1 0x0 NOT SWAP3 DUP4 DUP6 ADD SWAP1 DUP6 DUP3 GT PUSH2 0x23F0 JUMPI DUP1 SLOAD SWAP5 DUP6 ADD SWAP5 DUP6 GT PUSH2 0x23F0 JUMPI PUSH1 0x0 SWAP6 DUP6 DUP4 PUSH2 0x28D0 SWAP5 PUSH2 0x28DF SWAP9 SUB PUSH2 0x28E5 JUMPI JUMPDEST POP POP POP PUSH2 0x2823 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x290F PUSH2 0x2909 SWAP2 PUSH2 0x28F9 PUSH2 0x291F SWAP5 DUP8 PUSH2 0x2777 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP2 DUP8 PUSH2 0x2777 JUMP JUMPDEST SWAP1 PUSH2 0x278F JUMP JUMPDEST DUP6 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x28C8 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x2968 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x29C8 JUMPI JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP1 PUSH1 0x20 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP4 KECCAK256 SLOAD SWAP5 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP7 AND ISZERO PUSH2 0x2A08 JUMPI POP POP POP PUSH2 0x299E JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 JUMPDEST DUP6 ISZERO PUSH2 0x2A1C JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD DUP1 DUP4 MSTORE DUP2 DUP6 MSTORE DUP4 DUP4 KECCAK256 SLOAD SWAP6 POP PUSH2 0x2A0E JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 LT SWAP1 DUP2 PUSH2 0x2A40 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2A7D DUP4 PUSH2 0x2992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 DUP3 DUP5 AND SUB PUSH2 0x2CCA JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 PUSH2 0x2ADB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP5 EQ OR ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2C3B JUMPI JUMPDEST DUP3 AND SWAP6 DUP7 ISZERO PUSH2 0x2C11 JUMPI PUSH2 0x2B4B SWAP4 PUSH2 0x2B1D SWAP3 PUSH2 0x2C07 JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0x2B8C DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0x2BBD JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x2BD5 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x2BE2 JUMPI JUMPDEST POP PUSH2 0x2B95 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x2BDC JUMPI PUSH2 0x2BFF SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x2BDC JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x2AF6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x2C9B PUSH2 0x2AD7 PUSH2 0x2C94 CALLER PUSH2 0x2C6F DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2AE0 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x2D02 DUP3 DUP3 DUP7 PUSH2 0x2A73 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x2D0F JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2D18 SWAP4 PUSH2 0x2DD1 JUMP JUMPDEST ISZERO PUSH2 0x2D26 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x296 JUMPI MLOAD PUSH2 0x584 DUP2 PUSH2 0x26C JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x584 SWAP5 SWAP4 PUSH1 0x80 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x54E JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2DCC JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2DB2 DUP3 PUSH2 0xF30 JUMP JUMPDEST SWAP2 PUSH2 0x2DC0 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEFE JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP2 PUSH2 0x2E28 SWAP4 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP7 DUP3 SWAP6 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP12 DUP13 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0x2D65 JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2EA0 JUMPI JUMPDEST POP PUSH2 0x2E7A JUMPI PUSH2 0x2E43 PUSH2 0x2DA1 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x2E75 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x2EC2 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2EC9 JUMPI JUMPDEST PUSH2 0x2EBA DUP2 DUP4 PUSH2 0xEFE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2D50 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2E36 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x0 NOT PUSH1 0x80 DUP3 ADD SWAP4 PUSH1 0x0 DUP6 MSTORE SWAP4 JUMPDEST ADD SWAP3 PUSH1 0xA SWAP1 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x2F07 JUMPI PUSH1 0x0 NOT SWAP1 PUSH2 0x2EE9 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP4 PUSH1 0x1F NOT SWAP3 SUB ADD SWAP3 ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x2F57 PUSH2 0x2F19 JUMP JUMPDEST POP PUSH2 0x2F60 PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP3 LT ISZERO PUSH2 0x2F98 JUMPI POP PUSH2 0x2F74 DUP2 PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x2F98 JUMPI POP PUSH2 0x2F93 PUSH2 0x584 SWAP2 PUSH2 0x2F8D PUSH2 0x2F19 JUMP JUMPDEST POP PUSH2 0x2992 JUMP JUMPDEST PUSH2 0x2FB8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2FA5 PUSH2 0x2F19 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x584 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD JUMPDEST SWAP1 PUSH2 0x2FC1 PUSH2 0x2F19 JUMP JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0x20 DUP5 ADD MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xE8 SHR PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x303C DUP3 PUSH2 0x1B3A JUMP JUMPDEST SWAP2 PUSH2 0x304A PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEFE JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x3059 DUP3 PUSH2 0x1B3A JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x30AC JUMPI POP POP PUSH1 0x0 JUMPDEST DUP2 DUP2 SUB PUSH2 0x3076 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F71 JUMPI DUP1 PUSH2 0x3090 PUSH1 0x1 SWAP3 PUSH1 0x5 SHL DUP6 ADD CALLDATALOAD PUSH2 0x2F4F JUMP JUMPDEST PUSH2 0x309A DUP3 DUP8 PUSH2 0x301F JUMP JUMPDEST MSTORE PUSH2 0x30A5 DUP2 DUP7 PUSH2 0x301F JUMP JUMPDEST POP ADD PUSH2 0x3069 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x30B7 PUSH2 0x2F19 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x305D JUMP JUMPDEST SWAP1 PUSH2 0x30CD DUP3 PUSH2 0x1B3A JUMP JUMPDEST PUSH2 0x30DA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xEFE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x1F NOT PUSH2 0x30EA DUP3 SWAP5 PUSH2 0x1B3A JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 DUP3 DUP2 LT ISZERO PUSH2 0x322F JUMPI PUSH1 0x0 SWAP2 DUP3 SLOAD DUP1 DUP6 GT PUSH2 0x3227 JUMPI JUMPDEST POP PUSH2 0x3114 DUP2 PUSH2 0x2931 JUMP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x3220 JUMPI DUP3 DUP6 SUB DUP2 DUP2 LT PUSH2 0x3218 JUMPI JUMPDEST POP JUMPDEST PUSH2 0x3132 DUP2 PUSH2 0x30C3 JUMP JUMPDEST SWAP6 DUP2 ISZERO PUSH2 0x3210 JUMPI PUSH2 0x3142 DUP5 PUSH2 0x2F4F JUMP JUMPDEST SWAP2 DUP6 SWAP5 PUSH1 0x40 SWAP4 PUSH2 0x3157 PUSH2 0x2AD7 DUP7 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x31F1 JUMPI JUMPDEST POP JUMPDEST DUP8 DUP2 EQ ISZERO DUP1 PUSH2 0x31E7 JUMPI JUMPDEST ISZERO PUSH2 0x31DA JUMPI PUSH2 0x3176 DUP2 PUSH2 0x2F9D JUMP JUMPDEST DUP1 DUP6 ADD MLOAD PUSH2 0x31D1 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP1 PUSH2 0x31C8 JUMPI JUMPDEST POP SWAP1 DUP2 PUSH1 0x1 SWAP3 DUP8 AND SWAP1 DUP9 AND EQ PUSH2 0x31B4 JUMPI JUMPDEST ADD PUSH2 0x315E JUMP JUMPDEST DUP1 PUSH2 0x31C2 DUP4 DUP11 ADD SWAP10 DUP13 PUSH2 0x301F JUMP JUMPDEST MSTORE PUSH2 0x31AE JUMP JUMPDEST SWAP7 POP PUSH1 0x1 PUSH2 0x319D JUMP JUMPDEST POP PUSH1 0x1 SWAP1 PUSH2 0x31AE JUMP JUMPDEST POP POP SWAP6 SWAP5 POP POP POP POP DUP2 MSTORE SWAP1 JUMP JUMPDEST POP DUP2 DUP8 EQ ISZERO PUSH2 0x3168 JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP6 POP CODESIZE PUSH2 0x315C JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x3127 JUMP JUMPDEST POP DUP3 PUSH2 0x3129 JUMP JUMPDEST SWAP4 POP CODESIZE PUSH2 0x310A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x32C1995A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x32A2 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3273 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3268 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x32B8 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3313 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3308 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x32FC JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3329 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xC DUP3 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3384 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3379 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x336D JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3364 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x339A JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x33F5 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x33EA JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x33DE JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x33D5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x340B JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xE DUP3 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3466 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x345B JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x344F JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3446 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x3496 DUP2 PUSH2 0x3491 PUSH1 0xE SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x34D1 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x34C6 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x34B0 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x3504 PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3541 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x3528 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x351D JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x3509 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x357A DUP2 PUSH2 0x1296 PUSH1 0xC SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x35B5 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x35AA JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xC SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3594 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x35E8 PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3625 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x360C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xC SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3601 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x35ED JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x365E DUP2 PUSH2 0x1557 PUSH1 0xF SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3699 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x368E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3678 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x36CC PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3709 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x36F0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x36E5 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x372A DUP2 PUSH2 0x2992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3758 DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x3780 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP7 EQ OR ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x38B9 JUMPI JUMPDEST PUSH1 0x0 SWAP4 PUSH2 0x38B0 JUMPI JUMPDEST POP PUSH2 0x37B8 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD ADD SWAP1 SSTORE PUSH29 0x300000000000000000000000000000000000000000000000000000000 TIMESTAMP PUSH1 0xA0 SHL DUP4 OR OR PUSH2 0x3807 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0x3867 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP3 DUP1 LOG4 PUSH2 0xF2E PUSH2 0x3862 PUSH1 0x1 SLOAD PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x387F DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x388C JUMPI JUMPDEST POP PUSH2 0x382E JUMP JUMPDEST DUP4 SLOAD DUP2 EQ PUSH2 0x3886 JUMPI PUSH2 0x38A8 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x3886 JUMP JUMPDEST DUP4 SWAP1 SSTORE CODESIZE PUSH2 0x378D JUMP JUMPDEST PUSH2 0x38ED PUSH2 0x2AD7 PUSH2 0x2C94 CALLER PUSH2 0x2C6F DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3785 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x392E JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x3941 PUSH2 0x393B DUP3 DUP5 PUSH2 0x301F JUMP JUMPDEST MLOAD PUSH2 0x3721 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x23F0 JUMPI PUSH1 0x1 ADD PUSH2 0x3922 JUMP JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x3B0E JUMPI JUMPDEST PUSH2 0x3AE4 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xEDD JUMPI PUSH2 0x39BE DUP3 PUSH2 0x100A PUSH1 0xD SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x3A61 JUMPI POP SWAP4 PUSH2 0x3A07 PUSH2 0x3A11 SWAP5 DUP5 PUSH2 0x3A31 SWAP12 SWAP11 SWAP9 SWAP6 PUSH2 0x3A0C SWAP6 PUSH2 0x3A2C SWAP12 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x1045 JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE PUSH2 0x3470 JUMP JUMPDEST PUSH2 0x3559 JUMP JUMPDEST PUSH2 0x363D JUMP JUMPDEST PUSH2 0x3A1A DUP5 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0x3A23 DUP5 PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x524 DUP5 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0x2210 JUMP JUMPDEST PUSH2 0xF2E PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x10 SLOAD AND OR PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3ACC JUMPI POP POP SWAP5 PUSH1 0x1 DUP6 PUSH2 0x3A0C SWAP6 PUSH2 0x3A2C SWAP12 SWAP10 SWAP6 PUSH2 0x3A07 SWAP6 PUSH2 0x3A31 SWAP16 SWAP15 SWAP13 SWAP10 PUSH2 0x3A11 SWAP12 LT PUSH2 0x10AA JUMPI POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE PUSH2 0x3470 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x3A93 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x10 SLOAD AND PUSH2 0x3999 JUMP JUMPDEST ISZERO PUSH2 0x3B21 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20726F79616C7479206665652077696C6C20657863656564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2073616C65507269636500000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH2 0x3BD8 PUSH2 0x2710 DUP5 GT ISZERO PUSH2 0x3B1A JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x3C1F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3C10 DUP2 PUSH2 0xEC1 JUMP JUMPDEST DUP6 DUP2 MSTORE ADD MSTORE PUSH1 0xA0 SHL AND OR PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20696E76616C696420726563656976657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x3C86 DUP2 PUSH2 0x3D6C JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3CD4 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3CA9 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3C9F JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x584 SWAP2 POP PUSH2 0x3CE5 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO SWAP2 POP PUSH2 0x3C95 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CDF DUP2 PUSH2 0x3CE5 JUMP JUMPDEST SWAP1 PUSH2 0x3C8E JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SWAP1 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x3D38 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x3D66 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x584 SWAP2 POP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3DBC JUMPI POP SWAP1 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB ADDMOD 0xCB POP SWAP9 0xB1 0x22 DUP8 SWAP4 PUSH20 0xFC1576CBEB220975504B788E70CCCC47BB354EAB 0xCF JUMPI PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "392:2218:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;:::i;:::-;;;;2505:54;:39;:54;:94;;;;;392:2218;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;;;;2505:94;3995:26:32;3980:41;;;-1:-1:-1;3980:41:32;:95;;;;2505:94:33;3980:150:32;;;;2505:94:33;3980:202:32;;;;;2505:94:33;3980:255:32;;;;2505:94:33;;;;;;3980:255:32;4199:36;;;;:::i;:::-;3980:255;;;:202;4134:48;;;;;:::i;:::-;3980:202;;;:150;9558:25:23;;;392:2218:33;9558:25:23;;:101;;;;;3980:150:32;9558:177:23;;;;3980:150:32;;;;;;9558:177:23;392:2218:33;9710:25:23;;;9558:177;;;:101;392:2218:33;9634:25:23;;;-1:-1:-1;9558:101:23;;3980:95:32;4040:35;4025:50;;;-1:-1:-1;3980:95:32;;392:2218:33;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;392:2218:33;;;;;;;:::i;:::-;;;;;;;;;;1059:12:37;2642:4:0;;;:::i;:::-;1059:12:37;:::i;:::-;392:2218:33;;;;;;;;;-1:-1:-1;;392:2218:33;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;4635:10:32;392:2218:33;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;4635:10:32;392:2218:33;;;;;;;;;-1:-1:-1;;;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;16460:16:23;;;:::i;:::-;16459:17;16455:64;;-1:-1:-1;392:2218:33;16537:15:23;392:2218:33;;;;;-1:-1:-1;392:2218:33;;;;;;;;;16455:64:23;392:2218:33;;;16485:34:23;;;;392:2218:33;;-1:-1:-1;;392:2218:33;;;;;;;:::i;:::-;;;;11505:27:23;;;;:::i;:::-;392:2218:33;719:10:14;;;15947:28:23;15943:172;;392:2218:33;-1:-1:-1;392:2218:33;;;16125:15:23;392:2218:33;;;;;;;;;;;;;;;-1:-1:-1;392:2218:33;16175:28:23;;;;;392:2218:33;;15943:172:23;392:2218:33;-1:-1:-1;392:2218:33;17402:18:23;392:2218:33;;;17402:35:23;719:10:14;392:2218:33;-1:-1:-1;392:2218:33;;;;;;;;;;;;;17402:35:23;392:2218:33;;15943:172:23;15989:126;392:2218:33;;;16065:35:23;;;;392:2218:33;;;;;-1:-1:-1;;392:2218:33;;;;;;;;6164:12:23;392:2218:33;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;392:2218:33;;;;;;;-1:-1:-1;392:2218:33;4604:6:0;392:2218:33;;;4604:22:0;392:2218:33;-1:-1:-1;392:2218:33;4604:22:0;392:2218:33;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;-1:-1:-1;392:2218:33;1823:17:12;392:2218:33;;;-1:-1:-1;392:2218:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1864:30:12;;1860:90;;392:2218:33;;2457:5:12;1985:35;392:2218:33;;1997:23:12;;392:2218:33;;;;1985:35:12;:::i;:::-;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;1860:90:12;392:2218:33;;;:::i;:::-;1860:90:12;;392:2218:33;;;;;-1:-1:-1;;392:2218:33;;;;;;;8398:50:22;392:2218:33;;:::i;:::-;;2106:18:1;-1:-1:-1;392:2218:33;;;;4604:6:0;392:2218:33;;2642:4:0;4604:22;392:2218:33;;;4604:22:0;392:2218:33;2642:4:0;:::i;:::-;392:2218:33;;;4604:6:0;392:2218:33;;;3130:29:0;392:2218:33;;;;;;;;;;;;;;;;3130:29:0;392:2218:33;;7669:23:0;7665:149;;392:2218:33;;2106:12:1;392:2218:33;;;;;;;2106:18:1;392:2218:33;;8398:50:22;;:::i;:::-;;392:2218:33;;7665:149:0;392:2218:33;;;4604:6:0;392:2218:33;;7708:29:0;392:2218:33;;;;;;;;;;;;;;;;7708:29:0;4604:22;392:2218:33;;;;;;;719:10:14;392:2218:33;;;7763:40:0;;;;;392:2218:33;;2106:12:1;392:2218:33;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;:::i;:::-;719:10:14;392:2218:33;;;6133:23:0;392:2218:33;;6237:7:0;392:2218:33;;;6237:7:0;:::i;392:2218:33:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;:::i;:::-;;;2642:4:0;;;:::i;:::-;-1:-1:-1;392:2218:33;;;27213:13:23;;;27209:44;;27728:22;;392:2218:33;;;;27728:18:23;392:2218:33;;;;;;;27728:22:23;27766:32;1495:2;;392:2218:33;;2392:8:23;392:2218:33;;14403:331:23;27767:1;14403:331;;14998:151;;;;;;14403:331;;;;;;28035:31;;392:2218:33;;;;;;;;;;28035:31:23;392:2218:33;2392:8:23;;28648:1166;;;;;;;;;;;;;;;;;;29831:13;;;;29827:45;;392:2218:33;;;;29827:45:23;392:2218:33;;;29853:19:23;;;;28648:1166;;;;;;;;;;;;;27209:44;392:2218:33;;;27235:18:23;;;;392:2218:33;22899:39:23;392:2218:33;;;:::i;:::-;;;;;;;;:::i;:::-;;;;22899:39:23;:::i;392:2218:33:-;;;;;-1:-1:-1;;392:2218:33;;;;;2968:4:32;392:2218:33;;2968:4:32;:::i;392:2218:33:-;;;;;-1:-1:-1;;392:2218:33;;;;;;;:::i;:::-;;;:::i;:::-;2642:4:0;;;:::i;:::-;3600:88:12;2457:5;392:2218:33;;;3608:33:12;;3600:88;:::i;:::-;392:2218:33;;;3706:22:12;392:2218:33;;3800:35:12;392:2218:33;;3800:35:12;392:2218:33;;:::i;:::-;;;;;;;;3800:35:12;392:2218:33;;;3800:35:12;;392:2218:33;;3800:35:12;3771:26;392:2218:33;;;;3771:17:12;392:2218:33;;;;;;;3771:26:12;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;-1:-1:-1;;392:2218:33;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;2642:4:0;;;:::i;:::-;392:2218:33;;;;;;;;;;2041:22:32;392:2218:33;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;-1:-1:-1;;392:2218:33;;;;;;278:18:17;392:2218:33;;;2041:22:32;392:2218:33;;:::i;:::-;;;;-1:-1:-1;392:2218:33;;;;;2041:22:32;392:2218:33;;;;-1:-1:-1;;392:2218:33;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;2041:22:32;392:2218:33;;:::i;:::-;;;-1:-1:-1;;392:2218:33;;;;;278:18:17;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;392:2218:33;;;;;;;11505:27:23;392:2218:33;;11505:27:23;:::i;:::-;392:2218:33;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;2642:4:0;;:::i;:::-;392:2218:33;;;;;;;;;;2340:28:32;392:2218:33;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;278:18:17;392:2218:33;;;2340:28:32;392:2218:33;;;;;;;;-1:-1:-1;392:2218:33;;;;;;-1:-1:-1;;392:2218:33;;;;2340:28:32;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;392:2218:33;;;2340:28:32;392:2218:33;;;;;-1:-1:-1;;392:2218:33;;;;;278:18:17;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;:::i;:::-;-1:-1:-1;5580:25:25;5644:16;;;:::i;:::-;5702:29;;;;:::i;:::-;392:2218:33;;;:::i;:::-;-1:-1:-1;392:2218:33;;;;;5795:27:25;5824:29;;;;;;5927:16;392:2218:33;;;;;;:::i;5855:3:25:-;5890:15;;;:::i;:::-;5927:16;;;392:2218:33;5923:71:25;;392:2218:33;;;;;;6011:109:25;;5855:3;392:2218:33;;;;;;;6141:26:25;6137:100;;5855:3;392:2218:33;5795:27:25;;6137:100;6200:13;6191:27;6200:13;;392:2218:33;6191:27:25;;;:::i;:::-;392:2218:33;6137:100:25;;6011:109;;-1:-1:-1;392:2218:33;6011:109:25;;5923:71;5967:8;392:2218:33;5967:8:25;;;392:2218:33;;;;;-1:-1:-1;;392:2218:33;;;;;;;-1:-1:-1;392:2218:33;1547:12:1;392:2218:33;;;;5005:18:22;392:2218:33;;;-1:-1:-1;392:2218:33;5005:18:22;:::i;:::-;392:2218:33;;;;;;;;278:18:17;392:2218:33;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;3130:29:0;392:2218:33;;:::i;:::-;;;-1:-1:-1;392:2218:33;3130:6:0;392:2218:33;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;3130:29:0;392:2218:33;;;;;;;;;;;;;;;;;:::i;:::-;2642:4:0;;:::i;:::-;392:2218:33;;;;;;;;;;2698:31:32;392:2218:33;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;278:18:17;392:2218:33;;;2698:31:32;392:2218:33;;;;;;;;-1:-1:-1;392:2218:33;;;;;;-1:-1:-1;;392:2218:33;;;;2698:31:32;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;392:2218:33;;;2698:31:32;392:2218:33;;;;;-1:-1:-1;;392:2218:33;;;;;278:18:17;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;4826:12:32;392:2218:33;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;4826:12:32;392:2218:33;;;;;;;;;-1:-1:-1;;;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;:::i;:::-;;;;;;;;;;;;;719:10:14;;-1:-1:-1;392:2218:33;16995:18:23;392:2218:33;;16995:49:23;392:2218:33;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;16995:49:23;392:2218:33;;;;;;;;;;;;;;;;719:10:14;17070:55:23;392:2218:33;719:10:14;17070:55:23;;392:2218:33;;;-1:-1:-1;;392:2218:33;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;10514:16:23;;;:::i;:::-;10513:17;10509:59;;392:2218:33;;;;;-1:-1:-1;4445:13:32;392:2218:33;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;10630:26:23;:87;;392:2218:33;10692:18:23;392:2218:33;10692:18:23;10666:45;10692:18;;:::i;:::-;392:2218:33;;;10666:45:23;;;;;392:2218:33;;:::i;:::-;;;:::i;:::-;10666:45:23;-1:-1:-1;;10666:45:23;;;;;;:::i;10630:87::-;392:2218:33;;;;;;:::i;:::-;10630:87:23;;392:2218:33;;;;;4445:13:32;-1:-1:-1;392:2218:33;;;-1:-1:-1;392:2218:33;;;;;;;-1:-1:-1;392:2218:33;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10509:59:23;392:2218:33;;;10539:29:23;;;;392:2218:33;;;;;-1:-1:-1;;392:2218:33;;;;;;;-1:-1:-1;392:2218:33;1856:12:1;392:2218:33;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;5486:7:0;392:2218:33;;;;:::i;:::-;;;-1:-1:-1;392:2218:33;4604:6:0;392:2218:33;;2642:4:0;4604:22;392:2218:33;-1:-1:-1;392:2218:33;4604:22:0;392:2218:33;2642:4:0;:::i;:::-;5486:7;:::i;392:2218:33:-;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;3629:12:32;392:2218:33;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;3629:12:32;392:2218:33;;;;;;;;;-1:-1:-1;;;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;17402:35:23;392:2218:33;;:::i;:::-;;;;:::i;:::-;;;-1:-1:-1;392:2218:33;17402:18:23;392:2218:33;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;3460:103:0;719:10:14;-1:-1:-1;392:2218:33;;;;;;;;;;;;3931:23:0;3927:390;;3460:103::o;3927:390::-;3970:336;392:2218:33;4022:252:0;2497:52:17;719:10:14;2497:52:17;:::i;:::-;392:2218:33;4214:38:0;;:::i;:::-;392:2218:33;;4022:252:0;;;392:2218:33;;4022:252:0;;392:2218:33;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;4022:252:0:-;392:2218:33;;3970:336:0;;;;;;;;;;:::i;:::-;;;;3460:103;719:10:14;-1:-1:-1;392:2218:33;;;;;;;;;;;;3931:23:0;3927:390;;3460:103::o;3927:390::-;3970:336;392:2218:33;4022:252:0;2497:52:17;719:10:14;2497:52:17;:::i;:::-;392:2218:33;4214:38:0;;:::i;3460:103::-;719:10:14;-1:-1:-1;392:2218:33;;;;;;;;;;;;3931:23:0;3927:390;;3460:103::o;3927:390::-;3970:336;392:2218:33;4022:252:0;2497:52:17;719:10:14;2497:52:17;:::i;:::-;392:2218:33;4214:38:0;;:::i;3460:103::-;392:2218:33;-1:-1:-1;392:2218:33;3130:6:0;392:2218:33;;;3130:29:0;719:10:14;392:2218:33;-1:-1:-1;392:2218:33;;;;;;;;;;;;;3130:29:0;392:2218:33;;3931:23:0;3927:390;;3460:103;:::o;3927:390::-;2497:52:17;719:10:14;2497:52:17;:::i;:::-;1940:25;;:::i;:::-;1975:15;;;;;:::i;:::-;;2000;;;;:::i;:::-;;392:2218:33;2058:5:17;2007:1;2058:5;;;;3970:336:0;392:2218:33;4022:252:0;2170:10:17;392:2218:33;2170:10:17;2162:55;2170:10;;2162:55;:::i;2065:3::-;2105:11;2113:3;2105:11;;2096:21;;;;;;;392:2218:33;2065:3:17;2096:21;;2084:33;;;;:::i;:::-;;392:2218:33;278:18:17;2065:3;;:::i;:::-;2030:26;;2096:21;;:::i;392:2218:33:-;;;;;;;;;;;;;:::i;:::-;;;:::o;1978:166:1:-;392:2218:33;;;;;;;;;;;;;;;;8398:50:22;;392:2218:33;;;;;7669:23:0;7665:149;;1978:166:1;392:2218:33;;;2106:12:1;392:2218:33;;;;;8398:50:22;;:::i;:::-;;1978:166:1:o;7665:149:0:-;392:2218:33;;;3130:6:0;392:2218:33;;7708:29:0;392:2218:33;;;;;;;;;;;;;;;;7708:29:0;7740:4;392:2218:33;;;;;;;719:10:14;392:2218:33;;;7763:40:0;;;;;7665:149;;1978:166:1;392:2218:33;;;;-1:-1:-1;392:2218:33;;;;;;;;;;8398:50:22;;1978:166:1;392:2218:33;-1:-1:-1;560:32:32;;392:2218:33;;3130:29:0;392:2218:33;;7669:23:0;7665:149;;1978:166:1;392:2218:33;;2106:12:1;392:2218:33;;;;;8398:50:22;;:::i;7665:149:0:-;392:2218:33;;;3130:6:0;392:2218:33;;7708:29:0;392:2218:33;;;;;;;;;;;;;;;;7708:29:0;7740:4;392:2218:33;;;;;;;719:10:14;392:2218:33;;;7763:40:0;;;;;7665:149;;1978:166:1;392:2218:33;;;;-1:-1:-1;392:2218:33;;;;;;;;;;8398:50:22;;1978:166:1;392:2218:33;-1:-1:-1;570:31:37;;392:2218:33;;3130:29:0;392:2218:33;1978:166:1;392:2218:33;;;;-1:-1:-1;392:2218:33;;;;;;;;;;8398:50:22;;1978:166:1;392:2218:33;-1:-1:-1;493:24:33;;392:2218;;3130:29:0;392:2218:33;2233:171:1;;392:2218:33;;8719:53:22;2233:171:1;-1:-1:-1;392:2218:33;;;;3130:6:0;392:2218:33;;;3130:29:0;392:2218:33;;;;;;;;;;;;;;;;3130:29:0;392:2218:33;;8070:149:0;;2233:171:1;392:2218:33;;2363:12:1;392:2218:33;;;;;8719:53:22;;:::i;8070:149:0:-;392:2218:33;;;3130:6:0;392:2218:33;;8112:29:0;392:2218:33;;;;;;;;;;;;;;;;8112:29:0;392:2218:33;;;;;;719:10:14;392:2218:33;;;8168:40:0;;;;;8070:149;;392:2218:33;;;;;;;:::i;:::-;1920:19:12;392:2218:33;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;:::i;:::-;-1:-1:-1;392:2218:33;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;2007:1:17;392:2218:33;;;;;;;:::o;:::-;;;;;;;;;;;;;:::o;:::-;;;;;-1:-1:-1;;392:2218:33;;:::o;278:18:17:-;;;;:::o;:::-;;392:2218:33;;278:18:17;;;;;;;;;;;;392:2218:33;278:18:17;392:2218:33;;;278:18:17;;1818:437;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;1975:15:17;;;;:::i;:::-;;2000;;;;:::i;:::-;;392:2218:33;2025:128:17;2058:5;2007:1;2058:5;;;;2162:55;2170:10;;;2162:55;:::i;2065:3::-;2113;2105:11;;2096:21;;;;;;;392:2218:33;2065:3:17;2096:21;;2084:33;;;;:::i;2065:3::-;2030:26;;;1818:437;570:31:37;1940:25:17;;:::i;:::-;1975:15;;;;;:::i;:::-;;2000;;;;:::i;:::-;;392:2218:33;2025:128:17;2058:5;2007:1;2058:5;;;;2162:55;2170:10;;;2162:55;:::i;2065:3::-;2113;2105:11;;2096:21;;;;;;;392:2218:33;2065:3:17;2096:21;;2084:33;;;;:::i;2065:3::-;2030:26;;;1818:437;493:24:33;1940:25:17;;:::i;:::-;1975:15;;;;;:::i;:::-;;2000;;;;:::i;:::-;;392:2218:33;2025:128:17;2058:5;2007:1;2058:5;;;;2162:55;2170:10;;;2162:55;:::i;2065:3::-;2113;2105:11;;2096:21;;;;;;;392:2218:33;2065:3:17;2096:21;;2084:33;;;;:::i;2065:3::-;2030:26;;;1818:437;560:32:32;1940:25:17;;:::i;:::-;1975:15;;;;;:::i;:::-;;2000;;;;:::i;:::-;;392:2218:33;2025:128:17;2058:5;2007:1;2058:5;;;;2162:55;2170:10;;;2162:55;:::i;2065:3::-;2113;2105:11;;2096:21;;;;;;;392:2218:33;2065:3:17;2096:21;;2084:33;;;;:::i;2065:3::-;2030:26;;;392:2218:33;;;;;;;;-1:-1:-1;392:2218:33;;-1:-1:-1;392:2218:33;;;-1:-1:-1;392:2218:33;:::o;:::-;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;:::o;2214:404:22:-;4351:12;;;392:2218:33;;-1:-1:-1;392:2218:33;;;;;-1:-1:-1;392:2218:33;;4351:24:22;2293:319;392:2218:33;;;;;;;;;;;;;;4351:12:22;392:2218:33;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;-1:-1:-1;392:2218:33;;4351:12:22;2547:11;:::o;2293:319::-;2589:12;;;-1:-1:-1;2589:12:22;:::o;392:2218:33:-;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;2786:1388:22;2989:12;;;392:2218:33;;-1:-1:-1;392:2218:33;;;;;-1:-1:-1;392:2218:33;;3023:15:22;;;;3019:1149;3023:15;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3505:26:22;;;3977:15;3505:26;4069:19;3505:26;;3501:398;;3019:1149;3977:15;;;;:::i;:::-;392:2218:33;;;;;;;;;;4069:19:22;392:2218:33;2989:12:22;4103:11;:::o;3501:398::-;3693:38;:26;3571:22;;3805:23;3571:22;;;:::i;:::-;392:2218:33;;;;;278:18:17;3693:26:22;;;;;:::i;:::-;:38;;:::i;:::-;3805:23;392:2218:33;;;;;;;;;;3805:23:22;392:2218:33;3501:398:22;;;;;3019:1149;4145:12;;;;-1:-1:-1;4145:12:22;:::o;7045:230:23:-;392:2218:33;;7140:19:23;;7136:60;;7157:1;392:2218:33;7213:18:23;392:2218:33;;1360:13:23;392:2218:33;7157:1:23;392:2218:33;;7213:55:23;7045:230;:::o;7136:60::-;7168:28;392:2218:33;;7168:28:23;;;;12515:1249;392:2218:33;12601:22:23;392:2218:33;;12707:20:23;;12703:997;;12515:1249;13726:31;392:2218:33;;13726:31:23;;;;12703:997;392:2218:33;;12768:17:23;392:2218:33;;;;;;;;;;;;12855:24:23;2118:8;12855:24;;:29;12851:831;;12703:997;;;;;12851:831;13510:111;;;;;13517:11;;;;;13646:13;;;;;;:::o;13510:111::-;-1:-1:-1;;2118:8:23;392:2218:33;;;;;;;;;;;-1:-1:-1;13510:111:23;;17693:277;5508:1;392:2218:33;17835:23:23;;17793:151;;;;17774:170;17693:277;:::o;17793:151::-;392:2218:33;;5508:1:23;392:2218:33;17895:17:23;392:2218:33;;2118:8:23;392:2218:33;5508:1:23;392:2218:33;;17895:44:23;:49;17693:277;:::o;19903:2764::-;;20070:27;;;:::i;:::-;392:2218:33;;;;;;;;;20112:45:23;20108:86;;-1:-1:-1;392:2218:33;;;19036:15:23;392:2218:33;;;;;19164:132:23;;719:10:14;;20393:69:23;18242:472;;;719:10:14;18242:472:23;;;;;;;20393:69;;392:2218:33;20394:68:23;20393:69;;392:2218:33;20393:69:23;20389:179;;19903:2764;392:2218:33;;20583:16:23;;;20579:52;;21368:22;20748:190;21300:24;20748:190;;;19903:2764;21300:24;392:2218:33;;;;27728:18:23;392:2218:33;;;;;;;21300:24:23;392:2218:33;;-1:-1:-1;;2118:8:23;392:2218:33;;;;;;27728:18:23;392:2218:33;;;;;;;21368:22:23;392:2218:33;;;;;;21739:73:23;14403:331;;;;;;;21654:26;;392:2218:33;;;;;;;;;;21654:26:23;392:2218:33;21943:47:23;;:52;21939:617;;19903:2764;22581:27;;-1:-1:-1;22581:27:23;;19903:2764::o;21939:617::-;22047:1;2392:8;;22168:30;;392:2218:33;;;;;;;;;;22168:30:23;392:2218:33;22168:35:23;22164:378;;21939:617;;;;22164:378;-1:-1:-1;392:2218:33;22285:239:23;;22164:378;22285:239;22449:30;;392:2218:33;;;;;;;;;;22449:30:23;392:2218:33;22285:239:23;;22164:378;;20748:190;20597:1;20748:190;;;;;20579:52;20608:23;392:2218:33;;20608:23:23;;;;20389:179;20480:44;17402:35;;719:10:14;17402:25:23;;392:2218:33;;;;17402:18:23;392:2218:33;;;;;;;17402:25:23;392:2218:33;;;;;;;;;;;;17402:35:23;392:2218:33;;;;;20480:44:23;20476:92;20389:179;20476:92;20533:35;392:2218:33;;20533:35:23;;;;20108:86;20166:28;392:2218:33;;20166:28:23;;;;23526:396;;;;23718:7;;;;;:::i;:::-;23740:14;;23736:180;;23526:396;;;;;:::o;23736:180::-;23778:56;;;:::i;:::-;23777:57;23773:143;;23736:180;;;;;;23773:143;23861:40;392:2218:33;;23861:40:23;;;;392:2218:33;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;392:2218:33;;;;:::o;:::-;;;:::o;25948:697:23:-;;26126:88;25948:697;26126:88;25948:697;392:2218:33;;;;;;;;;;;26126:88:23;;;;719:10:14;26126:88:23;;;;:::i;:::-;;392:2218:33;;26126:88:23;;392:2218:33;;26126:88:23;;;25948:697;-1:-1:-1;26122:517:23;;26358:281;;:::i;:::-;392:2218:33;;;26404:18:23;;;26126:88;392:2218:33;;26449:40:23;;;;26400:229;26126:88;26528:87;;26122:517;392:2218:33;;26282:64:23;26275:71;:::o;26126:88::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;39637:1708;;39731:1608;;;;;;;-1:-1:-1;;39731:1608:23;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;39731:1608:23;;;;;;;;-1:-1:-1;;39731:1608:23;;;;;;;;39637:1708::o;392:2218:33:-;;;;;;;;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;;;;;:::o;1070:418:25:-;392:2218:33;;:::i;:::-;;;;:::i;:::-;5508:1:23;392:2218:33;1261:25:25;;;1228:101;;1350:21;;;;:::i;:::-;1385:16;;;392:2218:33;1381:63:25;;392:2218:33;11853:27:23;11834:47;392:2218:33;;;:::i;:::-;;11853:27:23;:::i;:::-;11834:47;:::i;1381:63:25:-;1417:16;;;:::o;11979:159:23:-;392:2218:33;;:::i;:::-;;-1:-1:-1;392:2218:33;12106:17:23;392:2218:33;;12087:44:23;392:2218:33;-1:-1:-1;392:2218:33;;13858:361:23;;392:2218:33;;:::i;:::-;;;;;;;;278:18:17;2004:3:23;278:18:17;392:2218:33;14018:24:23;;;2004:3;2118:8;14115:24;;:29;;14096:16;;;2004:3;2513;278:18:17;14154:19:23;;;2004:3;13858:361::o;392:2218:33:-;;;;;;;;;;;;;;;:::o;1641:513:25:-;392:2218:33;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;;392:2218:33;;;:::i;:::-;;-1:-1:-1;392:2218:33;;;;;;1989:9:25;;-1:-1:-1;2000:19:25;;;;;;2120:17;;;1641:513;:::o;2021:3::-;392:2218:33;;;;;;;2060:32:25;392:2218:33;;;;;;;2060:32:25;:::i;:::-;2044:48;;;;:::i;:::-;;;;;;:::i;:::-;;392:2218:33;1989:9:25;;392:2218:33;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;-1:-1:-1;;392:2218:33;;;;:::i;:::-;;;;;;;;:::o;2528:2454:25:-;;2723:13;;;;2719:45;;-1:-1:-1;392:2218:33;;;3069:16:25;;;3065:71;;2528:2454;3177:16;;;;:::i;:::-;3360:12;;;;;;392:2218:33;;;3448:31:25;;;3444:109;;3356:271;;;3668:32;;;:::i;:::-;3718:22;;;3714:76;;3965:26;;;:::i;:::-;4005:25;;4247:16;;;4246:17;392:2218:33;4247:16:25;;;392:2218:33;;;;;4246:17:25;4242:90;;3356:271;4350:17;4416:3;4369:9;;;;:45;;;4416:3;4369:45;;;4451:15;;;:::i;:::-;4488:16;;;392:2218:33;4484:71:25;;392:2218:33;;;;;;4572:109:25;;4416:3;392:2218:33;;;;;;;;;;4702:26:25;4698:100;;4416:3;392:2218:33;4350:17:25;;4698:100;4761:13;4752:27;4761:13;;392:2218:33;4752:27:25;;;:::i;:::-;392:2218:33;4698:100:25;;4572:109;;-1:-1:-1;392:2218:33;4572:109:25;;4484:71;4528:8;392:2218:33;4528:8:25;;;4369:45;;;;;;;;;4867:70;;2528:2454;:::o;4369:45::-;4382:32;;;;;4369:45;;4242:90;392:2218:33;;;;-1:-1:-1;4242:90:25;;;3714:76;3760:15;-1:-1:-1;;;;;3760:15:25:o;3444:109::-;3503:31;;3444:109;;;3356:271;3591:21;;3356:271;;3065:71;3105:16;-1:-1:-1;3065:71:25;;;2719:45;2745:19;392:2218:33;;2745:19:25;;;;392:2218:33;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;392:2218:33;2041:22:32;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;:::o;:::-;-1:-1:-1;392:2218:33;2340:28:32;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;:::o;:::-;-1:-1:-1;392:2218:33;2698:31:32;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;:::o;:::-;-1:-1:-1;392:2218:33;2074:26:32;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;392:2218:33;;;;;;;;;;;;;;;;2074:26:32;392:2218:33;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;278:18:17;392:2218:33;;;2074:26:32;392:2218:33;:::o;:::-;;;;-1:-1:-1;392:2218:33;;;;;;-1:-1:-1;;392:2218:33;;;;2074:26:32;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:26:32;392:2218:33;:::o;:::-;;;-1:-1:-1;;392:2218:33;;;;;278:18:17;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1482:28:32;392:2218:33;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;278:18:17;392:2218:33;;;1482:28:32;392:2218:33;:::o;:::-;;;;-1:-1:-1;392:2218:33;;;;;;-1:-1:-1;;392:2218:33;;;;2340:28:32;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1482:28:32;392:2218:33;:::o;:::-;;;-1:-1:-1;;392:2218:33;;;;;278:18:17;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1521:31:32;392:2218:33;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;278:18:17;392:2218:33;;;1521:31:32;392:2218:33;:::o;:::-;;;;-1:-1:-1;392:2218:33;;;;;;-1:-1:-1;;392:2218:33;;;;2698:31:32;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1521:31:32;392:2218:33;:::o;:::-;;;-1:-1:-1;;392:2218:33;;;;;278:18:17;392:2218:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34095:3015:23;34204:27;;;:::i;:::-;392:2218:33;;;34362:35:23;;-1:-1:-1;392:2218:33;19036:15:23;392:2218:33;;;-1:-1:-1;392:2218:33;19164:132:23;;;18828:474;;34362:35;719:10:14;;34530:69:23;18242:472;;;719:10:14;18242:472:23;;;;;;;20393:69;;392:2218:33;34530:69:23;34526:183;;34095:3015;392:2218:33;34844:190:23;;;34095:3015;35613:24;;;392:2218:33;;;;27728:18:23;392:2218:33;;;;;;;35613:24:23;392:2218:33;;;2392:8:23;392:2218:33;;35991:101:23;14403:331;;;;;;35904:26;;392:2218:33;;;;;;;;;;35904:26:23;392:2218:33;2392:8:23;36223:47;;:52;36219:617;;34095:3015;36861:35;;;;;37079:14;;2968:4:32;392:2218:33;;;;;37079:14:23;35642:1;392:2218:33;;36219:617:23;2968:4:32;2392:8:23;;36448:30;;392:2218:33;;;;;;;;;;36448:30:23;392:2218:33;36448:35:23;36444:378;;36219:617;;;;36444:378;392:2218:33;;36565:239:23;;36444:378;36565:239;36729:30;;392:2218:33;;;;;;;;;;36729:30:23;392:2218:33;36565:239:23;;36444:378;;34844:190;;;;;;;34526:183;34621:44;17402:35;;719:10:14;17402:25:23;;392:2218:33;;;;17402:18:23;392:2218:33;;;;;;;34621:44:23;34617:92;34526:183;34617:92;34674:35;392:2218:33;;34674:35:23;;;;3119:208:32;392:2218:33;;3238:13:32;3250:1;3253:9;;;;;;3119:208;;;:::o;3264:3::-;3303:4;3290:11;;;;:::i;:::-;392:2218:33;3303:4:32;:::i;:::-;-1:-1:-1;;392:2218:33;;;;;;3238:13:32;;1272:676:33;;;;;;;392:2218;1609:12;392:2218;1595:10;:26;;;:42;;;1272:676;1591:105;;392:2218;;;;;;;;;;;1412:22:32;392:2218:33;;:::i;:::-;;;;;;;;;;;;;;;;;1902:5;392:2218;;;;;;1845:19;392:2218;;;;;;;;-1:-1:-1;;392:2218:33;;;;;;278:18:17;392:2218:33;;;1412:22:32;392:2218:33;;:::i;:::-;;:::i;:::-;;:::i;:::-;1596:5:32;;;:::i;:::-;1645;;;:::i;:::-;1693;;;:::i;1845:19:33:-;1902:5;:::i;:::-;1921:19;1936:4;392:2218;1921:19;392:2218;;;1921:19;392:2218;;;2041:22:32;392:2218:33;;;;-1:-1:-1;;392:2218:33;;;;;;;;;;;;;;;;;;;1845:19;392:2218;;;;;1902:5;392:2218;;;;;;;;;;;;;;;1412:22:32;392:2218:33;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1591:105;1661:23;392:2218;;1661:23;;;;1595:42;392:2218;;1625:12;392:2218;;1595:42;;392:2218;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;2730:327:12;392:2218:33;;;;2832:33:12;2824:88;2457:5;2832:33;;;2824:88;:::i;:::-;392:2218:33;2930:22:12;;;392:2218:33;;;;3015:35:12;392:2218:33;;;;;:::i;:::-;;;;3015:35:12;392:2218:33;;;;;2993:57:12;392:2218:33;2730:327:12:o;392:2218:33:-;;;;;;;;;;;;;;;;;;;;;;;1888:406:37;2082:38;;;:::i;:::-;:96;;;;;1888:406;2082:164;;;;1888:406;2082:204;;;;2075:211;1888:406;:::o;2082:204::-;2250:36;;;;:::i;2082:164::-;392:2218:33;;;2195:51:37;;-1:-1:-1;2082:164:37;;:96;2124:54;;;;;:::i;:::-;2082:96;;;634:212:1;392:2218:33;;;742:57:1;757:42;742:57;;:97;;;;;735:104;;634:212;:::o;742:97::-;2855:32:0;2840:47;;-1:-1:-1;2840:87:0;;;;742:97:1;634:212;:::o;2840:87:0:-;2891:36;;;1408:213:12;392:2218:33;;1548:26:12;1533:41;;:81;;;;;1526:88;1408:213;:::o;1533:81::-;952:25:18;937:40;;;1408:213:12;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidQueryRange\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"batchBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"explicitOwnershipOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"explicitOwnershipsOf\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint64\",\"name\":\"startTimestamp\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"burned\",\"type\":\"bool\"},{\"internalType\":\"uint24\",\"name\":\"extraData\",\"type\":\"uint24\"}],\"internalType\":\"struct IERC721A.TokenOwnership[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenBaseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenContractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyFeeNumerator\",\"type\":\"uint96\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenBaseURI\",\"type\":\"string\"}],\"name\":\"setBaseMetadataURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenContractURI\",\"type\":\"string\"}],\"name\":\"setContractURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"name\":\"setNameAndSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setTokenRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"name\":\"tokensOfOwnerIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"batchBurn(uint256[])\":{\"params\":{\"tokenIds\":\"Array of token ids to burn\"}},\"burn(uint256)\":{\"params\":{\"tokenId\":\"Id of token to burn\"}},\"contractURI()\":{\"returns\":{\"_0\":\"Contract URI of token's URI\"}},\"explicitOwnershipOf(uint256)\":{\"details\":\"Returns the `TokenOwnership` struct at `tokenId` without reverting. If the `tokenId` is out of bounds: - `addr = address(0)` - `startTimestamp = 0` - `burned = false` - `extraData = 0` If the `tokenId` is burned: - `addr = <Address of owner before token was burned>` - `startTimestamp = <Timestamp when token was burned>` - `burned = true` - `extraData = <Extra data when token was burned>` Otherwise: - `addr = <Address of owner>` - `startTimestamp = <Timestamp of start of ownership>` - `burned = false` - `extraData = <Extra data at start of ownership>`\"},\"explicitOwnershipsOf(uint256[])\":{\"details\":\"Returns an array of `TokenOwnership` structs at `tokenIds` in order. See {ERC721AQueryable-explicitOwnershipOf}\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,string,string,string,string,address,uint96)\":{\"details\":\"This should be called immediately after deployment.\",\"params\":{\"owner\":\"The owner of the contract\",\"royaltyFeeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"royaltyReceiver\":\"Address of who should be sent the royalty payment\",\"tokenBaseURI\":\"Base URI of the token\",\"tokenContractURI\":\"Contract URI of the token\",\"tokenName\":\"Name of the token\",\"tokenSymbol\":\"Symbol of the token\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"mint(address,uint256)\":{\"params\":{\"amount\":\"Amount of tokens to mint.\",\"to\":\"Address to mint tokens to.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"setBaseMetadataURI(string)\":{\"params\":{\"tokenBaseURI\":\"New base URI of token's URI\"}},\"setContractURI(string)\":{\"params\":{\"tokenContractURI\":\"New contract URI of token's URI\"}},\"setDefaultRoyalty(address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\"}},\"setNameAndSymbol(string,string)\":{\"params\":{\"tokenName\":\"Name of token.\",\"tokenSymbol\":\"Symbol of token.\"}},\"setTokenRoyalty(uint256,address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\",\"tokenId\":\"The token id to set the royalty information for\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface id\"},\"returns\":{\"_0\":\"True if supported\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"tokensOfOwner(address)\":{\"details\":\"Returns an array of token IDs owned by `owner`. This function scans the ownership mapping and is O(`totalSupply`) in complexity. It is meant to be called off-chain. See {ERC721AQueryable-tokensOfOwnerIn} for splitting the scan into multiple smaller scans if the collection is large enough to cause an out-of-gas error (10K collections should be fine).\"},\"tokensOfOwnerIn(address,uint256,uint256)\":{\"details\":\"Returns an array of token IDs owned by `owner`, in the range [`start`, `stop`) (i.e. `start <= tokenId < stop`). This function allows for tokens to be queried if the collection grows too big for a single call of {ERC721AQueryable-tokensOfOwner}. Requirements: - `start < stop`\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"InvalidInitialization()\":[{\"notice\":\"Invalid initialization error.\"}],\"InvalidQueryRange()\":[{\"notice\":\"Invalid query range (`start` >= `stop`).\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{\"batchBurn(uint256[])\":{\"notice\":\"Allows the owner of the tokens to burn their tokens.\"},\"burn(uint256)\":{\"notice\":\"Allows the owner of the token to burn their token.\"},\"constructor\":{\"notice\":\"Deploy contract.\"},\"contractURI()\":{\"notice\":\"Get the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata\"},\"initialize(address,string,string,string,string,address,uint96)\":{\"notice\":\"Initialize contract.\"},\"mint(address,uint256)\":{\"notice\":\"Mint tokens.\"},\"name()\":{\"notice\":\"Override the ERC721A name function.\"},\"setBaseMetadataURI(string)\":{\"notice\":\"Update the base URI of token's URI.\"},\"setContractURI(string)\":{\"notice\":\"Update the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata\"},\"setDefaultRoyalty(address,uint96)\":{\"notice\":\"Sets the royalty information that all ids in this contract will default to.\"},\"setNameAndSymbol(string,string)\":{\"notice\":\"Set name and symbol of token.\"},\"setTokenRoyalty(uint256,address,uint96)\":{\"notice\":\"Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check interface support.\"},\"symbol()\":{\"notice\":\"Override the ERC721A symbol function.\"}},\"notice\":\"An implementation of ERC-721 capable of minting when role provided.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/items/ERC721Items.sol\":\"ERC721Items\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"node_modules/@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"node_modules/@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"node_modules/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"node_modules/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"node_modules/erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xad83a36e9758f044317e9a5e2903bc49730b6d5de8fbe9a61b2f91fb4c2148c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b516fbe3026a9d529d359167c7f59d541c97369ff8c1f9e3698a669e43bb3205\",\"dweb:/ipfs/QmeUNVACjEnkz2D9JrzpGrNgVqJnQkYsWzY8UsHaAZWqtW\"]},\"node_modules/erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0xc14fc938aecdccee7edbd3a3ce60b6171cdc3da3345cfa6d288c268983c48942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3e98fca40eb76d808b70410ff794373dd3d409aaf4ecc3c5bcf517172b20a84\",\"dweb:/ipfs/QmNzXKtrsUe17JYnQmp2jfZZaJwjmo14H4UsxTUV4uArdS\"]},\"src/tokens/ERC721/ERC721BaseToken.sol\":{\"keccak256\":\"0xa70032e4b95d281e89ef51182f5373c53904f0f80612ffad737213d536857815\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://444ff837dac62d6ffd3029fbc1dc1e4a169e98b8d60a7f2764b21e526c884d7d\",\"dweb:/ipfs/QmTRbu73eK7dBHr477PwJSkbVDZUqFTRLcJZQGPyomcBM4\"]},\"src/tokens/ERC721/presets/items/ERC721Items.sol\":{\"keccak256\":\"0x83d7aca06aa226e1258489d73c44cae6a9c1d96e0522985d1f3a1435e2539fde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8bad58ac9b700cb66bda5863087a082e65b87d8a90c9229a5d1ddf7a248bf75c\",\"dweb:/ipfs/QmfVEYTJRgh6zAjGvtR7YPVz9NAbCpKpp6VLikoyRU2Etv\"]},\"src/tokens/ERC721/presets/items/IERC721Items.sol\":{\"keccak256\":\"0x5dafff5613e19b24b8283d0b918e9c7b27997fd93966922b2bd020f4aa2d86de\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://649224a134328e1f951b2a9c7bd76c1ebbdae9c5572be5c0a6650d2174dbcece\",\"dweb:/ipfs/QmQVcRupjgJC2Usy9HjKFgVC1oaYcAoeooqj7vYuUjpqTp\"]},\"src/tokens/common/ERC2981Controlled.sol\":{\"keccak256\":\"0x3facd3d7c265311342384809404e45245b51ae16df68ea76002f77116c81195e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://534d7d6ab70880dfbc79f189f5010a029d99564af9f53cbbe3f6a361b98b6a74\",\"dweb:/ipfs/QmcrVKNyGU2BkpvuzWKsBem3r7VF5YckzRnrHWziCQHnyS\"]},\"src/tokens/common/IERC2981Controlled.sol\":{\"keccak256\":\"0x730395f1a3f38553f55835bf6b0a7d2d6868cdfce7cbf56e41e3070351a389bf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://302fb8fa726aeab204b9382b4414dee8a5142d0d68478fada8c1e23c38908922\",\"dweb:/ipfs/QmQGB1eBqcD52R95UwFjkjryCbv29fAVBzYm1FMvTSwJtw\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"InvalidInitialization()": [
								{
									"notice": "Invalid initialization error."
								}
							],
							"InvalidQueryRange()": [
								{
									"notice": "Invalid query range (`start` >= `stop`)."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {
							"batchBurn(uint256[])": {
								"notice": "Allows the owner of the tokens to burn their tokens."
							},
							"burn(uint256)": {
								"notice": "Allows the owner of the token to burn their token."
							},
							"constructor": {
								"notice": "Deploy contract."
							},
							"contractURI()": {
								"notice": "Get the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata"
							},
							"initialize(address,string,string,string,string,address,uint96)": {
								"notice": "Initialize contract."
							},
							"mint(address,uint256)": {
								"notice": "Mint tokens."
							},
							"name()": {
								"notice": "Override the ERC721A name function."
							},
							"setBaseMetadataURI(string)": {
								"notice": "Update the base URI of token's URI."
							},
							"setContractURI(string)": {
								"notice": "Update the contract URI of token's URI.Refer to https://docs.opensea.io/docs/contract-level-metadata"
							},
							"setDefaultRoyalty(address,uint96)": {
								"notice": "Sets the royalty information that all ids in this contract will default to."
							},
							"setNameAndSymbol(string,string)": {
								"notice": "Set name and symbol of token."
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"notice": "Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id"
							},
							"supportsInterface(bytes4)": {
								"notice": "Check interface support."
							},
							"symbol()": {
								"notice": "Override the ERC721A symbol function."
							}
						},
						"notice": "An implementation of ERC-721 capable of minting when role provided.",
						"version": 1
					}
				}
			},
			"src/tokens/ERC721/presets/items/ERC721ItemsFactory.sol": {
				"ERC721ItemsFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factoryOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "ERC721ItemsDeployed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "beacon",
							"outputs": [
								{
									"internalType": "contract UpgradeableBeacon",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "contractURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "royaltyReceiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "royaltyFeeNumerator",
									"type": "uint96"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "upgradeBeacon",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ERC721ItemsDeployed(address)": {
								"params": {
									"proxyAddr": "The address of the deployed proxy."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"factoryOwner": "The owner of the ERC-721 Items Factory"
								}
							},
							"deploy(address,address,string,string,string,string,address,uint96)": {
								"params": {
									"baseURI": "The base URI of the ERC-721 Items proxy",
									"contractURI": "The contract URI of the ERC-721 Items proxy",
									"name": "The name of the ERC-721 Items proxy",
									"proxyOwner": "The owner of the ERC-721 Items proxy",
									"royaltyFeeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"royaltyReceiver": "Address of who should be sent the royalty payment",
									"symbol": "The symbol of the ERC-721 Items proxy",
									"tokenOwner": "The owner of the ERC-721 Items implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-721 Items Proxy"
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeBeacon(address)": {
								"params": {
									"implementation": "The new beacon implementation."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"fun_transferOwnership": {
									"entryPoint": 298,
									"id": 650,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608034610125576001600160401b0390601f6200650738819003918201601f191683019291908484118385101761010f57816020928492604096875283398101031261012557516001600160a01b038082168203610125576100603361012a565b82519361411f94858101958187108388111761010f57620023e8823980600096039086f0908115610105578451916105ee808401928311848410176100f1579184849260209462001dfa853916815203019085f080156100e4576100d69394501660018060a01b0319600154161760015561012a565b51611c889081620001728239f35b50505051903d90823e3d90fd5b634e487b7160e01b88526041600452602488fd5b84513d87823e3d90fd5b634e487b7160e01b600052604160045260246000fd5b600080fd5b600080546001600160a01b039283166001600160a01b03198216811783559216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a356fe6040608081526004908136101561001557600080fd5b600091823560e01c80631bce45831461072157806325a570b8146102e757806359659e9014610294578063715018a6146101f45780638da5cb5b1461019f5763f2fde38b1461006357600080fd5b3461019b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019b5761009a6107e0565b906100a36108fc565b73ffffffffffffffffffffffffffffffffffffffff809216928315610118575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5050346101f057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f05773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b833461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915761022b6108fc565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101f057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f05760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b508290346101f0576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f0576103226107e0565b9273ffffffffffffffffffffffffffffffffffffffff92602435848116810361070c5767ffffffffffffffff9360443585811161071d576103669036908301610887565b956064358681116107195761037e9036908401610887565b608435878111610715576103959036908501610887565b60a435888111610711576103ac9036908601610887565b9060c43592848416840361070c5760e435946bffffffffffffffffffffffff861686036105fd578b9c8a9b9c999a5160209e8f91808c8b8b8b8b8b898701986103f5968a6109e1565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810182526104259082610846565b5190208d519e90918f019081118f8210176106de578f918f8f928f816068916104af93875284526001549061049f87519586938a85019889527fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090818d60601b168b87015260601b1660548501525180928585019061097b565b8101036048810184520182610846565b519020916111eb9151906104c581840183610846565b828252810191610a68833980511561068057518492918ef5169c8d156106235760015483169291908e3b1561061f578c928f918f9361054786928e9651988997889687957fcf7a1d770000000000000000000000000000000000000000000000000000000087521690850152602484015260606044840152606483019061099e565b03925af1801561061557908a91610601575b50508a3b156105fd579161059e939189979695938b51998a9889987f98dd69c8000000000000000000000000000000000000000000000000000000008a5289016109e1565b038183885af180156105f3576105df575b50507fd8ad75647a93de9d8d617559d87f1c27bc23fb6237b94054baf34aafbe85ad03838251848152a151908152f35b6105e98291610803565b61029157806105af565b83513d84823e3d90fd5b8880fd5b61060a90610803565b6105fd57888d610559565b8b513d8c823e3d90fd5b8c80fd5b506064888f8e51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152fd5b5050506064888f808f51927f08c379a000000000000000000000000000000000000000000000000000000000845283015260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fd5b60418a7f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b600080fd5b8680fd5b8580fd5b8480fd5b8380fd5b50903461019b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019b578261075b6107e0565b6107636108fc565b73ffffffffffffffffffffffffffffffffffffffff90816001541690813b1561071d5783602492865197889586947f3659cfe600000000000000000000000000000000000000000000000000000000865216908401525af19081156107d757506107cb575080f35b6107d490610803565b80f35b513d84823e3d90fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361070c57565b67ffffffffffffffff811161081757604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761081757604052565b81601f8201121561070c5780359067ffffffffffffffff821161081757604051926108da60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185610846565b8284526020838301011161070c57816000926020809301838601378301015290565b73ffffffffffffffffffffffffffffffffffffffff60005416330361091d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60005b83811061098e5750506000910152565b818101518382015260200161097e565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936109da8151809281875287808801910161097b565b0116010190565b9597969294610a4c6bffffffffffffffffffffffff95610a3e60c098610a30610a5a969760e060208e73ffffffffffffffffffffffffffffffffffffffff809c168152015260e08d019061099e565b908b820360408d015261099e565b9089820360608b015261099e565b90878203608089015261099e565b961660a08501521691015256fe60808060405234610016576111cf908161001c8239f35b600080fdfe604060808152366103825773ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000917fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000843516146100c057600484517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b6100c8611192565b60049136831161037e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037e578235916101088361067f565b602435926101158461067f565b60443567ffffffffffffffff811161037a57610135839136908801610789565b941692156103525761014791166107e3565b803b156102cf578451907f5c60da1b000000000000000000000000000000000000000000000000000000009384835260209687848381865afa9384156102a657889461019d9189916102b2575b503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790555194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab575b610242575b8361023c6107d0565b80519101f35b8592839182525afa9182156102a65761026a9392610277575b506102646109b1565b91610a21565b5038808083818080610233565b610298919250843d861161029f575b610290818361070e565b810190610902565b903861025b565b503d610286565b61091a565b508661022e565b6102c99150863d881161029f57610290818361070e565b38610194565b60848360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b8487517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b8380fd5b73ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000907fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000833516146104395760046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b610441611192565b60049236841161067b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067b5783356104808161067f565b6024359161048d8361067f565b60443567ffffffffffffffff8111610677576104ad829136908901610789565b9316931561064e576104bf91166107e3565b813b156105ca576040517f5c60da1b000000000000000000000000000000000000000000000000000000009283825260209586838281855afa9283156102a65787936105149188916105b357503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617905560405194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab57610242578361023c6107d0565b6102c99150853d871161029f57610290818361070e565b6084846020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b856040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b8280fd5b73ffffffffffffffffffffffffffffffffffffffff81160361069d57565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106ed57604052565b6106a2565b6040810190811067ffffffffffffffff8211176106ed57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106ed57604052565b67ffffffffffffffff81116106ed57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561069d578035906107a08261074f565b926107ae604051948561070e565b8284526020838301011161069d57816000926020809301838601378301015290565b604051906107dd826106d1565b60008252565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61039081547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604080519373ffffffffffffffffffffffffffffffffffffffff9081851686521693846020820152a1811561087e577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b9081602091031261069d57516109178161067f565b90565b6040513d6000823e3d90fd5b1561092d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201527f73206e6f74206120636f6e7472616374000000000000000000000000000000006064820152fd5b604051906060820182811067ffffffffffffffff8211176106ed57604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806109179493602081519101845af43d15610a60573d91610a438361074f565b92610a51604051948561070e565b83523d6000602085013e610acd565b606091610acd565b15610a6f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b91929015610aed5750815115610ae1575090565b610917903b1515610a68565b825190915015610b005750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610b7d575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610b3c565b610bee610bd57fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b3303610d14576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe6000000000000000000000000000000000000000000000000000000008103610c515750610c49610f0f565b602081519101f35b7f4f1ef286000000000000000000000000000000000000000000000000000000008103610c865750610c81611083565b610c49565b7f8f283970000000000000000000000000000000000000000000000000000000008103610cb65750610c81610ec5565b7ff851a440000000000000000000000000000000000000000000000000000000008103610ce65750610c81610dfd565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610d1457610c81610e53565b610d1c610d3b565b6000808092368280378136915af43d82803e15610d37573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541680610df8575060206004917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156102a657600091610de0575090565b610917915060203d811161029f57610290818361070e565b905090565b610e05611192565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103541660405190602082015260208152610917816106f2565b610e5b611192565b610e63610d3b565b73ffffffffffffffffffffffffffffffffffffffff6040519116602082015260208152610917816106f2565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261069d576004356109178161067f565b610ecd611192565b3660041161069d57610efc73ffffffffffffffffffffffffffffffffffffffff610ef636610e8f565b166107e3565b604051610f08816106d1565b6000815290565b610f17611192565b3660041161069d5773ffffffffffffffffffffffffffffffffffffffff610f3d36610e8f565b1660405190610f4b826106d1565b60008252803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610ff7575b610fe3575b5050604051610f08816106d1565b610fef916102646109b1565b503880610fd5565b506000610fd0565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b3660041161069d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069d576004356110c18161067f565b60243567ffffffffffffffff811161069d576110f673ffffffffffffffffffffffffffffffffffffffff913690600401610789565b9116803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061118a57610fe3575050604051610f08816106d1565b506001610fd0565b3461069d5756fea26469706673582212205afdfcf2db2f242d1c90fc4524ff1841da37419738805ee0571bd2744b6196ce64736f6c63430008130033a2646970667358221220a80cc5d74e0a02cb4b1f44a1dec44bba24dd9e7bd16093f5d05c61be5740ed1664736f6c6343000813003360803461011a57601f6105ee38819003918201601f19168301916001600160401b0383118484101761011f5780849260209460405283398101031261011a57516001600160a01b03808216919082820361011a576000549160018060a01b0319923384821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a33b156100b2575060015416176001556040516104b890816101368239f35b62461bcd60e51b815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152608490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b6000803560e01c80633659cfe6146102ce5780635c60da1b1461027c578063715018a6146101e05780638da5cb5b1461018f5763f2fde38b1461005457600080fd5b3461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff808216809203610188576100ad610403565b8115610104578254827fffffffffffffffffffffffff00000000000000000000000000000000000000008216178455167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b80fd5b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57610217610403565b8073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b503461018c57807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b503461018c5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261018c5760043573ffffffffffffffffffffffffffffffffffffffff81169081810361018857610328610403565b3b1561037f57807fffffffffffffffffffffffff000000000000000000000000000000000000000060015416176001557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8280a280f35b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f5570677261646561626c65426561636f6e3a20696d706c656d656e746174696f60448201527f6e206973206e6f74206120636f6e7472616374000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff60005416330361042457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fdfea2646970667358221220ee02a7cc9adae68564feda64934170f02f3f12a55b74647721baba4fb366157164736f6c6343000813003360a060405234620002dc5762000014620002e1565b6200001e620002e1565b8151906001600160401b0390818311620001ee57600254906001938483811c9316958615620002d1575b60209687851014620001cd578190601f948581116200027a575b508790858311600114620002105760009262000204575b5050600019600383901b1c191690851b176002555b8051928311620001ee5760039485548581811c91168015620001e3575b82821014620001cd5783811162000182575b50809284116001146200011857509282939183926000946200010c575b50501b9160001990841b1c19161790555b6000805533608052604051613e1990816200030682396080518161396f0152f35b015192503880620000da565b919083601f1981168760005284600020946000905b888383106200016757505050106200014e575b505050811b019055620000eb565b015160001983861b60f8161c1916905538808062000140565b8587015188559096019594850194879350908101906200012d565b86600052816000208480870160051c820192848810620001c3575b0160051c019086905b828110620001b6575050620000bd565b60008155018690620001a6565b925081926200019d565b634e487b7160e01b600052602260045260246000fd5b90607f1690620000ab565b634e487b7160e01b600052604160045260246000fd5b01519050388062000079565b90879350601f198316916002600052896000209260005b8b82821062000263575050841162000249575b505050811b016002556200008e565b015160001960f88460031b161c191690553880806200023a565b8385015186558b9790950194938401930162000227565b9091506002600052876000208580850160051c8201928a8610620002c7575b918991869594930160051c01915b828110620002b757505062000062565b60008155859450899101620002a7565b9250819262000299565b92607f169262000048565b600080fd5b60405190602082016001600160401b03811183821017620001ee576040526000825256fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a71461026757806304634d8d1461026257806306fdde031461025d578063081812fc14610258578063095ea7b31461025357806318160ddd1461024e57806323b872dd14610249578063248a9ca3146102445780632a55205a1461023f5780632f2ff15d1461023a57806336568abe1461023557806340c10f191461023057806342842e0e1461022b57806342966c68146102265780635944c753146102215780635a4462151461021c5780635bbb2177146102175780636352211e1461021257806370a082311461020d5780637e518ec8146102085780638462151c146102035780639010d07c146101fe57806391d14854146101f9578063938e3d7b146101f457806395d89b41146101ef57806398dd69c8146101ea57806399a2557a146101e5578063a217fddf146101e0578063a22cb465146101db578063b88d4fde146101d6578063c23dc68f146101d1578063c87b56dd146101cc578063ca15c873146101c7578063d547741f146101c2578063dc8e92ea146101bd578063e8a3d485146101b85763e985e9c5146101b357600080fd5b611c80565b611bd9565b611b52565b611afb565b611acf565b611955565b6118e3565b611888565b6117b9565b61179d565b611765565b6116c7565b611620565b611521565b6114c1565b61146e565b61139a565b611260565b61120a565b6111ce565b611168565b610f9e565b610d2c565b610d10565b610ced565b610b9f565b610ad9565b610996565b6108c5565b610896565b610884565b61081f565b610700565b610686565b610587565b6104e7565b61029b565b7fffffffff0000000000000000000000000000000000000000000000000000000081160361029657565b600080fd5b346102965760206003193601126102965761031d6004356102bb8161026c565b7fffffffff000000000000000000000000000000000000000000000000000000008116807f40c10f190000000000000000000000000000000000000000000000000000000014918215610321575b505060405190151581529081906020820190565b0390f35b7fc21b8f28000000000000000000000000000000000000000000000000000000008214925090821561041e575b821561038d575b50811561037c575b811561036c575b503880610309565b6103769150613c7d565b38610364565b905061038781613c7d565b9061035d565b9091507f01ffc9a70000000000000000000000000000000000000000000000000000000081149081156103f4575b81156103ca575b509038610355565b7f5b5e139f00000000000000000000000000000000000000000000000000000000915014386103c2565b7f80ac58cd00000000000000000000000000000000000000000000000000000000811491506103bb565b7f8446a79e000000000000000000000000000000000000000000000000000000008114925061034e565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361029657565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361029657565b60a4359073ffffffffffffffffffffffffffffffffffffffff8216820361029657565b604435906bffffffffffffffffffffffff8216820361029657565b60c435906bffffffffffffffffffffffff8216820361029657565b3461029657604060031936011261029657610500610448565b6024356bffffffffffffffffffffffff811681036102965761052991610524611cf0565b613ba5565b005b60005b83811061053e5750506000910152565b818101518382015260200161052e565b90601f19601f60209361056c8151809281875287808801910161052b565b0116010190565b90602061058492818152019061054e565b90565b3461029657600080600319360112610683576040519080600d546105aa81613259565b8085529160019180831690811561063b57506001146105e0575b61031d856105d481870382610efe565b60405191829182610573565b9250600d83527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb55b8284106106235750505081016020016105d48261031d6105c4565b80546020858701810191909152909301928101610608565b86955061031d969350602092506105d49491507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001682840152151560051b82010192936105c4565b80fd5b34610296576020600319360112610296576004356106a381612a31565b156106d6576000526006602052602073ffffffffffffffffffffffffffffffffffffffff60406000205416604051908152f35b60046040517fcf4700e4000000000000000000000000000000000000000000000000000000008152fd5b604060031936011261029657610714610448565b60243573ffffffffffffffffffffffffffffffffffffffff8061073683612992565b16908133036107b6575b600083815260066020526040812080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87161790559316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258480a480f35b81600052600760205260ff6107ef3360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166107405760046040517fcfb3b942000000000000000000000000000000000000000000000000000000008152fd5b346102965760006003193601126102965760206000546001549003604051908152f35b60031960609101126102965773ffffffffffffffffffffffffffffffffffffffff90600435828116810361029657916024359081168103610296579060443590565b61052961089036610842565b91612a73565b3461029657602060031936011261029657600435600052600a6020526020600160406000200154604051908152f35b346102965760406003193601126102965760043560005260096020526040600020604051906108f382610ec1565b549073ffffffffffffffffffffffffffffffffffffffff82169182825260a01c60208201529015610988575b61095f6127106109436bffffffffffffffffffffffff6020850151166024356123dd565b04915173ffffffffffffffffffffffffffffffffffffffff1690565b6040805173ffffffffffffffffffffffffffffffffffffffff9290921682526020820192909252f35b5061099161237b565b61091f565b3461029657604060031936011261029657600435610a3e6109b561046b565b73ffffffffffffffffffffffffffffffffffffffff610a36600094808652600a6020526109e86001604088200154611e94565b808652600a60205260ff610a1f85604089209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541615610a4257600052600b602052604060002090565b9116906127ad565b5080f35b808652600a602052610a7784604088209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533838516827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8980a4600052600b602052604060002090565b3461029657604060031936011261029657610af261046b565b3373ffffffffffffffffffffffffffffffffffffffff821603610b1b5761052990600435612287565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152fd5b3461029657604060031936011261029657610bb8610448565b60243590610bc4611dea565b6000918254918115610cc357610bfa8173ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b680100000000000000018302815401905573ffffffffffffffffffffffffffffffffffffffff600191169181811460e11b4260a01b178317610c46856000526004602052604060002090565b55830192817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91808588858180a4015b848103610cb45750505015610c8a57815580f35b60046040517f2e076300000000000000000000000000000000000000000000000000000000008152fd5b8083918588858180a401610c76565b60046040517fb562e8dd000000000000000000000000000000000000000000000000000000008152fd5b610529610cf936610842565b9060405192610d0784610ee2565b60008452612cf4565b3461029657602060031936011261029657610529600435613721565b3461029657606060031936011261029657610d4561046b565b610d4d6104b1565b90610d56611cf0565b610d726127106bffffffffffffffffffffffff84161115613b1a565b73ffffffffffffffffffffffffffffffffffffffff811615610e3457610dd161052992610dbc610da0610f21565b73ffffffffffffffffffffffffffffffffffffffff9094168452565b6bffffffffffffffffffffffff166020830152565b610de76004356000526009602052604060002090565b815160209092015160a01b7fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f455243323938313a20496e76616c696420706172616d657465727300000000006044820152fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117610edd57604052565b610e92565b6020810190811067ffffffffffffffff821117610edd57604052565b90601f601f19910116810190811067ffffffffffffffff821117610edd57604052565b60405190610f2e82610ec1565b565b67ffffffffffffffff8111610edd57601f01601f191660200190565b929192610f5882610f30565b91610f666040519384610efe565b829481845281830111610296578281602093846000960137010152565b9080601f830112156102965781602061058493359101610f4c565b346102965760406003193601126102965767ffffffffffffffff60043581811161029657610fd0903690600401610f83565b9060243581811161029657610fe9903690600401610f83565b90610ff2611e3f565b8251908111610edd5761100f8161100a600d54613259565b6132ac565b602080601f83116001146110505750819061052994600092611045575b50506000198260011b9260031b1c191617600d55613470565b01519050388061102c565b600d6000529193601f1985167fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5936000905b8282106110c35750509160019391866105299794106110aa575b505050811b01600d55613470565b015160001960f88460031b161c1916905538808061109c565b80600186978294978701518155019601940190611082565b6020908160408183019282815285518094520193019160005b828110611102575050505090565b909192938260808261115c600194895162ffffff6060809273ffffffffffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152604081015115156040860152015116910152565b019501939291016110f4565b346102965760206003193601126102965767ffffffffffffffff6004358181116102965736602382011215610296578060040135918211610296573660248360051b830101116102965761031d9160246111c29201613033565b604051918291826110db565b3461029657602060031936011261029657602073ffffffffffffffffffffffffffffffffffffffff611201600435612992565b16604051908152f35b3461029657602060031936011261029657602061122d611228610448565b612931565b604051908152f35b6020600319820112610296576004359067ffffffffffffffff82116102965761058491600401610f83565b346102965761126e36611235565b611276611e3f565b805167ffffffffffffffff8111610edd5761129b81611296600c54613259565b61331d565b602080601f83116001146112d8575081926000926112cd575b50506000198260011b9260031b1c191617600c55600080f35b0151905038806112b4565b90601f1983169361130b600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c790565b926000905b868210611347575050836001951061132e575b505050811b01600c55005b015160001960f88460031b161c19169055388080611323565b80600185968294968601518155019501930190611310565b6020908160408183019282815285518094520193019160005b828110611386575050505090565b835185529381019392810192600101611378565b34610296576020600319360112610296576113b3610448565b6000806113bf83612931565b916113c9836130c3565b936113d2612f19565b5073ffffffffffffffffffffffffffffffffffffffff90811691835b858503611403576040518061031d898261135f565b61140c81612f9d565b6040810151611465575173ffffffffffffffffffffffffffffffffffffffff1683811661145c575b506001908484841614611448575b016113ee565b80611456838801978a61301f565b52611442565b91506001611434565b50600190611442565b3461029657604060031936011261029657600435600052600b602052602073ffffffffffffffffffffffffffffffffffffffff6114b16024356040600020612777565b9190546040519260031b1c168152f35b3461029657604060031936011261029657602060ff6115156114e161046b565b600435600052600a845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166040519015158152f35b346102965761152f36611235565b611537611e3f565b805167ffffffffffffffff8111610edd5761155c81611557600f54613259565b61338e565b602080601f83116001146115995750819260009261158e575b50506000198260011b9260031b1c191617600f55600080f35b015190503880611575565b90601f198316936115cc600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290565b926000905b86821061160857505083600195106115ef575b505050811b01600f55005b015160001960f88460031b161c191690553880806115e4565b806001859682949686015181550195019301906115d1565b3461029657600080600319360112610683576040519080600e5461164381613259565b8085529160019180831690811561063b575060011461166c5761031d856105d481870382610efe565b9250600e83527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd5b8284106116af5750505081016020016105d48261031d6105c4565b80546020858701810191909152909301928101611694565b346102965760e0600319360112610296576116e0610448565b67ffffffffffffffff9060243582811161029657611702903690600401610f83565b6044358381116102965761171a903690600401610f83565b60643584811161029657611732903690600401610f83565b6084359485116102965761174d610529953690600401610f83565b9161175661048e565b9361175f6104cc565b95613952565b346102965760606003193601126102965761031d611791611784610448565b60443590602435906130f4565b6040519182918261135f565b3461029657600060031936011261029657602060405160008152f35b34610296576040600319360112610296576117d2610448565b602435908115158092036102965773ffffffffffffffffffffffffffffffffffffffff9033600052600760205261182d8160406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0081541660ff851617905560405192835216907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b60806003193601126102965761189c610448565b6118a461046b565b6064359167ffffffffffffffff83116102965736602384011215610296576118d9610529933690602481600401359101610f4c565b9160443591612cf4565b34610296576020600319360112610296576080611901600435612f4f565b611953604051809262ffffff6060809273ffffffffffffffffffffffffffffffffffffffff815116855267ffffffffffffffff6020820151166020860152604081015115156040860152015116910152565bf35b34610296576020806003193601126102965760043561197381612a31565b15611aa5576040519082826000600c5461198c81613259565b80845290600190818116908115611a655750600114611a06575b50506119b492500383610efe565b8151156119f35761031d926119e56119ce6105d493612ed0565b6119df604051958694850190611f76565b90611f76565b03601f198101835282610efe565b50505061031d611a016123f5565b6105d4565b90939150600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7936000915b818310611a4d5750879450508201016119b4386119a6565b85548884018501529485019487945091830191611a35565b90506119b49593507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0091501682840152151560051b8201018592386119a6565b60046040517fa14c4b50000000000000000000000000000000000000000000000000000000008152fd5b3461029657602060031936011261029657600435600052600b6020526020604060002054604051908152f35b3461029657604060031936011261029657610529600435611b1a61046b565b9080600052600a602052611b35600160406000200154611e94565b612287565b67ffffffffffffffff8111610edd5760051b60200190565b34610296576020806003193601126102965760043567ffffffffffffffff8111610296573660238201121561029657806004013590611b9082611b3a565b91611b9e6040519384610efe565b80835260248484019160051b8301019136831161029657602401905b828210611bca576105298461391c565b81358152908401908401611bba565b3461029657600080600319360112610683576040519080600f54611bfc81613259565b8085529160019180831690811561063b5750600114611c255761031d856105d481870382610efe565b9250600f83527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8025b828410611c685750505081016020016105d48261031d6105c4565b80546020858701810191909152909301928101611c4d565b3461029657604060031936011261029657602060ff611515611ca0610448565b73ffffffffffffffffffffffffffffffffffffffff611cbd61046b565b91166000526007845260406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b3360009081527f4a209273c9c71eac8bee506e444418998f8f452896d49b4edfa61f22f2a2bd27602052604090205460ff1615611d2957565b611de66048611db4611d3a33612503565b6119e5611d456125a0565b6040519485937f416363657373436f6e74726f6c3a206163636f756e74200000000000000000006020860152611d8581518092602060378901910161052b565b84017f206973206d697373696e6720726f6c652000000000000000000000000000000060378201520190611f76565b6040519182917f08c379a000000000000000000000000000000000000000000000000000000000835260048301610573565b0390fd5b3360009081527faa1d7351356c4ddc11907b1ee0660f579cfdf507235af2ae01ecd22a4b7ceaae602052604090205460ff1615611e2357565b611de66048611db4611e3433612503565b6119e5611d4561263d565b3360009081527f2de00acba1f3dd4b00004fa31871eaf6bd23564af8ed1bbe52ac31593862e4a2602052604090205460ff1615611e7857565b611de66048611db4611e8933612503565b6119e5611d456126da565b80600052600a60205260ff611ecd3360406000209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b541615611ed75750565b611ee033612503565b611ee8612408565b916030611ef484612463565b536078611f0084612470565b5360415b60018111611f2357611de66048611db4856119e588611d45881561249e565b90600f8116906010821015611f71577f3031323334353637383961626364656600000000000000000000000000000000611f6c921a611f628487612480565b5360041c91612491565b611f04565b612434565b90611f896020928281519485920161052b565b0190565b73ffffffffffffffffffffffffffffffffffffffff81811660009081527f13da86008ba1c6922daee3e07db95305ef49ebced9f5467a0b8613fcc6b343e3602052604080822054611ff59493929060ff1615611ff8575b808052600b602052209116906127ad565b50565b808052600a60205261202c848383209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533838516827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4611fe4565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527f2de00acba1f3dd4b00004fa31871eaf6bd23564af8ed1bbe52ac31593862e4a26020526040808220611ff5949392907fe02a0315b383857ac496e9d2b2546a699afaeb4e5e83a1fdef64376d0b74e5a59060ff905b54161561210e575b8152600b602052209116906127ad565b808252600a602052612142858484209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0082541617905533848616827f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8580a46120fe565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527f4a209273c9c71eac8bee506e444418998f8f452896d49b4edfa61f22f2a2bd276020526040808220611ff5949392907f6db4061a20ca83a3be756ee172bd37a029093ac5afe4ce968c6d5435b43cb0119060ff906120f6565b73ffffffffffffffffffffffffffffffffffffffff80821660009081527faa1d7351356c4ddc11907b1ee0660f579cfdf507235af2ae01ecd22a4b7ceaae6020526040808220611ff5949392907f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a69060ff906120f6565b9073ffffffffffffffffffffffffffffffffffffffff6040611ff593600090808252600a60205260ff6122dc868585209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b54166122f3575b8152600b6020522091169061287c565b808252600a602052612327858484209073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00815416905533848616827ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b8580a46122e3565b6040519061238882610ec1565b60085473ffffffffffffffffffffffffffffffffffffffff8116835260a01c6020830152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b818102929181159184041417156123f057565b6123ae565b6040519061240282610ee2565b60008252565b604051906080820182811067ffffffffffffffff821117610edd57604052604282526060366020840137565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b805115611f715760200190565b805160011015611f715760210190565b908151811015611f71570160200190565b80156123f0576000190190565b156124a557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b604051906060820182811067ffffffffffffffff821117610edd57604052602a82526040366020840137603061253883612463565b53607861254483612470565b536029905b6001821161255c5761058491501561249e565b600f8116906010821015611f71577f303132333435363738396162636465660000000000000000000000000000000061259a921a611f628486612480565b90612549565b7f6db4061a20ca83a3be756ee172bd37a029093ac5afe4ce968c6d5435b43cb0116125c9612408565b9060306125d583612463565b5360786125e183612470565b536041905b600182116125f95761058491501561249e565b600f8116906010821015611f71577f3031323334353637383961626364656600000000000000000000000000000000612637921a611f628486612480565b906125e6565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6612666612408565b90603061267283612463565b53607861267e83612470565b536041905b600182116126965761058491501561249e565b600f8116906010821015611f71577f30313233343536373839616263646566000000000000000000000000000000006126d4921a611f628486612480565b90612683565b7fe02a0315b383857ac496e9d2b2546a699afaeb4e5e83a1fdef64376d0b74e5a5612703612408565b90603061270f83612463565b53607861271b83612470565b536041905b600182116127335761058491501561249e565b600f8116906010821015611f71577f3031323334353637383961626364656600000000000000000000000000000000612771921a611f628486612480565b90612720565b8054821015611f715760005260206000200190600090565b916127a9918354906000199060031b92831b921b19161790565b9055565b600181019082600052816020526040600020541560001461281b57805468010000000000000000811015610edd576128066127ef826001879401855584612777565b81939154906000199060031b92831b921b19161790565b90555491600052602052604060002055600190565b505050600090565b805490811561284d576000198092019161283d8383612777565b909182549160031b1b1916905555565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60018101918060005282602052604060002054928315156000146129285760001992838501908582116123f05780549485019485116123f05760009585836128d0946128df98036128e5575b505050612823565b90600052602052604060002090565b55600190565b61290f612909916128f961291f9487612777565b90549060031b1c92839187612777565b9061278f565b8590600052602052604060002090565b553880806128c8565b50505050600090565b73ffffffffffffffffffffffffffffffffffffffff16801561296857600052600560205267ffffffffffffffff6040600020541690565b60046040517f8f4eb604000000000000000000000000000000000000000000000000000000008152fd5b600081815481106129c8575b60046040517fdf2d9b42000000000000000000000000000000000000000000000000000000008152fd5b815260049060209180835260409283832054947c0100000000000000000000000000000000000000000000000000000000861615612a085750505061299e565b93929190935b8515612a1c57505050505090565b60001901808352818552838320549550612a0e565b60005481109081612a40575090565b905060005260046020527c0100000000000000000000000000000000000000000000000000000000604060002054161590565b90612a7d83612992565b73ffffffffffffffffffffffffffffffffffffffff808416928382841603612cca57600086815260066020526040902080549092612adb73ffffffffffffffffffffffffffffffffffffffff881633908114908414171590565b1590565b612c3b575b8216958615612c1157612b4b93612b1d92612c07575b5073ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b805460001901905573ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b805460010190557c0200000000000000000000000000000000000000000000000000000000804260a01b851717612b8c866000526004602052604060002090565b55811615612bbd575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4565b60018401612bd5816000526004602052604060002090565b5415612be2575b50612b95565b6000548114612bdc57612bff906000526004602052604060002090565b553880612bdc565b6000905538612af6565b60046040517fea553b34000000000000000000000000000000000000000000000000000000008152fd5b612c9b612ad7612c9433612c6f8b73ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b9073ffffffffffffffffffffffffffffffffffffffff16600052602052604060002090565b5460ff1690565b15612ae05760046040517f59c896be000000000000000000000000000000000000000000000000000000008152fd5b60046040517fa1148100000000000000000000000000000000000000000000000000000000008152fd5b929190612d02828286612a73565b803b612d0f575b50505050565b612d1893612dd1565b15612d265738808080612d09565b60046040517fd1a57ed6000000000000000000000000000000000000000000000000000000008152fd5b9081602091031261029657516105848161026c565b9092610584949360809373ffffffffffffffffffffffffffffffffffffffff80921684521660208301526040820152816060820152019061054e565b3d15612dcc573d90612db282610f30565b91612dc06040519384610efe565b82523d6000602084013e565b606090565b92602091612e2893600073ffffffffffffffffffffffffffffffffffffffff6040518097819682957f150b7a02000000000000000000000000000000000000000000000000000000009b8c85523360048601612d65565b0393165af160009181612ea0575b50612e7a57612e43612da1565b80519081612e755760046040517fd1a57ed6000000000000000000000000000000000000000000000000000000008152fd5b602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000161490565b612ec291925060203d8111612ec9575b612eba8183610efe565b810190612d50565b9038612e36565b503d612eb0565b9060405160a08101604052600019608082019360008552935b0192600a90818106603001855304928315612f075760001990612ee9565b9250608083601f199203019201918252565b604051906080820182811067ffffffffffffffff821117610edd5760405260006060838281528260208201528260408201520152565b612f57612f19565b50612f60612f19565b600054821015612f985750612f7481612f9d565b6040810151612f985750612f9361058491612f8d612f19565b50612992565b612fb8565b905090565b612fa5612f19565b5060005260046020526105846040600020545b90612fc1612f19565b9173ffffffffffffffffffffffffffffffffffffffff8116835267ffffffffffffffff8160a01c1660208401527c010000000000000000000000000000000000000000000000000000000081161515604084015260e81c6060830152565b8051821015611f715760209160051b010190565b61303c82611b3a565b9161304a6040519384610efe565b808352601f1961305982611b3a565b0160005b8181106130ac57505060005b8181036130765750505090565b81811015611f71578061309060019260051b850135612f4f565b61309a828761301f565b526130a5818661301f565b5001613069565b6020906130b7612f19565b8282880101520161305d565b906130cd82611b3a565b6130da6040519182610efe565b828152601f196130ea8294611b3a565b0190602036910137565b908281101561322f576000918254808511613227575b5061311481612931565b8483101561322057828503818110613218575b505b613132816130c3565b9581156132105761314284612f4f565b918594604093613157612ad786830151151590565b6131f1575b505b87811415806131e7575b156131da5761317681612f9d565b808501516131d1575173ffffffffffffffffffffffffffffffffffffffff908116806131c8575b5090816001928716908816146131b4575b0161315e565b806131c2838a01998c61301f565b526131ae565b9650600161319d565b506001906131ae565b5050959450505050815290565b5081871415613168565b5173ffffffffffffffffffffffffffffffffffffffff1695503861315c565b945050505050565b905038613127565b5082613129565b93503861310a565b60046040517f32c1995a000000000000000000000000000000000000000000000000000000008152fd5b90600182811c921680156132a2575b602083101461327357565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b91607f1691613268565b601f81116132b8575050565b600090600d82527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5906020601f850160051c83019410613313575b601f0160051c01915b82811061330857505050565b8181556001016132fc565b90925082906132f3565b601f8111613329575050565b600090600c82527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7906020601f850160051c83019410613384575b601f0160051c01915b82811061337957505050565b81815560010161336d565b9092508290613364565b601f811161339a575050565b600090600f82527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac802906020601f850160051c830194106133f5575b601f0160051c01915b8281106133ea57505050565b8181556001016133de565b90925082906133d5565b601f811161340b575050565b600090600e82527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd906020601f850160051c83019410613466575b601f0160051c01915b82811061345b57505050565b81815560010161344f565b9092508290613446565b90815167ffffffffffffffff8111610edd5761349681613491600e54613259565b6133ff565b602080601f83116001146134d157508192936000926134c6575b50506000198260011b9260031b1c191617600e55565b0151905038806134b0565b90601f19831694613504600e6000527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd90565b926000905b878210613541575050836001959610613528575b505050811b01600e55565b015160001960f88460031b161c1916905538808061351d565b80600185968294968601518155019501930190613509565b90815167ffffffffffffffff8111610edd5761357a81611296600c54613259565b602080601f83116001146135b557508192936000926135aa575b50506000198260011b9260031b1c191617600c55565b015190503880613594565b90601f198316946135e8600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c790565b926000905b87821061362557505083600195961061360c575b505050811b01600c55565b015160001960f88460031b161c19169055388080613601565b806001859682949686015181550195019301906135ed565b90815167ffffffffffffffff8111610edd5761365e81611557600f54613259565b602080601f8311600114613699575081929360009261368e575b50506000198260011b9260031b1c191617600f55565b015190503880613678565b90601f198316946136cc600f6000527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac80290565b926000905b8782106137095750508360019596106136f0575b505050811b01600f55565b015160001960f88460031b161c191690553880806136e5565b806001859682949686015181550195019301906136d1565b61372a81612992565b73ffffffffffffffffffffffffffffffffffffffff8116613758836000526006602052604060002090815490565b929061378073ffffffffffffffffffffffffffffffffffffffff841633908114908614171590565b6138b9575b6000936138b0575b506137b88273ffffffffffffffffffffffffffffffffffffffff166000526005602052604060002090565b6fffffffffffffffffffffffffffffffff81540190557c03000000000000000000000000000000000000000000000000000000004260a01b831717613807856000526004602052604060002090565b557c0200000000000000000000000000000000000000000000000000000000811615613867575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4610f2e61386260015460010190565b600155565b6001840161387f816000526004602052604060002090565b541561388c575b5061382e565b83548114613886576138a8906000526004602052604060002090565b553880613886565b8390553861378d565b6138ed612ad7612c9433612c6f8773ffffffffffffffffffffffffffffffffffffffff166000526007602052604060002090565b156137855760046040517f59c896be000000000000000000000000000000000000000000000000000000008152fd5b80519060005b82811061392e57505050565b61394161393b828461301f565b51613721565b60001981146123f057600101613922565b95949392919073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163314801590613b0e575b613ae45780519067ffffffffffffffff8211610edd576139be8261100a600d54613259565b60209081601f8411600114613a61575093613a07613a119484613a319b9a9895613a0c95613a2c9b996000926110455750506000198260011b9260031b1c191617600d55613470565b613559565b61363d565b613a1a84611f8d565b613a2384612083565b61052484612199565b612210565b610f2e60017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff006010541617601055565b600d6000529190601f1984167fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5936000905b828210613acc57505094600185613a0c95613a2c9b9995613a0795613a319f9e9c99613a119b106110aa57505050811b01600d55613470565b80600186978294978701518155019601940190613a93565b60046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b5060ff60105416613999565b15613b2157565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c2065786365656460448201527f2073616c655072696365000000000000000000000000000000000000000000006064820152fd5b73ffffffffffffffffffffffffffffffffffffffff6bffffffffffffffffffffffff831691613bd8612710841115613b1a565b16918215613c1f577fffffffffffffffffffffffff0000000000000000000000000000000000000000916020604051613c1081610ec1565b858152015260a01b1617600855565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152fd5b613c8681613d6c565b908115613cd4575b8115613ca9575b8115613c9f575090565b6105849150613ce5565b7fffffffff000000000000000000000000000000000000000000000000000000008116159150613c95565b9050613cdf81613ce5565b90613c8e565b7fffffffff000000000000000000000000000000000000000000000000000000008116907f5a05180f000000000000000000000000000000000000000000000000000000008214918215613d3857505090565b7f7965db0b000000000000000000000000000000000000000000000000000000001491508115613d66575090565b61058491505b7fffffffff00000000000000000000000000000000000000000000000000000000167f2a55205a000000000000000000000000000000000000000000000000000000008114908115613dbc575090565b7f01ffc9a7000000000000000000000000000000000000000000000000000000009150149056fea2646970667358221220db08cb5098b122879373fc1576cbeb220975504b788e70cccc47bb354eabcf5764736f6c63430008130033",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x125 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 PUSH1 0x1F PUSH3 0x6507 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP3 SWAP2 SWAP1 DUP5 DUP5 GT DUP4 DUP6 LT OR PUSH2 0x10F JUMPI DUP2 PUSH1 0x20 SWAP3 DUP5 SWAP3 PUSH1 0x40 SWAP7 DUP8 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x125 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND DUP3 SUB PUSH2 0x125 JUMPI PUSH2 0x60 CALLER PUSH2 0x12A JUMP JUMPDEST DUP3 MLOAD SWAP4 PUSH2 0x411F SWAP5 DUP6 DUP2 ADD SWAP6 DUP2 DUP8 LT DUP4 DUP9 GT OR PUSH2 0x10F JUMPI PUSH3 0x23E8 DUP3 CODECOPY DUP1 PUSH1 0x0 SWAP7 SUB SWAP1 DUP7 CREATE SWAP1 DUP2 ISZERO PUSH2 0x105 JUMPI DUP5 MLOAD SWAP2 PUSH2 0x5EE DUP1 DUP5 ADD SWAP3 DUP4 GT DUP5 DUP5 LT OR PUSH2 0xF1 JUMPI SWAP2 DUP5 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH3 0x1DFA DUP6 CODECOPY AND DUP2 MSTORE SUB ADD SWAP1 DUP6 CREATE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH2 0xD6 SWAP4 SWAP5 POP AND PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH2 0x12A JUMP JUMPDEST MLOAD PUSH2 0x1C88 SWAP1 DUP2 PUSH3 0x172 DUP3 CODECOPY RETURN JUMPDEST POP POP POP MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST DUP5 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 JUMP INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BCE4583 EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0x25A570B8 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x59659E90 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19B JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x19B JUMPI PUSH2 0x9A PUSH2 0x7E0 JUMP JUMPDEST SWAP1 PUSH2 0xA3 PUSH2 0x8FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH2 0x118 JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1F0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x22B PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1F0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1F0 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH2 0x322 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x24 CALLDATALOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x70C JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x71D JUMPI PUSH2 0x366 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x887 JUMP JUMPDEST SWAP6 PUSH1 0x64 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x719 JUMPI PUSH2 0x37E SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP8 DUP2 GT PUSH2 0x715 JUMPI PUSH2 0x395 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD DUP9 DUP2 GT PUSH2 0x711 JUMPI PUSH2 0x3AC SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x887 JUMP JUMPDEST SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP3 DUP5 DUP5 AND DUP5 SUB PUSH2 0x70C JUMPI PUSH1 0xE4 CALLDATALOAD SWAP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP7 SUB PUSH2 0x5FD JUMPI DUP12 SWAP13 DUP11 SWAP12 SWAP13 SWAP10 SWAP11 MLOAD PUSH1 0x20 SWAP15 DUP16 SWAP2 DUP1 DUP13 DUP12 DUP12 DUP12 DUP12 DUP12 DUP10 DUP8 ADD SWAP9 PUSH2 0x3F5 SWAP7 DUP11 PUSH2 0x9E1 JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP3 MSTORE PUSH2 0x425 SWAP1 DUP3 PUSH2 0x846 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP14 MLOAD SWAP15 SWAP1 SWAP2 DUP16 ADD SWAP1 DUP2 GT DUP16 DUP3 LT OR PUSH2 0x6DE JUMPI DUP16 SWAP2 DUP16 DUP16 SWAP3 DUP16 DUP2 PUSH1 0x68 SWAP2 PUSH2 0x4AF SWAP4 DUP8 MSTORE DUP5 MSTORE PUSH1 0x1 SLOAD SWAP1 PUSH2 0x49F DUP8 MLOAD SWAP6 DUP7 SWAP4 DUP11 DUP6 ADD SWAP9 DUP10 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 SWAP1 DUP2 DUP14 PUSH1 0x60 SHL AND DUP12 DUP8 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x54 DUP6 ADD MSTORE MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x97B JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x48 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x846 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x11EB SWAP2 MLOAD SWAP1 PUSH2 0x4C5 DUP2 DUP5 ADD DUP4 PUSH2 0x846 JUMP JUMPDEST DUP3 DUP3 MSTORE DUP2 ADD SWAP2 PUSH2 0xA68 DUP4 CODECOPY DUP1 MLOAD ISZERO PUSH2 0x680 JUMPI MLOAD DUP5 SWAP3 SWAP2 DUP15 CREATE2 AND SWAP13 DUP14 ISZERO PUSH2 0x623 JUMPI PUSH1 0x1 SLOAD DUP4 AND SWAP3 SWAP2 SWAP1 DUP15 EXTCODESIZE ISZERO PUSH2 0x61F JUMPI DUP13 SWAP3 DUP16 SWAP2 DUP16 SWAP4 PUSH2 0x547 DUP7 SWAP3 DUP15 SWAP7 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 DUP8 MSTORE AND SWAP1 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0x99E JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x615 JUMPI SWAP1 DUP11 SWAP2 PUSH2 0x601 JUMPI JUMPDEST POP POP DUP11 EXTCODESIZE ISZERO PUSH2 0x5FD JUMPI SWAP2 PUSH2 0x59E SWAP4 SWAP2 DUP10 SWAP8 SWAP7 SWAP6 SWAP4 DUP12 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP9 PUSH32 0x98DD69C800000000000000000000000000000000000000000000000000000000 DUP11 MSTORE DUP10 ADD PUSH2 0x9E1 JUMP JUMPDEST SUB DUP2 DUP4 DUP9 GAS CALL DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH2 0x5DF JUMPI JUMPDEST POP POP PUSH32 0xD8AD75647A93DE9D8D617559D87F1C27BC23FB6237B94054BAF34AAFBE85AD03 DUP4 DUP3 MLOAD DUP5 DUP2 MSTORE LOG1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x5E9 DUP3 SWAP2 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x291 JUMPI DUP1 PUSH2 0x5AF JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH2 0x60A SWAP1 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x5FD JUMPI DUP9 DUP14 PUSH2 0x559 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP13 DUP1 REVERT JUMPDEST POP PUSH1 0x64 DUP9 DUP16 DUP15 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A204661696C6564206F6E206465706C6F7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP POP PUSH1 0x64 DUP9 DUP16 DUP1 DUP16 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x41 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x19B JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x19B JUMPI DUP3 PUSH2 0x75B PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x763 PUSH2 0x8FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH1 0x1 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x71D JUMPI DUP4 PUSH1 0x24 SWAP3 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP7 MSTORE AND SWAP1 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7D7 JUMPI POP PUSH2 0x7CB JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x7D4 SWAP1 PUSH2 0x803 JUMP JUMPDEST DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x70C JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x817 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x817 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x70C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x8DA PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0x846 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x70C JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x91D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x98E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x97E JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x9DA DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x97B JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP8 SWAP7 SWAP3 SWAP5 PUSH2 0xA4C PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 PUSH2 0xA3E PUSH1 0xC0 SWAP9 PUSH2 0xA30 PUSH2 0xA5A SWAP7 SWAP8 PUSH1 0xE0 PUSH1 0x20 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP13 AND DUP2 MSTORE ADD MSTORE PUSH1 0xE0 DUP14 ADD SWAP1 PUSH2 0x99E JUMP JUMPDEST SWAP1 DUP12 DUP3 SUB PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0x99E JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x99E JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x99E JUMP JUMPDEST SWAP7 AND PUSH1 0xA0 DUP6 ADD MSTORE AND SWAP2 ADD MSTORE JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x11CF SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS REVERT 0xFC CALLCODE 0xDB 0x2F 0x24 0x2D SHR SWAP1 0xFC GASLIMIT 0x24 SELFDESTRUCT XOR COINBASE 0xDA CALLDATACOPY COINBASE SWAP8 CODESIZE DUP1 0x5E 0xE0 JUMPI SHL 0xD2 PUSH21 0x4B6196CE64736F6C63430008130033A26469706673 PC 0x22 SLT KECCAK256 0xA8 0xC 0xC5 0xD7 0x4E EXP MUL 0xCB 0x4B 0x1F PREVRANDAO LOG1 0xDE 0xC4 0x4B 0xBA 0x24 0xDD SWAP15 PUSH28 0xD16093F5D05C61BE5740ED1664736F6C634300081300336080346101 BYTE JUMPI PUSH1 0x1F PUSH2 0x5EE CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x11F JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x11A JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP2 SWAP1 DUP3 DUP3 SUB PUSH2 0x11A JUMPI PUSH1 0x0 SLOAD SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT SWAP3 CALLER DUP5 DUP3 AND OR PUSH1 0x0 SSTORE PUSH1 0x40 MLOAD SWAP3 CALLER SWAP2 AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 EXTCODESIZE ISZERO PUSH2 0xB2 JUMPI POP PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x4B8 SWAP1 DUP2 PUSH2 0x136 DUP3 CODECOPY RETURN JUMPDEST PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3659CFE6 EQ PUSH2 0x2CE JUMPI DUP1 PUSH4 0x5C60DA1B EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x18F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND DUP1 SWAP3 SUB PUSH2 0x188 JUMPI PUSH2 0xAD PUSH2 0x403 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x104 JUMPI DUP3 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR DUP5 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP4 DUP1 LOG3 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH2 0x217 PUSH2 0x403 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x18C JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x18C JUMPI PUSH1 0x4 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 DUP2 DUP2 SUB PUSH2 0x188 JUMPI PUSH2 0x328 PUSH2 0x403 JUMP JUMPDEST EXTCODESIZE ISZERO PUSH2 0x37F JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 PUSH1 0x1 SLOAD AND OR PUSH1 0x1 SSTORE PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B DUP3 DUP1 LOG2 DUP1 RETURN JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5570677261646561626C65426561636F6E3A20696D706C656D656E746174696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E206973206E6F74206120636F6E747261637400000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x424 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE MUL 0xA7 0xCC SWAP11 0xDA 0xE6 DUP6 PUSH5 0xFEDA649341 PUSH17 0xF02F3F12A55B74647721BABA4FB3661571 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH3 0x2DC JUMPI PUSH3 0x14 PUSH3 0x2E1 JUMP JUMPDEST PUSH3 0x1E PUSH3 0x2E1 JUMP JUMPDEST DUP2 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 DUP4 GT PUSH3 0x1EE JUMPI PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 SWAP4 DUP5 DUP4 DUP2 SHR SWAP4 AND SWAP6 DUP7 ISZERO PUSH3 0x2D1 JUMPI JUMPDEST PUSH1 0x20 SWAP7 DUP8 DUP6 LT EQ PUSH3 0x1CD JUMPI DUP2 SWAP1 PUSH1 0x1F SWAP5 DUP6 DUP2 GT PUSH3 0x27A JUMPI JUMPDEST POP DUP8 SWAP1 DUP6 DUP4 GT PUSH1 0x1 EQ PUSH3 0x210 JUMPI PUSH1 0x0 SWAP3 PUSH3 0x204 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0x3 DUP4 SWAP1 SHL SHR NOT AND SWAP1 DUP6 SHL OR PUSH1 0x2 SSTORE JUMPDEST DUP1 MLOAD SWAP3 DUP4 GT PUSH3 0x1EE JUMPI PUSH1 0x3 SWAP5 DUP6 SLOAD DUP6 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH3 0x1E3 JUMPI JUMPDEST DUP3 DUP3 LT EQ PUSH3 0x1CD JUMPI DUP4 DUP2 GT PUSH3 0x182 JUMPI JUMPDEST POP DUP1 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH3 0x118 JUMPI POP SWAP3 DUP3 SWAP4 SWAP2 DUP4 SWAP3 PUSH1 0x0 SWAP5 PUSH3 0x10C JUMPI JUMPDEST POP POP SHL SWAP2 PUSH1 0x0 NOT SWAP1 DUP5 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP1 SSTORE CALLER PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH2 0x3E19 SWAP1 DUP2 PUSH3 0x306 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0x396F ADD MSTORE RETURN JUMPDEST ADD MLOAD SWAP3 POP CODESIZE DUP1 PUSH3 0xDA JUMP JUMPDEST SWAP2 SWAP1 DUP4 PUSH1 0x1F NOT DUP2 AND DUP8 PUSH1 0x0 MSTORE DUP5 PUSH1 0x0 KECCAK256 SWAP5 PUSH1 0x0 SWAP1 JUMPDEST DUP9 DUP4 DUP4 LT PUSH3 0x167 JUMPI POP POP POP LT PUSH3 0x14E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH3 0xEB JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT DUP4 DUP7 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x140 JUMP JUMPDEST DUP6 DUP8 ADD MLOAD DUP9 SSTORE SWAP1 SWAP7 ADD SWAP6 SWAP5 DUP6 ADD SWAP5 DUP8 SWAP4 POP SWAP1 DUP2 ADD SWAP1 PUSH3 0x12D JUMP JUMPDEST DUP7 PUSH1 0x0 MSTORE DUP2 PUSH1 0x0 KECCAK256 DUP5 DUP1 DUP8 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP5 DUP9 LT PUSH3 0x1C3 JUMPI JUMPDEST ADD PUSH1 0x5 SHR ADD SWAP1 DUP7 SWAP1 JUMPDEST DUP3 DUP2 LT PUSH3 0x1B6 JUMPI POP POP PUSH3 0xBD JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE ADD DUP7 SWAP1 PUSH3 0x1A6 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x19D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH3 0xAB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH3 0x79 JUMP JUMPDEST SWAP1 DUP8 SWAP4 POP PUSH1 0x1F NOT DUP4 AND SWAP2 PUSH1 0x2 PUSH1 0x0 MSTORE DUP10 PUSH1 0x0 KECCAK256 SWAP3 PUSH1 0x0 JUMPDEST DUP12 DUP3 DUP3 LT PUSH3 0x263 JUMPI POP POP DUP5 GT PUSH3 0x249 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x2 SSTORE PUSH3 0x8E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH3 0x23A JUMP JUMPDEST DUP4 DUP6 ADD MLOAD DUP7 SSTORE DUP12 SWAP8 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP5 ADD SWAP4 ADD PUSH3 0x227 JUMP JUMPDEST SWAP1 SWAP2 POP PUSH1 0x2 PUSH1 0x0 MSTORE DUP8 PUSH1 0x0 KECCAK256 DUP6 DUP1 DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP3 DUP11 DUP7 LT PUSH3 0x2C7 JUMPI JUMPDEST SWAP2 DUP10 SWAP2 DUP7 SWAP6 SWAP5 SWAP4 ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH3 0x2B7 JUMPI POP POP PUSH3 0x62 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP DUP10 SWAP2 ADD PUSH3 0x2A7 JUMP JUMPDEST SWAP3 POP DUP2 SWAP3 PUSH3 0x299 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH3 0x48 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH3 0x1EE JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP3 MSTORE JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0x4634D8D EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x25D JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x24E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x2A55205A EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x226 JUMPI DUP1 PUSH4 0x5944C753 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x5A446215 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x5BBB2177 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x212 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x7E518EC8 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x8462151C EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x938E3D7B EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x98DD69C8 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x99A2557A EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1DB JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0xC23DC68F EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1CC JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0xDC8E92EA EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0xE8A3D485 EQ PUSH2 0x1B8 JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0x1B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C80 JUMP JUMPDEST PUSH2 0x1BD9 JUMP JUMPDEST PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x1AFB JUMP JUMPDEST PUSH2 0x1ACF JUMP JUMPDEST PUSH2 0x1955 JUMP JUMPDEST PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x17B9 JUMP JUMPDEST PUSH2 0x179D JUMP JUMPDEST PUSH2 0x1765 JUMP JUMPDEST PUSH2 0x16C7 JUMP JUMPDEST PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x1521 JUMP JUMPDEST PUSH2 0x14C1 JUMP JUMPDEST PUSH2 0x146E JUMP JUMPDEST PUSH2 0x139A JUMP JUMPDEST PUSH2 0x1260 JUMP JUMPDEST PUSH2 0x120A JUMP JUMPDEST PUSH2 0x11CE JUMP JUMPDEST PUSH2 0x1168 JUMP JUMPDEST PUSH2 0xF9E JUMP JUMPDEST PUSH2 0xD2C JUMP JUMPDEST PUSH2 0xD10 JUMP JUMPDEST PUSH2 0xCED JUMP JUMPDEST PUSH2 0xB9F JUMP JUMPDEST PUSH2 0xAD9 JUMP JUMPDEST PUSH2 0x996 JUMP JUMPDEST PUSH2 0x8C5 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH2 0x884 JUMP JUMPDEST PUSH2 0x81F JUMP JUMPDEST PUSH2 0x700 JUMP JUMPDEST PUSH2 0x686 JUMP JUMPDEST PUSH2 0x587 JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x29B JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x31D PUSH1 0x4 CALLDATALOAD PUSH2 0x2BB DUP2 PUSH2 0x26C JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP1 PUSH32 0x40C10F1900000000000000000000000000000000000000000000000000000000 EQ SWAP2 DUP3 ISZERO PUSH2 0x321 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE SWAP1 DUP2 SWAP1 PUSH1 0x20 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH32 0xC21B8F2800000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP3 POP SWAP1 DUP3 ISZERO PUSH2 0x41E JUMPI JUMPDEST DUP3 ISZERO PUSH2 0x38D JUMPI JUMPDEST POP DUP2 ISZERO PUSH2 0x37C JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x36C JUMPI JUMPDEST POP CODESIZE DUP1 PUSH2 0x309 JUMP JUMPDEST PUSH2 0x376 SWAP2 POP PUSH2 0x3C7D JUMP JUMPDEST CODESIZE PUSH2 0x364 JUMP JUMPDEST SWAP1 POP PUSH2 0x387 DUP2 PUSH2 0x3C7D JUMP JUMPDEST SWAP1 PUSH2 0x35D JUMP JUMPDEST SWAP1 SWAP2 POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3F4 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3CA JUMPI JUMPDEST POP SWAP1 CODESIZE PUSH2 0x355 JUMP JUMPDEST PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ CODESIZE PUSH2 0x3C2 JUMP JUMPDEST PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP2 POP PUSH2 0x3BB JUMP JUMPDEST PUSH32 0x8446A79E00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP3 POP PUSH2 0x34E JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x296 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x500 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI PUSH2 0x529 SWAP2 PUSH2 0x524 PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0x3BA5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x53E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x52E JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x56C DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x52B JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x584 SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x54E JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xD SLOAD PUSH2 0x5AA DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x5E0 JUMPI JUMPDEST PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEFE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x573 JUMP JUMPDEST SWAP3 POP PUSH1 0xD DUP4 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 JUMPDEST DUP3 DUP5 LT PUSH2 0x623 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x608 JUMP JUMPDEST DUP7 SWAP6 POP PUSH2 0x31D SWAP7 SWAP4 POP PUSH1 0x20 SWAP3 POP PUSH2 0x5D4 SWAP5 SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 SWAP4 PUSH2 0x5C4 JUMP JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x6A3 DUP2 PUSH2 0x2A31 JUMP JUMPDEST ISZERO PUSH2 0x6D6 JUMPI PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x714 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH2 0x736 DUP4 PUSH2 0x2992 JUMP JUMPDEST AND SWAP1 DUP2 CALLER SUB PUSH2 0x7B6 JUMPI JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND OR SWAP1 SSTORE SWAP4 AND SWAP1 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 DUP1 LOG4 DUP1 RETURN JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x7EF CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x740 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x0 SLOAD PUSH1 0x1 SLOAD SWAP1 SUB PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x3 NOT PUSH1 0x60 SWAP2 ADD SLT PUSH2 0x296 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x4 CALLDATALOAD DUP3 DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x296 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH2 0x529 PUSH2 0x890 CALLDATASIZE PUSH2 0x842 JUMP JUMPDEST SWAP2 PUSH2 0x2A73 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x8F3 DUP3 PUSH2 0xEC1 JUMP JUMPDEST SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP3 ADD MSTORE SWAP1 ISZERO PUSH2 0x988 JUMPI JUMPDEST PUSH2 0x95F PUSH2 0x2710 PUSH2 0x943 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x24 CALLDATALOAD PUSH2 0x23DD JUMP JUMPDEST DIV SWAP2 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE RETURN JUMPDEST POP PUSH2 0x991 PUSH2 0x237B JUMP JUMPDEST PUSH2 0x91F JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0xA3E PUSH2 0x9B5 PUSH2 0x46B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xA36 PUSH1 0x0 SWAP5 DUP1 DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x9E8 PUSH1 0x1 PUSH1 0x40 DUP9 KECCAK256 ADD SLOAD PUSH2 0x1E94 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0xA1F DUP6 PUSH1 0x40 DUP10 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0xA42 JUMPI PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 AND SWAP1 PUSH2 0x27AD JUMP JUMPDEST POP DUP1 RETURN JUMPDEST DUP1 DUP7 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0xA77 DUP5 PUSH1 0x40 DUP9 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP10 DUP1 LOG4 PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xAF2 PUSH2 0x46B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SUB PUSH2 0xB1B JUMPI PUSH2 0x529 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xBB8 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0xBC4 PUSH2 0x1DEA JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 SLOAD SWAP2 DUP2 ISZERO PUSH2 0xCC3 JUMPI PUSH2 0xBFA DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH9 0x10000000000000001 DUP4 MUL DUP2 SLOAD ADD SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SWAP2 AND SWAP2 DUP2 DUP2 EQ PUSH1 0xE1 SHL TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR PUSH2 0xC46 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP4 ADD SWAP3 DUP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 DUP1 DUP6 DUP9 DUP6 DUP2 DUP1 LOG4 ADD JUMPDEST DUP5 DUP2 SUB PUSH2 0xCB4 JUMPI POP POP POP ISZERO PUSH2 0xC8A JUMPI DUP2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x2E07630000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 DUP4 SWAP2 DUP6 DUP9 DUP6 DUP2 DUP1 LOG4 ADD PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xB562E8DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x529 PUSH2 0xCF9 CALLDATASIZE PUSH2 0x842 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0xD07 DUP5 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x0 DUP5 MSTORE PUSH2 0x2CF4 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x529 PUSH1 0x4 CALLDATALOAD PUSH2 0x3721 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0xD45 PUSH2 0x46B JUMP JUMPDEST PUSH2 0xD4D PUSH2 0x4B1 JUMP JUMPDEST SWAP1 PUSH2 0xD56 PUSH2 0x1CF0 JUMP JUMPDEST PUSH2 0xD72 PUSH2 0x2710 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND GT ISZERO PUSH2 0x3B1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0xE34 JUMPI PUSH2 0xDD1 PUSH2 0x529 SWAP3 PUSH2 0xDBC PUSH2 0xDA0 PUSH2 0xF21 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP5 AND DUP5 MSTORE JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH2 0xDE7 PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH1 0xA0 SHL PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20496E76616C696420706172616D65746572730000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xE92 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH1 0x1F NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF2E DUP3 PUSH2 0xEC1 JUMP JUMPDEST JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH2 0xF58 DUP3 PUSH2 0xF30 JUMP JUMPDEST SWAP2 PUSH2 0xF66 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEFE JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0x296 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP2 PUSH1 0x20 PUSH2 0x584 SWAP4 CALLDATALOAD SWAP2 ADD PUSH2 0xF4C JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0xFD0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0xFE9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST SWAP1 PUSH2 0xFF2 PUSH2 0x1E3F JUMP JUMPDEST DUP3 MLOAD SWAP1 DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x100F DUP2 PUSH2 0x100A PUSH1 0xD SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH2 0x32AC JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1050 JUMPI POP DUP2 SWAP1 PUSH2 0x529 SWAP5 PUSH1 0x0 SWAP3 PUSH2 0x1045 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE PUSH2 0x3470 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x102C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 MSTORE SWAP2 SWAP4 PUSH1 0x1F NOT DUP6 AND PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x10C3 JUMPI POP POP SWAP2 PUSH1 0x1 SWAP4 SWAP2 DUP7 PUSH2 0x529 SWAP8 SWAP5 LT PUSH2 0x10AA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE PUSH2 0x3470 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x109C JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x1082 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1102 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 DUP3 PUSH1 0x80 DUP3 PUSH2 0x115C PUSH1 0x1 SWAP5 DUP10 MLOAD PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST ADD SWAP6 ADD SWAP4 SWAP3 SWAP2 ADD PUSH2 0x10F4 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP2 DUP3 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x296 JUMPI PUSH2 0x31D SWAP2 PUSH1 0x24 PUSH2 0x11C2 SWAP3 ADD PUSH2 0x3033 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x10DB JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1201 PUSH1 0x4 CALLDATALOAD PUSH2 0x2992 JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH2 0x122D PUSH2 0x1228 PUSH2 0x448 JUMP JUMPDEST PUSH2 0x2931 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x20 PUSH1 0x3 NOT DUP3 ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x296 JUMPI PUSH2 0x584 SWAP2 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x126E CALLDATASIZE PUSH2 0x1235 JUMP JUMPDEST PUSH2 0x1276 PUSH2 0x1E3F JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x129B DUP2 PUSH2 0x1296 PUSH1 0xC SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH2 0x331D JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x12D8 JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x12CD JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xC SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x12B4 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x130B PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1347 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x132E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xC SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x1323 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x1310 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x1386 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x1378 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x13B3 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x13BF DUP4 PUSH2 0x2931 JUMP JUMPDEST SWAP2 PUSH2 0x13C9 DUP4 PUSH2 0x30C3 JUMP JUMPDEST SWAP4 PUSH2 0x13D2 PUSH2 0x2F19 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND SWAP2 DUP4 JUMPDEST DUP6 DUP6 SUB PUSH2 0x1403 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH2 0x31D DUP10 DUP3 PUSH2 0x135F JUMP JUMPDEST PUSH2 0x140C DUP2 PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x1465 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP2 AND PUSH2 0x145C JUMPI JUMPDEST POP PUSH1 0x1 SWAP1 DUP5 DUP5 DUP5 AND EQ PUSH2 0x1448 JUMPI JUMPDEST ADD PUSH2 0x13EE JUMP JUMPDEST DUP1 PUSH2 0x1456 DUP4 DUP9 ADD SWAP8 DUP11 PUSH2 0x301F JUMP JUMPDEST MSTORE PUSH2 0x1442 JUMP JUMPDEST SWAP2 POP PUSH1 0x1 PUSH2 0x1434 JUMP JUMPDEST POP PUSH1 0x1 SWAP1 PUSH2 0x1442 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x14B1 PUSH1 0x24 CALLDATALOAD PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x2777 JUMP JUMPDEST SWAP2 SWAP1 SLOAD PUSH1 0x40 MLOAD SWAP3 PUSH1 0x3 SHL SHR AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1515 PUSH2 0x14E1 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xA DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH2 0x152F CALLDATASIZE PUSH2 0x1235 JUMP JUMPDEST PUSH2 0x1537 PUSH2 0x1E3F JUMP JUMPDEST DUP1 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x155C DUP2 PUSH2 0x1557 PUSH1 0xF SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH2 0x338E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1599 JUMPI POP DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x158E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE PUSH1 0x0 DUP1 RETURN JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x1575 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP4 PUSH2 0x15CC PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP7 DUP3 LT PUSH2 0x1608 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x15EF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE STOP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x15E4 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x15D1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xE SLOAD PUSH2 0x1643 DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x166C JUMPI PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEFE JUMP JUMPDEST SWAP3 POP PUSH1 0xE DUP4 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD JUMPDEST DUP3 DUP5 LT PUSH2 0x16AF JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1694 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0xE0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x16E0 PUSH2 0x448 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF SWAP1 PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x1702 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD DUP4 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x171A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD DUP5 DUP2 GT PUSH2 0x296 JUMPI PUSH2 0x1732 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD SWAP5 DUP6 GT PUSH2 0x296 JUMPI PUSH2 0x174D PUSH2 0x529 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF83 JUMP JUMPDEST SWAP2 PUSH2 0x1756 PUSH2 0x48E JUMP JUMPDEST SWAP4 PUSH2 0x175F PUSH2 0x4CC JUMP JUMPDEST SWAP6 PUSH2 0x3952 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x60 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x31D PUSH2 0x1791 PUSH2 0x1784 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH2 0x30F4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x135F JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x17D2 PUSH2 0x448 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x296 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 CALLER PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH2 0x182D DUP2 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND PUSH1 0xFF DUP6 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE AND SWAP1 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 STOP JUMPDEST PUSH1 0x80 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x189C PUSH2 0x448 JUMP JUMPDEST PUSH2 0x18A4 PUSH2 0x46B JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP5 ADD SLT ISZERO PUSH2 0x296 JUMPI PUSH2 0x18D9 PUSH2 0x529 SWAP4 CALLDATASIZE SWAP1 PUSH1 0x24 DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP2 ADD PUSH2 0xF4C JUMP JUMPDEST SWAP2 PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x2CF4 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x80 PUSH2 0x1901 PUSH1 0x4 CALLDATALOAD PUSH2 0x2F4F JUMP JUMPDEST PUSH2 0x1953 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH3 0xFFFFFF PUSH1 0x60 DUP1 SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 MLOAD AND DUP6 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD ISZERO ISZERO PUSH1 0x40 DUP7 ADD MSTORE ADD MLOAD AND SWAP2 ADD MSTORE JUMP JUMPDEST RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x1973 DUP2 PUSH2 0x2A31 JUMP JUMPDEST ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP3 DUP3 PUSH1 0x0 PUSH1 0xC SLOAD PUSH2 0x198C DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP1 PUSH1 0x1 SWAP1 DUP2 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1A65 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1A06 JUMPI JUMPDEST POP POP PUSH2 0x19B4 SWAP3 POP SUB DUP4 PUSH2 0xEFE JUMP JUMPDEST DUP2 MLOAD ISZERO PUSH2 0x19F3 JUMPI PUSH2 0x31D SWAP3 PUSH2 0x19E5 PUSH2 0x19CE PUSH2 0x5D4 SWAP4 PUSH2 0x2ED0 JUMP JUMPDEST PUSH2 0x19DF PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 ADD SWAP1 PUSH2 0x1F76 JUMP JUMPDEST SWAP1 PUSH2 0x1F76 JUMP JUMPDEST SUB PUSH1 0x1F NOT DUP2 ADD DUP4 MSTORE DUP3 PUSH2 0xEFE JUMP JUMPDEST POP POP POP PUSH2 0x31D PUSH2 0x1A01 PUSH2 0x23F5 JUMP JUMPDEST PUSH2 0x5D4 JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1A4D JUMPI POP DUP8 SWAP5 POP POP DUP3 ADD ADD PUSH2 0x19B4 CODESIZE PUSH2 0x19A6 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1A35 JUMP JUMPDEST SWAP1 POP PUSH2 0x19B4 SWAP6 SWAP4 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 SWAP2 POP AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP6 SWAP3 CODESIZE PUSH2 0x19A6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH2 0x529 PUSH1 0x4 CALLDATALOAD PUSH2 0x1B1A PUSH2 0x46B JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x1B35 PUSH1 0x1 PUSH1 0x40 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH2 0x1E94 JUMP JUMPDEST PUSH2 0x2287 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x296 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x296 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x1B90 DUP3 PUSH2 0x1B3A JUMP JUMPDEST SWAP2 PUSH2 0x1B9E PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEFE JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 DUP5 DUP5 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x296 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1BCA JUMPI PUSH2 0x529 DUP5 PUSH2 0x391C JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE SWAP1 DUP5 ADD SWAP1 DUP5 ADD PUSH2 0x1BBA JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x0 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x683 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0xF SLOAD PUSH2 0x1BFC DUP2 PUSH2 0x3259 JUMP JUMPDEST DUP1 DUP6 MSTORE SWAP2 PUSH1 0x1 SWAP2 DUP1 DUP4 AND SWAP1 DUP2 ISZERO PUSH2 0x63B JUMPI POP PUSH1 0x1 EQ PUSH2 0x1C25 JUMPI PUSH2 0x31D DUP6 PUSH2 0x5D4 DUP2 DUP8 SUB DUP3 PUSH2 0xEFE JUMP JUMPDEST SWAP3 POP PUSH1 0xF DUP4 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 JUMPDEST DUP3 DUP5 LT PUSH2 0x1C68 JUMPI POP POP POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x5D4 DUP3 PUSH2 0x31D PUSH2 0x5C4 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x20 DUP6 DUP8 ADD DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP4 ADD SWAP3 DUP2 ADD PUSH2 0x1C4D JUMP JUMPDEST CALLVALUE PUSH2 0x296 JUMPI PUSH1 0x40 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x296 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x1515 PUSH2 0x1CA0 PUSH2 0x448 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x1CBD PUSH2 0x46B JUMP JUMPDEST SWAP2 AND PUSH1 0x0 MSTORE PUSH1 0x7 DUP5 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4A209273C9C71EAC8BEE506E444418998F8F452896D49B4EDFA61F22F2A2BD27 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1D29 JUMPI JUMP JUMPDEST PUSH2 0x1DE6 PUSH1 0x48 PUSH2 0x1DB4 PUSH2 0x1D3A CALLER PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x19E5 PUSH2 0x1D45 PUSH2 0x25A0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1D85 DUP2 MLOAD DUP1 SWAP3 PUSH1 0x20 PUSH1 0x37 DUP10 ADD SWAP2 ADD PUSH2 0x52B JUMP JUMPDEST DUP5 ADD PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x37 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x1F76 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE PUSH1 0x4 DUP4 ADD PUSH2 0x573 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAA1D7351356C4DDC11907B1EE0660F579CFDF507235AF2AE01ECD22A4B7CEAAE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E23 JUMPI JUMP JUMPDEST PUSH2 0x1DE6 PUSH1 0x48 PUSH2 0x1DB4 PUSH2 0x1E34 CALLER PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x19E5 PUSH2 0x1D45 PUSH2 0x263D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x2DE00ACBA1F3DD4B00004FA31871EAF6BD23564AF8ED1BBE52AC31593862E4A2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1E78 JUMPI JUMP JUMPDEST PUSH2 0x1DE6 PUSH1 0x48 PUSH2 0x1DB4 PUSH2 0x1E89 CALLER PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x19E5 PUSH2 0x1D45 PUSH2 0x26DA JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x1ECD CALLER PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND ISZERO PUSH2 0x1ED7 JUMPI POP JUMP JUMPDEST PUSH2 0x1EE0 CALLER PUSH2 0x2503 JUMP JUMPDEST PUSH2 0x1EE8 PUSH2 0x2408 JUMP JUMPDEST SWAP2 PUSH1 0x30 PUSH2 0x1EF4 DUP5 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x1F00 DUP5 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x41 JUMPDEST PUSH1 0x1 DUP2 GT PUSH2 0x1F23 JUMPI PUSH2 0x1DE6 PUSH1 0x48 PUSH2 0x1DB4 DUP6 PUSH2 0x19E5 DUP9 PUSH2 0x1D45 DUP9 ISZERO PUSH2 0x249E JUMP JUMPDEST SWAP1 PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x1F6C SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP8 PUSH2 0x2480 JUMP JUMPDEST MSTORE8 PUSH1 0x4 SHR SWAP2 PUSH2 0x2491 JUMP JUMPDEST PUSH2 0x1F04 JUMP JUMPDEST PUSH2 0x2434 JUMP JUMPDEST SWAP1 PUSH2 0x1F89 PUSH1 0x20 SWAP3 DUP3 DUP2 MLOAD SWAP5 DUP6 SWAP3 ADD PUSH2 0x52B JUMP JUMPDEST ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD PUSH2 0x1FF5 SWAP5 SWAP4 SWAP3 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0x1FF8 JUMPI JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x27AD JUMP JUMPDEST POP JUMP JUMPDEST DUP1 DUP1 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x202C DUP5 DUP4 DUP4 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP4 DUP6 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH2 0x1FE4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x2DE00ACBA1F3DD4B00004FA31871EAF6BD23564AF8ED1BBE52AC31593862E4A2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x1FF5 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 SWAP1 PUSH1 0xFF SWAP1 JUMPDEST SLOAD AND ISZERO PUSH2 0x210E JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x27AD JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x2142 DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP3 SLOAD AND OR SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP6 DUP1 LOG4 PUSH2 0x20FE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x4A209273C9C71EAC8BEE506E444418998F8F452896D49B4EDFA61F22F2A2BD27 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x1FF5 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x20F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAA1D7351356C4DDC11907B1EE0660F579CFDF507235AF2AE01ECD22A4B7CEAAE PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH2 0x1FF5 SWAP5 SWAP4 SWAP3 SWAP1 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x20F6 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH2 0x1FF5 SWAP4 PUSH1 0x0 SWAP1 DUP1 DUP3 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0xFF PUSH2 0x22DC DUP7 DUP6 DUP6 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH2 0x22F3 JUMPI JUMPDEST DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE KECCAK256 SWAP2 AND SWAP1 PUSH2 0x287C JUMP JUMPDEST DUP1 DUP3 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH2 0x2327 DUP6 DUP5 DUP5 KECCAK256 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 DUP2 SLOAD AND SWAP1 SSTORE CALLER DUP5 DUP7 AND DUP3 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B DUP6 DUP1 LOG4 PUSH2 0x22E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2388 DUP3 PUSH2 0xEC1 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP4 MSTORE PUSH1 0xA0 SHR PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x23F0 JUMPI JUMP JUMPDEST PUSH2 0x23AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x2402 DUP3 PUSH2 0xEE2 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE PUSH1 0x42 DUP3 MSTORE PUSH1 0x60 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x21 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1F71 JUMPI ADD PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x23F0 JUMPI PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x24A5 JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE PUSH1 0x2A DUP3 MSTORE PUSH1 0x40 CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x30 PUSH2 0x2538 DUP4 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x2544 DUP4 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x29 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x255C JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x249E JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x259A SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH2 0x2549 JUMP JUMPDEST PUSH32 0x6DB4061A20CA83A3BE756EE172BD37A029093AC5AFE4CE968C6D5435B43CB011 PUSH2 0x25C9 PUSH2 0x2408 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x25D5 DUP4 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x25E1 DUP4 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x25F9 JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x249E JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x2637 SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH2 0x25E6 JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x2666 PUSH2 0x2408 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x2672 DUP4 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x267E DUP4 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x2696 JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x249E JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x26D4 SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH32 0xE02A0315B383857AC496E9D2B2546A699AFAEB4E5E83A1FDEF64376D0B74E5A5 PUSH2 0x2703 PUSH2 0x2408 JUMP JUMPDEST SWAP1 PUSH1 0x30 PUSH2 0x270F DUP4 PUSH2 0x2463 JUMP JUMPDEST MSTORE8 PUSH1 0x78 PUSH2 0x271B DUP4 PUSH2 0x2470 JUMP JUMPDEST MSTORE8 PUSH1 0x41 SWAP1 JUMPDEST PUSH1 0x1 DUP3 GT PUSH2 0x2733 JUMPI PUSH2 0x584 SWAP2 POP ISZERO PUSH2 0x249E JUMP JUMPDEST PUSH1 0xF DUP2 AND SWAP1 PUSH1 0x10 DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH2 0x2771 SWAP3 BYTE PUSH2 0x1F62 DUP5 DUP7 PUSH2 0x2480 JUMP JUMPDEST SWAP1 PUSH2 0x2720 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST SWAP2 PUSH2 0x27A9 SWAP2 DUP4 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD ISZERO PUSH1 0x0 EQ PUSH2 0x281B JUMPI DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0xEDD JUMPI PUSH2 0x2806 PUSH2 0x27EF DUP3 PUSH1 0x1 DUP8 SWAP5 ADD DUP6 SSTORE DUP5 PUSH2 0x2777 JUMP JUMPDEST DUP2 SWAP4 SWAP2 SLOAD SWAP1 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SWAP3 DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 JUMP JUMPDEST SWAP1 SSTORE SLOAD SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD SWAP1 DUP2 ISZERO PUSH2 0x284D JUMPI PUSH1 0x0 NOT DUP1 SWAP3 ADD SWAP2 PUSH2 0x283D DUP4 DUP4 PUSH2 0x2777 JUMP JUMPDEST SWAP1 SWAP2 DUP3 SLOAD SWAP2 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE SSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 ADD SWAP2 DUP1 PUSH1 0x0 MSTORE DUP3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP3 DUP4 ISZERO ISZERO PUSH1 0x0 EQ PUSH2 0x2928 JUMPI PUSH1 0x0 NOT SWAP3 DUP4 DUP6 ADD SWAP1 DUP6 DUP3 GT PUSH2 0x23F0 JUMPI DUP1 SLOAD SWAP5 DUP6 ADD SWAP5 DUP6 GT PUSH2 0x23F0 JUMPI PUSH1 0x0 SWAP6 DUP6 DUP4 PUSH2 0x28D0 SWAP5 PUSH2 0x28DF SWAP9 SUB PUSH2 0x28E5 JUMPI JUMPDEST POP POP POP PUSH2 0x2823 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x290F PUSH2 0x2909 SWAP2 PUSH2 0x28F9 PUSH2 0x291F SWAP5 DUP8 PUSH2 0x2777 JUMP JUMPDEST SWAP1 SLOAD SWAP1 PUSH1 0x3 SHL SHR SWAP3 DUP4 SWAP2 DUP8 PUSH2 0x2777 JUMP JUMPDEST SWAP1 PUSH2 0x278F JUMP JUMPDEST DUP6 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 DUP1 PUSH2 0x28C8 JUMP JUMPDEST POP POP POP POP PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP1 ISZERO PUSH2 0x2968 JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x29C8 JUMPI JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP2 MSTORE PUSH1 0x4 SWAP1 PUSH1 0x20 SWAP2 DUP1 DUP4 MSTORE PUSH1 0x40 SWAP3 DUP4 DUP4 KECCAK256 SLOAD SWAP5 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP7 AND ISZERO PUSH2 0x2A08 JUMPI POP POP POP PUSH2 0x299E JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 SWAP4 JUMPDEST DUP6 ISZERO PUSH2 0x2A1C JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT ADD DUP1 DUP4 MSTORE DUP2 DUP6 MSTORE DUP4 DUP4 KECCAK256 SLOAD SWAP6 POP PUSH2 0x2A0E JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 LT SWAP1 DUP2 PUSH2 0x2A40 JUMPI POP SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND ISZERO SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x2A7D DUP4 PUSH2 0x2992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 DUP5 AND SWAP3 DUP4 DUP3 DUP5 AND SUB PUSH2 0x2CCA JUMPI PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 PUSH2 0x2ADB PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP5 EQ OR ISZERO SWAP1 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x2C3B JUMPI JUMPDEST DUP3 AND SWAP6 DUP7 ISZERO PUSH2 0x2C11 JUMPI PUSH2 0x2B4B SWAP4 PUSH2 0x2B1D SWAP3 PUSH2 0x2C07 JUMPI JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP1 TIMESTAMP PUSH1 0xA0 SHL DUP6 OR OR PUSH2 0x2B8C DUP7 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE DUP2 AND ISZERO PUSH2 0x2BBD JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x2BD5 DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x2BE2 JUMPI JUMPDEST POP PUSH2 0x2B95 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x2BDC JUMPI PUSH2 0x2BFF SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x2BDC JUMP JUMPDEST PUSH1 0x0 SWAP1 SSTORE CODESIZE PUSH2 0x2AF6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x2C9B PUSH2 0x2AD7 PUSH2 0x2C94 CALLER PUSH2 0x2C6F DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2AE0 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x2D02 DUP3 DUP3 DUP7 PUSH2 0x2A73 JUMP JUMPDEST DUP1 EXTCODESIZE PUSH2 0x2D0F JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2D18 SWAP4 PUSH2 0x2DD1 JUMP JUMPDEST ISZERO PUSH2 0x2D26 JUMPI CODESIZE DUP1 DUP1 DUP1 PUSH2 0x2D09 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x296 JUMPI MLOAD PUSH2 0x584 DUP2 PUSH2 0x26C JUMP JUMPDEST SWAP1 SWAP3 PUSH2 0x584 SWAP5 SWAP4 PUSH1 0x80 SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND DUP5 MSTORE AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE ADD SWAP1 PUSH2 0x54E JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x2DCC JUMPI RETURNDATASIZE SWAP1 PUSH2 0x2DB2 DUP3 PUSH2 0xF30 JUMP JUMPDEST SWAP2 PUSH2 0x2DC0 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEFE JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x20 SWAP2 PUSH2 0x2E28 SWAP4 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD DUP1 SWAP8 DUP2 SWAP7 DUP3 SWAP6 PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP12 DUP13 DUP6 MSTORE CALLER PUSH1 0x4 DUP7 ADD PUSH2 0x2D65 JUMP JUMPDEST SUB SWAP4 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x2EA0 JUMPI JUMPDEST POP PUSH2 0x2E7A JUMPI PUSH2 0x2E43 PUSH2 0x2DA1 JUMP JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0x2E75 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND EQ SWAP1 JUMP JUMPDEST PUSH2 0x2EC2 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x2EC9 JUMPI JUMPDEST PUSH2 0x2EBA DUP2 DUP4 PUSH2 0xEFE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2D50 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x2E36 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x2EB0 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x0 NOT PUSH1 0x80 DUP3 ADD SWAP4 PUSH1 0x0 DUP6 MSTORE SWAP4 JUMPDEST ADD SWAP3 PUSH1 0xA SWAP1 DUP2 DUP2 MOD PUSH1 0x30 ADD DUP6 MSTORE8 DIV SWAP3 DUP4 ISZERO PUSH2 0x2F07 JUMPI PUSH1 0x0 NOT SWAP1 PUSH2 0x2EE9 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP4 PUSH1 0x1F NOT SWAP3 SUB ADD SWAP3 ADD SWAP2 DUP3 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0xEDD JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x60 DUP4 DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH2 0x2F57 PUSH2 0x2F19 JUMP JUMPDEST POP PUSH2 0x2F60 PUSH2 0x2F19 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP3 LT ISZERO PUSH2 0x2F98 JUMPI POP PUSH2 0x2F74 DUP2 PUSH2 0x2F9D JUMP JUMPDEST PUSH1 0x40 DUP2 ADD MLOAD PUSH2 0x2F98 JUMPI POP PUSH2 0x2F93 PUSH2 0x584 SWAP2 PUSH2 0x2F8D PUSH2 0x2F19 JUMP JUMPDEST POP PUSH2 0x2992 JUMP JUMPDEST PUSH2 0x2FB8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2FA5 PUSH2 0x2F19 JUMP JUMPDEST POP PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x584 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD JUMPDEST SWAP1 PUSH2 0x2FC1 PUSH2 0x2F19 JUMP JUMPDEST SWAP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP4 MSTORE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0xA0 SHR AND PUSH1 0x20 DUP5 ADD MSTORE PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO ISZERO PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xE8 SHR PUSH1 0x60 DUP4 ADD MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1F71 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH2 0x303C DUP3 PUSH2 0x1B3A JUMP JUMPDEST SWAP2 PUSH2 0x304A PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEFE JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x1F NOT PUSH2 0x3059 DUP3 PUSH2 0x1B3A JUMP JUMPDEST ADD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x30AC JUMPI POP POP PUSH1 0x0 JUMPDEST DUP2 DUP2 SUB PUSH2 0x3076 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F71 JUMPI DUP1 PUSH2 0x3090 PUSH1 0x1 SWAP3 PUSH1 0x5 SHL DUP6 ADD CALLDATALOAD PUSH2 0x2F4F JUMP JUMPDEST PUSH2 0x309A DUP3 DUP8 PUSH2 0x301F JUMP JUMPDEST MSTORE PUSH2 0x30A5 DUP2 DUP7 PUSH2 0x301F JUMP JUMPDEST POP ADD PUSH2 0x3069 JUMP JUMPDEST PUSH1 0x20 SWAP1 PUSH2 0x30B7 PUSH2 0x2F19 JUMP JUMPDEST DUP3 DUP3 DUP9 ADD ADD MSTORE ADD PUSH2 0x305D JUMP JUMPDEST SWAP1 PUSH2 0x30CD DUP3 PUSH2 0x1B3A JUMP JUMPDEST PUSH2 0x30DA PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH2 0xEFE JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x1F NOT PUSH2 0x30EA DUP3 SWAP5 PUSH2 0x1B3A JUMP JUMPDEST ADD SWAP1 PUSH1 0x20 CALLDATASIZE SWAP2 ADD CALLDATACOPY JUMP JUMPDEST SWAP1 DUP3 DUP2 LT ISZERO PUSH2 0x322F JUMPI PUSH1 0x0 SWAP2 DUP3 SLOAD DUP1 DUP6 GT PUSH2 0x3227 JUMPI JUMPDEST POP PUSH2 0x3114 DUP2 PUSH2 0x2931 JUMP JUMPDEST DUP5 DUP4 LT ISZERO PUSH2 0x3220 JUMPI DUP3 DUP6 SUB DUP2 DUP2 LT PUSH2 0x3218 JUMPI JUMPDEST POP JUMPDEST PUSH2 0x3132 DUP2 PUSH2 0x30C3 JUMP JUMPDEST SWAP6 DUP2 ISZERO PUSH2 0x3210 JUMPI PUSH2 0x3142 DUP5 PUSH2 0x2F4F JUMP JUMPDEST SWAP2 DUP6 SWAP5 PUSH1 0x40 SWAP4 PUSH2 0x3157 PUSH2 0x2AD7 DUP7 DUP4 ADD MLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x31F1 JUMPI JUMPDEST POP JUMPDEST DUP8 DUP2 EQ ISZERO DUP1 PUSH2 0x31E7 JUMPI JUMPDEST ISZERO PUSH2 0x31DA JUMPI PUSH2 0x3176 DUP2 PUSH2 0x2F9D JUMP JUMPDEST DUP1 DUP6 ADD MLOAD PUSH2 0x31D1 JUMPI MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 AND DUP1 PUSH2 0x31C8 JUMPI JUMPDEST POP SWAP1 DUP2 PUSH1 0x1 SWAP3 DUP8 AND SWAP1 DUP9 AND EQ PUSH2 0x31B4 JUMPI JUMPDEST ADD PUSH2 0x315E JUMP JUMPDEST DUP1 PUSH2 0x31C2 DUP4 DUP11 ADD SWAP10 DUP13 PUSH2 0x301F JUMP JUMPDEST MSTORE PUSH2 0x31AE JUMP JUMPDEST SWAP7 POP PUSH1 0x1 PUSH2 0x319D JUMP JUMPDEST POP PUSH1 0x1 SWAP1 PUSH2 0x31AE JUMP JUMPDEST POP POP SWAP6 SWAP5 POP POP POP POP DUP2 MSTORE SWAP1 JUMP JUMPDEST POP DUP2 DUP8 EQ ISZERO PUSH2 0x3168 JUMP JUMPDEST MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP6 POP CODESIZE PUSH2 0x315C JUMP JUMPDEST SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP1 POP CODESIZE PUSH2 0x3127 JUMP JUMPDEST POP DUP3 PUSH2 0x3129 JUMP JUMPDEST SWAP4 POP CODESIZE PUSH2 0x310A JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x32C1995A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x32A2 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x3273 JUMPI JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x3268 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x32B8 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xD DUP3 MSTORE PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3313 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3308 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x32FC JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x32F3 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x3329 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xC DUP3 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3384 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x3379 JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x336D JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3364 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x339A JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xF DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x33F5 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x33EA JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x33DE JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x33D5 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x340B JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 PUSH1 0xE DUP3 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 PUSH1 0x20 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP4 ADD SWAP5 LT PUSH2 0x3466 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP2 JUMPDEST DUP3 DUP2 LT PUSH2 0x345B JUMPI POP POP POP JUMP JUMPDEST DUP2 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x344F JUMP JUMPDEST SWAP1 SWAP3 POP DUP3 SWAP1 PUSH2 0x3446 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x3496 DUP2 PUSH2 0x3491 PUSH1 0xE SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH2 0x33FF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x34D1 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x34C6 JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xE SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x34B0 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x3504 PUSH1 0xE PUSH1 0x0 MSTORE PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3541 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x3528 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xE SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x351D JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x3509 JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x357A DUP2 PUSH2 0x1296 PUSH1 0xC SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x35B5 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x35AA JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xC SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3594 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x35E8 PUSH1 0xC PUSH1 0x0 MSTORE PUSH32 0xDF6966C971051C3D54EC59162606531493A51404A002842F56009D7E5CF4A8C7 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3625 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x360C JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xC SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3601 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x35ED JUMP JUMPDEST SWAP1 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xEDD JUMPI PUSH2 0x365E DUP2 PUSH2 0x1557 PUSH1 0xF SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x3699 JUMPI POP DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x368E JUMPI JUMPDEST POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x3678 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP5 PUSH2 0x36CC PUSH1 0xF PUSH1 0x0 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 SWAP1 JUMP JUMPDEST SWAP3 PUSH1 0x0 SWAP1 JUMPDEST DUP8 DUP3 LT PUSH2 0x3709 JUMPI POP POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x36F0 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0xF SSTORE JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x36E5 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP6 SWAP7 DUP3 SWAP5 SWAP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD SWAP1 PUSH2 0x36D1 JUMP JUMPDEST PUSH2 0x372A DUP2 PUSH2 0x2992 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x3758 DUP4 PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 JUMP JUMPDEST SWAP3 SWAP1 PUSH2 0x3780 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND CALLER SWAP1 DUP2 EQ SWAP1 DUP7 EQ OR ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x38B9 JUMPI JUMPDEST PUSH1 0x0 SWAP4 PUSH2 0x38B0 JUMPI JUMPDEST POP PUSH2 0x37B8 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD ADD SWAP1 SSTORE PUSH29 0x300000000000000000000000000000000000000000000000000000000 TIMESTAMP PUSH1 0xA0 SHL DUP4 OR OR PUSH2 0x3807 DUP6 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO PUSH2 0x3867 JUMPI JUMPDEST POP PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP3 DUP1 LOG4 PUSH2 0xF2E PUSH2 0x3862 PUSH1 0x1 SLOAD PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0x1 DUP5 ADD PUSH2 0x387F DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD ISZERO PUSH2 0x388C JUMPI JUMPDEST POP PUSH2 0x382E JUMP JUMPDEST DUP4 SLOAD DUP2 EQ PUSH2 0x3886 JUMPI PUSH2 0x38A8 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE CODESIZE DUP1 PUSH2 0x3886 JUMP JUMPDEST DUP4 SWAP1 SSTORE CODESIZE PUSH2 0x378D JUMP JUMPDEST PUSH2 0x38ED PUSH2 0x2AD7 PUSH2 0x2C94 CALLER PUSH2 0x2C6F DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x3785 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP1 MLOAD SWAP1 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x392E JUMPI POP POP POP JUMP JUMPDEST PUSH2 0x3941 PUSH2 0x393B DUP3 DUP5 PUSH2 0x301F JUMP JUMPDEST MLOAD PUSH2 0x3721 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x23F0 JUMPI PUSH1 0x1 ADD PUSH2 0x3922 JUMP JUMPDEST SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND CALLER EQ DUP1 ISZERO SWAP1 PUSH2 0x3B0E JUMPI JUMPDEST PUSH2 0x3AE4 JUMPI DUP1 MLOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0xEDD JUMPI PUSH2 0x39BE DUP3 PUSH2 0x100A PUSH1 0xD SLOAD PUSH2 0x3259 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x3A61 JUMPI POP SWAP4 PUSH2 0x3A07 PUSH2 0x3A11 SWAP5 DUP5 PUSH2 0x3A31 SWAP12 SWAP11 SWAP9 SWAP6 PUSH2 0x3A0C SWAP6 PUSH2 0x3A2C SWAP12 SWAP10 PUSH1 0x0 SWAP3 PUSH2 0x1045 JUMPI POP POP PUSH1 0x0 NOT DUP3 PUSH1 0x1 SHL SWAP3 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0xD SSTORE PUSH2 0x3470 JUMP JUMPDEST PUSH2 0x3559 JUMP JUMPDEST PUSH2 0x363D JUMP JUMPDEST PUSH2 0x3A1A DUP5 PUSH2 0x1F8D JUMP JUMPDEST PUSH2 0x3A23 DUP5 PUSH2 0x2083 JUMP JUMPDEST PUSH2 0x524 DUP5 PUSH2 0x2199 JUMP JUMPDEST PUSH2 0x2210 JUMP JUMPDEST PUSH2 0xF2E PUSH1 0x1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 PUSH1 0x10 SLOAD AND OR PUSH1 0x10 SSTORE JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 MSTORE SWAP2 SWAP1 PUSH1 0x1F NOT DUP5 AND PUSH32 0xD7B6990105719101DABEB77144F2A3385C8033ACD3AF97E9423A695E81AD1EB5 SWAP4 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x3ACC JUMPI POP POP SWAP5 PUSH1 0x1 DUP6 PUSH2 0x3A0C SWAP6 PUSH2 0x3A2C SWAP12 SWAP10 SWAP6 PUSH2 0x3A07 SWAP6 PUSH2 0x3A31 SWAP16 SWAP15 SWAP13 SWAP10 PUSH2 0x3A11 SWAP12 LT PUSH2 0x10AA JUMPI POP POP POP DUP2 SHL ADD PUSH1 0xD SSTORE PUSH2 0x3470 JUMP JUMPDEST DUP1 PUSH1 0x1 DUP7 SWAP8 DUP3 SWAP5 SWAP8 DUP8 ADD MLOAD DUP2 SSTORE ADD SWAP7 ADD SWAP5 ADD SWAP1 PUSH2 0x3A93 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x10 SLOAD AND PUSH2 0x3999 JUMP JUMPDEST ISZERO PUSH2 0x3B21 JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20726F79616C7479206665652077696C6C20657863656564 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2073616C65507269636500000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP2 PUSH2 0x3BD8 PUSH2 0x2710 DUP5 GT ISZERO PUSH2 0x3B1A JUMP JUMPDEST AND SWAP2 DUP3 ISZERO PUSH2 0x3C1F JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP2 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0x3C10 DUP2 PUSH2 0xEC1 JUMP JUMPDEST DUP6 DUP2 MSTORE ADD MSTORE PUSH1 0xA0 SHL AND OR PUSH1 0x8 SSTORE JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243323938313A20696E76616C696420726563656976657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH2 0x3C86 DUP2 PUSH2 0x3D6C JUMP JUMPDEST SWAP1 DUP2 ISZERO PUSH2 0x3CD4 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3CA9 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x3C9F JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x584 SWAP2 POP PUSH2 0x3CE5 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND ISZERO SWAP2 POP PUSH2 0x3C95 JUMP JUMPDEST SWAP1 POP PUSH2 0x3CDF DUP2 PUSH2 0x3CE5 JUMP JUMPDEST SWAP1 PUSH2 0x3C8E JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND SWAP1 PUSH32 0x5A05180F00000000000000000000000000000000000000000000000000000000 DUP3 EQ SWAP2 DUP3 ISZERO PUSH2 0x3D38 JUMPI POP POP SWAP1 JUMP JUMPDEST PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP DUP2 ISZERO PUSH2 0x3D66 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x584 SWAP2 POP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x2A55205A00000000000000000000000000000000000000000000000000000000 DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x3DBC JUMPI POP SWAP1 JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 SWAP2 POP EQ SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDB ADDMOD 0xCB POP SWAP9 0xB1 0x22 DUP8 SWAP4 PUSH20 0xFC1576CBEB220975504B788E70CCCC47BB354EAB 0xCF JUMPI PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "450:1824:34:-:0;;;;-1:-1:-1;;;;;450:1824:34;;;;;;;;;;-1:-1:-1;;450:1824:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;450:1824:34;;;;;;;955:12:4;719:10:14;955:12:4;:::i;:::-;450:1824:34;;721:17;;;;;;;;;;;;;;;;;;;-1:-1:-1;;721:17:34;;;;;;;;;;450:1824;;;1048:37:27;;;;;;;;;;;;;;;;;450:1824:34;1048:37:27;;;;450:1824:34;;;1048:37:27;;;;;;;;;1123:12;450:1824:34;;;;;;;;;;;;;;;;1123:12:27;:::i;:::-;450:1824:34;;;;;;;;1048:37:27;450:1824:34;;;;;;;;;;;;1048:37:27;-1:-1:-1;;;450:1824:34;;;;;;;;721:17;450:1824;;;;;;;;;721:17;450:1824;;;-1:-1:-1;450:1824:34;;;;;-1:-1:-1;450:1824:34;;-1:-1:-1;450:1824:34;;2426:187:4;2518:6;450:1824:34;;-1:-1:-1;;;;;450:1824:34;;;-1:-1:-1;;;;;;450:1824:34;;;;;;;;;2566:40:4;;2518:6;2566:40;2426:187::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 2016,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 2183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_address_string_string_string_string_address_uint96": {
									"entryPoint": 2529,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 2462,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2427,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"finalize_allocation_4470": {
									"entryPoint": 2051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkOwner": {
									"entryPoint": 2300,
									"id": 593,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6040608081526004908136101561001557600080fd5b600091823560e01c80631bce45831461072157806325a570b8146102e757806359659e9014610294578063715018a6146101f45780638da5cb5b1461019f5763f2fde38b1461006357600080fd5b3461019b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019b5761009a6107e0565b906100a36108fc565b73ffffffffffffffffffffffffffffffffffffffff809216928315610118575050600054827fffffffffffffffffffffffff0000000000000000000000000000000000000000821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b90602060849251917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b8280fd5b5050346101f057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f05773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b5080fd5b833461029157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102915761022b6108fc565b600073ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b5050346101f057817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f05760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b508290346101f0576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101f0576103226107e0565b9273ffffffffffffffffffffffffffffffffffffffff92602435848116810361070c5767ffffffffffffffff9360443585811161071d576103669036908301610887565b956064358681116107195761037e9036908401610887565b608435878111610715576103959036908501610887565b60a435888111610711576103ac9036908601610887565b9060c43592848416840361070c5760e435946bffffffffffffffffffffffff861686036105fd578b9c8a9b9c999a5160209e8f91808c8b8b8b8b8b898701986103f5968a6109e1565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810182526104259082610846565b5190208d519e90918f019081118f8210176106de578f918f8f928f816068916104af93875284526001549061049f87519586938a85019889527fffffffffffffffffffffffffffffffffffffffff00000000000000000000000090818d60601b168b87015260601b1660548501525180928585019061097b565b8101036048810184520182610846565b519020916111eb9151906104c581840183610846565b828252810191610a68833980511561068057518492918ef5169c8d156106235760015483169291908e3b1561061f578c928f918f9361054786928e9651988997889687957fcf7a1d770000000000000000000000000000000000000000000000000000000087521690850152602484015260606044840152606483019061099e565b03925af1801561061557908a91610601575b50508a3b156105fd579161059e939189979695938b51998a9889987f98dd69c8000000000000000000000000000000000000000000000000000000008a5289016109e1565b038183885af180156105f3576105df575b50507fd8ad75647a93de9d8d617559d87f1c27bc23fb6237b94054baf34aafbe85ad03838251848152a151908152f35b6105e98291610803565b61029157806105af565b83513d84823e3d90fd5b8880fd5b61060a90610803565b6105fd57888d610559565b8b513d8c823e3d90fd5b8c80fd5b506064888f8e51917f08c379a0000000000000000000000000000000000000000000000000000000008352820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152fd5b5050506064888f808f51927f08c379a000000000000000000000000000000000000000000000000000000000845283015260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152fd5b60418a7f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b600080fd5b8680fd5b8580fd5b8480fd5b8380fd5b50903461019b5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261019b578261075b6107e0565b6107636108fc565b73ffffffffffffffffffffffffffffffffffffffff90816001541690813b1561071d5783602492865197889586947f3659cfe600000000000000000000000000000000000000000000000000000000865216908401525af19081156107d757506107cb575080f35b6107d490610803565b80f35b513d84823e3d90fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361070c57565b67ffffffffffffffff811161081757604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761081757604052565b81601f8201121561070c5780359067ffffffffffffffff821161081757604051926108da60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8601160185610846565b8284526020838301011161070c57816000926020809301838601378301015290565b73ffffffffffffffffffffffffffffffffffffffff60005416330361091d57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60005b83811061098e5750506000910152565b818101518382015260200161097e565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f6020936109da8151809281875287808801910161097b565b0116010190565b9597969294610a4c6bffffffffffffffffffffffff95610a3e60c098610a30610a5a969760e060208e73ffffffffffffffffffffffffffffffffffffffff809c168152015260e08d019061099e565b908b820360408d015261099e565b9089820360608b015261099e565b90878203608089015261099e565b961660a08501521691015256fe60808060405234610016576111cf908161001c8239f35b600080fdfe604060808152366103825773ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000917fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000843516146100c057600484517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b6100c8611192565b60049136831161037e5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261037e578235916101088361067f565b602435926101158461067f565b60443567ffffffffffffffff811161037a57610135839136908801610789565b941692156103525761014791166107e3565b803b156102cf578451907f5c60da1b000000000000000000000000000000000000000000000000000000009384835260209687848381865afa9384156102a657889461019d9189916102b2575b503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff85161790555194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab575b610242575b8361023c6107d0565b80519101f35b8592839182525afa9182156102a65761026a9392610277575b506102646109b1565b91610a21565b5038808083818080610233565b610298919250843d861161029f575b610290818361070e565b810190610902565b903861025b565b503d610286565b61091a565b508661022e565b6102c99150863d881161029f57610290818361070e565b38610194565b60848360208751917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b8487517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8680fd5b8380fd5b73ffffffffffffffffffffffffffffffffffffffff807fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035416158015610b94576000907fcf7a1d77000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000833516146104395760046040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b610441611192565b60049236841161067b5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261067b5783356104808161067f565b6024359161048d8361067f565b60443567ffffffffffffffff8111610677576104ad829136908901610789565b9316931561064e576104bf91166107e3565b813b156105ca576040517f5c60da1b000000000000000000000000000000000000000000000000000000009283825260209586838281855afa9283156102a65787936105149188916105b357503b1515610926565b7fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d5080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff841617905560405194827f1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e8880a28451158015906102ab57610242578361023c6107d0565b6102c99150853d871161029f57610290818361070e565b6084846020604051917f08c379a0000000000000000000000000000000000000000000000000000000008352820152602560248201527f455243313936373a206e657720626561636f6e206973206e6f74206120636f6e60448201527f74726163740000000000000000000000000000000000000000000000000000006064820152fd5b856040517ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b8580fd5b8280fd5b73ffffffffffffffffffffffffffffffffffffffff81160361069d57565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176106ed57604052565b6106a2565b6040810190811067ffffffffffffffff8211176106ed57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176106ed57604052565b67ffffffffffffffff81116106ed57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b81601f8201121561069d578035906107a08261074f565b926107ae604051948561070e565b8284526020838301011161069d57816000926020809301838601378301015290565b604051906107dd826106d1565b60008252565b7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61039081547f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f604080519373ffffffffffffffffffffffffffffffffffffffff9081851686521693846020820152a1811561087e577fffffffffffffffffffffffff000000000000000000000000000000000000000016179055565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f455243313936373a206e65772061646d696e20697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152fd5b9081602091031261069d57516109178161067f565b90565b6040513d6000823e3d90fd5b1561092d57565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f455243313936373a20626561636f6e20696d706c656d656e746174696f6e206960448201527f73206e6f74206120636f6e7472616374000000000000000000000000000000006064820152fd5b604051906060820182811067ffffffffffffffff8211176106ed57604052602782527f206661696c6564000000000000000000000000000000000000000000000000006040837f416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c60208201520152565b6000806109179493602081519101845af43d15610a60573d91610a438361074f565b92610a51604051948561070e565b83523d6000602085013e610acd565b606091610acd565b15610a6f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b91929015610aed5750815115610ae1575090565b610917903b1515610a68565b825190915015610b005750805190602001fd5b604051907f08c379a000000000000000000000000000000000000000000000000000000000825281602080600483015282519283602484015260005b848110610b7d575050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f836000604480968601015201168101030190fd5b818101830151868201604401528593508201610b3c565b610bee610bd57fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b3303610d14576000357fffffffff00000000000000000000000000000000000000000000000000000000167f3659cfe6000000000000000000000000000000000000000000000000000000008103610c515750610c49610f0f565b602081519101f35b7f4f1ef286000000000000000000000000000000000000000000000000000000008103610c865750610c81611083565b610c49565b7f8f283970000000000000000000000000000000000000000000000000000000008103610cb65750610c81610ec5565b7ff851a440000000000000000000000000000000000000000000000000000000008103610ce65750610c81610dfd565b7f5c60da1b0000000000000000000000000000000000000000000000000000000003610d1457610c81610e53565b610d1c610d3b565b6000808092368280378136915af43d82803e15610d37573d90f35b3d90fd5b73ffffffffffffffffffffffffffffffffffffffff807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541680610df8575060206004917fa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d505416604051928380927f5c60da1b0000000000000000000000000000000000000000000000000000000082525afa9081156102a657600091610de0575090565b610917915060203d811161029f57610290818361070e565b905090565b610e05611192565b73ffffffffffffffffffffffffffffffffffffffff7fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103541660405190602082015260208152610917816106f2565b610e5b611192565b610e63610d3b565b73ffffffffffffffffffffffffffffffffffffffff6040519116602082015260208152610917816106f2565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc602091011261069d576004356109178161067f565b610ecd611192565b3660041161069d57610efc73ffffffffffffffffffffffffffffffffffffffff610ef636610e8f565b166107e3565b604051610f08816106d1565b6000815290565b610f17611192565b3660041161069d5773ffffffffffffffffffffffffffffffffffffffff610f3d36610e8f565b1660405190610f4b826106d1565b60008252803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a2815115801590610ff7575b610fe3575b5050604051610f08816106d1565b610fef916102646109b1565b503880610fd5565b506000610fd0565b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201527f6f74206120636f6e7472616374000000000000000000000000000000000000006064820152fd5b3660041161069d5760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261069d576004356110c18161067f565b60243567ffffffffffffffff811161069d576110f673ffffffffffffffffffffffffffffffffffffffff913690600401610789565b9116803b15610fff577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc817fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055807fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b600080a281511580159061118a57610fe3575050604051610f08816106d1565b506001610fd0565b3461069d5756fea26469706673582212205afdfcf2db2f242d1c90fc4524ff1841da37419738805ee0571bd2744b6196ce64736f6c63430008130033a2646970667358221220a80cc5d74e0a02cb4b1f44a1dec44bba24dd9e7bd16093f5d05c61be5740ed1664736f6c63430008130033",
							"opcodes": "PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE PUSH1 0x4 SWAP1 DUP2 CALLDATASIZE LT ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1BCE4583 EQ PUSH2 0x721 JUMPI DUP1 PUSH4 0x25A570B8 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0x59659E90 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x19F JUMPI PUSH4 0xF2FDE38B EQ PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x19B JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x19B JUMPI PUSH2 0x9A PUSH2 0x7E0 JUMP JUMPDEST SWAP1 PUSH2 0xA3 PUSH2 0x8FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP3 AND SWAP3 DUP4 ISZERO PUSH2 0x118 JUMPI POP POP PUSH1 0x0 SLOAD DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 DUP1 RETURN JUMPDEST SWAP1 PUSH1 0x20 PUSH1 0x84 SWAP3 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1F0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x20 SWAP3 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 CALLVALUE PUSH2 0x291 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x291 JUMPI PUSH2 0x22B PUSH2 0x8FC JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP2 AND DUP4 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 DUP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST POP POP CALLVALUE PUSH2 0x1F0 JUMPI DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH1 0x20 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x1 SLOAD AND SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP DUP3 SWAP1 CALLVALUE PUSH2 0x1F0 JUMPI PUSH2 0x100 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x1F0 JUMPI PUSH2 0x322 PUSH2 0x7E0 JUMP JUMPDEST SWAP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 PUSH1 0x24 CALLDATALOAD DUP5 DUP2 AND DUP2 SUB PUSH2 0x70C JUMPI PUSH8 0xFFFFFFFFFFFFFFFF SWAP4 PUSH1 0x44 CALLDATALOAD DUP6 DUP2 GT PUSH2 0x71D JUMPI PUSH2 0x366 SWAP1 CALLDATASIZE SWAP1 DUP4 ADD PUSH2 0x887 JUMP JUMPDEST SWAP6 PUSH1 0x64 CALLDATALOAD DUP7 DUP2 GT PUSH2 0x719 JUMPI PUSH2 0x37E SWAP1 CALLDATASIZE SWAP1 DUP5 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD DUP8 DUP2 GT PUSH2 0x715 JUMPI PUSH2 0x395 SWAP1 CALLDATASIZE SWAP1 DUP6 ADD PUSH2 0x887 JUMP JUMPDEST PUSH1 0xA4 CALLDATALOAD DUP9 DUP2 GT PUSH2 0x711 JUMPI PUSH2 0x3AC SWAP1 CALLDATASIZE SWAP1 DUP7 ADD PUSH2 0x887 JUMP JUMPDEST SWAP1 PUSH1 0xC4 CALLDATALOAD SWAP3 DUP5 DUP5 AND DUP5 SUB PUSH2 0x70C JUMPI PUSH1 0xE4 CALLDATALOAD SWAP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND DUP7 SUB PUSH2 0x5FD JUMPI DUP12 SWAP13 DUP11 SWAP12 SWAP13 SWAP10 SWAP11 MLOAD PUSH1 0x20 SWAP15 DUP16 SWAP2 DUP1 DUP13 DUP12 DUP12 DUP12 DUP12 DUP12 DUP10 DUP8 ADD SWAP9 PUSH2 0x3F5 SWAP7 DUP11 PUSH2 0x9E1 JUMP JUMPDEST SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 ADD DUP3 MSTORE PUSH2 0x425 SWAP1 DUP3 PUSH2 0x846 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 DUP14 MLOAD SWAP15 SWAP1 SWAP2 DUP16 ADD SWAP1 DUP2 GT DUP16 DUP3 LT OR PUSH2 0x6DE JUMPI DUP16 SWAP2 DUP16 DUP16 SWAP3 DUP16 DUP2 PUSH1 0x68 SWAP2 PUSH2 0x4AF SWAP4 DUP8 MSTORE DUP5 MSTORE PUSH1 0x1 SLOAD SWAP1 PUSH2 0x49F DUP8 MLOAD SWAP6 DUP7 SWAP4 DUP11 DUP6 ADD SWAP9 DUP10 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 SWAP1 DUP2 DUP14 PUSH1 0x60 SHL AND DUP12 DUP8 ADD MSTORE PUSH1 0x60 SHL AND PUSH1 0x54 DUP6 ADD MSTORE MLOAD DUP1 SWAP3 DUP6 DUP6 ADD SWAP1 PUSH2 0x97B JUMP JUMPDEST DUP2 ADD SUB PUSH1 0x48 DUP2 ADD DUP5 MSTORE ADD DUP3 PUSH2 0x846 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP2 PUSH2 0x11EB SWAP2 MLOAD SWAP1 PUSH2 0x4C5 DUP2 DUP5 ADD DUP4 PUSH2 0x846 JUMP JUMPDEST DUP3 DUP3 MSTORE DUP2 ADD SWAP2 PUSH2 0xA68 DUP4 CODECOPY DUP1 MLOAD ISZERO PUSH2 0x680 JUMPI MLOAD DUP5 SWAP3 SWAP2 DUP15 CREATE2 AND SWAP13 DUP14 ISZERO PUSH2 0x623 JUMPI PUSH1 0x1 SLOAD DUP4 AND SWAP3 SWAP2 SWAP1 DUP15 EXTCODESIZE ISZERO PUSH2 0x61F JUMPI DUP13 SWAP3 DUP16 SWAP2 DUP16 SWAP4 PUSH2 0x547 DUP7 SWAP3 DUP15 SWAP7 MLOAD SWAP9 DUP10 SWAP8 DUP9 SWAP7 DUP8 SWAP6 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 DUP8 MSTORE AND SWAP1 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x60 PUSH1 0x44 DUP5 ADD MSTORE PUSH1 0x64 DUP4 ADD SWAP1 PUSH2 0x99E JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x615 JUMPI SWAP1 DUP11 SWAP2 PUSH2 0x601 JUMPI JUMPDEST POP POP DUP11 EXTCODESIZE ISZERO PUSH2 0x5FD JUMPI SWAP2 PUSH2 0x59E SWAP4 SWAP2 DUP10 SWAP8 SWAP7 SWAP6 SWAP4 DUP12 MLOAD SWAP10 DUP11 SWAP9 DUP10 SWAP9 PUSH32 0x98DD69C800000000000000000000000000000000000000000000000000000000 DUP11 MSTORE DUP10 ADD PUSH2 0x9E1 JUMP JUMPDEST SUB DUP2 DUP4 DUP9 GAS CALL DUP1 ISZERO PUSH2 0x5F3 JUMPI PUSH2 0x5DF JUMPI JUMPDEST POP POP PUSH32 0xD8AD75647A93DE9D8D617559D87F1C27BC23FB6237B94054BAF34AAFBE85AD03 DUP4 DUP3 MLOAD DUP5 DUP2 MSTORE LOG1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH2 0x5E9 DUP3 SWAP2 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x291 JUMPI DUP1 PUSH2 0x5AF JUMP JUMPDEST DUP4 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST PUSH2 0x60A SWAP1 PUSH2 0x803 JUMP JUMPDEST PUSH2 0x5FD JUMPI DUP9 DUP14 PUSH2 0x559 JUMP JUMPDEST DUP12 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP13 DUP1 REVERT JUMPDEST POP PUSH1 0x64 DUP9 DUP16 DUP15 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A204661696C6564206F6E206465706C6F7900000000000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST POP POP POP PUSH1 0x64 DUP9 DUP16 DUP1 DUP16 MLOAD SWAP3 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP5 MSTORE DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x437265617465323A2062797465636F6465206C656E677468206973207A65726F PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x41 DUP11 PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP SWAP1 CALLVALUE PUSH2 0x19B JUMPI PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x19B JUMPI DUP3 PUSH2 0x75B PUSH2 0x7E0 JUMP JUMPDEST PUSH2 0x763 PUSH2 0x8FC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 PUSH1 0x1 SLOAD AND SWAP1 DUP2 EXTCODESIZE ISZERO PUSH2 0x71D JUMPI DUP4 PUSH1 0x24 SWAP3 DUP7 MLOAD SWAP8 DUP9 SWAP6 DUP7 SWAP5 PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP7 MSTORE AND SWAP1 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x7D7 JUMPI POP PUSH2 0x7CB JUMPI POP DUP1 RETURN JUMPDEST PUSH2 0x7D4 SWAP1 PUSH2 0x803 JUMP JUMPDEST DUP1 RETURN JUMPDEST MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x70C JUMPI JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x817 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x817 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x70C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x817 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x8DA PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP7 ADD AND ADD DUP6 PUSH2 0x846 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x70C JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x0 SLOAD AND CALLER SUB PUSH2 0x91D JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT PUSH2 0x98E JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x97E JUMP JUMPDEST SWAP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F PUSH1 0x20 SWAP4 PUSH2 0x9DA DUP2 MLOAD DUP1 SWAP3 DUP2 DUP8 MSTORE DUP8 DUP1 DUP9 ADD SWAP2 ADD PUSH2 0x97B JUMP JUMPDEST ADD AND ADD ADD SWAP1 JUMP JUMPDEST SWAP6 SWAP8 SWAP7 SWAP3 SWAP5 PUSH2 0xA4C PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF SWAP6 PUSH2 0xA3E PUSH1 0xC0 SWAP9 PUSH2 0xA30 PUSH2 0xA5A SWAP7 SWAP8 PUSH1 0xE0 PUSH1 0x20 DUP15 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 SWAP13 AND DUP2 MSTORE ADD MSTORE PUSH1 0xE0 DUP14 ADD SWAP1 PUSH2 0x99E JUMP JUMPDEST SWAP1 DUP12 DUP3 SUB PUSH1 0x40 DUP14 ADD MSTORE PUSH2 0x99E JUMP JUMPDEST SWAP1 DUP10 DUP3 SUB PUSH1 0x60 DUP12 ADD MSTORE PUSH2 0x99E JUMP JUMPDEST SWAP1 DUP8 DUP3 SUB PUSH1 0x80 DUP10 ADD MSTORE PUSH2 0x99E JUMP JUMPDEST SWAP7 AND PUSH1 0xA0 DUP6 ADD MSTORE AND SWAP2 ADD MSTORE JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x16 JUMPI PUSH2 0x11CF SWAP1 DUP2 PUSH2 0x1C DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x40 PUSH1 0x80 DUP2 MSTORE CALLDATASIZE PUSH2 0x382 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP2 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 CALLDATALOAD AND EQ PUSH2 0xC0 JUMPI PUSH1 0x4 DUP5 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0xC8 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x37E JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x37E JUMPI DUP3 CALLDATALOAD SWAP2 PUSH2 0x108 DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP3 PUSH2 0x115 DUP5 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x37A JUMPI PUSH2 0x135 DUP4 SWAP2 CALLDATASIZE SWAP1 DUP9 ADD PUSH2 0x789 JUMP JUMPDEST SWAP5 AND SWAP3 ISZERO PUSH2 0x352 JUMPI PUSH2 0x147 SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2CF JUMPI DUP5 MLOAD SWAP1 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP4 DUP5 DUP4 MSTORE PUSH1 0x20 SWAP7 DUP8 DUP5 DUP4 DUP2 DUP7 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x2A6 JUMPI DUP9 SWAP5 PUSH2 0x19D SWAP2 DUP10 SWAP2 PUSH2 0x2B2 JUMPI JUMPDEST POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND OR SWAP1 SSTORE MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI JUMPDEST PUSH2 0x242 JUMPI JUMPDEST DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST DUP1 MLOAD SWAP2 ADD RETURN JUMPDEST DUP6 SWAP3 DUP4 SWAP2 DUP3 MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x2A6 JUMPI PUSH2 0x26A SWAP4 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST SWAP2 PUSH2 0xA21 JUMP JUMPDEST POP CODESIZE DUP1 DUP1 DUP4 DUP2 DUP1 DUP1 PUSH2 0x233 JUMP JUMPDEST PUSH2 0x298 SWAP2 SWAP3 POP DUP5 RETURNDATASIZE DUP7 GT PUSH2 0x29F JUMPI JUMPDEST PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x902 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x25B JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x286 JUMP JUMPDEST PUSH2 0x91A JUMP JUMPDEST POP DUP7 PUSH2 0x22E JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP7 RETURNDATASIZE DUP9 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST CODESIZE PUSH2 0x194 JUMP JUMPDEST PUSH1 0x84 DUP4 PUSH1 0x20 DUP8 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP5 DUP8 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND ISZERO DUP1 ISZERO PUSH2 0xB94 JUMPI PUSH1 0x0 SWAP1 PUSH32 0xCF7A1D7700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 CALLDATALOAD AND EQ PUSH2 0x439 JUMPI PUSH1 0x4 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST PUSH2 0x441 PUSH2 0x1192 JUMP JUMPDEST PUSH1 0x4 SWAP3 CALLDATASIZE DUP5 GT PUSH2 0x67B JUMPI PUSH1 0x60 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x67B JUMPI DUP4 CALLDATALOAD PUSH2 0x480 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP2 PUSH2 0x48D DUP4 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x677 JUMPI PUSH2 0x4AD DUP3 SWAP2 CALLDATASIZE SWAP1 DUP10 ADD PUSH2 0x789 JUMP JUMPDEST SWAP4 AND SWAP4 ISZERO PUSH2 0x64E JUMPI PUSH2 0x4BF SWAP2 AND PUSH2 0x7E3 JUMP JUMPDEST DUP2 EXTCODESIZE ISZERO PUSH2 0x5CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SWAP3 DUP4 DUP3 MSTORE PUSH1 0x20 SWAP6 DUP7 DUP4 DUP3 DUP2 DUP6 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x2A6 JUMPI DUP8 SWAP4 PUSH2 0x514 SWAP2 DUP9 SWAP2 PUSH2 0x5B3 JUMPI POP EXTCODESIZE ISZERO ISZERO PUSH2 0x926 JUMP JUMPDEST PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP5 DUP3 PUSH32 0x1CF3B03A6CF19FA2BABA4DF148E9DCABEDEA7F8A5C07840E207E5C089BE95D3E DUP9 DUP1 LOG2 DUP5 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x2AB JUMPI PUSH2 0x242 JUMPI DUP4 PUSH2 0x23C PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x2C9 SWAP2 POP DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x84 DUP5 PUSH1 0x20 PUSH1 0x40 MLOAD SWAP2 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP4 MSTORE DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720626561636F6E206973206E6F74206120636F6E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7472616374000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST DUP6 PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SUB PUSH2 0x69D JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x6ED JUMPI PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x69D JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x7A0 DUP3 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0x7AE PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x69D JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7DD DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SWAP1 DUP2 SLOAD PUSH32 0x7E644D79422F17C01E4894B5F4F588D331EBFA28653D42AE832DC59E38C9798F PUSH1 0x40 DUP1 MLOAD SWAP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 DUP2 DUP6 AND DUP7 MSTORE AND SWAP4 DUP5 PUSH1 0x20 DUP3 ADD MSTORE LOG1 DUP2 ISZERO PUSH2 0x87E JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E65772061646D696E20697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x69D JUMPI MLOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x92D JUMPI JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x30 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A20626561636F6E20696D706C656D656E746174696F6E2069 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x73206E6F74206120636F6E747261637400000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6ED JUMPI PUSH1 0x40 MSTORE PUSH1 0x27 DUP3 MSTORE PUSH32 0x206661696C656400000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP4 PUSH32 0x416464726573733A206C6F772D6C6576656C2064656C65676174652063616C6C PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x917 SWAP5 SWAP4 PUSH1 0x20 DUP2 MLOAD SWAP2 ADD DUP5 GAS DELEGATECALL RETURNDATASIZE ISZERO PUSH2 0xA60 JUMPI RETURNDATASIZE SWAP2 PUSH2 0xA43 DUP4 PUSH2 0x74F JUMP JUMPDEST SWAP3 PUSH2 0xA51 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x70E JUMP JUMPDEST DUP4 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP6 ADD RETURNDATACOPY PUSH2 0xACD JUMP JUMPDEST PUSH1 0x60 SWAP2 PUSH2 0xACD JUMP JUMPDEST ISZERO PUSH2 0xA6F JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST SWAP2 SWAP3 SWAP1 ISZERO PUSH2 0xAED JUMPI POP DUP2 MLOAD ISZERO PUSH2 0xAE1 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xA68 JUMP JUMPDEST DUP3 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xB00 JUMPI POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP3 MSTORE DUP2 PUSH1 0x20 DUP1 PUSH1 0x4 DUP4 ADD MSTORE DUP3 MLOAD SWAP3 DUP4 PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0xB7D JUMPI POP POP POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 PUSH1 0x0 PUSH1 0x44 DUP1 SWAP7 DUP7 ADD ADD MSTORE ADD AND DUP2 ADD SUB ADD SWAP1 REVERT JUMPDEST DUP2 DUP2 ADD DUP4 ADD MLOAD DUP7 DUP3 ADD PUSH1 0x44 ADD MSTORE DUP6 SWAP4 POP DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST PUSH2 0xBEE PUSH2 0xBD5 PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST CALLER SUB PUSH2 0xD14 JUMPI PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x3659CFE600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC51 JUMPI POP PUSH2 0xC49 PUSH2 0xF0F JUMP JUMPDEST PUSH1 0x20 DUP2 MLOAD SWAP2 ADD RETURN JUMPDEST PUSH32 0x4F1EF28600000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xC86 JUMPI POP PUSH2 0xC81 PUSH2 0x1083 JUMP JUMPDEST PUSH2 0xC49 JUMP JUMPDEST PUSH32 0x8F28397000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCB6 JUMPI POP PUSH2 0xC81 PUSH2 0xEC5 JUMP JUMPDEST PUSH32 0xF851A44000000000000000000000000000000000000000000000000000000000 DUP2 SUB PUSH2 0xCE6 JUMPI POP PUSH2 0xC81 PUSH2 0xDFD JUMP JUMPDEST PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 SUB PUSH2 0xD14 JUMPI PUSH2 0xC81 PUSH2 0xE53 JUMP JUMPDEST PUSH2 0xD1C PUSH2 0xD3B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 SWAP3 CALLDATASIZE DUP3 DUP1 CALLDATACOPY DUP2 CALLDATASIZE SWAP2 GAS DELEGATECALL RETURNDATASIZE DUP3 DUP1 RETURNDATACOPY ISZERO PUSH2 0xD37 JUMPI RETURNDATASIZE SWAP1 RETURN JUMPDEST RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC SLOAD AND DUP1 PUSH2 0xDF8 JUMPI POP PUSH1 0x20 PUSH1 0x4 SWAP2 PUSH32 0xA3F0AD74E5423AEBFD80D3EF4346578335A9A72AEAEE59FF6CB3582B35133D50 SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH32 0x5C60DA1B00000000000000000000000000000000000000000000000000000000 DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 SWAP2 PUSH2 0xDE0 JUMPI POP SWAP1 JUMP JUMPDEST PUSH2 0x917 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x29F JUMPI PUSH2 0x290 DUP2 DUP4 PUSH2 0x70E JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xE05 PUSH2 0x1192 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0xB53127684A568B3173AE13B9F8A6016E243E63B6E8EE1178D6A717850B5D6103 SLOAD AND PUSH1 0x40 MLOAD SWAP1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH2 0xE5B PUSH2 0x1192 JUMP JUMPDEST PUSH2 0xE63 PUSH2 0xD3B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0x40 MLOAD SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP2 MSTORE PUSH2 0x917 DUP2 PUSH2 0x6F2 JUMP JUMPDEST PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC PUSH1 0x20 SWAP2 ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x917 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH2 0xECD PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH2 0xEFC PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xEF6 CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH2 0x7E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0xF17 PUSH2 0x1192 JUMP JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0xF3D CALLDATASIZE PUSH2 0xE8F JUMP JUMPDEST AND PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF4B DUP3 PUSH2 0x6D1 JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xFF7 JUMPI JUMPDEST PUSH2 0xFE3 JUMPI JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST PUSH2 0xFEF SWAP2 PUSH2 0x264 PUSH2 0x9B1 JUMP JUMPDEST POP CODESIZE DUP1 PUSH2 0xFD5 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xFD0 JUMP JUMPDEST PUSH1 0x84 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313936373A206E657720696D706C656D656E746174696F6E206973206E PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F74206120636F6E747261637400000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE REVERT JUMPDEST CALLDATASIZE PUSH1 0x4 GT PUSH2 0x69D JUMPI PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC CALLDATASIZE ADD SLT PUSH2 0x69D JUMPI PUSH1 0x4 CALLDATALOAD PUSH2 0x10C1 DUP2 PUSH2 0x67F JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x69D JUMPI PUSH2 0x10F6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x789 JUMP JUMPDEST SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xFFF JUMPI PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 DUP3 SLOAD AND OR SWAP1 SSTORE DUP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x0 DUP1 LOG2 DUP2 MLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x118A JUMPI PUSH2 0xFE3 JUMPI POP POP PUSH1 0x40 MLOAD PUSH2 0xF08 DUP2 PUSH2 0x6D1 JUMP JUMPDEST POP PUSH1 0x1 PUSH2 0xFD0 JUMP JUMPDEST CALLVALUE PUSH2 0x69D JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS REVERT 0xFC CALLCODE 0xDB 0x2F 0x24 0x2D SHR SWAP1 0xFC GASLIMIT 0x24 SELFDESTRUCT XOR COINBASE 0xDA CALLDATACOPY COINBASE SWAP8 CODESIZE DUP1 0x5E 0xE0 JUMPI SHL 0xD2 PUSH21 0x4B6196CE64736F6C63430008130033A26469706673 PC 0x22 SLT KECCAK256 0xA8 0xC 0xC5 0xD7 0x4E EXP MUL 0xCB 0x4B 0x1F PREVRANDAO LOG1 0xDE 0xC4 0x4B 0xBA 0x24 0xDD SWAP15 PUSH28 0xD16093F5D05C61BE5740ED1664736F6C634300081300330000000000 ",
							"sourceMap": "450:1824:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:62:4;;;:::i;:::-;450:1824:34;;;;2162:22:4;;;450:1824:34;;;;;;;;;;;;;;2566:40:4;450:1824:34;2566:40:4;;450:1824:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:62:4;;:::i;:::-;450:1824:34;;;;;;;;;;2566:40:4;;;;450:1824:34;;;;;;;;;;;;;;;;;;;;;730:31:27;450:1824:34;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1906:96;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;450:1824;1896:107;;450:1824;;;1896:107;;450:1824;;;;;;;;;;;;;;;;;;;;1587:60:27;450:1824:34;;;;;1632:6:27;450:1824:34;;;;;1587:60:27;;;;;;450:1824:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1587:60:27;;;;;;;;;:::i;:::-;450:1824:34;1577:71:27;;1683:52;;450:1824:34;;1683:52:27;450:1824:34;1683:52:27;;;450:1824:34;;:::i;:::-;1683:52:27;;;;;;;;;450:1824:34;;1283:20:15;450:1824:34;;1393:100:15;;;;;;450:1824:34;1510:18:15;;;450:1824:34;;1632:6:27;450:1824:34;;;;;;1813:105:27;;;;;450:1824:34;;;;;;;;;;;;1813:105:27;;;;;;;450:1824:34;1813:105:27;;450:1824:34;1813:105:27;;;450:1824:34;;;;;;;;;;;;;;;:::i;:::-;1813:105:27;;;;;;;;;;;;;450:1824:34;2071:119;;;;;;;450:1824;2071:119;450:1824;;;;;;;;;2071:119;;;;;450:1824;2071:119;;;;;:::i;:::-;;;;;;;;;;;;;450:1824;;;2206:30;450:1824;;;;;;2206:30;450:1824;;;;;2071:119;;;;;:::i;:::-;450:1824;;2071:119;;;;450:1824;;;;;;;;;2071:119;450:1824;;;1813:105:27;;;;:::i;:::-;450:1824:34;;1813:105:27;;;;;450:1824:34;;;;;;;;;1813:105:27;450:1824:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:62:4;;:::i;:::-;450:1824:34;;;2761:6:27;450:1824:34;;2761:32:27;;;;;;450:1824:34;;;;;2761:32:27;;;;;450:1824:34;2761:32:27;;450:1824:34;2761:32:27;;;450:1824:34;2761:32:27;;;;;;;;;;450:1824:34;;;2761:32:27;;;;:::i;:::-;450:1824:34;;2761:32:27;450:1824:34;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;450:1824:34;;;;;;;;;;;;;;:::o;1359:130:4:-;450:1824:34;1273:6:4;450:1824:34;;719:10:14;1422:23:4;450:1824:34;;1359:130:4:o;450:1824:34:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;450:1824:34;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factoryOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"ERC721ItemsDeployed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"beacon\",\"outputs\":[{\"internalType\":\"contract UpgradeableBeacon\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyFeeNumerator\",\"type\":\"uint96\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"upgradeBeacon\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ERC721ItemsDeployed(address)\":{\"params\":{\"proxyAddr\":\"The address of the deployed proxy.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"factoryOwner\":\"The owner of the ERC-721 Items Factory\"}},\"deploy(address,address,string,string,string,string,address,uint96)\":{\"params\":{\"baseURI\":\"The base URI of the ERC-721 Items proxy\",\"contractURI\":\"The contract URI of the ERC-721 Items proxy\",\"name\":\"The name of the ERC-721 Items proxy\",\"proxyOwner\":\"The owner of the ERC-721 Items proxy\",\"royaltyFeeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"royaltyReceiver\":\"Address of who should be sent the royalty payment\",\"symbol\":\"The symbol of the ERC-721 Items proxy\",\"tokenOwner\":\"The owner of the ERC-721 Items implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-721 Items Proxy\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeBeacon(address)\":{\"params\":{\"implementation\":\"The new beacon implementation.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ERC721ItemsDeployed(address)\":{\"notice\":\"Event emitted when a new ERC-721 Items proxy contract is deployed.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Creates an ERC-721 Items Factory.\"},\"deploy(address,address,string,string,string,string,address,uint96)\":{\"notice\":\"Creates an ERC-721 Items proxy.\"},\"upgradeBeacon(address)\":{\"notice\":\"Upgrades the beacon implementation.\"}},\"notice\":\"Deployer of ERC-721 Items proxies.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/items/ERC721ItemsFactory.sol\":\"ERC721ItemsFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"node_modules/@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol\":{\"keccak256\":\"0x6ec71aef5659f3f74011169948d2fcda8c6599be5bb38f986380a8737f96cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362f12aebd1022d643235e6a7fa6ccfb38c13f3a0d1b006d5d1aea51af4bb852\",\"dweb:/ipfs/QmSUQ7pM4UnBawMfP2Di8EqawxaoU195DgsSLxHejvSpPz\"]},\"node_modules/@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"node_modules/erc721a/contracts/ERC721A.sol\":{\"keccak256\":\"0x23116c16976b7d8c0c714ba1b38ae6b16c16fc90ec69b568fb1ebf1bc063e01c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7874e48418b55b9d718680915454f2b0054d19d2a387e123b0c139294d0e809\",\"dweb:/ipfs/QmdryJHATT4R454JY8FXCE5qTxanYWfjGKGMv5U6YJntWy\"]},\"node_modules/erc721a/contracts/IERC721A.sol\":{\"keccak256\":\"0xa31dfe2635a25f899e279befef27ffcc02fd16e636c58d4c251a303f2355f7ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://284680b4fdbf52b2aa888f7988447568ee82c5d1585c1535d985ff25153bc3b9\",\"dweb:/ipfs/QmTWfDch6XJMwVLA4CY2pMedzrLWoN8ZdgYZ1UbRzesysz\"]},\"node_modules/erc721a/contracts/extensions/ERC721AQueryable.sol\":{\"keccak256\":\"0xad83a36e9758f044317e9a5e2903bc49730b6d5de8fbe9a61b2f91fb4c2148c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b516fbe3026a9d529d359167c7f59d541c97369ff8c1f9e3698a669e43bb3205\",\"dweb:/ipfs/QmeUNVACjEnkz2D9JrzpGrNgVqJnQkYsWzY8UsHaAZWqtW\"]},\"node_modules/erc721a/contracts/extensions/IERC721AQueryable.sol\":{\"keccak256\":\"0xc14fc938aecdccee7edbd3a3ce60b6171cdc3da3345cfa6d288c268983c48942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3e98fca40eb76d808b70410ff794373dd3d409aaf4ecc3c5bcf517172b20a84\",\"dweb:/ipfs/QmNzXKtrsUe17JYnQmp2jfZZaJwjmo14H4UsxTUV4uArdS\"]},\"src/proxies/SequenceProxyFactory.sol\":{\"keccak256\":\"0x6d0425d1cba800f631103fe7da31e78322d200feecc6fa32fdd8eb92f06f84b8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4480084f54006be526cdfb2fc19a80725bca3bb0e02075d1eda792d07d8b5019\",\"dweb:/ipfs/QmSdSdYWg4vttAZuGqn3ftt6jVy8hE82m5jAhUEzBvoCf1\"]},\"src/proxies/TransparentUpgradeableBeaconProxy.sol\":{\"keccak256\":\"0xe8770bd5e7bff02d40974b7e0bcc7ecdf68239671b26e5b4fd9fa1e555e3a23d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://36003f3957a8b08a1205bd189a752327586e14d55bd2858ab855b9fcde95a59a\",\"dweb:/ipfs/QmYCwu9xZREwYpXKFVLVtJ5RQKsqg5pu6KWeuN7RL6p1LL\"]},\"src/proxies/openzeppelin/BeaconProxy.sol\":{\"keccak256\":\"0x649109cb43bd53efa1f3ab03009f640ff1e913289d428bd03c2ec0c1a7cb284c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1eb093cdda1fbb37616825744cd61979d5e526d66334509216eb5791733ee15\",\"dweb:/ipfs/QmU1VfUKjNk5xKNsyT98nueSUgUQCScxmh7Xr2bSSpAmUf\"]},\"src/proxies/openzeppelin/ERC1967Proxy.sol\":{\"keccak256\":\"0x9a1a05a97e97c5fe45122444e28641330e04a379fd509c9cc092032f897093ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ab1a59cfa8db6640b78af4f342eb728991a9b50e3abce4e9dd4eeff0425a2a7\",\"dweb:/ipfs/QmW1kx9RTZ6UWxzVqit7eGopXpQRPeE6hV3riizCvg6SjA\"]},\"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol\":{\"keccak256\":\"0x3cab73a660eb60140697bc774d47b58bee23a45f70dbe3beca421d1f864793f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6f5755050696c83343abea9ee04c406230ad822785f9443c9598fd34f581ab3\",\"dweb:/ipfs/QmYgf7VY9VTRHR2GiKzhGzbdKqH7sbDf6mfV84XY7PqvW2\"]},\"src/tokens/ERC721/ERC721BaseToken.sol\":{\"keccak256\":\"0xa70032e4b95d281e89ef51182f5373c53904f0f80612ffad737213d536857815\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://444ff837dac62d6ffd3029fbc1dc1e4a169e98b8d60a7f2764b21e526c884d7d\",\"dweb:/ipfs/QmTRbu73eK7dBHr477PwJSkbVDZUqFTRLcJZQGPyomcBM4\"]},\"src/tokens/ERC721/presets/items/ERC721Items.sol\":{\"keccak256\":\"0x83d7aca06aa226e1258489d73c44cae6a9c1d96e0522985d1f3a1435e2539fde\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8bad58ac9b700cb66bda5863087a082e65b87d8a90c9229a5d1ddf7a248bf75c\",\"dweb:/ipfs/QmfVEYTJRgh6zAjGvtR7YPVz9NAbCpKpp6VLikoyRU2Etv\"]},\"src/tokens/ERC721/presets/items/ERC721ItemsFactory.sol\":{\"keccak256\":\"0xd7f6d65c0da1e3bcdd91b460aea70191a29237d228c03775974539a610f982cd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://25af61e0de6a1ac503189aaa63d104c9d63b2180f48f45db3b4846c3536f3baa\",\"dweb:/ipfs/QmYXJZjoDKwTEP3ZTu7opo7uXHTN4crrHsJBptm2QQbzdz\"]},\"src/tokens/ERC721/presets/items/IERC721Items.sol\":{\"keccak256\":\"0x5dafff5613e19b24b8283d0b918e9c7b27997fd93966922b2bd020f4aa2d86de\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://649224a134328e1f951b2a9c7bd76c1ebbdae9c5572be5c0a6650d2174dbcece\",\"dweb:/ipfs/QmQVcRupjgJC2Usy9HjKFgVC1oaYcAoeooqj7vYuUjpqTp\"]},\"src/tokens/ERC721/presets/items/IERC721ItemsFactory.sol\":{\"keccak256\":\"0xe79d1fb86155a1117e865011369eadf4d566c49f027456b83f89593466054015\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://450f25b7859b64f6a6cd54ecafacb60d390e71159494839a8e4ad1f2e6c263ca\",\"dweb:/ipfs/QmdLeeThNCHhmdKJDhj7kHcfsKFt7GNmGHyWhYXvANYZgV\"]},\"src/tokens/common/ERC2981Controlled.sol\":{\"keccak256\":\"0x3facd3d7c265311342384809404e45245b51ae16df68ea76002f77116c81195e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://534d7d6ab70880dfbc79f189f5010a029d99564af9f53cbbe3f6a361b98b6a74\",\"dweb:/ipfs/QmcrVKNyGU2BkpvuzWKsBem3r7VF5YckzRnrHWziCQHnyS\"]},\"src/tokens/common/IERC2981Controlled.sol\":{\"keccak256\":\"0x730395f1a3f38553f55835bf6b0a7d2d6868cdfce7cbf56e41e3070351a389bf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://302fb8fa726aeab204b9382b4414dee8a5142d0d68478fada8c1e23c38908922\",\"dweb:/ipfs/QmQGB1eBqcD52R95UwFjkjryCbv29fAVBzYm1FMvTSwJtw\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"ERC721ItemsDeployed(address)": {
								"notice": "Event emitted when a new ERC-721 Items proxy contract is deployed."
							}
						},
						"kind": "user",
						"methods": {
							"constructor": {
								"notice": "Creates an ERC-721 Items Factory."
							},
							"deploy(address,address,string,string,string,string,address,uint96)": {
								"notice": "Creates an ERC-721 Items proxy."
							},
							"upgradeBeacon(address)": {
								"notice": "Upgrades the beacon implementation."
							}
						},
						"notice": "Deployer of ERC-721 Items proxies.",
						"version": 1
					}
				}
			},
			"src/tokens/ERC721/presets/items/IERC721Items.sol": {
				"IERC721Items": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"mint(address,uint256)": {
								"params": {
									"amount": "Amount of tokens to mint.",
									"to": "Address to mint tokens to."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"mint(address,uint256)\":{\"params\":{\"amount\":\"Amount of tokens to mint.\",\"to\":\"Address to mint tokens to.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"notice\":\"Invalid initialization error.\"}]},\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Mint tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/items/IERC721Items.sol\":\"IERC721Items\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/items/IERC721Items.sol\":{\"keccak256\":\"0x5dafff5613e19b24b8283d0b918e9c7b27997fd93966922b2bd020f4aa2d86de\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://649224a134328e1f951b2a9c7bd76c1ebbdae9c5572be5c0a6650d2174dbcece\",\"dweb:/ipfs/QmQVcRupjgJC2Usy9HjKFgVC1oaYcAoeooqj7vYuUjpqTp\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"notice": "Invalid initialization error."
								}
							]
						},
						"kind": "user",
						"methods": {
							"mint(address,uint256)": {
								"notice": "Mint tokens."
							}
						},
						"version": 1
					}
				},
				"IERC721ItemsFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"mint(address,uint256)": {
								"params": {
									"amount": "Amount of tokens to mint.",
									"to": "Address to mint tokens to."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"mint(address,uint256)\":{\"params\":{\"amount\":\"Amount of tokens to mint.\",\"to\":\"Address to mint tokens to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Mint tokens.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/items/IERC721Items.sol\":\"IERC721ItemsFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/items/IERC721Items.sol\":{\"keccak256\":\"0x5dafff5613e19b24b8283d0b918e9c7b27997fd93966922b2bd020f4aa2d86de\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://649224a134328e1f951b2a9c7bd76c1ebbdae9c5572be5c0a6650d2174dbcece\",\"dweb:/ipfs/QmQVcRupjgJC2Usy9HjKFgVC1oaYcAoeooqj7vYuUjpqTp\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"mint(address,uint256)": {
								"notice": "Mint tokens."
							}
						},
						"version": 1
					}
				},
				"IERC721ItemsSignals": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"errors\":{\"InvalidInitialization()\":[{\"notice\":\"Invalid initialization error.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/items/IERC721Items.sol\":\"IERC721ItemsSignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/items/IERC721Items.sol\":{\"keccak256\":\"0x5dafff5613e19b24b8283d0b918e9c7b27997fd93966922b2bd020f4aa2d86de\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://649224a134328e1f951b2a9c7bd76c1ebbdae9c5572be5c0a6650d2174dbcece\",\"dweb:/ipfs/QmQVcRupjgJC2Usy9HjKFgVC1oaYcAoeooqj7vYuUjpqTp\"]}},\"version\":1}",
					"userdoc": {
						"errors": {
							"InvalidInitialization()": [
								{
									"notice": "Invalid initialization error."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/ERC721/presets/items/IERC721ItemsFactory.sol": {
				"IERC721ItemsFactory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "ERC721ItemsDeployed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "contractURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "royaltyReceiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "royaltyFeeNumerator",
									"type": "uint96"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ERC721ItemsDeployed(address)": {
								"params": {
									"proxyAddr": "The address of the deployed proxy."
								}
							}
						},
						"kind": "dev",
						"methods": {
							"deploy(address,address,string,string,string,string,address,uint96)": {
								"params": {
									"baseURI": "The base URI of the ERC-721 Items proxy",
									"contractURI": "The contract URI of the ERC-721 Items proxy",
									"name": "The name of the ERC-721 Items proxy",
									"proxyOwner": "The owner of the ERC-721 Items proxy",
									"royaltyFeeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"royaltyReceiver": "Address of who should be sent the royalty payment",
									"symbol": "The symbol of the ERC-721 Items proxy",
									"tokenOwner": "The owner of the ERC-721 Items implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-721 Items Proxy"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"ERC721ItemsDeployed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyFeeNumerator\",\"type\":\"uint96\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ERC721ItemsDeployed(address)\":{\"params\":{\"proxyAddr\":\"The address of the deployed proxy.\"}}},\"kind\":\"dev\",\"methods\":{\"deploy(address,address,string,string,string,string,address,uint96)\":{\"params\":{\"baseURI\":\"The base URI of the ERC-721 Items proxy\",\"contractURI\":\"The contract URI of the ERC-721 Items proxy\",\"name\":\"The name of the ERC-721 Items proxy\",\"proxyOwner\":\"The owner of the ERC-721 Items proxy\",\"royaltyFeeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"royaltyReceiver\":\"Address of who should be sent the royalty payment\",\"symbol\":\"The symbol of the ERC-721 Items proxy\",\"tokenOwner\":\"The owner of the ERC-721 Items implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-721 Items Proxy\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ERC721ItemsDeployed(address)\":{\"notice\":\"Event emitted when a new ERC-721 Items proxy contract is deployed.\"}},\"kind\":\"user\",\"methods\":{\"deploy(address,address,string,string,string,string,address,uint96)\":{\"notice\":\"Creates an ERC-721 Items proxy.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/items/IERC721ItemsFactory.sol\":\"IERC721ItemsFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/items/IERC721ItemsFactory.sol\":{\"keccak256\":\"0xe79d1fb86155a1117e865011369eadf4d566c49f027456b83f89593466054015\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://450f25b7859b64f6a6cd54ecafacb60d390e71159494839a8e4ad1f2e6c263ca\",\"dweb:/ipfs/QmdLeeThNCHhmdKJDhj7kHcfsKFt7GNmGHyWhYXvANYZgV\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"ERC721ItemsDeployed(address)": {
								"notice": "Event emitted when a new ERC-721 Items proxy contract is deployed."
							}
						},
						"kind": "user",
						"methods": {
							"deploy(address,address,string,string,string,string,address,uint96)": {
								"notice": "Creates an ERC-721 Items proxy."
							}
						},
						"version": 1
					}
				},
				"IERC721ItemsFactoryFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "proxyOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "baseURI",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "contractURI",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "royaltyReceiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "royaltyFeeNumerator",
									"type": "uint96"
								}
							],
							"name": "deploy",
							"outputs": [
								{
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"deploy(address,address,string,string,string,string,address,uint96)": {
								"params": {
									"baseURI": "The base URI of the ERC-721 Items proxy",
									"contractURI": "The contract URI of the ERC-721 Items proxy",
									"name": "The name of the ERC-721 Items proxy",
									"proxyOwner": "The owner of the ERC-721 Items proxy",
									"royaltyFeeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"royaltyReceiver": "Address of who should be sent the royalty payment",
									"symbol": "The symbol of the ERC-721 Items proxy",
									"tokenOwner": "The owner of the ERC-721 Items implementation"
								},
								"returns": {
									"proxyAddr": "The address of the ERC-721 Items Proxy"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"proxyOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"contractURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"royaltyReceiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"royaltyFeeNumerator\",\"type\":\"uint96\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deploy(address,address,string,string,string,string,address,uint96)\":{\"params\":{\"baseURI\":\"The base URI of the ERC-721 Items proxy\",\"contractURI\":\"The contract URI of the ERC-721 Items proxy\",\"name\":\"The name of the ERC-721 Items proxy\",\"proxyOwner\":\"The owner of the ERC-721 Items proxy\",\"royaltyFeeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"royaltyReceiver\":\"Address of who should be sent the royalty payment\",\"symbol\":\"The symbol of the ERC-721 Items proxy\",\"tokenOwner\":\"The owner of the ERC-721 Items implementation\"},\"returns\":{\"proxyAddr\":\"The address of the ERC-721 Items Proxy\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy(address,address,string,string,string,string,address,uint96)\":{\"notice\":\"Creates an ERC-721 Items proxy.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/items/IERC721ItemsFactory.sol\":\"IERC721ItemsFactoryFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/items/IERC721ItemsFactory.sol\":{\"keccak256\":\"0xe79d1fb86155a1117e865011369eadf4d566c49f027456b83f89593466054015\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://450f25b7859b64f6a6cd54ecafacb60d390e71159494839a8e4ad1f2e6c263ca\",\"dweb:/ipfs/QmdLeeThNCHhmdKJDhj7kHcfsKFt7GNmGHyWhYXvANYZgV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"deploy(address,address,string,string,string,string,address,uint96)": {
								"notice": "Creates an ERC-721 Items proxy."
							}
						},
						"version": 1
					}
				},
				"IERC721ItemsFactorySignals": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "proxyAddr",
									"type": "address"
								}
							],
							"name": "ERC721ItemsDeployed",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"ERC721ItemsDeployed(address)": {
								"params": {
									"proxyAddr": "The address of the deployed proxy."
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proxyAddr\",\"type\":\"address\"}],\"name\":\"ERC721ItemsDeployed\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"ERC721ItemsDeployed(address)\":{\"params\":{\"proxyAddr\":\"The address of the deployed proxy.\"}}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"ERC721ItemsDeployed(address)\":{\"notice\":\"Event emitted when a new ERC-721 Items proxy contract is deployed.\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/ERC721/presets/items/IERC721ItemsFactory.sol\":\"IERC721ItemsFactorySignals\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/tokens/ERC721/presets/items/IERC721ItemsFactory.sol\":{\"keccak256\":\"0xe79d1fb86155a1117e865011369eadf4d566c49f027456b83f89593466054015\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://450f25b7859b64f6a6cd54ecafacb60d390e71159494839a8e4ad1f2e6c263ca\",\"dweb:/ipfs/QmdLeeThNCHhmdKJDhj7kHcfsKFt7GNmGHyWhYXvANYZgV\"]}},\"version\":1}",
					"userdoc": {
						"events": {
							"ERC721ItemsDeployed(address)": {
								"notice": "Event emitted when a new ERC-721 Items proxy contract is deployed."
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/tokens/common/ERC2981Controlled.sol": {
				"ERC2981Controlled": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getRoleMember",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleMemberCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "salePrice",
									"type": "uint256"
								}
							],
							"name": "royaltyInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setDefaultRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setTokenRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleMember(bytes32,uint256)": {
								"details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
							},
							"getRoleMemberCount(bytes32)": {
								"details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"royaltyInfo(uint256,uint256)": {
								"details": "Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange."
							},
							"setDefaultRoyalty(address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment"
								}
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment",
									"tokenId": "The token id to set the royalty information for"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"interfaceId": "Interface id"
								},
								"returns": {
									"_0": "True if supported"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"salePrice\",\"type\":\"uint256\"}],\"name\":\"royaltyInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setTokenRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"royaltyInfo(uint256,uint256)\":{\"details\":\"Returns how much royalty is owed and to whom, based on a sale price that may be denominated in any unit of exchange. The royalty amount is denominated and should be paid in that same unit of exchange.\"},\"setDefaultRoyalty(address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\"}},\"setTokenRoyalty(uint256,address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\",\"tokenId\":\"The token id to set the royalty information for\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"Interface id\"},\"returns\":{\"_0\":\"True if supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setDefaultRoyalty(address,uint96)\":{\"notice\":\"Sets the royalty information that all ids in this contract will default to.\"},\"setTokenRoyalty(uint256,address,uint96)\":{\"notice\":\"Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id\"},\"supportsInterface(bytes4)\":{\"notice\":\"Check interface support.\"}},\"notice\":\"An implementation of ERC-2981 that allows updates by roles.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/ERC2981Controlled.sol\":\"ERC2981Controlled\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"node_modules/@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"node_modules/@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"node_modules/@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"node_modules/@openzeppelin/contracts/interfaces/IERC2981.sol\":{\"keccak256\":\"0x3976825a61df20457730b79ad0ac9c8908e3c7978ed9bf090c67137c91256b5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f3fe369b6d0e101844b425f1d08e35bf512962d0590b1f80decb8130c9a6890\",\"dweb:/ipfs/QmXCan6wX4qwJkdR1VvsYLeq8JTB2YxRHLucpuXpsKAvzQ\"]},\"node_modules/@openzeppelin/contracts/token/common/ERC2981.sol\":{\"keccak256\":\"0x990a4133f88b07f92724903f42bb25cdaeca0cf255fb48df26568c40e7c919c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d37620d637eabaa4f4a5deca2d81ee9af18d3c7818acf9091cf15658932a1233\",\"dweb:/ipfs/QmVc3jtXfYFoFyeUwvSo55ZbRt6sVjYfJWafJBPZoAsFvF\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"src/tokens/common/ERC2981Controlled.sol\":{\"keccak256\":\"0x3facd3d7c265311342384809404e45245b51ae16df68ea76002f77116c81195e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://534d7d6ab70880dfbc79f189f5010a029d99564af9f53cbbe3f6a361b98b6a74\",\"dweb:/ipfs/QmcrVKNyGU2BkpvuzWKsBem3r7VF5YckzRnrHWziCQHnyS\"]},\"src/tokens/common/IERC2981Controlled.sol\":{\"keccak256\":\"0x730395f1a3f38553f55835bf6b0a7d2d6868cdfce7cbf56e41e3070351a389bf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://302fb8fa726aeab204b9382b4414dee8a5142d0d68478fada8c1e23c38908922\",\"dweb:/ipfs/QmQGB1eBqcD52R95UwFjkjryCbv29fAVBzYm1FMvTSwJtw\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"setDefaultRoyalty(address,uint96)": {
								"notice": "Sets the royalty information that all ids in this contract will default to."
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"notice": "Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id"
							},
							"supportsInterface(bytes4)": {
								"notice": "Check interface support."
							}
						},
						"notice": "An implementation of ERC-2981 that allows updates by roles.",
						"version": 1
					}
				}
			},
			"src/tokens/common/IERC2981Controlled.sol": {
				"IERC2981Controlled": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setDefaultRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setTokenRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"setDefaultRoyalty(address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment"
								}
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment",
									"tokenId": "The token id to set the royalty information for"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setTokenRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setDefaultRoyalty(address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\"}},\"setTokenRoyalty(uint256,address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\",\"tokenId\":\"The token id to set the royalty information for\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setDefaultRoyalty(address,uint96)\":{\"notice\":\"Sets the royalty information that all ids in this contract will default to.\"},\"setTokenRoyalty(uint256,address,uint96)\":{\"notice\":\"Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/IERC2981Controlled.sol\":\"IERC2981Controlled\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/tokens/common/IERC2981Controlled.sol\":{\"keccak256\":\"0x730395f1a3f38553f55835bf6b0a7d2d6868cdfce7cbf56e41e3070351a389bf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://302fb8fa726aeab204b9382b4414dee8a5142d0d68478fada8c1e23c38908922\",\"dweb:/ipfs/QmQGB1eBqcD52R95UwFjkjryCbv29fAVBzYm1FMvTSwJtw\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"setDefaultRoyalty(address,uint96)": {
								"notice": "Sets the royalty information that all ids in this contract will default to."
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"notice": "Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id"
							}
						},
						"version": 1
					}
				},
				"IERC2981ControlledFunctions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setDefaultRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "feeNumerator",
									"type": "uint96"
								}
							],
							"name": "setTokenRoyalty",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"setDefaultRoyalty(address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment"
								}
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"params": {
									"feeNumerator": "The royalty fee numerator in basis points (e.g. 15% would be 1500)",
									"receiver": "Address of who should be sent the royalty payment",
									"tokenId": "The token id to set the royalty information for"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setDefaultRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"feeNumerator\",\"type\":\"uint96\"}],\"name\":\"setTokenRoyalty\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"setDefaultRoyalty(address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\"}},\"setTokenRoyalty(uint256,address,uint96)\":{\"params\":{\"feeNumerator\":\"The royalty fee numerator in basis points (e.g. 15% would be 1500)\",\"receiver\":\"Address of who should be sent the royalty payment\",\"tokenId\":\"The token id to set the royalty information for\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setDefaultRoyalty(address,uint96)\":{\"notice\":\"Sets the royalty information that all ids in this contract will default to.\"},\"setTokenRoyalty(uint256,address,uint96)\":{\"notice\":\"Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/tokens/common/IERC2981Controlled.sol\":\"IERC2981ControlledFunctions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@0xsequence/contracts-library/=src/\",\":@0xsequence/erc-1155/=node_modules/@0xsequence/erc-1155/\",\":@0xsequence/erc20-meta-token/=node_modules/@0xsequence/erc20-meta-token/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":erc721a/=node_modules/erc721a/\",\":forge-std/=lib/forge-std/src/\",\":murky/=lib/murky/src/\",\":openzeppelin-contracts/=lib/murky/lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"src/tokens/common/IERC2981Controlled.sol\":{\"keccak256\":\"0x730395f1a3f38553f55835bf6b0a7d2d6868cdfce7cbf56e41e3070351a389bf\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://302fb8fa726aeab204b9382b4414dee8a5142d0d68478fada8c1e23c38908922\",\"dweb:/ipfs/QmQGB1eBqcD52R95UwFjkjryCbv29fAVBzYm1FMvTSwJtw\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"setDefaultRoyalty(address,uint96)": {
								"notice": "Sets the royalty information that all ids in this contract will default to."
							},
							"setTokenRoyalty(uint256,address,uint96)": {
								"notice": "Sets the royalty information that a given token id in this contract will use.This overrides the default royalty information for this token id"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"node_modules/@openzeppelin/contracts/access/AccessControl.sol": {
				"id": 0
			},
			"node_modules/@openzeppelin/contracts/access/AccessControlEnumerable.sol": {
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/access/IAccessControl.sol": {
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/access/IAccessControlEnumerable.sol": {
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/access/Ownable.sol": {
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/interfaces/IERC2981.sol": {
				"id": 6
			},
			"node_modules/@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"id": 7
			},
			"node_modules/@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
				"id": 8
			},
			"node_modules/@openzeppelin/contracts/proxy/Proxy.sol": {
				"id": 9
			},
			"node_modules/@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"id": 10
			},
			"node_modules/@openzeppelin/contracts/proxy/beacon/UpgradeableBeacon.sol": {
				"id": 11
			},
			"node_modules/@openzeppelin/contracts/token/common/ERC2981.sol": {
				"id": 12
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"id": 13
			},
			"node_modules/@openzeppelin/contracts/utils/Context.sol": {
				"id": 14
			},
			"node_modules/@openzeppelin/contracts/utils/Create2.sol": {
				"id": 15
			},
			"node_modules/@openzeppelin/contracts/utils/StorageSlot.sol": {
				"id": 16
			},
			"node_modules/@openzeppelin/contracts/utils/Strings.sol": {
				"id": 17
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"id": 18
			},
			"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"id": 19
			},
			"node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
				"id": 20
			},
			"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"id": 21
			},
			"node_modules/@openzeppelin/contracts/utils/structs/EnumerableSet.sol": {
				"id": 22
			},
			"node_modules/erc721a/contracts/ERC721A.sol": {
				"id": 23
			},
			"node_modules/erc721a/contracts/IERC721A.sol": {
				"id": 24
			},
			"node_modules/erc721a/contracts/extensions/ERC721AQueryable.sol": {
				"id": 25
			},
			"node_modules/erc721a/contracts/extensions/IERC721AQueryable.sol": {
				"id": 26
			},
			"src/proxies/SequenceProxyFactory.sol": {
				"id": 27
			},
			"src/proxies/TransparentUpgradeableBeaconProxy.sol": {
				"id": 28
			},
			"src/proxies/openzeppelin/BeaconProxy.sol": {
				"id": 29
			},
			"src/proxies/openzeppelin/ERC1967Proxy.sol": {
				"id": 30
			},
			"src/proxies/openzeppelin/TransparentUpgradeableProxy.sol": {
				"id": 31
			},
			"src/tokens/ERC721/ERC721BaseToken.sol": {
				"id": 32
			},
			"src/tokens/ERC721/presets/items/ERC721Items.sol": {
				"id": 33
			},
			"src/tokens/ERC721/presets/items/ERC721ItemsFactory.sol": {
				"id": 34
			},
			"src/tokens/ERC721/presets/items/IERC721Items.sol": {
				"id": 35
			},
			"src/tokens/ERC721/presets/items/IERC721ItemsFactory.sol": {
				"id": 36
			},
			"src/tokens/common/ERC2981Controlled.sol": {
				"id": 37
			},
			"src/tokens/common/IERC2981Controlled.sol": {
				"id": 38
			}
		}
	}
}