{
	"id": "b6f2d8f5f85c1a0597c165f13fea17dc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 500000
			},
			"outputSelection": {
				"*": {
					"*": [
						"evm.bytecode",
						"evm.deployedBytecode",
						"devdoc",
						"userdoc",
						"metadata",
						"abi"
					]
				}
			},
			"libraries": {},
			"remappings": []
		},
		"sources": {
			"contracts/modules/MainModuleUpgradableDuo.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./commons/ModuleAuthUpgradableDuo.sol\";\nimport \"./commons/ModuleHooks.sol\";\nimport \"./commons/ModuleCalls.sol\";\nimport \"./commons/ModuleUpdate.sol\";\nimport \"./commons/ModuleCreator.sol\";\nimport \"./commons/ModuleExtraAuth.sol\";\nimport \"./commons/ModuleAuthConvenience.sol\";\n\n\n/**\n * @notice Contains an alternative to `MainModuleUpgradable` that allows defining a different\n *         imageHash for `execute` and ERC-1271 (`isValidSignature`) calls.\n *\n * @dev This implementation does not include the `ModuleExtraAuth` functionality.\n *\n */\ncontract MainModuleUpgradableDuo is\n  ModuleAuthUpgradableDuo,\n  ModuleCalls,\n  ModuleUpdate,\n  ModuleHooks,\n  ModuleCreator,\n  ModuleAuthConvenience\n{\n  function _isValidImage(\n    bytes32 _imageHash\n  ) internal override(\n    IModuleAuth,\n    ModuleAuthUpgradable\n  ) view returns (bool) {\n    return super._isValidImage(_imageHash);\n  }\n\n  function isValidSignature(\n    bytes calldata _data,\n    bytes calldata _signatures\n  ) public override(\n    ModuleAuth,\n    ModuleAuthUpgradableDuo\n  ) virtual view returns (bytes4) {\n    return super.isValidSignature(_data, _signatures);\n  }\n\n  function isValidSignature(\n    bytes32 _hash,\n    bytes calldata _signatures\n  ) public override(\n    ModuleAuth,\n    ModuleAuthUpgradableDuo\n  ) virtual view returns (bytes4) {\n    return super.isValidSignature(_hash, _signatures);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @dev If using a new main module, developers must ensure that all inherited\n   *      contracts by the main module don't conflict and are accounted for to be\n   *      supported by the supportsInterface method.\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(\n    bytes4 _interfaceID\n  ) public override(\n    ModuleAuthUpgradableDuo,\n    ModuleAuthConvenience,\n    ModuleCalls,\n    ModuleUpdate,\n    ModuleHooks,\n    ModuleCreator\n  ) pure returns (bool) {\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleAuthConvenience.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleAuth.sol\";\nimport \"./ModuleIPFS.sol\";\nimport \"./ModuleERC165.sol\";\n\nimport \"../../utils/LibString.sol\";\n\n\n\nabstract contract ModuleAuthConvenience is ModuleERC165, ModuleSelfAuth, ModuleAuth, ModuleIPFS {\n\n  /**\n  * @notice Updates the image hash and the IPFS root in a single operation.\n  * @dev These two operations are often performed together, so this function\n  *      allows to save some gas by performing them in a single step.\n  *\n  * @param _imageHash The new image hash to be set.\n  * @param _ipfsRoot The new IPFS root to be set.\n  */\n  function updateImageHashAndIPFS(\n    bytes32 _imageHash,\n    bytes32 _ipfsRoot\n  ) external onlySelf {\n    _updateImageHash(_imageHash);\n    _updateIPFSRoot(_ipfsRoot);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override (\n    ModuleERC165,\n    ModuleAuth\n  ) virtual pure returns (bool) {\n    if (_interfaceID == type(ModuleAuthConvenience).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleExtraAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleAuth.sol\";\nimport \"./ModuleStorage.sol\";\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleERC165.sol\";\n\n\nabstract contract ModuleExtraAuth is ModuleERC165, ModuleSelfAuth, ModuleAuth {\n  //                       EXTRA_IMAGE_HASH_KEY = keccak256(\"org.sequence.module.static.auth.extra.image.hash\");\n  bytes32 private constant EXTRA_IMAGE_HASH_KEY = bytes32(0x849e7bdc245db17e50b9f43086f1914d70eb4dab6dd89af4d541d53353ad97de);\n\n  event SetExtraImageHash(bytes32 indexed _imageHash, uint256 _expiration);\n\n  function _writeExpirationForImageHash(bytes32 _imageHash, uint256 _expiration) internal {\n    ModuleStorage.writeBytes32Map(EXTRA_IMAGE_HASH_KEY, _imageHash, bytes32(_expiration));\n  }\n\n  function _readExpirationForImageHash(bytes32 _imageHash) internal view returns (uint256 _expiration) {\n    return uint256(ModuleStorage.readBytes32Map(EXTRA_IMAGE_HASH_KEY, _imageHash));\n  }\n\n  function _isValidImage(bytes32 _imageHash) internal override virtual view returns (bool) {\n    if (super._isValidImage(_imageHash)) {\n      return true;\n    }\n\n    uint256 expiration = _readExpirationForImageHash(_imageHash);\n\n    // solhint-disable-next-line not-rely-on-time\n    return expiration != 0 && expiration > block.timestamp;\n  }\n\n  function extraImageHash(bytes32 _imageHash) public view returns (uint256) {\n    return _readExpirationForImageHash(_imageHash);\n  }\n\n  function setExtraImageHash(bytes32 _imageHash, uint256 _expiration) external onlySelf {\n    _writeExpirationForImageHash(_imageHash, _expiration);\n\n    emit SetExtraImageHash(_imageHash, _expiration);\n  }\n\n  function clearExtraImageHashes(bytes32[] calldata _imageHashes) external onlySelf {\n    unchecked {\n      uint256 imageHashesLength = _imageHashes.length;\n      for (uint256 i = 0; i < imageHashesLength; i++) {\n        bytes32 imageHash = _imageHashes[i];\n        _writeExpirationForImageHash(imageHash, 0);\n\n       emit SetExtraImageHash(imageHash, 0);\n      }\n    }\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override (\n    ModuleERC165,\n    ModuleAuth\n  ) virtual pure returns (bool) {\n    if (_interfaceID == type(ModuleExtraAuth).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleCreator.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./interfaces/IModuleCreator.sol\";\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleERC165.sol\";\n\n\ncontract ModuleCreator is IModuleCreator, ModuleERC165, ModuleSelfAuth {\n  event CreatedContract(address _contract);\n\n  /**\n   * @notice Creates a contract forwarding eth value\n   * @param _code Creation code of the contract\n   * @return addr The address of the created contract\n   */\n  function createContract(bytes memory _code) public override virtual payable onlySelf returns (address addr) {\n    assembly { addr := create(callvalue(), add(_code, 32), mload(_code)) }\n    if (addr == address(0)) revert CreateFailed(_code);\n    emit CreatedContract(addr);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (_interfaceID == type(IModuleCreator).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleUpdate.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./interfaces/IModuleUpdate.sol\";\n\nimport \"./Implementation.sol\";\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleERC165.sol\";\n\nimport \"../../utils/LibAddress.sol\";\n\n\ncontract ModuleUpdate is IModuleUpdate, ModuleERC165, ModuleSelfAuth, Implementation {\n  using LibAddress for address;\n\n  event ImplementationUpdated(address newImplementation);\n\n  /**\n   * @notice Updates the implementation of the base wallet\n   * @param _implementation New main module implementation\n   * @dev WARNING Updating the implementation can brick the wallet\n   */\n  function updateImplementation(address _implementation) external override virtual onlySelf {\n    _updateImplementation(_implementation);\n  }\n\n  /**\n   * @notice Updates the implementation of the base wallet, used internally.\n   * @param _implementation New main module implementation\n   * @dev WARNING Updating the implementation can brick the wallet\n   */\n  function _updateImplementation(address _implementation) internal override virtual {\n    if (!_implementation.isContract()) revert InvalidImplementation(_implementation);\n    _setImplementation(_implementation);\n    emit ImplementationUpdated(_implementation);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (_interfaceID == type(IModuleUpdate).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleCalls.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleStorage.sol\";\nimport \"./ModuleERC165.sol\";\nimport \"./ModuleNonce.sol\";\nimport \"./ModuleOnlyDelegatecall.sol\";\n\nimport \"./interfaces/IModuleCalls.sol\";\nimport \"./interfaces/IModuleAuth.sol\";\n\nimport \"./submodules/nonce/SubModuleNonce.sol\";\nimport \"./submodules/auth/SequenceBaseSig.sol\";\n\nimport \"../../utils/LibOptim.sol\";\n\n\nabstract contract ModuleCalls is IModuleCalls, IModuleAuth, ModuleERC165, ModuleOnlyDelegatecall, ModuleSelfAuth, ModuleNonce {\n  /**\n   * @notice Allow wallet owner to execute an action\n   * @dev Relayers must ensure that the gasLimit specified for each transaction\n   *      is acceptable to them. A user could specify large enough that it could\n   *      consume all the gas available.\n   * @param _txs        Transactions to process\n   * @param _nonce      Signature nonce (may contain an encoded space)\n   * @param _signature  Encoded signature\n   */\n  function execute(\n    Transaction[] calldata _txs,\n    uint256 _nonce,\n    bytes calldata _signature\n  ) external override virtual onlyDelegatecall {\n    // Validate and update nonce\n    _validateNonce(_nonce);\n\n    // Hash and verify transaction bundle\n    (bool isValid, bytes32 txHash) = _signatureValidation(\n      keccak256(\n        abi.encode(\n          _nonce,\n          _txs\n        )\n      ),\n      _signature\n    );\n\n    if (!isValid) {\n      revert InvalidSignature(txHash, _signature);\n    }\n\n    // Execute the transactions\n    _execute(txHash, _txs);\n  }\n\n  /**\n   * @notice Allow wallet to execute an action\n   *   without signing the message\n   * @param _txs  Transactions to execute\n   */\n  function selfExecute(\n    Transaction[] calldata _txs\n  ) external override virtual onlySelf {\n    // Hash transaction bundle\n    bytes32 txHash = SequenceBaseSig.subdigest(\n      keccak256(\n        abi.encode('self:', _txs)\n      )\n    );\n\n    // Execute the transactions\n    _execute(txHash, _txs);\n  }\n\n  /**\n   * @notice Executes a list of transactions\n   * @param _txHash  Hash of the batch of transactions\n   * @param _txs  Transactions to execute\n   */\n  function _execute(\n    bytes32 _txHash,\n    Transaction[] calldata _txs\n  ) private {\n    unchecked {\n      // Execute transaction\n      uint256 size = _txs.length;\n      for (uint256 i = 0; i < size; i++) {\n        Transaction calldata transaction = _txs[i];\n        uint256 gasLimit = transaction.gasLimit;\n\n        if (gasleft() < gasLimit) revert NotEnoughGas(i, gasLimit, gasleft());\n\n        bool success;\n        if (transaction.delegateCall) {\n          success = LibOptim.delegatecall(\n            transaction.target,\n            gasLimit == 0 ? gasleft() : gasLimit,\n            transaction.data\n          );\n        } else {\n          success = LibOptim.call(\n            transaction.target,\n            transaction.value,\n            gasLimit == 0 ? gasleft() : gasLimit,\n            transaction.data\n          );\n        }\n\n        if (success) {\n          emit TxExecuted(_txHash, i);\n        } else {\n          // Avoid copy of return data until neccesary\n          _revertBytes(\n            transaction.revertOnError,\n            _txHash,\n            i,\n            LibOptim.returnData()\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @notice Logs a failed transaction, reverts if the transaction is not optional\n   * @param _revertOnError  Signals if it should revert or just log\n   * @param _txHash         Hash of the transaction\n   * @param _index          Index of the transaction in the batch\n   * @param _reason         Encoded revert message\n   */\n  function _revertBytes(\n    bool _revertOnError,\n    bytes32 _txHash,\n    uint256 _index,\n    bytes memory _reason\n  ) internal {\n    if (_revertOnError) {\n      assembly { revert(add(_reason, 0x20), mload(_reason)) }\n    } else {\n      emit TxFailed(_txHash, _index, _reason);\n    }\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (_interfaceID == type(IModuleCalls).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleHooks.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./interfaces/IModuleHooks.sol\";\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleStorage.sol\";\nimport \"./ModuleERC165.sol\";\n\nimport \"../../interfaces/receivers/IERC1155Receiver.sol\";\nimport \"../../interfaces/receivers/IERC721Receiver.sol\";\nimport \"../../interfaces/receivers/IERC223Receiver.sol\";\n\n\ncontract ModuleHooks is IERC1155Receiver, IERC721Receiver, IModuleHooks, ModuleERC165, ModuleSelfAuth {\n  //                       HOOKS_KEY = keccak256(\"org.arcadeum.module.hooks.hooks\");\n  bytes32 private constant HOOKS_KEY = bytes32(0xbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a120);\n\n  /**\n   * @notice Reads the implementation hook of a signature\n   * @param _signature Signature function\n   * @return The address of the implementation hook, address(0) if none\n  */\n  function readHook(bytes4 _signature) external override virtual view returns (address) {\n    return _readHook(_signature);\n  }\n\n  /**\n   * @notice Adds a new hook to handle a given function selector\n   * @param _signature Signature function linked to the hook\n   * @param _implementation Hook implementation contract\n   * @dev Can't overwrite hooks that are part of the main module (those defined below)\n   */\n  function addHook(bytes4 _signature, address _implementation) external override virtual onlySelf {\n    if (_readHook(_signature) != address(0)) revert HookAlreadyExists(_signature);\n    _writeHook(_signature, _implementation);\n  }\n\n  /**\n   * @notice Removes a registered hook\n   * @param _signature Signature function linked to the hook\n   * @dev Can't remove hooks that are part of the main module (those defined below)\n   *      without upgrading the wallet\n   */\n  function removeHook(bytes4 _signature) external override virtual onlySelf {\n    if (_readHook(_signature) == address(0)) revert HookDoesNotExist(_signature);\n    _writeHook(_signature, address(0));\n  }\n\n  /**\n   * @notice Reads the implementation hook of a signature\n   * @param _signature Signature function\n   * @return The address of the implementation hook, address(0) if none\n  */\n  function _readHook(bytes4 _signature) private view returns (address) {\n    return address(uint160(uint256(ModuleStorage.readBytes32Map(HOOKS_KEY, _signature))));\n  }\n\n  /**\n   * @notice Writes the implementation hook of a signature\n   * @param _signature Signature function\n   * @param _implementation Hook implementation contract\n  */\n  function _writeHook(bytes4 _signature, address _implementation) private {\n    ModuleStorage.writeBytes32Map(HOOKS_KEY, _signature, bytes32(uint256(uint160(_implementation))));\n    emit DefinedHook(_signature, _implementation);\n  }\n\n  /**\n   * @notice Handle the receipt of a single ERC1155 token type.\n   * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n   */\n  function onERC1155Received(\n    address,\n    address,\n    uint256,\n    uint256,\n    bytes calldata\n  ) external override virtual returns (bytes4) {\n    return ModuleHooks.onERC1155Received.selector;\n  }\n\n  /**\n   * @notice Handle the receipt of multiple ERC1155 token types.\n   * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n   */\n  function onERC1155BatchReceived(\n    address,\n    address,\n    uint256[] calldata,\n    uint256[] calldata,\n    bytes calldata\n  ) external override virtual returns (bytes4) {\n    return ModuleHooks.onERC1155BatchReceived.selector;\n  }\n\n  /**\n   * @notice Handle the receipt of a single ERC721 token.\n   * @return `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`\n   */\n  function onERC721Received(address, address, uint256, bytes calldata) external override virtual returns (bytes4) {\n    return ModuleHooks.onERC721Received.selector;\n  }\n\n  /**\n   * @notice Routes fallback calls through hooks\n   */\n  fallback() external payable {\n    if (msg.data.length >= 4) {\n      address target = _readHook(msg.sig);\n      if (target != address(0)) {\n        (bool success, bytes memory result) = target.delegatecall(msg.data);\n        assembly {\n          if iszero(success)  {\n            revert(add(result, 0x20), mload(result))\n          }\n\n          return(add(result, 0x20), mload(result))\n        }\n      }\n    }\n  }\n\n  /**\n   * @notice Allows the wallet to receive ETH\n   */\n  receive() external payable { }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (\n      _interfaceID == type(IModuleHooks).interfaceId ||\n      _interfaceID == type(IERC1155Receiver).interfaceId ||\n      _interfaceID == type(IERC721Receiver).interfaceId ||\n      _interfaceID == type(IERC223Receiver).interfaceId\n    ) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleAuthUpgradableDuo.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleAuthUpgradable.sol\";\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleAuth.sol\";\nimport \"./ModuleStorage.sol\";\n\n\nabstract contract ModuleAuthUpgradableDuo is ModuleAuthUpgradable {\n  //                        EXTERNAL_IMAGE_HASH_KEY = keccak256(\"org.sequence.module.auth.upgradable.image.hash.external\");\n  bytes32 internal constant EXTERNAL_IMAGE_HASH_KEY = bytes32(0x8c8764b3a50fee69c9bee6e956047501f434fb0e2349c75844a401a7f2a020d2);\n\n  event ExternalImageHashUpdated(bytes32 newExternalImageHash);\n\n  error ExternalImageHashIsZero();\n\n  /**\n   * @notice Updates the external image hash of the wallet\n   * @param _imageHash New required image hash of the ERC-1271 signatures\n  */\n  function updateExternalImageHash(bytes32 _imageHash) external onlySelf {\n    // Update imageHash in storage\n    if (_imageHash == bytes32(0)) revert ExternalImageHashIsZero();\n    ModuleStorage.writeBytes32(EXTERNAL_IMAGE_HASH_KEY, _imageHash);\n    emit ExternalImageHashUpdated(_imageHash);\n  }\n\n  /**\n   * @notice Returns the current external image hash of the wallet (only for `ERC-1271`)\n   */\n  function externalImageHash() external view returns (bytes32) {\n    return ModuleStorage.readBytes32(EXTERNAL_IMAGE_HASH_KEY);\n  }\n\n  /**\n   * @notice Validates the signature image with a valid image hash defined\n   *   in the contract storage, for external calls (only for `ERC-1271`)\n   * @param _imageHash Hash image of signature\n   * @return true if the signature image is valid\n   */\n  function _isValidExternalImage(bytes32 _imageHash) internal view returns (bool) {\n    return _imageHash != bytes32(0) && _imageHash == ModuleStorage.readBytes32(EXTERNAL_IMAGE_HASH_KEY);\n  }\n\n  /**\n   * @dev Validates a signature (externally).\n   *\n   * @param _digest Digest of the signed data.\n   * @param _signature A Sequence signature.\n   *\n   * @return isValid Indicates whether the signature is valid or not.\n   * @return subdigest A modified version of the original digest, unique for each wallet/network.\n   *\n   * @notice The signature will be checked against the EXTERNAL image hash.\n   *   This method is only used for external calls (only for `ERC-1271`).\n   */\n  function _signatureValidationExternal(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) internal view returns (\n    bool isValid,\n    bytes32 subdigest\n  ) {\n    uint256 threshold; uint256 weight; bytes32 recoveredImageHash;\n    (threshold, weight, recoveredImageHash, subdigest,) = signatureRecovery(_digest, _signature);\n    isValid = weight >= threshold && _isValidExternalImage(recoveredImageHash);\n  }\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided data\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided data\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))\n   * @param _data       Arbitrary length data signed on the behalf of address(this)\n   * @param _signatures Signature byte array associated with _data.\n   *                    Encoded as abi.encode(Signature[], Configs)\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes calldata _data,\n    bytes calldata _signatures\n  ) public override(ModuleAuth) virtual view returns (bytes4) {\n    // Validate signatures\n    (bool isValid,) = _signatureValidationExternal(keccak256(_data), _signatures);\n    if (isValid) {\n      return SELECTOR_ERC1271_BYTES_BYTES;\n    }\n\n    return bytes4(0);\n  }\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided hash\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided hash\n   *   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))\n   * @param _hash       keccak256 hash that was signed\n   * @param _signatures Signature byte array associated with _data.\n   *                    Encoded as abi.encode(Signature[], Configs)\n   * @return magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    bytes calldata _signatures\n  ) public override(ModuleAuth) virtual view returns (bytes4) {\n    // Validate signatures\n    (bool isValid,) = _signatureValidationExternal(_hash, _signatures);\n    if (isValid) {\n      return SELECTOR_ERC1271_BYTES32_BYTES;\n    }\n\n    return bytes4(0);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (_interfaceID == type(ModuleAuthUpgradableDuo).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/utils/LibAddress.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nlibrary LibAddress {\n  /**\n   * @notice Will return true if provided address is a contract\n   * @param account Address to verify if contract or not\n   * @dev This contract will return false if called within the constructor of\n   *      a contract's deployment, as the code is not yet stored on-chain.\n   */\n  function isContract(address account) internal view returns (bool) {\n    uint256 csize;\n    // solhint-disable-next-line no-inline-assembly\n    assembly { csize := extcodesize(account) }\n    return csize != 0;\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleERC165.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nabstract contract ModuleERC165 {\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @dev Adding new hooks will not lead to them being reported by this function\n   *      without upgrading the wallet. In addition, developers must ensure that\n   *      all inherited contracts by the main module don't conflict and are accounted\n   *      to be supported by the supportsInterface method.\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) virtual public pure returns (bool) {\n    return _interfaceID == this.supportsInterface.selector;\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleSelfAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ncontract ModuleSelfAuth {\n  error OnlySelfAuth(address _sender, address _self);\n\n  modifier onlySelf() {\n    if (msg.sender != address(this)) {\n      revert OnlySelfAuth(msg.sender, address(this));\n    }\n    _;\n  }\n}\n"
			},
			"contracts/modules/commons/Implementation.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n/**\n * @dev Allows modules to access the implementation slot\n */\ncontract Implementation {\n  /**\n   * @notice Updates the Wallet implementation\n   * @param _imp New implementation address\n   * @dev The wallet implementation is stored on the storage slot\n   *   defined by the address of the wallet itself\n   *   WARNING updating this value may break the wallet and users\n   *   must be confident that the new implementation is safe.\n   */\n  function _setImplementation(address _imp) internal {\n    assembly {\n      sstore(address(), _imp)\n    }\n  }\n\n  /**\n   * @notice Returns the Wallet implementation\n   * @return _imp The address of the current Wallet implementation\n   */\n  function _getImplementation() internal view returns (address _imp) {\n    assembly {\n      _imp := sload(address())\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleUpdate.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nabstract contract IModuleUpdate {\n  // Errors\n  error InvalidImplementation(address _implementation);\n\n  /**\n   * @notice Updates the implementation of the base wallet\n   * @param _implementation New main module implementation\n   * @dev WARNING Updating the implementation can brick the wallet\n   */\n  function updateImplementation(address _implementation) external virtual;\n\n  /**\n   * @notice Updates the implementation of the base wallet, used internally.\n   * @param _implementation New main module implementation\n   * @dev WARNING Updating the implementation can brick the wallet\n   */\n  function _updateImplementation(address _implementation) internal virtual;\n}\n"
			},
			"contracts/interfaces/receivers/IERC223Receiver.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IERC223Receiver {\n  function tokenFallback(address, uint256, bytes calldata) external;\n}\n"
			},
			"contracts/interfaces/receivers/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IERC721Receiver {\n  function onERC721Received(address, address, uint256, bytes calldata) external returns (bytes4);\n}\n"
			},
			"contracts/interfaces/receivers/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IERC1155Receiver {\n  function onERC1155Received(address, address, uint256, uint256, bytes calldata) external returns (bytes4);\n  function onERC1155BatchReceived(address, address, uint256[] calldata, uint256[] calldata, bytes calldata) external returns (bytes4);\n}\n"
			},
			"contracts/modules/commons/ModuleStorage.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nlibrary ModuleStorage {\n  function writeBytes32(bytes32 _key, bytes32 _val) internal {\n    assembly { sstore(_key, _val) }\n  }\n\n  function readBytes32(bytes32 _key) internal view returns (bytes32 val) {\n    assembly { val := sload(_key) }\n  }\n\n  function writeBytes32Map(bytes32 _key, bytes32 _subKey, bytes32 _val) internal {\n    bytes32 key = keccak256(abi.encode(_key, _subKey));\n    assembly { sstore(key, _val) }\n  }\n\n  function readBytes32Map(bytes32 _key, bytes32 _subKey) internal view returns (bytes32 val) {\n    bytes32 key = keccak256(abi.encode(_key, _subKey));\n    assembly { val := sload(key) }\n  }\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleHooks.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IModuleHooks {\n  // Errors\n  error HookAlreadyExists(bytes4 _signature);\n  error HookDoesNotExist(bytes4 _signature);\n\n  // Events\n  event DefinedHook(bytes4 _signature, address _implementation);\n\n  /**\n   * @notice Reads the implementation hook of a signature\n   * @param _signature Signature function\n   * @return The address of the implementation hook, address(0) if none\n  */\n  function readHook(bytes4 _signature) external view returns (address);\n\n  /**\n   * @notice Adds a new hook to handle a given function selector\n   * @param _signature Signature function linked to the hook\n   * @param _implementation Hook implementation contract\n   */\n  function addHook(bytes4 _signature, address _implementation) external;\n\n  /**\n   * @notice Removes a registered hook\n   * @param _signature Signature function linked to the hook\n   */\n  function removeHook(bytes4 _signature) external;\n}\n"
			},
			"contracts/modules/commons/ModuleAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"../../utils/LibBytes.sol\";\nimport \"../../interfaces/IERC1271Wallet.sol\";\n\nimport \"./interfaces/IModuleAuth.sol\";\n\nimport \"./ModuleERC165.sol\";\n\nimport \"./submodules/auth/SequenceBaseSig.sol\";\nimport \"./submodules/auth/SequenceDynamicSig.sol\";\nimport \"./submodules/auth/SequenceNoChainIdSig.sol\";\nimport \"./submodules/auth/SequenceChainedSig.sol\";\n\n\nabstract contract ModuleAuth is\n  IModuleAuth,\n  ModuleERC165,\n  IERC1271Wallet,\n  SequenceChainedSig\n{\n  using LibBytes for bytes;\n\n  bytes1 internal constant LEGACY_TYPE = hex\"00\";\n  bytes1 internal constant DYNAMIC_TYPE = hex\"01\";\n  bytes1 internal constant NO_CHAIN_ID_TYPE = hex\"02\";\n  bytes1 internal constant CHAINED_TYPE = hex\"03\";\n\n  bytes4 internal constant SELECTOR_ERC1271_BYTES_BYTES = 0x20c13b0b;\n  bytes4 internal constant SELECTOR_ERC1271_BYTES32_BYTES = 0x1626ba7e;\n\n  /**\n   * @notice Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\n   * @dev The signature must be prefixed with a type byte, which is used to determine the recovery method.\n   *\n   * @param _digest Digest of the signed data.\n   * @param _signature A Sequence signature.\n   *\n   * @return threshold The required number of signatures needed to consider the signature valid.\n   * @return weight The actual number of signatures collected in the signature.\n   * @return imageHash The imageHash of the configuration that signed the message.\n   * @return subdigest A modified version of the original digest, unique for each wallet/network.\n   * @return checkpoint A nonce that is incremented every time a new configuration is set.\n   */\n  function signatureRecovery(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) public override virtual view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    bytes32 subdigest,\n    uint256 checkpoint\n  ) {\n    bytes1 signatureType = _signature[0];\n\n    if (signatureType == LEGACY_TYPE) {\n      // networkId digest + base recover\n      subdigest = SequenceBaseSig.subdigest(_digest);\n      (threshold, weight, imageHash, checkpoint) = SequenceBaseSig.recover(subdigest, _signature);\n      return (threshold, weight, imageHash, subdigest, checkpoint);\n    }\n\n    if (signatureType == DYNAMIC_TYPE) {\n      // networkId digest + dynamic recover\n      subdigest = SequenceBaseSig.subdigest(_digest);\n      (threshold, weight, imageHash, checkpoint) = SequenceDynamicSig.recover(subdigest, _signature);\n      return (threshold, weight, imageHash, subdigest, checkpoint);\n    }\n\n    if (signatureType == NO_CHAIN_ID_TYPE) {\n      // noChainId digest + dynamic recover\n      subdigest = SequenceNoChainIdSig.subdigest(_digest);\n      (threshold, weight, imageHash, checkpoint) = SequenceDynamicSig.recover(subdigest, _signature);\n      return (threshold, weight, imageHash, subdigest, checkpoint);\n    }\n\n    if (signatureType == CHAINED_TYPE) {\n      // original digest + chained recover\n      // (subdigest will be computed in the chained recover)\n      return chainedRecover(_digest, _signature);\n    }\n\n    revert InvalidSignatureType(signatureType);\n  }\n\n  /**\n   * @dev Validates a signature.\n   *\n   * @param _digest Digest of the signed data.\n   * @param _signature A Sequence signature.\n   *\n   * @return isValid Indicates whether the signature is valid or not.\n   * @return subdigest A modified version of the original digest, unique for each wallet/network.\n   */\n  function _signatureValidation(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) internal override virtual view returns (\n    bool isValid,\n    bytes32 subdigest\n  ) {\n    uint256 threshold; uint256 weight; bytes32 imageHash;\n    (threshold, weight, imageHash, subdigest,) = signatureRecovery(_digest, _signature);\n    isValid = weight >= threshold && _isValidImage(imageHash);\n  }\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided data\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided data\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))\n   * @param _data       Arbitrary length data signed on the behalf of address(this)\n   * @param _signatures Signature byte array associated with _data.\n   *                    Encoded as abi.encode(Signature[], Configs)\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes calldata _data,\n    bytes calldata _signatures\n  ) public override virtual view returns (bytes4) {\n    // Validate signatures\n    (bool isValid,) = _signatureValidation(keccak256(_data), _signatures);\n    if (isValid) {\n      return SELECTOR_ERC1271_BYTES_BYTES;\n    }\n\n    return bytes4(0);\n  }\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided hash\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided hash\n   *   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))\n   * @param _hash       keccak256 hash that was signed\n   * @param _signatures Signature byte array associated with _data.\n   *                    Encoded as abi.encode(Signature[], Configs)\n   * @return magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    bytes calldata _signatures\n  ) public override virtual view returns (bytes4) {\n    // Validate signatures\n    (bool isValid,) = _signatureValidation(_hash, _signatures);\n    if (isValid) {\n      return SELECTOR_ERC1271_BYTES32_BYTES;\n    }\n\n    return bytes4(0);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (\n      _interfaceID == type(IModuleAuth).interfaceId ||\n      _interfaceID == type(IERC1271Wallet).interfaceId\n    ) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n\n  /**\n   * @notice Updates the signers configuration of the wallet\n   * @param _imageHash New required image hash of the signature\n   */\n  function updateImageHash(bytes32 _imageHash) external override virtual onlySelf {\n    _updateImageHash(_imageHash);\n  }\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleCreator.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IModuleCreator {\n  error CreateFailed(bytes _code);\n\n  /**\n   * @notice Creates a contract forwarding eth value\n   * @param _code Creation code of the contract\n   * @return addr The address of the created contract\n   */\n  function createContract(bytes calldata _code) external payable returns (address addr);\n}\n"
			},
			"contracts/utils/LibOptim.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n/**\n * @title Library for optimized EVM operations\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice This library contains functions for optimizing certain EVM operations.\n */\nlibrary LibOptim {\n\n  /**\n   * @notice Computes the keccak256 hash of two 32-byte inputs.\n   * @dev It uses only scratch memory space.\n   * @param _a The first 32 bytes of the hash.\n   * @param _b The second 32 bytes of the hash.\n   * @return c The keccak256 hash of the two 32-byte inputs.\n   */\n  function fkeccak256(\n    bytes32 _a,\n    bytes32 _b\n  ) internal pure returns (bytes32 c) {\n    assembly {\n      mstore(0, _a)\n      mstore(32, _b)\n      c := keccak256(0, 64)\n    }\n  }\n\n  /**\n   * @notice Returns the return data from the last call.\n   * @return r The return data from the last call.\n   */\n  function returnData() internal pure returns (bytes memory r) {\n    assembly {\n      let size := returndatasize()\n      r := mload(0x40)\n      let start := add(r, 32)\n      mstore(0x40, add(start, size))\n      mstore(r, size)\n      returndatacopy(start, 0, size)\n    }\n  }\n\n  /**\n   * @notice Calls another contract with the given parameters.\n   * @dev This method doesn't increase the memory pointer.\n   * @param _to The address of the contract to call.\n   * @param _val The value to send to the contract.\n   * @param _gas The amount of gas to provide for the call.\n   * @param _data The data to send to the contract.\n   * @return r The success status of the call.\n   */\n  function call(\n    address _to,\n    uint256 _val,\n    uint256 _gas,\n    bytes calldata _data\n  ) internal returns (bool r) {\n    assembly {\n      let tmp := mload(0x40)\n      calldatacopy(tmp, _data.offset, _data.length)\n\n      r := call(\n        _gas,\n        _to,\n        _val,\n        tmp,\n        _data.length,\n        0,\n        0\n      )\n    }\n  }\n\n  /**\n   * @notice Calls another contract with the given parameters, using delegatecall.\n   * @dev This method doesn't increase the memory pointer.\n   * @param _to The address of the contract to call.\n   * @param _gas The amount of gas to provide for the call.\n   * @param _data The data to send to the contract.\n   * @return r The success status of the call.\n   */\n  function delegatecall(\n    address _to,\n    uint256 _gas,\n    bytes calldata _data\n  ) internal returns (bool r) {\n    assembly {\n      let tmp := mload(0x40)\n      calldatacopy(tmp, _data.offset, _data.length)\n\n      r := delegatecall(\n        _gas,\n        _to,\n        tmp,\n        _data.length,\n        0,\n        0\n      )\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"../../../../utils/SignatureValidator.sol\";\nimport \"../../../../utils/LibBytesPointer.sol\";\nimport \"../../../../utils/LibBytes.sol\";\nimport \"../../../../utils/LibOptim.sol\";\n\n\n/**\n * @title SequenceBaseSig Library\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice A Solidity implementation for handling signatures in the Sequence protocol.\n */\nlibrary SequenceBaseSig {\n  using LibBytesPointer for bytes;\n\n  uint256 internal constant FLAG_SIGNATURE = 0;\n  uint256 internal constant FLAG_ADDRESS = 1;\n  uint256 internal constant FLAG_DYNAMIC_SIGNATURE = 2;\n  uint256 internal constant FLAG_NODE = 3;\n  uint256 internal constant FLAG_BRANCH = 4;\n  uint256 internal constant FLAG_SUBDIGEST = 5;\n  uint256 internal constant FLAG_NESTED = 6;\n\n  error InvalidNestedSignature(bytes32 _hash, address _addr, bytes _signature);\n  error InvalidSignatureFlag(uint256 _flag);\n\n  /**\n  * @notice Generates a subdigest for the input digest (unique for this wallet and network).\n  * @param _digest The input digest to generate the subdigest from.\n  * @return bytes32 The subdigest generated from the input digest.\n  */\n  function subdigest(\n    bytes32 _digest\n  ) internal view returns (bytes32) {\n    return keccak256(\n      abi.encodePacked(\n        \"\\x19\\x01\",\n        block.chainid,\n        address(this),\n        _digest\n      )\n    );\n  }\n\n  /**\n  * @notice Generates the leaf for an address and weight.\n  * @dev The leaf is generated by concatenating the address and weight.\n  *\n  * @param _addr The address to generate the leaf for.\n  * @param _weight The weight to generate the leaf for.\n  * @return bytes32 The leaf generated from the address and weight.\n  */\n  function _leafForAddressAndWeight(\n    address _addr,\n    uint96 _weight\n  ) internal pure returns (bytes32) {\n    unchecked {\n      return bytes32(uint256(_weight) << 160 | uint256(uint160(_addr)));\n    }\n  }\n\n  /**\n  * @notice Generates the leaf for a hardcoded subdigest.\n  * @dev The leaf is generated by hashing 'Sequence static digest:\\n' and the subdigest.\n  * @param _subdigest The subdigest to generate the leaf for.\n  * @return bytes32 The leaf generated from the hardcoded subdigest.\n  */\n  function _leafForHardcodedSubdigest(\n    bytes32 _subdigest\n  ) internal pure returns (bytes32) {\n    return keccak256(abi.encodePacked('Sequence static digest:\\n', _subdigest));\n  }\n\n  /**\n  * @notice Generates the leaf for a nested tree node.\n  * @dev The leaf is generated by hashing 'Sequence nested config:\\n', the node, the threshold and the weight.\n  *\n  * @param _node The root of the node to generate the leaf for.\n  * @param _threshold The internal threshold of the tree.\n  * @param _weight The external weight of the tree.\n  * @return bytes32 The leaf generated from the nested tree.\n  */\n  function _leafForNested(\n    bytes32 _node,\n    uint256 _threshold,\n    uint256 _weight\n  ) internal pure returns (bytes32) {\n    return keccak256(abi.encodePacked('Sequence nested config:\\n', _node, _threshold, _weight));\n  }\n\n  /**\n   * @notice Returns the weight and root of a signature branch.\n   * @dev If the signature contains a hardcoded subdigest, and it matches the input digest, then the weight is set to 2 ** 256 - 1.\n   *\n   * @param _subdigest The digest to verify the signature against.\n   * @param _signature The signature branch to recover.\n   * @return weight The total weight of the recovered signatures.\n   * @return root The root hash of the recovered configuration.\n   */\n  function recoverBranch(\n    bytes32 _subdigest,\n    bytes calldata _signature\n  ) internal view returns (\n    uint256 weight,\n    bytes32 root\n  ) {\n    unchecked {\n      uint256 rindex;\n\n      // Iterate until the image is completed\n      while (rindex < _signature.length) {\n        // Read next item type\n        uint256 flag;\n        (flag, rindex) = _signature.readUint8(rindex);\n\n        if (flag == FLAG_ADDRESS) {\n          // Read plain address\n          uint8 addrWeight; address addr;\n          (addrWeight, addr, rindex) = _signature.readUint8Address(rindex);\n\n          // Write weight and address to image\n          bytes32 node = _leafForAddressAndWeight(addr, addrWeight);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        if (flag == FLAG_SIGNATURE) {\n          // Read weight\n          uint8 addrWeight;\n          (addrWeight, rindex) = _signature.readUint8(rindex);\n\n          // Read single signature and recover signer\n          uint256 nrindex = rindex + 66;\n          address addr = SignatureValidator.recoverSigner(_subdigest, _signature[rindex:nrindex]);\n          rindex = nrindex;\n\n          // Acumulate total weight of the signature\n          weight += addrWeight;\n\n          // Write weight and address to image\n          bytes32 node = _leafForAddressAndWeight(addr, addrWeight);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        if (flag == FLAG_DYNAMIC_SIGNATURE) {\n          // Read signer and weight\n          uint8 addrWeight; address addr;\n          (addrWeight, addr, rindex) = _signature.readUint8Address(rindex);\n\n          // Read signature size\n          uint256 size;\n          (size, rindex) = _signature.readUint24(rindex);\n\n          // Read dynamic size signature\n          uint256 nrindex = rindex + size;\n          if (!SignatureValidator.isValidSignature(_subdigest, addr, _signature[rindex:nrindex])) {\n            revert InvalidNestedSignature(_subdigest, addr, _signature[rindex:nrindex]);\n          }\n          rindex = nrindex;\n\n          // Acumulate total weight of the signature\n          weight += addrWeight;\n\n          // Write weight and address to image\n          bytes32 node = _leafForAddressAndWeight(addr, addrWeight);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        if (flag == FLAG_NODE) {\n          // Read node hash\n          bytes32 node;\n          (node, rindex) = _signature.readBytes32(rindex);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        if (flag == FLAG_BRANCH) {\n          // Enter a branch of the signature merkle tree\n          uint256 size;\n          (size, rindex) = _signature.readUint24(rindex);\n          uint256 nrindex = rindex + size;\n\n          uint256 nweight; bytes32 node;\n          (nweight, node) = recoverBranch(_subdigest, _signature[rindex:nrindex]);\n\n          weight += nweight;\n          root = LibOptim.fkeccak256(root, node);\n\n          rindex = nrindex;\n          continue;\n        }\n\n        if (flag == FLAG_NESTED) {\n          // Enter a branch of the signature merkle tree\n          // but with an internal threshold and an external fixed weight\n          uint256 externalWeight;\n          (externalWeight, rindex) = _signature.readUint8(rindex);\n\n          uint256 internalThreshold;\n          (internalThreshold, rindex) = _signature.readUint16(rindex);\n\n          uint256 size;\n          (size, rindex) = _signature.readUint24(rindex);\n          uint256 nrindex = rindex + size;\n\n          uint256 internalWeight; bytes32 internalRoot;\n          (internalWeight, internalRoot) = recoverBranch(_subdigest, _signature[rindex:nrindex]);\n          rindex = nrindex;\n\n          if (internalWeight >= internalThreshold) {\n            weight += externalWeight;\n          }\n\n          bytes32 node = _leafForNested(internalRoot, internalThreshold, externalWeight);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n\n          continue;\n        }\n\n        if (flag == FLAG_SUBDIGEST) {\n          // A hardcoded always accepted digest\n          // it pushes the weight to the maximum\n          bytes32 hardcoded;\n          (hardcoded, rindex) = _signature.readBytes32(rindex);\n          if (hardcoded == _subdigest) {\n            weight = type(uint256).max;\n          }\n\n          bytes32 node = _leafForHardcodedSubdigest(hardcoded);\n          root = root != bytes32(0) ? LibOptim.fkeccak256(root, node) : node;\n          continue;\n        }\n\n        revert InvalidSignatureFlag(flag);\n      }\n    }\n  }\n\n  /**\n   * @notice Returns the threshold, weight, root, and checkpoint of a signature.\n   * @dev To verify the signature, the weight must be greater than or equal to the threshold, and the root\n   *      must match the expected `imageHash` of the wallet.\n   *\n   * @param _subdigest The digest to verify the signature against.\n   * @param _signature The signature to recover.\n   * @return threshold The minimum weight required for the signature to be valid.\n   * @return weight The total weight of the recovered signatures.\n   * @return imageHash The root hash of the recovered configuration\n   * @return checkpoint The checkpoint of the signature.\n   */\n  function recover(\n    bytes32 _subdigest,\n    bytes calldata _signature\n  ) internal view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    uint256 checkpoint\n  ) {\n    unchecked {\n      (weight, imageHash) = recoverBranch(_subdigest, _signature[6:]);\n\n      // Threshold & checkpoint are the top nodes\n      // (but they are first on the signature)\n      threshold = LibBytes.readFirstUint16(_signature);\n      checkpoint = LibBytes.readUint32(_signature, 2);\n\n      imageHash = LibOptim.fkeccak256(imageHash, bytes32(threshold));\n      imageHash = LibOptim.fkeccak256(imageHash, bytes32(checkpoint));\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nlibrary SubModuleNonce {\n  // Nonce schema\n  //\n  // - space[160]:nonce[96]\n  //\n  uint256 internal constant NONCE_BITS = 96;\n  bytes32 internal constant NONCE_MASK = bytes32(uint256(type(uint96).max));\n\n  /**\n   * @notice Decodes a raw nonce\n   * @dev Schema: space[160]:type[96]\n   * @param _rawNonce Nonce to be decoded\n   * @return _space The nonce space of the raw nonce\n   * @return _nonce The nonce of the raw nonce\n   */\n  function decodeNonce(uint256 _rawNonce) internal pure returns (\n    uint256 _space,\n    uint256 _nonce\n  ) {\n    unchecked {\n      // Decode nonce\n      _space = _rawNonce >> NONCE_BITS;\n      _nonce = uint256(bytes32(_rawNonce) & NONCE_MASK);\n    }\n  }\n\n  function encodeNonce(uint256 _space, uint256 _nonce) internal pure returns (uint256) {\n    unchecked {\n      // Combine space and nonce\n      return (_space << NONCE_BITS) | _nonce;\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleAuth.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nabstract contract IModuleAuth {\n  //                        IMAGE_HASH_KEY = keccak256(\"org.arcadeum.module.auth.upgradable.image.hash\");\n  bytes32 internal constant IMAGE_HASH_KEY = bytes32(0xea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8);\n\n  event ImageHashUpdated(bytes32 newImageHash);\n\n  // Errors\n  error ImageHashIsZero();\n  error InvalidSignatureType(bytes1 _type);\n\n  function _signatureValidation(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) internal virtual view returns (\n    bool isValid,\n    bytes32 subdigest\n  );\n\n  function signatureRecovery(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) public virtual view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    bytes32 subdigest,\n    uint256 checkpoint\n  );\n\n  /**\n   * @notice Validates the signature image\n   * @return true if the signature image is valid\n   */\n  function _isValidImage(bytes32) internal virtual view returns (bool) {\n    return false;\n  }\n\n  /**\n   * @notice Updates the signers configuration of the wallet\n   * @param _imageHash New required image hash of the signature\n   */\n  function updateImageHash(bytes32 _imageHash) external virtual;\n\n  /**\n   * @notice Updates the signers configuration of the wallet\n   * @param _imageHash New required image hash of the signature\n   */\n  function _updateImageHash(bytes32 _imageHash) internal virtual;\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleCalls.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IModuleCalls {\n  // Events\n  event TxFailed(bytes32 indexed _tx, uint256 _index, bytes _reason);\n  event TxExecuted(bytes32 indexed _tx, uint256 _index);\n\n  // Errors\n  error NotEnoughGas(uint256 _index, uint256 _requested, uint256 _available);\n  error InvalidSignature(bytes32 _hash, bytes _signature);\n\n  // Transaction structure\n  struct Transaction {\n    bool delegateCall;   // Performs delegatecall\n    bool revertOnError;  // Reverts transaction bundle if tx fails\n    uint256 gasLimit;    // Maximum gas to be forwarded\n    address target;      // Address of the contract to call\n    uint256 value;       // Amount of ETH to pass with the call\n    bytes data;          // calldata to pass\n  }\n\n  /**\n   * @notice Allow wallet owner to execute an action\n   * @param _txs        Transactions to process\n   * @param _nonce      Signature nonce (may contain an encoded space)\n   * @param _signature  Encoded signature\n   */\n  function execute(\n    Transaction[] calldata _txs,\n    uint256 _nonce,\n    bytes calldata _signature\n  ) external;\n\n  /**\n   * @notice Allow wallet to execute an action\n   *   without signing the message\n   * @param _txs  Transactions to execute\n   */\n  function selfExecute(\n    Transaction[] calldata _txs\n  ) external;\n}\n"
			},
			"contracts/modules/commons/ModuleOnlyDelegatecall.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ncontract ModuleOnlyDelegatecall {\n  address private immutable self;\n\n  error OnlyDelegatecall();\n\n  constructor() {\n    self = address(this);\n  }\n\n  /**\n   * @notice Modifier that only allows functions to be called via delegatecall.\n   */\n  modifier onlyDelegatecall() {\n    if (address(this) == self) {\n      revert OnlyDelegatecall();\n    }\n    _;\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleNonce.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleStorage.sol\";\n\nimport \"./submodules/nonce/SubModuleNonce.sol\";\n\n\ncontract ModuleNonce {\n  // Events\n  event NonceChange(uint256 _space, uint256 _newNonce);\n\n  // Errors\n  error BadNonce(uint256 _space, uint256 _provided, uint256 _current);\n\n  //                       NONCE_KEY = keccak256(\"org.arcadeum.module.calls.nonce\");\n  bytes32 private constant NONCE_KEY = bytes32(0x8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e);\n\n  /**\n   * @notice Returns the next nonce of the default nonce space\n   * @dev The default nonce space is 0x00\n   * @return The next nonce\n   */\n  function nonce() external virtual view returns (uint256) {\n    return readNonce(0);\n  }\n\n  /**\n   * @notice Returns the next nonce of the given nonce space\n   * @param _space Nonce space, each space keeps an independent nonce count\n   * @return The next nonce\n   */\n  function readNonce(uint256 _space) public virtual view returns (uint256) {\n    return uint256(ModuleStorage.readBytes32Map(NONCE_KEY, bytes32(_space)));\n  }\n\n  /**\n   * @notice Changes the next nonce of the given nonce space\n   * @param _space Nonce space, each space keeps an independent nonce count\n   * @param _nonce Nonce to write on the space\n   */\n  function _writeNonce(uint256 _space, uint256 _nonce) internal {\n    ModuleStorage.writeBytes32Map(NONCE_KEY, bytes32(_space), bytes32(_nonce));\n  }\n\n  /**\n   * @notice Verify if a nonce is valid\n   * @param _rawNonce Nonce to validate (may contain an encoded space)\n   */\n  function _validateNonce(uint256 _rawNonce) internal virtual {\n    // Retrieve current nonce for this wallet\n    (uint256 space, uint256 providedNonce) = SubModuleNonce.decodeNonce(_rawNonce);\n\n    uint256 currentNonce = readNonce(space);\n    if (currentNonce != providedNonce) {\n      revert BadNonce(space, providedNonce, currentNonce);\n    }\n\n    unchecked {\n      uint256 newNonce = providedNonce + 1;\n\n      _writeNonce(space, newNonce);\n      emit NonceChange(space, newNonce);\n      return;\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleAuthUpgradable.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./interfaces/IModuleAuthUpgradable.sol\";\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleAuth.sol\";\nimport \"./ModuleStorage.sol\";\n\n\nabstract contract ModuleAuthUpgradable is IModuleAuthUpgradable, ModuleSelfAuth, ModuleAuth {\n  /**\n   * @notice Updates the signers configuration of the wallet\n   * @param _imageHash New required image hash of the signature\n   */\n  function _updateImageHash(bytes32 _imageHash) internal override virtual {\n    if (_imageHash == bytes32(0)) revert ImageHashIsZero();\n    ModuleStorage.writeBytes32(IMAGE_HASH_KEY, _imageHash);\n    emit ImageHashUpdated(_imageHash);\n  }\n\n  /**\n   * @notice Returns the current image hash of the wallet\n   */\n  function imageHash() external override virtual view returns (bytes32) {\n    return ModuleStorage.readBytes32(IMAGE_HASH_KEY);\n  }\n\n  /**\n   * @notice Validates the signature image with a valid image hash defined\n   *   in the contract storage\n   * @param _imageHash Hash image of signature\n   * @return true if the signature image is valid\n   */\n  function _isValidImage(bytes32 _imageHash) internal override virtual view returns (bool) {\n    return _imageHash != bytes32(0) && _imageHash == ModuleStorage.readBytes32(IMAGE_HASH_KEY);\n  }\n\n  /**\n   * @notice Query if a contract implements an interface\n   * @param _interfaceID The interface identifier, as specified in ERC-165\n   * @return `true` if the contract implements `_interfaceID`\n   */\n  function supportsInterface(bytes4 _interfaceID) public override virtual pure returns (bool) {\n    if (_interfaceID == type(IModuleAuthUpgradable).interfaceId) {\n      return true;\n    }\n\n    return super.supportsInterface(_interfaceID);\n  }\n}\n"
			},
			"contracts/utils/LibString.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n/**\n * @title Library for string manipulation operations\n * @notice This library contains functions for manipulating strings in Solidity.\n */\nlibrary LibString {\n  bytes private constant ALPHABET_HEX_16 = '0123456789abcdef';\n  bytes private constant ALPHABET_32 = 'abcdefghijklmnopqrstuvwxyz234567';\n\n  /**\n   * @notice Prefixes a hexadecimal string with \"0x\".\n   * @param _hex The hexadecimal string to prefix.\n   * @return The prefixed hexadecimal string.\n   */\n  function prefixHexadecimal(string memory _hex) internal pure returns (string memory) {\n    return string(abi.encodePacked('0x', _hex));\n  }\n\n  /**\n   * @notice Prefixes a base32 string with \"b\".\n   * @param _base32 The base32 string to prefix.\n   * @return The prefixed base32 string.\n   */\n  function prefixBase32(string memory _base32) internal pure returns (string memory) {\n    return string(abi.encodePacked('b', _base32));\n  }\n\n  /**\n   * @notice Converts a byte array to a hexadecimal string.\n   * @param _bytes The byte array to convert.\n   * @return The resulting hexadecimal string.\n   */\n  function bytesToHexadecimal(bytes memory _bytes) internal pure returns (string memory) {\n    uint256 bytesLength = _bytes.length;\n    bytes memory bytesArray = new bytes(bytesLength << 1);\n\n    unchecked {\n      for (uint256 i = 0; i < bytesLength; i++) {\n        uint256 word = uint8(_bytes[i]);\n        uint256 ib = i << 1;\n        bytesArray[ib] = bytes1(ALPHABET_HEX_16[word >> 4]);\n        bytesArray[ib + 1] = bytes1(ALPHABET_HEX_16[word & 0xf]);\n      }\n    }\n\n    return string(bytesArray);\n  }\n\n  /**\n   * @notice Converts a byte array to a base32 string.\n   * @param _bytes The byte array to convert.\n   * @return The resulting base32 string.\n   */\n  function bytesToBase32(bytes memory _bytes) internal pure returns (string memory) {\n    uint256 bytesLength = _bytes.length;\n\n    uint256 t1 = bytesLength << 3;\n\n    unchecked {\n      // base32-encoded length = ceil(# of bits / 5)\n      bytes memory bytesArray = new bytes((t1 + 4) / 5);\n\n      uint256 bits = 0;\n      uint256 buffer = 0;\n      uint256 pointer = 0;\n\n      for (uint256 i = 0; i < bytesLength; i++) {\n        buffer = (buffer << 8) | uint8(_bytes[i]);\n        bits += 8;\n\n        while (bits >= 5) {\n          bits -= 5;\n          bytesArray[pointer] = bytes1(ALPHABET_32[(buffer >> bits) & 0x1f]);\n          pointer++;\n        }\n      }\n\n      if (bits > 0) {\n        bytesArray[pointer] = bytes1(ALPHABET_32[(buffer << (5 - bits)) & 0x1f]);\n      }\n\n      return string(bytesArray);\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/ModuleIPFS.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./ModuleSelfAuth.sol\";\nimport \"./ModuleStorage.sol\";\n\nimport \"../../utils/LibString.sol\";\n\n\ncontract ModuleIPFS is ModuleSelfAuth {\n  event IPFSRootUpdated(bytes32 _hash);\n\n  //                       IPFS_ROOT_KEY = keccak256(\"sequence.ipfs.root\")\n  bytes32 private constant IPFS_ROOT_KEY = bytes32(0x0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d033);\n\n  function ipfsRootBytes32() public view returns (bytes32) {\n    return ModuleStorage.readBytes32(IPFS_ROOT_KEY);\n  }\n\n  function ipfsRoot() public view returns (string memory) {\n    return string(\n      abi.encodePacked(\n        \"ipfs://\",\n        LibString.prefixBase32(\n          LibString.bytesToBase32(\n            abi.encodePacked(\n              hex'01701220',\n              ipfsRootBytes32()\n            )\n          )\n        )\n      )\n    );\n  }\n\n  function updateIPFSRoot(bytes32 _hash) external onlySelf {\n    _updateIPFSRoot(_hash);\n  }\n\n  function _updateIPFSRoot(bytes32 _hash) internal {\n    ModuleStorage.writeBytes32(IPFS_ROOT_KEY, _hash);\n    emit IPFSRootUpdated(_hash);\n  }\n}\n"
			},
			"contracts/utils/LibBytes.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\n/**\n * @title Library for reading data from bytes arrays\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice This library contains functions for reading data from bytes arrays.\n *\n * @dev These functions do not check if the input index is within the bounds of the data array.\n *         Reading out of bounds may return dirty values.\n */\nlibrary LibBytes {\n\n  /**\n   * @notice Returns the bytes32 value at the given index in the input data.\n   * @param data The input data.\n   * @param index The index of the value to retrieve.\n   * @return a The bytes32 value at the given index.\n   */\n  function readBytes32(\n    bytes calldata data,\n    uint256 index\n  ) internal pure returns (\n    bytes32 a\n  ) {\n    assembly {\n      a := calldataload(add(data.offset, index))\n    }\n  }\n\n  /**\n   * @notice Returns the uint8 value at the given index in the input data.\n   * @param data The input data.\n   * @param index The index of the value to retrieve.\n   * @return a The uint8 value at the given index.\n   */\n  function readUint8(\n    bytes calldata data,\n    uint256 index\n  ) internal pure returns (\n    uint8 a\n  ) {\n    assembly {\n      let word := calldataload(add(index, data.offset))\n      a := shr(248, word)\n    }\n  }\n\n  /**\n   * @notice Returns the first uint16 value in the input data.\n   * @param data The input data.\n   * @return a The first uint16 value in the input data.\n   */\n  function readFirstUint16(\n    bytes calldata data\n  ) internal pure returns (\n    uint16 a\n  ) {\n    assembly {\n      let word := calldataload(data.offset)\n      a := shr(240, word)\n    }\n  }\n\n  /**\n   * @notice Returns the uint32 value at the given index in the input data.\n   * @param data The input data.\n   * @param index The index of the value to retrieve.\n   * @return a The uint32 value at the given index.\n   */\n  function readUint32(\n    bytes calldata data,\n    uint256 index\n  ) internal pure returns (\n    uint32 a\n  ) {\n    assembly {\n      let word := calldataload(add(index, data.offset))\n      a := shr(224, word)\n    }\n  }\n\n  function readMBytes4(\n    bytes memory data,\n    uint256 index\n  ) internal pure returns (\n    bytes4 a\n  ) {\n    assembly {\n      let word := mload(add(add(data, 0x20), index))\n      a := and(word, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\n    }\n  }\n\n  function readMBytes32(\n    bytes memory data,\n    uint256 index\n  ) internal pure returns (\n    bytes32 a\n  ) {\n    assembly {\n      a := mload(add(add(data, 0x20), index))\n    }\n  }\n}\n"
			},
			"contracts/utils/LibBytesPointer.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\n/**\n * @title Library for reading data from bytes arrays with a pointer\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice This library contains functions for reading data from bytes arrays with a pointer.\n *\n * @dev These functions do not check if the input index is within the bounds of the data array.\n *         Reading out of bounds may return dirty values.\n */\nlibrary LibBytesPointer {\n\n  /**\n   * @dev Returns the first uint16 value in the input data and updates the pointer.\n   * @param _data The input data.\n   * @return a The first uint16 value.\n   * @return newPointer The new pointer.\n   */\n  function readFirstUint16(\n    bytes calldata _data\n  ) internal pure returns (\n    uint16 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(_data.offset)\n      a := shr(240, word)\n      newPointer := 2\n    }\n  }\n\n  /**\n   * @notice Returns the uint8 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint8 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readUint8(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint8 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := shr(248, word)\n      newPointer := add(_index, 1)\n    }\n  }\n\n  function readAddress(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    address a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := and(shr(96, word), 0xffffffffffffffffffffffffffffffffffffffff)\n      newPointer := add(_index, 20)\n    }\n  }\n\n  /**\n   * @notice Returns the uint8 value and the address at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint8 value at the given index.\n   * @return b The following address value.\n   * @return newPointer The new pointer.\n   */\n  function readUint8Address(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint8 a,\n    address b,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := shr(248, word)\n      b := and(shr(88, word), 0xffffffffffffffffffffffffffffffffffffffff)\n      newPointer := add(_index, 21)\n    }\n  }\n\n  /**\n   * @notice Returns the uint16 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint16 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readUint16(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint16 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := and(shr(240, word), 0xffff)\n      newPointer := add(_index, 2)\n    }\n  }\n\n  function readUintX(\n    bytes calldata _data,\n    uint256 _bytes,\n    uint256 _index\n  ) internal pure returns (\n    uint256 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      let shift := sub(256, mul(_bytes, 8))\n      a := and(shr(shift, word), sub(shl(mul(8, _bytes), 1), 1))\n      newPointer := add(_index, _bytes)\n    }\n  }\n\n  /**\n   * @notice Returns the uint24 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint24 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readUint24(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint24 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := and(shr(232, word), 0xffffff)\n      newPointer := add(_index, 3)\n    }\n  }\n\n  /**\n   * @notice Returns the uint64 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _index The index of the value to retrieve.\n   * @return a The uint64 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readUint64(\n    bytes calldata _data,\n    uint256 _index\n  ) internal pure returns (\n    uint64 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      let word := calldataload(add(_index, _data.offset))\n      a := and(shr(192, word), 0xffffffffffffffff)\n      newPointer := add(_index, 8)\n    }\n  }\n\n  function readBytes4(\n    bytes calldata _data,\n    uint256 _pointer\n  ) internal pure returns (\n    bytes4 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      a := calldataload(add(_pointer, _data.offset))\n      a := and(a, 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000)\n      newPointer := add(_pointer, 4)\n    }\n  }\n\n  /**\n   * @notice Returns the bytes32 value at the given index in the input data and updates the pointer.\n   * @param _data The input data.\n   * @param _pointer The index of the value to retrieve.\n   * @return a The bytes32 value at the given index.\n   * @return newPointer The new pointer.\n   */\n  function readBytes32(\n    bytes calldata _data,\n    uint256 _pointer\n  ) internal pure returns (\n    bytes32 a,\n    uint256 newPointer\n  ) {\n    assembly {\n      a := calldataload(add(_pointer, _data.offset))\n      newPointer := add(_pointer, 32)\n    }\n  }\n}\n"
			},
			"contracts/utils/SignatureValidator.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"../interfaces/IERC1271Wallet.sol\";\n\nimport \"./LibBytes.sol\";\n\n/**\n * @dev Contains logic for signature validation.\n * Signatures from wallet contracts assume ERC-1271 support (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1271.md)\n * Notes: Methods are strongly inspired by contracts in https://github.com/0xProject/0x-monorepo/blob/development/\n */\nlibrary SignatureValidator {\n  // Errors\n  error InvalidSignatureLength(bytes _signature);\n  error EmptySignature();\n  error InvalidSValue(bytes _signature, bytes32 _s);\n  error InvalidVValue(bytes _signature, uint256 _v);\n  error UnsupportedSignatureType(bytes _signature, uint256 _type, bool _recoverMode);\n  error SignerIsAddress0(bytes _signature);\n\n  using LibBytes for bytes;\n\n  /***********************************|\n  |             Variables             |\n  |__________________________________*/\n\n  // bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))\n  bytes4 constant internal ERC1271_MAGICVALUE = 0x20c13b0b;\n\n  // bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))\n  bytes4 constant internal ERC1271_MAGICVALUE_BYTES32 = 0x1626ba7e;\n\n  // Allowed signature types.\n  uint256 private constant SIG_TYPE_EIP712 = 1;\n  uint256 private constant SIG_TYPE_ETH_SIGN = 2;\n  uint256 private constant SIG_TYPE_WALLET_BYTES32 = 3;\n\n  /***********************************|\n  |        Signature Functions        |\n  |__________________________________*/\n\n /**\n   * @notice Recover the signer of hash, assuming it's an EOA account\n   * @dev Only for SignatureType.EIP712 and SignatureType.EthSign signatures\n   * @param _hash      Hash that was signed\n   *   encoded as (bytes32 r, bytes32 s, uint8 v, ... , SignatureType sigType)\n   */\n  function recoverSigner(\n    bytes32 _hash,\n    bytes calldata _signature\n  ) internal pure returns (address signer) {\n    if (_signature.length != 66) revert InvalidSignatureLength(_signature);\n    uint256 signatureType = _signature.readUint8(_signature.length - 1);\n\n    // Variables are not scoped in Solidity.\n    uint8 v = _signature.readUint8(64);\n    bytes32 r = _signature.readBytes32(0);\n    bytes32 s = _signature.readBytes32(32);\n\n    // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n    // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n    // the valid range for s in (281): 0 < s < secp256k1n ÷ 2 + 1, and for v in (282): v ∈ {27, 28}. Most\n    // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n    //\n    // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n    // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n    // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n    // these malleable signatures as well.\n    //\n    // Source OpenZeppelin\n    // https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/cryptography/ECDSA.sol\n\n    if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n      revert InvalidSValue(_signature, s);\n    }\n\n    if (v != 27 && v != 28) {\n      revert InvalidVValue(_signature, v);\n    }\n\n    // Signature using EIP712\n    if (signatureType == SIG_TYPE_EIP712) {\n      signer = ecrecover(_hash, v, r, s);\n\n    // Signed using web3.eth_sign() or Ethers wallet.signMessage()\n    } else if (signatureType == SIG_TYPE_ETH_SIGN) {\n      signer = ecrecover(\n        keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _hash)),\n        v,\n        r,\n        s\n      );\n\n    } else {\n      // We cannot recover the signer for any other signature type.\n      revert UnsupportedSignatureType(_signature, signatureType, true);\n    }\n\n    // Prevent signer from being 0x0\n    if (signer == address(0x0)) revert SignerIsAddress0(_signature);\n\n    return signer;\n  }\n\n /**\n   * @notice Returns true if the provided signature is valid for the given signer.\n   * @dev Supports SignatureType.EIP712, SignatureType.EthSign, and ERC1271 signatures\n   * @param _hash      Hash that was signed\n   * @param _signer    Address of the signer candidate\n   * @param _signature Signature byte array\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    address _signer,\n    bytes calldata _signature\n  ) internal view returns (bool valid) {\n    if (_signature.length == 0) {\n      revert EmptySignature();\n    }\n\n    uint256 signatureType = uint8(_signature[_signature.length - 1]);\n    if (signatureType == SIG_TYPE_EIP712 || signatureType == SIG_TYPE_ETH_SIGN) {\n      // Recover signer and compare with provided\n      valid = recoverSigner(_hash, _signature) == _signer;\n\n    } else if (signatureType == SIG_TYPE_WALLET_BYTES32) {\n      // Remove signature type before calling ERC1271, restore after call\n      valid = ERC1271_MAGICVALUE_BYTES32 == IERC1271Wallet(_signer).isValidSignature(_hash, _signature[0:_signature.length - 1]);\n\n    } else {\n      // We cannot validate any other signature type.\n      // We revert because we can say nothing about its validity.\n      revert UnsupportedSignatureType(_signature, signatureType, false);\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/interfaces/IModuleAuthUpgradable.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IModuleAuthUpgradable {\n  /**\n   * @notice Returns the current image hash of the wallet\n   */\n  function imageHash() external view returns (bytes32);\n}\n"
			},
			"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./SequenceBaseSig.sol\";\n\nimport \"../../interfaces/IModuleAuth.sol\";\n\nimport \"../../ModuleSelfAuth.sol\";\nimport \"../../ModuleStorage.sol\";\n\nimport \"../../../../utils/LibBytesPointer.sol\";\nimport \"../../../../utils/LibOptim.sol\";\n\n/**\n * @title Sequence chained auth recovery submodule\n * @author Agustin Aguilar (aa@horizon.io)\n * @notice Defines Sequence signatures that work by delegating control to new configurations.\n * @dev The delegations can be chained together, the first signature is the one that is used to validate\n *      the message, the last signature must match the current on-chain configuration of the wallet.\n */\nabstract contract SequenceChainedSig is IModuleAuth, ModuleSelfAuth {\n  using LibBytesPointer for bytes;\n\n  bytes32 public constant SET_IMAGE_HASH_TYPE_HASH = keccak256(\"SetImageHash(bytes32 imageHash)\");\n\n  error LowWeightChainedSignature(bytes _signature, uint256 threshold, uint256 _weight);\n  error WrongChainedCheckpointOrder(uint256 _current, uint256 _prev);\n\n  /**\n   * @notice Defined the special token that must be signed to delegate control to a new configuration.\n   * @param _imageHash The hash of the new configuration.\n   * @return bytes32 The message hash to be signed.\n   */\n  function _hashSetImageHashStruct(bytes32 _imageHash) internal pure returns (bytes32) {\n    return LibOptim.fkeccak256(SET_IMAGE_HASH_TYPE_HASH, _imageHash);\n  }\n\n  /**\n   * @notice Returns the threshold, weight, root, and checkpoint of a (chained) signature.\n   * \n   * @dev This method return the `threshold`, `weight` and `imageHash` of the last signature in the chain.\n   *      Intermediate signatures are validated directly in this method. The `subdigest` is the one of the\n   *      first signature in the chain (since that's the one that is used to validate the message).\n   *\n   * @param _digest The digest to recover the signature from.\n   * @param _signature The signature to recover.\n   * @return threshold The threshold of the (last) signature.\n   * @return weight The weight of the (last) signature.\n   * @return imageHash The image hash of the (last) signature.\n   * @return subdigest The subdigest of the (first) signature in the chain.\n   * @return checkpoint The checkpoint of the (last) signature.\n   */\n  function chainedRecover(\n    bytes32 _digest,\n    bytes calldata _signature\n  ) internal view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    bytes32 subdigest,\n    uint256 checkpoint\n  ) {\n    uint256 rindex = 1;\n    uint256 sigSize;\n\n    //\n    // First signature out of the loop\n    //\n\n    // First uint24 is the size of the signature\n    (sigSize, rindex) = _signature.readUint24(rindex);\n    uint256 nrindex = sigSize + rindex;\n\n    (\n      threshold,\n      weight,\n      imageHash,\n      subdigest,\n      checkpoint\n    ) = signatureRecovery(\n      _digest,\n      _signature[rindex:nrindex]\n    );\n\n    if (weight < threshold) {\n      revert LowWeightChainedSignature(_signature[rindex:nrindex], threshold, weight);\n    }\n\n    rindex = nrindex;\n\n    // The following signatures are handled by this loop.\n    // This is done this way because the first signature does not have a\n    // checkpoint to be validated against.\n    while (rindex < _signature.length) {\n      // First uint24 is the size of the signature\n      (sigSize, rindex) = _signature.readUint24(rindex);\n      nrindex = sigSize + rindex;\n\n      uint256 nextCheckpoint;\n\n      (\n        threshold,\n        weight,\n        imageHash,,\n        // Do not change the subdigest;\n        // it should remain that of the first signature.\n        nextCheckpoint\n      ) = signatureRecovery(\n        _hashSetImageHashStruct(imageHash),\n        _signature[rindex:nrindex]\n      );\n\n      // Validate signature\n      if (weight < threshold) {\n        revert LowWeightChainedSignature(_signature[rindex:nrindex], threshold, weight);\n      }\n\n      // Checkpoints must be provided in descending order\n      // since the first signature is the one that is used to validate the message\n      // and the last signature is the one that is used to validate the current configuration\n      if (nextCheckpoint >= checkpoint) {\n        revert WrongChainedCheckpointOrder(nextCheckpoint, checkpoint);\n      }\n\n      checkpoint = nextCheckpoint;\n      rindex = nrindex;\n    }\n  }\n}\n"
			},
			"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\nlibrary SequenceNoChainIdSig {\n\n  /**\n   * @notice Computes a subdigest for a Sequence signature that works on all chains.\n   * @dev The subdigest is computed by removing the chain ID from the digest (using 0 instead).\n   * @param _digest The digest of the chain of signatures.\n   * @return bytes32 The subdigest with no chain ID.\n   */\n  function subdigest(bytes32 _digest) internal view returns (bytes32) {\n    return keccak256(\n      abi.encodePacked(\n        \"\\x19\\x01\",\n        uint256(0),\n        address(this),\n        _digest\n      )\n    );\n  }\n}\n"
			},
			"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\nimport \"./SequenceBaseSig.sol\";\n\n\nlibrary SequenceDynamicSig {\n\n  /**\n   * @notice Recover a \"dynamically encoded\" Sequence signature.\n   * @dev The Signature is stripped of the first byte, which is the encoding flag.\n   *\n   * @param _subdigest The digest of the signature.\n   * @param _signature The Sequence signature.\n   * @return threshold The threshold weight required to validate the signature.\n   * @return weight The weight of the signature.\n   * @return imageHash The hash of the recovered configuration.\n   * @return checkpoint The checkpoint of the configuration.\n   */\n  function recover(\n    bytes32 _subdigest,\n    bytes calldata _signature\n  ) internal view returns (\n    uint256 threshold,\n    uint256 weight,\n    bytes32 imageHash,\n    uint256 checkpoint\n  ) {\n    return SequenceBaseSig.recover(_subdigest, _signature[1:]);\n  }\n}\n"
			},
			"contracts/interfaces/IERC1271Wallet.sol": {
				"content": "// SPDX-License-Identifier: Apache-2.0\npragma solidity 0.8.18;\n\n\ninterface IERC1271Wallet {\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided data\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided data\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n   *   > This function MAY modify Ethereum's state\n   * @param _data       Arbitrary length data signed on the behalf of address(this)\n   * @param _signature  Signature byte array associated with _data\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes calldata _data,\n    bytes calldata _signature)\n    external\n    view\n    returns (bytes4 magicValue);\n\n  /**\n   * @notice Verifies whether the provided signature is valid with respect to the provided hash\n   * @dev MUST return the correct magic value if the signature provided is valid for the provided hash\n   *   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")\n   *   > This function MAY modify Ethereum's state\n   * @param _hash       keccak256 hash that was signed\n   * @param _signature  Signature byte array associated with _data\n   * @return magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\n   */\n  function isValidSignature(\n    bytes32 _hash,\n    bytes calldata _signature)\n    external\n    view\n    returns (bytes4 magicValue);\n}"
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/interfaces/IERC1271Wallet.sol": {
				"IERC1271Wallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "magicValue",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")   > This function MAY modify Ethereum's state",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signature": "Signature byte array associated with _data"
								},
								"returns": {
									"magicValue": "Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\")   > This function MAY modify Ethereum's state",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signature": "Signature byte array associated with _data"
								},
								"returns": {
									"magicValue": "Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"magicValue\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\")   > This function MAY modify Ethereum's state\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signature\":\"Signature byte array associated with _data\"},\"returns\":{\"magicValue\":\"Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\")   > This function MAY modify Ethereum's state\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signature\":\"Signature byte array associated with _data\"},\"returns\":{\"magicValue\":\"Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC1271Wallet.sol\":\"IERC1271Wallet\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/interfaces/receivers/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/receivers/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/receivers/IERC1155Receiver.sol\":{\"keccak256\":\"0x934ce83f4abb6e487c5092af8ff0b6ef5ca697b893fa4d24b3d63b994441bf62\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2fef087d5a188a3b96a3bf0ddae611a802dfd6b72dbf92895e9d3512c77b70ff\",\"dweb:/ipfs/QmTsvU6DDK7dJAddyVCMe81oa2bCgmcz4dibbnwGQdmKDt\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/receivers/IERC223Receiver.sol": {
				"IERC223Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "tokenFallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tokenFallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/receivers/IERC223Receiver.sol\":\"IERC223Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/receivers/IERC223Receiver.sol\":{\"keccak256\":\"0x27f58bb8b5a9b976b39a92c9c989a7d76476a121ca60827ff01d4c69c3839f32\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://83af2e3d4e7f42aab73a7ed8f02b9830817f6f621ac17dc9d09d3cccbf2b769f\",\"dweb:/ipfs/QmaBecBuHUtskh5hoKf76wu5wf8aW2rX7oxCtpbLid8vRV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/receivers/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/receivers/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/receivers/IERC721Receiver.sol\":{\"keccak256\":\"0x20623593e9b812c4ff01da0d9abf3540986f3ce8c4a19137ed42d8d9ee7ec5d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da617c8301ba39ac038d62fd7ae25a8b5e1a076924ef843e55c912ac5677b9f4\",\"dweb:/ipfs/Qmf71tpo1CkuZL5pHXD4TtAxiCeHiDJ3hK5hM7WDEKUzds\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/MainModuleUpgradableDuo.sol": {
				"MainModuleUpgradableDuo": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_provided",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								}
							],
							"name": "BadNonce",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "CreateFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExternalImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "HookAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "HookDoesNotExist",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_requested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_available",
									"type": "uint256"
								}
							],
							"name": "NotEnoughGas",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OnlyDelegatecall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_contract",
									"type": "address"
								}
							],
							"name": "CreatedContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "DefinedHook",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newExternalImageHash",
									"type": "bytes32"
								}
							],
							"name": "ExternalImageHashUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "IPFSRootUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "ImplementationUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newNonce",
									"type": "uint256"
								}
							],
							"name": "NonceChange",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "TxExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_reason",
									"type": "bytes"
								}
							],
							"name": "TxFailed",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "addHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "createContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "externalImageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "imageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ipfsRoot",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ipfsRootBytes32",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "readHook",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								}
							],
							"name": "readNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "removeHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								}
							],
							"name": "selfExecute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateExternalImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "updateIPFSRoot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_ipfsRoot",
									"type": "bytes32"
								}
							],
							"name": "updateImageHashAndIPFS",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "updateImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "This implementation does not include the `ModuleExtraAuth` functionality.",
						"kind": "dev",
						"methods": {
							"addHook(bytes4,address)": {
								"details": "Can't overwrite hooks that are part of the main module (those defined below)",
								"params": {
									"_implementation": "Hook implementation contract",
									"_signature": "Signature function linked to the hook"
								}
							},
							"createContract(bytes)": {
								"params": {
									"_code": "Creation code of the contract"
								},
								"returns": {
									"addr": "The address of the created contract"
								}
							},
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"details": "Relayers must ensure that the gasLimit specified for each transaction      is acceptable to them. A user could specify large enough that it could      consume all the gas available.",
								"params": {
									"_nonce": "Signature nonce (may contain an encoded space)",
									"_signature": "Encoded signature",
									"_txs": "Transactions to process"
								}
							},
							"nonce()": {
								"details": "The default nonce space is 0x00",
								"returns": {
									"_0": "The next nonce"
								}
							},
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`"
								}
							},
							"onERC721Received(address,address,uint256,bytes)": {
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`"
								}
							},
							"readHook(bytes4)": {
								"params": {
									"_signature": "Signature function"
								},
								"returns": {
									"_0": "The address of the implementation hook, address(0) if none"
								}
							},
							"readNonce(uint256)": {
								"params": {
									"_space": "Nonce space, each space keeps an independent nonce count"
								},
								"returns": {
									"_0": "The next nonce"
								}
							},
							"removeHook(bytes4)": {
								"details": "Can't remove hooks that are part of the main module (those defined below)      without upgrading the wallet",
								"params": {
									"_signature": "Signature function linked to the hook"
								}
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"params": {
									"_txs": "Transactions to execute"
								}
							},
							"signatureRecovery(bytes32,bytes)": {
								"details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
								"params": {
									"_digest": "Digest of the signed data.",
									"_signature": "A Sequence signature."
								},
								"returns": {
									"checkpoint": "A nonce that is incremented every time a new configuration is set.",
									"imageHash": "The imageHash of the configuration that signed the message.",
									"subdigest": "A modified version of the original digest, unique for each wallet/network.",
									"threshold": "The required number of signatures needed to consider the signature valid.",
									"weight": "The actual number of signatures collected in the signature."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "If using a new main module, developers must ensure that all inherited      contracts by the main module don't conflict and are accounted for to be      supported by the supportsInterface method.",
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateExternalImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the ERC-1271 signatures"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							},
							"updateImageHashAndIPFS(bytes32,bytes32)": {
								"details": "These two operations are often performed together, so this function      allows to save some gas by performing them in a single step.",
								"params": {
									"_imageHash": "The new image hash to be set.",
									"_ipfsRoot": "The new IPFS root to be set."
								}
							},
							"updateImplementation(address)": {
								"details": "WARNING Updating the implementation can brick the wallet",
								"params": {
									"_implementation": "New main module implementation"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"@_2002": {
									"entryPoint": null,
									"id": 2002,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a060405234801561001057600080fd5b5030608052608051613673610030600039600061095a01526136736000f3fe60806040526004361061019a5760003560e01c8063853c5068116100e1578063a38cef191161008a578063bc197c8111610064578063bc197c81146105cd578063c71f1f9614610615578063d0748f711461062a578063f23a6e611461064a576101a1565b8063a38cef1914610578578063affed0e014610598578063b93ea7ad146105ad576101a1565b80638efa6441116100bb5780638efa64411461052e57806390042baf146105505780639bd58b1614610563576101a1565b8063853c5068146104a65780638976c44c146104ee5780638c3f55631461050e576101a1565b8063295614261161014357806357c56d6b1161011d57806357c56d6b1461043257806361c2926c146104665780637a9a162814610486576101a1565b806329561426146103cf5780634fcf3eca146103ef57806351605d801461040f576101a1565b80631626ba7e116101745780631626ba7e1461034a5780631a9b23371461036a57806320c13b0b146103af576101a1565b806301ffc9a71461027f578063025b22bc146102b4578063150b7a02146102d4576101a1565b366101a157005b6004361061027d5760006101d86000357fffffffff0000000000000000000000000000000000000000000000000000000016610690565b905073ffffffffffffffffffffffffffffffffffffffff81161561027b576000808273ffffffffffffffffffffffffffffffffffffffff16600036604051610221929190612ada565b600060405180830381855af49150503d806000811461025c576040519150601f19603f3d011682016040523d82523d6000602084013e610261565b606091505b50915091508161027357805160208201fd5b805160208201f35b505b005b34801561028b57600080fd5b5061029f61029a366004612b18565b6106e4565b60405190151581526020015b60405180910390f35b3480156102c057600080fd5b5061027d6102cf366004612b5e565b6106ef565b3480156102e057600080fd5b506103196102ef366004612bc2565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016102ab565b34801561035657600080fd5b50610319610365366004612c31565b610741565b34801561037657600080fd5b5061038a610385366004612b18565b610758565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102ab565b3480156103bb57600080fd5b506103196103ca366004612c7d565b610763565b3480156103db57600080fd5b5061027d6103ea366004612ce9565b61077c565b3480156103fb57600080fd5b5061027d61040a366004612b18565b6107c6565b34801561041b57600080fd5b5061042461088e565b6040519081526020016102ab565b34801561043e57600080fd5b506104247f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d181565b34801561047257600080fd5b5061027d610481366004612d47565b6108bd565b34801561049257600080fd5b5061027d6104a1366004612d89565b610943565b3480156104b257600080fd5b506104c66104c1366004612c31565b610a48565b604080519586526020860194909452928401919091526060830152608082015260a0016102ab565b3480156104fa57600080fd5b5061027d610509366004612ce9565b610c10565b34801561051a57600080fd5b50610424610529366004612ce9565b610ce8565b34801561053a57600080fd5b50610543610d14565b6040516102ab9190612e60565b61038a61055e366004612ea2565b610d95565b34801561056f57600080fd5b50610424610e7f565b34801561058457600080fd5b5061027d610593366004612ce9565b610ea9565b3480156105a457600080fd5b50610424610ef3565b3480156105b957600080fd5b5061027d6105c8366004612f71565b610eff565b3480156105d957600080fd5b506103196105e8366004612fa6565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561062157600080fd5b50610424610fca565b34801561063657600080fd5b5061027d610645366004613061565b610ff4565b34801561065657600080fd5b50610319610665366004613083565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60006106de7fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1207fffffffff000000000000000000000000000000000000000000000000000000008416611047565b92915050565b60006106de826110a5565b333014610735576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b61073e81611101565b50565b600061074e8484846111b5565b90505b9392505050565b60006106de82610690565b600061077185858585611200565b90505b949350505050565b3330146107bd576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b61073e81611263565b333014610807576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b600061081282610690565b73ffffffffffffffffffffffffffffffffffffffff1603610883576040517f1c3812cc0000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008216600482015260240161072c565b61073e8160006112f3565b60006108b87fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf85490565b905090565b3330146108fe576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b600061093183836040516020016109169291906132a3565b604051602081830303815290604052805190602001206113b3565b905061093e818484611438565b505050565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036109b2576040517f0a57d61d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109bb836115c0565b6000806109f38588886040516020016109d6939291906132eb565b6040516020818303038152906040528051906020012085856116bd565b9150915081610a34578084846040517f8f4a234f00000000000000000000000000000000000000000000000000000000815260040161072c93929190613305565b610a3f818888611438565b50505050505050565b60008060008060008087876000818110610a6457610a6461331f565b909101357fff00000000000000000000000000000000000000000000000000000000000000169150819050610aba57610a9c896113b3565b9250610aa98389896116fb565b92985090965094509150610c059050565b7fff0000000000000000000000000000000000000000000000000000000000000081811601610af957610aec896113b3565b9250610aa983898961174c565b7ffe000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821601610b4b57610aec89611778565b7ffd000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821601610baf57610b9f8989896117e5565b9550955095509550955050610c05565b6040517f6085cd820000000000000000000000000000000000000000000000000000000081527fff000000000000000000000000000000000000000000000000000000000000008216600482015260240161072c565b939792965093509350565b333014610c51576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b80610c88576040517fb24b5b3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cb17f8c8764b3a50fee69c9bee6e956047501f434fb0e2349c75844a401a7f2a020d2829055565b6040518181527f1f63199319eff813052575c41087f618aba07b006664fed6c01f7ee9c5716835906020015b60405180910390a150565b60006106de7f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e83611047565b6060610d71610d6c610d24610fca565b6040517f017012200000000000000000000000000000000000000000000000000000000060208201526024810191909152604401604051602081830303815290604052611962565b611b7b565b604051602001610d81919061334e565b604051602081830303815290604052905090565b6000333014610dd8576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b81516020830134f0905073ffffffffffffffffffffffffffffffffffffffff8116610e3157816040517f0d25719100000000000000000000000000000000000000000000000000000000815260040161072c9190612e60565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c9060200160405180910390a1919050565b60006108b87f8c8764b3a50fee69c9bee6e956047501f434fb0e2349c75844a401a7f2a020d25490565b333014610eea576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b61073e81611ba4565b60006108b86000610ce8565b333014610f40576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b6000610f4b83610690565b73ffffffffffffffffffffffffffffffffffffffff1614610fbc576040517f5b4d6d6a0000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008316600482015260240161072c565b610fc682826112f3565b5050565b60006108b87f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d0335490565b333014611035576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b61103e82611263565b610fc681611ba4565b6000808383604051602001611066929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b60007f2e74b92a000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016110f857506001919050565b6106de82611bfd565b73ffffffffffffffffffffffffffffffffffffffff81163b611167576040517f0c76093700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240161072c565b61116f813055565b60405173ffffffffffffffffffffffffffffffffffffffff821681527f310ba5f1d2ed074b51e2eccd052a47ae9ab7c6b800d1fca3db3999d6a592ca0390602001610cdd565b6000806111c3858585611c59565b50905080156111f557507f1626ba7e000000000000000000000000000000000000000000000000000000009050610751565b506000949350505050565b6000806112258686604051611216929190612ada565b60405180910390208585611c59565b509050801561125757507f20c13b0b000000000000000000000000000000000000000000000000000000009050610774565b50600095945050505050565b8061129a576040517f4294d12700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112c37fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8829055565b6040518181527f307ed6bd941ee9fc80f369c94af5fa11e25bab5102a6140191756c5474a30bfa90602001610cdd565b604080517fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1206020808301919091527fffffffff000000000000000000000000000000000000000000000000000000008516828401819052835180840385018152606084018086528151919093012073ffffffffffffffffffffffffffffffffffffffff8616908190559152608082015290517f0d7fc113eaf016db4681a1ba86d083ce3e0961f321062a75ac2b0aeb33deeed19181900360a00190a15050565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201524660228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166042820152605681018290526000906076015b604051602081830303815290604052805190602001209050919050565b8060005b818110156115b957368484838181106114575761145761331f565b90506020028101906114699190613393565b90506040810135805a10156114be5782815a6040517f2bb3e3ba00000000000000000000000000000000000000000000000000000000815260048101939093526024830191909152604482015260640161072c565b60006114cd60208401846133d1565b1561150c576115056114e56080850160608601612b5e565b83156114f157836114f3565b5a5b61150060a08701876133ec565b611c8a565b9050611547565b61154461151f6080850160608601612b5e565b608085013584156115305784611532565b5a5b61153f60a08801886133ec565b611ca5565b90505b801561158c57877f5c4eeb02dabf8976016ab414d617f9a162936dcace3cdef8c69ef6e262ad5ae78560405161157f91815260200190565b60405180910390a26115ae565b6115ae61159f60408501602086016133d1565b89866115a9611cc2565b611ce1565b50505060010161143c565b5050505050565b606081901c6bffffffffffffffffffffffff821660006115df83610ce8565b905081811461162b576040517f9b6514f400000000000000000000000000000000000000000000000000000000815260048101849052602481018390526044810182905260640161072c565b604080517f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e60208083019190915281830186905282518083038401815260609092019092528051910120600183019081905560408051858152602081018390527f1f180c27086c7a39ea2a7b25239d1ab92348f07ca7bb59d1438fcf527568f881910160405180910390a15050505050565b60008060008060006116d0888888610a48565b509650919450925090508282108015906116ee57506116ee81611d2f565b9450505050935093915050565b600080808061171687611711876006818b613451565b611d3a565b6000908152873560f01c6020818152604080842084526002909a013560e01c908190529890912090999198509695509350505050565b600080808061176787611762876001818b613451565b6116fb565b935093509350935093509350935093565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526000602282018190527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166042830152605682018390529060760161141b565b6000808080806004600188013560e81c8261180083836134aa565b90506118128b6104c183868d8f613451565b939b509199509750955093508787101561186a5761183281848b8d613451565b89896040517fb006aba000000000000000000000000000000000000000000000000000000000815260040161072c94939291906134bd565b8092505b888310156119545760038301928a013560e81c915061188d83836134aa565b905060006118af61189d886121d0565b8c8c879086926104c193929190613451565b939c50919a5098509091505088881015611907576118cf82858c8e613451565b8a8a6040517fb006aba000000000000000000000000000000000000000000000000000000000815260040161072c94939291906134bd565b84811061194a576040517f37daf62b000000000000000000000000000000000000000000000000000000008152600481018290526024810186905260440161072c565b935091508161186e565b505050939792965093509350565b8051606090600381901b60006005600483010467ffffffffffffffff81111561198d5761198d612e73565b6040519080825280601f01601f1916602001820160405280156119b7576020820181803683370190505b5090506000806000805b86811015611acb578881815181106119db576119db61331f565b01602001516008948501949390931b60f89390931c92909217915b60058410611ac3576040805180820190915260208082527f6162636465666768696a6b6c6d6e6f707172737475767778797a323334353637818301527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb90950194601f85871c16908110611a6c57611a6c61331f565b602001015160f81c60f81b858381518110611a8957611a8961331f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001909101906119f6565b6001016119c1565b508215611b6f576040518060400160405280602081526020017f6162636465666768696a6b6c6d6e6f707172737475767778797a3233343536378152508360050383901b601f1681518110611b2257611b2261331f565b602001015160f81c60f81b848281518110611b3f57611b3f61331f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b50919695505050505050565b606081604051602001611b8e91906134e4565b6040516020818303038152906040529050919050565b611bcd7f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d033829055565b6040518181527f20d3ef1b5738a9f6d7beae515432206e7a8e2740ca6dcf46a952190ad01bcb5190602001610cdd565b60007f6ffbd451000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601611c5057506001919050565b6106de82612204565b6000806000806000611c6c888888610a48565b509650919450925090508282108015906116ee57506116ee81612345565b60006040518284823760008084838989f49695505050505050565b6000604051828482376000808483898b8af1979650505050505050565b60603d604051915060208201818101604052818352816000823e505090565b8315611cef57805160208201fd5b827fab46c69f7f32e1bf09b0725853da82a211e5402a0600296ab499a2fb5ea3b4198383604051611d21929190613529565b60405180910390a250505050565b60006106de8261237c565b60008060005b838110156121c757600181019085013560f81c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101611de157601582019186013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff81169074ff000000000000000000000000000000000000000016811785611dc75780611dd6565b60008681526020829052604090205b955050505050611d40565b80611e775760018201918681013560f81c906043016000611e0d8a611e0884888c8e613451565b6123af565b60ff841697909701969194508491905060a083901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff82161786611e5c5780611e6b565b60008781526020829052604090205b96505050505050611d40565b60028103611f9f576000808784013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff16601586019550909250905060008885013560e81c600386018162ffffff169150809650819250505060008186019050611ef08b848c8c8a908692611eeb93929190613451565b612672565b611f38578a83611f0283898d8f613451565b6040517f9a94623200000000000000000000000000000000000000000000000000000000815260040161072c9493929190613542565b60ff8416979097019694508460a084901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161787611f835780611f92565b60008881526020829052604090205b9750505050505050611d40565b60038103611fd257602082019186013583611fba5780611fc9565b60008481526020829052604090205b93505050611d40565b6004810361201e576003808301928781013560e81c9190820101600080611fff8b61171185898d8f613451565b60009889526020526040909720969097019650909350611d4092505050565b600681036121265760008287013560f81c60018401935060ff16905060008784013560f01c60028501945061ffff16905060008885013560e81c600386018162ffffff16915080965081925050506000818601905060008061208c8d8d8d8b90879261171193929190613451565b939850889390925090508482106120a257988501985b604080517f53657175656e6365206e657374656420636f6e6669673a0a0000000000000000602080830191909152603882018490526058820188905260788083018a90528351808403909101815260989092019092528051910120896121085780612117565b60008a81526020829052604090205b99505050505050505050611d40565b60058103612192576020820191860135878103612161577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94505b600061216c82612859565b9050846121795780612188565b60008581526020829052604090205b9450505050611d40565b6040517fb2505f7c0000000000000000000000000000000000000000000000000000000081526004810182905260240161072c565b50935093915050565b7f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d160009081526020829052604081206106de565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fec6aba5000000000000000000000000000000000000000000000000000000000148061229757507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806122e357507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061232f57507fffffffff0000000000000000000000000000000000000000000000000000000082167fc0ee0b8a00000000000000000000000000000000000000000000000000000000145b1561233c57506001919050565b6106de82612894565b600081158015906106de57507f8c8764b3a50fee69c9bee6e956047501f434fb0e2349c75844a401a7f2a020d2545b821492915050565b600081158015906106de57507fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf854612374565b6000604282146123ef5782826040517f2ee17a3d00000000000000000000000000000000000000000000000000000000815260040161072c929190613582565b60006124086123ff600185613596565b85013560f81c90565b60ff169050604084013560f81c843560208601357f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a081111561247c578686826040517fad4aac7600000000000000000000000000000000000000000000000000000000815260040161072c939291906135a9565b8260ff16601b1415801561249457508260ff16601c14155b156124d1578686846040517fe578897e00000000000000000000000000000000000000000000000000000000815260040161072c939291906135cd565b6001840361253e576040805160008152602081018083528a905260ff851691810191909152606081018390526080810182905260019060a0015b6020604051602081039080840390855afa15801561252d573d6000803e3d6000fd5b505050602060405103519450612616565b600284036125db576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101899052600190605c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff861690820152606081018490526080810183905260a00161250b565b86868560016040517f9dfba85200000000000000000000000000000000000000000000000000000000815260040161072c94939291906135f4565b73ffffffffffffffffffffffffffffffffffffffff85166126675786866040517f6c1719d200000000000000000000000000000000000000000000000000000000815260040161072c929190613582565b505050509392505050565b60008181036126ad576040517fac241e1100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083836126bc600182613596565b8181106126cb576126cb61331f565b919091013560f81c91505060018114806126e55750600281145b1561272a578473ffffffffffffffffffffffffffffffffffffffff1661270c8786866123af565b73ffffffffffffffffffffffffffffffffffffffff16149150612850565b600381036128155773ffffffffffffffffffffffffffffffffffffffff8516631626ba7e878660008761275e600182613596565b9261276b93929190613451565b6040518463ffffffff1660e01b815260040161278993929190613305565b602060405180830381865afa1580156127a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ca9190613620565b7fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e00000000000000000000000000000000000000000000000000000000149150612850565b83838260006040517f9dfba85200000000000000000000000000000000000000000000000000000000815260040161072c94939291906135f4565b50949350505050565b6040517f53657175656e636520737461746963206469676573743a0a000000000000000060208201526038810182905260009060580161141b565b60007ffda4dd44000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016128e757506001919050565b6106de8260007fe4a77bbc000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083160161293e57506001919050565b6106de8260007fda44f878000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083160161299557506001919050565b6106de8260007fae9fa280000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016129ec57506001919050565b6106de8260007fffffffff0000000000000000000000000000000000000000000000000000000082167fac6a444e000000000000000000000000000000000000000000000000000000001480612a8357507fffffffff0000000000000000000000000000000000000000000000000000000082167f36e7817500000000000000000000000000000000000000000000000000000000145b15612a9057506001919050565b7f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316146106de565b8183823760009101908152919050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461073e57600080fd5b600060208284031215612b2a57600080fd5b813561075181612aea565b803573ffffffffffffffffffffffffffffffffffffffff81168114612b5957600080fd5b919050565b600060208284031215612b7057600080fd5b61075182612b35565b60008083601f840112612b8b57600080fd5b50813567ffffffffffffffff811115612ba357600080fd5b602083019150836020828501011115612bbb57600080fd5b9250929050565b600080600080600060808688031215612bda57600080fd5b612be386612b35565b9450612bf160208701612b35565b935060408601359250606086013567ffffffffffffffff811115612c1457600080fd5b612c2088828901612b79565b969995985093965092949392505050565b600080600060408486031215612c4657600080fd5b83359250602084013567ffffffffffffffff811115612c6457600080fd5b612c7086828701612b79565b9497909650939450505050565b60008060008060408587031215612c9357600080fd5b843567ffffffffffffffff80821115612cab57600080fd5b612cb788838901612b79565b90965094506020870135915080821115612cd057600080fd5b50612cdd87828801612b79565b95989497509550505050565b600060208284031215612cfb57600080fd5b5035919050565b60008083601f840112612d1457600080fd5b50813567ffffffffffffffff811115612d2c57600080fd5b6020830191508360208260051b8501011115612bbb57600080fd5b60008060208385031215612d5a57600080fd5b823567ffffffffffffffff811115612d7157600080fd5b612d7d85828601612d02565b90969095509350505050565b600080600080600060608688031215612da157600080fd5b853567ffffffffffffffff80821115612db957600080fd5b612dc589838a01612d02565b9097509550602088013594506040880135915080821115612de557600080fd5b50612c2088828901612b79565b60005b83811015612e0d578181015183820152602001612df5565b50506000910152565b60008151808452612e2e816020860160208601612df2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006107516020830184612e16565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215612eb457600080fd5b813567ffffffffffffffff80821115612ecc57600080fd5b818401915084601f830112612ee057600080fd5b813581811115612ef257612ef2612e73565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715612f3857612f38612e73565b81604052828152876020848701011115612f5157600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008060408385031215612f8457600080fd5b8235612f8f81612aea565b9150612f9d60208401612b35565b90509250929050565b60008060008060008060008060a0898b031215612fc257600080fd5b612fcb89612b35565b9750612fd960208a01612b35565b9650604089013567ffffffffffffffff80821115612ff657600080fd5b6130028c838d01612d02565b909850965060608b013591508082111561301b57600080fd5b6130278c838d01612d02565b909650945060808b013591508082111561304057600080fd5b5061304d8b828c01612b79565b999c989b5096995094979396929594505050565b6000806040838503121561307457600080fd5b50508035926020909101359150565b60008060008060008060a0878903121561309c57600080fd5b6130a587612b35565b95506130b360208801612b35565b94506040870135935060608701359250608087013567ffffffffffffffff8111156130dd57600080fd5b6130e989828a01612b79565b979a9699509497509295939492505050565b80358015158114612b5957600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196508560051b810191508460005b8781101561329657828403895281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418836030181126131ad57600080fd5b870160c06131ba826130fb565b151586526131c98783016130fb565b15158688015260408281013590870152606073ffffffffffffffffffffffffffffffffffffffff6131fb828501612b35565b16908701526080828101359087015260a080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe101811261324157600080fd5b90920187810192903567ffffffffffffffff81111561325f57600080fd5b80360384131561326e57600080fd5b8282890152613280838901828661310b565b9c89019c9750505092860192505060010161316e565b5091979650505050505050565b60408152600560408201527f73656c663a000000000000000000000000000000000000000000000000000000606082015260806020820152600061074e608083018486613154565b838152604060208201526000610771604083018486613154565b83815260406020820152600061077160408301848661310b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f697066733a2f2f00000000000000000000000000000000000000000000000000815260008251613386816007850160208701612df2565b9190910160070192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418336030181126133c757600080fd5b9190910192915050565b6000602082840312156133e357600080fd5b610751826130fb565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261342157600080fd5b83018035915067ffffffffffffffff82111561343c57600080fd5b602001915036819003821315612bbb57600080fd5b6000808585111561346157600080fd5b8386111561346e57600080fd5b5050820193919092039150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156106de576106de61347b565b6060815260006134d160608301868861310b565b6020830194909452506040015292915050565b7f620000000000000000000000000000000000000000000000000000000000000081526000825161351c816001850160208701612df2565b9190910160010192915050565b82815260406020820152600061074e6040830184612e16565b84815273ffffffffffffffffffffffffffffffffffffffff8416602082015260606040820152600061357860608301848661310b565b9695505050505050565b60208152600061074e60208301848661310b565b818103818111156106de576106de61347b565b6040815260006135bd60408301858761310b565b9050826020830152949350505050565b6040815260006135e160408301858761310b565b905060ff83166020830152949350505050565b60608152600061360860608301868861310b565b60208301949094525090151560409091015292915050565b60006020828403121561363257600080fd5b815161075181612aea56fea26469706673582212209ea1f29a81ef04f0d1c452da3db48e1d4423c64089333bd5bf9b44b4cb4b18cf64736f6c63430008120033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADDRESS PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH2 0x3673 PUSH2 0x30 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x95A ADD MSTORE PUSH2 0x3673 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x853C5068 GT PUSH2 0xE1 JUMPI DUP1 PUSH4 0xA38CEF19 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xC71F1F96 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0xD0748F71 EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x64A JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0xA38CEF19 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0xB93EA7AD EQ PUSH2 0x5AD JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x8EFA6441 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x8EFA6441 EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0x9BD58B16 EQ PUSH2 0x563 JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x853C5068 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x8976C44C EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x50E JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x29561426 GT PUSH2 0x143 JUMPI DUP1 PUSH4 0x57C56D6B GT PUSH2 0x11D JUMPI DUP1 PUSH4 0x57C56D6B EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x61C2926C EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x7A9A1628 EQ PUSH2 0x486 JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x29561426 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x4FCF3ECA EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x51605D80 EQ PUSH2 0x40F JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x1626BA7E GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x1A9B2337 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x20C13B0B EQ PUSH2 0x3AF JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x25B22BC EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x2D4 JUMPI PUSH2 0x1A1 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1A1 JUMPI STOP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x27D JUMPI PUSH1 0x0 PUSH2 0x1D8 PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x690 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x221 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x261 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x273 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD RETURN JUMPDEST POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29F PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2B5E JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2BC2 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C31 JUMP JUMPDEST PUSH2 0x741 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x2C7D JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE9 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH32 0x8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x481 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D47 JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x4A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D89 JUMP JUMPDEST PUSH2 0x943 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C6 PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C31 JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x2AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x509 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE9 JUMP JUMPDEST PUSH2 0xC10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE9 JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x38A PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EA2 JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xE7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x593 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE9 JUMP JUMPDEST PUSH2 0xEA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xEF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x5C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F71 JUMP JUMPDEST PUSH2 0xEFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 PUSH2 0x5E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA6 JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xFCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x645 CALLDATASIZE PUSH1 0x4 PUSH2 0x3061 JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 PUSH2 0x665 CALLDATASIZE PUSH1 0x4 PUSH2 0x3083 JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 AND PUSH2 0x1047 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE DUP3 PUSH2 0x10A5 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x73E DUP2 PUSH2 0x1101 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74E DUP5 DUP5 DUP5 PUSH2 0x11B5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE DUP3 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1200 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x7BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST PUSH2 0x73E DUP2 PUSH2 0x1263 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x812 DUP3 PUSH2 0x690 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1C3812CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72C JUMP JUMPDEST PUSH2 0x73E DUP2 PUSH1 0x0 PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B8 PUSH32 0xEA7157FA25E3AA17D0AE2D5280FA4E24D421C61842AA85E45194E1145AA72BF8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x8FE JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x931 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x916 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x13B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x93E DUP2 DUP5 DUP5 PUSH2 0x1438 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA57D61D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BB DUP4 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9F3 DUP6 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 PUSH2 0x16BD JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xA34 JUMPI DUP1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x8F4A234F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3305 JUMP JUMPDEST PUSH2 0xA3F DUP2 DUP9 DUP9 PUSH2 0x1438 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xA64 JUMPI PUSH2 0xA64 PUSH2 0x331F JUMP JUMPDEST SWAP1 SWAP2 ADD CALLDATALOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND SWAP2 POP DUP2 SWAP1 POP PUSH2 0xABA JUMPI PUSH2 0xA9C DUP10 PUSH2 0x13B3 JUMP JUMPDEST SWAP3 POP PUSH2 0xAA9 DUP4 DUP10 DUP10 PUSH2 0x16FB JUMP JUMPDEST SWAP3 SWAP9 POP SWAP1 SWAP7 POP SWAP5 POP SWAP2 POP PUSH2 0xC05 SWAP1 POP JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 DUP2 AND ADD PUSH2 0xAF9 JUMPI PUSH2 0xAEC DUP10 PUSH2 0x13B3 JUMP JUMPDEST SWAP3 POP PUSH2 0xAA9 DUP4 DUP10 DUP10 PUSH2 0x174C JUMP JUMPDEST PUSH32 0xFE00000000000000000000000000000000000000000000000000000000000000 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ADD PUSH2 0xB4B JUMPI PUSH2 0xAEC DUP10 PUSH2 0x1778 JUMP JUMPDEST PUSH32 0xFD00000000000000000000000000000000000000000000000000000000000000 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ADD PUSH2 0xBAF JUMPI PUSH2 0xB9F DUP10 DUP10 DUP10 PUSH2 0x17E5 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6085CD8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72C JUMP JUMPDEST SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xC51 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST DUP1 PUSH2 0xC88 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB24B5B3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB1 PUSH32 0x8C8764B3A50FEE69C9BEE6E956047501F434FB0E2349C75844A401A7F2A020D2 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x1F63199319EFF813052575C41087F618ABA07B006664FED6C01F7EE9C5716835 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD71 PUSH2 0xD6C PUSH2 0xD24 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x170122000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD81 SWAP2 SWAP1 PUSH2 0x334E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0xDD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xE31 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xD25719100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP2 SWAP1 PUSH2 0x2E60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B8 PUSH32 0x8C8764B3A50FEE69C9BEE6E956047501F434FB0E2349C75844A401A7F2A020D2 SLOAD SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xEEA JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST PUSH2 0x73E DUP2 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B8 PUSH1 0x0 PUSH2 0xCE8 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4B DUP4 PUSH2 0x690 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x5B4D6D6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72C JUMP JUMPDEST PUSH2 0xFC6 DUP3 DUP3 PUSH2 0x12F3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B8 PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 SLOAD SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST PUSH2 0x103E DUP3 PUSH2 0x1263 JUMP JUMPDEST PUSH2 0xFC6 DUP2 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1066 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2E74B92A00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x10F8 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH2 0x1BFD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x1167 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC76093700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72C JUMP JUMPDEST PUSH2 0x116F DUP2 ADDRESS SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0x310BA5F1D2ED074B51E2ECCD052A47AE9AB7C6B800D1FCA3DB3999D6A592CA03 SWAP1 PUSH1 0x20 ADD PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11C3 DUP6 DUP6 DUP6 PUSH2 0x1C59 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO PUSH2 0x11F5 JUMPI POP PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x751 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1225 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1216 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 DUP6 PUSH2 0x1C59 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO PUSH2 0x1257 JUMPI POP PUSH32 0x20C13B0B00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x774 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x129A JUMPI PUSH1 0x40 MLOAD PUSH32 0x4294D12700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C3 PUSH32 0xEA7157FA25E3AA17D0AE2D5280FA4E24D421C61842AA85E45194E1145AA72BF8 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x307ED6BD941EE9FC80F369C94AF5FA11E25BAB5102A6140191756C5474A30BFA SWAP1 PUSH1 0x20 ADD PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND DUP3 DUP5 ADD DUP2 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP6 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP4 ADD KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP2 SWAP1 SSTORE SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xD7FC113EAF016DB4681A1BA86D083CE3E0961F321062A75AC2B0AEB33DEEED1 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE CHAINID PUSH1 0x22 DUP3 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 ADDRESS PUSH1 0x60 SHL AND PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x56 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x76 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15B9 JUMPI CALLDATASIZE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1457 JUMPI PUSH2 0x1457 PUSH2 0x331F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1469 SWAP2 SWAP1 PUSH2 0x3393 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP1 GAS LT ISZERO PUSH2 0x14BE JUMPI DUP3 DUP2 GAS PUSH1 0x40 MLOAD PUSH32 0x2BB3E3BA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CD PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x33D1 JUMP JUMPDEST ISZERO PUSH2 0x150C JUMPI PUSH2 0x1505 PUSH2 0x14E5 PUSH1 0x80 DUP6 ADD PUSH1 0x60 DUP7 ADD PUSH2 0x2B5E JUMP JUMPDEST DUP4 ISZERO PUSH2 0x14F1 JUMPI DUP4 PUSH2 0x14F3 JUMP JUMPDEST GAS JUMPDEST PUSH2 0x1500 PUSH1 0xA0 DUP8 ADD DUP8 PUSH2 0x33EC JUMP JUMPDEST PUSH2 0x1C8A JUMP JUMPDEST SWAP1 POP PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x1544 PUSH2 0x151F PUSH1 0x80 DUP6 ADD PUSH1 0x60 DUP7 ADD PUSH2 0x2B5E JUMP JUMPDEST PUSH1 0x80 DUP6 ADD CALLDATALOAD DUP5 ISZERO PUSH2 0x1530 JUMPI DUP5 PUSH2 0x1532 JUMP JUMPDEST GAS JUMPDEST PUSH2 0x153F PUSH1 0xA0 DUP9 ADD DUP9 PUSH2 0x33EC JUMP JUMPDEST PUSH2 0x1CA5 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x158C JUMPI DUP8 PUSH32 0x5C4EEB02DABF8976016AB414D617F9A162936DCACE3CDEF8C69EF6E262AD5AE7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x157F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x15AE PUSH2 0x159F PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x33D1 JUMP JUMPDEST DUP10 DUP7 PUSH2 0x15A9 PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x1CE1 JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x143C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SWAP1 SHR PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 PUSH2 0x15DF DUP4 PUSH2 0xCE8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x162B JUMPI PUSH1 0x40 MLOAD PUSH32 0x9B6514F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x1 DUP4 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x1F180C27086C7A39EA2A7B25239D1AB92348F07CA7BB59D1438FCF527568F881 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x16D0 DUP9 DUP9 DUP9 PUSH2 0xA48 JUMP JUMPDEST POP SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x16EE JUMPI POP PUSH2 0x16EE DUP2 PUSH2 0x1D2F JUMP JUMPDEST SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x1716 DUP8 PUSH2 0x1711 DUP8 PUSH1 0x6 DUP2 DUP12 PUSH2 0x3451 JUMP JUMPDEST PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP8 CALLDATALOAD PUSH1 0xF0 SHR PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP11 ADD CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 SWAP1 MSTORE SWAP9 SWAP1 SWAP2 KECCAK256 SWAP1 SWAP10 SWAP2 SWAP9 POP SWAP7 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x1767 DUP8 PUSH2 0x1762 DUP8 PUSH1 0x1 DUP2 DUP12 PUSH2 0x3451 JUMP JUMPDEST PUSH2 0x16FB JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x22 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 ADDRESS PUSH1 0x60 SHL AND PUSH1 0x42 DUP4 ADD MSTORE PUSH1 0x56 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x76 ADD PUSH2 0x141B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 PUSH1 0x4 PUSH1 0x1 DUP9 ADD CALLDATALOAD PUSH1 0xE8 SHR DUP3 PUSH2 0x1800 DUP4 DUP4 PUSH2 0x34AA JUMP JUMPDEST SWAP1 POP PUSH2 0x1812 DUP12 PUSH2 0x4C1 DUP4 DUP7 DUP14 DUP16 PUSH2 0x3451 JUMP JUMPDEST SWAP4 SWAP12 POP SWAP2 SWAP10 POP SWAP8 POP SWAP6 POP SWAP4 POP DUP8 DUP8 LT ISZERO PUSH2 0x186A JUMPI PUSH2 0x1832 DUP2 DUP5 DUP12 DUP14 PUSH2 0x3451 JUMP JUMPDEST DUP10 DUP10 PUSH1 0x40 MLOAD PUSH32 0xB006ABA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST DUP1 SWAP3 POP JUMPDEST DUP9 DUP4 LT ISZERO PUSH2 0x1954 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 DUP11 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP2 POP PUSH2 0x188D DUP4 DUP4 PUSH2 0x34AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18AF PUSH2 0x189D DUP9 PUSH2 0x21D0 JUMP JUMPDEST DUP13 DUP13 DUP8 SWAP1 DUP7 SWAP3 PUSH2 0x4C1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3451 JUMP JUMPDEST SWAP4 SWAP13 POP SWAP2 SWAP11 POP SWAP9 POP SWAP1 SWAP2 POP POP DUP9 DUP9 LT ISZERO PUSH2 0x1907 JUMPI PUSH2 0x18CF DUP3 DUP6 DUP13 DUP15 PUSH2 0x3451 JUMP JUMPDEST DUP11 DUP11 PUSH1 0x40 MLOAD PUSH32 0xB006ABA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST DUP5 DUP2 LT PUSH2 0x194A JUMPI PUSH1 0x40 MLOAD PUSH32 0x37DAF62B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST SWAP4 POP SWAP2 POP DUP2 PUSH2 0x186E JUMP JUMPDEST POP POP POP SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x3 DUP2 SWAP1 SHL PUSH1 0x0 PUSH1 0x5 PUSH1 0x4 DUP4 ADD DIV PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x198D JUMPI PUSH2 0x198D PUSH2 0x2E73 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19B7 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1ACB JUMPI DUP9 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x19DB JUMPI PUSH2 0x19DB PUSH2 0x331F JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x8 SWAP5 DUP6 ADD SWAP5 SWAP4 SWAP1 SWAP4 SHL PUSH1 0xF8 SWAP4 SWAP1 SWAP4 SHR SWAP3 SWAP1 SWAP3 OR SWAP2 JUMPDEST PUSH1 0x5 DUP5 LT PUSH2 0x1AC3 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 DUP4 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB SWAP1 SWAP6 ADD SWAP5 PUSH1 0x1F DUP6 DUP8 SHR AND SWAP1 DUP2 LT PUSH2 0x1A6C JUMPI PUSH2 0x1A6C PUSH2 0x331F JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A89 JUMPI PUSH2 0x1A89 PUSH2 0x331F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x19C1 JUMP JUMPDEST POP DUP3 ISZERO PUSH2 0x1B6F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 MSTORE POP DUP4 PUSH1 0x5 SUB DUP4 SWAP1 SHL PUSH1 0x1F AND DUP2 MLOAD DUP2 LT PUSH2 0x1B22 JUMPI PUSH2 0x1B22 PUSH2 0x331F JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B3F JUMPI PUSH2 0x1B3F PUSH2 0x331F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B8E SWAP2 SWAP1 PUSH2 0x34E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BCD PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x20D3EF1B5738A9F6D7BEAE515432206E7A8E2740CA6DCF46A952190AD01BCB51 SWAP1 PUSH1 0x20 ADD PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FFBD45100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x1C50 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1C6C DUP9 DUP9 DUP9 PUSH2 0xA48 JUMP JUMPDEST POP SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x16EE JUMPI POP PUSH2 0x16EE DUP2 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 DUP10 DUP10 DELEGATECALL SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 DUP10 DUP12 DUP11 CALL SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 RETURNDATASIZE PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP4 MSTORE DUP2 PUSH1 0x0 DUP3 RETURNDATACOPY POP POP SWAP1 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1CEF JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP3 PUSH32 0xAB46C69F7F32E1BF09B0725853DA82A211E5402A0600296AB499A2FB5EA3B419 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D21 SWAP3 SWAP2 SWAP1 PUSH2 0x3529 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE DUP3 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21C7 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 DUP6 ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD PUSH2 0x1DE1 JUMPI PUSH1 0x15 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0x58 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH21 0xFF0000000000000000000000000000000000000000 AND DUP2 OR DUP6 PUSH2 0x1DC7 JUMPI DUP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP6 POP POP POP POP POP PUSH2 0x1D40 JUMP JUMPDEST DUP1 PUSH2 0x1E77 JUMPI PUSH1 0x1 DUP3 ADD SWAP2 DUP7 DUP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP1 PUSH1 0x43 ADD PUSH1 0x0 PUSH2 0x1E0D DUP11 PUSH2 0x1E08 DUP5 DUP9 DUP13 DUP15 PUSH2 0x3451 JUMP JUMPDEST PUSH2 0x23AF JUMP JUMPDEST PUSH1 0xFF DUP5 AND SWAP8 SWAP1 SWAP8 ADD SWAP7 SWAP2 SWAP5 POP DUP5 SWAP2 SWAP1 POP PUSH1 0xA0 DUP4 SWAP1 SHL PUSH21 0xFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND OR DUP7 PUSH2 0x1E5C JUMPI DUP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP7 POP POP POP POP POP POP PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1F9F JUMPI PUSH1 0x0 DUP1 DUP8 DUP5 ADD CALLDATALOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0x58 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x15 DUP7 ADD SWAP6 POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP9 DUP6 ADD CALLDATALOAD PUSH1 0xE8 SHR PUSH1 0x3 DUP7 ADD DUP2 PUSH3 0xFFFFFF AND SWAP2 POP DUP1 SWAP7 POP DUP2 SWAP3 POP POP POP PUSH1 0x0 DUP2 DUP7 ADD SWAP1 POP PUSH2 0x1EF0 DUP12 DUP5 DUP13 DUP13 DUP11 SWAP1 DUP7 SWAP3 PUSH2 0x1EEB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3451 JUMP JUMPDEST PUSH2 0x2672 JUMP JUMPDEST PUSH2 0x1F38 JUMPI DUP11 DUP4 PUSH2 0x1F02 DUP4 DUP10 DUP14 DUP16 PUSH2 0x3451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9A94623200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0xFF DUP5 AND SWAP8 SWAP1 SWAP8 ADD SWAP7 SWAP5 POP DUP5 PUSH1 0xA0 DUP5 SWAP1 SHL PUSH21 0xFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR DUP8 PUSH2 0x1F83 JUMPI DUP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP8 POP POP POP POP POP POP POP PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x1FD2 JUMPI PUSH1 0x20 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD DUP4 PUSH2 0x1FBA JUMPI DUP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 POP POP POP PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x4 DUP2 SUB PUSH2 0x201E JUMPI PUSH1 0x3 DUP1 DUP4 ADD SWAP3 DUP8 DUP2 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP2 SWAP1 DUP3 ADD ADD PUSH1 0x0 DUP1 PUSH2 0x1FFF DUP12 PUSH2 0x1711 DUP6 DUP10 DUP14 DUP16 PUSH2 0x3451 JUMP JUMPDEST PUSH1 0x0 SWAP9 DUP10 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP8 KECCAK256 SWAP7 SWAP1 SWAP8 ADD SWAP7 POP SWAP1 SWAP4 POP PUSH2 0x1D40 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 SUB PUSH2 0x2126 JUMPI PUSH1 0x0 DUP3 DUP8 ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP8 DUP5 ADD CALLDATALOAD PUSH1 0xF0 SHR PUSH1 0x2 DUP6 ADD SWAP5 POP PUSH2 0xFFFF AND SWAP1 POP PUSH1 0x0 DUP9 DUP6 ADD CALLDATALOAD PUSH1 0xE8 SHR PUSH1 0x3 DUP7 ADD DUP2 PUSH3 0xFFFFFF AND SWAP2 POP DUP1 SWAP7 POP DUP2 SWAP3 POP POP POP PUSH1 0x0 DUP2 DUP7 ADD SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x208C DUP14 DUP14 DUP14 DUP12 SWAP1 DUP8 SWAP3 PUSH2 0x1711 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3451 JUMP JUMPDEST SWAP4 SWAP9 POP DUP9 SWAP4 SWAP1 SWAP3 POP SWAP1 POP DUP5 DUP3 LT PUSH2 0x20A2 JUMPI SWAP9 DUP6 ADD SWAP9 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x53657175656E6365206E657374656420636F6E6669673A0A0000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x38 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x58 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x78 DUP1 DUP4 ADD DUP11 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x98 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 DUP10 PUSH2 0x2108 JUMPI DUP1 PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x5 DUP2 SUB PUSH2 0x2192 JUMPI PUSH1 0x20 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD DUP8 DUP2 SUB PUSH2 0x2161 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 POP JUMPDEST PUSH1 0x0 PUSH2 0x216C DUP3 PUSH2 0x2859 JUMP JUMPDEST SWAP1 POP DUP5 PUSH2 0x2179 JUMPI DUP1 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP5 POP POP POP POP PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xB2505F7C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x72C JUMP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xEC6ABA5000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2297 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x22E3 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x232F JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xC0EE0B8A00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x233C JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH2 0x2894 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6DE JUMPI POP PUSH32 0x8C8764B3A50FEE69C9BEE6E956047501F434FB0E2349C75844A401A7F2A020D2 SLOAD JUMPDEST DUP3 EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6DE JUMPI POP PUSH32 0xEA7157FA25E3AA17D0AE2D5280FA4E24D421C61842AA85E45194E1145AA72BF8 SLOAD PUSH2 0x2374 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x42 DUP3 EQ PUSH2 0x23EF JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x2EE17A3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x3582 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2408 PUSH2 0x23FF PUSH1 0x1 DUP6 PUSH2 0x3596 JUMP JUMPDEST DUP6 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0xF8 SHR DUP5 CALLDATALOAD PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP2 GT ISZERO PUSH2 0x247C JUMPI DUP7 DUP7 DUP3 PUSH1 0x40 MLOAD PUSH32 0xAD4AAC7600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35A9 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x2494 JUMPI POP DUP3 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x24D1 JUMPI DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE578897E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35CD JUMP JUMPDEST PUSH1 0x1 DUP5 SUB PUSH2 0x253E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x252D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP5 POP PUSH2 0x2616 JUMP JUMPDEST PUSH1 0x2 DUP5 SUB PUSH2 0x25DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE MSTORE PUSH1 0xFF DUP7 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH2 0x250B JUMP JUMPDEST DUP7 DUP7 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH32 0x9DFBA85200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x2667 JUMPI DUP7 DUP7 PUSH1 0x40 MLOAD PUSH32 0x6C1719D200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x3582 JUMP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB PUSH2 0x26AD JUMPI PUSH1 0x40 MLOAD PUSH32 0xAC241E1100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH2 0x26BC PUSH1 0x1 DUP3 PUSH2 0x3596 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x26CB JUMPI PUSH2 0x26CB PUSH2 0x331F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP2 POP POP PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x26E5 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST ISZERO PUSH2 0x272A JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x270C DUP8 DUP7 DUP7 PUSH2 0x23AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP PUSH2 0x2850 JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x2815 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH4 0x1626BA7E DUP8 DUP7 PUSH1 0x0 DUP8 PUSH2 0x275E PUSH1 0x1 DUP3 PUSH2 0x3596 JUMP JUMPDEST SWAP3 PUSH2 0x276B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2789 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3305 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27CA SWAP2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP PUSH2 0x2850 JUMP JUMPDEST DUP4 DUP4 DUP3 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x9DFBA85200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35F4 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x53657175656E636520737461746963206469676573743A0A0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x38 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x58 ADD PUSH2 0x141B JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFDA4DD4400000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x28E7 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH1 0x0 PUSH32 0xE4A77BBC00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x293E JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH1 0x0 PUSH32 0xDA44F87800000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x2995 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH1 0x0 PUSH32 0xAE9FA28000000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x29EC JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xAC6A444E00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2A83 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x36E7817500000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x2A90 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x6DE JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x751 DUP2 PUSH2 0x2AEA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP3 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2B8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BE3 DUP7 PUSH2 0x2B35 JUMP JUMPDEST SWAP5 POP PUSH2 0x2BF1 PUSH1 0x20 DUP8 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C20 DUP9 DUP3 DUP10 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C70 DUP7 DUP3 DUP8 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CB7 DUP9 DUP4 DUP10 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CDD DUP8 DUP3 DUP9 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2D14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D7D DUP6 DUP3 DUP7 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2DA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2DB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2DC5 DUP10 DUP4 DUP11 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2DE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C20 DUP9 DUP3 DUP10 ADD PUSH2 0x2B79 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E0D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2DF5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2E2E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2DF2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x751 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E16 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2ECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2EE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2EF2 JUMPI PUSH2 0x2EF2 PUSH2 0x2E73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2F38 JUMPI PUSH2 0x2F38 PUSH2 0x2E73 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2F51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2F8F DUP2 PUSH2 0x2AEA JUMP JUMPDEST SWAP2 POP PUSH2 0x2F9D PUSH1 0x20 DUP5 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2FC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FCB DUP10 PUSH2 0x2B35 JUMP JUMPDEST SWAP8 POP PUSH2 0x2FD9 PUSH1 0x20 DUP11 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2FF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3002 DUP13 DUP4 DUP14 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x301B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3027 DUP13 DUP4 DUP14 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3040 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304D DUP12 DUP3 DUP13 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3074 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x309C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A5 DUP8 PUSH2 0x2B35 JUMP JUMPDEST SWAP6 POP PUSH2 0x30B3 PUSH1 0x20 DUP9 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30E9 DUP10 DUP3 DUP11 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP6 PUSH1 0x5 SHL DUP2 ADD SWAP2 POP DUP5 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x3296 JUMPI DUP3 DUP5 SUB DUP10 MSTORE DUP2 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41 DUP9 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x31AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0xC0 PUSH2 0x31BA DUP3 PUSH2 0x30FB JUMP JUMPDEST ISZERO ISZERO DUP7 MSTORE PUSH2 0x31C9 DUP8 DUP4 ADD PUSH2 0x30FB JUMP JUMPDEST ISZERO ISZERO DUP7 DUP9 ADD MSTORE PUSH1 0x40 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x60 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x31FB DUP3 DUP6 ADD PUSH2 0x2B35 JUMP JUMPDEST AND SWAP1 DUP8 ADD MSTORE PUSH1 0x80 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP8 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD CALLDATALOAD CALLDATASIZE DUP5 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 ADD DUP2 SLT PUSH2 0x3241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 ADD DUP8 DUP2 ADD SWAP3 SWAP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x325F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP5 SGT ISZERO PUSH2 0x326E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 DUP10 ADD MSTORE PUSH2 0x3280 DUP4 DUP10 ADD DUP3 DUP7 PUSH2 0x310B JUMP JUMPDEST SWAP13 DUP10 ADD SWAP13 SWAP8 POP POP POP SWAP3 DUP7 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x316E JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x73656C663A000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x74E PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x3154 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x771 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x3154 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x771 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x310B JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x697066733A2F2F00000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x3386 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2DF2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41 DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x33C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP3 PUSH2 0x30FB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x343C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x2BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x3461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x346E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6DE JUMPI PUSH2 0x6DE PUSH2 0x347B JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x34D1 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x310B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6200000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x351C DUP2 PUSH1 0x1 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2DF2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x74E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E16 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3578 PUSH1 0x60 DUP4 ADD DUP5 DUP7 PUSH2 0x310B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x74E PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x310B JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6DE JUMPI PUSH2 0x6DE PUSH2 0x347B JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x35BD PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x310B JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x35E1 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x310B JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3608 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x310B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x751 DUP2 PUSH2 0x2AEA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 LOG1 CALLCODE SWAP11 DUP2 0xEF DIV CREATE 0xD1 0xC4 MSTORE 0xDA RETURNDATASIZE 0xB4 DUP15 SAR PREVRANDAO 0x23 0xC6 BLOCKHASH DUP10 CALLER EXTCODESIZE 0xD5 0xBF SWAP12 PREVRANDAO 0xB4 0xCB 0x4B XOR 0xCF PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "613:1531:4:-:0;;;;;;;;;;;;-1:-1:-1;200:4:17;185:20;;613:1531:4;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@SET_IMAGE_HASH_TYPE_HASH_3130": {
									"entryPoint": null,
									"id": 3130,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1718": {
									"entryPoint": null,
									"id": 1718,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1723": {
									"entryPoint": null,
									"id": 1723,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_execute_1127": {
									"entryPoint": 5176,
									"id": 1127,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_hashSetImageHashStruct_3159": {
									"entryPoint": 8656,
									"id": 3159,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isValidExternalImage_777": {
									"entryPoint": 9029,
									"id": 777,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isValidImage_123": {
									"entryPoint": 7471,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isValidImage_666": {
									"entryPoint": 9084,
									"id": 666,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_leafForAddressAndWeight_2512": {
									"entryPoint": null,
									"id": 2512,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_leafForHardcodedSubdigest_2529": {
									"entryPoint": 10329,
									"id": 2529,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_leafForNested_2552": {
									"entryPoint": null,
									"id": 2552,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_readHook_1583": {
									"entryPoint": 1680,
									"id": 1583,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revertBytes_1151": {
									"entryPoint": 7393,
									"id": 1151,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setImplementation_194": {
									"entryPoint": null,
									"id": 194,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_signatureValidationExternal_820": {
									"entryPoint": 7257,
									"id": 820,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@_signatureValidation_419": {
									"entryPoint": 5821,
									"id": 419,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@_updateIPFSRoot_1853": {
									"entryPoint": 7076,
									"id": 1853,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateImageHash_629": {
									"entryPoint": 4707,
									"id": 629,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateImplementation_2174": {
									"entryPoint": 4353,
									"id": 2174,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_validateNonce_1984": {
									"entryPoint": 5568,
									"id": 1984,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_writeHook_1614": {
									"entryPoint": 4851,
									"id": 1614,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_writeNonce_1933": {
									"entryPoint": null,
									"id": 1933,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addHook_1528": {
									"entryPoint": 3839,
									"id": 1528,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@bytesToBase32_3980": {
									"entryPoint": 6498,
									"id": 3980,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@call_3704": {
									"entryPoint": 7333,
									"id": 3704,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@chainedRecover_3305": {
									"entryPoint": 6117,
									"id": 3305,
									"parameterSlots": 3,
									"returnSlots": 5
								},
								"@createContract_1220": {
									"entryPoint": 3477,
									"id": 1220,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decodeNonce_3411": {
									"entryPoint": null,
									"id": 3411,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@delegatecall_3718": {
									"entryPoint": 7306,
									"id": 3718,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@execute_981": {
									"entryPoint": 2371,
									"id": 981,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@externalImageHash_754": {
									"entryPoint": 3711,
									"id": 754,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fkeccak256_3680": {
									"entryPoint": null,
									"id": 3680,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@imageHash_642": {
									"entryPoint": 2190,
									"id": 642,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ipfsRootBytes32_1798": {
									"entryPoint": 4042,
									"id": 1798,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ipfsRoot_1824": {
									"entryPoint": 3348,
									"id": 1824,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_3449": {
									"entryPoint": null,
									"id": 3449,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isValidSignature_142": {
									"entryPoint": 1891,
									"id": 142,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@isValidSignature_161": {
									"entryPoint": 1857,
									"id": 161,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isValidSignature_4248": {
									"entryPoint": 9842,
									"id": 4248,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@isValidSignature_852": {
									"entryPoint": 4608,
									"id": 852,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@isValidSignature_882": {
									"entryPoint": 4533,
									"id": 882,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@nonce_1889": {
									"entryPoint": 3827,
									"id": 1889,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@onERC1155BatchReceived_1660": {
									"entryPoint": null,
									"id": 1660,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"@onERC1155Received_1636": {
									"entryPoint": null,
									"id": 1636,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@onERC721Received_1680": {
									"entryPoint": null,
									"id": 1680,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@prefixBase32_3764": {
									"entryPoint": 7035,
									"id": 3764,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@readBytes32Map_2112": {
									"entryPoint": 4167,
									"id": 2112,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readBytes32_2070": {
									"entryPoint": null,
									"id": 2070,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@readBytes32_3465": {
									"entryPoint": null,
									"id": 3465,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@readBytes32_3664": {
									"entryPoint": null,
									"id": 3664,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@readFirstUint16_3487": {
									"entryPoint": null,
									"id": 3487,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readHook_1498": {
									"entryPoint": 1880,
									"id": 1498,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@readNonce_1910": {
									"entryPoint": 3304,
									"id": 1910,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@readUint16_3594": {
									"entryPoint": null,
									"id": 3594,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@readUint24_3623": {
									"entryPoint": null,
									"id": 3623,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@readUint32_3499": {
									"entryPoint": null,
									"id": 3499,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@readUint8Address_3580": {
									"entryPoint": null,
									"id": 3580,
									"parameterSlots": 3,
									"returnSlots": 3
								},
								"@readUint8_3477": {
									"entryPoint": null,
									"id": 3477,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@readUint8_3551": {
									"entryPoint": null,
									"id": 3551,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@recoverBranch_3042": {
									"entryPoint": 7482,
									"id": 3042,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@recoverSigner_4166": {
									"entryPoint": 9135,
									"id": 4166,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@recover_3108": {
									"entryPoint": 5883,
									"id": 3108,
									"parameterSlots": 3,
									"returnSlots": 4
								},
								"@recover_3334": {
									"entryPoint": 5964,
									"id": 3334,
									"parameterSlots": 3,
									"returnSlots": 4
								},
								"@removeHook_1559": {
									"entryPoint": 1990,
									"id": 1559,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@returnData_3688": {
									"entryPoint": 7362,
									"id": 3688,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@selfExecute_1011": {
									"entryPoint": 2237,
									"id": 1011,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@signatureRecovery_375": {
									"entryPoint": 2632,
									"id": 375,
									"parameterSlots": 3,
									"returnSlots": 5
								},
								"@subdigest_2482": {
									"entryPoint": 5043,
									"id": 2482,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@subdigest_3362": {
									"entryPoint": 6008,
									"id": 3362,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1176": {
									"entryPoint": null,
									"id": 1176,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1245": {
									"entryPoint": 7165,
									"id": 1245,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1263": {
									"entryPoint": null,
									"id": 1263,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1769": {
									"entryPoint": 8708,
									"id": 1769,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_182": {
									"entryPoint": 1764,
									"id": 182,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2199": {
									"entryPoint": 10388,
									"id": 2199,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_511": {
									"entryPoint": null,
									"id": 511,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_587": {
									"entryPoint": 4261,
									"id": 587,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_691": {
									"entryPoint": null,
									"id": 691,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_907": {
									"entryPoint": null,
									"id": 907,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateExternalImageHash_742": {
									"entryPoint": 3088,
									"id": 742,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateIPFSRoot_1836": {
									"entryPoint": 3753,
									"id": 1836,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateImageHashAndIPFS_560": {
									"entryPoint": 4084,
									"id": 560,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updateImageHash_525": {
									"entryPoint": 1916,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateImplementation_2149": {
									"entryPoint": 1775,
									"id": 2149,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@writeBytes32Map_2091": {
									"entryPoint": null,
									"id": 2091,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@writeBytes32_2061": {
									"entryPoint": null,
									"id": 2061,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 11061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_struct_Transaction_calldata_dyn_calldata": {
									"entryPoint": 11522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bool": {
									"entryPoint": 12539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 11129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 11102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 12198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 11202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 12419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_array$_t_struct$_Transaction_$2322_calldata_ptr_$dyn_calldata_ptr": {
									"entryPoint": 11591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_struct$_Transaction_$2322_calldata_ptr_$dyn_calldata_ptrt_uint256t_bytes_calldata_ptr": {
									"entryPoint": 11657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool": {
									"entryPoint": 13265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 11497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_bytes32": {
									"entryPoint": 12385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_bytes_calldata_ptr": {
									"entryPoint": 11313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 11032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 13856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4t_address": {
									"entryPoint": 12145,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 11389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 11938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_struct_Transaction_calldata_dyn_calldata": {
									"entryPoint": 12628,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_bytes_calldata": {
									"entryPoint": 12555,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 11798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10970,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_26b70929d2fa0780c1c1464bfedd403dbaa218f98edb5cf8a3ef7b664ee22408_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_uint256_t_address_t_bytes32__to_t_string_memory_ptr_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_583557e68bca91e5400591dbc9ae31043113c95e3cd985463ae532f51d706f8c_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_58d1832f15932b40f8da147bd99ac98efab990f25a786a2229b05ee5f5be41a7_t_bytes32_t_uint256_t_uint256__to_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 13134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 13540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes1__to_t_bytes1__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_address_t_bytes_calldata_ptr_slice__to_t_bytes32_t_address_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 13634,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 13061,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr_slice__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4_t_address__to_t_bytes4_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 13698,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_slice_t_uint256_t_uint256__to_t_bytes_memory_ptr_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 13501,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_t_bytes32__to_t_bytes_memory_ptr_t_bytes32__fromStack_reversed": {
									"entryPoint": 13737,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_t_uint256_t_bool__to_t_bytes_memory_ptr_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 13812,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_calldata_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 13773,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845_t_array$_t_struct$_Transaction_$2322_calldata_ptr_$dyn_calldata_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$2322_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 12963,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_struct$_Transaction_$2322_calldata_ptr_$dyn_calldata_ptr__to_t_uint256_t_array$_t_struct$_Transaction_$2322_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 13035,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 13609,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"access_calldata_tail_t_bytes_calldata_ptr": {
									"entryPoint": 13292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"access_calldata_tail_t_struct$_Transaction_$2322_calldata_ptr": {
									"entryPoint": 13203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"calldata_array_index_range_access_t_bytes_calldata_ptr": {
									"entryPoint": 13393,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_add_t_uint256": {
									"entryPoint": 13482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 13718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 11762,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 13435,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 13087,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 11891,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 10986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:26244:38",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:38",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "161:124:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "184:3:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "189:6:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:38"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "171:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "171:33:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "171:33:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "227:3:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "232:6:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "223:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:16:38"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "217:2:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "255:2:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:1:38",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "248:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:13:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "248:13:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "270:9:38",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "277:2:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "270:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "129:3:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "134:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "142:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "153:3:38",
														"type": ""
													}
												],
												"src": "14:271:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "334:133:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "445:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "454:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "457:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "447:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "447:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "447:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "357:5:38"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "368:5:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "375:66:38",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "364:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "364:78:38"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "354:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "354:89:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "347:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "347:97:38"
															},
															"nodeType": "YulIf",
															"src": "344:117:38"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "323:5:38",
														"type": ""
													}
												],
												"src": "290:177:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "541:176:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "562:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "571:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "558:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "558:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "583:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "554:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "554:32:38"
															},
															"nodeType": "YulIf",
															"src": "551:52:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "612:36:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "638:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "625:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "625:23:38"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "616:5:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "681:5:38"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "657:23:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "657:30:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "657:30:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "696:15:38",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "706:5:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "696:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "507:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "518:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "530:6:38",
														"type": ""
													}
												],
												"src": "472:245:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "817:92:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "827:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "839:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "850:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "835:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "827:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "869:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "894:6:38"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "887:6:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "887:14:38"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "880:6:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "880:22:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "862:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "862:41:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "862:41:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "786:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "797:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "808:4:38",
														"type": ""
													}
												],
												"src": "722:187:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "963:147:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "973:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "995:6:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "982:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "982:20:38"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "973:5:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1088:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1097:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1100:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1090:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1090:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1090:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1024:5:38"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1035:5:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1042:42:38",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1031:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1031:54:38"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1021:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1021:65:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1014:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1014:73:38"
															},
															"nodeType": "YulIf",
															"src": "1011:93:38"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "942:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "953:5:38",
														"type": ""
													}
												],
												"src": "914:196:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1185:116:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1231:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1240:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1243:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1233:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1233:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1233:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1206:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1215:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1202:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1202:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1198:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1198:32:38"
															},
															"nodeType": "YulIf",
															"src": "1195:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1256:39:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1285:9:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1266:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1266:29:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1151:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1162:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1174:6:38",
														"type": ""
													}
												],
												"src": "1115:186:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1378:275:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1427:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1436:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1439:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1429:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1429:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1429:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1406:6:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1414:4:38",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1402:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1402:17:38"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1421:3:38"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1398:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1398:27:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1391:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1391:35:38"
															},
															"nodeType": "YulIf",
															"src": "1388:55:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1452:30:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1475:6:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1462:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1462:20:38"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1452:6:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1525:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1534:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1537:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1527:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1527:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1527:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1497:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1505:18:38",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1494:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1494:30:38"
															},
															"nodeType": "YulIf",
															"src": "1491:50:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1550:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1566:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1574:4:38",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1562:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1562:17:38"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1550:8:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1631:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1640:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1643:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1633:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1633:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1633:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1602:6:38"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1610:6:38"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1598:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1598:19:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1619:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1594:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1594:30:38"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1626:3:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1591:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1591:39:38"
															},
															"nodeType": "YulIf",
															"src": "1588:59:38"
														}
													]
												},
												"name": "abi_decode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1341:6:38",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1349:3:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1357:8:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1367:6:38",
														"type": ""
													}
												],
												"src": "1306:347:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1798:486:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1845:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1854:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1857:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1847:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1847:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1847:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1819:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1828:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1815:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1815:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1840:3:38",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1811:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1811:33:38"
															},
															"nodeType": "YulIf",
															"src": "1808:53:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1870:39:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1899:9:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1880:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1880:29:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1870:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1918:48:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1951:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1962:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1947:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1947:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1928:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1928:38:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1918:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1975:42:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2002:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2013:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1998:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1998:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1985:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:32:38"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1975:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2026:46:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2057:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2068:2:38",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2053:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2040:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:32:38"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2030:6:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2115:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2124:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2127:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2117:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2117:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2117:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2087:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2095:18:38",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2084:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:30:38"
															},
															"nodeType": "YulIf",
															"src": "2081:50:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2140:84:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2196:9:38"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2207:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2192:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2192:22:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2216:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "2166:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2166:58:38"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "2144:8:38",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "2154:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2233:18:38",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "2243:8:38"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2233:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2260:18:38",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "2270:8:38"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2260:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1732:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1743:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1755:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1763:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1771:6:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1779:6:38",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1787:6:38",
														"type": ""
													}
												],
												"src": "1658:626:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2388:149:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2398:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2410:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2421:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2406:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2406:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2398:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2440:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2455:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2463:66:38",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2451:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2451:79:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2433:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2433:98:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2433:98:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2357:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2368:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2379:4:38",
														"type": ""
													}
												],
												"src": "2289:248:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2648:371:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2694:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2703:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2706:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2696:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2696:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2696:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2669:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2678:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2665:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2665:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2690:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2661:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2661:32:38"
															},
															"nodeType": "YulIf",
															"src": "2658:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2719:33:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2742:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2729:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2729:23:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2719:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2761:46:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2792:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2803:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2788:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2788:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2775:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2775:32:38"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2765:6:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2850:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2859:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2862:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2852:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2852:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2852:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2822:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2830:18:38",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2819:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2819:30:38"
															},
															"nodeType": "YulIf",
															"src": "2816:50:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2875:84:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2931:9:38"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2942:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2927:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2927:22:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2951:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "2901:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2901:58:38"
															},
															"variables": [
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "2879:8:38",
																	"type": ""
																},
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "2889:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2968:18:38",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "2978:8:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2968:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2995:18:38",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "3005:8:38"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2995:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2598:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2609:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2621:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2629:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2637:6:38",
														"type": ""
													}
												],
												"src": "2542:477:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3125:125:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3135:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3147:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3158:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3143:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3143:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3135:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3177:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3192:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3200:42:38",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3188:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3188:55:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3170:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:74:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3170:74:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3094:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3105:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3116:4:38",
														"type": ""
													}
												],
												"src": "3024:226:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3380:592:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3426:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3435:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3438:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3428:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3428:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3428:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3401:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3410:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3397:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3397:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3422:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3393:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3393:32:38"
															},
															"nodeType": "YulIf",
															"src": "3390:52:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3451:37:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3478:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3465:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3465:23:38"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3455:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3497:28:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3507:18:38",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3501:2:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3552:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3561:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3564:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3554:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3554:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3554:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3540:6:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3548:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3537:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:14:38"
															},
															"nodeType": "YulIf",
															"src": "3534:34:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3577:84:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3633:9:38"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3644:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3629:22:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3653:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3603:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3603:58:38"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "3581:8:38",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "3591:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3670:18:38",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "3680:8:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3670:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3697:18:38",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "3707:8:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3697:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3724:48:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3757:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3768:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3753:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3753:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3740:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:32:38"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3728:8:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3801:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3810:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3813:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3803:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3803:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3803:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3787:8:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3797:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3784:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3784:16:38"
															},
															"nodeType": "YulIf",
															"src": "3781:36:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3826:86:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3882:9:38"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3893:8:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3878:24:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3904:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3852:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:60:38"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "3830:8:38",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "3840:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3921:18:38",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "3931:8:38"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3921:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3948:18:38",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "3958:8:38"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3948:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3322:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3333:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3345:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3353:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3361:6:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3369:6:38",
														"type": ""
													}
												],
												"src": "3255:717:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4047:110:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4093:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4102:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4105:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4095:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4095:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4095:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4068:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4077:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4064:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4064:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4089:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4060:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:32:38"
															},
															"nodeType": "YulIf",
															"src": "4057:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4118:33:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4141:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4128:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4128:23:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4118:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4013:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4024:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4036:6:38",
														"type": ""
													}
												],
												"src": "3977:180:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4263:76:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4273:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4285:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4296:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4281:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4281:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4273:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4315:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4326:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4308:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4308:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4308:25:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4232:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4243:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4254:4:38",
														"type": ""
													}
												],
												"src": "4162:177:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4448:283:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4497:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4506:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4509:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4499:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4499:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4499:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4476:6:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4484:4:38",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4472:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4472:17:38"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4491:3:38"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4468:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4468:27:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4461:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4461:35:38"
															},
															"nodeType": "YulIf",
															"src": "4458:55:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4522:30:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4545:6:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4532:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4532:20:38"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "4522:6:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4595:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4604:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4607:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4597:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4597:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4597:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4567:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4575:18:38",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4564:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4564:30:38"
															},
															"nodeType": "YulIf",
															"src": "4561:50:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4620:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4636:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4644:4:38",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4632:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4632:17:38"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "4620:8:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4709:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4718:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4721:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4711:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4711:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4711:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4672:6:38"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4684:1:38",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "4687:6:38"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4680:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4680:14:38"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4668:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4668:27:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4697:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4664:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4664:38:38"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4704:3:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4661:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4661:47:38"
															},
															"nodeType": "YulIf",
															"src": "4658:67:38"
														}
													]
												},
												"name": "abi_decode_array_struct_Transaction_calldata_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4411:6:38",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4419:3:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "4427:8:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4437:6:38",
														"type": ""
													}
												],
												"src": "4344:387:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4872:352:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4918:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4927:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4930:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4920:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4920:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4920:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4893:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4902:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4889:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4889:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4914:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4885:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4885:32:38"
															},
															"nodeType": "YulIf",
															"src": "4882:52:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4943:37:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4970:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4957:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4957:23:38"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4947:6:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5023:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5032:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5035:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5025:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5025:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5025:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4995:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5003:18:38",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4992:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:30:38"
															},
															"nodeType": "YulIf",
															"src": "4989:50:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5048:116:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5136:9:38"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5147:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5132:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5132:22:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5156:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_struct_Transaction_calldata_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "5074:57:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5074:90:38"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "5052:8:38",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "5062:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5173:18:38",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "5183:8:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5173:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5200:18:38",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "5210:8:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5200:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_Transaction_$2322_calldata_ptr_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4830:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4841:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4853:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4861:6:38",
														"type": ""
													}
												],
												"src": "4736:488:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5418:675:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5464:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5473:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5476:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5466:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5466:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5466:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5439:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5448:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5435:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5435:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5460:2:38",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5431:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5431:32:38"
															},
															"nodeType": "YulIf",
															"src": "5428:52:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5489:37:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5516:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5503:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5503:23:38"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5493:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5535:28:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5545:18:38",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5539:2:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5590:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5599:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5602:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5592:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5592:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5592:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5578:6:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5586:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5575:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5575:14:38"
															},
															"nodeType": "YulIf",
															"src": "5572:34:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5615:116:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5703:9:38"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5714:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5699:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5699:22:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5723:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_struct_Transaction_calldata_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "5641:57:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5641:90:38"
															},
															"variables": [
																{
																	"name": "value0_1",
																	"nodeType": "YulTypedName",
																	"src": "5619:8:38",
																	"type": ""
																},
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "5629:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5740:18:38",
															"value": {
																"name": "value0_1",
																"nodeType": "YulIdentifier",
																"src": "5750:8:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5740:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5767:18:38",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "5777:8:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5767:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5794:42:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5821:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5832:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5817:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5817:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5804:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5804:32:38"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5794:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5845:48:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5878:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5889:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5874:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5874:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5861:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5861:32:38"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5849:8:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5922:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5931:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5934:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5924:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5924:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5924:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5908:8:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5918:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:16:38"
															},
															"nodeType": "YulIf",
															"src": "5902:36:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5947:86:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6003:9:38"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6014:8:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5999:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5999:24:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6025:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "5973:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5973:60:38"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "5951:8:38",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "5961:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6042:18:38",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "6052:8:38"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6042:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6069:18:38",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "6079:8:38"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "6069:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_Transaction_$2322_calldata_ptr_$dyn_calldata_ptrt_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5352:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5363:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5375:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5383:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5391:6:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5399:6:38",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5407:6:38",
														"type": ""
													}
												],
												"src": "5229:864:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6311:250:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6321:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6333:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6344:3:38",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6329:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6329:19:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6321:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6364:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6375:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6357:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6357:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6357:25:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6402:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6413:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6398:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6398:18:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6418:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6391:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6391:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6391:34:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6445:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6456:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6441:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6441:18:38"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6461:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6434:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6434:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6434:34:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6488:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6499:2:38",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6484:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6484:18:38"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "6504:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6477:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6477:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6477:34:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6531:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6542:3:38",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6527:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6527:19:38"
																	},
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "6548:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6520:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6520:35:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6520:35:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6248:9:38",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "6259:6:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6267:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6275:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6283:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6291:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6302:4:38",
														"type": ""
													}
												],
												"src": "6098:463:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6636:110:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6682:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6691:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6694:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6684:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6684:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6684:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6657:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6666:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6653:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6653:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6678:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6649:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6649:32:38"
															},
															"nodeType": "YulIf",
															"src": "6646:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6707:33:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6730:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6717:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6717:23:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6707:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6602:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6613:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6625:6:38",
														"type": ""
													}
												],
												"src": "6566:180:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6852:76:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6862:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6874:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6885:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6870:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6870:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6862:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6904:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6915:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6897:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "6897:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6897:25:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6821:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6832:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6843:4:38",
														"type": ""
													}
												],
												"src": "6751:177:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6999:184:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7009:10:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7018:1:38",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7013:1:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7078:63:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "7103:3:38"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7108:1:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "7099:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7099:11:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "7122:3:38"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7127:1:38"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "7118:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7118:11:38"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7112:5:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7112:18:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7092:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7092:39:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7092:39:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7039:1:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7042:6:38"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7036:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:13:38"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7050:19:38",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7052:15:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7061:1:38"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7064:2:38",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7057:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7057:10:38"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7052:1:38"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7032:3:38",
																"statements": []
															},
															"src": "7028:113:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7161:3:38"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7166:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7157:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7157:16:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7175:1:38",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7150:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "7150:27:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7150:27:38"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6977:3:38",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6982:3:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6987:6:38",
														"type": ""
													}
												],
												"src": "6933:250:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7238:280:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7248:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7268:5:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7262:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "7262:12:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7252:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7290:3:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7295:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7283:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "7283:19:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7283:19:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7350:5:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7357:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7346:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7346:16:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7368:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7373:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7364:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7364:14:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7380:6:38"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7311:34:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "7311:76:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7311:76:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7396:116:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7411:3:38"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7424:6:38"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7432:2:38",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7420:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7420:15:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7437:66:38",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7416:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7416:88:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7407:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7407:98:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7507:4:38",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7403:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "7403:109:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7396:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7215:5:38",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7222:3:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7230:3:38",
														"type": ""
													}
												],
												"src": "7188:330:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7644:99:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7661:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7672:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7654:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "7654:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7654:21:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7684:53:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7710:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7722:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7733:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7718:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7718:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "7692:17:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "7692:45:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7684:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7613:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7624:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7635:4:38",
														"type": ""
													}
												],
												"src": "7523:220:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7780:152:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7797:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7800:77:38",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7790:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "7790:88:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7790:88:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7894:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7897:4:38",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7887:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "7887:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7887:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7918:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7921:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7911:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "7911:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7911:15:38"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7748:184:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8016:901:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8062:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8071:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8074:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8064:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8064:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8064:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8037:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8046:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8033:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8033:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8058:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8029:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8029:32:38"
															},
															"nodeType": "YulIf",
															"src": "8026:52:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8087:37:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8114:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8101:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8101:23:38"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8091:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8133:28:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8143:18:38",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8137:2:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8188:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8197:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8200:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8190:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8190:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8190:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8176:6:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8184:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8173:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8173:14:38"
															},
															"nodeType": "YulIf",
															"src": "8170:34:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8213:32:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8227:9:38"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8238:6:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8223:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8223:22:38"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "8217:2:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8293:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8302:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8305:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8295:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8295:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8295:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "8272:2:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8276:4:38",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8268:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8268:13:38"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8283:7:38"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8264:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8264:27:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8257:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8257:35:38"
															},
															"nodeType": "YulIf",
															"src": "8254:55:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8318:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "8341:2:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8328:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8328:16:38"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "8322:2:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8367:22:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8369:16:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8369:18:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8369:18:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "8359:2:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8363:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8356:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8356:10:38"
															},
															"nodeType": "YulIf",
															"src": "8353:36:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8398:76:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8408:66:38",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "8402:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8483:23:38",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8503:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8497:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8497:9:38"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "8487:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8515:71:38",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8537:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "8561:2:38"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8565:4:38",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8557:3:38"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8557:13:38"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "8572:2:38"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "8553:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8553:22:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8577:2:38",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8549:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8549:31:38"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "8582:2:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8545:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8545:40:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8533:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8533:53:38"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8519:10:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8645:22:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8647:16:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8647:18:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8647:18:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8604:10:38"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8616:2:38"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8601:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8601:18:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8624:10:38"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8636:6:38"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8621:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8621:22:38"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8598:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8598:46:38"
															},
															"nodeType": "YulIf",
															"src": "8595:72:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8683:2:38",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8687:10:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8676:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8676:22:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8676:22:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8714:6:38"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "8722:2:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8707:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8707:18:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8707:18:38"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8771:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8780:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8783:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8773:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8773:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8773:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "8748:2:38"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "8752:2:38"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8744:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8744:11:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8757:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8740:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8740:20:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8762:7:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8737:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8737:33:38"
															},
															"nodeType": "YulIf",
															"src": "8734:53:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8813:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8821:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8809:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8809:15:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "8830:2:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8834:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8826:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8826:11:38"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "8839:2:38"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8796:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8796:46:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8796:46:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "8866:6:38"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "8874:2:38"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8862:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8862:15:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8879:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8858:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8858:24:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8884:1:38",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8851:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "8851:35:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8851:35:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8895:16:38",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "8905:6:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8895:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7982:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7993:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8005:6:38",
														"type": ""
													}
												],
												"src": "7937:980:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9008:233:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9054:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9063:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9066:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9056:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9056:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9056:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9029:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9038:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9025:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9025:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9050:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9021:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9021:32:38"
															},
															"nodeType": "YulIf",
															"src": "9018:52:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9079:36:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9105:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9092:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9092:23:38"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9083:5:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9148:5:38"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "9124:23:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9124:30:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9124:30:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9163:15:38",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9173:5:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9163:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9187:48:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9220:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9231:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9216:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9216:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9197:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9197:38:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9187:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8966:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8977:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8989:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8997:6:38",
														"type": ""
													}
												],
												"src": "8922:319:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9473:1023:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9520:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9529:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9532:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9522:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9522:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9522:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9494:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9503:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9490:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9515:3:38",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9486:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9486:33:38"
															},
															"nodeType": "YulIf",
															"src": "9483:53:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9545:39:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9574:9:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9555:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9555:29:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9545:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9593:48:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9626:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9637:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9622:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9622:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9603:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9603:38:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9593:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9650:46:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9681:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9692:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9677:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9677:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9664:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9664:32:38"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "9654:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9705:28:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9715:18:38",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9709:2:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9760:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9769:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9772:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9762:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9762:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9762:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9748:6:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "9756:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9745:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9745:14:38"
															},
															"nodeType": "YulIf",
															"src": "9742:34:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9785:116:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9873:9:38"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9884:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9869:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9869:22:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9893:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_struct_Transaction_calldata_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "9811:57:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9811:90:38"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "9789:8:38",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "9799:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9910:18:38",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "9920:8:38"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "9910:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9937:18:38",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "9947:8:38"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "9937:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9964:48:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9997:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10008:2:38",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9993:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9993:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9980:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "9980:32:38"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "9968:8:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10041:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10050:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10053:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10043:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10043:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10043:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "10027:8:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10037:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10024:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10024:16:38"
															},
															"nodeType": "YulIf",
															"src": "10021:36:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10066:118:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10154:9:38"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "10165:8:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10150:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10150:24:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10176:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_struct_Transaction_calldata_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "10092:57:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10092:92:38"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "10070:8:38",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "10080:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10193:18:38",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "10203:8:38"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "10193:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10220:18:38",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "10230:8:38"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "10220:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10247:49:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10280:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10291:3:38",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10276:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10276:19:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10263:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10263:33:38"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "10251:8:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10325:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10334:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10337:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10327:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10327:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10327:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "10311:8:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "10321:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10308:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10308:16:38"
															},
															"nodeType": "YulIf",
															"src": "10305:36:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10350:86:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10406:9:38"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "10417:8:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10402:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10402:24:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10428:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "10376:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10376:60:38"
															},
															"variables": [
																{
																	"name": "value6_1",
																	"nodeType": "YulTypedName",
																	"src": "10354:8:38",
																	"type": ""
																},
																{
																	"name": "value7_1",
																	"nodeType": "YulTypedName",
																	"src": "10364:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10445:18:38",
															"value": {
																"name": "value6_1",
																"nodeType": "YulIdentifier",
																"src": "10455:8:38"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "10445:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10472:18:38",
															"value": {
																"name": "value7_1",
																"nodeType": "YulIdentifier",
																"src": "10482:8:38"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "10472:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9383:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9394:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9406:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9414:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9422:6:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9430:6:38",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9438:6:38",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "9446:6:38",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "9454:6:38",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "9462:6:38",
														"type": ""
													}
												],
												"src": "9246:1250:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10588:161:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10634:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10643:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10646:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10636:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10636:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10636:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10609:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10618:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10605:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10605:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10630:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10601:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10601:32:38"
															},
															"nodeType": "YulIf",
															"src": "10598:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10659:33:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10682:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10669:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10669:23:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10659:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10701:42:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10728:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10739:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10724:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10724:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10711:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10711:32:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "10701:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10546:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10557:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10569:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10577:6:38",
														"type": ""
													}
												],
												"src": "10501:248:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10911:538:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10958:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10967:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10970:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10960:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10960:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10960:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10932:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10941:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10928:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10928:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10953:3:38",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10924:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10924:33:38"
															},
															"nodeType": "YulIf",
															"src": "10921:53:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10983:39:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11012:9:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10993:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "10993:29:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10983:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11031:48:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11064:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11075:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11060:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11060:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11041:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11041:38:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "11031:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11088:42:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11115:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11126:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11111:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11111:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11098:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11098:32:38"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "11088:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11139:42:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11166:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11177:2:38",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11162:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11162:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11149:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11149:32:38"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "11139:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11190:47:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11221:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11232:3:38",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11217:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11217:19:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11204:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11204:33:38"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "11194:6:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11280:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11289:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11292:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11282:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11282:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11282:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11252:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11260:18:38",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11249:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11249:30:38"
															},
															"nodeType": "YulIf",
															"src": "11246:50:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11305:84:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11361:9:38"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "11372:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11357:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11357:22:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "11381:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "11331:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11331:58:38"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "11309:8:38",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "11319:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11398:18:38",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "11408:8:38"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "11398:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11425:18:38",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "11435:8:38"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "11425:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10837:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10848:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10860:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10868:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10876:6:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10884:6:38",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10892:6:38",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "10900:6:38",
														"type": ""
													}
												],
												"src": "10754:695:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11583:198:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11593:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11605:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11616:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11601:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11601:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11593:4:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11628:52:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11638:42:38",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11632:2:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11696:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11711:6:38"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11719:2:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11707:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11707:15:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11689:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11689:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11689:34:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11743:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11754:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11739:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11739:18:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11763:6:38"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11771:2:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11759:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11759:15:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11732:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11732:43:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11732:43:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11544:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11555:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11563:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11574:4:38",
														"type": ""
													}
												],
												"src": "11454:327:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11832:114:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11842:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "11864:6:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11851:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11851:20:38"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "11842:5:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11924:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11933:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11936:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11926:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11926:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11926:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11893:5:38"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "11914:5:38"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "11907:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11907:13:38"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11900:6:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11900:21:38"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11890:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11890:32:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11883:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "11883:40:38"
															},
															"nodeType": "YulIf",
															"src": "11880:60:38"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "11811:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11822:5:38",
														"type": ""
													}
												],
												"src": "11786:160:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12017:259:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12034:3:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12039:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12027:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "12027:19:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12027:19:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12072:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12077:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12068:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12068:14:38"
																	},
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "12084:5:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12091:6:38"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "12055:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "12055:43:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12055:43:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "12122:3:38"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "12127:6:38"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12118:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12118:16:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12136:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12114:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12114:27:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12143:1:38",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12107:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "12107:38:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12107:38:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12154:116:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12169:3:38"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "12182:6:38"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12190:2:38",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "12178:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12178:15:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12195:66:38",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "12174:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12174:88:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12165:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12165:98:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12265:4:38",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12161:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "12161:109:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12154:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "11986:5:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11993:6:38",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12001:3:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12009:3:38",
														"type": ""
													}
												],
												"src": "11951:325:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12379:1930:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12396:3:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12401:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12389:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "12389:19:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12389:19:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12417:14:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12427:4:38",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12421:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12440:31:38",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12463:3:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12468:2:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12459:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "12459:12:38"
															},
															"variables": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulTypedName",
																	"src": "12444:11:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12480:24:38",
															"value": {
																"name": "updated_pos",
																"nodeType": "YulIdentifier",
																"src": "12493:11:38"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nodeType": "YulTypedName",
																	"src": "12484:5:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12513:18:38",
															"value": {
																"name": "updated_pos",
																"nodeType": "YulIdentifier",
																"src": "12520:11:38"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12513:3:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12540:38:38",
															"value": {
																"arguments": [
																	{
																		"name": "pos_1",
																		"nodeType": "YulIdentifier",
																		"src": "12556:5:38"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12567:1:38",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12570:6:38"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12563:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12563:14:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12552:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "12552:26:38"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "12544:4:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12587:19:38",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "12601:5:38"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "12591:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12615:10:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "12624:1:38",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12619:1:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12683:1600:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "12704:3:38"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "12713:4:38"
																						},
																						{
																							"name": "pos_1",
																							"nodeType": "YulIdentifier",
																							"src": "12719:5:38"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "12709:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12709:16:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12697:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12697:29:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12697:29:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12739:46:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "12778:6:38"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "12765:12:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12765:20:38"
																		},
																		"variables": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulTypedName",
																				"src": "12743:18:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "12934:16:38",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12943:1:38",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12946:1:38",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "12936:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12936:12:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "12936:12:38"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "rel_offset_of_tail",
																							"nodeType": "YulIdentifier",
																							"src": "12812:18:38"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "calldatasize",
																												"nodeType": "YulIdentifier",
																												"src": "12840:12:38"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "12840:14:38"
																										},
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "12856:5:38"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "12836:3:38"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12836:26:38"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12864:66:38",
																									"type": "",
																									"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "12832:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12832:99:38"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nodeType": "YulIdentifier",
																						"src": "12808:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12808:124:38"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "12801:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12801:132:38"
																		},
																		"nodeType": "YulIf",
																		"src": "12798:152:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "12963:45:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "rel_offset_of_tail",
																					"nodeType": "YulIdentifier",
																					"src": "12982:18:38"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "13002:5:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12978:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12978:30:38"
																		},
																		"variables": [
																			{
																				"name": "value_1",
																				"nodeType": "YulTypedName",
																				"src": "12967:7:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13021:14:38",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13031:4:38",
																			"type": "",
																			"value": "0xc0"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "13025:2:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "tail",
																					"nodeType": "YulIdentifier",
																					"src": "13055:4:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value_1",
																											"nodeType": "YulIdentifier",
																											"src": "13091:7:38"
																										}
																									],
																									"functionName": {
																										"name": "abi_decode_bool",
																										"nodeType": "YulIdentifier",
																										"src": "13075:15:38"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13075:24:38"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nodeType": "YulIdentifier",
																								"src": "13068:6:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13068:32:38"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nodeType": "YulIdentifier",
																						"src": "13061:6:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13061:40:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13048:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13048:54:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13048:54:38"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "13126:4:38"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "13132:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13122:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13122:13:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "value_1",
																													"nodeType": "YulIdentifier",
																													"src": "13171:7:38"
																												},
																												{
																													"name": "_1",
																													"nodeType": "YulIdentifier",
																													"src": "13180:2:38"
																												}
																											],
																											"functionName": {
																												"name": "add",
																												"nodeType": "YulIdentifier",
																												"src": "13167:3:38"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "13167:16:38"
																										}
																									],
																									"functionName": {
																										"name": "abi_decode_bool",
																										"nodeType": "YulIdentifier",
																										"src": "13151:15:38"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13151:33:38"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nodeType": "YulIdentifier",
																								"src": "13144:6:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13144:41:38"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nodeType": "YulIdentifier",
																						"src": "13137:6:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13137:49:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13115:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13115:72:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13115:72:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13200:14:38",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13210:4:38",
																			"type": "",
																			"value": "0x40"
																		},
																		"variables": [
																			{
																				"name": "_3",
																				"nodeType": "YulTypedName",
																				"src": "13204:2:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "13238:4:38"
																						},
																						{
																							"name": "_3",
																							"nodeType": "YulIdentifier",
																							"src": "13244:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13234:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13234:13:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "value_1",
																									"nodeType": "YulIdentifier",
																									"src": "13266:7:38"
																								},
																								{
																									"name": "_3",
																									"nodeType": "YulIdentifier",
																									"src": "13275:2:38"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13262:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13262:16:38"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "13249:12:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13249:30:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13227:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13227:53:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13227:53:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13293:14:38",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13303:4:38",
																			"type": "",
																			"value": "0x60"
																		},
																		"variables": [
																			{
																				"name": "_4",
																				"nodeType": "YulTypedName",
																				"src": "13297:2:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "13331:4:38"
																						},
																						{
																							"name": "_4",
																							"nodeType": "YulIdentifier",
																							"src": "13337:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13327:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13327:13:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value_1",
																											"nodeType": "YulIdentifier",
																											"src": "13369:7:38"
																										},
																										{
																											"name": "_4",
																											"nodeType": "YulIdentifier",
																											"src": "13378:2:38"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "13365:3:38"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13365:16:38"
																								}
																							],
																							"functionName": {
																								"name": "abi_decode_address",
																								"nodeType": "YulIdentifier",
																								"src": "13346:18:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13346:36:38"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13384:42:38",
																							"type": "",
																							"value": "0xffffffffffffffffffffffffffffffffffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "13342:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13342:85:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13320:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13320:108:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13320:108:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13441:14:38",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13451:4:38",
																			"type": "",
																			"value": "0x80"
																		},
																		"variables": [
																			{
																				"name": "_5",
																				"nodeType": "YulTypedName",
																				"src": "13445:2:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "13479:4:38"
																						},
																						{
																							"name": "_5",
																							"nodeType": "YulIdentifier",
																							"src": "13485:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13475:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13475:13:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "value_1",
																									"nodeType": "YulIdentifier",
																									"src": "13507:7:38"
																								},
																								{
																									"name": "_5",
																									"nodeType": "YulIdentifier",
																									"src": "13516:2:38"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13503:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13503:16:38"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "13490:12:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13490:30:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13468:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13468:53:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13468:53:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13534:14:38",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "13544:4:38",
																			"type": "",
																			"value": "0xa0"
																		},
																		"variables": [
																			{
																				"name": "_6",
																				"nodeType": "YulTypedName",
																				"src": "13538:2:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13561:58:38",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "value_1",
																							"nodeType": "YulIdentifier",
																							"src": "13606:7:38"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "13615:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13602:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13602:16:38"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "13589:12:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13589:30:38"
																		},
																		"variables": [
																			{
																				"name": "rel_offset_of_tail_1",
																				"nodeType": "YulTypedName",
																				"src": "13565:20:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "13772:16:38",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13781:1:38",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13784:1:38",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "13774:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13774:12:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13774:12:38"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "rel_offset_of_tail_1",
																							"nodeType": "YulIdentifier",
																							"src": "13646:20:38"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"arguments": [],
																											"functionName": {
																												"name": "calldatasize",
																												"nodeType": "YulIdentifier",
																												"src": "13676:12:38"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "13676:14:38"
																										},
																										{
																											"name": "value_1",
																											"nodeType": "YulIdentifier",
																											"src": "13692:7:38"
																										}
																									],
																									"functionName": {
																										"name": "sub",
																										"nodeType": "YulIdentifier",
																										"src": "13672:3:38"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "13672:28:38"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "13702:66:38",
																									"type": "",
																									"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13668:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13668:101:38"
																						}
																					],
																					"functionName": {
																						"name": "slt",
																						"nodeType": "YulIdentifier",
																						"src": "13642:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13642:128:38"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nodeType": "YulIdentifier",
																				"src": "13635:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13635:136:38"
																		},
																		"nodeType": "YulIf",
																		"src": "13632:156:38"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13801:49:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "rel_offset_of_tail_1",
																					"nodeType": "YulIdentifier",
																					"src": "13820:20:38"
																				},
																				{
																					"name": "value_1",
																					"nodeType": "YulIdentifier",
																					"src": "13842:7:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13816:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13816:34:38"
																		},
																		"variables": [
																			{
																				"name": "value_2",
																				"nodeType": "YulTypedName",
																				"src": "13805:7:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13863:37:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "value_2",
																					"nodeType": "YulIdentifier",
																					"src": "13892:7:38"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "13879:12:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13879:21:38"
																		},
																		"variables": [
																			{
																				"name": "length_1",
																				"nodeType": "YulTypedName",
																				"src": "13867:8:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "13913:31:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "value_2",
																					"nodeType": "YulIdentifier",
																					"src": "13932:7:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "13941:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13928:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13928:16:38"
																		},
																		"variables": [
																			{
																				"name": "value_3",
																				"nodeType": "YulTypedName",
																				"src": "13917:7:38",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "13993:16:38",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14002:1:38",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14005:1:38",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "13995:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13995:12:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "13995:12:38"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "length_1",
																					"nodeType": "YulIdentifier",
																					"src": "13963:8:38"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13973:18:38",
																					"type": "",
																					"value": "0xffffffffffffffff"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "13960:2:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13960:32:38"
																		},
																		"nodeType": "YulIf",
																		"src": "13957:52:38"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "14069:16:38",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14078:1:38",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "14081:1:38",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "14071:6:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14071:12:38"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "14071:12:38"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "value_3",
																					"nodeType": "YulIdentifier",
																					"src": "14029:7:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [],
																							"functionName": {
																								"name": "calldatasize",
																								"nodeType": "YulIdentifier",
																								"src": "14042:12:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "14042:14:38"
																						},
																						{
																							"name": "length_1",
																							"nodeType": "YulIdentifier",
																							"src": "14058:8:38"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nodeType": "YulIdentifier",
																						"src": "14038:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14038:29:38"
																				}
																			],
																			"functionName": {
																				"name": "sgt",
																				"nodeType": "YulIdentifier",
																				"src": "14025:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14025:43:38"
																		},
																		"nodeType": "YulIf",
																		"src": "14022:63:38"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "14109:4:38"
																						},
																						{
																							"name": "_6",
																							"nodeType": "YulIdentifier",
																							"src": "14115:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14105:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14105:13:38"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "14120:2:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14098:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14098:25:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14098:25:38"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14136:67:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "value_3",
																					"nodeType": "YulIdentifier",
																					"src": "14170:7:38"
																				},
																				{
																					"name": "length_1",
																					"nodeType": "YulIdentifier",
																					"src": "14179:8:38"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nodeType": "YulIdentifier",
																							"src": "14193:4:38"
																						},
																						{
																							"name": "_2",
																							"nodeType": "YulIdentifier",
																							"src": "14199:2:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "14189:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14189:13:38"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_bytes_calldata",
																				"nodeType": "YulIdentifier",
																				"src": "14144:25:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14144:59:38"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14136:4:38"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14216:25:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "14230:6:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "14238:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14226:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14226:15:38"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14216:6:38"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14254:19:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "14265:3:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "14270:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14261:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14261:12:38"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "14254:3:38"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12645:1:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12648:6:38"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12642:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "12642:13:38"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12656:18:38",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12658:14:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12667:1:38"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12670:1:38",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12663:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12663:9:38"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12658:1:38"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12638:3:38",
																"statements": []
															},
															"src": "12634:1649:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14292:11:38",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "14299:4:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14292:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_struct_Transaction_calldata_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12348:5:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12355:6:38",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12363:3:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12371:3:38",
														"type": ""
													}
												],
												"src": "12281:2028:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14636:272:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14653:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14664:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14646:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "14646:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14646:21:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14687:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14698:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14683:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14683:18:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14703:1:38",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14676:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "14676:29:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14676:29:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14725:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14736:2:38",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14721:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14721:18:38"
																	},
																	{
																		"hexValue": "73656c663a",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14741:7:38",
																		"type": "",
																		"value": "self:"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14714:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "14714:35:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14714:35:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14769:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14780:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14765:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14765:20:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14787:3:38",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14758:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "14758:33:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14758:33:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14800:102:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14866:6:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14874:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14886:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14897:3:38",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14882:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14882:19:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_struct_Transaction_calldata_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "14808:57:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "14808:94:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14800:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845_t_array$_t_struct$_Transaction_$2322_calldata_ptr_$dyn_calldata_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$2322_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14597:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14608:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14616:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14627:4:38",
														"type": ""
													}
												],
												"src": "14314:594:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15162:190:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15179:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15190:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15172:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "15172:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15172:25:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15217:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15228:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15213:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15213:18:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15233:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15206:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "15206:30:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15206:30:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15245:101:38",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15311:6:38"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15319:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15331:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15342:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15327:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15327:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_struct_Transaction_calldata_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "15253:57:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "15253:93:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15245:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_struct$_Transaction_$2322_calldata_ptr_$dyn_calldata_ptr__to_t_uint256_t_array$_t_struct$_Transaction_$2322_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15115:9:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15126:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15134:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15142:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15153:4:38",
														"type": ""
													}
												],
												"src": "14913:439:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15514:158:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15531:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15542:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15524:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "15524:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15524:25:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15569:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15580:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15565:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15565:18:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15585:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15558:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "15558:30:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15558:30:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15597:69:38",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15631:6:38"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15639:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15651:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15662:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15647:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15647:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "15605:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "15605:61:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15597:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15467:9:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15478:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15486:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15494:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15505:4:38",
														"type": ""
													}
												],
												"src": "15357:315:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15709:152:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15726:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15729:77:38",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15719:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "15719:88:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15719:88:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15823:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15826:4:38",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15816:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "15816:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15816:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15847:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15850:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15840:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "15840:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15840:15:38"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "15677:184:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15965:149:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15975:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15987:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15998:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15983:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "15983:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15975:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16017:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16032:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16040:66:38",
																				"type": "",
																				"value": "0xff00000000000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16028:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16028:79:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16010:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "16010:98:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16010:98:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes1__to_t_bytes1__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15934:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15945:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15956:4:38",
														"type": ""
													}
												],
												"src": "15866:248:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16339:159:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16356:3:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16361:66:38",
																		"type": "",
																		"value": "0x0170122000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16349:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "16349:79:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16349:79:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16448:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16453:1:38",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16444:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16444:11:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16457:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16437:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "16437:27:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16437:27:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16473:19:38",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16484:3:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16489:2:38",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16480:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "16480:12:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16473:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_26b70929d2fa0780c1c1464bfedd403dbaa218f98edb5cf8a3ef7b664ee22408_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16315:3:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16320:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16331:3:38",
														"type": ""
													}
												],
												"src": "16119:379:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16743:197:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16760:3:38"
																	},
																	{
																		"hexValue": "697066733a2f2f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16765:9:38",
																		"type": "",
																		"value": "ipfs://"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16753:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "16753:22:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16753:22:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16784:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16804:6:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16798:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "16798:13:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16788:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16859:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16867:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16855:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16855:17:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16878:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16883:1:38",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16874:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16874:11:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16887:6:38"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16820:34:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "16820:74:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16820:74:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16903:31:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "16918:3:38"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16923:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16914:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16914:16:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16932:1:38",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16910:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "16910:24:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16903:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16719:3:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16724:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16735:3:38",
														"type": ""
													}
												],
												"src": "16503:437:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17064:99:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17081:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17092:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17074:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "17074:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17074:21:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17104:53:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17130:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17142:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17153:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17138:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17138:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "17112:17:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "17112:45:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17104:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17033:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17044:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17055:4:38",
														"type": ""
													}
												],
												"src": "16945:218:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17297:119:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17307:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17319:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17330:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17315:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "17315:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17307:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17349:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17360:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17342:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "17342:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17342:25:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17387:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17398:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17383:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17383:18:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17403:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17376:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "17376:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17376:34:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17258:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17269:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17277:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17288:4:38",
														"type": ""
													}
												],
												"src": "17168:248:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17548:241:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17558:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17570:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17581:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17566:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "17566:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17558:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17600:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "17615:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17623:66:38",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17611:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17611:79:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17593:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "17593:98:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17593:98:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17711:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17722:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17707:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17707:18:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "17731:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17739:42:38",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "17727:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17727:55:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17700:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "17700:83:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17700:83:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4_t_address__to_t_bytes4_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17509:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17520:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17528:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17539:4:38",
														"type": ""
													}
												],
												"src": "17421:368:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18070:315:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18087:3:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18092:66:38",
																		"type": "",
																		"value": "0x1901000000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18080:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "18080:79:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18080:79:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "18179:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18184:1:38",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18175:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18175:11:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18188:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18168:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "18168:27:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18168:27:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "18215:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18220:2:38",
																				"type": "",
																				"value": "34"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18211:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18211:12:38"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18233:2:38",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "18237:6:38"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "18229:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18229:15:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18246:66:38",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18225:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18225:88:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18204:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "18204:110:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18204:110:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "18334:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18339:2:38",
																				"type": "",
																				"value": "54"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18330:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18330:12:38"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18344:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18323:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "18323:28:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18323:28:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18360:19:38",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18371:3:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18376:2:38",
																		"type": "",
																		"value": "86"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18367:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "18367:12:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18360:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_uint256_t_address_t_bytes32__to_t_string_memory_ptr_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18030:3:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18035:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18043:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18051:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18062:3:38",
														"type": ""
													}
												],
												"src": "17794:591:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18496:281:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18506:51:38",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "18545:11:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "18532:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "18532:25:38"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "18510:18:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18705:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18714:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18717:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18707:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18707:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18707:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "18580:18:38"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "18608:12:38"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18608:14:38"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "18624:8:38"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "18604:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18604:29:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "18635:66:38",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18600:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18600:102:38"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "18576:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18576:127:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18569:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "18569:135:38"
															},
															"nodeType": "YulIf",
															"src": "18566:155:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18730:41:38",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "18742:8:38"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "18752:18:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18738:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "18738:33:38"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "18730:4:38"
																}
															]
														}
													]
												},
												"name": "access_calldata_tail_t_struct$_Transaction_$2322_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "18461:8:38",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "18471:11:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "18487:4:38",
														"type": ""
													}
												],
												"src": "18390:387:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18939:162:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18949:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18961:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18972:2:38",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18957:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "18957:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18949:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18991:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19002:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18984:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "18984:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18984:25:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19029:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19040:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19025:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19025:18:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19045:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19018:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "19018:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19018:34:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19072:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19083:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19068:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19068:18:38"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "19088:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19061:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "19061:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19061:34:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18892:9:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18903:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18911:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18919:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18930:4:38",
														"type": ""
													}
												],
												"src": "18782:319:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19173:113:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19219:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19228:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19231:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19221:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19221:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19221:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19194:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19203:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19190:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19190:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19215:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19186:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "19186:32:38"
															},
															"nodeType": "YulIf",
															"src": "19183:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19244:36:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19270:9:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "19254:15:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "19254:26:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "19244:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19139:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19150:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19162:6:38",
														"type": ""
													}
												],
												"src": "19106:180:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19385:486:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19395:51:38",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "19434:11:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "19421:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "19421:25:38"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "19399:18:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19594:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19603:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19606:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19596:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19596:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19596:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "19469:18:38"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "19497:12:38"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "19497:14:38"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "19513:8:38"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "19493:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19493:29:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19524:66:38",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19489:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19489:102:38"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "19465:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19465:127:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19458:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "19458:135:38"
															},
															"nodeType": "YulIf",
															"src": "19455:155:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19619:47:38",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "19637:8:38"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "19647:18:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19633:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "19633:33:38"
															},
															"variables": [
																{
																	"name": "addr_1",
																	"nodeType": "YulTypedName",
																	"src": "19623:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19675:30:38",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nodeType": "YulIdentifier",
																		"src": "19698:6:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "19685:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "19685:20:38"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "19675:6:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19748:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19757:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19760:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19750:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19750:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19750:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19720:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19728:18:38",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19717:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "19717:30:38"
															},
															"nodeType": "YulIf",
															"src": "19714:50:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19773:25:38",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nodeType": "YulIdentifier",
																		"src": "19785:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19793:4:38",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19781:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "19781:17:38"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "19773:4:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19849:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19858:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19861:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19851:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19851:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19851:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "19814:4:38"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "19824:12:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19824:14:38"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "19840:6:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19820:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19820:27:38"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "19810:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "19810:38:38"
															},
															"nodeType": "YulIf",
															"src": "19807:58:38"
														}
													]
												},
												"name": "access_calldata_tail_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "19342:8:38",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "19352:11:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "19368:4:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19374:6:38",
														"type": ""
													}
												],
												"src": "19291:580:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20005:119:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20015:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20027:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20038:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20023:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "20023:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20015:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20057:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20068:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20050:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "20050:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20050:25:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20095:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20106:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20091:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20091:18:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20111:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20084:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "20084:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20084:34:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19966:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19977:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19985:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19996:4:38",
														"type": ""
													}
												],
												"src": "19876:248:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20259:201:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20297:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20306:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20309:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20299:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20299:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20299:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "20275:10:38"
																	},
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "20287:8:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20272:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "20272:24:38"
															},
															"nodeType": "YulIf",
															"src": "20269:44:38"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20346:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20355:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20358:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20348:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20348:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20348:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "20328:8:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20338:6:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20325:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "20325:20:38"
															},
															"nodeType": "YulIf",
															"src": "20322:40:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20371:36:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20388:6:38"
																	},
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "20396:10:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20384:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "20384:23:38"
															},
															"variableNames": [
																{
																	"name": "offsetOut",
																	"nodeType": "YulIdentifier",
																	"src": "20371:9:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20416:38:38",
															"value": {
																"arguments": [
																	{
																		"name": "endIndex",
																		"nodeType": "YulIdentifier",
																		"src": "20433:8:38"
																	},
																	{
																		"name": "startIndex",
																		"nodeType": "YulIdentifier",
																		"src": "20443:10:38"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20429:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "20429:25:38"
															},
															"variableNames": [
																{
																	"name": "lengthOut",
																	"nodeType": "YulIdentifier",
																	"src": "20416:9:38"
																}
															]
														}
													]
												},
												"name": "calldata_array_index_range_access_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20193:6:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "20201:6:38",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "20209:10:38",
														"type": ""
													},
													{
														"name": "endIndex",
														"nodeType": "YulTypedName",
														"src": "20221:8:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "offsetOut",
														"nodeType": "YulTypedName",
														"src": "20234:9:38",
														"type": ""
													},
													{
														"name": "lengthOut",
														"nodeType": "YulTypedName",
														"src": "20245:9:38",
														"type": ""
													}
												],
												"src": "20129:331:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20497:152:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20514:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20517:77:38",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20507:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "20507:88:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20507:88:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20611:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20614:4:38",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20604:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "20604:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20604:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20635:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20638:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20628:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "20628:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20628:15:38"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20465:184:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20702:77:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20712:16:38",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20723:1:38"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20726:1:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20719:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "20719:9:38"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "20712:3:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20751:22:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20753:16:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20753:18:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20753:18:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20743:1:38"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "20746:3:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20740:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "20740:10:38"
															},
															"nodeType": "YulIf",
															"src": "20737:36:38"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20685:1:38",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20688:1:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "20694:3:38",
														"type": ""
													}
												],
												"src": "20654:125:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20975:201:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20992:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21003:2:38",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20985:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "20985:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20985:21:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21015:69:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21049:6:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21057:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21069:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21080:2:38",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21065:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21065:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "21023:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "21023:61:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21015:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21104:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21115:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21100:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21100:18:38"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21120:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21093:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "21093:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21093:34:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21147:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21158:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21143:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21143:18:38"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "21163:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21136:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "21136:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21136:34:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_slice_t_uint256_t_uint256__to_t_bytes_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20920:9:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20931:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20939:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20947:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20955:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20966:4:38",
														"type": ""
													}
												],
												"src": "20784:392:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21213:152:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21230:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21233:77:38",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21223:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "21223:88:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21223:88:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21327:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21330:4:38",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21320:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "21320:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21320:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21351:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21354:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21344:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "21344:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21344:15:38"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "21181:184:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21610:191:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21627:3:38"
																	},
																	{
																		"hexValue": "62",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21632:3:38",
																		"type": "",
																		"value": "b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21620:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "21620:16:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21620:16:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21645:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21665:6:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "21659:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "21659:13:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "21649:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "21720:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21728:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21716:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21716:17:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "21739:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21744:1:38",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21735:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21735:11:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "21748:6:38"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "21681:34:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "21681:74:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21681:74:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21764:31:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "21779:3:38"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "21784:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21775:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21775:16:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21793:1:38",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21771:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "21771:24:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21764:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21586:3:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21591:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21602:3:38",
														"type": ""
													}
												],
												"src": "21370:431:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21953:142:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21970:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21981:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21963:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "21963:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21963:25:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22008:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22019:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22004:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22004:18:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22024:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21997:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "21997:30:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21997:30:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22036:53:38",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22062:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22074:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22085:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22070:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22070:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "22044:17:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "22044:45:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22036:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21914:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21925:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21933:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21944:4:38",
														"type": ""
													}
												],
												"src": "21806:289:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22291:250:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22308:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22319:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22301:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "22301:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22301:25:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22346:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22357:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22342:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22342:18:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "22366:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22374:42:38",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "22362:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22362:55:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22335:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "22335:83:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22335:83:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22438:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22449:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22434:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22434:18:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22454:2:38",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22427:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "22427:30:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22427:30:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22466:69:38",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "22500:6:38"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "22508:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22520:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22531:2:38",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22516:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22516:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "22474:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "22474:61:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22466:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_address_t_bytes_calldata_ptr_slice__to_t_bytes32_t_address_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22236:9:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "22247:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "22255:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22263:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22271:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22282:4:38",
														"type": ""
													}
												],
												"src": "22100:441:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22675:115:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22692:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22703:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22685:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "22685:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22685:21:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22715:69:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22749:6:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22757:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22769:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22780:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22765:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22765:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "22723:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "22723:61:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22715:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22636:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22647:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22655:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22666:4:38",
														"type": ""
													}
												],
												"src": "22546:244:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22844:79:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22854:17:38",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22866:1:38"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "22869:1:38"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "22862:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "22862:9:38"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "22854:4:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "22895:22:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "22897:16:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "22897:18:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "22897:18:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "22886:4:38"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "22892:1:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "22883:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "22883:11:38"
															},
															"nodeType": "YulIf",
															"src": "22880:37:38"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "22826:1:38",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "22829:1:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "22835:4:38",
														"type": ""
													}
												],
												"src": "22795:128:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23085:158:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23102:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23113:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23095:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "23095:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23095:21:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23125:69:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23159:6:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23167:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23179:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23190:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23175:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23175:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "23133:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "23133:61:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23125:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23214:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23225:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23210:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23210:18:38"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23230:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23203:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "23203:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23203:34:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_t_bytes32__to_t_bytes_memory_ptr_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23038:9:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23049:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23057:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23065:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23076:4:38",
														"type": ""
													}
												],
												"src": "22928:315:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23403:169:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23420:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23431:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23413:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "23413:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23413:21:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23443:69:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23477:6:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23485:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23497:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23508:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23493:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23493:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "23451:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "23451:61:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23443:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23532:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23543:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23528:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23528:18:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "23552:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23560:4:38",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "23548:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23548:17:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23521:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "23521:45:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23521:45:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23356:9:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23367:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23375:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23383:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23394:4:38",
														"type": ""
													}
												],
												"src": "23248:324:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23758:217:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23768:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23780:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23791:3:38",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23776:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "23776:19:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23768:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23811:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23822:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23804:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "23804:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23804:25:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23849:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23860:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23845:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23845:18:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "23869:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23877:4:38",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "23865:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23865:17:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23838:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "23838:45:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23838:45:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23903:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23914:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23899:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23899:18:38"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23919:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23892:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "23892:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23892:34:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23946:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23957:2:38",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23942:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23942:18:38"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "23962:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23935:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "23935:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23935:34:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23703:9:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "23714:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23722:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23730:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23738:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23749:4:38",
														"type": ""
													}
												],
												"src": "23577:398:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24200:160:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24217:3:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24222:66:38",
																		"type": "",
																		"value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24210:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "24210:79:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24210:79:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "24309:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24314:2:38",
																				"type": "",
																				"value": "28"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24305:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24305:12:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24319:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24298:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "24298:28:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24298:28:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24335:19:38",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24346:3:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24351:2:38",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24342:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "24342:12:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "24335:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24176:3:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24181:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "24192:3:38",
														"type": ""
													}
												],
												"src": "23980:380:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24544:217:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24561:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24572:2:38",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24554:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "24554:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24554:21:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24584:69:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24618:6:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24626:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24638:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24649:2:38",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24634:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24634:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "24592:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "24592:61:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24584:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24673:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24684:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24669:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24669:18:38"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "24689:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24662:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "24662:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24662:34:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24716:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24727:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24712:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24712:18:38"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nodeType": "YulIdentifier",
																						"src": "24746:6:38"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "24739:6:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24739:14:38"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "24732:6:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24732:22:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24705:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "24705:50:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24705:50:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_calldata_ptr_t_uint256_t_bool__to_t_bytes_memory_ptr_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24489:9:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "24500:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24508:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24516:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24524:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24535:4:38",
														"type": ""
													}
												],
												"src": "24365:396:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24929:158:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24946:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24957:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24939:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "24939:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24939:25:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24984:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24995:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24980:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24980:18:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25000:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24973:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "24973:30:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24973:30:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25012:69:38",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25046:6:38"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "25054:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25066:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25077:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25062:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25062:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "25020:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "25020:61:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25012:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr_slice__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24882:9:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24893:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24901:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24909:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24920:4:38",
														"type": ""
													}
												],
												"src": "24766:321:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25172:169:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "25218:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25227:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "25230:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "25220:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "25220:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "25220:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "25193:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25202:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25189:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25189:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25214:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "25185:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "25185:32:38"
															},
															"nodeType": "YulIf",
															"src": "25182:52:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "25243:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25262:9:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "25256:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "25256:16:38"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "25247:5:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "25305:5:38"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "25281:23:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "25281:30:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25281:30:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25320:15:38",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "25330:5:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "25320:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25138:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "25149:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25161:6:38",
														"type": ""
													}
												],
												"src": "25092:249:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25622:235:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25639:3:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25644:66:38",
																		"type": "",
																		"value": "0x53657175656e6365206e657374656420636f6e6669673a0a0000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25632:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "25632:79:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25632:79:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "25731:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25736:2:38",
																				"type": "",
																				"value": "24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25727:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25727:12:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "25741:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25720:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "25720:28:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25720:28:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "25768:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25773:2:38",
																				"type": "",
																				"value": "56"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25764:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25764:12:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25778:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25757:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "25757:28:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25757:28:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "25805:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25810:2:38",
																				"type": "",
																				"value": "88"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25801:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25801:12:38"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "25815:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25794:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "25794:28:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25794:28:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25831:20:38",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25842:3:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25847:3:38",
																		"type": "",
																		"value": "120"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25838:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "25838:13:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25831:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_58d1832f15932b40f8da147bd99ac98efab990f25a786a2229b05ee5f5be41a7_t_bytes32_t_uint256_t_uint256__to_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25582:3:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "25587:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "25595:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "25603:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25614:3:38",
														"type": ""
													}
												],
												"src": "25346:511:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26082:160:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26099:3:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26104:66:38",
																		"type": "",
																		"value": "0x53657175656e636520737461746963206469676573743a0a0000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26092:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "26092:79:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26092:79:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "26191:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26196:2:38",
																				"type": "",
																				"value": "24"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26187:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26187:12:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "26201:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26180:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "26180:28:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26180:28:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26217:19:38",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26228:3:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26233:2:38",
																		"type": "",
																		"value": "56"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26224:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "26224:12:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26217:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_583557e68bca91e5400591dbc9ae31043113c95e3cd985463ae532f51d706f8c_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26058:3:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "26063:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26074:3:38",
														"type": ""
													}
												],
												"src": "25862:380:38"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_decode_tuple_t_bytes32t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_array_struct_Transaction_calldata_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Transaction_$2322_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_struct_Transaction_calldata_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n    }\n    function abi_decode_tuple_t_array$_t_struct$_Transaction_$2322_calldata_ptr_$dyn_calldata_ptrt_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_struct_Transaction_calldata_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        value2 := calldataload(add(headStart, 32))\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__to_t_uint256_t_uint256_t_bytes32_t_bytes32_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_bytes4t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_struct_Transaction_calldata_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_struct_Transaction_calldata_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_array_struct_Transaction_calldata_dyn_calldata(value, length, pos) -> end\n    {\n        mstore(pos, length)\n        let _1 := 0x20\n        let updated_pos := add(pos, _1)\n        let pos_1 := updated_pos\n        pos := updated_pos\n        let tail := add(pos_1, shl(5, length))\n        let srcPtr := value\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, pos_1))\n            let rel_offset_of_tail := calldataload(srcPtr)\n            if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), value), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41))) { revert(0, 0) }\n            let value_1 := add(rel_offset_of_tail, value)\n            let _2 := 0xc0\n            mstore(tail, iszero(iszero(abi_decode_bool(value_1))))\n            mstore(add(tail, _1), iszero(iszero(abi_decode_bool(add(value_1, _1)))))\n            let _3 := 0x40\n            mstore(add(tail, _3), calldataload(add(value_1, _3)))\n            let _4 := 0x60\n            mstore(add(tail, _4), and(abi_decode_address(add(value_1, _4)), 0xffffffffffffffffffffffffffffffffffffffff))\n            let _5 := 0x80\n            mstore(add(tail, _5), calldataload(add(value_1, _5)))\n            let _6 := 0xa0\n            let rel_offset_of_tail_1 := calldataload(add(value_1, _6))\n            if iszero(slt(rel_offset_of_tail_1, add(sub(calldatasize(), value_1), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1))) { revert(0, 0) }\n            let value_2 := add(rel_offset_of_tail_1, value_1)\n            let length_1 := calldataload(value_2)\n            let value_3 := add(value_2, _1)\n            if gt(length_1, 0xffffffffffffffff) { revert(0, 0) }\n            if sgt(value_3, sub(calldatasize(), length_1)) { revert(0, 0) }\n            mstore(add(tail, _6), _2)\n            tail := abi_encode_bytes_calldata(value_3, length_1, add(tail, _2))\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        end := tail\n    }\n    function abi_encode_tuple_t_stringliteral_bf9461da9f9c0123d3a54c61147a274d8fdb5d5c1e488665fb11b9edbbc32845_t_array$_t_struct$_Transaction_$2322_calldata_ptr_$dyn_calldata_ptr__to_t_string_memory_ptr_t_array$_t_struct$_Transaction_$2322_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 5)\n        mstore(add(headStart, 96), \"self:\")\n        mstore(add(headStart, 0x20), 128)\n        tail := abi_encode_array_struct_Transaction_calldata_dyn_calldata(value0, value1, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_struct$_Transaction_$2322_calldata_ptr_$dyn_calldata_ptr__to_t_uint256_t_array$_t_struct$_Transaction_$2322_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_struct_Transaction_calldata_dyn_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes1__to_t_bytes1__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff00000000000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_26b70929d2fa0780c1c1464bfedd403dbaa218f98edb5cf8a3ef7b664ee22408_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x0170122000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 4), value0)\n        end := add(pos, 36)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"ipfs://\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 7), length)\n        end := add(add(pos, length), 7)\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes4_t_address__to_t_bytes4_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_uint256_t_address_t_bytes32__to_t_string_memory_ptr_t_uint256_t_address_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, 0x1901000000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), and(shl(96, value1), 0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000))\n        mstore(add(pos, 54), value2)\n        end := add(pos, 86)\n    }\n    function access_calldata_tail_t_struct$_Transaction_$2322_calldata_ptr(base_ref, ptr_to_tail) -> addr\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff41))) { revert(0, 0) }\n        addr := add(base_ref, rel_offset_of_tail)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bool(headStart)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function calldata_array_index_range_access_t_bytes_calldata_ptr(offset, length, startIndex, endIndex) -> offsetOut, lengthOut\n    {\n        if gt(startIndex, endIndex) { revert(0, 0) }\n        if gt(endIndex, length) { revert(0, 0) }\n        offsetOut := add(offset, startIndex)\n        lengthOut := sub(endIndex, startIndex)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_slice_t_uint256_t_uint256__to_t_bytes_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 96))\n        mstore(add(headStart, 32), value2)\n        mstore(add(headStart, 64), value3)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"b\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 1), length)\n        end := add(add(pos, length), 1)\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_memory_ptr__to_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_bytes_calldata_ptr_slice__to_t_bytes32_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_bytes_calldata(value2, value3, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 32))\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_bytes32__to_t_bytes_memory_ptr_t_bytes32__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), value2)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_uint8__to_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 64))\n        mstore(add(headStart, 32), and(value2, 0xff))\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr_t_uint256_t_bool__to_t_bytes_memory_ptr_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_bytes_calldata(value0, value1, add(headStart, 96))\n        mstore(add(headStart, 32), value2)\n        mstore(add(headStart, 64), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes_calldata_ptr_slice__to_t_bytes32_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_58d1832f15932b40f8da147bd99ac98efab990f25a786a2229b05ee5f5be41a7_t_bytes32_t_uint256_t_uint256__to_t_string_memory_ptr_t_bytes32_t_uint256_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, 0x53657175656e6365206e657374656420636f6e6669673a0a0000000000000000)\n        mstore(add(pos, 24), value0)\n        mstore(add(pos, 56), value1)\n        mstore(add(pos, 88), value2)\n        end := add(pos, 120)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_583557e68bca91e5400591dbc9ae31043113c95e3cd985463ae532f51d706f8c_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x53657175656e636520737461746963206469676573743a0a0000000000000000)\n        mstore(add(pos, 24), value0)\n        end := add(pos, 56)\n    }\n}",
									"id": 38,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1989": [
									{
										"length": 32,
										"start": 2394
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061019a5760003560e01c8063853c5068116100e1578063a38cef191161008a578063bc197c8111610064578063bc197c81146105cd578063c71f1f9614610615578063d0748f711461062a578063f23a6e611461064a576101a1565b8063a38cef1914610578578063affed0e014610598578063b93ea7ad146105ad576101a1565b80638efa6441116100bb5780638efa64411461052e57806390042baf146105505780639bd58b1614610563576101a1565b8063853c5068146104a65780638976c44c146104ee5780638c3f55631461050e576101a1565b8063295614261161014357806357c56d6b1161011d57806357c56d6b1461043257806361c2926c146104665780637a9a162814610486576101a1565b806329561426146103cf5780634fcf3eca146103ef57806351605d801461040f576101a1565b80631626ba7e116101745780631626ba7e1461034a5780631a9b23371461036a57806320c13b0b146103af576101a1565b806301ffc9a71461027f578063025b22bc146102b4578063150b7a02146102d4576101a1565b366101a157005b6004361061027d5760006101d86000357fffffffff0000000000000000000000000000000000000000000000000000000016610690565b905073ffffffffffffffffffffffffffffffffffffffff81161561027b576000808273ffffffffffffffffffffffffffffffffffffffff16600036604051610221929190612ada565b600060405180830381855af49150503d806000811461025c576040519150601f19603f3d011682016040523d82523d6000602084013e610261565b606091505b50915091508161027357805160208201fd5b805160208201f35b505b005b34801561028b57600080fd5b5061029f61029a366004612b18565b6106e4565b60405190151581526020015b60405180910390f35b3480156102c057600080fd5b5061027d6102cf366004612b5e565b6106ef565b3480156102e057600080fd5b506103196102ef366004612bc2565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016102ab565b34801561035657600080fd5b50610319610365366004612c31565b610741565b34801561037657600080fd5b5061038a610385366004612b18565b610758565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102ab565b3480156103bb57600080fd5b506103196103ca366004612c7d565b610763565b3480156103db57600080fd5b5061027d6103ea366004612ce9565b61077c565b3480156103fb57600080fd5b5061027d61040a366004612b18565b6107c6565b34801561041b57600080fd5b5061042461088e565b6040519081526020016102ab565b34801561043e57600080fd5b506104247f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d181565b34801561047257600080fd5b5061027d610481366004612d47565b6108bd565b34801561049257600080fd5b5061027d6104a1366004612d89565b610943565b3480156104b257600080fd5b506104c66104c1366004612c31565b610a48565b604080519586526020860194909452928401919091526060830152608082015260a0016102ab565b3480156104fa57600080fd5b5061027d610509366004612ce9565b610c10565b34801561051a57600080fd5b50610424610529366004612ce9565b610ce8565b34801561053a57600080fd5b50610543610d14565b6040516102ab9190612e60565b61038a61055e366004612ea2565b610d95565b34801561056f57600080fd5b50610424610e7f565b34801561058457600080fd5b5061027d610593366004612ce9565b610ea9565b3480156105a457600080fd5b50610424610ef3565b3480156105b957600080fd5b5061027d6105c8366004612f71565b610eff565b3480156105d957600080fd5b506103196105e8366004612fa6565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b34801561062157600080fd5b50610424610fca565b34801561063657600080fd5b5061027d610645366004613061565b610ff4565b34801561065657600080fd5b50610319610665366004613083565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60006106de7fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1207fffffffff000000000000000000000000000000000000000000000000000000008416611047565b92915050565b60006106de826110a5565b333014610735576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b61073e81611101565b50565b600061074e8484846111b5565b90505b9392505050565b60006106de82610690565b600061077185858585611200565b90505b949350505050565b3330146107bd576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b61073e81611263565b333014610807576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b600061081282610690565b73ffffffffffffffffffffffffffffffffffffffff1603610883576040517f1c3812cc0000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008216600482015260240161072c565b61073e8160006112f3565b60006108b87fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf85490565b905090565b3330146108fe576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b600061093183836040516020016109169291906132a3565b604051602081830303815290604052805190602001206113b3565b905061093e818484611438565b505050565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036109b2576040517f0a57d61d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6109bb836115c0565b6000806109f38588886040516020016109d6939291906132eb565b6040516020818303038152906040528051906020012085856116bd565b9150915081610a34578084846040517f8f4a234f00000000000000000000000000000000000000000000000000000000815260040161072c93929190613305565b610a3f818888611438565b50505050505050565b60008060008060008087876000818110610a6457610a6461331f565b909101357fff00000000000000000000000000000000000000000000000000000000000000169150819050610aba57610a9c896113b3565b9250610aa98389896116fb565b92985090965094509150610c059050565b7fff0000000000000000000000000000000000000000000000000000000000000081811601610af957610aec896113b3565b9250610aa983898961174c565b7ffe000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821601610b4b57610aec89611778565b7ffd000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821601610baf57610b9f8989896117e5565b9550955095509550955050610c05565b6040517f6085cd820000000000000000000000000000000000000000000000000000000081527fff000000000000000000000000000000000000000000000000000000000000008216600482015260240161072c565b939792965093509350565b333014610c51576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b80610c88576040517fb24b5b3a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cb17f8c8764b3a50fee69c9bee6e956047501f434fb0e2349c75844a401a7f2a020d2829055565b6040518181527f1f63199319eff813052575c41087f618aba07b006664fed6c01f7ee9c5716835906020015b60405180910390a150565b60006106de7f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e83611047565b6060610d71610d6c610d24610fca565b6040517f017012200000000000000000000000000000000000000000000000000000000060208201526024810191909152604401604051602081830303815290604052611962565b611b7b565b604051602001610d81919061334e565b604051602081830303815290604052905090565b6000333014610dd8576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b81516020830134f0905073ffffffffffffffffffffffffffffffffffffffff8116610e3157816040517f0d25719100000000000000000000000000000000000000000000000000000000815260040161072c9190612e60565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c9060200160405180910390a1919050565b60006108b87f8c8764b3a50fee69c9bee6e956047501f434fb0e2349c75844a401a7f2a020d25490565b333014610eea576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b61073e81611ba4565b60006108b86000610ce8565b333014610f40576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b6000610f4b83610690565b73ffffffffffffffffffffffffffffffffffffffff1614610fbc576040517f5b4d6d6a0000000000000000000000000000000000000000000000000000000081527fffffffff000000000000000000000000000000000000000000000000000000008316600482015260240161072c565b610fc682826112f3565b5050565b60006108b87f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d0335490565b333014611035576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440161072c565b61103e82611263565b610fc681611ba4565b6000808383604051602001611066929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b60007f2e74b92a000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016110f857506001919050565b6106de82611bfd565b73ffffffffffffffffffffffffffffffffffffffff81163b611167576040517f0c76093700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240161072c565b61116f813055565b60405173ffffffffffffffffffffffffffffffffffffffff821681527f310ba5f1d2ed074b51e2eccd052a47ae9ab7c6b800d1fca3db3999d6a592ca0390602001610cdd565b6000806111c3858585611c59565b50905080156111f557507f1626ba7e000000000000000000000000000000000000000000000000000000009050610751565b506000949350505050565b6000806112258686604051611216929190612ada565b60405180910390208585611c59565b509050801561125757507f20c13b0b000000000000000000000000000000000000000000000000000000009050610774565b50600095945050505050565b8061129a576040517f4294d12700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6112c37fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf8829055565b6040518181527f307ed6bd941ee9fc80f369c94af5fa11e25bab5102a6140191756c5474a30bfa90602001610cdd565b604080517fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1206020808301919091527fffffffff000000000000000000000000000000000000000000000000000000008516828401819052835180840385018152606084018086528151919093012073ffffffffffffffffffffffffffffffffffffffff8616908190559152608082015290517f0d7fc113eaf016db4681a1ba86d083ce3e0961f321062a75ac2b0aeb33deeed19181900360a00190a15050565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201524660228201527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166042820152605681018290526000906076015b604051602081830303815290604052805190602001209050919050565b8060005b818110156115b957368484838181106114575761145761331f565b90506020028101906114699190613393565b90506040810135805a10156114be5782815a6040517f2bb3e3ba00000000000000000000000000000000000000000000000000000000815260048101939093526024830191909152604482015260640161072c565b60006114cd60208401846133d1565b1561150c576115056114e56080850160608601612b5e565b83156114f157836114f3565b5a5b61150060a08701876133ec565b611c8a565b9050611547565b61154461151f6080850160608601612b5e565b608085013584156115305784611532565b5a5b61153f60a08801886133ec565b611ca5565b90505b801561158c57877f5c4eeb02dabf8976016ab414d617f9a162936dcace3cdef8c69ef6e262ad5ae78560405161157f91815260200190565b60405180910390a26115ae565b6115ae61159f60408501602086016133d1565b89866115a9611cc2565b611ce1565b50505060010161143c565b5050505050565b606081901c6bffffffffffffffffffffffff821660006115df83610ce8565b905081811461162b576040517f9b6514f400000000000000000000000000000000000000000000000000000000815260048101849052602481018390526044810182905260640161072c565b604080517f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e60208083019190915281830186905282518083038401815260609092019092528051910120600183019081905560408051858152602081018390527f1f180c27086c7a39ea2a7b25239d1ab92348f07ca7bb59d1438fcf527568f881910160405180910390a15050505050565b60008060008060006116d0888888610a48565b509650919450925090508282108015906116ee57506116ee81611d2f565b9450505050935093915050565b600080808061171687611711876006818b613451565b611d3a565b6000908152873560f01c6020818152604080842084526002909a013560e01c908190529890912090999198509695509350505050565b600080808061176787611762876001818b613451565b6116fb565b935093509350935093509350935093565b6040517f190100000000000000000000000000000000000000000000000000000000000060208201526000602282018190527fffffffffffffffffffffffffffffffffffffffff0000000000000000000000003060601b166042830152605682018390529060760161141b565b6000808080806004600188013560e81c8261180083836134aa565b90506118128b6104c183868d8f613451565b939b509199509750955093508787101561186a5761183281848b8d613451565b89896040517fb006aba000000000000000000000000000000000000000000000000000000000815260040161072c94939291906134bd565b8092505b888310156119545760038301928a013560e81c915061188d83836134aa565b905060006118af61189d886121d0565b8c8c879086926104c193929190613451565b939c50919a5098509091505088881015611907576118cf82858c8e613451565b8a8a6040517fb006aba000000000000000000000000000000000000000000000000000000000815260040161072c94939291906134bd565b84811061194a576040517f37daf62b000000000000000000000000000000000000000000000000000000008152600481018290526024810186905260440161072c565b935091508161186e565b505050939792965093509350565b8051606090600381901b60006005600483010467ffffffffffffffff81111561198d5761198d612e73565b6040519080825280601f01601f1916602001820160405280156119b7576020820181803683370190505b5090506000806000805b86811015611acb578881815181106119db576119db61331f565b01602001516008948501949390931b60f89390931c92909217915b60058410611ac3576040805180820190915260208082527f6162636465666768696a6b6c6d6e6f707172737475767778797a323334353637818301527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb90950194601f85871c16908110611a6c57611a6c61331f565b602001015160f81c60f81b858381518110611a8957611a8961331f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506001909101906119f6565b6001016119c1565b508215611b6f576040518060400160405280602081526020017f6162636465666768696a6b6c6d6e6f707172737475767778797a3233343536378152508360050383901b601f1681518110611b2257611b2261331f565b602001015160f81c60f81b848281518110611b3f57611b3f61331f565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b50919695505050505050565b606081604051602001611b8e91906134e4565b6040516020818303038152906040529050919050565b611bcd7f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d033829055565b6040518181527f20d3ef1b5738a9f6d7beae515432206e7a8e2740ca6dcf46a952190ad01bcb5190602001610cdd565b60007f6ffbd451000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831601611c5057506001919050565b6106de82612204565b6000806000806000611c6c888888610a48565b509650919450925090508282108015906116ee57506116ee81612345565b60006040518284823760008084838989f49695505050505050565b6000604051828482376000808483898b8af1979650505050505050565b60603d604051915060208201818101604052818352816000823e505090565b8315611cef57805160208201fd5b827fab46c69f7f32e1bf09b0725853da82a211e5402a0600296ab499a2fb5ea3b4198383604051611d21929190613529565b60405180910390a250505050565b60006106de8261237c565b60008060005b838110156121c757600181019085013560f81c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101611de157601582019186013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff81169074ff000000000000000000000000000000000000000016811785611dc75780611dd6565b60008681526020829052604090205b955050505050611d40565b80611e775760018201918681013560f81c906043016000611e0d8a611e0884888c8e613451565b6123af565b60ff841697909701969194508491905060a083901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff82161786611e5c5780611e6b565b60008781526020829052604090205b96505050505050611d40565b60028103611f9f576000808784013560f881901c9060581c73ffffffffffffffffffffffffffffffffffffffff16601586019550909250905060008885013560e81c600386018162ffffff169150809650819250505060008186019050611ef08b848c8c8a908692611eeb93929190613451565b612672565b611f38578a83611f0283898d8f613451565b6040517f9a94623200000000000000000000000000000000000000000000000000000000815260040161072c9493929190613542565b60ff8416979097019694508460a084901b74ff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff84161787611f835780611f92565b60008881526020829052604090205b9750505050505050611d40565b60038103611fd257602082019186013583611fba5780611fc9565b60008481526020829052604090205b93505050611d40565b6004810361201e576003808301928781013560e81c9190820101600080611fff8b61171185898d8f613451565b60009889526020526040909720969097019650909350611d4092505050565b600681036121265760008287013560f81c60018401935060ff16905060008784013560f01c60028501945061ffff16905060008885013560e81c600386018162ffffff16915080965081925050506000818601905060008061208c8d8d8d8b90879261171193929190613451565b939850889390925090508482106120a257988501985b604080517f53657175656e6365206e657374656420636f6e6669673a0a0000000000000000602080830191909152603882018490526058820188905260788083018a90528351808403909101815260989092019092528051910120896121085780612117565b60008a81526020829052604090205b99505050505050505050611d40565b60058103612192576020820191860135878103612161577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff94505b600061216c82612859565b9050846121795780612188565b60008581526020829052604090205b9450505050611d40565b6040517fb2505f7c0000000000000000000000000000000000000000000000000000000081526004810182905260240161072c565b50935093915050565b7f8713a7c4465f6fbee2b6e9d6646d1d9f83fec929edfc4baf661f3c865bdd04d160009081526020829052604081206106de565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fec6aba5000000000000000000000000000000000000000000000000000000000148061229757507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b806122e357507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061232f57507fffffffff0000000000000000000000000000000000000000000000000000000082167fc0ee0b8a00000000000000000000000000000000000000000000000000000000145b1561233c57506001919050565b6106de82612894565b600081158015906106de57507f8c8764b3a50fee69c9bee6e956047501f434fb0e2349c75844a401a7f2a020d2545b821492915050565b600081158015906106de57507fea7157fa25e3aa17d0ae2d5280fa4e24d421c61842aa85e45194e1145aa72bf854612374565b6000604282146123ef5782826040517f2ee17a3d00000000000000000000000000000000000000000000000000000000815260040161072c929190613582565b60006124086123ff600185613596565b85013560f81c90565b60ff169050604084013560f81c843560208601357f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a081111561247c578686826040517fad4aac7600000000000000000000000000000000000000000000000000000000815260040161072c939291906135a9565b8260ff16601b1415801561249457508260ff16601c14155b156124d1578686846040517fe578897e00000000000000000000000000000000000000000000000000000000815260040161072c939291906135cd565b6001840361253e576040805160008152602081018083528a905260ff851691810191909152606081018390526080810182905260019060a0015b6020604051602081039080840390855afa15801561252d573d6000803e3d6000fd5b505050602060405103519450612616565b600284036125db576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101899052600190605c01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181528282528051602091820120600084529083018083525260ff861690820152606081018490526080810183905260a00161250b565b86868560016040517f9dfba85200000000000000000000000000000000000000000000000000000000815260040161072c94939291906135f4565b73ffffffffffffffffffffffffffffffffffffffff85166126675786866040517f6c1719d200000000000000000000000000000000000000000000000000000000815260040161072c929190613582565b505050509392505050565b60008181036126ad576040517fac241e1100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083836126bc600182613596565b8181106126cb576126cb61331f565b919091013560f81c91505060018114806126e55750600281145b1561272a578473ffffffffffffffffffffffffffffffffffffffff1661270c8786866123af565b73ffffffffffffffffffffffffffffffffffffffff16149150612850565b600381036128155773ffffffffffffffffffffffffffffffffffffffff8516631626ba7e878660008761275e600182613596565b9261276b93929190613451565b6040518463ffffffff1660e01b815260040161278993929190613305565b602060405180830381865afa1580156127a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ca9190613620565b7fffffffff00000000000000000000000000000000000000000000000000000000167f1626ba7e00000000000000000000000000000000000000000000000000000000149150612850565b83838260006040517f9dfba85200000000000000000000000000000000000000000000000000000000815260040161072c94939291906135f4565b50949350505050565b6040517f53657175656e636520737461746963206469676573743a0a000000000000000060208201526038810182905260009060580161141b565b60007ffda4dd44000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016128e757506001919050565b6106de8260007fe4a77bbc000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083160161293e57506001919050565b6106de8260007fda44f878000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000083160161299557506001919050565b6106de8260007fae9fa280000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016129ec57506001919050565b6106de8260007fffffffff0000000000000000000000000000000000000000000000000000000082167fac6a444e000000000000000000000000000000000000000000000000000000001480612a8357507fffffffff0000000000000000000000000000000000000000000000000000000082167f36e7817500000000000000000000000000000000000000000000000000000000145b15612a9057506001919050565b7f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316146106de565b8183823760009101908152919050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461073e57600080fd5b600060208284031215612b2a57600080fd5b813561075181612aea565b803573ffffffffffffffffffffffffffffffffffffffff81168114612b5957600080fd5b919050565b600060208284031215612b7057600080fd5b61075182612b35565b60008083601f840112612b8b57600080fd5b50813567ffffffffffffffff811115612ba357600080fd5b602083019150836020828501011115612bbb57600080fd5b9250929050565b600080600080600060808688031215612bda57600080fd5b612be386612b35565b9450612bf160208701612b35565b935060408601359250606086013567ffffffffffffffff811115612c1457600080fd5b612c2088828901612b79565b969995985093965092949392505050565b600080600060408486031215612c4657600080fd5b83359250602084013567ffffffffffffffff811115612c6457600080fd5b612c7086828701612b79565b9497909650939450505050565b60008060008060408587031215612c9357600080fd5b843567ffffffffffffffff80821115612cab57600080fd5b612cb788838901612b79565b90965094506020870135915080821115612cd057600080fd5b50612cdd87828801612b79565b95989497509550505050565b600060208284031215612cfb57600080fd5b5035919050565b60008083601f840112612d1457600080fd5b50813567ffffffffffffffff811115612d2c57600080fd5b6020830191508360208260051b8501011115612bbb57600080fd5b60008060208385031215612d5a57600080fd5b823567ffffffffffffffff811115612d7157600080fd5b612d7d85828601612d02565b90969095509350505050565b600080600080600060608688031215612da157600080fd5b853567ffffffffffffffff80821115612db957600080fd5b612dc589838a01612d02565b9097509550602088013594506040880135915080821115612de557600080fd5b50612c2088828901612b79565b60005b83811015612e0d578181015183820152602001612df5565b50506000910152565b60008151808452612e2e816020860160208601612df2565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006107516020830184612e16565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215612eb457600080fd5b813567ffffffffffffffff80821115612ecc57600080fd5b818401915084601f830112612ee057600080fd5b813581811115612ef257612ef2612e73565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715612f3857612f38612e73565b81604052828152876020848701011115612f5157600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008060408385031215612f8457600080fd5b8235612f8f81612aea565b9150612f9d60208401612b35565b90509250929050565b60008060008060008060008060a0898b031215612fc257600080fd5b612fcb89612b35565b9750612fd960208a01612b35565b9650604089013567ffffffffffffffff80821115612ff657600080fd5b6130028c838d01612d02565b909850965060608b013591508082111561301b57600080fd5b6130278c838d01612d02565b909650945060808b013591508082111561304057600080fd5b5061304d8b828c01612b79565b999c989b5096995094979396929594505050565b6000806040838503121561307457600080fd5b50508035926020909101359150565b60008060008060008060a0878903121561309c57600080fd5b6130a587612b35565b95506130b360208801612b35565b94506040870135935060608701359250608087013567ffffffffffffffff8111156130dd57600080fd5b6130e989828a01612b79565b979a9699509497509295939492505050565b80358015158114612b5957600080fd5b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b81835260006020808501808196508560051b810191508460005b8781101561329657828403895281357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418836030181126131ad57600080fd5b870160c06131ba826130fb565b151586526131c98783016130fb565b15158688015260408281013590870152606073ffffffffffffffffffffffffffffffffffffffff6131fb828501612b35565b16908701526080828101359087015260a080830135368490037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe101811261324157600080fd5b90920187810192903567ffffffffffffffff81111561325f57600080fd5b80360384131561326e57600080fd5b8282890152613280838901828661310b565b9c89019c9750505092860192505060010161316e565b5091979650505050505050565b60408152600560408201527f73656c663a000000000000000000000000000000000000000000000000000000606082015260806020820152600061074e608083018486613154565b838152604060208201526000610771604083018486613154565b83815260406020820152600061077160408301848661310b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f697066733a2f2f00000000000000000000000000000000000000000000000000815260008251613386816007850160208701612df2565b9190910160070192915050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418336030181126133c757600080fd5b9190910192915050565b6000602082840312156133e357600080fd5b610751826130fb565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261342157600080fd5b83018035915067ffffffffffffffff82111561343c57600080fd5b602001915036819003821315612bbb57600080fd5b6000808585111561346157600080fd5b8386111561346e57600080fd5b5050820193919092039150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156106de576106de61347b565b6060815260006134d160608301868861310b565b6020830194909452506040015292915050565b7f620000000000000000000000000000000000000000000000000000000000000081526000825161351c816001850160208701612df2565b9190910160010192915050565b82815260406020820152600061074e6040830184612e16565b84815273ffffffffffffffffffffffffffffffffffffffff8416602082015260606040820152600061357860608301848661310b565b9695505050505050565b60208152600061074e60208301848661310b565b818103818111156106de576106de61347b565b6040815260006135bd60408301858761310b565b9050826020830152949350505050565b6040815260006135e160408301858761310b565b905060ff83166020830152949350505050565b60608152600061360860608301868861310b565b60208301949094525090151560409091015292915050565b60006020828403121561363257600080fd5b815161075181612aea56fea26469706673582212209ea1f29a81ef04f0d1c452da3db48e1d4423c64089333bd5bf9b44b4cb4b18cf64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x19A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x853C5068 GT PUSH2 0xE1 JUMPI DUP1 PUSH4 0xA38CEF19 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xBC197C81 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x5CD JUMPI DUP1 PUSH4 0xC71F1F96 EQ PUSH2 0x615 JUMPI DUP1 PUSH4 0xD0748F71 EQ PUSH2 0x62A JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x64A JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0xA38CEF19 EQ PUSH2 0x578 JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x598 JUMPI DUP1 PUSH4 0xB93EA7AD EQ PUSH2 0x5AD JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x8EFA6441 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x8EFA6441 EQ PUSH2 0x52E JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x550 JUMPI DUP1 PUSH4 0x9BD58B16 EQ PUSH2 0x563 JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x853C5068 EQ PUSH2 0x4A6 JUMPI DUP1 PUSH4 0x8976C44C EQ PUSH2 0x4EE JUMPI DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x50E JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x29561426 GT PUSH2 0x143 JUMPI DUP1 PUSH4 0x57C56D6B GT PUSH2 0x11D JUMPI DUP1 PUSH4 0x57C56D6B EQ PUSH2 0x432 JUMPI DUP1 PUSH4 0x61C2926C EQ PUSH2 0x466 JUMPI DUP1 PUSH4 0x7A9A1628 EQ PUSH2 0x486 JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x29561426 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x4FCF3ECA EQ PUSH2 0x3EF JUMPI DUP1 PUSH4 0x51605D80 EQ PUSH2 0x40F JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x1626BA7E GT PUSH2 0x174 JUMPI DUP1 PUSH4 0x1626BA7E EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x1A9B2337 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0x20C13B0B EQ PUSH2 0x3AF JUMPI PUSH2 0x1A1 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x25B22BC EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x2D4 JUMPI PUSH2 0x1A1 JUMP JUMPDEST CALLDATASIZE PUSH2 0x1A1 JUMPI STOP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x27D JUMPI PUSH1 0x0 PUSH2 0x1D8 PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x690 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x27B JUMPI PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x221 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x25C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x261 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x273 JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD RETURN JUMPDEST POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29F PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2B5E JUMP JUMPDEST PUSH2 0x6EF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 PUSH2 0x2EF CALLDATASIZE PUSH1 0x4 PUSH2 0x2BC2 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 PUSH2 0x365 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C31 JUMP JUMPDEST PUSH2 0x741 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x376 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x38A PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x758 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 PUSH2 0x3CA CALLDATASIZE PUSH1 0x4 PUSH2 0x2C7D JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x3EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE9 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x40A CALLDATASIZE PUSH1 0x4 PUSH2 0x2B18 JUMP JUMPDEST PUSH2 0x7C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x41B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH32 0x8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x472 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x481 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D47 JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x4A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D89 JUMP JUMPDEST PUSH2 0x943 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C6 PUSH2 0x4C1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2C31 JUMP JUMPDEST PUSH2 0xA48 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE SWAP3 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x2AB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x509 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE9 JUMP JUMPDEST PUSH2 0xC10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0x529 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE9 JUMP JUMPDEST PUSH2 0xCE8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x543 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AB SWAP2 SWAP1 PUSH2 0x2E60 JUMP JUMPDEST PUSH2 0x38A PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x2EA2 JUMP JUMPDEST PUSH2 0xD95 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xE7F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x584 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x593 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CE9 JUMP JUMPDEST PUSH2 0xEA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xEF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x5C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2F71 JUMP JUMPDEST PUSH2 0xEFF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 PUSH2 0x5E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FA6 JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x424 PUSH2 0xFCA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27D PUSH2 0x645 CALLDATASIZE PUSH1 0x4 PUSH2 0x3061 JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x656 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x319 PUSH2 0x665 CALLDATASIZE PUSH1 0x4 PUSH2 0x3083 JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 AND PUSH2 0x1047 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE DUP3 PUSH2 0x10A5 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x735 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x73E DUP2 PUSH2 0x1101 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74E DUP5 DUP5 DUP5 PUSH2 0x11B5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE DUP3 PUSH2 0x690 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1200 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x7BD JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST PUSH2 0x73E DUP2 PUSH2 0x1263 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x812 DUP3 PUSH2 0x690 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1C3812CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72C JUMP JUMPDEST PUSH2 0x73E DUP2 PUSH1 0x0 PUSH2 0x12F3 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B8 PUSH32 0xEA7157FA25E3AA17D0AE2D5280FA4E24D421C61842AA85E45194E1145AA72BF8 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x8FE JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x931 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x916 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH2 0x13B3 JUMP JUMPDEST SWAP1 POP PUSH2 0x93E DUP2 DUP5 DUP5 PUSH2 0x1438 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND ADDRESS SUB PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA57D61D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BB DUP4 PUSH2 0x15C0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9F3 DUP6 DUP9 DUP9 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9D6 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP6 DUP6 PUSH2 0x16BD JUMP JUMPDEST SWAP2 POP SWAP2 POP DUP2 PUSH2 0xA34 JUMPI DUP1 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH32 0x8F4A234F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3305 JUMP JUMPDEST PUSH2 0xA3F DUP2 DUP9 DUP9 PUSH2 0x1438 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 DUP8 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0xA64 JUMPI PUSH2 0xA64 PUSH2 0x331F JUMP JUMPDEST SWAP1 SWAP2 ADD CALLDATALOAD PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 AND SWAP2 POP DUP2 SWAP1 POP PUSH2 0xABA JUMPI PUSH2 0xA9C DUP10 PUSH2 0x13B3 JUMP JUMPDEST SWAP3 POP PUSH2 0xAA9 DUP4 DUP10 DUP10 PUSH2 0x16FB JUMP JUMPDEST SWAP3 SWAP9 POP SWAP1 SWAP7 POP SWAP5 POP SWAP2 POP PUSH2 0xC05 SWAP1 POP JUMP JUMPDEST PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP2 DUP2 AND ADD PUSH2 0xAF9 JUMPI PUSH2 0xAEC DUP10 PUSH2 0x13B3 JUMP JUMPDEST SWAP3 POP PUSH2 0xAA9 DUP4 DUP10 DUP10 PUSH2 0x174C JUMP JUMPDEST PUSH32 0xFE00000000000000000000000000000000000000000000000000000000000000 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ADD PUSH2 0xB4B JUMPI PUSH2 0xAEC DUP10 PUSH2 0x1778 JUMP JUMPDEST PUSH32 0xFD00000000000000000000000000000000000000000000000000000000000000 PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND ADD PUSH2 0xBAF JUMPI PUSH2 0xB9F DUP10 DUP10 DUP10 PUSH2 0x17E5 JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP SWAP6 POP POP PUSH2 0xC05 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x6085CD8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFF00000000000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72C JUMP JUMPDEST SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xC51 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST DUP1 PUSH2 0xC88 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB24B5B3A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCB1 PUSH32 0x8C8764B3A50FEE69C9BEE6E956047501F434FB0E2349C75844A401A7F2A020D2 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x1F63199319EFF813052575C41087F618ABA07B006664FED6C01F7EE9C5716835 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0x1047 JUMP JUMPDEST PUSH1 0x60 PUSH2 0xD71 PUSH2 0xD6C PUSH2 0xD24 PUSH2 0xFCA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x170122000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x1962 JUMP JUMPDEST PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD81 SWAP2 SWAP1 PUSH2 0x334E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0xDD8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0xE31 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xD25719100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP2 SWAP1 PUSH2 0x2E60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B8 PUSH32 0x8C8764B3A50FEE69C9BEE6E956047501F434FB0E2349C75844A401A7F2A020D2 SLOAD SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xEEA JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST PUSH2 0x73E DUP2 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B8 PUSH1 0x0 PUSH2 0xCE8 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0xF40 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4B DUP4 PUSH2 0x690 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x5B4D6D6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72C JUMP JUMPDEST PUSH2 0xFC6 DUP3 DUP3 PUSH2 0x12F3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B8 PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 SLOAD SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x1035 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST PUSH2 0x103E DUP3 PUSH2 0x1263 JUMP JUMPDEST PUSH2 0xFC6 DUP2 PUSH2 0x1BA4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1066 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x2E74B92A00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x10F8 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH2 0x1BFD JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x1167 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC76093700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x72C JUMP JUMPDEST PUSH2 0x116F DUP2 ADDRESS SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0x310BA5F1D2ED074B51E2ECCD052A47AE9AB7C6B800D1FCA3DB3999D6A592CA03 SWAP1 PUSH1 0x20 ADD PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x11C3 DUP6 DUP6 DUP6 PUSH2 0x1C59 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO PUSH2 0x11F5 JUMPI POP PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x751 JUMP JUMPDEST POP PUSH1 0x0 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1225 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1216 SWAP3 SWAP2 SWAP1 PUSH2 0x2ADA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 DUP6 DUP6 PUSH2 0x1C59 JUMP JUMPDEST POP SWAP1 POP DUP1 ISZERO PUSH2 0x1257 JUMPI POP PUSH32 0x20C13B0B00000000000000000000000000000000000000000000000000000000 SWAP1 POP PUSH2 0x774 JUMP JUMPDEST POP PUSH1 0x0 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x129A JUMPI PUSH1 0x40 MLOAD PUSH32 0x4294D12700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12C3 PUSH32 0xEA7157FA25E3AA17D0AE2D5280FA4E24D421C61842AA85E45194E1145AA72BF8 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x307ED6BD941EE9FC80F369C94AF5FA11E25BAB5102A6140191756C5474A30BFA SWAP1 PUSH1 0x20 ADD PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND DUP3 DUP5 ADD DUP2 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP6 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP4 ADD KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP2 SWAP1 SSTORE SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xD7FC113EAF016DB4681A1BA86D083CE3E0961F321062A75AC2B0AEB33DEEED1 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE CHAINID PUSH1 0x22 DUP3 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 ADDRESS PUSH1 0x60 SHL AND PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x56 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x76 ADD JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15B9 JUMPI CALLDATASIZE DUP5 DUP5 DUP4 DUP2 DUP2 LT PUSH2 0x1457 JUMPI PUSH2 0x1457 PUSH2 0x331F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x1469 SWAP2 SWAP1 PUSH2 0x3393 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 DUP2 ADD CALLDATALOAD DUP1 GAS LT ISZERO PUSH2 0x14BE JUMPI DUP3 DUP2 GAS PUSH1 0x40 MLOAD PUSH32 0x2BB3E3BA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14CD PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x33D1 JUMP JUMPDEST ISZERO PUSH2 0x150C JUMPI PUSH2 0x1505 PUSH2 0x14E5 PUSH1 0x80 DUP6 ADD PUSH1 0x60 DUP7 ADD PUSH2 0x2B5E JUMP JUMPDEST DUP4 ISZERO PUSH2 0x14F1 JUMPI DUP4 PUSH2 0x14F3 JUMP JUMPDEST GAS JUMPDEST PUSH2 0x1500 PUSH1 0xA0 DUP8 ADD DUP8 PUSH2 0x33EC JUMP JUMPDEST PUSH2 0x1C8A JUMP JUMPDEST SWAP1 POP PUSH2 0x1547 JUMP JUMPDEST PUSH2 0x1544 PUSH2 0x151F PUSH1 0x80 DUP6 ADD PUSH1 0x60 DUP7 ADD PUSH2 0x2B5E JUMP JUMPDEST PUSH1 0x80 DUP6 ADD CALLDATALOAD DUP5 ISZERO PUSH2 0x1530 JUMPI DUP5 PUSH2 0x1532 JUMP JUMPDEST GAS JUMPDEST PUSH2 0x153F PUSH1 0xA0 DUP9 ADD DUP9 PUSH2 0x33EC JUMP JUMPDEST PUSH2 0x1CA5 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP1 ISZERO PUSH2 0x158C JUMPI DUP8 PUSH32 0x5C4EEB02DABF8976016AB414D617F9A162936DCACE3CDEF8C69EF6E262AD5AE7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x157F SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x15AE PUSH2 0x159F PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x33D1 JUMP JUMPDEST DUP10 DUP7 PUSH2 0x15A9 PUSH2 0x1CC2 JUMP JUMPDEST PUSH2 0x1CE1 JUMP JUMPDEST POP POP POP PUSH1 0x1 ADD PUSH2 0x143C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SWAP1 SHR PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 PUSH2 0x15DF DUP4 PUSH2 0xCE8 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x162B JUMPI PUSH1 0x40 MLOAD PUSH32 0x9B6514F400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x72C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB DUP5 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x1 DUP4 ADD SWAP1 DUP2 SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x1F180C27086C7A39EA2A7B25239D1AB92348F07CA7BB59D1438FCF527568F881 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x16D0 DUP9 DUP9 DUP9 PUSH2 0xA48 JUMP JUMPDEST POP SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x16EE JUMPI POP PUSH2 0x16EE DUP2 PUSH2 0x1D2F JUMP JUMPDEST SWAP5 POP POP POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x1716 DUP8 PUSH2 0x1711 DUP8 PUSH1 0x6 DUP2 DUP12 PUSH2 0x3451 JUMP JUMPDEST PUSH2 0x1D3A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE DUP8 CALLDATALOAD PUSH1 0xF0 SHR PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 MSTORE PUSH1 0x2 SWAP1 SWAP11 ADD CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 SWAP1 MSTORE SWAP9 SWAP1 SWAP2 KECCAK256 SWAP1 SWAP10 SWAP2 SWAP9 POP SWAP7 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x1767 DUP8 PUSH2 0x1762 DUP8 PUSH1 0x1 DUP2 DUP12 PUSH2 0x3451 JUMP JUMPDEST PUSH2 0x16FB JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1901000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x22 DUP3 ADD DUP2 SWAP1 MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 ADDRESS PUSH1 0x60 SHL AND PUSH1 0x42 DUP4 ADD MSTORE PUSH1 0x56 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x76 ADD PUSH2 0x141B JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 DUP1 PUSH1 0x4 PUSH1 0x1 DUP9 ADD CALLDATALOAD PUSH1 0xE8 SHR DUP3 PUSH2 0x1800 DUP4 DUP4 PUSH2 0x34AA JUMP JUMPDEST SWAP1 POP PUSH2 0x1812 DUP12 PUSH2 0x4C1 DUP4 DUP7 DUP14 DUP16 PUSH2 0x3451 JUMP JUMPDEST SWAP4 SWAP12 POP SWAP2 SWAP10 POP SWAP8 POP SWAP6 POP SWAP4 POP DUP8 DUP8 LT ISZERO PUSH2 0x186A JUMPI PUSH2 0x1832 DUP2 DUP5 DUP12 DUP14 PUSH2 0x3451 JUMP JUMPDEST DUP10 DUP10 PUSH1 0x40 MLOAD PUSH32 0xB006ABA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST DUP1 SWAP3 POP JUMPDEST DUP9 DUP4 LT ISZERO PUSH2 0x1954 JUMPI PUSH1 0x3 DUP4 ADD SWAP3 DUP11 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP2 POP PUSH2 0x188D DUP4 DUP4 PUSH2 0x34AA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18AF PUSH2 0x189D DUP9 PUSH2 0x21D0 JUMP JUMPDEST DUP13 DUP13 DUP8 SWAP1 DUP7 SWAP3 PUSH2 0x4C1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3451 JUMP JUMPDEST SWAP4 SWAP13 POP SWAP2 SWAP11 POP SWAP9 POP SWAP1 SWAP2 POP POP DUP9 DUP9 LT ISZERO PUSH2 0x1907 JUMPI PUSH2 0x18CF DUP3 DUP6 DUP13 DUP15 PUSH2 0x3451 JUMP JUMPDEST DUP11 DUP11 PUSH1 0x40 MLOAD PUSH32 0xB006ABA000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x34BD JUMP JUMPDEST DUP5 DUP2 LT PUSH2 0x194A JUMPI PUSH1 0x40 MLOAD PUSH32 0x37DAF62B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x72C JUMP JUMPDEST SWAP4 POP SWAP2 POP DUP2 PUSH2 0x186E JUMP JUMPDEST POP POP POP SWAP4 SWAP8 SWAP3 SWAP7 POP SWAP4 POP SWAP4 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x3 DUP2 SWAP1 SHL PUSH1 0x0 PUSH1 0x5 PUSH1 0x4 DUP4 ADD DIV PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x198D JUMPI PUSH2 0x198D PUSH2 0x2E73 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x19B7 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x1ACB JUMPI DUP9 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x19DB JUMPI PUSH2 0x19DB PUSH2 0x331F JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x8 SWAP5 DUP6 ADD SWAP5 SWAP4 SWAP1 SWAP4 SHL PUSH1 0xF8 SWAP4 SWAP1 SWAP4 SHR SWAP3 SWAP1 SWAP3 OR SWAP2 JUMPDEST PUSH1 0x5 DUP5 LT PUSH2 0x1AC3 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 DUP4 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB SWAP1 SWAP6 ADD SWAP5 PUSH1 0x1F DUP6 DUP8 SHR AND SWAP1 DUP2 LT PUSH2 0x1A6C JUMPI PUSH2 0x1A6C PUSH2 0x331F JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1A89 JUMPI PUSH2 0x1A89 PUSH2 0x331F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x19F6 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x19C1 JUMP JUMPDEST POP DUP3 ISZERO PUSH2 0x1B6F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 MSTORE POP DUP4 PUSH1 0x5 SUB DUP4 SWAP1 SHL PUSH1 0x1F AND DUP2 MLOAD DUP2 LT PUSH2 0x1B22 JUMPI PUSH2 0x1B22 PUSH2 0x331F JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1B3F JUMPI PUSH2 0x1B3F PUSH2 0x331F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B8E SWAP2 SWAP1 PUSH2 0x34E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BCD PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x20D3EF1B5738A9F6D7BEAE515432206E7A8E2740CA6DCF46A952190AD01BCB51 SWAP1 PUSH1 0x20 ADD PUSH2 0xCDD JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FFBD45100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x1C50 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1C6C DUP9 DUP9 DUP9 PUSH2 0xA48 JUMP JUMPDEST POP SWAP7 POP SWAP2 SWAP5 POP SWAP3 POP SWAP1 POP DUP3 DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x16EE JUMPI POP PUSH2 0x16EE DUP2 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 DUP10 DUP10 DELEGATECALL SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP3 DUP5 DUP3 CALLDATACOPY PUSH1 0x0 DUP1 DUP5 DUP4 DUP10 DUP12 DUP11 CALL SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 RETURNDATASIZE PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 DUP4 MSTORE DUP2 PUSH1 0x0 DUP3 RETURNDATACOPY POP POP SWAP1 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1CEF JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP3 PUSH32 0xAB46C69F7F32E1BF09B0725853DA82A211E5402A0600296AB499A2FB5EA3B419 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D21 SWAP3 SWAP2 SWAP1 PUSH2 0x3529 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6DE DUP3 PUSH2 0x237C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x21C7 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 DUP6 ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 ADD PUSH2 0x1DE1 JUMPI PUSH1 0x15 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0x58 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH21 0xFF0000000000000000000000000000000000000000 AND DUP2 OR DUP6 PUSH2 0x1DC7 JUMPI DUP1 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP6 POP POP POP POP POP PUSH2 0x1D40 JUMP JUMPDEST DUP1 PUSH2 0x1E77 JUMPI PUSH1 0x1 DUP3 ADD SWAP2 DUP7 DUP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP1 PUSH1 0x43 ADD PUSH1 0x0 PUSH2 0x1E0D DUP11 PUSH2 0x1E08 DUP5 DUP9 DUP13 DUP15 PUSH2 0x3451 JUMP JUMPDEST PUSH2 0x23AF JUMP JUMPDEST PUSH1 0xFF DUP5 AND SWAP8 SWAP1 SWAP8 ADD SWAP7 SWAP2 SWAP5 POP DUP5 SWAP2 SWAP1 POP PUSH1 0xA0 DUP4 SWAP1 SHL PUSH21 0xFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND OR DUP7 PUSH2 0x1E5C JUMPI DUP1 PUSH2 0x1E6B JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP7 POP POP POP POP POP POP PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x2 DUP2 SUB PUSH2 0x1F9F JUMPI PUSH1 0x0 DUP1 DUP8 DUP5 ADD CALLDATALOAD PUSH1 0xF8 DUP2 SWAP1 SHR SWAP1 PUSH1 0x58 SHR PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x15 DUP7 ADD SWAP6 POP SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 DUP9 DUP6 ADD CALLDATALOAD PUSH1 0xE8 SHR PUSH1 0x3 DUP7 ADD DUP2 PUSH3 0xFFFFFF AND SWAP2 POP DUP1 SWAP7 POP DUP2 SWAP3 POP POP POP PUSH1 0x0 DUP2 DUP7 ADD SWAP1 POP PUSH2 0x1EF0 DUP12 DUP5 DUP13 DUP13 DUP11 SWAP1 DUP7 SWAP3 PUSH2 0x1EEB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3451 JUMP JUMPDEST PUSH2 0x2672 JUMP JUMPDEST PUSH2 0x1F38 JUMPI DUP11 DUP4 PUSH2 0x1F02 DUP4 DUP10 DUP14 DUP16 PUSH2 0x3451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x9A94623200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3542 JUMP JUMPDEST PUSH1 0xFF DUP5 AND SWAP8 SWAP1 SWAP8 ADD SWAP7 SWAP5 POP DUP5 PUSH1 0xA0 DUP5 SWAP1 SHL PUSH21 0xFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND OR DUP8 PUSH2 0x1F83 JUMPI DUP1 PUSH2 0x1F92 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP8 POP POP POP POP POP POP POP PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x1FD2 JUMPI PUSH1 0x20 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD DUP4 PUSH2 0x1FBA JUMPI DUP1 PUSH2 0x1FC9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP4 POP POP POP PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x4 DUP2 SUB PUSH2 0x201E JUMPI PUSH1 0x3 DUP1 DUP4 ADD SWAP3 DUP8 DUP2 ADD CALLDATALOAD PUSH1 0xE8 SHR SWAP2 SWAP1 DUP3 ADD ADD PUSH1 0x0 DUP1 PUSH2 0x1FFF DUP12 PUSH2 0x1711 DUP6 DUP10 DUP14 DUP16 PUSH2 0x3451 JUMP JUMPDEST PUSH1 0x0 SWAP9 DUP10 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP8 KECCAK256 SWAP7 SWAP1 SWAP8 ADD SWAP7 POP SWAP1 SWAP4 POP PUSH2 0x1D40 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 SUB PUSH2 0x2126 JUMPI PUSH1 0x0 DUP3 DUP8 ADD CALLDATALOAD PUSH1 0xF8 SHR PUSH1 0x1 DUP5 ADD SWAP4 POP PUSH1 0xFF AND SWAP1 POP PUSH1 0x0 DUP8 DUP5 ADD CALLDATALOAD PUSH1 0xF0 SHR PUSH1 0x2 DUP6 ADD SWAP5 POP PUSH2 0xFFFF AND SWAP1 POP PUSH1 0x0 DUP9 DUP6 ADD CALLDATALOAD PUSH1 0xE8 SHR PUSH1 0x3 DUP7 ADD DUP2 PUSH3 0xFFFFFF AND SWAP2 POP DUP1 SWAP7 POP DUP2 SWAP3 POP POP POP PUSH1 0x0 DUP2 DUP7 ADD SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0x208C DUP14 DUP14 DUP14 DUP12 SWAP1 DUP8 SWAP3 PUSH2 0x1711 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3451 JUMP JUMPDEST SWAP4 SWAP9 POP DUP9 SWAP4 SWAP1 SWAP3 POP SWAP1 POP DUP5 DUP3 LT PUSH2 0x20A2 JUMPI SWAP9 DUP6 ADD SWAP9 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0x53657175656E6365206E657374656420636F6E6669673A0A0000000000000000 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x38 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x58 DUP3 ADD DUP9 SWAP1 MSTORE PUSH1 0x78 DUP1 DUP4 ADD DUP11 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x98 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 DUP10 PUSH2 0x2108 JUMPI DUP1 PUSH2 0x2117 JUMP JUMPDEST PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP10 POP POP POP POP POP POP POP POP POP PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x5 DUP2 SUB PUSH2 0x2192 JUMPI PUSH1 0x20 DUP3 ADD SWAP2 DUP7 ADD CALLDATALOAD DUP8 DUP2 SUB PUSH2 0x2161 JUMPI PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 POP JUMPDEST PUSH1 0x0 PUSH2 0x216C DUP3 PUSH2 0x2859 JUMP JUMPDEST SWAP1 POP DUP5 PUSH2 0x2179 JUMPI DUP1 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 JUMPDEST SWAP5 POP POP POP POP PUSH2 0x1D40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xB2505F7C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x72C JUMP JUMPDEST POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x8713A7C4465F6FBEE2B6E9D6646D1D9F83FEC929EDFC4BAF661F3C865BDD04D1 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP3 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x6DE JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xEC6ABA5000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2297 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x22E3 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x232F JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xC0EE0B8A00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x233C JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH2 0x2894 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6DE JUMPI POP PUSH32 0x8C8764B3A50FEE69C9BEE6E956047501F434FB0E2349C75844A401A7F2A020D2 SLOAD JUMPDEST DUP3 EQ SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6DE JUMPI POP PUSH32 0xEA7157FA25E3AA17D0AE2D5280FA4E24D421C61842AA85E45194E1145AA72BF8 SLOAD PUSH2 0x2374 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x42 DUP3 EQ PUSH2 0x23EF JUMPI DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x2EE17A3D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x3582 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2408 PUSH2 0x23FF PUSH1 0x1 DUP6 PUSH2 0x3596 JUMP JUMPDEST DUP6 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP1 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH1 0xF8 SHR DUP5 CALLDATALOAD PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP2 GT ISZERO PUSH2 0x247C JUMPI DUP7 DUP7 DUP3 PUSH1 0x40 MLOAD PUSH32 0xAD4AAC7600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35A9 JUMP JUMPDEST DUP3 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x2494 JUMPI POP DUP3 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x24D1 JUMPI DUP7 DUP7 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE578897E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35CD JUMP JUMPDEST PUSH1 0x1 DUP5 SUB PUSH2 0x253E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 DUP4 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP6 AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x252D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD SWAP5 POP PUSH2 0x2616 JUMP JUMPDEST PUSH1 0x2 DUP5 SUB PUSH2 0x25DB JUMPI PUSH1 0x40 MLOAD PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x3C DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0x5C ADD PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP5 MSTORE SWAP1 DUP4 ADD DUP1 DUP4 MSTORE MSTORE PUSH1 0xFF DUP7 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 ADD PUSH2 0x250B JUMP JUMPDEST DUP7 DUP7 DUP6 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH32 0x9DFBA85200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35F4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH2 0x2667 JUMPI DUP7 DUP7 PUSH1 0x40 MLOAD PUSH32 0x6C1719D200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP3 SWAP2 SWAP1 PUSH2 0x3582 JUMP JUMPDEST POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SUB PUSH2 0x26AD JUMPI PUSH1 0x40 MLOAD PUSH32 0xAC241E1100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 DUP4 PUSH2 0x26BC PUSH1 0x1 DUP3 PUSH2 0x3596 JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x26CB JUMPI PUSH2 0x26CB PUSH2 0x331F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0xF8 SHR SWAP2 POP POP PUSH1 0x1 DUP2 EQ DUP1 PUSH2 0x26E5 JUMPI POP PUSH1 0x2 DUP2 EQ JUMPDEST ISZERO PUSH2 0x272A JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x270C DUP8 DUP7 DUP7 PUSH2 0x23AF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP2 POP PUSH2 0x2850 JUMP JUMPDEST PUSH1 0x3 DUP2 SUB PUSH2 0x2815 JUMPI PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND PUSH4 0x1626BA7E DUP8 DUP7 PUSH1 0x0 DUP8 PUSH2 0x275E PUSH1 0x1 DUP3 PUSH2 0x3596 JUMP JUMPDEST SWAP3 PUSH2 0x276B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2789 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3305 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27CA SWAP2 SWAP1 PUSH2 0x3620 JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1626BA7E00000000000000000000000000000000000000000000000000000000 EQ SWAP2 POP PUSH2 0x2850 JUMP JUMPDEST DUP4 DUP4 DUP3 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x9DFBA85200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x35F4 JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x53657175656E636520737461746963206469676573743A0A0000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x38 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x58 ADD PUSH2 0x141B JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFDA4DD4400000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x28E7 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH1 0x0 PUSH32 0xE4A77BBC00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x293E JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH1 0x0 PUSH32 0xDA44F87800000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x2995 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH1 0x0 PUSH32 0xAE9FA28000000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0x29EC JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6DE DUP3 PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xAC6A444E00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x2A83 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x36E7817500000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x2A90 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x6DE JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x73E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x751 DUP2 PUSH2 0x2AEA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2B70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP3 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2B8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2BDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2BE3 DUP7 PUSH2 0x2B35 JUMP JUMPDEST SWAP5 POP PUSH2 0x2BF1 PUSH1 0x20 DUP8 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C20 DUP9 DUP3 DUP10 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2C46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C70 DUP7 DUP3 DUP8 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP4 SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2C93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2CAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2CB7 DUP9 DUP4 DUP10 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2CD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CDD DUP8 DUP3 DUP9 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP6 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CFB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x2D14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D2C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D5A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2D7D DUP6 DUP3 DUP7 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP1 SWAP7 SWAP1 SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2DA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2DB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2DC5 DUP10 DUP4 DUP11 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2DE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C20 DUP9 DUP3 DUP10 ADD PUSH2 0x2B79 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E0D JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2DF5 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x2E2E DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2DF2 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x751 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2E16 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2ECC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2EE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2EF2 JUMPI PUSH2 0x2EF2 PUSH2 0x2E73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x2F38 JUMPI PUSH2 0x2F38 PUSH2 0x2E73 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x2F51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x2F8F DUP2 PUSH2 0x2AEA JUMP JUMPDEST SWAP2 POP PUSH2 0x2F9D PUSH1 0x20 DUP5 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x2FC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2FCB DUP10 PUSH2 0x2B35 JUMP JUMPDEST SWAP8 POP PUSH2 0x2FD9 PUSH1 0x20 DUP11 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2FF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3002 DUP13 DUP4 DUP14 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x301B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3027 DUP13 DUP4 DUP14 ADD PUSH2 0x2D02 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x3040 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x304D DUP12 DUP3 DUP13 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3074 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x309C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30A5 DUP8 PUSH2 0x2B35 JUMP JUMPDEST SWAP6 POP PUSH2 0x30B3 PUSH1 0x20 DUP9 ADD PUSH2 0x2B35 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x30DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30E9 DUP10 DUP3 DUP11 ADD PUSH2 0x2B79 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2B59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP1 DUP6 ADD DUP1 DUP2 SWAP7 POP DUP6 PUSH1 0x5 SHL DUP2 ADD SWAP2 POP DUP5 PUSH1 0x0 JUMPDEST DUP8 DUP2 LT ISZERO PUSH2 0x3296 JUMPI DUP3 DUP5 SUB DUP10 MSTORE DUP2 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41 DUP9 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x31AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 ADD PUSH1 0xC0 PUSH2 0x31BA DUP3 PUSH2 0x30FB JUMP JUMPDEST ISZERO ISZERO DUP7 MSTORE PUSH2 0x31C9 DUP8 DUP4 ADD PUSH2 0x30FB JUMP JUMPDEST ISZERO ISZERO DUP7 DUP9 ADD MSTORE PUSH1 0x40 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP8 ADD MSTORE PUSH1 0x60 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x31FB DUP3 DUP6 ADD PUSH2 0x2B35 JUMP JUMPDEST AND SWAP1 DUP8 ADD MSTORE PUSH1 0x80 DUP3 DUP2 ADD CALLDATALOAD SWAP1 DUP8 ADD MSTORE PUSH1 0xA0 DUP1 DUP4 ADD CALLDATALOAD CALLDATASIZE DUP5 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 ADD DUP2 SLT PUSH2 0x3241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 SWAP3 ADD DUP8 DUP2 ADD SWAP3 SWAP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x325F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATASIZE SUB DUP5 SGT ISZERO PUSH2 0x326E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 DUP10 ADD MSTORE PUSH2 0x3280 DUP4 DUP10 ADD DUP3 DUP7 PUSH2 0x310B JUMP JUMPDEST SWAP13 DUP10 ADD SWAP13 SWAP8 POP POP POP SWAP3 DUP7 ADD SWAP3 POP POP PUSH1 0x1 ADD PUSH2 0x316E JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x5 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x73656C663A000000000000000000000000000000000000000000000000000000 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x74E PUSH1 0x80 DUP4 ADD DUP5 DUP7 PUSH2 0x3154 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x771 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x3154 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x771 PUSH1 0x40 DUP4 ADD DUP5 DUP7 PUSH2 0x310B JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x697066733A2F2F00000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x3386 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2DF2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF41 DUP4 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x33C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x33E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP3 PUSH2 0x30FB JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE1 DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x3421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x343C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x2BBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP6 DUP6 GT ISZERO PUSH2 0x3461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP7 GT ISZERO PUSH2 0x346E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP3 ADD SWAP4 SWAP2 SWAP1 SWAP3 SUB SWAP2 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x6DE JUMPI PUSH2 0x6DE PUSH2 0x347B JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x34D1 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x310B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6200000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x351C DUP2 PUSH1 0x1 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x2DF2 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x74E PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2E16 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x3578 PUSH1 0x60 DUP4 ADD DUP5 DUP7 PUSH2 0x310B JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x74E PUSH1 0x20 DUP4 ADD DUP5 DUP7 PUSH2 0x310B JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x6DE JUMPI PUSH2 0x6DE PUSH2 0x347B JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x35BD PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x310B JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x35E1 PUSH1 0x40 DUP4 ADD DUP6 DUP8 PUSH2 0x310B JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x3608 PUSH1 0x60 DUP4 ADD DUP7 DUP9 PUSH2 0x310B JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x40 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3632 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x751 DUP2 PUSH2 0x2AEA JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 LOG1 CALLCODE SWAP11 DUP2 0xEF DIV CREATE 0xD1 0xC4 MSTORE 0xDA RETURNDATASIZE 0xB4 DUP15 SAR PREVRANDAO 0x23 0xC6 BLOCKHASH DUP10 CALLER EXTCODESIZE 0xD5 0xBF SWAP12 PREVRANDAO 0xB4 0xCB 0x4B XOR 0xCF PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "613:1531:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3935:1:14;3916:8;:20;3912:373;;3946:14;3963:18;3973:7;;;;3963:9;:18::i;:::-;3946:35;-1:-1:-1;3993:20:14;;;;3989:290;;4026:12;4040:19;4063:6;:19;;4083:8;;4063:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4025:67;;;;4133:7;4123:86;;4189:6;4183:13;4176:4;4168:6;4164:17;4157:40;4123:86;4253:6;4247:13;4240:4;4232:6;4228:17;4221:40;3989:290;3938:347;3912:373;613:1531:4;1864:278;;;;;;;;;;-1:-1:-1;1864:278:4;;;;;:::i;:::-;;:::i;:::-;;;887:14:38;;880:22;862:41;;850:2;835:18;1864:278:4;;;;;;;;615:139:20;;;;;;;;;;-1:-1:-1;615:139:20;;;;;:::i;:::-;;:::i;3646:167:14:-;;;;;;;;;;-1:-1:-1;3646:167:14;;;;;:::i;:::-;3771:37;3646:167;;;;;;;;;;;2463:66:38;2451:79;;;2433:98;;2421:2;2406:18;3646:167:14;2289:248:38;1203:236:4;;;;;;;;;;-1:-1:-1;1203:236:4;;;;;:::i;:::-;;:::i;861:125:14:-;;;;;;;;;;-1:-1:-1;861:125:14;;;;;:::i;:::-;;:::i;:::-;;;3200:42:38;3188:55;;;3170:74;;3158:2;3143:18;861:125:14;3024:226:38;956:243:4;;;;;;;;;;-1:-1:-1;956:243:4;;;;;:::i;:::-;;:::i;6456:119:6:-;;;;;;;;;;-1:-1:-1;6456:119:6;;;;;:::i;:::-;;:::i;1740:201:14:-;;;;;;;;;;-1:-1:-1;1740:201:14;;;;;:::i;:::-;;:::i;747:129:8:-;;;;;;;;;;;;;:::i;:::-;;;4308:25:38;;;4296:2;4281:18;747:129:8;4162:177:38;811:95:28;;;;;;;;;;;;862:44;811:95;;1702:304:10;;;;;;;;;;-1:-1:-1;1702:304:10;;;;;:::i;:::-;;:::i;994:568::-;;;;;;;;;;-1:-1:-1;994:568:10;;;;;:::i;:::-;;:::i;1675:1486:6:-;;;;;;;;;;-1:-1:-1;1675:1486:6;;;;;:::i;:::-;;:::i;:::-;;;;6357:25:38;;;6413:2;6398:18;;6391:34;;;;6441:18;;;6434:34;;;;6499:2;6484:18;;6477:34;6542:3;6527:19;;6520:35;6344:3;6329:19;1675:1486:6;6098:463:38;762:295:9;;;;;;;;;;-1:-1:-1;762:295:9;;;;;:::i;:::-;;:::i;938:156:16:-;;;;;;;;;;-1:-1:-1;938:156:16;;;;;:::i;:::-;;:::i;562:332:15:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;456:276:11:-;;;;;;:::i;:::-;;:::i;1162:129:9:-;;;;;;;;;;;;;:::i;898:90:15:-;;;;;;;;;;-1:-1:-1;898:90:15;;;;;:::i;:::-;;:::i;670:87:16:-;;;;;;;;;;;;;:::i;1272:229:14:-;;;;;;;;;;-1:-1:-1;1272:229:14;;;;;:::i;:::-;;:::i;3254:234::-;;;;;;;;;;-1:-1:-1;3254:234:14;;;;;:::i;:::-;3440:43;3254:234;;;;;;;;;;;443:115:15;;;;;;;;;;;;;:::i;659:172:7:-;;;;;;;;;;-1:-1:-1;659:172:7;;;;;:::i;:::-;;:::i;2869:202:14:-;;;;;;;;;;-1:-1:-1;2869:202:14;;;;;:::i;:::-;3028:38;2869:202;;;;;;;;;2128:165;2188:7;2234:51;606:66;2234:51;;;:28;:51::i;:::-;2226:60;2128:165;-1:-1:-1;;2128:165:14:o;1864:278:4:-;2081:4;2100:37;2124:12;2100:23;:37::i;615:139:20:-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;11689:34:38;255:4:18;11739:18:38;;;11732:43;11601:18;;222:39:18;;;;;;;;174:94;711:38:20::1;733:15;711:21;:38::i;:::-;615:139:::0;:::o;1203:236:4:-;1371:6;1392:42;1415:5;1422:11;;1392:22;:42::i;:::-;1385:49;;1203:236;;;;;;:::o;861:125:14:-;938:7;960:21;970:10;960:9;:21::i;956:243:4:-;1131:6;1152:42;1175:5;;1182:11;;1152:22;:42::i;:::-;1145:49;;956:243;;;;;;;:::o;6456:119:6:-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;11689:34:38;255:4:18;11739:18:38;;;11732:43;11601:18;;222:39:18;11454:327:38;174:94:18;6542:28:6::1;6559:10;6542:16;:28::i;1740:201:14:-:0;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;11689:34:38;255:4:18;11739:18:38;;;11732:43;11601:18;;222:39:18;11454:327:38;174:94:18;1857:1:14::1;1824:21;1834:10:::0;1824:9:::1;:21::i;:::-;:35;;::::0;1820:76:::1;;1868:28;::::0;::::1;::::0;;2463:66:38;2451:79;;1868:28:14::1;::::0;::::1;2433:98:38::0;2406:18;;1868:28:14::1;2289:248:38::0;1820:76:14::1;1902:34;1913:10;1933:1;1902:10;:34::i;747:129:8:-:0;808:7;830:41;256:66:21;290:11:19;;195:112;830:41:8;823:48;;747:129;:::o;1702:304:10:-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;11689:34:38;255:4:18;11739:18:38;;;11732:43;11601:18;;222:39:18;11454:327:38;174:94:18;1832:14:10::1;1849:91;1921:4;;1901:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1882:52;;;;;;1849:25;:91::i;:::-;1832:108;;1979:22;1988:6;1996:4;;1979:8;:22::i;:::-;1795:211;1702:304:::0;;:::o;994:568::-;344:21:17;361:4;344:21;352:4;344:21;340:67;;382:18;;;;;;;;;;;;;;340:67;1181:22:10::1;1196:6;1181:14;:22::i;:::-;1253:12;1267:14:::0;1285:133:::1;1354:6;1372:4;;1332:54;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1313:81;;;;;;1402:10;;1285:20;:133::i;:::-;1252:166;;;;1430:7;1425:72;;1471:6;1479:10;;1454:36;;;;;;;;;;;;;:::i;1425:72::-;1535:22;1544:6;1552:4;;1535:8;:22::i;:::-;1142:420;;994:568:::0;;;;;:::o;1675:1486:6:-;1801:17;1824:14;1844:17;1867;1890:18;1919:20;1942:10;;1953:1;1942:13;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;1942:13:6;;-1:-1:-1;1962:303:6;;2057:34;2083:7;2057:25;:34::i;:::-;2045:46;;2144;2168:9;2179:10;;2144:23;:46::i;:::-;2099:91;;-1:-1:-1;2099:91:6;;-1:-1:-1;2099:91:6;-1:-1:-1;2099:91:6;-1:-1:-1;2198:60:6;;-1:-1:-1;2198:60:6;1962:303;2275:29;;;;;2271:310;;2370:34;2396:7;2370:25;:34::i;:::-;2358:46;;2457:49;2484:9;2495:10;;2457:26;:49::i;2271:310::-;2591:33;;;;;2587:319;;2690:39;2721:7;2690:30;:39::i;2587:319::-;2916:29;;;;;2912:196;;3066:35;3081:7;3090:10;;3066:14;:35::i;:::-;3059:42;;;;;;;;;;;;;2912:196;3121:35;;;;;16040:66:38;16028:79;;3121:35:6;;;16010:98:38;15983:18;;3121:35:6;15866:248:38;1675:1486:6;;;;;;;;;;:::o;762:295:9:-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;11689:34:38;255:4:18;11739:18:38;;;11732:43;11601:18;;222:39:18;11454:327:38;174:94:18;878:10:9;874:62:::1;;911:25;;;;;;;;;;;;;;874:62;942:63;445:66;994:10:::0;167:18:19;;91:100;942:63:9::1;1016:36;::::0;4308:25:38;;;1016:36:9::1;::::0;4296:2:38;4281:18;1016:36:9::1;;;;;;;;762:295:::0;:::o;938:156:16:-;1002:7;1032:56;453:66;1080:6;1032:28;:56::i;562:332:15:-;603:13;690:185;724:141;822:17;:15;:17::i;:::-;761:92;;16361:66:38;761:92:15;;;16349:79:38;16444:11;;;16437:27;;;;16480:12;;761:92:15;;;;;;;;;;;;724:23;:141::i;:::-;690:22;:185::i;:::-;645:238;;;;;;;;:::i;:::-;;;;;;;;;;;;;624:265;;562:332;:::o;456:276:11:-;550:12;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;11689:34:38;255:4:18;11739:18:38;;;11732:43;11601:18;;222:39:18;11454:327:38;174:94:18;631:5:11::1;625:12;620:2;613:5;609:14;596:11;589:49;581:57:::0;-1:-1:-1;649:18:11::1;::::0;::::1;645:50;;689:5;676:19;;;;;;;;;;;:::i;645:50::-;706:21;::::0;3200:42:38;3188:55;;3170:74;;706:21:11::1;::::0;3158:2:38;3143:18;706:21:11::1;;;;;;;456:276:::0;;;:::o;1162:129:9:-;1214:7;1236:50;445:66;290:11:19;;195:112;898:90:15;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;11689:34:38;255:4:18;11739:18:38;;;11732:43;11601:18;;222:39:18;11454:327:38;174:94:18;961:22:15::1;977:5;961:15;:22::i;670:87:16:-:0;718:7;740:12;750:1;740:9;:12::i;1272:229:14:-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;11689:34:38;255:4:18;11739:18:38;;;11732:43;11601:18;;222:39:18;11454:327:38;174:94:18;1411:1:14::1;1378:21;1388:10:::0;1378:9:::1;:21::i;:::-;:35;;;1374:77;;1422:29;::::0;::::1;::::0;;2463:66:38;2451:79;;1422:29:14::1;::::0;::::1;2433:98:38::0;2406:18;;1422:29:14::1;2289:248:38::0;1374:77:14::1;1457:39;1468:10;1480:15;1457:10;:39::i;:::-;1272:229:::0;;:::o;443:115:15:-;491:7;513:40;371:66;290:11:19;;195:112;659:172:7;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;11689:34:38;255:4:18;11739:18:38;;;11732:43;11601:18;;222:39:18;11454:327:38;174:94:18;766:28:7::1;783:10;766:16;:28::i;:::-;800:26;816:9;800:15;:26::i;490:187:19:-:0;568:11;587;622:4;628:7;611:25;;;;;;;;17342::38;;;17398:2;17383:18;;17376:34;17330:2;17315:18;;17168:248;611:25:19;;;;;;;;;;;;;;601:36;;611:25;601:36;;;;661:10;;490:187;-1:-1:-1;;;;490:187:19:o;1041:279:7:-;1166:4;1182:55;;;;;1178:87;;-1:-1:-1;1254:4:7;;1041:279;-1:-1:-1;1041:279:7:o;1178:87::-;1278:37;1302:12;1278:23;:37::i;973:263:20:-;1066:26;;;537:20:32;1061:80:20;;1103:38;;;;;3200:42:38;3188:55;;1103:38:20;;;3170:74:38;3143:18;;1103:38:20;3024:226:38;1061:80:20;1147:35;1166:15;586:9:5;579:23;505:107;1147:35:20;1193:38;;3200:42:38;3188:55;;3170:74;;1193:38:20;;3158:2:38;3143:18;1193:38:20;3024:226:38;4284:336:9;4415:6;4457:12;4474:48;4503:5;4510:11;;4474:28;:48::i;:::-;4456:66;;;4532:7;4528:65;;;-1:-1:-1;4556:30:9;;-1:-1:-1;4549:37:9;;4528:65;-1:-1:-1;4613:1:9;;4284:336;-1:-1:-1;;;;4284:336:9:o;3300:352::-;3438:6;3480:12;3497:59;3536:5;;3526:16;;;;;;;:::i;:::-;;;;;;;;3544:11;;3497:28;:59::i;:::-;3479:77;;;3566:7;3562:63;;;-1:-1:-1;3590:28:9;;-1:-1:-1;3583:35:9;;3562:63;-1:-1:-1;3645:1:9;;3300:352;-1:-1:-1;;;;;3300:352:9:o;437:236:8:-;519:10;515:54;;552:17;;;;;;;;;;;;;;515:54;575;256:66:21;618:10:8;167:18:19;;91:100;575:54:8;640:28;;4308:25:38;;;640:28:8;;4296:2:38;4281:18;640:28:8;4162:177:38;2466:230:14;420:25:19;;;606:66:14;420:25:19;;;;17342::38;;;;2544:96:14;;;17383:18:38;;;17376:34;;;420:25:19;;;;;;;;;17315:18:38;;;420:25:19;;;410:36;;;;;;;2605:33:14;;;463:17:19;;;;17593:98:38;;17707:18;;;17700:83;2651:40:14;;;;;;;17566:18:38;2651:40:14;;;2466:230;;:::o;1180:224:27:-;1286:107;;18092:66:38;1286:107:27;;;18080:79:38;1332:13:27;18175:11:38;;;18168:27;18246:66;1363:4:27;18233:2:38;18229:15;18225:88;18211:12;;;18204:110;18330:12;;;18323:28;;;1247:7:27;;18367:12:38;;1286:107:27;;;;;;;;;;;;;1269:130;;;;;;1262:137;;1180:224;;;:::o;2164:1144:10:-;2316:4;2301:12;2335:963;2359:4;2355:1;:8;2335:963;;;2380:32;2415:4;;2420:1;2415:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;2380:42;-1:-1:-1;2451:20:10;;;;;2486:9;:20;2482:69;;;2528:1;2531:8;2541:9;2515:36;;;;;;;;18984:25:38;;;;19025:18;;;19018:34;;;;19068:18;;;19061:34;18957:18;;2515:36:10;18782:319:38;2482:69:10;2562:12;2588:24;;;;:11;:24;:::i;:::-;2584:415;;;2636:145;2671:18;;;;;;;;:::i;:::-;2703:13;;:36;;2731:8;2703:36;;;2719:9;2703:36;2753:16;;;;:11;:16;:::i;:::-;2636:21;:145::i;:::-;2626:155;;2584:415;;;2820:168;2847:18;;;;;;;;:::i;:::-;2879:17;;;;2910:13;;:36;;2938:8;2910:36;;;2926:9;2910:36;2960:16;;;;:11;:16;:::i;:::-;2820:13;:168::i;:::-;2810:178;;2584:415;3013:7;3009:281;;;3050:7;3039:22;3059:1;3039:22;;;;4308:25:38;;4296:2;4281:18;;4162:177;3039:22:10;;;;;;;;3009:281;;;3145:134;3171:25;;;;;;;;:::i;:::-;3210:7;3231:1;3246:21;:19;:21::i;:::-;3145:12;:134::i;:::-;-1:-1:-1;;;2365:3:10;;2335:963;;;;2254:1050;2164:1144;;;:::o;1568:506:16:-;187:2:31;658:23;;;248:16;706:31;;1681:13:16;1788:16;658:23:31;1788:9:16;:16::i;:::-;1765:39;;1830:13;1814:12;:29;1810:101;;1860:44;;;;;;;;18984:25:38;;;19025:18;;;19018:34;;;19068:18;;;19061:34;;;18957:18;;1860:44:16;18782:319:38;1810:101:16;420:25:19;;;453:66:16;420:25:19;;;;17342::38;;;;17383:18;;;17376:34;;;420:25:19;;;;;;;;;17315:18:38;;;;420:25:19;;;410:36;;;;;1970:1:16;1954:17;;463::19;;;;2021:28:16;;;17342:25:38;;;17398:2;17383:18;;17376:34;;;2021:28:16;;17315:18:38;2021:28:16;;;;;;;2057:7;;;;1568:506;:::o;3480:386:6:-;3611:12;3629:17;3657;3676:14;3692:17;3760:38;3778:7;3787:10;;3760:17;:38::i;:::-;-1:-1:-1;3715:83:6;-1:-1:-1;3715:83:6;;-1:-1:-1;3715:83:6;-1:-1:-1;3715:83:6;-1:-1:-1;3814:19:6;;;;;;:47;;;3837:24;3851:9;3837:13;:24::i;:::-;3804:57;;3651:215;;;3480:386;;;;;;:::o;8899:642:27:-;9003:17;;;;9138:41;9152:10;9164:14;:10;9175:1;9164:10;;:14;:::i;:::-;9138:13;:41::i;:::-;622:9:35;656:13;;;1585:25:33;;1626:3;1622:14;683:2:35;676:14;;;715:2;702:16;;;656:13;;9386:1:27;2034:23:33;;;2021:37;2074:3;2070:14;676::35;;;;702:16;;;;1622:14:33;;9116:63:27;;-1:-1:-1;702:16:35;2070:14:33;-1:-1:-1;8899:642:27;-1:-1:-1;;;;8899:642:27:o;648:262:29:-;752:17;;;;854:51;878:10;890:14;:10;901:1;890:10;;:14;:::i;:::-;854:23;:51::i;:::-;847:58;;;;;;;;648:262;;;;;;;:::o;404:213:30:-;502:104;;18092:66:38;502:104:30;;;18080:79:38;463:7:30;18175:11:38;;;18168:27;;;18246:66;576:4:30;18233:2:38;18229:15;18225:88;18211:12;;;18204:110;18330:12;;;18323:28;;;463:7:30;18367:12:38;;502:104:30;17794:591:38;2320:2059:28;2428:17;;;;;4105:14:34;2563:1:28;4017:25:34;;4004:39;4063:3;4059:14;2428:17:28;2768:16;4105:14:34;4059;2768:16:28;:::i;:::-;2750:34;-1:-1:-1;2883:72:28;2908:7;2923:26;2750:34;2934:6;2923:10;;:26;:::i;2883:72::-;2791:164;;-1:-1:-1;2791:164:28;;-1:-1:-1;2791:164:28;-1:-1:-1;2791:164:28;-1:-1:-1;2791:164:28;-1:-1:-1;2966:18:28;;;2962:118;;;3027:26;3045:7;3038:6;3027:10;;:26;:::i;:::-;3055:9;3066:6;3001:72;;;;;;;;;;;;;;:::i;2962:118::-;3095:7;3086:16;;3283:1092;3290:26;;;3283:1092;;;4117:1:34;4105:14;;;4017:25;;4004:39;4063:3;4059:14;;-1:-1:-1;3444:16:28;4105:14:34;4059;3444:16:28;:::i;:::-;3434:26;;3469:22;3687:105;3714:34;3738:9;3714:23;:34::i;:::-;3758:10;;3769:6;3758:26;3776:7;3758:26;;;;;;;:::i;3687:105::-;3500:292;;-1:-1:-1;3500:292:28;;-1:-1:-1;3500:292:28;-1:-1:-1;3500:292:28;;-1:-1:-1;;3833:18:28;;;3829:122;;;3896:26;3914:7;3907:6;3896:10;;:26;:::i;:::-;3924:9;3935:6;3870:72;;;;;;;;;;;;;;:::i;3829:122::-;4216:10;4198:14;:28;4194:115;;4245:55;;;;;;;;17342:25:38;;;17383:18;;;17376:34;;;17315:18;;4245:55:28;17168:248:38;4194:115:28;4330:14;-1:-1:-1;4361:7:28;-1:-1:-1;4361:7:28;3283:1092;;;2540:1839;;;2320:2059;;;;;;;;;:::o;1792:810:36:-;1902:13;;1859;;1950:1;1935:16;;;1880:19;2076:1;2071;2066:6;;2065:12;2055:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2055:23:36;;2029:49;;2087:12;2111:14;2137:15;2170:9;2165:280;2189:11;2185:1;:15;2165:280;;;2248:6;2255:1;2248:9;;;;;;;;:::i;:::-;;;;;2237:1;2268:9;;;;2227:11;;;;2248:9;;;;;2226:32;;;;;2288:149;2303:1;2295:4;:9;2288:149;;2368:11;;;;;;;;;;;;;;;;;;2318:9;;;;;2399:4;2381:14;;;2380:23;;2368:36;;;;;;:::i;:::-;;;;;;;;;2339:10;2350:7;2339:19;;;;;;;;:::i;:::-;;;;:66;;;;;;;;;;-1:-1:-1;2417:9:36;;;;;2288:149;;;2202:3;;2165:280;;;-1:-1:-1;2457:8:36;;2453:105;;2506:11;;;;;;;;;;;;;;;;;2534:4;2530:1;:8;2519:6;:20;;2543:4;2518:29;2506:42;;;;;;;;:::i;:::-;;;;;;;;;2477:10;2488:7;2477:19;;;;;;;;:::i;:::-;;;;:72;;;;;;;;;;;2453:105;-1:-1:-1;2580:10:36;;1792:810;-1:-1:-1;;;;;;1792:810:36:o;823:139::-;891:13;948:7;926:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;912:45;;823:139;;;:::o;992:141:15:-;1047:48;371:66;1089:5;167:18:19;;91:100;1047:48:15;1106:22;;4308:25:38;;;1106:22:15;;4296:2:38;4281:18;1106:22:15;4162:177:38;942:233:11;1028:4;1044:48;;;;;1040:80;;-1:-1:-1;1109:4:11;;942:233;-1:-1:-1;942:233:11:o;1040:80::-;1133:37;1157:12;1133:23;:37::i;2229:412:9:-;2351:12;2369:17;2397;2416:14;2432:26;2518:38;2536:7;2545:10;;2518:17;:38::i;:::-;-1:-1:-1;2464:92:9;-1:-1:-1;2464:92:9;;-1:-1:-1;2464:92:9;-1:-1:-1;2464:92:9;-1:-1:-1;2572:19:9;;;;;;:64;;;2595:41;2617:18;2595:21;:41::i;2248:337:35:-;2353:6;2401:4;2395:11;2445:12;2431;2426:3;2413:45;2566:1;2555;2533:12;2520:3;2507;2493:4;2471:104;2466:109;2248:337;-1:-1:-1;;;;;;2248:337:35:o;1525:353::-;1640:6;1688:4;1682:11;1732:12;1718;1713:3;1700:45;1859:1;1848;1826:12;1813:3;1799:4;1786:3;1772:4;1758:110;1753:115;1525:353;-1:-1:-1;;;;;;;1525:353:35:o;852:271::-;897:14;948:16;982:4;976:11;971:16;;1014:2;1011:1;1007:10;1048:4;1041:5;1037:16;1031:4;1024:30;1071:4;1068:1;1061:15;1108:4;1105:1;1098:5;1083:30;;;852:271;:::o;3644:286:10:-;3781:14;3777:149;;;3849:7;3843:14;3836:4;3827:7;3823:18;3816:42;3777:149;3894:7;3885:34;3903:6;3911:7;3885:34;;;;;;;:::i;:::-;;;;;;;;3644:286;;;;:::o;767:185:4:-;897:4;916:31;936:10;916:19;:31::i;3532:4708:27:-;3642:14;3662:12;3703:14;3772:4458;3779:26;;;3772:4458;;;1475:1:34;1463:14;;;1390:25;;1377:39;1432:3;1428:14;3930:20:27;;;3926:402;;2540:2:34;2528:15;;;2381:25;;2368:39;2423:3;2419:14;;;;2453:2;2449:13;2464:42;2445:62;;;1880:23:27;;:49;;4238:4;:59;;4293:4;4238:59;;;622:9:35;656:13;;;683:2;676:14;;;715:2;702:16;;4259:31:27;4231:66;;4309:8;;;;;;3926:402;4342:4;4338:679;;1475:1:34;1463:14;;;1390:25;;;1377:39;1432:3;1428:14;;4567:11:27;;4403:16;4605:72;4638:10;4650:26;4567:11;1463:14:34;4650:10:27;1390:25:34;4650:26:27;:::i;:::-;4605:32;:72::i;:::-;4771:20;;;;;;;;4698:7;;-1:-1:-1;4698:7:27;;4771:20;-1:-1:-1;1900:3:27;1880:23;;;;;1906;;;1880:49;4927:4;:59;;4982:4;4927:59;;;622:9:35;656:13;;;683:2;676:14;;;715:2;702:16;;4948:31:27;4920:66;;4998:8;;;;;;;4338:679;628:1;5031:4;:30;5027:932;;5111:16;;2381:25:34;;;2368:39;2423:3;2419:14;;;;2453:2;2449:13;2464:42;2445:62;2540:2;2528:15;;5153:64:27;-1:-1:-1;5153:64:27;;-1:-1:-1;5153:64:27;-1:-1:-1;5263:12:27;4017:25:34;;;4004:39;4063:3;4059:14;4117:1;4105:14;;5287:46:27;;;;;;;;;;;;;5387:15;5414:4;5405:6;:13;5387:31;;5435:81;5471:10;5483:4;5489:10;;5500:6;5489:26;5507:7;5489:26;;;;;;;:::i;:::-;5435:35;:81::i;:::-;5430:190;;5562:10;5574:4;5580:26;5598:7;5591:6;5580:10;;:26;:::i;:::-;5539:68;;;;;;;;;;;;;;:::i;5430:190::-;5713:20;;;;;;;;;-1:-1:-1;5713:20:27;1900:3;1880:23;;;;;1906;;;1880:49;5869:4;:59;;5924:4;5869:59;;;622:9:35;656:13;;;683:2;676:14;;;715:2;702:16;;5890:31:27;5862:66;;5940:8;;;;;;;;5027:932;671:1;5973:4;:17;5969:243;;5620:2:34;5606:17;;;5557:27;;5544:41;6122:4:27;:59;;6177:4;6122:59;;;622:9:35;656:13;;;683:2;676:14;;;715:2;702:16;;6143:31:27;6115:66;;6193:8;;;;5969:243;716:1;6226:4;:19;6222:472;;4117:1:34;4105:14;;;;4017:25;;;4004:39;4063:3;4059:14;;6416:13:27;;;;6316:12;;6501:53;6515:10;6527:26;6416:13;4105:14:34;6527:10:27;4017:25:34;6527:26:27;:::i;6501:53::-;622:9:35;656:13;;;683:2;676:14;715:2;702:16;;;6567:17:27;;;;;-1:-1:-1;6656:7:27;;-1:-1:-1;6675:8:27;;-1:-1:-1;;;6675:8:27;6222:472;809:1;6708:4;:19;6704:979;;6871:22;1390:25:34;;;1377:39;1432:3;1428:14;1475:1;1463:14;;6905:55:27;-1:-1:-1;6905:55:27;;;-1:-1:-1;6973:25:27;3034::34;;;3021:39;3080:3;3076:14;3132:1;3120:14;;7010:59:27;-1:-1:-1;7010:59:27;;;-1:-1:-1;7082:12:27;4017:25:34;;;4004:39;4063:3;4059:14;4117:1;4105:14;;7106:46:27;;;;;;;;;;;;;7164:15;7191:4;7182:6;:13;7164:31;;7208:22;7232:20;7297:53;7311:10;7323;;7334:6;7323:26;7341:7;7323:26;;;;;;;:::i;7297:53::-;7371:7;;-1:-1:-1;7371:7:27;;7264:86;;-1:-1:-1;7264:86:27;-1:-1:-1;7395:35:27;;;7391:92;;7446:24;;;;7391:92;2983:73;;;25644:66:38;2983:73:27;;;;25632:79:38;;;;25727:12;;;25720:28;;;25764:12;;;25757:28;;;25801:12;;;;25794:28;;;2983:73:27;;;;;;;;;;25838:13:38;;;;2983:73:27;;;2973:84;;;;;7592:4;:59;;7647:4;7592:59;;;622:9:35;656:13;;;683:2;676:14;;;715:2;702:16;;7613:31:27;7585:66;;7664:8;;;;;;;;;;6704:979;764:1;7697:4;:22;7693:485;;5620:2:34;5606:17;;;5557:27;;5544:41;7927:23:27;;;7923:82;;7975:17;7966:26;;7923:82;8017:12;8032:37;8059:9;8032:26;:37::i;:::-;8017:52;-1:-1:-1;8088:4:27;:59;;8143:4;8088:59;;;622:9:35;656:13;;;683:2;676:14;;;715:2;702:16;;8109:31:27;8081:66;;8159:8;;;;;7693:485;8195:26;;;;;;;;4308:25:38;;;4281:18;;8195:26:27;4162:177:38;3772:4458:27;3685:4551;3532:4708;;;;;;:::o;1296:160:28:-;862:44;1372:7;656:13:35;;;683:2;676:14;;;715:2;702:16;;1394:57:28;543:185:35;4591:421:14;4677:4;4700:46;;;4716:30;4700:46;;:106;;-1:-1:-1;4756:50:14;;;4772:34;4756:50;4700:106;:165;;;-1:-1:-1;4816:49:14;;;4832:33;4816:49;4700:165;:224;;;-1:-1:-1;4875:49:14;;;4891:33;4875:49;4700:224;4689:268;;;-1:-1:-1;4946:4:14;;4591:421;-1:-1:-1;4591:421:14:o;4689:268::-;4970:37;4994:12;4970:23;:37::i;1552:190:9:-;1626:4;1645:24;;;;;:92;;-1:-1:-1;445:66:9;290:11:19;1687:50:9;1673:10;:64;1638:99;1552:190;-1:-1:-1;;1552:190:9:o;1095::8:-;1178:4;1197:24;;;;;:83;;-1:-1:-1;256:66:21;290:11:19;1239:41:8;195:112:19;1767:2316:37;1867:14;1914:2;1893:23;;1889:70;;1948:10;;1925:34;;;;;;;;;;;;:::i;1889:70::-;1965:21;1989:43;2010:21;2030:1;2010:10;:21;:::i;:::-;1226:23:33;;1213:37;1266:3;1262:14;;1071:215;1989:43:37;1965:67;;;-1:-1:-1;2115:2:37;1226:23:33;;1213:37;1266:3;1262:14;795:37;;2202:2:37;808:23:33;;795:37;3209:66:37;3196:79;;3192:135;;;3306:10;;3318:1;3292:28;;;;;;;;;;;;;:::i;3192:135::-;3337:1;:7;;3342:2;3337:7;;:18;;;;;3348:1;:7;;3353:2;3348:7;;3337:18;3333:74;;;3386:10;;3398:1;3372:28;;;;;;;;;;;;;:::i;3333:74::-;1253:1;3447:13;:32;3443:509;;3498:25;;;;;;;;;;;;23804::38;;;23877:4;23865:17;;23845:18;;;23838:45;;;;23899:18;;;23892:34;;;23942:18;;;23935:34;;;3498:25:37;;23776:19:38;;3498:25:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3489:34;;3443:509;;;1303:1;3608:13;:34;3604:348;;3690:59;;24222:66:38;3690:59:37;;;24210:79:38;24305:12;;;24298:28;;;3661:130:37;;24342:12:38;;3690:59:37;;;;;;;;;;;;;3680:70;;3690:59;3680:70;;;;3661:130;;;;;;;;;23804:25:38;23877:4;23865:17;;23845:18;;;23838:45;23899:18;;;23892:34;;;23942:18;;;23935:34;;;23776:19;;3661:130:37;23577:398:38;3604:348:37;3913:10;;3925:13;3940:4;3888:57;;;;;;;;;;;;;;:::i;3604:348::-;3999:22;;;3995:63;;4047:10;;4030:28;;;;;;;;;;;;:::i;3995:63::-;4065:13;;;;1767:2316;;;;;:::o;4411:951::-;4535:10;4557:22;;;4553:66;;4596:16;;;;;;;;;;;;;;4553:66;4625:21;4655:10;;4666:21;4686:1;4655:10;4666:21;:::i;:::-;4655:33;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;1253:1:37;4699:32;;;:70;;;1303:1;4735:13;:34;4699:70;4695:663;;;4873:7;4837:43;;:32;4851:5;4858:10;;4837:13;:32::i;:::-;:43;;;4829:51;;4695:663;;;1359:1;4898:13;:40;4894:464;;5060:40;;;;5101:5;5108:10;5119:1;5108:10;5121:21;5141:1;5108:10;5121:21;:::i;:::-;5108:35;;;;;;;:::i;:::-;5060:84;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5030:114;;:26;:114;;-1:-1:-1;4894:464:37;;;5318:10;;5330:13;5345:5;5293:58;;;;;;;;;;;;;;:::i;4894:464::-;4547:815;4411:951;;;;;;:::o;2234:182:27:-;2353:57;;26104:66:38;2353:57:27;;;26092:79:38;26187:12;;;26180:28;;;2321:7:27;;26224:12:38;;2353:57:27;25862:380:38;1446:232:20;1532:4;1548:47;;;;;1544:79;;-1:-1:-1;1612:4:20;;1446:232;-1:-1:-1;1446:232:20:o;1544:79::-;1636:37;1660:12;4226:4:10;4242:46;;;;;4238:78;;-1:-1:-1;4305:4:10;;4140:231;-1:-1:-1;4140:231:10:o;4238:78::-;4329:37;4353:12;4916:4:9;4932:57;;;;;4928:89;;-1:-1:-1;5006:4:9;;4830:242;-1:-1:-1;4830:242:9:o;4928:89::-;5030:37;5054:12;1581:4:8;1597:55;;;;;1593:87;;-1:-1:-1;1669:4:8;;1495:240;-1:-1:-1;1495:240:8:o;1593:87::-;1693:37;1717:12;6101:4:6;6124:45;;;6140:29;6124:45;;:103;;-1:-1:-1;6179:48:6;;;6195:32;6179:48;6124:103;6113:147;;;-1:-1:-1;6249:4:6;;6015:300;-1:-1:-1;6015:300:6:o;6113:147::-;725:31:12;709:47;;;;6273:37:6;613:148:12;14:271:38;197:6;189;184:3;171:33;153:3;223:16;;248:13;;;223:16;14:271;-1:-1:-1;14:271:38:o;290:177::-;375:66;368:5;364:78;357:5;354:89;344:117;;457:1;454;447:12;472:245;530:6;583:2;571:9;562:7;558:23;554:32;551:52;;;599:1;596;589:12;551:52;638:9;625:23;657:30;681:5;657:30;:::i;914:196::-;982:20;;1042:42;1031:54;;1021:65;;1011:93;;1100:1;1097;1090:12;1011:93;914:196;;;:::o;1115:186::-;1174:6;1227:2;1215:9;1206:7;1202:23;1198:32;1195:52;;;1243:1;1240;1233:12;1195:52;1266:29;1285:9;1266:29;:::i;1306:347::-;1357:8;1367:6;1421:3;1414:4;1406:6;1402:17;1398:27;1388:55;;1439:1;1436;1429:12;1388:55;-1:-1:-1;1462:20:38;;1505:18;1494:30;;1491:50;;;1537:1;1534;1527:12;1491:50;1574:4;1566:6;1562:17;1550:29;;1626:3;1619:4;1610:6;1602;1598:19;1594:30;1591:39;1588:59;;;1643:1;1640;1633:12;1588:59;1306:347;;;;;:::o;1658:626::-;1755:6;1763;1771;1779;1787;1840:3;1828:9;1819:7;1815:23;1811:33;1808:53;;;1857:1;1854;1847:12;1808:53;1880:29;1899:9;1880:29;:::i;:::-;1870:39;;1928:38;1962:2;1951:9;1947:18;1928:38;:::i;:::-;1918:48;;2013:2;2002:9;1998:18;1985:32;1975:42;;2068:2;2057:9;2053:18;2040:32;2095:18;2087:6;2084:30;2081:50;;;2127:1;2124;2117:12;2081:50;2166:58;2216:7;2207:6;2196:9;2192:22;2166:58;:::i;:::-;1658:626;;;;-1:-1:-1;1658:626:38;;-1:-1:-1;2243:8:38;;2140:84;1658:626;-1:-1:-1;;;1658:626:38:o;2542:477::-;2621:6;2629;2637;2690:2;2678:9;2669:7;2665:23;2661:32;2658:52;;;2706:1;2703;2696:12;2658:52;2742:9;2729:23;2719:33;;2803:2;2792:9;2788:18;2775:32;2830:18;2822:6;2819:30;2816:50;;;2862:1;2859;2852:12;2816:50;2901:58;2951:7;2942:6;2931:9;2927:22;2901:58;:::i;:::-;2542:477;;2978:8;;-1:-1:-1;2875:84:38;;-1:-1:-1;;;;2542:477:38:o;3255:717::-;3345:6;3353;3361;3369;3422:2;3410:9;3401:7;3397:23;3393:32;3390:52;;;3438:1;3435;3428:12;3390:52;3478:9;3465:23;3507:18;3548:2;3540:6;3537:14;3534:34;;;3564:1;3561;3554:12;3534:34;3603:58;3653:7;3644:6;3633:9;3629:22;3603:58;:::i;:::-;3680:8;;-1:-1:-1;3577:84:38;-1:-1:-1;3768:2:38;3753:18;;3740:32;;-1:-1:-1;3784:16:38;;;3781:36;;;3813:1;3810;3803:12;3781:36;;3852:60;3904:7;3893:8;3882:9;3878:24;3852:60;:::i;:::-;3255:717;;;;-1:-1:-1;3931:8:38;-1:-1:-1;;;;3255:717:38:o;3977:180::-;4036:6;4089:2;4077:9;4068:7;4064:23;4060:32;4057:52;;;4105:1;4102;4095:12;4057:52;-1:-1:-1;4128:23:38;;3977:180;-1:-1:-1;3977:180:38:o;4344:387::-;4427:8;4437:6;4491:3;4484:4;4476:6;4472:17;4468:27;4458:55;;4509:1;4506;4499:12;4458:55;-1:-1:-1;4532:20:38;;4575:18;4564:30;;4561:50;;;4607:1;4604;4597:12;4561:50;4644:4;4636:6;4632:17;4620:29;;4704:3;4697:4;4687:6;4684:1;4680:14;4672:6;4668:27;4664:38;4661:47;4658:67;;;4721:1;4718;4711:12;4736:488;4853:6;4861;4914:2;4902:9;4893:7;4889:23;4885:32;4882:52;;;4930:1;4927;4920:12;4882:52;4970:9;4957:23;5003:18;4995:6;4992:30;4989:50;;;5035:1;5032;5025:12;4989:50;5074:90;5156:7;5147:6;5136:9;5132:22;5074:90;:::i;:::-;5183:8;;5048:116;;-1:-1:-1;4736:488:38;-1:-1:-1;;;;4736:488:38:o;5229:864::-;5375:6;5383;5391;5399;5407;5460:2;5448:9;5439:7;5435:23;5431:32;5428:52;;;5476:1;5473;5466:12;5428:52;5516:9;5503:23;5545:18;5586:2;5578:6;5575:14;5572:34;;;5602:1;5599;5592:12;5572:34;5641:90;5723:7;5714:6;5703:9;5699:22;5641:90;:::i;:::-;5750:8;;-1:-1:-1;5615:116:38;-1:-1:-1;5832:2:38;5817:18;;5804:32;;-1:-1:-1;5889:2:38;5874:18;;5861:32;;-1:-1:-1;5905:16:38;;;5902:36;;;5934:1;5931;5924:12;5902:36;;5973:60;6025:7;6014:8;6003:9;5999:24;5973:60;:::i;6933:250::-;7018:1;7028:113;7042:6;7039:1;7036:13;7028:113;;;7118:11;;;7112:18;7099:11;;;7092:39;7064:2;7057:10;7028:113;;;-1:-1:-1;;7175:1:38;7157:16;;7150:27;6933:250::o;7188:330::-;7230:3;7268:5;7262:12;7295:6;7290:3;7283:19;7311:76;7380:6;7373:4;7368:3;7364:14;7357:4;7350:5;7346:16;7311:76;:::i;:::-;7432:2;7420:15;7437:66;7416:88;7407:98;;;;7507:4;7403:109;;7188:330;-1:-1:-1;;7188:330:38:o;7523:220::-;7672:2;7661:9;7654:21;7635:4;7692:45;7733:2;7722:9;7718:18;7710:6;7692:45;:::i;7748:184::-;7800:77;7797:1;7790:88;7897:4;7894:1;7887:15;7921:4;7918:1;7911:15;7937:980;8005:6;8058:2;8046:9;8037:7;8033:23;8029:32;8026:52;;;8074:1;8071;8064:12;8026:52;8114:9;8101:23;8143:18;8184:2;8176:6;8173:14;8170:34;;;8200:1;8197;8190:12;8170:34;8238:6;8227:9;8223:22;8213:32;;8283:7;8276:4;8272:2;8268:13;8264:27;8254:55;;8305:1;8302;8295:12;8254:55;8341:2;8328:16;8363:2;8359;8356:10;8353:36;;;8369:18;;:::i;:::-;8503:2;8497:9;8565:4;8557:13;;8408:66;8553:22;;;8577:2;8549:31;8545:40;8533:53;;;8601:18;;;8621:22;;;8598:46;8595:72;;;8647:18;;:::i;:::-;8687:10;8683:2;8676:22;8722:2;8714:6;8707:18;8762:7;8757:2;8752;8748;8744:11;8740:20;8737:33;8734:53;;;8783:1;8780;8773:12;8734:53;8839:2;8834;8830;8826:11;8821:2;8813:6;8809:15;8796:46;8884:1;8862:15;;;8879:2;8858:24;8851:35;;;;-1:-1:-1;8866:6:38;7937:980;-1:-1:-1;;;;;7937:980:38:o;8922:319::-;8989:6;8997;9050:2;9038:9;9029:7;9025:23;9021:32;9018:52;;;9066:1;9063;9056:12;9018:52;9105:9;9092:23;9124:30;9148:5;9124:30;:::i;:::-;9173:5;-1:-1:-1;9197:38:38;9231:2;9216:18;;9197:38;:::i;:::-;9187:48;;8922:319;;;;;:::o;9246:1250::-;9406:6;9414;9422;9430;9438;9446;9454;9462;9515:3;9503:9;9494:7;9490:23;9486:33;9483:53;;;9532:1;9529;9522:12;9483:53;9555:29;9574:9;9555:29;:::i;:::-;9545:39;;9603:38;9637:2;9626:9;9622:18;9603:38;:::i;:::-;9593:48;;9692:2;9681:9;9677:18;9664:32;9715:18;9756:2;9748:6;9745:14;9742:34;;;9772:1;9769;9762:12;9742:34;9811:90;9893:7;9884:6;9873:9;9869:22;9811:90;:::i;:::-;9920:8;;-1:-1:-1;9785:116:38;-1:-1:-1;10008:2:38;9993:18;;9980:32;;-1:-1:-1;10024:16:38;;;10021:36;;;10053:1;10050;10043:12;10021:36;10092:92;10176:7;10165:8;10154:9;10150:24;10092:92;:::i;:::-;10203:8;;-1:-1:-1;10066:118:38;-1:-1:-1;10291:3:38;10276:19;;10263:33;;-1:-1:-1;10308:16:38;;;10305:36;;;10337:1;10334;10327:12;10305:36;;10376:60;10428:7;10417:8;10406:9;10402:24;10376:60;:::i;:::-;9246:1250;;;;-1:-1:-1;9246:1250:38;;-1:-1:-1;9246:1250:38;;;;;;10455:8;-1:-1:-1;;;9246:1250:38:o;10501:248::-;10569:6;10577;10630:2;10618:9;10609:7;10605:23;10601:32;10598:52;;;10646:1;10643;10636:12;10598:52;-1:-1:-1;;10669:23:38;;;10739:2;10724:18;;;10711:32;;-1:-1:-1;10501:248:38:o;10754:695::-;10860:6;10868;10876;10884;10892;10900;10953:3;10941:9;10932:7;10928:23;10924:33;10921:53;;;10970:1;10967;10960:12;10921:53;10993:29;11012:9;10993:29;:::i;:::-;10983:39;;11041:38;11075:2;11064:9;11060:18;11041:38;:::i;:::-;11031:48;;11126:2;11115:9;11111:18;11098:32;11088:42;;11177:2;11166:9;11162:18;11149:32;11139:42;;11232:3;11221:9;11217:19;11204:33;11260:18;11252:6;11249:30;11246:50;;;11292:1;11289;11282:12;11246:50;11331:58;11381:7;11372:6;11361:9;11357:22;11331:58;:::i;:::-;10754:695;;;;-1:-1:-1;10754:695:38;;-1:-1:-1;10754:695:38;;11408:8;;10754:695;-1:-1:-1;;;10754:695:38:o;11786:160::-;11851:20;;11907:13;;11900:21;11890:32;;11880:60;;11936:1;11933;11926:12;11951:325;12039:6;12034:3;12027:19;12091:6;12084:5;12077:4;12072:3;12068:14;12055:43;;12143:1;12136:4;12127:6;12122:3;12118:16;12114:27;12107:38;12009:3;12265:4;12195:66;12190:2;12182:6;12178:15;12174:88;12169:3;12165:98;12161:109;12154:116;;11951:325;;;;:::o;12281:2028::-;12401:6;12396:3;12389:19;12371:3;12427:4;12468:2;12463:3;12459:12;12493:11;12520;12513:18;;12570:6;12567:1;12563:14;12556:5;12552:26;12540:38;;12601:5;12624:1;12634:1649;12648:6;12645:1;12642:13;12634:1649;;;12719:5;12713:4;12709:16;12704:3;12697:29;12778:6;12765:20;12864:66;12856:5;12840:14;12836:26;12832:99;12812:18;12808:124;12798:152;;12946:1;12943;12936:12;12798:152;12978:30;;13031:4;13075:24;12978:30;13075:24;:::i;:::-;13068:32;13061:40;13055:4;13048:54;13151:33;13180:2;13171:7;13167:16;13151:33;:::i;:::-;13144:41;13137:49;13122:13;;;13115:72;13210:4;13262:16;;;13249:30;13234:13;;;13227:53;13303:4;13384:42;13346:36;13365:16;;;13346:36;:::i;:::-;13342:85;13327:13;;;13320:108;13451:4;13503:16;;;13490:30;13475:13;;;13468:53;13544:4;13602:16;;;13589:30;13676:14;13672:28;;;13702:66;13668:101;13642:128;;13632:156;;13784:1;13781;13774:12;13632:156;13816:34;;;13928:16;;;;-1:-1:-1;13879:21:38;13973:18;13960:32;;13957:52;;;14005:1;14002;13995:12;13957:52;14058:8;14042:14;14038:29;14029:7;14025:43;14022:63;;;14081:1;14078;14071:12;14022:63;14120:2;14115;14109:4;14105:13;14098:25;14144:59;14199:2;14193:4;14189:13;14179:8;14170:7;14144:59;:::i;:::-;14261:12;;;;14136:67;-1:-1:-1;;;14226:15:38;;;;-1:-1:-1;;12670:1:38;12663:9;12634:1649;;;-1:-1:-1;14299:4:38;;12281:2028;-1:-1:-1;;;;;;;12281:2028:38:o;14314:594::-;14664:2;14653:9;14646:21;14703:1;14698:2;14687:9;14683:18;14676:29;14741:7;14736:2;14725:9;14721:18;14714:35;14787:3;14780:4;14769:9;14765:20;14758:33;14627:4;14808:94;14897:3;14886:9;14882:19;14874:6;14866;14808:94;:::i;14913:439::-;15190:6;15179:9;15172:25;15233:2;15228;15217:9;15213:18;15206:30;15153:4;15253:93;15342:2;15331:9;15327:18;15319:6;15311;15253:93;:::i;15357:315::-;15542:6;15531:9;15524:25;15585:2;15580;15569:9;15565:18;15558:30;15505:4;15605:61;15662:2;15651:9;15647:18;15639:6;15631;15605:61;:::i;15677:184::-;15729:77;15726:1;15719:88;15826:4;15823:1;15816:15;15850:4;15847:1;15840:15;16503:437;16765:9;16760:3;16753:22;16735:3;16804:6;16798:13;16820:74;16887:6;16883:1;16878:3;16874:11;16867:4;16859:6;16855:17;16820:74;:::i;:::-;16914:16;;;;16932:1;16910:24;;16503:437;-1:-1:-1;;16503:437:38:o;18390:387::-;18487:4;18545:11;18532:25;18635:66;18624:8;18608:14;18604:29;18600:102;18580:18;18576:127;18566:155;;18717:1;18714;18707:12;18566:155;18738:33;;;;;18390:387;-1:-1:-1;;18390:387:38:o;19106:180::-;19162:6;19215:2;19203:9;19194:7;19190:23;19186:32;19183:52;;;19231:1;19228;19221:12;19183:52;19254:26;19270:9;19254:26;:::i;19291:580::-;19368:4;19374:6;19434:11;19421:25;19524:66;19513:8;19497:14;19493:29;19489:102;19469:18;19465:127;19455:155;;19606:1;19603;19596:12;19455:155;19633:33;;19685:20;;;-1:-1:-1;19728:18:38;19717:30;;19714:50;;;19760:1;19757;19750:12;19714:50;19793:4;19781:17;;-1:-1:-1;19824:14:38;19820:27;;;19810:38;;19807:58;;;19861:1;19858;19851:12;20129:331;20234:9;20245;20287:8;20275:10;20272:24;20269:44;;;20309:1;20306;20299:12;20269:44;20338:6;20328:8;20325:20;20322:40;;;20358:1;20355;20348:12;20322:40;-1:-1:-1;;20384:23:38;;;20429:25;;;;;-1:-1:-1;20129:331:38:o;20465:184::-;20517:77;20514:1;20507:88;20614:4;20611:1;20604:15;20638:4;20635:1;20628:15;20654:125;20719:9;;;20740:10;;;20737:36;;;20753:18;;:::i;20784:392::-;21003:2;20992:9;20985:21;20966:4;21023:61;21080:2;21069:9;21065:18;21057:6;21049;21023:61;:::i;:::-;21115:2;21100:18;;21093:34;;;;-1:-1:-1;21158:2:38;21143:18;21136:34;21015:69;20784:392;-1:-1:-1;;20784:392:38:o;21370:431::-;21632:3;21627;21620:16;21602:3;21665:6;21659:13;21681:74;21748:6;21744:1;21739:3;21735:11;21728:4;21720:6;21716:17;21681:74;:::i;:::-;21775:16;;;;21793:1;21771:24;;21370:431;-1:-1:-1;;21370:431:38:o;21806:289::-;21981:6;21970:9;21963:25;22024:2;22019;22008:9;22004:18;21997:30;21944:4;22044:45;22085:2;22074:9;22070:18;22062:6;22044:45;:::i;22100:441::-;22319:6;22308:9;22301:25;22374:42;22366:6;22362:55;22357:2;22346:9;22342:18;22335:83;22454:2;22449;22438:9;22434:18;22427:30;22282:4;22474:61;22531:2;22520:9;22516:18;22508:6;22500;22474:61;:::i;:::-;22466:69;22100:441;-1:-1:-1;;;;;;22100:441:38:o;22546:244::-;22703:2;22692:9;22685:21;22666:4;22723:61;22780:2;22769:9;22765:18;22757:6;22749;22723:61;:::i;22795:128::-;22862:9;;;22883:11;;;22880:37;;;22897:18;;:::i;22928:315::-;23113:2;23102:9;23095:21;23076:4;23133:61;23190:2;23179:9;23175:18;23167:6;23159;23133:61;:::i;:::-;23125:69;;23230:6;23225:2;23214:9;23210:18;23203:34;22928:315;;;;;;:::o;23248:324::-;23431:2;23420:9;23413:21;23394:4;23451:61;23508:2;23497:9;23493:18;23485:6;23477;23451:61;:::i;:::-;23443:69;;23560:4;23552:6;23548:17;23543:2;23532:9;23528:18;23521:45;23248:324;;;;;;:::o;24365:396::-;24572:2;24561:9;24554:21;24535:4;24592:61;24649:2;24638:9;24634:18;24626:6;24618;24592:61;:::i;:::-;24684:2;24669:18;;24662:34;;;;-1:-1:-1;24739:14:38;;24732:22;24727:2;24712:18;;;24705:50;24584:69;24365:396;-1:-1:-1;;24365:396:38:o;25092:249::-;25161:6;25214:2;25202:9;25193:7;25189:23;25185:32;25182:52;;;25230:1;25227;25220:12;25182:52;25262:9;25256:16;25281:30;25305:5;25281:30;:::i"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"}],\"name\":\"BadNonce\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"CreateFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExternalImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"HookAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"HookDoesNotExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_available\",\"type\":\"uint256\"}],\"name\":\"NotEnoughGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"CreatedContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"DefinedHook\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newExternalImageHash\",\"type\":\"bytes32\"}],\"name\":\"ExternalImageHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"IPFSRootUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"TxExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"TxFailed\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"addHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"createContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"externalImageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsRootBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"readHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"}],\"name\":\"readNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"removeHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"selfExecute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateExternalImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"updateIPFSRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_ipfsRoot\",\"type\":\"bytes32\"}],\"name\":\"updateImageHashAndIPFS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"updateImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This implementation does not include the `ModuleExtraAuth` functionality.\",\"kind\":\"dev\",\"methods\":{\"addHook(bytes4,address)\":{\"details\":\"Can't overwrite hooks that are part of the main module (those defined below)\",\"params\":{\"_implementation\":\"Hook implementation contract\",\"_signature\":\"Signature function linked to the hook\"}},\"createContract(bytes)\":{\"params\":{\"_code\":\"Creation code of the contract\"},\"returns\":{\"addr\":\"The address of the created contract\"}},\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"details\":\"Relayers must ensure that the gasLimit specified for each transaction      is acceptable to them. A user could specify large enough that it could      consume all the gas available.\",\"params\":{\"_nonce\":\"Signature nonce (may contain an encoded space)\",\"_signature\":\"Encoded signature\",\"_txs\":\"Transactions to process\"}},\"nonce()\":{\"details\":\"The default nonce space is 0x00\",\"returns\":{\"_0\":\"The next nonce\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\"}},\"readHook(bytes4)\":{\"params\":{\"_signature\":\"Signature function\"},\"returns\":{\"_0\":\"The address of the implementation hook, address(0) if none\"}},\"readNonce(uint256)\":{\"params\":{\"_space\":\"Nonce space, each space keeps an independent nonce count\"},\"returns\":{\"_0\":\"The next nonce\"}},\"removeHook(bytes4)\":{\"details\":\"Can't remove hooks that are part of the main module (those defined below)      without upgrading the wallet\",\"params\":{\"_signature\":\"Signature function linked to the hook\"}},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"params\":{\"_txs\":\"Transactions to execute\"}},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"details\":\"If using a new main module, developers must ensure that all inherited      contracts by the main module don't conflict and are accounted for to be      supported by the supportsInterface method.\",\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateExternalImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the ERC-1271 signatures\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}},\"updateImageHashAndIPFS(bytes32,bytes32)\":{\"details\":\"These two operations are often performed together, so this function      allows to save some gas by performing them in a single step.\",\"params\":{\"_imageHash\":\"The new image hash to be set.\",\"_ipfsRoot\":\"The new IPFS root to be set.\"}},\"updateImplementation(address)\":{\"details\":\"WARNING Updating the implementation can brick the wallet\",\"params\":{\"_implementation\":\"New main module implementation\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addHook(bytes4,address)\":{\"notice\":\"Adds a new hook to handle a given function selector\"},\"createContract(bytes)\":{\"notice\":\"Creates a contract forwarding eth value\"},\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"notice\":\"Allow wallet owner to execute an action\"},\"externalImageHash()\":{\"notice\":\"Returns the current external image hash of the wallet (only for `ERC-1271`)\"},\"imageHash()\":{\"notice\":\"Returns the current image hash of the wallet\"},\"nonce()\":{\"notice\":\"Returns the next nonce of the default nonce space\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Handle the receipt of multiple ERC1155 token types.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"notice\":\"Handle the receipt of a single ERC1155 token type.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of a single ERC721 token.\"},\"readHook(bytes4)\":{\"notice\":\"Reads the implementation hook of a signature\"},\"readNonce(uint256)\":{\"notice\":\"Returns the next nonce of the given nonce space\"},\"removeHook(bytes4)\":{\"notice\":\"Removes a registered hook\"},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"notice\":\"Allow wallet to execute an action   without signing the message\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateExternalImageHash(bytes32)\":{\"notice\":\"Updates the external image hash of the wallet\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"},\"updateImageHashAndIPFS(bytes32,bytes32)\":{\"notice\":\"Updates the image hash and the IPFS root in a single operation.\"},\"updateImplementation(address)\":{\"notice\":\"Updates the implementation of the base wallet\"}},\"notice\":\"Contains an alternative to `MainModuleUpgradable` that allows defining a different         imageHash for `execute` and ERC-1271 (`isValidSignature`) calls.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/MainModuleUpgradableDuo.sol\":\"MainModuleUpgradableDuo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/interfaces/receivers/IERC1155Receiver.sol\":{\"keccak256\":\"0x934ce83f4abb6e487c5092af8ff0b6ef5ca697b893fa4d24b3d63b994441bf62\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2fef087d5a188a3b96a3bf0ddae611a802dfd6b72dbf92895e9d3512c77b70ff\",\"dweb:/ipfs/QmTsvU6DDK7dJAddyVCMe81oa2bCgmcz4dibbnwGQdmKDt\"]},\"contracts/interfaces/receivers/IERC223Receiver.sol\":{\"keccak256\":\"0x27f58bb8b5a9b976b39a92c9c989a7d76476a121ca60827ff01d4c69c3839f32\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://83af2e3d4e7f42aab73a7ed8f02b9830817f6f621ac17dc9d09d3cccbf2b769f\",\"dweb:/ipfs/QmaBecBuHUtskh5hoKf76wu5wf8aW2rX7oxCtpbLid8vRV\"]},\"contracts/interfaces/receivers/IERC721Receiver.sol\":{\"keccak256\":\"0x20623593e9b812c4ff01da0d9abf3540986f3ce8c4a19137ed42d8d9ee7ec5d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da617c8301ba39ac038d62fd7ae25a8b5e1a076924ef843e55c912ac5677b9f4\",\"dweb:/ipfs/Qmf71tpo1CkuZL5pHXD4TtAxiCeHiDJ3hK5hM7WDEKUzds\"]},\"contracts/modules/MainModuleUpgradableDuo.sol\":{\"keccak256\":\"0xe07ac133a04edc47be0dfa997f74e84e8f99b7202db1ef37942c849b03ec74d5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f7855bfc8a36906b5f3b4be600354262a3a71ff028c5c1d4bc049dd200fb759e\",\"dweb:/ipfs/QmQyuki88k49QWwVehaGZbuJEJfmD1AS9Kq8usVp8FkYEi\"]},\"contracts/modules/commons/Implementation.sol\":{\"keccak256\":\"0xdebdf1fc930b1ba8248030b07fa1c2c46564962073e49818c672f8ac5b9239b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://687378a78702ab03e0a3ae3160e2ebec734235c220d9522b7dc33cb592734159\",\"dweb:/ipfs/QmTUJjNPHcLbm2KipYof3gyxkpdHS1ivTGMem1qmXnxfg8\"]},\"contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0x58c028f02e3517de6c39584bcf1cedd4e7b23f575c24b363cbad4960a74f8a0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9652fead22c9fe8510de8427e2db354ed145ff30f49f85d1c717e293e5df665\",\"dweb:/ipfs/QmSJPFQxRE5n17DNB5Bu2jwRo17yLS7igMQGt3bvKkdLAP\"]},\"contracts/modules/commons/ModuleAuthConvenience.sol\":{\"keccak256\":\"0x21e304888fa137fad3b1825e2e4763578cf074e214f88852c34df1e6fd3010b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://971a64410251bd8cbd0aa0191fcff8b6e758d9c359488927d4d8d992ed66ff8f\",\"dweb:/ipfs/QmWbtAJ5fKtGxr8AbhAi4mjNuT4sjvTipDpZ78XgKgGN29\"]},\"contracts/modules/commons/ModuleAuthUpgradable.sol\":{\"keccak256\":\"0xec99f01f7f681c95224bdc8159d44dadcdb1f43c98032806ed70e3f4709770a7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://977a7ad00e7f0f67df47c8e3de84997b7df6004a5f4ae912061a62ef1cadfe7d\",\"dweb:/ipfs/QmWe1H1KzT7YBZK3Cr6ydZboQhtsNzpYLBfs8QCgbRGg6V\"]},\"contracts/modules/commons/ModuleAuthUpgradableDuo.sol\":{\"keccak256\":\"0x2de3a9a3953951214c79ef9b5027798e67ea6f8f7a7226e67ad621d0354e9614\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ab86db84d9d05983fe8631ee5bcb49a179c706846704be81d6d3c5e9b528a2ef\",\"dweb:/ipfs/QmSBw7JsNtgc8SpBhvwGwnhkenmt7Z7p1MMWUrdMkqSGmE\"]},\"contracts/modules/commons/ModuleCalls.sol\":{\"keccak256\":\"0x80c0151dbd444f96c2f935e70a6d3cc57e307588fa21d7eace67e568dd3d35c1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39a856555a5eb900e67d351e667135f245ccebd304d692b35fc8bdc83aec1b53\",\"dweb:/ipfs/QmUdWfa7GcTGM5gk7qYbNCHtsxF4o8dXHzr6HbdFng5sQm\"]},\"contracts/modules/commons/ModuleCreator.sol\":{\"keccak256\":\"0x16b1400988f6b7bd4d32bdcb36ee2fbd644fb2c8ca571becc0c32e03602bd303\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8bd4681fb4cff10f4e98e45618fbc52ed0a4c7d4fcf614f34a587ad20cd16855\",\"dweb:/ipfs/QmbA2LYBH1x8WX8CaeiFYMU5rjyLGgNCF32r9fQbXuoqwJ\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleExtraAuth.sol\":{\"keccak256\":\"0x793e557314c05e0b88855bd38f481156994dccdd41a7eb5dc483f2529e0af2fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8424ace720f2be4c0097c94168bb813a9c6767d6a7ffeb3c83a071fc8307c022\",\"dweb:/ipfs/QmRAfrpve92zUTFMzRKxGxksu1bpD9VVpUyyLxUbgFoeXi\"]},\"contracts/modules/commons/ModuleHooks.sol\":{\"keccak256\":\"0xdb8a6a41212d49fc5d8b28ed8e6aebebffed0025ebfc6d712513d49b9c027821\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8d68ef6487f687183d0f0ca8c93c72a1444bffc530a56cc558d4c3f5a4dff852\",\"dweb:/ipfs/QmWNfkgJAAXrV3VkoenNv5PaSoZonWz4kDZR8nP24rXFsb\"]},\"contracts/modules/commons/ModuleIPFS.sol\":{\"keccak256\":\"0xecb4e3d42517d00de4520d8285a5d70babf208ecb78623dbbecf77dff672d225\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://021147a411bb34b171621d0d1d3cf050852a3a4290c6ade44cca9fba795f5b15\",\"dweb:/ipfs/QmWqDWoc3CsTh5ktsAqn6fBK18RctAVp1SfZsSGWvkACDa\"]},\"contracts/modules/commons/ModuleNonce.sol\":{\"keccak256\":\"0x3b5388842f763a5347d632a0e0e8499a54b6f0b0a6eb7f7d3d848319defa042d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b36fa5a88a4e174967f850bf2bb78c787d8016ef7b5eee3e2f883fbfe9b87a7d\",\"dweb:/ipfs/QmTDZiPiQGe1fmTKKzdwzBE1xjkh8apTotW1SQRUCFXf4q\"]},\"contracts/modules/commons/ModuleOnlyDelegatecall.sol\":{\"keccak256\":\"0x32bdb1d343eee2e32fd9d0f1d6dc0e265411d0821bd908881822f0f26f0887f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1537c4f60a609751013bdc69eb1c6e6218982d91013115bc4e28cb84f816cd91\",\"dweb:/ipfs/QmSjkSTrrB4vuxECcm5cRG7YmraF53QWRgftxS827KcQLW\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/ModuleUpdate.sol\":{\"keccak256\":\"0x610c2ab830a0e1e33c6c4d0d079360224f7f83913adfc19a4ea529821d71f400\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c0f4f0a4a87b3a9ee2305ea54a38d431f9ab2dc2cff95785c27cd763116fdd09\",\"dweb:/ipfs/QmWdFMwNKaPdNzVCk8v5Eo23NbEmc8CzGPAAz6NLRZfhZp\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/interfaces/IModuleAuthUpgradable.sol\":{\"keccak256\":\"0x8879331f77598c68e5626b7ea3fac608e8e0b7f5796764f7d107da4728d37083\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://525270ac4821bde3d3d505c763aad53bdece184d56095aae85699d5215fc26f9\",\"dweb:/ipfs/QmZsjfZy9a9J6PBC5W7hiwAxGyT2HM1VCqQCisyVzrsggy\"]},\"contracts/modules/commons/interfaces/IModuleCalls.sol\":{\"keccak256\":\"0xde065c15e38eb009c3dc8f99dfefdd1d6d244dd12a889a8b57edd90d32fb4395\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://23608955786060457f79267795a61eb89b3910b683fc136c749548369425088f\",\"dweb:/ipfs/QmXNorcQBF1Qk21y3aEJRiiHVtwm61zP4ttA1ZzmRjyHnz\"]},\"contracts/modules/commons/interfaces/IModuleCreator.sol\":{\"keccak256\":\"0xa206dd3d424b8cd1c4f1400aa344cbc974480fea02f0fb371b872558e5ff4e6d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ea14c75f43a0008c582dcbae3ba3c900e446e28039dfdbb059d326ec5cc6a2d2\",\"dweb:/ipfs/QmRfF6BmUWiFkCgzVFbLcHsUCNz5q2XkkcwXPX57ViTK4D\"]},\"contracts/modules/commons/interfaces/IModuleHooks.sol\":{\"keccak256\":\"0x12a20e1fd2840bac0efd8bd43de7bb22053d53c7dc770b9c4c4fcdfdcca35185\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b93da40ad8403203e47f995dc23762706515dc5e41bdb6a6a82747bd378294dc\",\"dweb:/ipfs/QmU1KvoVpWbDLnaK18H9NJ799qTJrFTktXc3vkTpd39X9W\"]},\"contracts/modules/commons/interfaces/IModuleUpdate.sol\":{\"keccak256\":\"0xaa8268ffcc4ba2c2436ace94fe8ad263d5c254d21ac5ef08ce890cbc38fe3d91\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://30c3766118e63207f47b417a7635879246b5ce87d7c7139fe55cb9033ded8b2c\",\"dweb:/ipfs/QmPyzSpYpNeaD5y8ZUR7dXGowKxfqFwipNt7pVScL9sECV\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0x4c48eaaae7764b38fdbb28d823547849d58129c00c66a26b08101235f16f558e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02fd853f6263c94ab03602796528e5f7b8f6a0f753630c363a31b9dae843fb81\",\"dweb:/ipfs/QmQHgatuwoPUe9ZH6a5e7w3vyzMU24CRX1vPgJ28AuksYG\"]},\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]},\"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":{\"keccak256\":\"0x912949cb9dd79c05091f7c10b87e39c1aa4f21c034a1d0e86d23e01297e35a32\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8204708994b24c5e549be50e8d365c18cdfcc23130e14129eca0ef9a37bb6abc\",\"dweb:/ipfs/QmYwkk2GEYbJuideRPpvE5UqnHBkyVwbso4KkzYxRFi6QU\"]},\"contracts/utils/LibAddress.sol\":{\"keccak256\":\"0x24b886c1b175b785bf06476bf1900c9b335fa4b40841f4b948e31abb0a402dc8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6d9dbe6caa08fb93d758dd71f6afbee35b7eb655a368a60449a2a91ee231593\",\"dweb:/ipfs/QmXzyqBMojdg4C1QvoaLxf4QDeBfkvTkUPmdk1xKUt3tqi\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x7a4e2e0f3db9a918f86009da75b8ccaf6be4aeb8962b8c95d04cf129ccdf7931\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39e86486a99d5643c0280cb12feb006a12d69fe87871d5a6e4d849d28fd559f0\",\"dweb:/ipfs/QmSVpeagGmSJRcDPgjGW8g4DSgEK6FF5zCochFbtUHwHxH\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0x690736cf270957d84d4873755780c69f88733bfb4a7bc895716a498d0056f320\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8cb44ee7280b10c87564cacac6a045b7705ea171c0939d668c591744d68496de\",\"dweb:/ipfs/QmbtCbDvkikabdqCETmgk1XeekN4BHm1sXzgXTWWHy2sz9\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/LibString.sol\":{\"keccak256\":\"0x18662322f6ce8c4aea601ec11fc7631c843f9bf59dd2526d27db0fef3b2d81b1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://77cc33818f1bbda0d42588d0dd4959a2db288cb1a934d7e710a2923da55cf21e\",\"dweb:/ipfs/QmNR1U27FdvRQGZvrx3hMJqCUsF6NYqziemsVvZEjk767t\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"addHook(bytes4,address)": {
								"notice": "Adds a new hook to handle a given function selector"
							},
							"createContract(bytes)": {
								"notice": "Creates a contract forwarding eth value"
							},
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"notice": "Allow wallet owner to execute an action"
							},
							"externalImageHash()": {
								"notice": "Returns the current external image hash of the wallet (only for `ERC-1271`)"
							},
							"imageHash()": {
								"notice": "Returns the current image hash of the wallet"
							},
							"nonce()": {
								"notice": "Returns the next nonce of the default nonce space"
							},
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"notice": "Handle the receipt of multiple ERC1155 token types."
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"notice": "Handle the receipt of a single ERC1155 token type."
							},
							"onERC721Received(address,address,uint256,bytes)": {
								"notice": "Handle the receipt of a single ERC721 token."
							},
							"readHook(bytes4)": {
								"notice": "Reads the implementation hook of a signature"
							},
							"readNonce(uint256)": {
								"notice": "Returns the next nonce of the given nonce space"
							},
							"removeHook(bytes4)": {
								"notice": "Removes a registered hook"
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"notice": "Allow wallet to execute an action   without signing the message"
							},
							"signatureRecovery(bytes32,bytes)": {
								"notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateExternalImageHash(bytes32)": {
								"notice": "Updates the external image hash of the wallet"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							},
							"updateImageHashAndIPFS(bytes32,bytes32)": {
								"notice": "Updates the image hash and the IPFS root in a single operation."
							},
							"updateImplementation(address)": {
								"notice": "Updates the implementation of the base wallet"
							}
						},
						"notice": "Contains an alternative to `MainModuleUpgradable` that allows defining a different         imageHash for `execute` and ERC-1271 (`isValidSignature`) calls.",
						"version": 1
					}
				}
			},
			"contracts/modules/commons/Implementation.sol": {
				"Implementation": {
					"abi": [],
					"devdoc": {
						"details": "Allows modules to access the implementation slot",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212203b7171d353041344d97bfa62976322ade9881839c8d8fc0a436ff620f6adfa2164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE PUSH18 0x71D353041344D97BFA62976322ADE9881839 0xC8 0xD8 0xFC EXP NUMBER PUSH16 0xF620F6ADFA2164736F6C634300081200 CALLER ",
							"sourceMap": "129:739:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212203b7171d353041344d97bfa62976322ade9881839c8d8fc0a436ff620f6adfa2164736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODESIZE PUSH18 0x71D353041344D97BFA62976322ADE9881839 0xC8 0xD8 0xFC EXP NUMBER PUSH16 0xF620F6ADFA2164736F6C634300081200 CALLER ",
							"sourceMap": "129:739:5:-:0;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Allows modules to access the implementation slot\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/Implementation.sol\":\"Implementation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/Implementation.sol\":{\"keccak256\":\"0xdebdf1fc930b1ba8248030b07fa1c2c46564962073e49818c672f8ac5b9239b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://687378a78702ab03e0a3ae3160e2ebec734235c220d9522b7dc33cb592734159\",\"dweb:/ipfs/QmTUJjNPHcLbm2KipYof3gyxkpdHS1ivTGMem1qmXnxfg8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleAuth.sol": {
				"ModuleAuth": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
								}
							},
							"signatureRecovery(bytes32,bytes)": {
								"details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
								"params": {
									"_digest": "Digest of the signed data.",
									"_signature": "A Sequence signature."
								},
								"returns": {
									"checkpoint": "A nonce that is incremented every time a new configuration is set.",
									"imageHash": "The imageHash of the configuration that signed the message.",
									"subdigest": "A modified version of the original digest, unique for each wallet/network.",
									"threshold": "The required number of signatures needed to consider the signature valid.",
									"weight": "The actual number of signatures collected in the signature."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleAuth.sol\":\"ModuleAuth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0x58c028f02e3517de6c39584bcf1cedd4e7b23f575c24b363cbad4960a74f8a0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9652fead22c9fe8510de8427e2db354ed145ff30f49f85d1c717e293e5df665\",\"dweb:/ipfs/QmSJPFQxRE5n17DNB5Bu2jwRo17yLS7igMQGt3bvKkdLAP\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0x4c48eaaae7764b38fdbb28d823547849d58129c00c66a26b08101235f16f558e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02fd853f6263c94ab03602796528e5f7b8f6a0f753630c363a31b9dae843fb81\",\"dweb:/ipfs/QmQHgatuwoPUe9ZH6a5e7w3vyzMU24CRX1vPgJ28AuksYG\"]},\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x7a4e2e0f3db9a918f86009da75b8ccaf6be4aeb8962b8c95d04cf129ccdf7931\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39e86486a99d5643c0280cb12feb006a12d69fe87871d5a6e4d849d28fd559f0\",\"dweb:/ipfs/QmSVpeagGmSJRcDPgjGW8g4DSgEK6FF5zCochFbtUHwHxH\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0x690736cf270957d84d4873755780c69f88733bfb4a7bc895716a498d0056f320\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8cb44ee7280b10c87564cacac6a045b7705ea171c0939d668c591744d68496de\",\"dweb:/ipfs/QmbtCbDvkikabdqCETmgk1XeekN4BHm1sXzgXTWWHy2sz9\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							},
							"signatureRecovery(bytes32,bytes)": {
								"notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleAuthConvenience.sol": {
				"ModuleAuthConvenience": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "IPFSRootUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ipfsRoot",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ipfsRootBytes32",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "updateIPFSRoot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "_ipfsRoot",
									"type": "bytes32"
								}
							],
							"name": "updateImageHashAndIPFS",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
								}
							},
							"signatureRecovery(bytes32,bytes)": {
								"details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
								"params": {
									"_digest": "Digest of the signed data.",
									"_signature": "A Sequence signature."
								},
								"returns": {
									"checkpoint": "A nonce that is incremented every time a new configuration is set.",
									"imageHash": "The imageHash of the configuration that signed the message.",
									"subdigest": "A modified version of the original digest, unique for each wallet/network.",
									"threshold": "The required number of signatures needed to consider the signature valid.",
									"weight": "The actual number of signatures collected in the signature."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							},
							"updateImageHashAndIPFS(bytes32,bytes32)": {
								"details": "These two operations are often performed together, so this function      allows to save some gas by performing them in a single step.",
								"params": {
									"_imageHash": "The new image hash to be set.",
									"_ipfsRoot": "The new IPFS root to be set."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"IPFSRootUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsRootBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"updateIPFSRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_ipfsRoot\",\"type\":\"bytes32\"}],\"name\":\"updateImageHashAndIPFS\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}},\"updateImageHashAndIPFS(bytes32,bytes32)\":{\"details\":\"These two operations are often performed together, so this function      allows to save some gas by performing them in a single step.\",\"params\":{\"_imageHash\":\"The new image hash to be set.\",\"_ipfsRoot\":\"The new IPFS root to be set.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"},\"updateImageHashAndIPFS(bytes32,bytes32)\":{\"notice\":\"Updates the image hash and the IPFS root in a single operation.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleAuthConvenience.sol\":\"ModuleAuthConvenience\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0x58c028f02e3517de6c39584bcf1cedd4e7b23f575c24b363cbad4960a74f8a0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9652fead22c9fe8510de8427e2db354ed145ff30f49f85d1c717e293e5df665\",\"dweb:/ipfs/QmSJPFQxRE5n17DNB5Bu2jwRo17yLS7igMQGt3bvKkdLAP\"]},\"contracts/modules/commons/ModuleAuthConvenience.sol\":{\"keccak256\":\"0x21e304888fa137fad3b1825e2e4763578cf074e214f88852c34df1e6fd3010b3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://971a64410251bd8cbd0aa0191fcff8b6e758d9c359488927d4d8d992ed66ff8f\",\"dweb:/ipfs/QmWbtAJ5fKtGxr8AbhAi4mjNuT4sjvTipDpZ78XgKgGN29\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleIPFS.sol\":{\"keccak256\":\"0xecb4e3d42517d00de4520d8285a5d70babf208ecb78623dbbecf77dff672d225\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://021147a411bb34b171621d0d1d3cf050852a3a4290c6ade44cca9fba795f5b15\",\"dweb:/ipfs/QmWqDWoc3CsTh5ktsAqn6fBK18RctAVp1SfZsSGWvkACDa\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0x4c48eaaae7764b38fdbb28d823547849d58129c00c66a26b08101235f16f558e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02fd853f6263c94ab03602796528e5f7b8f6a0f753630c363a31b9dae843fb81\",\"dweb:/ipfs/QmQHgatuwoPUe9ZH6a5e7w3vyzMU24CRX1vPgJ28AuksYG\"]},\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x7a4e2e0f3db9a918f86009da75b8ccaf6be4aeb8962b8c95d04cf129ccdf7931\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39e86486a99d5643c0280cb12feb006a12d69fe87871d5a6e4d849d28fd559f0\",\"dweb:/ipfs/QmSVpeagGmSJRcDPgjGW8g4DSgEK6FF5zCochFbtUHwHxH\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0x690736cf270957d84d4873755780c69f88733bfb4a7bc895716a498d0056f320\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8cb44ee7280b10c87564cacac6a045b7705ea171c0939d668c591744d68496de\",\"dweb:/ipfs/QmbtCbDvkikabdqCETmgk1XeekN4BHm1sXzgXTWWHy2sz9\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/LibString.sol\":{\"keccak256\":\"0x18662322f6ce8c4aea601ec11fc7631c843f9bf59dd2526d27db0fef3b2d81b1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://77cc33818f1bbda0d42588d0dd4959a2db288cb1a934d7e710a2923da55cf21e\",\"dweb:/ipfs/QmNR1U27FdvRQGZvrx3hMJqCUsF6NYqziemsVvZEjk767t\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							},
							"signatureRecovery(bytes32,bytes)": {
								"notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							},
							"updateImageHashAndIPFS(bytes32,bytes32)": {
								"notice": "Updates the image hash and the IPFS root in a single operation."
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleAuthUpgradable.sol": {
				"ModuleAuthUpgradable": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "imageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
								}
							},
							"signatureRecovery(bytes32,bytes)": {
								"details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
								"params": {
									"_digest": "Digest of the signed data.",
									"_signature": "A Sequence signature."
								},
								"returns": {
									"checkpoint": "A nonce that is incremented every time a new configuration is set.",
									"imageHash": "The imageHash of the configuration that signed the message.",
									"subdigest": "A modified version of the original digest, unique for each wallet/network.",
									"threshold": "The required number of signatures needed to consider the signature valid.",
									"weight": "The actual number of signatures collected in the signature."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"imageHash()\":{\"notice\":\"Returns the current image hash of the wallet\"},\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleAuthUpgradable.sol\":\"ModuleAuthUpgradable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0x58c028f02e3517de6c39584bcf1cedd4e7b23f575c24b363cbad4960a74f8a0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9652fead22c9fe8510de8427e2db354ed145ff30f49f85d1c717e293e5df665\",\"dweb:/ipfs/QmSJPFQxRE5n17DNB5Bu2jwRo17yLS7igMQGt3bvKkdLAP\"]},\"contracts/modules/commons/ModuleAuthUpgradable.sol\":{\"keccak256\":\"0xec99f01f7f681c95224bdc8159d44dadcdb1f43c98032806ed70e3f4709770a7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://977a7ad00e7f0f67df47c8e3de84997b7df6004a5f4ae912061a62ef1cadfe7d\",\"dweb:/ipfs/QmWe1H1KzT7YBZK3Cr6ydZboQhtsNzpYLBfs8QCgbRGg6V\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/interfaces/IModuleAuthUpgradable.sol\":{\"keccak256\":\"0x8879331f77598c68e5626b7ea3fac608e8e0b7f5796764f7d107da4728d37083\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://525270ac4821bde3d3d505c763aad53bdece184d56095aae85699d5215fc26f9\",\"dweb:/ipfs/QmZsjfZy9a9J6PBC5W7hiwAxGyT2HM1VCqQCisyVzrsggy\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0x4c48eaaae7764b38fdbb28d823547849d58129c00c66a26b08101235f16f558e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02fd853f6263c94ab03602796528e5f7b8f6a0f753630c363a31b9dae843fb81\",\"dweb:/ipfs/QmQHgatuwoPUe9ZH6a5e7w3vyzMU24CRX1vPgJ28AuksYG\"]},\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x7a4e2e0f3db9a918f86009da75b8ccaf6be4aeb8962b8c95d04cf129ccdf7931\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39e86486a99d5643c0280cb12feb006a12d69fe87871d5a6e4d849d28fd559f0\",\"dweb:/ipfs/QmSVpeagGmSJRcDPgjGW8g4DSgEK6FF5zCochFbtUHwHxH\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0x690736cf270957d84d4873755780c69f88733bfb4a7bc895716a498d0056f320\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8cb44ee7280b10c87564cacac6a045b7705ea171c0939d668c591744d68496de\",\"dweb:/ipfs/QmbtCbDvkikabdqCETmgk1XeekN4BHm1sXzgXTWWHy2sz9\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"imageHash()": {
								"notice": "Returns the current image hash of the wallet"
							},
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							},
							"signatureRecovery(bytes32,bytes)": {
								"notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleAuthUpgradableDuo.sol": {
				"ModuleAuthUpgradableDuo": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExternalImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newExternalImageHash",
									"type": "bytes32"
								}
							],
							"name": "ExternalImageHashUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "externalImageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "imageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateExternalImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
								}
							},
							"signatureRecovery(bytes32,bytes)": {
								"details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
								"params": {
									"_digest": "Digest of the signed data.",
									"_signature": "A Sequence signature."
								},
								"returns": {
									"checkpoint": "A nonce that is incremented every time a new configuration is set.",
									"imageHash": "The imageHash of the configuration that signed the message.",
									"subdigest": "A modified version of the original digest, unique for each wallet/network.",
									"threshold": "The required number of signatures needed to consider the signature valid.",
									"weight": "The actual number of signatures collected in the signature."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateExternalImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the ERC-1271 signatures"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExternalImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newExternalImageHash\",\"type\":\"bytes32\"}],\"name\":\"ExternalImageHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"externalImageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"imageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateExternalImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateExternalImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the ERC-1271 signatures\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"externalImageHash()\":{\"notice\":\"Returns the current external image hash of the wallet (only for `ERC-1271`)\"},\"imageHash()\":{\"notice\":\"Returns the current image hash of the wallet\"},\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateExternalImageHash(bytes32)\":{\"notice\":\"Updates the external image hash of the wallet\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleAuthUpgradableDuo.sol\":\"ModuleAuthUpgradableDuo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0x58c028f02e3517de6c39584bcf1cedd4e7b23f575c24b363cbad4960a74f8a0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9652fead22c9fe8510de8427e2db354ed145ff30f49f85d1c717e293e5df665\",\"dweb:/ipfs/QmSJPFQxRE5n17DNB5Bu2jwRo17yLS7igMQGt3bvKkdLAP\"]},\"contracts/modules/commons/ModuleAuthUpgradable.sol\":{\"keccak256\":\"0xec99f01f7f681c95224bdc8159d44dadcdb1f43c98032806ed70e3f4709770a7\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://977a7ad00e7f0f67df47c8e3de84997b7df6004a5f4ae912061a62ef1cadfe7d\",\"dweb:/ipfs/QmWe1H1KzT7YBZK3Cr6ydZboQhtsNzpYLBfs8QCgbRGg6V\"]},\"contracts/modules/commons/ModuleAuthUpgradableDuo.sol\":{\"keccak256\":\"0x2de3a9a3953951214c79ef9b5027798e67ea6f8f7a7226e67ad621d0354e9614\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ab86db84d9d05983fe8631ee5bcb49a179c706846704be81d6d3c5e9b528a2ef\",\"dweb:/ipfs/QmSBw7JsNtgc8SpBhvwGwnhkenmt7Z7p1MMWUrdMkqSGmE\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/interfaces/IModuleAuthUpgradable.sol\":{\"keccak256\":\"0x8879331f77598c68e5626b7ea3fac608e8e0b7f5796764f7d107da4728d37083\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://525270ac4821bde3d3d505c763aad53bdece184d56095aae85699d5215fc26f9\",\"dweb:/ipfs/QmZsjfZy9a9J6PBC5W7hiwAxGyT2HM1VCqQCisyVzrsggy\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0x4c48eaaae7764b38fdbb28d823547849d58129c00c66a26b08101235f16f558e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02fd853f6263c94ab03602796528e5f7b8f6a0f753630c363a31b9dae843fb81\",\"dweb:/ipfs/QmQHgatuwoPUe9ZH6a5e7w3vyzMU24CRX1vPgJ28AuksYG\"]},\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x7a4e2e0f3db9a918f86009da75b8ccaf6be4aeb8962b8c95d04cf129ccdf7931\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39e86486a99d5643c0280cb12feb006a12d69fe87871d5a6e4d849d28fd559f0\",\"dweb:/ipfs/QmSVpeagGmSJRcDPgjGW8g4DSgEK6FF5zCochFbtUHwHxH\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0x690736cf270957d84d4873755780c69f88733bfb4a7bc895716a498d0056f320\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8cb44ee7280b10c87564cacac6a045b7705ea171c0939d668c591744d68496de\",\"dweb:/ipfs/QmbtCbDvkikabdqCETmgk1XeekN4BHm1sXzgXTWWHy2sz9\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"externalImageHash()": {
								"notice": "Returns the current external image hash of the wallet (only for `ERC-1271`)"
							},
							"imageHash()": {
								"notice": "Returns the current image hash of the wallet"
							},
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							},
							"signatureRecovery(bytes32,bytes)": {
								"notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateExternalImageHash(bytes32)": {
								"notice": "Updates the external image hash of the wallet"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleCalls.sol": {
				"ModuleCalls": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_provided",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								}
							],
							"name": "BadNonce",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_requested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_available",
									"type": "uint256"
								}
							],
							"name": "NotEnoughGas",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OnlyDelegatecall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newNonce",
									"type": "uint256"
								}
							],
							"name": "NonceChange",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "TxExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_reason",
									"type": "bytes"
								}
							],
							"name": "TxFailed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								}
							],
							"name": "readNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								}
							],
							"name": "selfExecute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"details": "Relayers must ensure that the gasLimit specified for each transaction      is acceptable to them. A user could specify large enough that it could      consume all the gas available.",
								"params": {
									"_nonce": "Signature nonce (may contain an encoded space)",
									"_signature": "Encoded signature",
									"_txs": "Transactions to process"
								}
							},
							"nonce()": {
								"details": "The default nonce space is 0x00",
								"returns": {
									"_0": "The next nonce"
								}
							},
							"readNonce(uint256)": {
								"params": {
									"_space": "Nonce space, each space keeps an independent nonce count"
								},
								"returns": {
									"_0": "The next nonce"
								}
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"params": {
									"_txs": "Transactions to execute"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"}],\"name\":\"BadNonce\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_available\",\"type\":\"uint256\"}],\"name\":\"NotEnoughGas\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OnlyDelegatecall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"TxExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"TxFailed\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"}],\"name\":\"readNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"selfExecute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"details\":\"Relayers must ensure that the gasLimit specified for each transaction      is acceptable to them. A user could specify large enough that it could      consume all the gas available.\",\"params\":{\"_nonce\":\"Signature nonce (may contain an encoded space)\",\"_signature\":\"Encoded signature\",\"_txs\":\"Transactions to process\"}},\"nonce()\":{\"details\":\"The default nonce space is 0x00\",\"returns\":{\"_0\":\"The next nonce\"}},\"readNonce(uint256)\":{\"params\":{\"_space\":\"Nonce space, each space keeps an independent nonce count\"},\"returns\":{\"_0\":\"The next nonce\"}},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"params\":{\"_txs\":\"Transactions to execute\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"notice\":\"Allow wallet owner to execute an action\"},\"nonce()\":{\"notice\":\"Returns the next nonce of the default nonce space\"},\"readNonce(uint256)\":{\"notice\":\"Returns the next nonce of the given nonce space\"},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"notice\":\"Allow wallet to execute an action   without signing the message\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleCalls.sol\":\"ModuleCalls\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/ModuleCalls.sol\":{\"keccak256\":\"0x80c0151dbd444f96c2f935e70a6d3cc57e307588fa21d7eace67e568dd3d35c1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39a856555a5eb900e67d351e667135f245ccebd304d692b35fc8bdc83aec1b53\",\"dweb:/ipfs/QmUdWfa7GcTGM5gk7qYbNCHtsxF4o8dXHzr6HbdFng5sQm\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleNonce.sol\":{\"keccak256\":\"0x3b5388842f763a5347d632a0e0e8499a54b6f0b0a6eb7f7d3d848319defa042d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b36fa5a88a4e174967f850bf2bb78c787d8016ef7b5eee3e2f883fbfe9b87a7d\",\"dweb:/ipfs/QmTDZiPiQGe1fmTKKzdwzBE1xjkh8apTotW1SQRUCFXf4q\"]},\"contracts/modules/commons/ModuleOnlyDelegatecall.sol\":{\"keccak256\":\"0x32bdb1d343eee2e32fd9d0f1d6dc0e265411d0821bd908881822f0f26f0887f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1537c4f60a609751013bdc69eb1c6e6218982d91013115bc4e28cb84f816cd91\",\"dweb:/ipfs/QmSjkSTrrB4vuxECcm5cRG7YmraF53QWRgftxS827KcQLW\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/interfaces/IModuleCalls.sol\":{\"keccak256\":\"0xde065c15e38eb009c3dc8f99dfefdd1d6d244dd12a889a8b57edd90d32fb4395\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://23608955786060457f79267795a61eb89b3910b683fc136c749548369425088f\",\"dweb:/ipfs/QmXNorcQBF1Qk21y3aEJRiiHVtwm61zP4ttA1ZzmRjyHnz\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0x4c48eaaae7764b38fdbb28d823547849d58129c00c66a26b08101235f16f558e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02fd853f6263c94ab03602796528e5f7b8f6a0f753630c363a31b9dae843fb81\",\"dweb:/ipfs/QmQHgatuwoPUe9ZH6a5e7w3vyzMU24CRX1vPgJ28AuksYG\"]},\"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":{\"keccak256\":\"0x912949cb9dd79c05091f7c10b87e39c1aa4f21c034a1d0e86d23e01297e35a32\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8204708994b24c5e549be50e8d365c18cdfcc23130e14129eca0ef9a37bb6abc\",\"dweb:/ipfs/QmYwkk2GEYbJuideRPpvE5UqnHBkyVwbso4KkzYxRFi6QU\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x7a4e2e0f3db9a918f86009da75b8ccaf6be4aeb8962b8c95d04cf129ccdf7931\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39e86486a99d5643c0280cb12feb006a12d69fe87871d5a6e4d849d28fd559f0\",\"dweb:/ipfs/QmSVpeagGmSJRcDPgjGW8g4DSgEK6FF5zCochFbtUHwHxH\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0x690736cf270957d84d4873755780c69f88733bfb4a7bc895716a498d0056f320\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8cb44ee7280b10c87564cacac6a045b7705ea171c0939d668c591744d68496de\",\"dweb:/ipfs/QmbtCbDvkikabdqCETmgk1XeekN4BHm1sXzgXTWWHy2sz9\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"notice": "Allow wallet owner to execute an action"
							},
							"nonce()": {
								"notice": "Returns the next nonce of the default nonce space"
							},
							"readNonce(uint256)": {
								"notice": "Returns the next nonce of the given nonce space"
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"notice": "Allow wallet to execute an action   without signing the message"
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleCreator.sol": {
				"ModuleCreator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "CreateFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_contract",
									"type": "address"
								}
							],
							"name": "CreatedContract",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "createContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createContract(bytes)": {
								"params": {
									"_code": "Creation code of the contract"
								},
								"returns": {
									"addr": "The address of the created contract"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061040e806100206000396000f3fe6080604052600436106100295760003560e01c806301ffc9a71461002e57806390042baf14610063575b600080fd5b34801561003a57600080fd5b5061004e610049366004610225565b61009b565b60405190151581526020015b60405180910390f35b61007661007136600461029d565b610136565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161005a565b60007f6ffbd451000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016100ee57506001919050565b507fffffffff00000000000000000000000000000000000000000000000000000000167f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b600033301461017e576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b81516020830134f0905073ffffffffffffffffffffffffffffffffffffffff81166101d757816040517f0d257191000000000000000000000000000000000000000000000000000000008152600401610175919061036c565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c9060200160405180910390a1919050565b60006020828403121561023757600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461026757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156102af57600080fd5b813567ffffffffffffffff808211156102c757600080fd5b818401915084601f8301126102db57600080fd5b8135818111156102ed576102ed61026e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156103335761033361026e565b8160405282815287602084870101111561034c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103995785810183015185820160400152820161037d565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050509291505056fea264697066735822122006e03e11c82eb5f10f2958bbc903f4d28121cd3900c5cc87b7e12d422460190264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40E DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x225 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x29D JUMP JUMPDEST PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5A JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FFBD45100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0xEE JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1D7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xD25719100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2ED PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x333 JUMPI PUSH2 0x333 PUSH2 0x26E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x399 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x37D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xE0 RETURNDATACOPY GT 0xC8 0x2E 0xB5 CALL 0xF 0x29 PC 0xBB 0xC9 SUB DELEGATECALL 0xD2 DUP2 0x21 0xCD CODECOPY STOP 0xC5 0xCC DUP8 0xB7 0xE1 0x2D TIMESTAMP 0x24 PUSH1 0x19 MUL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "169:1008:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@createContract_1220": {
									"entryPoint": 310,
									"id": 1220,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1245": {
									"entryPoint": 155,
									"id": 1245,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1263": {
									"entryPoint": null,
									"id": 1263,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes_memory_ptr": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 622,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2887:38",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:38",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:263:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:38"
															},
															"nodeType": "YulIf",
															"src": "93:52:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:38"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "300:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "309:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "312:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "302:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "302:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "302:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:38"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "230:66:38",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:78:38"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:89:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:97:38"
															},
															"nodeType": "YulIf",
															"src": "199:117:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "325:15:38",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "335:5:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "325:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:38",
														"type": ""
													}
												],
												"src": "14:332:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "446:92:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "456:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "468:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "479:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "464:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "456:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "523:6:38"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "516:6:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "516:14:38"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "509:6:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "509:22:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "491:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "491:41:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "491:41:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "415:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "426:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "437:4:38",
														"type": ""
													}
												],
												"src": "351:187:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "575:152:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "592:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "595:77:38",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "585:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "585:88:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "585:88:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "689:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "692:4:38",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "682:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "682:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "682:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "713:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "716:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "706:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "706:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "706:15:38"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "543:184:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "811:901:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "857:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "866:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "869:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "859:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "859:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "859:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "832:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "841:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "828:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "828:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "853:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "824:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "824:32:38"
															},
															"nodeType": "YulIf",
															"src": "821:52:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "882:37:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "909:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "896:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "896:23:38"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "886:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "928:28:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "938:18:38",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "932:2:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "983:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "992:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "995:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "985:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "985:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "985:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "971:6:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "979:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "968:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "968:14:38"
															},
															"nodeType": "YulIf",
															"src": "965:34:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1008:32:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1022:9:38"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1033:6:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1018:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1018:22:38"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1012:2:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1088:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1097:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1100:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1090:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1090:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1090:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1067:2:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1071:4:38",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1063:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1063:13:38"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1078:7:38"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1059:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1059:27:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1052:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1052:35:38"
															},
															"nodeType": "YulIf",
															"src": "1049:55:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1113:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1136:2:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:16:38"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1117:2:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1162:22:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1164:16:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1164:18:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1164:18:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1154:2:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1158:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1151:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1151:10:38"
															},
															"nodeType": "YulIf",
															"src": "1148:36:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1193:76:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1203:66:38",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1197:2:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1278:23:38",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1298:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1292:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1292:9:38"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "1282:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1310:71:38",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1332:6:38"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_3",
																										"nodeType": "YulIdentifier",
																										"src": "1356:2:38"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1360:4:38",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1352:3:38"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1352:13:38"
																							},
																							{
																								"name": "_4",
																								"nodeType": "YulIdentifier",
																								"src": "1367:2:38"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "1348:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1348:22:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1372:2:38",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1344:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1344:31:38"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "1377:2:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1340:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1340:40:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1328:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1328:53:38"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "1314:10:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1440:22:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1442:16:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1442:18:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1442:18:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1399:10:38"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1411:2:38"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1396:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1396:18:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1419:10:38"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1431:6:38"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1416:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1416:22:38"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1393:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1393:46:38"
															},
															"nodeType": "YulIf",
															"src": "1390:72:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1478:2:38",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1482:10:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1471:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:22:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1471:22:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1509:6:38"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1517:2:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1502:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1502:18:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1502:18:38"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1566:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1575:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1578:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1568:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1568:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1568:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "1543:2:38"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1547:2:38"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1539:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1539:11:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1552:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1535:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:20:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1557:7:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1532:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1532:33:38"
															},
															"nodeType": "YulIf",
															"src": "1529:53:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1608:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1616:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1604:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1604:15:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "1625:2:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1629:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1621:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1621:11:38"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1634:2:38"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "1591:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1591:46:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1591:46:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1661:6:38"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1669:2:38"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1657:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1657:15:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1674:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1653:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1653:24:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1679:1:38",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1646:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1646:35:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1646:35:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1690:16:38",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1700:6:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "777:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "788:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "800:6:38",
														"type": ""
													}
												],
												"src": "732:980:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1818:125:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1828:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1840:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1851:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1836:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1828:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1870:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1885:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1893:42:38",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1881:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1881:55:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1863:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1863:74:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1863:74:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1787:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1798:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1809:4:38",
														"type": ""
													}
												],
												"src": "1717:226:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2077:198:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2087:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2099:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2110:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2095:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2095:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2087:4:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2122:52:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2132:42:38",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2126:2:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2190:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2205:6:38"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2213:2:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2201:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2201:15:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2183:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2183:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2183:34:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2237:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2248:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2233:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2233:18:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2257:6:38"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2265:2:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2253:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2253:15:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2226:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2226:43:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2226:43:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2038:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2049:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2057:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2068:4:38",
														"type": ""
													}
												],
												"src": "1948:327:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2399:486:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2409:12:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2419:2:38",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2413:2:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2437:9:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2448:2:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2430:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2430:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2430:21:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2460:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2474:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2474:13:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2464:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2507:9:38"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2518:2:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2503:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2503:18:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2523:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2496:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2496:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2496:34:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2539:10:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2548:1:38",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "2543:1:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2608:90:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "2637:9:38"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "2648:1:38"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2633:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2633:17:38"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2652:2:38",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2629:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2629:26:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "2671:6:38"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "2679:1:38"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2667:3:38"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2667:14:38"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "2683:2:38"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2663:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2663:23:38"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2657:5:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2657:30:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2622:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2622:66:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2622:66:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "2569:1:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2572:6:38"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2566:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2566:13:38"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2580:19:38",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2582:15:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "2591:1:38"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2594:2:38"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2587:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2587:10:38"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "2582:1:38"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2562:3:38",
																"statements": []
															},
															"src": "2558:140:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2722:9:38"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2733:6:38"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2718:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2718:22:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2742:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2714:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2714:31:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2747:1:38",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2707:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2707:42:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2707:42:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2758:121:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2774:9:38"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2793:6:38"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2801:2:38",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2789:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2789:15:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2806:66:38",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2785:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2785:88:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2770:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2770:104:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2876:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2766:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2766:113:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2758:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2368:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2379:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2390:4:38",
														"type": ""
													}
												],
												"src": "2280:605:38"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes_memory_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n}",
									"id": 38,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c806301ffc9a71461002e57806390042baf14610063575b600080fd5b34801561003a57600080fd5b5061004e610049366004610225565b61009b565b60405190151581526020015b60405180910390f35b61007661007136600461029d565b610136565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161005a565b60007f6ffbd451000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016100ee57506001919050565b507fffffffff00000000000000000000000000000000000000000000000000000000167f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b600033301461017e576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b81516020830134f0905073ffffffffffffffffffffffffffffffffffffffff81166101d757816040517f0d257191000000000000000000000000000000000000000000000000000000008152600401610175919061036c565b60405173ffffffffffffffffffffffffffffffffffffffff821681527fa506ad4e7f05eceba62a023c3219e5bd98a615f4fa87e2afb08a2da5cf62bf0c9060200160405180910390a1919050565b60006020828403121561023757600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461026757600080fd5b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156102af57600080fd5b813567ffffffffffffffff808211156102c757600080fd5b818401915084601f8301126102db57600080fd5b8135818111156102ed576102ed61026e565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156103335761033361026e565b8160405282815287602084870101111561034c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103995785810183015185820160400152820161037d565b5060006040828601015260407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f830116850101925050509291505056fea264697066735822122006e03e11c82eb5f10f2958bbc903f4d28121cd3900c5cc87b7e12d422460190264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x90042BAF EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x225 JUMP JUMPDEST PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x76 PUSH2 0x71 CALLDATASIZE PUSH1 0x4 PUSH2 0x29D JUMP JUMPDEST PUSH2 0x136 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5A JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6FFBD45100000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0xEE JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER ADDRESS EQ PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x20 DUP4 ADD CALLVALUE CREATE SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x1D7 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0xD25719100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0xA506AD4E7F05ECEBA62A023C3219E5BD98A615F4FA87E2AFB08A2DA5CF62BF0C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x267 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2ED JUMPI PUSH2 0x2ED PUSH2 0x26E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x333 JUMPI PUSH2 0x333 PUSH2 0x26E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP8 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP3 DUP2 ADD PUSH1 0x20 ADD SWAP3 SWAP1 SWAP3 MSTORE POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x399 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x37D JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xE0 RETURNDATACOPY GT 0xC8 0x2E 0xB5 CALL 0xF 0x29 PC 0xBB 0xC9 SUB DELEGATECALL 0xD2 DUP2 0x21 0xCD CODECOPY STOP 0xC5 0xCC DUP8 0xB7 0xE1 0x2D TIMESTAMP 0x24 PUSH1 0x19 MUL PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "169:1008:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;942:233;;;;;;;;;;-1:-1:-1;942:233:11;;;;;:::i;:::-;;:::i;:::-;;;516:14:38;;509:22;491:41;;479:2;464:18;942:233:11;;;;;;;;456:276;;;;;;:::i;:::-;;:::i;:::-;;;1893:42:38;1881:55;;;1863:74;;1851:2;1836:18;456:276:11;1717:226:38;942:233:11;1028:4;1044:48;;;;;1040:80;;-1:-1:-1;1109:4:11;;942:233;-1:-1:-1;942:233:11:o;1040:80::-;-1:-1:-1;709:47:12;;725:31;709:47;;942:233:11:o;456:276::-;550:12;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;2183:34:38;255:4:18;2233:18:38;;;2226:43;2095:18;;222:39:18;;;;;;;;174:94;631:5:11::1;625:12;620:2;613:5;609:14;596:11;589:49;581:57:::0;-1:-1:-1;649:18:11::1;::::0;::::1;645:50;;689:5;676:19;;;;;;;;;;;:::i;645:50::-;706:21;::::0;1893:42:38;1881:55;;1863:74;;706:21:11::1;::::0;1851:2:38;1836:18;706:21:11::1;;;;;;;456:276:::0;;;:::o;14:332:38:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:38:o;543:184::-;595:77;592:1;585:88;692:4;689:1;682:15;716:4;713:1;706:15;732:980;800:6;853:2;841:9;832:7;828:23;824:32;821:52;;;869:1;866;859:12;821:52;909:9;896:23;938:18;979:2;971:6;968:14;965:34;;;995:1;992;985:12;965:34;1033:6;1022:9;1018:22;1008:32;;1078:7;1071:4;1067:2;1063:13;1059:27;1049:55;;1100:1;1097;1090:12;1049:55;1136:2;1123:16;1158:2;1154;1151:10;1148:36;;;1164:18;;:::i;:::-;1298:2;1292:9;1360:4;1352:13;;1203:66;1348:22;;;1372:2;1344:31;1340:40;1328:53;;;1396:18;;;1416:22;;;1393:46;1390:72;;;1442:18;;:::i;:::-;1482:10;1478:2;1471:22;1517:2;1509:6;1502:18;1557:7;1552:2;1547;1543;1539:11;1535:20;1532:33;1529:53;;;1578:1;1575;1568:12;1529:53;1634:2;1629;1625;1621:11;1616:2;1608:6;1604:15;1591:46;1679:1;1657:15;;;1674:2;1653:24;1646:35;;;;-1:-1:-1;1661:6:38;732:980;-1:-1:-1;;;;;732:980:38:o;2280:605::-;2390:4;2419:2;2448;2437:9;2430:21;2480:6;2474:13;2523:6;2518:2;2507:9;2503:18;2496:34;2548:1;2558:140;2572:6;2569:1;2566:13;2558:140;;;2667:14;;;2663:23;;2657:30;2633:17;;;2652:2;2629:26;2622:66;2587:10;;2558:140;;;2562:3;2747:1;2742:2;2733:6;2722:9;2718:22;2714:31;2707:42;2876:2;2806:66;2801:2;2793:6;2789:15;2785:88;2774:9;2770:104;2766:113;2758:121;;;;2280:605;;;;:::o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"CreateFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"}],\"name\":\"CreatedContract\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"createContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createContract(bytes)\":{\"params\":{\"_code\":\"Creation code of the contract\"},\"returns\":{\"addr\":\"The address of the created contract\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createContract(bytes)\":{\"notice\":\"Creates a contract forwarding eth value\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleCreator.sol\":\"ModuleCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleCreator.sol\":{\"keccak256\":\"0x16b1400988f6b7bd4d32bdcb36ee2fbd644fb2c8ca571becc0c32e03602bd303\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8bd4681fb4cff10f4e98e45618fbc52ed0a4c7d4fcf614f34a587ad20cd16855\",\"dweb:/ipfs/QmbA2LYBH1x8WX8CaeiFYMU5rjyLGgNCF32r9fQbXuoqwJ\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/interfaces/IModuleCreator.sol\":{\"keccak256\":\"0xa206dd3d424b8cd1c4f1400aa344cbc974480fea02f0fb371b872558e5ff4e6d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ea14c75f43a0008c582dcbae3ba3c900e446e28039dfdbb059d326ec5cc6a2d2\",\"dweb:/ipfs/QmRfF6BmUWiFkCgzVFbLcHsUCNz5q2XkkcwXPX57ViTK4D\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"createContract(bytes)": {
								"notice": "Creates a contract forwarding eth value"
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleERC165.sol": {
				"ModuleERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Adding new hooks will not lead to them being reported by this function      without upgrading the wallet. In addition, developers must ensure that      all inherited contracts by the main module don't conflict and are accounted      to be supported by the supportsInterface method.",
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Adding new hooks will not lead to them being reported by this function      without upgrading the wallet. In addition, developers must ensure that      all inherited contracts by the main module don't conflict and are accounted      to be supported by the supportsInterface method.\",\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleERC165.sol\":\"ModuleERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleExtraAuth.sol": {
				"ModuleExtraAuth": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_expiration",
									"type": "uint256"
								}
							],
							"name": "SetExtraImageHash",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32[]",
									"name": "_imageHashes",
									"type": "bytes32[]"
								}
							],
							"name": "clearExtraImageHashes",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "extraImageHash",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "_signatures",
									"type": "bytes"
								}
							],
							"name": "isValidSignature",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "_expiration",
									"type": "uint256"
								}
							],
							"name": "setExtraImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\"isValidSignature(bytes,bytes)\"))",
								"params": {
									"_data": "Arbitrary length data signed on the behalf of address(this)",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise"
								}
							},
							"isValidSignature(bytes32,bytes)": {
								"details": "MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\"isValidSignature(bytes32,bytes)\"))",
								"params": {
									"_hash": "keccak256 hash that was signed",
									"_signatures": "Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)"
								},
								"returns": {
									"_0": "magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise"
								}
							},
							"signatureRecovery(bytes32,bytes)": {
								"details": "The signature must be prefixed with a type byte, which is used to determine the recovery method.",
								"params": {
									"_digest": "Digest of the signed data.",
									"_signature": "A Sequence signature."
								},
								"returns": {
									"checkpoint": "A nonce that is incremented every time a new configuration is set.",
									"imageHash": "The imageHash of the configuration that signed the message.",
									"subdigest": "A modified version of the original digest, unique for each wallet/network.",
									"threshold": "The required number of signatures needed to consider the signature valid.",
									"weight": "The actual number of signatures collected in the signature."
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"}],\"name\":\"SetExtraImageHash\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"_imageHashes\",\"type\":\"bytes32[]\"}],\"name\":\"clearExtraImageHashes\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"extraImageHash\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_signatures\",\"type\":\"bytes\"}],\"name\":\"isValidSignature\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_expiration\",\"type\":\"uint256\"}],\"name\":\"setExtraImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided data   > The bytes4 magic value to return when signature is valid is 0x20c13b0b : bytes4(keccak256(\\\"isValidSignature(bytes,bytes)\\\"))\",\"params\":{\"_data\":\"Arbitrary length data signed on the behalf of address(this)\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x20c13b0b if the signature is valid and 0x0 otherwise\"}},\"isValidSignature(bytes32,bytes)\":{\"details\":\"MUST return the correct magic value if the signature provided is valid for the provided hash   > The bytes4 magic value to return when signature is valid is 0x1626ba7e : bytes4(keccak256(\\\"isValidSignature(bytes32,bytes)\\\"))\",\"params\":{\"_hash\":\"keccak256 hash that was signed\",\"_signatures\":\"Signature byte array associated with _data.                    Encoded as abi.encode(Signature[], Configs)\"},\"returns\":{\"_0\":\"magicValue Magic value 0x1626ba7e if the signature is valid and 0x0 otherwise\"}},\"signatureRecovery(bytes32,bytes)\":{\"details\":\"The signature must be prefixed with a type byte, which is used to determine the recovery method.\",\"params\":{\"_digest\":\"Digest of the signed data.\",\"_signature\":\"A Sequence signature.\"},\"returns\":{\"checkpoint\":\"A nonce that is incremented every time a new configuration is set.\",\"imageHash\":\"The imageHash of the configuration that signed the message.\",\"subdigest\":\"A modified version of the original digest, unique for each wallet/network.\",\"threshold\":\"The required number of signatures needed to consider the signature valid.\",\"weight\":\"The actual number of signatures collected in the signature.\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isValidSignature(bytes,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided data\"},\"isValidSignature(bytes32,bytes)\":{\"notice\":\"Verifies whether the provided signature is valid with respect to the provided hash\"},\"signatureRecovery(bytes32,bytes)\":{\"notice\":\"Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleExtraAuth.sol\":\"ModuleExtraAuth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/ModuleAuth.sol\":{\"keccak256\":\"0x58c028f02e3517de6c39584bcf1cedd4e7b23f575c24b363cbad4960a74f8a0b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://f9652fead22c9fe8510de8427e2db354ed145ff30f49f85d1c717e293e5df665\",\"dweb:/ipfs/QmSJPFQxRE5n17DNB5Bu2jwRo17yLS7igMQGt3bvKkdLAP\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleExtraAuth.sol\":{\"keccak256\":\"0x793e557314c05e0b88855bd38f481156994dccdd41a7eb5dc483f2529e0af2fc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8424ace720f2be4c0097c94168bb813a9c6767d6a7ffeb3c83a071fc8307c022\",\"dweb:/ipfs/QmRAfrpve92zUTFMzRKxGxksu1bpD9VVpUyyLxUbgFoeXi\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0x4c48eaaae7764b38fdbb28d823547849d58129c00c66a26b08101235f16f558e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02fd853f6263c94ab03602796528e5f7b8f6a0f753630c363a31b9dae843fb81\",\"dweb:/ipfs/QmQHgatuwoPUe9ZH6a5e7w3vyzMU24CRX1vPgJ28AuksYG\"]},\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x7a4e2e0f3db9a918f86009da75b8ccaf6be4aeb8962b8c95d04cf129ccdf7931\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39e86486a99d5643c0280cb12feb006a12d69fe87871d5a6e4d849d28fd559f0\",\"dweb:/ipfs/QmSVpeagGmSJRcDPgjGW8g4DSgEK6FF5zCochFbtUHwHxH\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0x690736cf270957d84d4873755780c69f88733bfb4a7bc895716a498d0056f320\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8cb44ee7280b10c87564cacac6a045b7705ea171c0939d668c591744d68496de\",\"dweb:/ipfs/QmbtCbDvkikabdqCETmgk1XeekN4BHm1sXzgXTWWHy2sz9\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"isValidSignature(bytes,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided data"
							},
							"isValidSignature(bytes32,bytes)": {
								"notice": "Verifies whether the provided signature is valid with respect to the provided hash"
							},
							"signatureRecovery(bytes32,bytes)": {
								"notice": "Recovers the threshold, weight, imageHash, subdigest, and checkpoint of a signature."
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleHooks.sol": {
				"ModuleHooks": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "HookAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "HookDoesNotExist",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "DefinedHook",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "addHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "readHook",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "removeHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addHook(bytes4,address)": {
								"details": "Can't overwrite hooks that are part of the main module (those defined below)",
								"params": {
									"_implementation": "Hook implementation contract",
									"_signature": "Signature function linked to the hook"
								}
							},
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`"
								}
							},
							"onERC721Received(address,address,uint256,bytes)": {
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`"
								}
							},
							"readHook(bytes4)": {
								"params": {
									"_signature": "Signature function"
								},
								"returns": {
									"_0": "The address of the implementation hook, address(0) if none"
								}
							},
							"removeHook(bytes4)": {
								"details": "Can't remove hooks that are part of the main module (those defined below)      without upgrading the wallet",
								"params": {
									"_signature": "Signature function linked to the hook"
								}
							},
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610ad5806100206000396000f3fe6080604052600436106100745760003560e01c80634fcf3eca1161004e5780634fcf3eca14610249578063b93ea7ad14610269578063bc197c8114610289578063f23a6e61146102d15761007b565b806301ffc9a714610159578063150b7a021461018e5780631a9b2337146102045761007b565b3661007b57005b600436106101575760006100b26000357fffffffff0000000000000000000000000000000000000000000000000000000016610317565b905073ffffffffffffffffffffffffffffffffffffffff811615610155576000808273ffffffffffffffffffffffffffffffffffffffff166000366040516100fb9291906107b1565b600060405180830381855af49150503d8060008114610136576040519150601f19603f3d011682016040523d82523d6000602084013e61013b565b606091505b50915091508161014d57805160208201fd5b805160208201f35b505b005b34801561016557600080fd5b506101796101743660046107f6565b61036b565b60405190151581526020015b60405180910390f35b34801561019a57600080fd5b506101d36101a9366004610885565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610185565b34801561021057600080fd5b5061022461021f3660046107f6565b6104ed565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610185565b34801561025557600080fd5b506101576102643660046107f6565b6104f8565b34801561027557600080fd5b506101576102843660046108f4565b6105c8565b34801561029557600080fd5b506101d36102a436600461096c565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b3480156102dd57600080fd5b506101d36102ec366004610a27565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60006103657fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1207fffffffff000000000000000000000000000000000000000000000000000000008416610693565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fec6aba500000000000000000000000000000000000000000000000000000000014806103fe57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061044a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061049657507fffffffff0000000000000000000000000000000000000000000000000000000082167fc0ee0b8a00000000000000000000000000000000000000000000000000000000145b156104a357506001919050565b7f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610365565b600061036582610317565b33301461053e576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b600061054982610317565b73ffffffffffffffffffffffffffffffffffffffff16036105ba576040517f1c3812cc0000000000000000000000000000000000000000000000000000000081527fffffffff0000000000000000000000000000000000000000000000000000000082166004820152602401610535565b6105c58160006106f1565b50565b333014610609576040517fe1258894000000000000000000000000000000000000000000000000000000008152336004820152306024820152604401610535565b600061061483610317565b73ffffffffffffffffffffffffffffffffffffffff1614610685576040517f5b4d6d6a0000000000000000000000000000000000000000000000000000000081527fffffffff0000000000000000000000000000000000000000000000000000000083166004820152602401610535565b61068f82826106f1565b5050565b60008083836040516020016106b2929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b604080517fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1206020808301919091527fffffffff000000000000000000000000000000000000000000000000000000008516828401819052835180840385018152606084018086528151919093012073ffffffffffffffffffffffffffffffffffffffff8616908190559152608082015290517f0d7fc113eaf016db4681a1ba86d083ce3e0961f321062a75ac2b0aeb33deeed19181900360a00190a15050565b8183823760009101908152919050565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146107f157600080fd5b919050565b60006020828403121561080857600080fd5b610811826107c1565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146107f157600080fd5b60008083601f84011261084e57600080fd5b50813567ffffffffffffffff81111561086657600080fd5b60208301915083602082850101111561087e57600080fd5b9250929050565b60008060008060006080868803121561089d57600080fd5b6108a686610818565b94506108b460208701610818565b935060408601359250606086013567ffffffffffffffff8111156108d757600080fd5b6108e38882890161083c565b969995985093965092949392505050565b6000806040838503121561090757600080fd5b610910836107c1565b915061091e60208401610818565b90509250929050565b60008083601f84011261093957600080fd5b50813567ffffffffffffffff81111561095157600080fd5b6020830191508360208260051b850101111561087e57600080fd5b60008060008060008060008060a0898b03121561098857600080fd5b61099189610818565b975061099f60208a01610818565b9650604089013567ffffffffffffffff808211156109bc57600080fd5b6109c88c838d01610927565b909850965060608b01359150808211156109e157600080fd5b6109ed8c838d01610927565b909650945060808b0135915080821115610a0657600080fd5b50610a138b828c0161083c565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215610a4057600080fd5b610a4987610818565b9550610a5760208801610818565b94506040870135935060608701359250608087013567ffffffffffffffff811115610a8157600080fd5b610a8d89828a0161083c565b979a969950949750929593949250505056fea2646970667358221220e41b3c8b71dc52acf394b069c7c5362791390cf20814c0f6c9e7e28ff9b832d964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xAD5 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4FCF3ECA GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x4FCF3ECA EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB93EA7AD EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x2D1 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x1A9B2337 EQ PUSH2 0x204 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x157 JUMPI PUSH1 0x0 PUSH2 0xB2 PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x317 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0xFB SWAP3 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x14D JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD RETURN JUMPDEST POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x885 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x96C JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0xA27 JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 AND PUSH2 0x693 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xEC6ABA5000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3FE JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x44A JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x496 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xC0EE0B8A00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x4A3 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x365 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 DUP3 PUSH2 0x317 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x549 DUP3 PUSH2 0x317 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x1C3812CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x535 JUMP JUMPDEST PUSH2 0x5C5 DUP2 PUSH1 0x0 PUSH2 0x6F1 JUMP JUMPDEST POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x614 DUP4 PUSH2 0x317 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5B4D6D6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x535 JUMP JUMPDEST PUSH2 0x68F DUP3 DUP3 PUSH2 0x6F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6B2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND DUP3 DUP5 ADD DUP2 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP6 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP4 ADD KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP2 SWAP1 SSTORE SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xD7FC113EAF016DB4681A1BA86D083CE3E0961F321062A75AC2B0AEB33DEEED1 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x811 DUP3 PUSH2 0x7C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A6 DUP7 PUSH2 0x818 JUMP JUMPDEST SWAP5 POP PUSH2 0x8B4 PUSH1 0x20 DUP8 ADD PUSH2 0x818 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E3 DUP9 DUP3 DUP10 ADD PUSH2 0x83C JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x910 DUP4 PUSH2 0x7C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x91E PUSH1 0x20 DUP5 ADD PUSH2 0x818 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x991 DUP10 PUSH2 0x818 JUMP JUMPDEST SWAP8 POP PUSH2 0x99F PUSH1 0x20 DUP11 ADD PUSH2 0x818 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C8 DUP13 DUP4 DUP14 ADD PUSH2 0x927 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9ED DUP13 DUP4 DUP14 ADD PUSH2 0x927 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xA06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA13 DUP12 DUP3 DUP13 ADD PUSH2 0x83C JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA49 DUP8 PUSH2 0x818 JUMP JUMPDEST SWAP6 POP PUSH2 0xA57 PUSH1 0x20 DUP9 ADD PUSH2 0x818 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8D DUP10 DUP3 DUP11 ADD PUSH2 0x83C JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SHL EXTCODECOPY DUP12 PUSH18 0xDC52ACF394B069C7C5362791390CF20814C0 0xF6 0xC9 0xE7 0xE2 DUP16 0xF9 0xB8 ORIGIN 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "370:4644:14:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_1718": {
									"entryPoint": null,
									"id": 1718,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1723": {
									"entryPoint": null,
									"id": 1723,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_readHook_1583": {
									"entryPoint": 791,
									"id": 1583,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_writeHook_1614": {
									"entryPoint": 1777,
									"id": 1614,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addHook_1528": {
									"entryPoint": 1480,
									"id": 1528,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_1660": {
									"entryPoint": null,
									"id": 1660,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"@onERC1155Received_1636": {
									"entryPoint": null,
									"id": 1636,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"@onERC721Received_1680": {
									"entryPoint": null,
									"id": 1680,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@readBytes32Map_2112": {
									"entryPoint": 1683,
									"id": 2112,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readHook_1498": {
									"entryPoint": 1261,
									"id": 1498,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@removeHook_1559": {
									"entryPoint": 1272,
									"id": 1559,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1263": {
									"entryPoint": null,
									"id": 1263,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1769": {
									"entryPoint": 875,
									"id": 1769,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@writeBytes32Map_2091": {
									"entryPoint": null,
									"id": 2091,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 2072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn_calldata": {
									"entryPoint": 2343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_bytes4": {
									"entryPoint": 1985,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes_calldata": {
									"entryPoint": 2108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 2412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 2181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr": {
									"entryPoint": 2599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4t_address": {
									"entryPoint": 2292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1969,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4_t_address__to_t_bytes4_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6068:38",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:38",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "161:124:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "184:3:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "189:6:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:38"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "171:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "171:33:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "171:33:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "227:3:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "232:6:38"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "223:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:16:38"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "217:2:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "255:2:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "259:1:38",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "248:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "248:13:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "248:13:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "270:9:38",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "277:2:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "270:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "129:3:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "134:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "142:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "153:3:38",
														"type": ""
													}
												],
												"src": "14:271:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "338:171:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "348:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "370:6:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "357:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "357:20:38"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "348:5:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "487:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "496:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "499:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "489:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "489:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "489:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "399:5:38"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "410:5:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "417:66:38",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "406:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "406:78:38"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "396:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "396:89:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "389:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "389:97:38"
															},
															"nodeType": "YulIf",
															"src": "386:117:38"
														}
													]
												},
												"name": "abi_decode_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "317:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "328:5:38",
														"type": ""
													}
												],
												"src": "290:219:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "583:115:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "629:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "638:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "641:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "631:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "631:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "631:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "604:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "600:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "600:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "625:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "596:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "596:32:38"
															},
															"nodeType": "YulIf",
															"src": "593:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "654:38:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "682:9:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "664:17:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "664:28:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "654:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "549:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "560:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "572:6:38",
														"type": ""
													}
												],
												"src": "514:184:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "798:92:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "808:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "820:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "831:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "816:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "808:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "850:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "875:6:38"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "868:6:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "868:14:38"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "861:6:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "861:22:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "843:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:41:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "843:41:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "767:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "778:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "789:4:38",
														"type": ""
													}
												],
												"src": "703:187:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "944:147:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "954:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "976:6:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "963:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "963:20:38"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "954:5:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1069:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1078:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1081:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1071:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1071:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1071:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1005:5:38"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1016:5:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1023:42:38",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1012:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1012:54:38"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1002:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1002:65:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "995:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "995:73:38"
															},
															"nodeType": "YulIf",
															"src": "992:93:38"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "923:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "934:5:38",
														"type": ""
													}
												],
												"src": "895:196:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1168:275:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1217:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1226:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1229:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1219:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1219:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1219:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1204:4:38",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1192:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1192:17:38"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1211:3:38"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1188:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1188:27:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1181:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1181:35:38"
															},
															"nodeType": "YulIf",
															"src": "1178:55:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1242:30:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1265:6:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1252:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:20:38"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1315:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1324:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1327:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1317:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1317:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1317:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1287:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1295:18:38",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1284:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1284:30:38"
															},
															"nodeType": "YulIf",
															"src": "1281:50:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1340:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1356:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1364:4:38",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1352:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1352:17:38"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1340:8:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1421:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1430:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1433:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1423:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1423:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1423:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1392:6:38"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1400:6:38"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1388:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1388:19:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1409:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1384:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1384:30:38"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1416:3:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1381:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1381:39:38"
															},
															"nodeType": "YulIf",
															"src": "1378:59:38"
														}
													]
												},
												"name": "abi_decode_bytes_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1131:6:38",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1139:3:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1147:8:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1157:6:38",
														"type": ""
													}
												],
												"src": "1096:347:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1588:486:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1635:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1644:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1647:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1637:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1637:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1637:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1609:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1618:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1605:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1605:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1630:3:38",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:33:38"
															},
															"nodeType": "YulIf",
															"src": "1598:53:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1660:39:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1689:9:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1670:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1670:29:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1660:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1708:48:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1741:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1752:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1737:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1737:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1718:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1718:38:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1765:42:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1792:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1803:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1788:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1788:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1775:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:32:38"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1765:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1816:46:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1847:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1858:2:38",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1843:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1843:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1830:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1830:32:38"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1820:6:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1905:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1914:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1917:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1907:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1907:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1877:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1885:18:38",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1874:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:30:38"
															},
															"nodeType": "YulIf",
															"src": "1871:50:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1930:84:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1986:9:38"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1997:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1982:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1982:22:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2006:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "1956:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1956:58:38"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "1934:8:38",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "1944:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2023:18:38",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "2033:8:38"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2023:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2050:18:38",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "2060:8:38"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2050:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1522:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1533:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1545:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1553:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1561:6:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1569:6:38",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1577:6:38",
														"type": ""
													}
												],
												"src": "1448:626:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2178:149:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2188:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2200:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2211:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2196:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2196:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2188:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2230:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2245:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2253:66:38",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2241:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2241:79:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2223:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2223:98:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2223:98:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2147:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2158:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2169:4:38",
														"type": ""
													}
												],
												"src": "2079:248:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2433:125:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2443:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2455:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2466:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2451:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2451:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2443:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2485:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2500:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2508:42:38",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2496:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2496:55:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2478:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2478:74:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2478:74:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2402:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2413:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2424:4:38",
														"type": ""
													}
												],
												"src": "2332:226:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2649:172:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2695:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2704:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2707:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2697:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2697:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2697:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2670:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2679:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2666:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2666:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2691:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2662:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2662:32:38"
															},
															"nodeType": "YulIf",
															"src": "2659:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2720:38:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2748:9:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "2730:17:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:28:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2720:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2767:48:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2800:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2811:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2796:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2796:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2777:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2777:38:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2767:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2607:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2618:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2630:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2638:6:38",
														"type": ""
													}
												],
												"src": "2563:258:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2910:283:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2959:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2968:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2971:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2961:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2961:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2961:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2938:6:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2946:4:38",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2934:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2934:17:38"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2953:3:38"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2930:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2930:27:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2923:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2923:35:38"
															},
															"nodeType": "YulIf",
															"src": "2920:55:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2984:30:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2994:20:38"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "2984:6:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3057:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3066:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3069:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3059:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3059:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3059:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3029:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3037:18:38",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3026:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3026:30:38"
															},
															"nodeType": "YulIf",
															"src": "3023:50:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3082:29:38",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3098:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3106:4:38",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3094:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3094:17:38"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "3082:8:38"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3171:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3180:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3183:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3173:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3173:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3173:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3134:6:38"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3146:1:38",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3149:6:38"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3142:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3142:14:38"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3130:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3130:27:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3159:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3126:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3126:38:38"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3166:3:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3123:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3123:47:38"
															},
															"nodeType": "YulIf",
															"src": "3120:67:38"
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2873:6:38",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2881:3:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "2889:8:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2899:6:38",
														"type": ""
													}
												],
												"src": "2826:367:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3425:983:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3472:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3481:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3484:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3474:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3474:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3474:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3446:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3455:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3442:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3442:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3467:3:38",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3438:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3438:33:38"
															},
															"nodeType": "YulIf",
															"src": "3435:53:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3497:39:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3526:9:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3507:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3507:29:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3545:48:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3578:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3589:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3574:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3574:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "3555:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3555:38:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3545:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3602:46:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3633:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3644:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3629:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3629:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:32:38"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3606:6:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3657:28:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3667:18:38",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3661:2:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3712:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3721:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3724:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3714:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3714:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3714:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3700:6:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3708:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3697:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3697:14:38"
															},
															"nodeType": "YulIf",
															"src": "3694:34:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3737:96:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3805:9:38"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3816:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3801:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3801:22:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3825:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "3763:37:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3763:70:38"
															},
															"variables": [
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "3741:8:38",
																	"type": ""
																},
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "3751:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3842:18:38",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "3852:8:38"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3869:18:38",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "3879:8:38"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3869:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3896:48:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3929:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3940:2:38",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3925:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3925:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3912:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3912:32:38"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3900:8:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3973:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3982:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3985:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3975:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3975:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3975:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3959:8:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3969:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3956:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3956:16:38"
															},
															"nodeType": "YulIf",
															"src": "3953:36:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3998:98:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4066:9:38"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4077:8:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4062:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4062:24:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4088:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4024:37:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4024:72:38"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "4002:8:38",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "4012:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4105:18:38",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "4115:8:38"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4105:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4132:18:38",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "4142:8:38"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "4132:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4159:49:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4192:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4203:3:38",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4188:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4188:19:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4175:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4175:33:38"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4163:8:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4223:8:38"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4233:2:38"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4220:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4220:16:38"
															},
															"nodeType": "YulIf",
															"src": "4217:36:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4262:86:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4318:9:38"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4329:8:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4314:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4314:24:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4340:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4288:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:60:38"
															},
															"variables": [
																{
																	"name": "value6_1",
																	"nodeType": "YulTypedName",
																	"src": "4266:8:38",
																	"type": ""
																},
																{
																	"name": "value7_1",
																	"nodeType": "YulTypedName",
																	"src": "4276:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4357:18:38",
															"value": {
																"name": "value6_1",
																"nodeType": "YulIdentifier",
																"src": "4367:8:38"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "4357:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4384:18:38",
															"value": {
																"name": "value7_1",
																"nodeType": "YulIdentifier",
																"src": "4394:8:38"
															},
															"variableNames": [
																{
																	"name": "value7",
																	"nodeType": "YulIdentifier",
																	"src": "4384:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3335:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3346:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3358:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3366:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3374:6:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3382:6:38",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "3390:6:38",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "3398:6:38",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "3406:6:38",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "3414:6:38",
														"type": ""
													}
												],
												"src": "3198:1210:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4570:538:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4617:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4626:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4629:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4619:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4619:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4619:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4591:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4600:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4587:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4587:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4612:3:38",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4583:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4583:33:38"
															},
															"nodeType": "YulIf",
															"src": "4580:53:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4642:39:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4671:9:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4652:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4652:29:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4642:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4690:48:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4723:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4734:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4719:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4719:18:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4700:18:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4700:38:38"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4690:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4747:42:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4774:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4785:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4770:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4770:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4757:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4757:32:38"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4747:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4798:42:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4825:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4836:2:38",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4821:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4821:18:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4808:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4808:32:38"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4798:6:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4849:47:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4880:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4891:3:38",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4876:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4876:19:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4863:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4863:33:38"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4853:6:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4939:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4948:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4951:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4941:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4941:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4941:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4911:6:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4919:18:38",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4908:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4908:30:38"
															},
															"nodeType": "YulIf",
															"src": "4905:50:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4964:84:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:38"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5031:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5016:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5016:22:38"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5040:7:38"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "4990:25:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "4990:58:38"
															},
															"variables": [
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "4968:8:38",
																	"type": ""
																},
																{
																	"name": "value5_1",
																	"nodeType": "YulTypedName",
																	"src": "4978:8:38",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5057:18:38",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "5067:8:38"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5057:6:38"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5084:18:38",
															"value": {
																"name": "value5_1",
																"nodeType": "YulIdentifier",
																"src": "5094:8:38"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "5084:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4496:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4507:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4519:6:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4527:6:38",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4535:6:38",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4543:6:38",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4551:6:38",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4559:6:38",
														"type": ""
													}
												],
												"src": "4413:695:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5242:198:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5252:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5264:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5275:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5260:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5260:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5252:4:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5287:52:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5297:42:38",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5291:2:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5355:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5370:6:38"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5378:2:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5366:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5366:15:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5348:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5348:34:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5402:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5413:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5398:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5398:18:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5422:6:38"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5430:2:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5418:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5418:15:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5391:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5391:43:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5391:43:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5203:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5214:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5222:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5233:4:38",
														"type": ""
													}
												],
												"src": "5113:327:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5574:119:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5584:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5596:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5607:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5592:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5592:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5584:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5626:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5637:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5619:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5619:25:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5664:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5675:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5660:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5660:18:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5680:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5653:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5653:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5653:34:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5535:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5546:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5554:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5565:4:38",
														"type": ""
													}
												],
												"src": "5445:248:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5825:241:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5835:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5847:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5858:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5843:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5835:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5877:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5892:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5900:66:38",
																				"type": "",
																				"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5888:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5888:79:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5870:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5870:98:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5870:98:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5988:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5999:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5984:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5984:18:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "6008:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6016:42:38",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6004:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6004:55:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5977:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "5977:83:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5977:83:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4_t_address__to_t_bytes4_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5786:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5797:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5805:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5816:4:38",
														"type": ""
													}
												],
												"src": "5698:368:38"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_decode_bytes4(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes4t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_bytes4(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_array_uint256_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_uint256_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value6_1, value7_1 := abi_decode_bytes_calldata(add(headStart, offset_2), dataEnd)\n        value6 := value6_1\n        value7 := value7_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes4_t_address__to_t_bytes4_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffff00000000000000000000000000000000000000000000000000000000))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}",
									"id": 38,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100745760003560e01c80634fcf3eca1161004e5780634fcf3eca14610249578063b93ea7ad14610269578063bc197c8114610289578063f23a6e61146102d15761007b565b806301ffc9a714610159578063150b7a021461018e5780631a9b2337146102045761007b565b3661007b57005b600436106101575760006100b26000357fffffffff0000000000000000000000000000000000000000000000000000000016610317565b905073ffffffffffffffffffffffffffffffffffffffff811615610155576000808273ffffffffffffffffffffffffffffffffffffffff166000366040516100fb9291906107b1565b600060405180830381855af49150503d8060008114610136576040519150601f19603f3d011682016040523d82523d6000602084013e61013b565b606091505b50915091508161014d57805160208201fd5b805160208201f35b505b005b34801561016557600080fd5b506101796101743660046107f6565b61036b565b60405190151581526020015b60405180910390f35b34801561019a57600080fd5b506101d36101a9366004610885565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610185565b34801561021057600080fd5b5061022461021f3660046107f6565b6104ed565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610185565b34801561025557600080fd5b506101576102643660046107f6565b6104f8565b34801561027557600080fd5b506101576102843660046108f4565b6105c8565b34801561029557600080fd5b506101d36102a436600461096c565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b3480156102dd57600080fd5b506101d36102ec366004610a27565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60006103657fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1207fffffffff000000000000000000000000000000000000000000000000000000008416610693565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fec6aba500000000000000000000000000000000000000000000000000000000014806103fe57507fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000145b8061044a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061049657507fffffffff0000000000000000000000000000000000000000000000000000000082167fc0ee0b8a00000000000000000000000000000000000000000000000000000000145b156104a357506001919050565b7f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610365565b600061036582610317565b33301461053e576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b600061054982610317565b73ffffffffffffffffffffffffffffffffffffffff16036105ba576040517f1c3812cc0000000000000000000000000000000000000000000000000000000081527fffffffff0000000000000000000000000000000000000000000000000000000082166004820152602401610535565b6105c58160006106f1565b50565b333014610609576040517fe1258894000000000000000000000000000000000000000000000000000000008152336004820152306024820152604401610535565b600061061483610317565b73ffffffffffffffffffffffffffffffffffffffff1614610685576040517f5b4d6d6a0000000000000000000000000000000000000000000000000000000081527fffffffff0000000000000000000000000000000000000000000000000000000083166004820152602401610535565b61068f82826106f1565b5050565b60008083836040516020016106b2929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b604080517fbe27a319efc8734e89e26ba4bc95f5c788584163b959f03fa04e2d7ab4b9a1206020808301919091527fffffffff000000000000000000000000000000000000000000000000000000008516828401819052835180840385018152606084018086528151919093012073ffffffffffffffffffffffffffffffffffffffff8616908190559152608082015290517f0d7fc113eaf016db4681a1ba86d083ce3e0961f321062a75ac2b0aeb33deeed19181900360a00190a15050565b8183823760009101908152919050565b80357fffffffff00000000000000000000000000000000000000000000000000000000811681146107f157600080fd5b919050565b60006020828403121561080857600080fd5b610811826107c1565b9392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146107f157600080fd5b60008083601f84011261084e57600080fd5b50813567ffffffffffffffff81111561086657600080fd5b60208301915083602082850101111561087e57600080fd5b9250929050565b60008060008060006080868803121561089d57600080fd5b6108a686610818565b94506108b460208701610818565b935060408601359250606086013567ffffffffffffffff8111156108d757600080fd5b6108e38882890161083c565b969995985093965092949392505050565b6000806040838503121561090757600080fd5b610910836107c1565b915061091e60208401610818565b90509250929050565b60008083601f84011261093957600080fd5b50813567ffffffffffffffff81111561095157600080fd5b6020830191508360208260051b850101111561087e57600080fd5b60008060008060008060008060a0898b03121561098857600080fd5b61099189610818565b975061099f60208a01610818565b9650604089013567ffffffffffffffff808211156109bc57600080fd5b6109c88c838d01610927565b909850965060608b01359150808211156109e157600080fd5b6109ed8c838d01610927565b909650945060808b0135915080821115610a0657600080fd5b50610a138b828c0161083c565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215610a4057600080fd5b610a4987610818565b9550610a5760208801610818565b94506040870135935060608701359250608087013567ffffffffffffffff811115610a8157600080fd5b610a8d89828a0161083c565b979a969950949750929593949250505056fea2646970667358221220e41b3c8b71dc52acf394b069c7c5362791390cf20814c0f6c9e7e28ff9b832d964736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x74 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4FCF3ECA GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x4FCF3ECA EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0xB93EA7AD EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x2D1 JUMPI PUSH2 0x7B JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x18E JUMPI DUP1 PUSH4 0x1A9B2337 EQ PUSH2 0x204 JUMPI PUSH2 0x7B JUMP JUMPDEST CALLDATASIZE PUSH2 0x7B JUMPI STOP JUMPDEST PUSH1 0x4 CALLDATASIZE LT PUSH2 0x157 JUMPI PUSH1 0x0 PUSH2 0xB2 PUSH1 0x0 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH2 0x317 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND ISZERO PUSH2 0x155 JUMPI PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0xFB SWAP3 SWAP2 SWAP1 PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x136 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x14D JUMPI DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD RETURN JUMPDEST POP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x165 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x179 PUSH2 0x174 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x36B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x1A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x885 JUMP JUMPDEST PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x224 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x185 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x255 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x264 CALLDATASIZE PUSH1 0x4 PUSH2 0x7F6 JUMP JUMPDEST PUSH2 0x4F8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x157 PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x8F4 JUMP JUMPDEST PUSH2 0x5C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x295 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x2A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x96C JUMP JUMPDEST PUSH32 0xBC197C8100000000000000000000000000000000000000000000000000000000 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1D3 PUSH2 0x2EC CALLDATASIZE PUSH1 0x4 PUSH2 0xA27 JUMP JUMPDEST PUSH32 0xF23A6E6100000000000000000000000000000000000000000000000000000000 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP5 AND PUSH2 0x693 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xEC6ABA5000000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x3FE JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x44A JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ JUMPDEST DUP1 PUSH2 0x496 JUMPI POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0xC0EE0B8A00000000000000000000000000000000000000000000000000000000 EQ JUMPDEST ISZERO PUSH2 0x4A3 JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ PUSH2 0x365 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x365 DUP3 PUSH2 0x317 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x53E JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x549 DUP3 PUSH2 0x317 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x1C3812CC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x535 JUMP JUMPDEST PUSH2 0x5C5 DUP2 PUSH1 0x0 PUSH2 0x6F1 JUMP JUMPDEST POP JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x609 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x535 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x614 DUP4 PUSH2 0x317 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5B4D6D6A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x535 JUMP JUMPDEST PUSH2 0x68F DUP3 DUP3 PUSH2 0x6F1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6B2 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xBE27A319EFC8734E89E26BA4BC95F5C788584163B959F03FA04E2D7AB4B9A120 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP6 AND DUP3 DUP5 ADD DUP2 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP6 ADD DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP1 DUP7 MSTORE DUP2 MLOAD SWAP2 SWAP1 SWAP4 ADD KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 AND SWAP1 DUP2 SWAP1 SSTORE SWAP2 MSTORE PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xD7FC113EAF016DB4681A1BA86D083CE3E0961F321062A75AC2B0AEB33DEEED1 SWAP2 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 LOG1 POP POP JUMP JUMPDEST DUP2 DUP4 DUP3 CALLDATACOPY PUSH1 0x0 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x811 DUP3 PUSH2 0x7C1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x7F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x84E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x89D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A6 DUP7 PUSH2 0x818 JUMP JUMPDEST SWAP5 POP PUSH2 0x8B4 PUSH1 0x20 DUP8 ADD PUSH2 0x818 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E3 DUP9 DUP3 DUP10 ADD PUSH2 0x83C JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x910 DUP4 PUSH2 0x7C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x91E PUSH1 0x20 DUP5 ADD PUSH2 0x818 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x939 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x951 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x87E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x988 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x991 DUP10 PUSH2 0x818 JUMP JUMPDEST SWAP8 POP PUSH2 0x99F PUSH1 0x20 DUP11 ADD PUSH2 0x818 JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x9BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C8 DUP13 DUP4 DUP14 ADD PUSH2 0x927 JUMP JUMPDEST SWAP1 SWAP9 POP SWAP7 POP PUSH1 0x60 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x9E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9ED DUP13 DUP4 DUP14 ADD PUSH2 0x927 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xA06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA13 DUP12 DUP3 DUP13 ADD PUSH2 0x83C JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0xA40 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA49 DUP8 PUSH2 0x818 JUMP JUMPDEST SWAP6 POP PUSH2 0xA57 PUSH1 0x20 DUP9 ADD PUSH2 0x818 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA8D DUP10 DUP3 DUP11 ADD PUSH2 0x83C JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 POP SWAP3 SWAP6 SWAP4 SWAP5 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 SHL EXTCODECOPY DUP12 PUSH18 0xDC52ACF394B069C7C5362791390CF20814C0 0xF6 0xC9 0xE7 0xE2 DUP16 0xF9 0xB8 ORIGIN 0xD9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "370:4644:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3935:1;3916:8;:20;3912:373;;3946:14;3963:18;3973:7;;;;3963:9;:18::i;:::-;3946:35;-1:-1:-1;3993:20:14;;;;3989:290;;4026:12;4040:19;4063:6;:19;;4083:8;;4063:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4025:67;;;;4133:7;4123:86;;4189:6;4183:13;4176:4;4168:6;4164:17;4157:40;4123:86;4253:6;4247:13;4240:4;4232:6;4228:17;4221:40;3989:290;3938:347;3912:373;370:4644;4591:421;;;;;;;;;;-1:-1:-1;4591:421:14;;;;;:::i;:::-;;:::i;:::-;;;868:14:38;;861:22;843:41;;831:2;816:18;4591:421:14;;;;;;;;3646:167;;;;;;;;;;-1:-1:-1;3646:167:14;;;;;:::i;:::-;3771:37;3646:167;;;;;;;;;;;2253:66:38;2241:79;;;2223:98;;2211:2;2196:18;3646:167:14;2079:248:38;861:125:14;;;;;;;;;;-1:-1:-1;861:125:14;;;;;:::i;:::-;;:::i;:::-;;;2508:42:38;2496:55;;;2478:74;;2466:2;2451:18;861:125:14;2332:226:38;1740:201:14;;;;;;;;;;-1:-1:-1;1740:201:14;;;;;:::i;:::-;;:::i;1272:229::-;;;;;;;;;;-1:-1:-1;1272:229:14;;;;;:::i;:::-;;:::i;3254:234::-;;;;;;;;;;-1:-1:-1;3254:234:14;;;;;:::i;:::-;3440:43;3254:234;;;;;;;;;;;2869:202;;;;;;;;;;-1:-1:-1;2869:202:14;;;;;:::i;:::-;3028:38;2869:202;;;;;;;;;2128:165;2188:7;2234:51;606:66;2234:51;;;:28;:51::i;:::-;2226:60;2128:165;-1:-1:-1;;2128:165:14:o;4591:421::-;4677:4;4700:46;;;4716:30;4700:46;;:106;;-1:-1:-1;4756:50:14;;;4772:34;4756:50;4700:106;:165;;;-1:-1:-1;4816:49:14;;;4832:33;4816:49;4700:165;:224;;;-1:-1:-1;4875:49:14;;;4891:33;4875:49;4700:224;4689:268;;;-1:-1:-1;4946:4:14;;4591:421;-1:-1:-1;4591:421:14:o;4689:268::-;725:31:12;709:47;;;;4970:37:14;613:148:12;861:125:14;938:7;960:21;970:10;960:9;:21::i;1740:201::-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;5348:34:38;255:4:18;5398:18:38;;;5391:43;5260:18;;222:39:18;;;;;;;;174:94;1857:1:14::1;1824:21;1834:10:::0;1824:9:::1;:21::i;:::-;:35;;::::0;1820:76:::1;;1868:28;::::0;::::1;::::0;;2253:66:38;2241:79;;1868:28:14::1;::::0;::::1;2223:98:38::0;2196:18;;1868:28:14::1;2079:248:38::0;1820:76:14::1;1902:34;1913:10;1933:1;1902:10;:34::i;:::-;1740:201:::0;:::o;1272:229::-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;5348:34:38;255:4:18;5398:18:38;;;5391:43;5260:18;;222:39:18;5113:327:38;174:94:18;1411:1:14::1;1378:21;1388:10:::0;1378:9:::1;:21::i;:::-;:35;;;1374:77;;1422:29;::::0;::::1;::::0;;2253:66:38;2241:79;;1422:29:14::1;::::0;::::1;2223:98:38::0;2196:18;;1422:29:14::1;2079:248:38::0;1374:77:14::1;1457:39;1468:10;1480:15;1457:10;:39::i;:::-;1272:229:::0;;:::o;490:187:19:-;568:11;587;622:4;628:7;611:25;;;;;;;;5619::38;;;5675:2;5660:18;;5653:34;5607:2;5592:18;;5445:248;611:25:19;;;;;;;;;;;;;;601:36;;611:25;601:36;;;;661:10;;490:187;-1:-1:-1;;;;490:187:19:o;2466:230:14:-;420:25:19;;;606:66:14;420:25:19;;;;5619::38;;;;2544:96:14;;;5660:18:38;;;5653:34;;;420:25:19;;;;;;;;;5592:18:38;;;420:25:19;;;410:36;;;;;;;2605:33:14;;;463:17:19;;;;5870:98:38;;5984:18;;;5977:83;2651:40:14;;;;;;;5843:18:38;2651:40:14;;;2466:230;;:::o;14:271:38:-;197:6;189;184:3;171:33;153:3;223:16;;248:13;;;223:16;14:271;-1:-1:-1;14:271:38:o;290:219::-;357:20;;417:66;406:78;;396:89;;386:117;;499:1;496;489:12;386:117;290:219;;;:::o;514:184::-;572:6;625:2;613:9;604:7;600:23;596:32;593:52;;;641:1;638;631:12;593:52;664:28;682:9;664:28;:::i;:::-;654:38;514:184;-1:-1:-1;;;514:184:38:o;895:196::-;963:20;;1023:42;1012:54;;1002:65;;992:93;;1081:1;1078;1071:12;1096:347;1147:8;1157:6;1211:3;1204:4;1196:6;1192:17;1188:27;1178:55;;1229:1;1226;1219:12;1178:55;-1:-1:-1;1252:20:38;;1295:18;1284:30;;1281:50;;;1327:1;1324;1317:12;1281:50;1364:4;1356:6;1352:17;1340:29;;1416:3;1409:4;1400:6;1392;1388:19;1384:30;1381:39;1378:59;;;1433:1;1430;1423:12;1378:59;1096:347;;;;;:::o;1448:626::-;1545:6;1553;1561;1569;1577;1630:3;1618:9;1609:7;1605:23;1601:33;1598:53;;;1647:1;1644;1637:12;1598:53;1670:29;1689:9;1670:29;:::i;:::-;1660:39;;1718:38;1752:2;1741:9;1737:18;1718:38;:::i;:::-;1708:48;;1803:2;1792:9;1788:18;1775:32;1765:42;;1858:2;1847:9;1843:18;1830:32;1885:18;1877:6;1874:30;1871:50;;;1917:1;1914;1907:12;1871:50;1956:58;2006:7;1997:6;1986:9;1982:22;1956:58;:::i;:::-;1448:626;;;;-1:-1:-1;1448:626:38;;-1:-1:-1;2033:8:38;;1930:84;1448:626;-1:-1:-1;;;1448:626:38:o;2563:258::-;2630:6;2638;2691:2;2679:9;2670:7;2666:23;2662:32;2659:52;;;2707:1;2704;2697:12;2659:52;2730:28;2748:9;2730:28;:::i;:::-;2720:38;;2777;2811:2;2800:9;2796:18;2777:38;:::i;:::-;2767:48;;2563:258;;;;;:::o;2826:367::-;2889:8;2899:6;2953:3;2946:4;2938:6;2934:17;2930:27;2920:55;;2971:1;2968;2961:12;2920:55;-1:-1:-1;2994:20:38;;3037:18;3026:30;;3023:50;;;3069:1;3066;3059:12;3023:50;3106:4;3098:6;3094:17;3082:29;;3166:3;3159:4;3149:6;3146:1;3142:14;3134:6;3130:27;3126:38;3123:47;3120:67;;;3183:1;3180;3173:12;3198:1210;3358:6;3366;3374;3382;3390;3398;3406;3414;3467:3;3455:9;3446:7;3442:23;3438:33;3435:53;;;3484:1;3481;3474:12;3435:53;3507:29;3526:9;3507:29;:::i;:::-;3497:39;;3555:38;3589:2;3578:9;3574:18;3555:38;:::i;:::-;3545:48;;3644:2;3633:9;3629:18;3616:32;3667:18;3708:2;3700:6;3697:14;3694:34;;;3724:1;3721;3714:12;3694:34;3763:70;3825:7;3816:6;3805:9;3801:22;3763:70;:::i;:::-;3852:8;;-1:-1:-1;3737:96:38;-1:-1:-1;3940:2:38;3925:18;;3912:32;;-1:-1:-1;3956:16:38;;;3953:36;;;3985:1;3982;3975:12;3953:36;4024:72;4088:7;4077:8;4066:9;4062:24;4024:72;:::i;:::-;4115:8;;-1:-1:-1;3998:98:38;-1:-1:-1;4203:3:38;4188:19;;4175:33;;-1:-1:-1;4220:16:38;;;4217:36;;;4249:1;4246;4239:12;4217:36;;4288:60;4340:7;4329:8;4318:9;4314:24;4288:60;:::i;:::-;3198:1210;;;;-1:-1:-1;3198:1210:38;;-1:-1:-1;3198:1210:38;;;;;;4367:8;-1:-1:-1;;;3198:1210:38:o;4413:695::-;4519:6;4527;4535;4543;4551;4559;4612:3;4600:9;4591:7;4587:23;4583:33;4580:53;;;4629:1;4626;4619:12;4580:53;4652:29;4671:9;4652:29;:::i;:::-;4642:39;;4700:38;4734:2;4723:9;4719:18;4700:38;:::i;:::-;4690:48;;4785:2;4774:9;4770:18;4757:32;4747:42;;4836:2;4825:9;4821:18;4808:32;4798:42;;4891:3;4880:9;4876:19;4863:33;4919:18;4911:6;4908:30;4905:50;;;4951:1;4948;4941:12;4905:50;4990:58;5040:7;5031:6;5020:9;5016:22;4990:58;:::i;:::-;4413:695;;;;-1:-1:-1;4413:695:38;;-1:-1:-1;4413:695:38;;5067:8;;4413:695;-1:-1:-1;;;4413:695:38:o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"HookAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"HookDoesNotExist\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"DefinedHook\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"addHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"readHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"removeHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addHook(bytes4,address)\":{\"details\":\"Can't overwrite hooks that are part of the main module (those defined below)\",\"params\":{\"_implementation\":\"Hook implementation contract\",\"_signature\":\"Signature function linked to the hook\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))`\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))`\"}},\"onERC721Received(address,address,uint256,bytes)\":{\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`\"}},\"readHook(bytes4)\":{\"params\":{\"_signature\":\"Signature function\"},\"returns\":{\"_0\":\"The address of the implementation hook, address(0) if none\"}},\"removeHook(bytes4)\":{\"details\":\"Can't remove hooks that are part of the main module (those defined below)      without upgrading the wallet\",\"params\":{\"_signature\":\"Signature function linked to the hook\"}},\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addHook(bytes4,address)\":{\"notice\":\"Adds a new hook to handle a given function selector\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Handle the receipt of multiple ERC1155 token types.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"notice\":\"Handle the receipt of a single ERC1155 token type.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"notice\":\"Handle the receipt of a single ERC721 token.\"},\"readHook(bytes4)\":{\"notice\":\"Reads the implementation hook of a signature\"},\"removeHook(bytes4)\":{\"notice\":\"Removes a registered hook\"},\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleHooks.sol\":\"ModuleHooks\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/receivers/IERC1155Receiver.sol\":{\"keccak256\":\"0x934ce83f4abb6e487c5092af8ff0b6ef5ca697b893fa4d24b3d63b994441bf62\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2fef087d5a188a3b96a3bf0ddae611a802dfd6b72dbf92895e9d3512c77b70ff\",\"dweb:/ipfs/QmTsvU6DDK7dJAddyVCMe81oa2bCgmcz4dibbnwGQdmKDt\"]},\"contracts/interfaces/receivers/IERC223Receiver.sol\":{\"keccak256\":\"0x27f58bb8b5a9b976b39a92c9c989a7d76476a121ca60827ff01d4c69c3839f32\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://83af2e3d4e7f42aab73a7ed8f02b9830817f6f621ac17dc9d09d3cccbf2b769f\",\"dweb:/ipfs/QmaBecBuHUtskh5hoKf76wu5wf8aW2rX7oxCtpbLid8vRV\"]},\"contracts/interfaces/receivers/IERC721Receiver.sol\":{\"keccak256\":\"0x20623593e9b812c4ff01da0d9abf3540986f3ce8c4a19137ed42d8d9ee7ec5d3\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://da617c8301ba39ac038d62fd7ae25a8b5e1a076924ef843e55c912ac5677b9f4\",\"dweb:/ipfs/Qmf71tpo1CkuZL5pHXD4TtAxiCeHiDJ3hK5hM7WDEKUzds\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleHooks.sol\":{\"keccak256\":\"0xdb8a6a41212d49fc5d8b28ed8e6aebebffed0025ebfc6d712513d49b9c027821\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8d68ef6487f687183d0f0ca8c93c72a1444bffc530a56cc558d4c3f5a4dff852\",\"dweb:/ipfs/QmWNfkgJAAXrV3VkoenNv5PaSoZonWz4kDZR8nP24rXFsb\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleHooks.sol\":{\"keccak256\":\"0x12a20e1fd2840bac0efd8bd43de7bb22053d53c7dc770b9c4c4fcdfdcca35185\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b93da40ad8403203e47f995dc23762706515dc5e41bdb6a6a82747bd378294dc\",\"dweb:/ipfs/QmU1KvoVpWbDLnaK18H9NJ799qTJrFTktXc3vkTpd39X9W\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"addHook(bytes4,address)": {
								"notice": "Adds a new hook to handle a given function selector"
							},
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"notice": "Handle the receipt of multiple ERC1155 token types."
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"notice": "Handle the receipt of a single ERC1155 token type."
							},
							"onERC721Received(address,address,uint256,bytes)": {
								"notice": "Handle the receipt of a single ERC721 token."
							},
							"readHook(bytes4)": {
								"notice": "Reads the implementation hook of a signature"
							},
							"removeHook(bytes4)": {
								"notice": "Removes a registered hook"
							},
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleIPFS.sol": {
				"ModuleIPFS": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "IPFSRootUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ipfsRoot",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ipfsRootBytes32",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								}
							],
							"name": "updateIPFSRoot",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506105dd806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80638efa644114610046578063a38cef1914610064578063c71f1f9614610079575b600080fd5b61004e61008f565b60405161005b9190610455565b60405180910390f35b6100776100723660046104a6565b610110565b005b610081610161565b60405190815260200161005b565b60606100ec6100e761009f610161565b6040517f017012200000000000000000000000000000000000000000000000000000000060208201526024810191909152604401604051602081830303815290604052610190565b6103a9565b6040516020016100fc91906104bf565b604051602081830303815290604052905090565b333014610155576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440160405180910390fd5b61015e816103d2565b50565b600061018b7f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d0335490565b905090565b8051606090600381901b60006005600483010467ffffffffffffffff8111156101bb576101bb610504565b6040519080825280601f01601f1916602001820160405280156101e5576020820181803683370190505b5090506000806000805b868110156102f95788818151811061020957610209610533565b01602001516008948501949390931b60f89390931c92909217915b600584106102f1576040805180820190915260208082527f6162636465666768696a6b6c6d6e6f707172737475767778797a323334353637818301527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb90950194601f85871c1690811061029a5761029a610533565b602001015160f81c60f81b8583815181106102b7576102b7610533565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600190910190610224565b6001016101ef565b50821561039d576040518060400160405280602081526020017f6162636465666768696a6b6c6d6e6f707172737475767778797a3233343536378152508360050383901b601f168151811061035057610350610533565b602001015160f81c60f81b84828151811061036d5761036d610533565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b50919695505050505050565b6060816040516020016103bc9190610562565b6040516020818303038152906040529050919050565b6103fb7f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d033829055565b6040518181527f20d3ef1b5738a9f6d7beae515432206e7a8e2740ca6dcf46a952190ad01bcb519060200160405180910390a150565b60005b8381101561044c578181015183820152602001610434565b50506000910152565b6020815260008251806020840152610474816040850160208701610431565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156104b857600080fd5b5035919050565b7f697066733a2f2f000000000000000000000000000000000000000000000000008152600082516104f7816007850160208701610431565b9190910160070192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f620000000000000000000000000000000000000000000000000000000000000081526000825161059a816001850160208701610431565b919091016001019291505056fea264697066735822122007fbc61b6942848fa0f0028e8ac2153229352d4ab3513be6a00a23642513613764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5DD DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EFA6441 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA38CEF19 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xC71F1F96 EQ PUSH2 0x79 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x81 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5B JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEC PUSH2 0xE7 PUSH2 0x9F PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x170122000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x190 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x155 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E DUP2 PUSH2 0x3D2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x3 DUP2 SWAP1 SHL PUSH1 0x0 PUSH1 0x5 PUSH1 0x4 DUP4 ADD DIV PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB JUMPI PUSH2 0x1BB PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI DUP9 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x209 JUMPI PUSH2 0x209 PUSH2 0x533 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x8 SWAP5 DUP6 ADD SWAP5 SWAP4 SWAP1 SWAP4 SHL PUSH1 0xF8 SWAP4 SWAP1 SWAP4 SHR SWAP3 SWAP1 SWAP3 OR SWAP2 JUMPDEST PUSH1 0x5 DUP5 LT PUSH2 0x2F1 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 DUP4 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB SWAP1 SWAP6 ADD SWAP5 PUSH1 0x1F DUP6 DUP8 SHR AND SWAP1 DUP2 LT PUSH2 0x29A JUMPI PUSH2 0x29A PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2B7 JUMPI PUSH2 0x2B7 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1EF JUMP JUMPDEST POP DUP3 ISZERO PUSH2 0x39D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 MSTORE POP DUP4 PUSH1 0x5 SUB DUP4 SWAP1 SHL PUSH1 0x1F AND DUP2 MLOAD DUP2 LT PUSH2 0x350 JUMPI PUSH2 0x350 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x36D JUMPI PUSH2 0x36D PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FB PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x20D3EF1B5738A9F6D7BEAE515432206E7A8E2740CA6DCF46A952190AD01BCB51 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x44C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x434 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x474 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x697066733A2F2F00000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x4F7 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x431 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x6200000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x59A DUP2 PUSH1 0x1 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x431 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xFB 0xC6 SHL PUSH10 0x42848FA0F0028E8AC215 ORIGIN 0x29 CALLDATALOAD 0x2D 0x4A 0xB3 MLOAD EXTCODESIZE 0xE6 LOG0 EXP 0x23 PUSH5 0x2513613764 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "164:971:15:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_updateIPFSRoot_1853": {
									"entryPoint": 978,
									"id": 1853,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bytesToBase32_3980": {
									"entryPoint": 400,
									"id": 3980,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@ipfsRootBytes32_1798": {
									"entryPoint": 353,
									"id": 1798,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ipfsRoot_1824": {
									"entryPoint": 143,
									"id": 1824,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@prefixBase32_3764": {
									"entryPoint": 937,
									"id": 3764,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@readBytes32_2070": {
									"entryPoint": null,
									"id": 2070,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateIPFSRoot_1836": {
									"entryPoint": 272,
									"id": 1836,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@writeBytes32_2061": {
									"entryPoint": null,
									"id": 2061,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 1190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_26b70929d2fa0780c1c1464bfedd403dbaa218f98edb5cf8a3ef7b664ee22408_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 1378,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1109,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1073,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3254:38",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:38",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:184:38",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "90:10:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "99:1:38",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "94:1:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "159:63:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "184:3:38"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "189:1:38"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "180:3:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "180:11:38"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "203:3:38"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "208:1:38"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "199:3:38"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "199:11:38"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "193:5:38"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "193:18:38"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:39:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:39:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "120:1:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "123:6:38"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "117:2:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "117:13:38"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "131:19:38",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "133:15:38",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "142:1:38"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "145:2:38",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "138:3:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "138:10:38"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "133:1:38"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "113:3:38",
																"statements": []
															},
															"src": "109:113:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "242:3:38"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "247:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "238:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "238:16:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "256:1:38",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "231:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:27:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "231:27:38"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "58:3:38",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "63:3:38",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:38",
														"type": ""
													}
												],
												"src": "14:250:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "390:334:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "407:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:21:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "400:21:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "430:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "450:6:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "444:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "444:13:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "434:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "477:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "488:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "473:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "473:18:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "493:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "466:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "466:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "466:34:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "548:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "556:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "544:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "544:15:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "565:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "576:2:38",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "561:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "561:18:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "581:6:38"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "509:34:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "509:79:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "509:79:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "597:121:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "613:9:38"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "632:6:38"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "640:2:38",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "628:3:38"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "628:15:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "645:66:38",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "624:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "624:88:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "609:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "609:104:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "605:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:113:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "597:4:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "359:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "370:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "381:4:38",
														"type": ""
													}
												],
												"src": "269:455:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "799:110:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "845:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "854:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "857:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "847:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "847:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "847:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "820:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "829:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "816:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "816:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "841:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "812:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "812:32:38"
															},
															"nodeType": "YulIf",
															"src": "809:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "870:33:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "893:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "880:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "880:23:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "870:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "765:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "776:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "788:6:38",
														"type": ""
													}
												],
												"src": "729:180:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1015:76:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1025:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1078:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1060:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1060:25:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "984:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "995:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1006:4:38",
														"type": ""
													}
												],
												"src": "914:177:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1316:159:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1333:3:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:66:38",
																		"type": "",
																		"value": "0x0170122000000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1326:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1326:79:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1326:79:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1425:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1430:1:38",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:11:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1434:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1414:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1414:27:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1414:27:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1450:19:38",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1461:3:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1466:2:38",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1457:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1457:12:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1450:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_26b70929d2fa0780c1c1464bfedd403dbaa218f98edb5cf8a3ef7b664ee22408_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1292:3:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1297:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1308:3:38",
														"type": ""
													}
												],
												"src": "1096:379:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1720:197:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1737:3:38"
																	},
																	{
																		"hexValue": "697066733a2f2f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1742:9:38",
																		"type": "",
																		"value": "ipfs://"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1730:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1730:22:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1730:22:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1761:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1781:6:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1775:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1775:13:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1765:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1836:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1844:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1832:17:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1855:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1860:1:38",
																				"type": "",
																				"value": "7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1851:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1851:11:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1864:6:38"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1797:34:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1797:74:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1797:74:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1880:31:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1895:3:38"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1900:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1891:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1891:16:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1909:1:38",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1887:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1887:24:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1880:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1696:3:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1701:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1712:3:38",
														"type": ""
													}
												],
												"src": "1480:437:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2051:198:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2061:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2073:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2084:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2069:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2069:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2061:4:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2096:52:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2106:42:38",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2100:2:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2164:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2179:6:38"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2187:2:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2175:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2175:15:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2157:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2157:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2157:34:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2211:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2222:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2207:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2207:18:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2231:6:38"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2239:2:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2227:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2227:15:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2200:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2200:43:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2200:43:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2012:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2023:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2031:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2042:4:38",
														"type": ""
													}
												],
												"src": "1922:327:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2286:152:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2303:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2306:77:38",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2296:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2296:88:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2296:88:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2400:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2403:4:38",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2393:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2393:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2393:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2424:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2427:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2417:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2417:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2417:15:38"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2254:184:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2475:152:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2492:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2495:77:38",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2485:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2485:88:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2485:88:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2589:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2592:4:38",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2582:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2582:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2582:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2613:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2616:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2606:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2606:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2606:15:38"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2443:184:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2664:152:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2681:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2684:77:38",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2674:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2674:88:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2674:88:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2778:1:38",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2781:4:38",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2771:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2771:15:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2802:1:38",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2805:4:38",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2795:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "2795:15:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2795:15:38"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2632:184:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3061:191:38",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3078:3:38"
																	},
																	{
																		"hexValue": "62",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3083:3:38",
																		"type": "",
																		"value": "b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3071:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3071:16:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3071:16:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3096:27:38",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3116:6:38"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3110:5:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:13:38"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3100:6:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3171:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3179:4:38",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3167:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3167:17:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3190:3:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3195:1:38",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3186:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3186:11:38"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3199:6:38"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "3132:34:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3132:74:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3132:74:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3215:31:38",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3230:3:38"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3235:6:38"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3226:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3226:16:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3244:1:38",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3222:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "3222:24:38"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3215:3:38"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3037:3:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3042:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3053:3:38",
														"type": ""
													}
												],
												"src": "2821:431:38"
											}
										]
									},
									"contents": "{\n    { }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory_with_cleanup(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_26b70929d2fa0780c1c1464bfedd403dbaa218f98edb5cf8a3ef7b664ee22408_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x0170122000000000000000000000000000000000000000000000000000000000)\n        mstore(add(pos, 4), value0)\n        end := add(pos, 36)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_66f0790b1cbe0dcac007f07341b00cafe2bda254914729058b5209e04b702afe_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"ipfs://\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 7), length)\n        end := add(add(pos, length), 7)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, \"b\")\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), add(pos, 1), length)\n        end := add(add(pos, length), 1)\n    }\n}",
									"id": 38,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80638efa644114610046578063a38cef1914610064578063c71f1f9614610079575b600080fd5b61004e61008f565b60405161005b9190610455565b60405180910390f35b6100776100723660046104a6565b610110565b005b610081610161565b60405190815260200161005b565b60606100ec6100e761009f610161565b6040517f017012200000000000000000000000000000000000000000000000000000000060208201526024810191909152604401604051602081830303815290604052610190565b6103a9565b6040516020016100fc91906104bf565b604051602081830303815290604052905090565b333014610155576040517fe125889400000000000000000000000000000000000000000000000000000000815233600482015230602482015260440160405180910390fd5b61015e816103d2565b50565b600061018b7f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d0335490565b905090565b8051606090600381901b60006005600483010467ffffffffffffffff8111156101bb576101bb610504565b6040519080825280601f01601f1916602001820160405280156101e5576020820181803683370190505b5090506000806000805b868110156102f95788818151811061020957610209610533565b01602001516008948501949390931b60f89390931c92909217915b600584106102f1576040805180820190915260208082527f6162636465666768696a6b6c6d6e6f707172737475767778797a323334353637818301527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb90950194601f85871c1690811061029a5761029a610533565b602001015160f81c60f81b8583815181106102b7576102b7610533565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600190910190610224565b6001016101ef565b50821561039d576040518060400160405280602081526020017f6162636465666768696a6b6c6d6e6f707172737475767778797a3233343536378152508360050383901b601f168151811061035057610350610533565b602001015160f81c60f81b84828151811061036d5761036d610533565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053505b50919695505050505050565b6060816040516020016103bc9190610562565b6040516020818303038152906040529050919050565b6103fb7f0eecac93ced8722d209199364cda3bc33da3bc3a23daef6be49ebd780511d033829055565b6040518181527f20d3ef1b5738a9f6d7beae515432206e7a8e2740ca6dcf46a952190ad01bcb519060200160405180910390a150565b60005b8381101561044c578181015183820152602001610434565b50506000910152565b6020815260008251806020840152610474816040850160208701610431565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000602082840312156104b857600080fd5b5035919050565b7f697066733a2f2f000000000000000000000000000000000000000000000000008152600082516104f7816007850160208701610431565b9190910160070192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f620000000000000000000000000000000000000000000000000000000000000081526000825161059a816001850160208701610431565b919091016001019291505056fea264697066735822122007fbc61b6942848fa0f0028e8ac2153229352d4ab3513be6a00a23642513613764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8EFA6441 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0xA38CEF19 EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0xC71F1F96 EQ PUSH2 0x79 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x455 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0x72 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A6 JUMP JUMPDEST PUSH2 0x110 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x81 PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5B JUMP JUMPDEST PUSH1 0x60 PUSH2 0xEC PUSH2 0xE7 PUSH2 0x9F PUSH2 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x170122000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0x190 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFC SWAP2 SWAP1 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x155 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15E DUP2 PUSH2 0x3D2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18B PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH1 0x3 DUP2 SWAP1 SHL PUSH1 0x0 PUSH1 0x5 PUSH1 0x4 DUP4 ADD DIV PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BB JUMPI PUSH2 0x1BB PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1E5 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST DUP7 DUP2 LT ISZERO PUSH2 0x2F9 JUMPI DUP9 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x209 JUMPI PUSH2 0x209 PUSH2 0x533 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0x8 SWAP5 DUP6 ADD SWAP5 SWAP4 SWAP1 SWAP4 SHL PUSH1 0xF8 SWAP4 SWAP1 SWAP4 SHR SWAP3 SWAP1 SWAP3 OR SWAP2 JUMPDEST PUSH1 0x5 DUP5 LT PUSH2 0x2F1 JUMPI PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP1 DUP3 MSTORE PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 DUP4 ADD MSTORE PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB SWAP1 SWAP6 ADD SWAP5 PUSH1 0x1F DUP6 DUP8 SHR AND SWAP1 DUP2 LT PUSH2 0x29A JUMPI PUSH2 0x29A PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x2B7 JUMPI PUSH2 0x2B7 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x224 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1EF JUMP JUMPDEST POP DUP3 ISZERO PUSH2 0x39D JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6162636465666768696A6B6C6D6E6F707172737475767778797A323334353637 DUP2 MSTORE POP DUP4 PUSH1 0x5 SUB DUP4 SWAP1 SHL PUSH1 0x1F AND DUP2 MLOAD DUP2 LT PUSH2 0x350 JUMPI PUSH2 0x350 PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x36D JUMPI PUSH2 0x36D PUSH2 0x533 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST POP SWAP2 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3FB PUSH32 0xEECAC93CED8722D209199364CDA3BC33DA3BC3A23DAEF6BE49EBD780511D033 DUP3 SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH32 0x20D3EF1B5738A9F6D7BEAE515432206E7A8E2740CA6DCF46A952190AD01BCB51 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x44C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x434 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x474 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x431 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x697066733A2F2F00000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x4F7 DUP2 PUSH1 0x7 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x431 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x7 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x6200000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH2 0x59A DUP2 PUSH1 0x1 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x431 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SMOD 0xFB 0xC6 SHL PUSH10 0x42848FA0F0028E8AC215 ORIGIN 0x29 CALLDATALOAD 0x2D 0x4A 0xB3 MLOAD EXTCODESIZE 0xE6 LOG0 EXP 0x23 PUSH5 0x2513613764 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "164:971:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;562:332;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;898:90;;;;;;:::i;:::-;;:::i;:::-;;443:115;;;:::i;:::-;;;1060:25:38;;;1048:2;1033:18;443:115:15;914:177:38;562:332:15;603:13;690:185;724:141;822:17;:15;:17::i;:::-;761:92;;1338:66:38;761:92:15;;;1326:79:38;1421:11;;;1414:27;;;;1457:12;;761:92:15;;;;;;;;;;;;724:23;:141::i;:::-;690:22;:185::i;:::-;645:238;;;;;;;;:::i;:::-;;;;;;;;;;;;;624:265;;562:332;:::o;898:90::-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;2157:34:38;255:4:18;2207:18:38;;;2200:43;2069:18;;222:39:18;;;;;;;174:94;961:22:15::1;977:5;961:15;:22::i;:::-;898:90:::0;:::o;443:115::-;491:7;513:40;371:66;290:11:19;;195:112;513:40:15;506:47;;443:115;:::o;1792:810:36:-;1902:13;;1859;;1950:1;1935:16;;;1880:19;2076:1;2071;2066:6;;2065:12;2055:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2055:23:36;;2029:49;;2087:12;2111:14;2137:15;2170:9;2165:280;2189:11;2185:1;:15;2165:280;;;2248:6;2255:1;2248:9;;;;;;;;:::i;:::-;;;;;2237:1;2268:9;;;;2227:11;;;;2248:9;;;;;2226:32;;;;;2288:149;2303:1;2295:4;:9;2288:149;;2368:11;;;;;;;;;;;;;;;;;;2318:9;;;;;2399:4;2381:14;;;2380:23;;2368:36;;;;;;:::i;:::-;;;;;;;;;2339:10;2350:7;2339:19;;;;;;;;:::i;:::-;;;;:66;;;;;;;;;;-1:-1:-1;2417:9:36;;;;;2288:149;;;2202:3;;2165:280;;;-1:-1:-1;2457:8:36;;2453:105;;2506:11;;;;;;;;;;;;;;;;;2534:4;2530:1;:8;2519:6;:20;;2543:4;2518:29;2506:42;;;;;;;;:::i;:::-;;;;;;;;;2477:10;2488:7;2477:19;;;;;;;;:::i;:::-;;;;:72;;;;;;;;;;;2453:105;-1:-1:-1;2580:10:36;;1792:810;-1:-1:-1;;;;;;1792:810:36:o;823:139::-;891:13;948:7;926:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;912:45;;823:139;;;:::o;992:141:15:-;1047:48;371:66;1089:5;167:18:19;;91:100;1047:48:15;1106:22;;1060:25:38;;;1106:22:15;;1048:2:38;1033:18;1106:22:15;;;;;;;992:141;:::o;14:250:38:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:38;238:16;;231:27;14:250::o;269:455::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;640:2;628:15;645:66;624:88;609:104;;;;715:2;605:113;;269:455;-1:-1:-1;;269:455:38:o;729:180::-;788:6;841:2;829:9;820:7;816:23;812:32;809:52;;;857:1;854;847:12;809:52;-1:-1:-1;880:23:38;;729:180;-1:-1:-1;729:180:38:o;1480:437::-;1742:9;1737:3;1730:22;1712:3;1781:6;1775:13;1797:74;1864:6;1860:1;1855:3;1851:11;1844:4;1836:6;1832:17;1797:74;:::i;:::-;1891:16;;;;1909:1;1887:24;;1480:437;-1:-1:-1;;1480:437:38:o;2443:184::-;2495:77;2492:1;2485:88;2592:4;2589:1;2582:15;2616:4;2613:1;2606:15;2632:184;2684:77;2681:1;2674:88;2781:4;2778:1;2771:15;2805:4;2802:1;2795:15;2821:431;3083:3;3078;3071:16;3053:3;3116:6;3110:13;3132:74;3199:6;3195:1;3190:3;3186:11;3179:4;3171:6;3167:17;3132:74;:::i;:::-;3226:16;;;;3244:1;3222:24;;2821:431;-1:-1:-1;;2821:431:38:o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"IPFSRootUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ipfsRoot\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ipfsRootBytes32\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"}],\"name\":\"updateIPFSRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleIPFS.sol\":\"ModuleIPFS\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleIPFS.sol\":{\"keccak256\":\"0xecb4e3d42517d00de4520d8285a5d70babf208ecb78623dbbecf77dff672d225\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://021147a411bb34b171621d0d1d3cf050852a3a4290c6ade44cca9fba795f5b15\",\"dweb:/ipfs/QmWqDWoc3CsTh5ktsAqn6fBK18RctAVp1SfZsSGWvkACDa\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/utils/LibString.sol\":{\"keccak256\":\"0x18662322f6ce8c4aea601ec11fc7631c843f9bf59dd2526d27db0fef3b2d81b1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://77cc33818f1bbda0d42588d0dd4959a2db288cb1a934d7e710a2923da55cf21e\",\"dweb:/ipfs/QmNR1U27FdvRQGZvrx3hMJqCUsF6NYqziemsVvZEjk767t\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleNonce.sol": {
				"ModuleNonce": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_provided",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								}
							],
							"name": "BadNonce",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_newNonce",
									"type": "uint256"
								}
							],
							"name": "NonceChange",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "nonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_space",
									"type": "uint256"
								}
							],
							"name": "readNonce",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"nonce()": {
								"details": "The default nonce space is 0x00",
								"returns": {
									"_0": "The next nonce"
								}
							},
							"readNonce(uint256)": {
								"params": {
									"_space": "Nonce space, each space keeps an independent nonce count"
								},
								"returns": {
									"_0": "The next nonce"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610158806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638c3f55631461003b578063affed0e014610060575b600080fd5b61004e610049366004610109565b610068565b60405190815260200160405180910390f35b61004e61009a565b60006100947f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e836100ab565b92915050565b60006100a66000610068565b905090565b60008083836040516020016100ca929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b60006020828403121561011b57600080fd5b503591905056fea2646970667358221220f557a519dc689ed76459202ddd32cda75e96f1dd5edf1917375caee224f1ff2264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x158 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x60 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x109 JUMP JUMPDEST PUSH2 0x68 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94 PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0xAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6 PUSH1 0x0 PUSH2 0x68 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 JUMPI 0xA5 NOT 0xDC PUSH9 0x9ED76459202DDD32CD 0xA7 0x5E SWAP7 CALL 0xDD 0x5E 0xDF NOT OR CALLDATACOPY 0x5C 0xAE 0xE2 0x24 CALL SELFDESTRUCT 0x22 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "145:1931:16:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@nonce_1889": {
									"entryPoint": 154,
									"id": 1889,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@readBytes32Map_2112": {
									"entryPoint": 171,
									"id": 2112,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@readNonce_1910": {
									"entryPoint": 104,
									"id": 1910,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:631:38",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:38",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "84:110:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "130:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "139:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "142:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "126:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "97:32:38"
															},
															"nodeType": "YulIf",
															"src": "94:52:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "155:33:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "178:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "165:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:23:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "155:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "50:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "61:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "73:6:38",
														"type": ""
													}
												],
												"src": "14:180:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:76:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "310:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "322:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "333:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "318:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "318:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "310:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "352:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "345:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "345:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "345:25:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "269:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "280:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "291:4:38",
														"type": ""
													}
												],
												"src": "199:177:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "510:119:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "520:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "532:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "543:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "528:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "528:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "520:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "562:9:38"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "573:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "555:25:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "555:25:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "600:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "611:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "596:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "596:18:38"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "616:6:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "589:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "589:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "589:34:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "471:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "482:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "490:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "501:4:38",
														"type": ""
													}
												],
												"src": "381:248:38"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32__to_t_bytes32_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 38,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80638c3f55631461003b578063affed0e014610060575b600080fd5b61004e610049366004610109565b610068565b60405190815260200160405180910390f35b61004e61009a565b60006100947f8d0bf1fd623d628c741362c1289948e57b3e2905218c676d3e69abee36d6ae2e836100ab565b92915050565b60006100a66000610068565b905090565b60008083836040516020016100ca929190918252602082015260400190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012054949350505050565b60006020828403121561011b57600080fd5b503591905056fea2646970667358221220f557a519dc689ed76459202ddd32cda75e96f1dd5edf1917375caee224f1ff2264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C3F5563 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAFFED0E0 EQ PUSH2 0x60 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x109 JUMP JUMPDEST PUSH2 0x68 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E PUSH2 0x9A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x94 PUSH32 0x8D0BF1FD623D628C741362C1289948E57B3E2905218C676D3E69ABEE36D6AE2E DUP4 PUSH2 0xAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6 PUSH1 0x0 PUSH2 0x68 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xCA SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SLOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 JUMPI 0xA5 NOT 0xDC PUSH9 0x9ED76459202DDD32CD 0xA7 0x5E SWAP7 CALL 0xDD 0x5E 0xDF NOT OR CALLDATACOPY 0x5C 0xAE 0xE2 0x24 CALL SELFDESTRUCT 0x22 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "145:1931:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;938:156;;;;;;:::i;:::-;;:::i;:::-;;;345:25:38;;;333:2;318:18;938:156:16;;;;;;;670:87;;;:::i;938:156::-;1002:7;1032:56;453:66;1080:6;1032:28;:56::i;:::-;1024:65;938:156;-1:-1:-1;;938:156:16:o;670:87::-;718:7;740:12;750:1;740:9;:12::i;:::-;733:19;;670:87;:::o;490:187:19:-;568:11;587;622:4;628:7;611:25;;;;;;;;555::38;;;611:2;596:18;;589:34;543:2;528:18;;381:248;611:25:19;;;;;;;;;;;;;;601:36;;611:25;601:36;;;;661:10;;490:187;-1:-1:-1;;;;490:187:19:o;14:180:38:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:38;;14:180;-1:-1:-1;14:180:38:o"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_provided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"}],\"name\":\"BadNonce\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_newNonce\",\"type\":\"uint256\"}],\"name\":\"NonceChange\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"nonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_space\",\"type\":\"uint256\"}],\"name\":\"readNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"nonce()\":{\"details\":\"The default nonce space is 0x00\",\"returns\":{\"_0\":\"The next nonce\"}},\"readNonce(uint256)\":{\"params\":{\"_space\":\"Nonce space, each space keeps an independent nonce count\"},\"returns\":{\"_0\":\"The next nonce\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"nonce()\":{\"notice\":\"Returns the next nonce of the default nonce space\"},\"readNonce(uint256)\":{\"notice\":\"Returns the next nonce of the given nonce space\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleNonce.sol\":\"ModuleNonce\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleNonce.sol\":{\"keccak256\":\"0x3b5388842f763a5347d632a0e0e8499a54b6f0b0a6eb7f7d3d848319defa042d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b36fa5a88a4e174967f850bf2bb78c787d8016ef7b5eee3e2f883fbfe9b87a7d\",\"dweb:/ipfs/QmTDZiPiQGe1fmTKKzdwzBE1xjkh8apTotW1SQRUCFXf4q\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":{\"keccak256\":\"0x912949cb9dd79c05091f7c10b87e39c1aa4f21c034a1d0e86d23e01297e35a32\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8204708994b24c5e549be50e8d365c18cdfcc23130e14129eca0ef9a37bb6abc\",\"dweb:/ipfs/QmYwkk2GEYbJuideRPpvE5UqnHBkyVwbso4KkzYxRFi6QU\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"nonce()": {
								"notice": "Returns the next nonce of the default nonce space"
							},
							"readNonce(uint256)": {
								"notice": "Returns the next nonce of the given nonce space"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleOnlyDelegatecall.sol": {
				"ModuleOnlyDelegatecall": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "OnlyDelegatecall",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {
								"@_2002": {
									"entryPoint": null,
									"id": 2002,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0604052348015600f57600080fd5b5030608052608051603f602960003960005050603f6000f3fe6080604052600080fdfea2646970667358221220cd5d7c7953e9f62653360defd85ac5914fc196d6fccccfa76107635e1a607ca764736f6c63430008120033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP ADDRESS PUSH1 0x80 MSTORE PUSH1 0x80 MLOAD PUSH1 0x3F PUSH1 0x29 PUSH1 0x0 CODECOPY PUSH1 0x0 POP POP PUSH1 0x3F PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0x5D PUSH29 0x7953E9F62653360DEFD85AC5914FC196D6FCCCCFA76107635E1A607CA7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:355:17:-:0;;;165:45;;;;;;;;;-1:-1:-1;200:4:17;185:20;;65:355;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220cd5d7c7953e9f62653360defd85ac5914fc196d6fccccfa76107635e1a607ca764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD 0x5D PUSH29 0x7953E9F62653360DEFD85AC5914FC196D6FCCCCFA76107635E1A607CA7 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:355:17:-:0;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"OnlyDelegatecall\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleOnlyDelegatecall.sol\":\"ModuleOnlyDelegatecall\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleOnlyDelegatecall.sol\":{\"keccak256\":\"0x32bdb1d343eee2e32fd9d0f1d6dc0e265411d0821bd908881822f0f26f0887f8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1537c4f60a609751013bdc69eb1c6e6218982d91013115bc4e28cb84f816cd91\",\"dweb:/ipfs/QmSjkSTrrB4vuxECcm5cRG7YmraF53QWRgftxS827KcQLW\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleSelfAuth.sol": {
				"ModuleSelfAuth": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220caabd715757d0c669e6583be5fe5d515ba9d8cde71ce64e3022d9c4df0d4213764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xAB 0xD7 ISZERO PUSH22 0x7D0C669E6583BE5FE5D515BA9D8CDE71CE64E3022D9C 0x4D CREATE 0xD4 0x21 CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:216:18:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220caabd715757d0c669e6583be5fe5d515ba9d8cde71ce64e3022d9c4df0d4213764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA 0xAB 0xD7 ISZERO PUSH22 0x7D0C669E6583BE5FE5D515BA9D8CDE71CE64E3022D9C 0x4D CREATE 0xD4 0x21 CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "65:216:18:-:0;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleSelfAuth.sol\":\"ModuleSelfAuth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleStorage.sol": {
				"ModuleStorage": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dd1498f556efd32c9f0f12272ba7f5e32975f772be1a52c8342d2d2ba6ff94b664736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD EQ SWAP9 CREATE2 JUMP 0xEF 0xD3 0x2C SWAP16 0xF SLT 0x27 0x2B 0xA7 CREATE2 0xE3 0x29 PUSH22 0xF772BE1A52C8342D2D2BA6FF94B664736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "65:614:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;65:614:19;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dd1498f556efd32c9f0f12272ba7f5e32975f772be1a52c8342d2d2ba6ff94b664736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDD EQ SWAP9 CREATE2 JUMP 0xEF 0xD3 0x2C SWAP16 0xF SLT 0x27 0x2B 0xA7 CREATE2 0xE3 0x29 PUSH22 0xF772BE1A52C8342D2D2BA6FF94B664736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "65:614:19:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleStorage.sol\":\"ModuleStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/ModuleUpdate.sol": {
				"ModuleUpdate": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								}
							],
							"name": "ImplementationUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "updateImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"params": {
									"_interfaceID": "The interface identifier, as specified in ERC-165"
								},
								"returns": {
									"_0": "`true` if the contract implements `_interfaceID`"
								}
							},
							"updateImplementation(address)": {
								"details": "WARNING Updating the implementation can brick the wallet",
								"params": {
									"_implementation": "New main module implementation"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102d3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063025b22bc14610062575b600080fd5b61004e61004936600461021e565b610077565b604051901515815260200160405180910390f35b610075610070366004610267565b610112565b005b60007ffda4dd44000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016100ca57506001919050565b507fffffffff00000000000000000000000000000000000000000000000000000000167f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b333014610158576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b61016181610164565b50565b73ffffffffffffffffffffffffffffffffffffffff81163b6101ca576040517f0c76093700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240161014f565b6101d2813055565b60405173ffffffffffffffffffffffffffffffffffffffff821681527f310ba5f1d2ed074b51e2eccd052a47ae9ab7c6b800d1fca3db3999d6a592ca039060200160405180910390a150565b60006020828403121561023057600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461026057600080fd5b9392505050565b60006020828403121561027957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461026057600080fdfea2646970667358221220ea980305b334e6dd53f09021ac261c4ea9ab2346a0642943d337daf2461d2e5064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x25B22BC EQ PUSH2 0x62 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E JUMP JUMPDEST PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH2 0x70 CALLDATASIZE PUSH1 0x4 PUSH2 0x267 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0xFDA4DD4400000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0xCA JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x158 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x161 DUP2 PUSH2 0x164 JUMP JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x1CA JUMPI PUSH1 0x40 MLOAD PUSH32 0xC76093700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x14F JUMP JUMPDEST PUSH2 0x1D2 DUP2 ADDRESS SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0x310BA5F1D2ED074B51E2ECCD052A47AE9AB7C6B800D1FCA3DB3999D6A592CA03 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA SWAP9 SUB SDIV 0xB3 CALLVALUE 0xE6 0xDD MSTORE8 CREATE SWAP1 0x21 0xAC 0x26 SHR 0x4E 0xA9 0xAB 0x23 CHAINID LOG0 PUSH5 0x2943D337DA CALLCODE CHAINID SAR 0x2E POP PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "237:1443:20:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_setImplementation_194": {
									"entryPoint": null,
									"id": 194,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateImplementation_2174": {
									"entryPoint": 356,
									"id": 2174,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isContract_3449": {
									"entryPoint": null,
									"id": 3449,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1263": {
									"entryPoint": null,
									"id": 1263,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_2199": {
									"entryPoint": 119,
									"id": 2199,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateImplementation_2149": {
									"entryPoint": 274,
									"id": 2149,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1417:38",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:38",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:263:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:38"
															},
															"nodeType": "YulIf",
															"src": "93:52:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:38"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "300:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "309:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "312:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "302:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "302:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "302:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:38"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "230:66:38",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:78:38"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:89:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:97:38"
															},
															"nodeType": "YulIf",
															"src": "199:117:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "325:15:38",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "335:5:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "325:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:38",
														"type": ""
													}
												],
												"src": "14:332:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "446:92:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "456:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "468:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "479:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "464:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "464:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "456:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "523:6:38"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "516:6:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "516:14:38"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "509:6:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "509:22:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "491:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "491:41:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "491:41:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "415:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "426:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "437:4:38",
														"type": ""
													}
												],
												"src": "351:187:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "613:239:38",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "659:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "668:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "671:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "661:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "661:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "661:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "634:7:38"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "643:9:38"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "630:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "630:23:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "655:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "626:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "626:32:38"
															},
															"nodeType": "YulIf",
															"src": "623:52:38"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:36:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "710:9:38"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "697:12:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:23:38"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "688:5:38",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "806:16:38",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "815:1:38",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "818:1:38",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "808:6:38"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "808:12:38"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "808:12:38"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "742:5:38"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "753:5:38"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "760:42:38",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "749:3:38"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "749:54:38"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "739:2:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "739:65:38"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "732:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "732:73:38"
															},
															"nodeType": "YulIf",
															"src": "729:93:38"
														},
														{
															"nodeType": "YulAssignment",
															"src": "831:15:38",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "841:5:38"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "831:6:38"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "579:9:38",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "590:7:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "602:6:38",
														"type": ""
													}
												],
												"src": "543:309:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "986:198:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "996:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1008:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1019:2:38",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1004:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "996:4:38"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1031:52:38",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1041:42:38",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1035:2:38",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1099:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1114:6:38"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1122:2:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1110:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1110:15:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1092:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:34:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1092:34:38"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1146:9:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1157:2:38",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1142:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1142:18:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "1166:6:38"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1174:2:38"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1162:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1162:15:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1135:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1135:43:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1135:43:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "947:9:38",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "958:6:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "966:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "977:4:38",
														"type": ""
													}
												],
												"src": "857:327:38"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1290:125:38",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1300:26:38",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1312:9:38"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:38",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1308:3:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1308:18:38"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1300:4:38"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1342:9:38"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1357:6:38"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1365:42:38",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:38"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:55:38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1335:6:38"
																},
																"nodeType": "YulFunctionCall",
																"src": "1335:74:38"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1335:74:38"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1259:9:38",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:38",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1281:4:38",
														"type": ""
													}
												],
												"src": "1189:226:38"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n}",
									"id": 38,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c806301ffc9a71461003b578063025b22bc14610062575b600080fd5b61004e61004936600461021e565b610077565b604051901515815260200160405180910390f35b610075610070366004610267565b610112565b005b60007ffda4dd44000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316016100ca57506001919050565b507fffffffff00000000000000000000000000000000000000000000000000000000167f01ffc9a7000000000000000000000000000000000000000000000000000000001490565b333014610158576040517fe12588940000000000000000000000000000000000000000000000000000000081523360048201523060248201526044015b60405180910390fd5b61016181610164565b50565b73ffffffffffffffffffffffffffffffffffffffff81163b6101ca576040517f0c76093700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8216600482015260240161014f565b6101d2813055565b60405173ffffffffffffffffffffffffffffffffffffffff821681527f310ba5f1d2ed074b51e2eccd052a47ae9ab7c6b800d1fca3db3999d6a592ca039060200160405180910390a150565b60006020828403121561023057600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461026057600080fd5b9392505050565b60006020828403121561027957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461026057600080fdfea2646970667358221220ea980305b334e6dd53f09021ac261c4ea9ab2346a0642943d337daf2461d2e5064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x25B22BC EQ PUSH2 0x62 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x49 CALLDATASIZE PUSH1 0x4 PUSH2 0x21E JUMP JUMPDEST PUSH2 0x77 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x75 PUSH2 0x70 CALLDATASIZE PUSH1 0x4 PUSH2 0x267 JUMP JUMPDEST PUSH2 0x112 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0xFDA4DD4400000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND ADD PUSH2 0xCA JUMPI POP PUSH1 0x1 SWAP2 SWAP1 POP JUMP JUMPDEST POP PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 EQ SWAP1 JUMP JUMPDEST CALLER ADDRESS EQ PUSH2 0x158 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE125889400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x161 DUP2 PUSH2 0x164 JUMP JUMPDEST POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND EXTCODESIZE PUSH2 0x1CA JUMPI PUSH1 0x40 MLOAD PUSH32 0xC76093700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x14F JUMP JUMPDEST PUSH2 0x1D2 DUP2 ADDRESS SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE PUSH32 0x310BA5F1D2ED074B51E2ECCD052A47AE9AB7C6B800D1FCA3DB3999D6A592CA03 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x230 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEA SWAP9 SUB SDIV 0xB3 CALLVALUE 0xE6 0xDD MSTORE8 CREATE SWAP1 0x21 0xAC 0x26 SHR 0x4E 0xA9 0xAB 0x23 CHAINID LOG0 PUSH5 0x2943D337DA CALLCODE CHAINID SAR 0x2E POP PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "237:1443:20:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1446:232;;;;;;:::i;:::-;;:::i;:::-;;;516:14:38;;509:22;491:41;;479:2;464:18;1446:232:20;;;;;;;615:139;;;;;;:::i;:::-;;:::i;:::-;;1446:232;1532:4;1548:47;;;;;1544:79;;-1:-1:-1;1612:4:20;;1446:232;-1:-1:-1;1446:232:20:o;1544:79::-;-1:-1:-1;709:47:12;;725:31;709:47;;1446:232:20:o;615:139::-;178:10:18;200:4;178:27;174:94;;222:39;;;;;235:10;222:39;;;1092:34:38;255:4:18;1142:18:38;;;1135:43;1004:18;;222:39:18;;;;;;;;174:94;711:38:20::1;733:15;711:21;:38::i;:::-;615:139:::0;:::o;973:263::-;1066:26;;;537:20:32;1061:80:20;;1103:38;;;;;1365:42:38;1353:55;;1103:38:20;;;1335:74:38;1308:18;;1103:38:20;1189:226:38;1061:80:20;1147:35;1166:15;586:9:5;579:23;505:107;1147:35:20;1193:38;;1365:42:38;1353:55;;1335:74;;1193:38:20;;1323:2:38;1308:18;1193:38:20;;;;;;;973:263;:::o;14:332:38:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:38:o;543:309::-;602:6;655:2;643:9;634:7;630:23;626:32;623:52;;;671:1;668;661:12;623:52;710:9;697:23;760:42;753:5;749:54;742:5;739:65;729:93;;818:1;815;808:12"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"ImplementationUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"updateImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"params\":{\"_interfaceID\":\"The interface identifier, as specified in ERC-165\"},\"returns\":{\"_0\":\"`true` if the contract implements `_interfaceID`\"}},\"updateImplementation(address)\":{\"details\":\"WARNING Updating the implementation can brick the wallet\",\"params\":{\"_implementation\":\"New main module implementation\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"supportsInterface(bytes4)\":{\"notice\":\"Query if a contract implements an interface\"},\"updateImplementation(address)\":{\"notice\":\"Updates the implementation of the base wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/ModuleUpdate.sol\":\"ModuleUpdate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/Implementation.sol\":{\"keccak256\":\"0xdebdf1fc930b1ba8248030b07fa1c2c46564962073e49818c672f8ac5b9239b9\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://687378a78702ab03e0a3ae3160e2ebec734235c220d9522b7dc33cb592734159\",\"dweb:/ipfs/QmTUJjNPHcLbm2KipYof3gyxkpdHS1ivTGMem1qmXnxfg8\"]},\"contracts/modules/commons/ModuleERC165.sol\":{\"keccak256\":\"0xd4ae13a3d20fd7ab52ad16af6a06e7244daea450b796251e911091cac104d05f\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8de37ec20a6b649e9fe3fb42276e4660ff546bca8b467f72beb35396ab5e62d6\",\"dweb:/ipfs/QmXT2SxBZKitkbKLbGbbNLhUbw2ataRpQ2DHafvhG953RE\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleUpdate.sol\":{\"keccak256\":\"0x610c2ab830a0e1e33c6c4d0d079360224f7f83913adfc19a4ea529821d71f400\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://c0f4f0a4a87b3a9ee2305ea54a38d431f9ab2dc2cff95785c27cd763116fdd09\",\"dweb:/ipfs/QmWdFMwNKaPdNzVCk8v5Eo23NbEmc8CzGPAAz6NLRZfhZp\"]},\"contracts/modules/commons/interfaces/IModuleUpdate.sol\":{\"keccak256\":\"0xaa8268ffcc4ba2c2436ace94fe8ad263d5c254d21ac5ef08ce890cbc38fe3d91\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://30c3766118e63207f47b417a7635879246b5ce87d7c7139fe55cb9033ded8b2c\",\"dweb:/ipfs/QmPyzSpYpNeaD5y8ZUR7dXGowKxfqFwipNt7pVScL9sECV\"]},\"contracts/utils/LibAddress.sol\":{\"keccak256\":\"0x24b886c1b175b785bf06476bf1900c9b335fa4b40841f4b948e31abb0a402dc8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6d9dbe6caa08fb93d758dd71f6afbee35b7eb655a368a60449a2a91ee231593\",\"dweb:/ipfs/QmXzyqBMojdg4C1QvoaLxf4QDeBfkvTkUPmdk1xKUt3tqi\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"supportsInterface(bytes4)": {
								"notice": "Query if a contract implements an interface"
							},
							"updateImplementation(address)": {
								"notice": "Updates the implementation of the base wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleAuth.sol": {
				"IModuleAuth": {
					"abi": [
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/interfaces/IModuleAuth.sol\":\"IModuleAuth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleAuthUpgradable.sol": {
				"IModuleAuthUpgradable": {
					"abi": [
						{
							"inputs": [],
							"name": "imageHash",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"imageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"imageHash()\":{\"notice\":\"Returns the current image hash of the wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/interfaces/IModuleAuthUpgradable.sol\":\"IModuleAuthUpgradable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/interfaces/IModuleAuthUpgradable.sol\":{\"keccak256\":\"0x8879331f77598c68e5626b7ea3fac608e8e0b7f5796764f7d107da4728d37083\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://525270ac4821bde3d3d505c763aad53bdece184d56095aae85699d5215fc26f9\",\"dweb:/ipfs/QmZsjfZy9a9J6PBC5W7hiwAxGyT2HM1VCqQCisyVzrsggy\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"imageHash()": {
								"notice": "Returns the current image hash of the wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleCalls.sol": {
				"IModuleCalls": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_requested",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_available",
									"type": "uint256"
								}
							],
							"name": "NotEnoughGas",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "TxExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "_tx",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "_reason",
									"type": "bytes"
								}
							],
							"name": "TxFailed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								},
								{
									"internalType": "uint256",
									"name": "_nonce",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "execute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bool",
											"name": "delegateCall",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "revertOnError",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "gasLimit",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "target",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "value",
											"type": "uint256"
										},
										{
											"internalType": "bytes",
											"name": "data",
											"type": "bytes"
										}
									],
									"internalType": "struct IModuleCalls.Transaction[]",
									"name": "_txs",
									"type": "tuple[]"
								}
							],
							"name": "selfExecute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"params": {
									"_nonce": "Signature nonce (may contain an encoded space)",
									"_signature": "Encoded signature",
									"_txs": "Transactions to process"
								}
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"params": {
									"_txs": "Transactions to execute"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_requested\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_available\",\"type\":\"uint256\"}],\"name\":\"NotEnoughGas\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"TxExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"_tx\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_reason\",\"type\":\"bytes\"}],\"name\":\"TxFailed\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"delegateCall\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"revertOnError\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct IModuleCalls.Transaction[]\",\"name\":\"_txs\",\"type\":\"tuple[]\"}],\"name\":\"selfExecute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"params\":{\"_nonce\":\"Signature nonce (may contain an encoded space)\",\"_signature\":\"Encoded signature\",\"_txs\":\"Transactions to process\"}},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"params\":{\"_txs\":\"Transactions to execute\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)\":{\"notice\":\"Allow wallet owner to execute an action\"},\"selfExecute((bool,bool,uint256,address,uint256,bytes)[])\":{\"notice\":\"Allow wallet to execute an action   without signing the message\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/interfaces/IModuleCalls.sol\":\"IModuleCalls\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/interfaces/IModuleCalls.sol\":{\"keccak256\":\"0xde065c15e38eb009c3dc8f99dfefdd1d6d244dd12a889a8b57edd90d32fb4395\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://23608955786060457f79267795a61eb89b3910b683fc136c749548369425088f\",\"dweb:/ipfs/QmXNorcQBF1Qk21y3aEJRiiHVtwm61zP4ttA1ZzmRjyHnz\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"execute((bool,bool,uint256,address,uint256,bytes)[],uint256,bytes)": {
								"notice": "Allow wallet owner to execute an action"
							},
							"selfExecute((bool,bool,uint256,address,uint256,bytes)[])": {
								"notice": "Allow wallet to execute an action   without signing the message"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleCreator.sol": {
				"IModuleCreator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "CreateFailed",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_code",
									"type": "bytes"
								}
							],
							"name": "createContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "addr",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createContract(bytes)": {
								"params": {
									"_code": "Creation code of the contract"
								},
								"returns": {
									"addr": "The address of the created contract"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"CreateFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_code\",\"type\":\"bytes\"}],\"name\":\"createContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createContract(bytes)\":{\"params\":{\"_code\":\"Creation code of the contract\"},\"returns\":{\"addr\":\"The address of the created contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createContract(bytes)\":{\"notice\":\"Creates a contract forwarding eth value\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/interfaces/IModuleCreator.sol\":\"IModuleCreator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/interfaces/IModuleCreator.sol\":{\"keccak256\":\"0xa206dd3d424b8cd1c4f1400aa344cbc974480fea02f0fb371b872558e5ff4e6d\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ea14c75f43a0008c582dcbae3ba3c900e446e28039dfdbb059d326ec5cc6a2d2\",\"dweb:/ipfs/QmRfF6BmUWiFkCgzVFbLcHsUCNz5q2XkkcwXPX57ViTK4D\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"createContract(bytes)": {
								"notice": "Creates a contract forwarding eth value"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleHooks.sol": {
				"IModuleHooks": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "HookAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "HookDoesNotExist",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "DefinedHook",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								},
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "addHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "readHook",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "_signature",
									"type": "bytes4"
								}
							],
							"name": "removeHook",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addHook(bytes4,address)": {
								"params": {
									"_implementation": "Hook implementation contract",
									"_signature": "Signature function linked to the hook"
								}
							},
							"readHook(bytes4)": {
								"params": {
									"_signature": "Signature function"
								},
								"returns": {
									"_0": "The address of the implementation hook, address(0) if none"
								}
							},
							"removeHook(bytes4)": {
								"params": {
									"_signature": "Signature function linked to the hook"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"HookAlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"HookDoesNotExist\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"DefinedHook\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"},{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"addHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"readHook\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_signature\",\"type\":\"bytes4\"}],\"name\":\"removeHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addHook(bytes4,address)\":{\"params\":{\"_implementation\":\"Hook implementation contract\",\"_signature\":\"Signature function linked to the hook\"}},\"readHook(bytes4)\":{\"params\":{\"_signature\":\"Signature function\"},\"returns\":{\"_0\":\"The address of the implementation hook, address(0) if none\"}},\"removeHook(bytes4)\":{\"params\":{\"_signature\":\"Signature function linked to the hook\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addHook(bytes4,address)\":{\"notice\":\"Adds a new hook to handle a given function selector\"},\"readHook(bytes4)\":{\"notice\":\"Reads the implementation hook of a signature\"},\"removeHook(bytes4)\":{\"notice\":\"Removes a registered hook\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/interfaces/IModuleHooks.sol\":\"IModuleHooks\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/interfaces/IModuleHooks.sol\":{\"keccak256\":\"0x12a20e1fd2840bac0efd8bd43de7bb22053d53c7dc770b9c4c4fcdfdcca35185\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b93da40ad8403203e47f995dc23762706515dc5e41bdb6a6a82747bd378294dc\",\"dweb:/ipfs/QmU1KvoVpWbDLnaK18H9NJ799qTJrFTktXc3vkTpd39X9W\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"addHook(bytes4,address)": {
								"notice": "Adds a new hook to handle a given function selector"
							},
							"readHook(bytes4)": {
								"notice": "Reads the implementation hook of a signature"
							},
							"removeHook(bytes4)": {
								"notice": "Removes a registered hook"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/interfaces/IModuleUpdate.sol": {
				"IModuleUpdate": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_implementation",
									"type": "address"
								}
							],
							"name": "updateImplementation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"updateImplementation(address)": {
								"details": "WARNING Updating the implementation can brick the wallet",
								"params": {
									"_implementation": "New main module implementation"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_implementation\",\"type\":\"address\"}],\"name\":\"updateImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"updateImplementation(address)\":{\"details\":\"WARNING Updating the implementation can brick the wallet\",\"params\":{\"_implementation\":\"New main module implementation\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateImplementation(address)\":{\"notice\":\"Updates the implementation of the base wallet\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/interfaces/IModuleUpdate.sol\":\"IModuleUpdate\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/interfaces/IModuleUpdate.sol\":{\"keccak256\":\"0xaa8268ffcc4ba2c2436ace94fe8ad263d5c254d21ac5ef08ce890cbc38fe3d91\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://30c3766118e63207f47b417a7635879246b5ce87d7c7139fe55cb9033ded8b2c\",\"dweb:/ipfs/QmPyzSpYpNeaD5y8ZUR7dXGowKxfqFwipNt7pVScL9sECV\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"updateImplementation(address)": {
								"notice": "Updates the implementation of the base wallet"
							}
						},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol": {
				"SequenceBaseSig": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_hash",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "_addr",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidNestedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_flag",
									"type": "uint256"
								}
							],
							"name": "InvalidSignatureFlag",
							"type": "error"
						}
					],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"kind": "dev",
						"methods": {},
						"title": "SequenceBaseSig Library",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ba4f2c7f011b2d89853002e8e47d8d5d3a334d4fb9e43295a4364d24658778764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B LOG4 CALLCODE 0xC7 CREATE GT 0xB2 0xD8 SWAP9 MSTORE8 STOP 0x2E DUP15 SELFBALANCE 0xD8 0xD5 0xD3 LOG3 CALLVALUE 0xD4 0xFB SWAP15 NUMBER 0x29 GAS NUMBER PUSH5 0xD246587787 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "419:9124:27:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;419:9124:27;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202ba4f2c7f011b2d89853002e8e47d8d5d3a334d4fb9e43295a4364d24658778764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2B LOG4 CALLCODE 0xC7 CREATE GT 0xB2 0xD8 SWAP9 MSTORE8 STOP 0x2E DUP15 SELFBALANCE 0xD8 0xD5 0xD3 LOG3 CALLVALUE 0xD4 0xFB SWAP15 NUMBER 0x29 GAS NUMBER PUSH5 0xD246587787 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "419:9124:27:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidNestedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_flag\",\"type\":\"uint256\"}],\"name\":\"InvalidSignatureFlag\",\"type\":\"error\"}],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SequenceBaseSig Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A Solidity implementation for handling signatures in the Sequence protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":\"SequenceBaseSig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0x4c48eaaae7764b38fdbb28d823547849d58129c00c66a26b08101235f16f558e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02fd853f6263c94ab03602796528e5f7b8f6a0f753630c363a31b9dae843fb81\",\"dweb:/ipfs/QmQHgatuwoPUe9ZH6a5e7w3vyzMU24CRX1vPgJ28AuksYG\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x7a4e2e0f3db9a918f86009da75b8ccaf6be4aeb8962b8c95d04cf129ccdf7931\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39e86486a99d5643c0280cb12feb006a12d69fe87871d5a6e4d849d28fd559f0\",\"dweb:/ipfs/QmSVpeagGmSJRcDPgjGW8g4DSgEK6FF5zCochFbtUHwHxH\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0x690736cf270957d84d4873755780c69f88733bfb4a7bc895716a498d0056f320\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8cb44ee7280b10c87564cacac6a045b7705ea171c0939d668c591744d68496de\",\"dweb:/ipfs/QmbtCbDvkikabdqCETmgk1XeekN4BHm1sXzgXTWWHy2sz9\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A Solidity implementation for handling signatures in the Sequence protocol.",
						"version": 1
					}
				}
			},
			"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol": {
				"SequenceChainedSig": {
					"abi": [
						{
							"inputs": [],
							"name": "ImageHashIsZero",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes1",
									"name": "_type",
									"type": "bytes1"
								}
							],
							"name": "InvalidSignatureType",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_weight",
									"type": "uint256"
								}
							],
							"name": "LowWeightChainedSignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_self",
									"type": "address"
								}
							],
							"name": "OnlySelfAuth",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_current",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_prev",
									"type": "uint256"
								}
							],
							"name": "WrongChainedCheckpointOrder",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "bytes32",
									"name": "newImageHash",
									"type": "bytes32"
								}
							],
							"name": "ImageHashUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "SET_IMAGE_HASH_TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_digest",
									"type": "bytes32"
								},
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "signatureRecovery",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								},
								{
									"internalType": "bytes32",
									"name": "imageHash",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "subdigest",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "checkpoint",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "_imageHash",
									"type": "bytes32"
								}
							],
							"name": "updateImageHash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"details": "The delegations can be chained together, the first signature is the one that is used to validate      the message, the last signature must match the current on-chain configuration of the wallet.",
						"kind": "dev",
						"methods": {
							"updateImageHash(bytes32)": {
								"params": {
									"_imageHash": "New required image hash of the signature"
								}
							}
						},
						"title": "Sequence chained auth recovery submodule",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ImageHashIsZero\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes1\",\"name\":\"_type\",\"type\":\"bytes1\"}],\"name\":\"InvalidSignatureType\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_weight\",\"type\":\"uint256\"}],\"name\":\"LowWeightChainedSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_self\",\"type\":\"address\"}],\"name\":\"OnlySelfAuth\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_current\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_prev\",\"type\":\"uint256\"}],\"name\":\"WrongChainedCheckpointOrder\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"newImageHash\",\"type\":\"bytes32\"}],\"name\":\"ImageHashUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"SET_IMAGE_HASH_TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_digest\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"signatureRecovery\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"imageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"subdigest\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"checkpoint\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_imageHash\",\"type\":\"bytes32\"}],\"name\":\"updateImageHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"details\":\"The delegations can be chained together, the first signature is the one that is used to validate      the message, the last signature must match the current on-chain configuration of the wallet.\",\"kind\":\"dev\",\"methods\":{\"updateImageHash(bytes32)\":{\"params\":{\"_imageHash\":\"New required image hash of the signature\"}}},\"title\":\"Sequence chained auth recovery submodule\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"updateImageHash(bytes32)\":{\"notice\":\"Updates the signers configuration of the wallet\"}},\"notice\":\"Defines Sequence signatures that work by delegating control to new configurations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":\"SequenceChainedSig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/ModuleSelfAuth.sol\":{\"keccak256\":\"0x91545de5c77cfac86c5686c4e1f338a18ee7adb689ac0234848d7a7fc8a560db\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://dc89d05d8099ba4c3c2cf85737796d439899b5a04e6b87b1ea43f687ae08848a\",\"dweb:/ipfs/QmatU8gRvFkK3Yn1MYAekzi48Waw3cDLtXJpduvju9HFUu\"]},\"contracts/modules/commons/ModuleStorage.sol\":{\"keccak256\":\"0x876c6a40cba975df4f7dfe24e02d153b2ee758975b6d1eda494ecd4b7244aa8e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://b9be3f7930476d528ce10a121701421f0fb251b7d6b7cd579917375e6b283bb4\",\"dweb:/ipfs/QmSbvbYQvTk8KYJZ7QqSKB9Y4M1X3UDhS6k765Zr1BAwK8\"]},\"contracts/modules/commons/interfaces/IModuleAuth.sol\":{\"keccak256\":\"0x24c6b05c32cb344b3b0aebd01fbd8bfc69f8c8e29fca340b262d9612c34d51e2\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5f6c004946f0cbc4b3e52d45248337146bc82569da894ecff3cbdc5a0dca95c3\",\"dweb:/ipfs/QmNSgDMQ7SHL6AJuzTSRbY2kgciHF1SKWfH6MaPH1N3TpR\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0x4c48eaaae7764b38fdbb28d823547849d58129c00c66a26b08101235f16f558e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02fd853f6263c94ab03602796528e5f7b8f6a0f753630c363a31b9dae843fb81\",\"dweb:/ipfs/QmQHgatuwoPUe9ZH6a5e7w3vyzMU24CRX1vPgJ28AuksYG\"]},\"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol\":{\"keccak256\":\"0x755fbf6c106fe1c3c375c41c95c38269873717d8e683678b5fdbf6c8d3426306\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://7c7c92e72dd94f16b5c004d38c2d92eb2b760fd29a939945ed275633b0f93fa5\",\"dweb:/ipfs/QmVdCG7Aw7aVV67z5mUKZa4VqhXHdLqy3SKxPfxaxq54p2\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x7a4e2e0f3db9a918f86009da75b8ccaf6be4aeb8962b8c95d04cf129ccdf7931\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39e86486a99d5643c0280cb12feb006a12d69fe87871d5a6e4d849d28fd559f0\",\"dweb:/ipfs/QmSVpeagGmSJRcDPgjGW8g4DSgEK6FF5zCochFbtUHwHxH\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0x690736cf270957d84d4873755780c69f88733bfb4a7bc895716a498d0056f320\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8cb44ee7280b10c87564cacac6a045b7705ea171c0939d668c591744d68496de\",\"dweb:/ipfs/QmbtCbDvkikabdqCETmgk1XeekN4BHm1sXzgXTWWHy2sz9\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {
							"updateImageHash(bytes32)": {
								"notice": "Updates the signers configuration of the wallet"
							}
						},
						"notice": "Defines Sequence signatures that work by delegating control to new configurations.",
						"version": 1
					}
				}
			},
			"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol": {
				"SequenceDynamicSig": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206a7286e70ed0fca2a8dd6efecd27f088d0b95ef81cae408b80d90f4590120dd464736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x7286E70ED0FCA2A8DD6EFE 0xCD 0x27 CREATE DUP9 0xD0 0xB9 0x5E 0xF8 SHR 0xAE BLOCKHASH DUP12 DUP1 0xD9 0xF GASLIMIT SWAP1 SLT 0xD 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "98:814:29:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;98:814:29;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206a7286e70ed0fca2a8dd6efecd27f088d0b95ef81cae408b80d90f4590120dd464736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH11 0x7286E70ED0FCA2A8DD6EFE 0xCD 0x27 CREATE DUP9 0xD0 0xB9 0x5E 0xF8 SHR 0xAE BLOCKHASH DUP12 DUP1 0xD9 0xF GASLIMIT SWAP1 SLT 0xD 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "98:814:29:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":\"SequenceDynamicSig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol\":{\"keccak256\":\"0x4c48eaaae7764b38fdbb28d823547849d58129c00c66a26b08101235f16f558e\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://02fd853f6263c94ab03602796528e5f7b8f6a0f753630c363a31b9dae843fb81\",\"dweb:/ipfs/QmQHgatuwoPUe9ZH6a5e7w3vyzMU24CRX1vPgJ28AuksYG\"]},\"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol\":{\"keccak256\":\"0x6de353f8c7f44c4294914a4917458ce90ae2f7ecd2d84074fe12d4a4f1485ee5\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://369f979b79a3d3fd0336ab14b3accadb63e4784324afc34f8db11d1988526afd\",\"dweb:/ipfs/QmavmBZ354wTaXQ6ixBd8GrC9HwtRqn4MoNhCVJcx11off\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x7a4e2e0f3db9a918f86009da75b8ccaf6be4aeb8962b8c95d04cf129ccdf7931\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39e86486a99d5643c0280cb12feb006a12d69fe87871d5a6e4d849d28fd559f0\",\"dweb:/ipfs/QmSVpeagGmSJRcDPgjGW8g4DSgEK6FF5zCochFbtUHwHxH\"]},\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0x690736cf270957d84d4873755780c69f88733bfb4a7bc895716a498d0056f320\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8cb44ee7280b10c87564cacac6a045b7705ea171c0939d668c591744d68496de\",\"dweb:/ipfs/QmbtCbDvkikabdqCETmgk1XeekN4BHm1sXzgXTWWHy2sz9\"]},\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol": {
				"SequenceNoChainIdSig": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dcb6ad84adca1faf6759f58ec948b1faad096f2b6d8f3ba540ffd3996b9344c064736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xB6 0xAD DUP5 0xAD 0xCA 0x1F 0xAF PUSH8 0x59F58EC948B1FAAD MULMOD PUSH16 0x2B6D8F3BA540FFD3996B9344C064736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "65:554:30:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;65:554:30;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dcb6ad84adca1faf6759f58ec948b1faad096f2b6d8f3ba540ffd3996b9344c064736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xB6 0xAD DUP5 0xAD 0xCA 0x1F 0xAF PUSH8 0x59F58EC948B1FAAD MULMOD PUSH16 0x2B6D8F3BA540FFD3996B9344C064736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "65:554:30:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":\"SequenceNoChainIdSig\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol\":{\"keccak256\":\"0xa3ac8b8d31f20a8732bb4ebad53b42b334ec29041de0224bd494913ef0b2ad07\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://5a81d4eb3f47b09a8835b2fd53e0baa2e23cb604db3b10dae82543a5bcc52fa4\",\"dweb:/ipfs/QmQ9XSSgbaagWArmZJJ366bdJ7HfxUxn9jdnWwN6SxUSeY\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol": {
				"SubModuleNonce": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122069da7fb79885ecd7ae2429e6b602d78a186fc38fa58e360dbb8a85f4e1c2314f64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xDA7FB79885ECD7AE2429 0xE6 0xB6 MUL 0xD7 DUP11 XOR PUSH16 0xC38FA58E360DBB8A85F4E1C2314F6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "65:881:31:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;65:881:31;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122069da7fb79885ecd7ae2429e6b602d78a186fc38fa58e360dbb8a85f4e1c2314f64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0xDA7FB79885ECD7AE2429 0xE6 0xB6 MUL 0xD7 DUP11 XOR PUSH16 0xC38FA58E360DBB8A85F4E1C2314F6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "65:881:31:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":\"SubModuleNonce\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol\":{\"keccak256\":\"0x912949cb9dd79c05091f7c10b87e39c1aa4f21c034a1d0e86d23e01297e35a32\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8204708994b24c5e549be50e8d365c18cdfcc23130e14129eca0ef9a37bb6abc\",\"dweb:/ipfs/QmYwkk2GEYbJuideRPpvE5UqnHBkyVwbso4KkzYxRFi6QU\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/LibAddress.sol": {
				"LibAddress": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098bd9e2ee7c83a96d44eaaab9e475ab57bc2edd54b5997adf8f8975261f9f4ee64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xBD SWAP15 0x2E 0xE7 0xC8 GASPRICE SWAP7 0xD4 0x4E 0xAA 0xAB SWAP15 SELFBALANCE GAS 0xB5 PUSH28 0xC2EDD54B5997ADF8F8975261F9F4EE64736F6C634300081200330000 ",
							"sourceMap": "65:523:32:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;65:523:32;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122098bd9e2ee7c83a96d44eaaab9e475ab57bc2edd54b5997adf8f8975261f9f4ee64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP9 0xBD SWAP15 0x2E 0xE7 0xC8 GASPRICE SWAP7 0xD4 0x4E 0xAA 0xAB SWAP15 SELFBALANCE GAS 0xB5 PUSH28 0xC2EDD54B5997ADF8F8975261F9F4EE64736F6C634300081200330000 ",
							"sourceMap": "65:523:32:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/LibAddress.sol\":\"LibAddress\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/utils/LibAddress.sol\":{\"keccak256\":\"0x24b886c1b175b785bf06476bf1900c9b335fa4b40841f4b948e31abb0a402dc8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a6d9dbe6caa08fb93d758dd71f6afbee35b7eb655a368a60449a2a91ee231593\",\"dweb:/ipfs/QmXzyqBMojdg4C1QvoaLxf4QDeBfkvTkUPmdk1xKUt3tqi\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/utils/LibBytes.sol": {
				"LibBytes": {
					"abi": [],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"details": "These functions do not check if the input index is within the bounds of the data array.         Reading out of bounds may return dirty values.",
						"kind": "dev",
						"methods": {},
						"title": "Library for reading data from bytes arrays",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201faf846e0f8f744f5b444243172dec09fb6be01e6c98f6bcae1fd2d9562a7e6764736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xAF DUP5 PUSH15 0xF8F744F5B444243172DEC09FB6BE0 0x1E PUSH13 0x98F6BCAE1FD2D9562A7E676473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "405:2157:33:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;405:2157:33;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201faf846e0f8f744f5b444243172dec09fb6be01e6c98f6bcae1fd2d9562a7e6764736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F 0xAF DUP5 PUSH15 0xF8F744F5B444243172DEC09FB6BE0 0x1E PUSH13 0x98F6BCAE1FD2D9562A7E676473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "405:2157:33:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"details\":\"These functions do not check if the input index is within the bounds of the data array.         Reading out of bounds may return dirty values.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for reading data from bytes arrays\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library contains functions for reading data from bytes arrays.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/LibBytes.sol\":\"LibBytes\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x7a4e2e0f3db9a918f86009da75b8ccaf6be4aeb8962b8c95d04cf129ccdf7931\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39e86486a99d5643c0280cb12feb006a12d69fe87871d5a6e4d849d28fd559f0\",\"dweb:/ipfs/QmSVpeagGmSJRcDPgjGW8g4DSgEK6FF5zCochFbtUHwHxH\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library contains functions for reading data from bytes arrays.",
						"version": 1
					}
				}
			},
			"contracts/utils/LibBytesPointer.sol": {
				"LibBytesPointer": {
					"abi": [],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"details": "These functions do not check if the input index is within the bounds of the data array.         Reading out of bounds may return dirty values.",
						"kind": "dev",
						"methods": {},
						"title": "Library for reading data from bytes arrays with a pointer",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d5090f687be916f12ed15f660462e5e27372505a471ddd4241e56c65bfa0d5664736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x5090F687BE916F12ED15F660462E 0x5E 0x27 CALLDATACOPY 0x25 SDIV LOG4 PUSH18 0xDDD4241E56C65BFA0D5664736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "435:5200:34:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;435:5200:34;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d5090f687be916f12ed15f660462e5e27372505a471ddd4241e56c65bfa0d5664736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x5090F687BE916F12ED15F660462E 0x5E 0x27 CALLDATACOPY 0x25 SDIV LOG4 PUSH18 0xDDD4241E56C65BFA0D5664736F6C63430008 SLT STOP CALLER ",
							"sourceMap": "435:5200:34:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"details\":\"These functions do not check if the input index is within the bounds of the data array.         Reading out of bounds may return dirty values.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for reading data from bytes arrays with a pointer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library contains functions for reading data from bytes arrays with a pointer.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/LibBytesPointer.sol\":\"LibBytesPointer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/utils/LibBytesPointer.sol\":{\"keccak256\":\"0x690736cf270957d84d4873755780c69f88733bfb4a7bc895716a498d0056f320\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://8cb44ee7280b10c87564cacac6a045b7705ea171c0939d668c591744d68496de\",\"dweb:/ipfs/QmbtCbDvkikabdqCETmgk1XeekN4BHm1sXzgXTWWHy2sz9\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library contains functions for reading data from bytes arrays with a pointer.",
						"version": 1
					}
				}
			},
			"contracts/utils/LibOptim.sol": {
				"LibOptim": {
					"abi": [],
					"devdoc": {
						"author": "Agustin Aguilar (aa@horizon.io)",
						"kind": "dev",
						"methods": {},
						"title": "Library for optimized EVM operations",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f3b52a0cb2eb660b4e44b6cceeeac3523ec653c2cc825d4e6c36962e51d2f81d64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB5 0x2A 0xC 0xB2 0xEB PUSH7 0xB4E44B6CCEEEA 0xC3 MSTORE RETURNDATACOPY 0xC6 MSTORE8 0xC2 0xCC DUP3 0x5D 0x4E PUSH13 0x36962E51D2F81D64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "244:2343:35:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;244:2343:35;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f3b52a0cb2eb660b4e44b6cceeeac3523ec653c2cc825d4e6c36962e51d2f81d64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xB5 0x2A 0xC 0xB2 0xEB PUSH7 0xB4E44B6CCEEEA 0xC3 MSTORE RETURNDATACOPY 0xC6 MSTORE8 0xC2 0xCC DUP3 0x5D 0x4E PUSH13 0x36962E51D2F81D64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "244:2343:35:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Agustin Aguilar (aa@horizon.io)\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for optimized EVM operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library contains functions for optimizing certain EVM operations.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/LibOptim.sol\":\"LibOptim\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/utils/LibOptim.sol\":{\"keccak256\":\"0x4c558b8c9d0dff2322d5d812e83a3abe25a9e60c8f646507f8a9c7fa2a2453af\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://6f0796c75d117770e220c136b60d96b5cf1d4875ccbbd0afb564ed27aa220335\",\"dweb:/ipfs/QmQxYm6CMCqJiKsB3sguqWu8rggmaQgpuq8BZhAEveqNAM\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library contains functions for optimizing certain EVM operations.",
						"version": 1
					}
				}
			},
			"contracts/utils/LibString.sol": {
				"LibString": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Library for string manipulation operations",
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209a3f2ae38a7b8d3d5f9889e283b454eb49aa128e329c19c4cce3ff8a80211acb64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 EXTCODEHASH 0x2A 0xE3 DUP11 PUSH28 0x8D3D5F9889E283B454EB49AA128E329C19C4CCE3FF8A80211ACB6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "206:2398:36:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;206:2398:36;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209a3f2ae38a7b8d3d5f9889e283b454eb49aa128e329c19c4cce3ff8a80211acb64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 EXTCODEHASH 0x2A 0xE3 DUP11 PUSH28 0x8D3D5F9889E283B454EB49AA128E329C19C4CCE3FF8A80211ACB6473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "206:2398:36:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Library for string manipulation operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This library contains functions for manipulating strings in Solidity.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/LibString.sol\":\"LibString\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/utils/LibString.sol\":{\"keccak256\":\"0x18662322f6ce8c4aea601ec11fc7631c843f9bf59dd2526d27db0fef3b2d81b1\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://77cc33818f1bbda0d42588d0dd4959a2db288cb1a934d7e710a2923da55cf21e\",\"dweb:/ipfs/QmNR1U27FdvRQGZvrx3hMJqCUsF6NYqziemsVvZEjk767t\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "This library contains functions for manipulating strings in Solidity.",
						"version": 1
					}
				}
			},
			"contracts/utils/SignatureValidator.sol": {
				"SignatureValidator": {
					"abi": [
						{
							"inputs": [],
							"name": "EmptySignature",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "bytes32",
									"name": "_s",
									"type": "bytes32"
								}
							],
							"name": "InvalidSValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "InvalidSignatureLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_v",
									"type": "uint256"
								}
							],
							"name": "InvalidVValue",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								}
							],
							"name": "SignerIsAddress0",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "_signature",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "_type",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_recoverMode",
									"type": "bool"
								}
							],
							"name": "UnsupportedSignatureType",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contains logic for signature validation. Signatures from wallet contracts assume ERC-1271 support (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1271.md) Notes: Methods are strongly inspired by contracts in https://github.com/0xProject/0x-monorepo/blob/development/",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122027b9fcba8080b6b0ea8ae00d87e676bf38e677b698b2caa3798ab34b211f41ea64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xB9 0xFC 0xBA DUP1 DUP1 0xB6 0xB0 0xEA DUP11 0xE0 0xD DUP8 0xE6 PUSH23 0xBF38E677B698B2CAA3798AB34B211F41EA64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "430:4934:37:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;430:4934:37;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122027b9fcba8080b6b0ea8ae00d87e676bf38e677b698b2caa3798ab34b211f41ea64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0xB9 0xFC 0xBA DUP1 DUP1 0xB6 0xB0 0xEA DUP11 0xE0 0xD DUP8 0xE6 PUSH23 0xBF38E677B698B2CAA3798AB34B211F41EA64736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "430:4934:37:-:0;;;;;;;;"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EmptySignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_s\",\"type\":\"bytes32\"}],\"name\":\"InvalidSValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"InvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_v\",\"type\":\"uint256\"}],\"name\":\"InvalidVValue\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"}],\"name\":\"SignerIsAddress0\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_type\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_recoverMode\",\"type\":\"bool\"}],\"name\":\"UnsupportedSignatureType\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contains logic for signature validation. Signatures from wallet contracts assume ERC-1271 support (https://github.com/ethereum/EIPs/blob/master/EIPS/eip-1271.md) Notes: Methods are strongly inspired by contracts in https://github.com/0xProject/0x-monorepo/blob/development/\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/SignatureValidator.sol\":\"SignatureValidator\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":500000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC1271Wallet.sol\":{\"keccak256\":\"0x2d7881bca678833feb385fd59e5d8ad6d596160ab51daa7030372654b3dbc38c\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://010f44c05b7285a55de939f9989727d53dfb87fd2d2534a832a70e0e081bb5f1\",\"dweb:/ipfs/QmQcujWErxjktsKyyiTySaFuR7Vaq6fUA9SUzPkde2txVK\"]},\"contracts/utils/LibBytes.sol\":{\"keccak256\":\"0x7a4e2e0f3db9a918f86009da75b8ccaf6be4aeb8962b8c95d04cf129ccdf7931\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://39e86486a99d5643c0280cb12feb006a12d69fe87871d5a6e4d849d28fd559f0\",\"dweb:/ipfs/QmSVpeagGmSJRcDPgjGW8g4DSgEK6FF5zCochFbtUHwHxH\"]},\"contracts/utils/SignatureValidator.sol\":{\"keccak256\":\"0x7ac5dd35cbc776693eecfd8e7e86af139c7b054c43be4f97e6c8929417c17dba\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://4a452d8acad5246538ac352887081d732098dcab869c79a43a5f916e7e76f353\",\"dweb:/ipfs/QmeazDSxfKBSGyCGjmk7G79UbvYMRcbr2eUU9ThyqSvNhv\"]}},\"version\":1}",
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/interfaces/IERC1271Wallet.sol": {
				"id": 0
			},
			"contracts/interfaces/receivers/IERC1155Receiver.sol": {
				"id": 1
			},
			"contracts/interfaces/receivers/IERC223Receiver.sol": {
				"id": 2
			},
			"contracts/interfaces/receivers/IERC721Receiver.sol": {
				"id": 3
			},
			"contracts/modules/MainModuleUpgradableDuo.sol": {
				"id": 4
			},
			"contracts/modules/commons/Implementation.sol": {
				"id": 5
			},
			"contracts/modules/commons/ModuleAuth.sol": {
				"id": 6
			},
			"contracts/modules/commons/ModuleAuthConvenience.sol": {
				"id": 7
			},
			"contracts/modules/commons/ModuleAuthUpgradable.sol": {
				"id": 8
			},
			"contracts/modules/commons/ModuleAuthUpgradableDuo.sol": {
				"id": 9
			},
			"contracts/modules/commons/ModuleCalls.sol": {
				"id": 10
			},
			"contracts/modules/commons/ModuleCreator.sol": {
				"id": 11
			},
			"contracts/modules/commons/ModuleERC165.sol": {
				"id": 12
			},
			"contracts/modules/commons/ModuleExtraAuth.sol": {
				"id": 13
			},
			"contracts/modules/commons/ModuleHooks.sol": {
				"id": 14
			},
			"contracts/modules/commons/ModuleIPFS.sol": {
				"id": 15
			},
			"contracts/modules/commons/ModuleNonce.sol": {
				"id": 16
			},
			"contracts/modules/commons/ModuleOnlyDelegatecall.sol": {
				"id": 17
			},
			"contracts/modules/commons/ModuleSelfAuth.sol": {
				"id": 18
			},
			"contracts/modules/commons/ModuleStorage.sol": {
				"id": 19
			},
			"contracts/modules/commons/ModuleUpdate.sol": {
				"id": 20
			},
			"contracts/modules/commons/interfaces/IModuleAuth.sol": {
				"id": 21
			},
			"contracts/modules/commons/interfaces/IModuleAuthUpgradable.sol": {
				"id": 22
			},
			"contracts/modules/commons/interfaces/IModuleCalls.sol": {
				"id": 23
			},
			"contracts/modules/commons/interfaces/IModuleCreator.sol": {
				"id": 24
			},
			"contracts/modules/commons/interfaces/IModuleHooks.sol": {
				"id": 25
			},
			"contracts/modules/commons/interfaces/IModuleUpdate.sol": {
				"id": 26
			},
			"contracts/modules/commons/submodules/auth/SequenceBaseSig.sol": {
				"id": 27
			},
			"contracts/modules/commons/submodules/auth/SequenceChainedSig.sol": {
				"id": 28
			},
			"contracts/modules/commons/submodules/auth/SequenceDynamicSig.sol": {
				"id": 29
			},
			"contracts/modules/commons/submodules/auth/SequenceNoChainIdSig.sol": {
				"id": 30
			},
			"contracts/modules/commons/submodules/nonce/SubModuleNonce.sol": {
				"id": 31
			},
			"contracts/utils/LibAddress.sol": {
				"id": 32
			},
			"contracts/utils/LibBytes.sol": {
				"id": 33
			},
			"contracts/utils/LibBytesPointer.sol": {
				"id": 34
			},
			"contracts/utils/LibOptim.sol": {
				"id": 35
			},
			"contracts/utils/LibString.sol": {
				"id": 36
			},
			"contracts/utils/SignatureValidator.sol": {
				"id": 37
			}
		}
	}
}